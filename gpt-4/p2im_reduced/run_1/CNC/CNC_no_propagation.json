{
    "functions": {
        "FUN_0800192c": {
            "renaming": {
                "FUN_0800192c": "set_flag_status_0800192c"
            },
            "code": "\nvoid setFlagStatus_0800192c(void)\n\n{\n  if ((PTR_DAT_08001954[0x28] & 8) == 0) {\n    *(undefined4 *)PTR_DAT_08001958 = 0;\n  }\n  else {\n    *(undefined4 *)PTR_DAT_08001958 = 1;\n  }\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800192c",
            "calling": [
                "FUN_08001ddc",
                "FUN_08004e30"
            ],
            "imported": false,
            "current_name": "set_flag_status_0800192c"
        },
        "FUN_08006950": {
            "renaming": {
                "FUN_08006950": "update_control_register_08006950",
                "param_1": "controlBits"
            },
            "code": "\nvoid updateControlRegister_08006950(uint controlBits)\n\n{\n  *(uint *)(DAT_08006994 + 0xc) =\n       *(uint *)(DAT_08006994 + 0xc) & 0xf8ff | (controlBits & 7) << 8 | 0x5fa0000;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006950",
            "calling": [
                "FUN_08006ce0"
            ],
            "imported": false,
            "current_name": "update_control_register_08006950"
        },
        "FUN_08008ba0": {
            "renaming": {
                "FUN_08008ba0": "calculate_result_08008ba0",
                "param_1": "input_1",
                "param_2": "input_2",
                "uVar1": "temp_result",
                "iVar2": "intermediate_value",
                "uVar3": "shift_amount"
            },
            "code": "\nuint calculate_result_08008ba0(uint input_1,uint input_2)\n\n{\n  uint temp_result;\n  int intermediate_value;\n  uint shift_amount;\n  \n  intermediate_value = input_2 * 2 + 0x200000;\n  if (input_2 * 2 < 0xffe00000) {\n    if (-1 < intermediate_value) {\n      return 0;\n    }\n    temp_result = intermediate_value >> 0x15;\n    shift_amount = -temp_result - 0x3e1;\n    if (temp_result < 0xfffffc20 && shift_amount != 0) {\n      temp_result = (input_2 << 0xb | 0x80000000 | input_1 >> 0x15) >> (shift_amount & 0xff);\n      if ((input_2 & 0x80000000) != 0) {\n        temp_result = -temp_result;\n      }\n      return temp_result;\n    }\n  }\n  else if ((input_1 | input_2 << 0xc) != 0) {\n    return 0;\n  }\n  input_2 = input_2 & 0x80000000;\n  if (input_2 == 0) {\n    input_2 = 0x7fffffff;\n  }\n  return input_2;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008ba0",
            "calling": [
                "FUN_0800a5a0",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_0800adf0",
                "FUN_08002c18",
                "FUN_08009d78",
                "FUN_0800a348",
                "FUN_080095b8"
            ],
            "imported": false,
            "current_name": "calculate_result_08008ba0"
        },
        "FUN_08005a5c": {
            "renaming": {
                "FUN_08005a5c": "do_nothing_08005a5c"
            },
            "code": "\nvoid do_nothing_08005a5c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a5c",
            "calling": [
                "FUN_080059f8"
            ],
            "imported": false,
            "current_name": "do_nothing_08005a5c"
        },
        "FUN_08005984": {
            "renaming": {
                "FUN_08005984": "process_data_08005984",
                "param_1": "inputData",
                "uVar1": "result"
            },
            "code": "\nundefined4 processData_08005984(undefined4 inputData)\n\n{\n  undefined4 result;\n  \n  if (*(int *)PTR_DAT_080059b0 == 0) {\n    result = FUN_0800597c(1,inputData,0);\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "called": [
                "FUN_0800597c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005984",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "process_data_08005984"
        },
        "FUN_08007a10": {
            "renaming": {
                "FUN_08007a10": "update_status_flag_08007a10",
                "param_1": "status"
            },
            "code": "\nvoid updateStatusFlag_08007a10(int status)\n\n{\n  if (status == 0x40000000) {\n    *(uint *)(DAT_08007a64 + 0x40) = *(uint *)(DAT_08007a64 + 0x40) | 1;\n  }\n  else if (status == DAT_08007a68) {\n    *(uint *)(DAT_08007a64 + 0x40) = *(uint *)(DAT_08007a64 + 0x40) | 2;\n  }\n  else if (status == DAT_08007a6c) {\n    *(uint *)(DAT_08007a64 + 0x40) = *(uint *)(DAT_08007a64 + 0x40) | 4;\n  }\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007a10",
            "calling": [
                "FUN_08007d08",
                "FUN_08007ad0"
            ],
            "imported": false,
            "current_name": "update_status_flag_08007a10"
        },
        "FUN_0800856c": {
            "renaming": {
                "FUN_0800856c": "convert_and_shift_0800856c",
                "param_1": "input_value",
                "uVar1": "shifted_low",
                "uVar2": "abs_input",
                "uVar3": "shift_amount",
                "iVar4": "leading_zeroes",
                "uVar5": "adjusted_zeroes",
                "uVar6": "sign_bit",
                "in_r12": "complement_shift",
                "bVar7": "negative_shift",
                "bVar8": "zero_shift",
                "bVar9": "shift_overflow"
            },
            "code": "\nulonglong convert_and_shift_0800856c(uint input_value)\n\n{\n  uint shifted_low;\n  uint abs_input;\n  uint shift_amount;\n  int leading_zeroes;\n  uint adjusted_zeroes;\n  uint sign_bit;\n  uint complement_shift;\n  bool negative_shift;\n  bool zero_shift;\n  bool shift_overflow;\n  \n  if (input_value == 0) {\n    return 0;\n  }\n  sign_bit = input_value & 0x80000000;\n  abs_input = input_value;\n  if ((int)sign_bit < 0) {\n    abs_input = -input_value;\n  }\n  shifted_low = 0;\n  leading_zeroes = count_leading_zeroes(abs_input);\n  adjusted_zeroes = leading_zeroes + 0x15;\n  shift_overflow = SBORROW4(adjusted_zeroes,0x20);\n  shift_amount = leading_zeroes - 0xb;\n  negative_shift = (int)shift_amount < 0;\n  zero_shift = shift_amount == 0;\n  if ((int)adjusted_zeroes < 0x20) {\n    shift_overflow = SCARRY4(shift_amount,0xc);\n    leading_zeroes = leading_zeroes + 1;\n    negative_shift = leading_zeroes < 0;\n    zero_shift = leading_zeroes == 0;\n    shift_amount = adjusted_zeroes;\n    if (!zero_shift && negative_shift == shift_overflow) {\n      shifted_low = abs_input << (adjusted_zeroes & 0xff);\n      abs_input = abs_input >> (0xcU - leading_zeroes & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (zero_shift || negative_shift != shift_overflow) {\n    complement_shift = 0x20 - shift_amount;\n  }\n  abs_input = abs_input << (shift_amount & 0xff);\n  if (zero_shift || negative_shift != shift_overflow) {\n    abs_input = abs_input | 0U >> (complement_shift & 0xff);\n  }\n  if (zero_shift || negative_shift != shift_overflow) {\n    shifted_low = 0 << (shift_amount & 0xff);\n  }\nLAB_08008458:\n  if ((int)adjusted_zeroes < 0x433) {\n    return CONCAT44(abs_input + (0x432 - adjusted_zeroes) * 0x100000 | sign_bit,shifted_low);\n  }\n  shift_amount = ~(0x432 - adjusted_zeroes);\n  if (0x1e < (int)shift_amount) {\n    return CONCAT44(input_value,abs_input >> (shift_amount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leading_zeroes = shift_amount - 0x13;\n  if (leading_zeroes == 0 || leading_zeroes < 0 != SCARRY4(shift_amount - 0x1f,0xc)) {\n    shift_amount = shift_amount + 1;\n    return CONCAT44(sign_bit | abs_input >> (shift_amount & 0xff),\n                    shifted_low >> (shift_amount & 0xff) | abs_input << (0x20 - shift_amount & 0xff));\n  }\n  return CONCAT44(input_value,shifted_low >> (0x20 - (0xcU - leading_zeroes) & 0xff) | abs_input << (0xcU - leading_zeroes & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800856c",
            "calling": [
                "FUN_0800a5a0",
                "FUN_08002c18",
                "FUN_08009d78"
            ],
            "imported": false,
            "current_name": "convert_and_shift_0800856c"
        },
        "FUN_08008b00": {
            "renaming": {
                "FUN_08008b00": "initialize_function_08008b00",
                "param_1": "result"
            },
            "code": "\nundefined4 initializeFunction_08008b00(undefined4 result)\n\n{\n  FUN_08008a74();\n  return result;\n}\n\n",
            "called": [
                "FUN_08008a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b00",
            "calling": [
                "FUN_08008af0",
                "FUN_08008b10",
                "FUN_08008b24"
            ],
            "imported": false,
            "current_name": "initialize_function_08008b00"
        },
        "FUN_0800585c": {
            "renaming": {
                "FUN_0800585c": "update_status_and_call_0800585c"
            },
            "code": "\nvoid updateStatusAndCall_0800585c(void)\n\n{\n  if (PTR_DAT_08005878[1] == '\\x02') {\n    PTR_DAT_08005878[1] = 3;\n    FUN_08005790();\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08005790"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800585c",
            "calling": [
                "FUN_08003a74",
                "FUN_080024c4",
                "FUN_08001e98"
            ],
            "imported": false,
            "current_name": "update_status_and_call_0800585c"
        },
        "FUN_0800597c": {
            "renaming": {
                "FUN_0800597c": "trigger_software_interrupt_0800597c"
            },
            "code": "\nvoid trigger_software_interrupt_0800597c(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800597c",
            "calling": [
                "FUN_08005984"
            ],
            "imported": false,
            "current_name": "trigger_software_interrupt_0800597c"
        },
        "FUN_08009798": {
            "renaming": {
                "FUN_08009798": "process_data_08009798",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "shiftedValue",
                "uVar2": "halfShifted",
                "lVar3": "result"
            },
            "code": "\nlonglong processData_08009798(uint input1,uint input2,undefined4 input3,undefined4 input4)\n\n{\n  uint shiftedValue;\n  uint halfShifted;\n  longlong result;\n  \n  halfShifted = (input2 << 1) >> 0x15;\n  shiftedValue = halfShifted - 0x3ff;\n  if ((int)shiftedValue < 0x14) {\n    if ((int)shiftedValue < 0) {\n      return ((ulonglong)input2 & 0x80000000) << 0x20;\n    }\n    result = (ulonglong)(input2 & ~(DAT_08009814 >> (shiftedValue & 0xff))) << 0x20;\n  }\n  else {\n    if ((int)shiftedValue < 0x34) {\n      return CONCAT44(input2,input1 & ~(0xffffffffU >> (halfShifted - 0x413 & 0xff)));\n    }\n    if (shiftedValue != 0x400) {\n      return CONCAT44(input2,input1);\n    }\n    result = FUN_080082d4(input1,input2,input1,input2,input4);\n  }\n  return result;\n}\n\n",
            "called": [
                "FUN_080082d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009798",
            "calling": [
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "process_data_08009798"
        },
        "FUN_08008cd8": {
            "renaming": {
                "FUN_08008cd8": "calculate_result_08008cd8",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "unused_param",
                "param_4": "temp_input",
                "iVar1": "temp_var1",
                "uVar2": "xor_input",
                "uVar3": "modified_input2",
                "uVar4": "modified_input1",
                "uVar5": "intermediate_result",
                "uVar6": "difference",
                "iVar7": "shifted_input1",
                "bVar8": "condition"
            },
            "code": "\nuint calculate_result_08008cd8(uint input_1,uint input_2,undefined4 unused_param,uint temp_input)\n\n{\n  int temp_var1;\n  uint xor_input;\n  uint modified_input2;\n  uint modified_input1;\n  uint intermediate_result;\n  uint difference;\n  int shifted_input1;\n  bool condition;\n  \n  xor_input = input_2 ^ 0x80000000;\n  modified_input1 = input_1 << 1;\n  condition = modified_input1 == 0;\n  if (!condition) {\n    temp_input = input_2 << 1;\n    condition = temp_input == 0;\n  }\n  if (!condition) {\n    condition = modified_input1 == temp_input;\n  }\n  shifted_input1 = (int)modified_input1 >> 0x18;\n  if (!condition) {\n    condition = shifted_input1 == -1;\n  }\n  if (!condition) {\n    condition = (int)temp_input >> 0x18 == -1;\n  }\n  if (condition) {\n    temp_var1 = (int)(input_2 << 1) >> 0x18;\n    if (shifted_input1 == -1 || temp_var1 == -1) {\n      modified_input1 = xor_input;\n      if (shifted_input1 == -1) {\n        modified_input1 = input_1;\n      }\n      if (shifted_input1 != -1 || temp_var1 != -1) {\n        xor_input = modified_input1;\n      }\n      condition = (modified_input1 & 0x7fffff) == 0;\n      if (condition) {\n        condition = (xor_input & 0x7fffff) == 0;\n      }\n      if (condition) {\n        condition = modified_input1 == xor_input;\n      }\n      if (!condition) {\n        modified_input1 = modified_input1 | 0x400000;\n      }\n      return modified_input1;\n    }\n    if (((input_1 ^ xor_input) & 0x7fffffff) != 0) {\n      if (modified_input1 == 0) {\n        input_1 = xor_input;\n      }\n      return input_1;\n    }\n    if (input_1 != xor_input) {\n      return 0;\n    }\n    if ((modified_input1 & 0xff000000) == 0) {\n      xor_input = input_1 << 1;\n      if ((input_1 & 0x80000000) != 0) {\n        xor_input = xor_input | 0x80000000;\n      }\n      return xor_input;\n    }\n    if (modified_input1 < 0xfe000000) {\n      return input_1 + 0x800000;\n    }\n    input_1 = input_1 & 0x80000000;\nLAB_08008e12:\n    return input_1 | 0x7f800000;\n  }\n  modified_input1 = modified_input1 >> 0x18;\n  temp_input = temp_input >> 0x18;\n  difference = temp_input - modified_input1;\n  condition = difference != 0;\n  intermediate_result = modified_input1;\n  if (condition && modified_input1 <= temp_input) {\n    intermediate_result = modified_input1 + difference;\n  }\n  if (condition && modified_input1 <= temp_input) {\n    xor_input = xor_input ^ input_1;\n  }\n  if (condition && modified_input1 <= temp_input) {\n    input_1 = input_1 ^ xor_input;\n  }\n  if (condition && modified_input1 <= temp_input) {\n    xor_input = xor_input ^ input_1;\n  }\n  if (temp_input < modified_input1) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return input_1;\n  }\n  modified_input1 = input_1 & 0xffffff | 0x800000;\n  if ((input_1 & 0x80000000) != 0) {\n    modified_input1 = -modified_input1;\n  }\n  modified_input2 = xor_input & 0xffffff | 0x800000;\n  if ((xor_input & 0x80000000) != 0) {\n    modified_input2 = -modified_input2;\n  }\n  if (intermediate_result == difference) {\n    modified_input2 = modified_input2 ^ 0x800000;\n    if (intermediate_result == 0) {\n      modified_input1 = modified_input1 ^ 0x800000;\n      intermediate_result = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  modified_input1 = modified_input1 + ((int)modified_input2 >> (difference & 0xff));\n  modified_input2 = modified_input2 << (0x20 - difference & 0xff);\n  input_1 = modified_input1 & 0x80000000;\n  if ((int)modified_input1 < 0) {\n    condition = modified_input2 != 0;\n    modified_input2 = -modified_input2;\n    modified_input1 = -modified_input1 - (uint)condition;\n  }\n  if (modified_input1 < 0x800000) {\n    xor_input = modified_input2 & 0x80000000;\n    modified_input2 = modified_input2 << 1;\n    modified_input1 = modified_input1 * 2 + (uint)(xor_input != 0);\n    xor_input = intermediate_result - 2;\n    if (intermediate_result - 1 == 0 || modified_input1 < 0x800000) {\n      shifted_input1 = count_leading_zeroes(modified_input1);\n      difference = shifted_input1 - 8;\n      modified_input1 = modified_input1 << (difference & 0xff);\n      if ((int)xor_input < (int)difference) {\n        modified_input1 = modified_input1 >> (-(xor_input - difference) & 0xff);\n      }\n      else {\n        modified_input1 = modified_input1 + (xor_input - difference) * 0x800000;\n      }\n      return modified_input1 | input_1;\n    }\n  }\n  else {\n    xor_input = intermediate_result - 1;\n    if (0xffffff < modified_input1) {\n      xor_input = modified_input1 & 1;\n      modified_input1 = modified_input1 >> 1;\n      modified_input2 = (uint)(xor_input != 0) << 0x1f | modified_input2 >> 1;\n      xor_input = intermediate_result;\n      if (0xfd < intermediate_result) goto LAB_08008e12;\n    }\n  }\n  modified_input1 = modified_input1 + xor_input * 0x800000 + (uint)(0x7fffffff < modified_input2);\n  if (modified_input2 == 0x80000000) {\n    modified_input1 = modified_input1 & 0xfffffffe;\n  }\n  return modified_input1 | input_1;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008cd8",
            "calling": [
                "FUN_080028bc",
                "FUN_08003004",
                "FUN_080005b4",
                "FUN_08002408",
                "FUN_08002978",
                "FUN_08002908",
                "FUN_08001f00",
                "FUN_08004940"
            ],
            "imported": false,
            "current_name": "calculate_result_08008cd8"
        },
        "FUN_08007930": {
            "renaming": {
                "FUN_08007930": "update_state_08007930",
                "puVar1": "statePtr",
                "uVar2": "newElement",
                "uVar3": "currentFlag",
                "uVar4": "previousFlag",
                "iVar5": "currentIndex"
            },
            "code": "\nvoid updateState_08007930(void)\n\n{\n  undefined *statePtr;\n  undefined4 newElement;\n  uint currentFlag;\n  uint previousFlag;\n  int currentIndex;\n  \n  statePtr = PTR_DAT_080079b8;\n  if (*(int *)PTR_DAT_080079bc != 0) {\n    currentIndex = *(int *)(PTR_DAT_080079b8 + 0x14);\n    newElement = FUN_08007884();\n    *(undefined4 *)(statePtr + currentIndex * 4) = newElement;\n    if (*(int *)(statePtr + 0x14) == 3) {\n      currentIndex = 0;\n    }\n    else {\n      currentIndex = *(int *)(statePtr + 0x14) + 1;\n    }\n    *(int *)(statePtr + 0x14) = currentIndex;\n    currentFlag = FUN_080078f4();\n    if (currentFlag != *(uint *)(statePtr + 0x10)) {\n      previousFlag = *(uint *)(statePtr + 0x10);\n      if ((~*(uint *)(statePtr + 0x10) & currentFlag) != 0) {\n        FUN_080074c8(~*(uint *)(statePtr + 0x10) & currentFlag);\n      }\n      if ((~currentFlag & previousFlag) != 0) {\n        FUN_08007520(~currentFlag & previousFlag);\n      }\n      *(uint *)(statePtr + 0x10) = currentFlag;\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08007884",
                "FUN_08007520",
                "FUN_080074c8",
                "FUN_080078f4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007930",
            "calling": [
                "FUN_08007756"
            ],
            "imported": false,
            "current_name": "update_state_08007930"
        },
        "FUN_080082ba": {
            "renaming": {
                "FUN_080082ba": "do_nothing_080082ba"
            },
            "code": "\nvoid do_nothing_080082ba(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080082ba",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "do_nothing_080082ba"
        },
        "FUN_08000188": {
            "renaming": {
                "FUN_08000188": "initialize_function_pointer_08000188",
                "param_1": "inputPointer"
            },
            "code": "\nundefined * initializeFunctionPointer_08000188(undefined *inputPointer)\n\n{\n  if (*PTR_DAT_080001a0 == '\\0') {\n    if (DAT_080001a4 != 0) {\n      inputPointer = PTR_FUN_080001a8;\n    }\n    *PTR_DAT_080001a0 = 1;\n  }\n  return inputPointer;\n}\n\n",
            "called": [
                "FUN_0800b5b0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000188",
            "calling": [],
            "imported": false,
            "current_name": "initialize_function_pointer_08000188"
        },
        "FUN_080082d0": {
            "renaming": {
                "FUN_080082d0": "calculate_result_080082d0",
                "param_1": "input_a",
                "param_2": "input_b",
                "param_3": "input_c",
                "param_4": "input_d",
                "iVar1": "temp_var1",
                "bVar2": "temp_byte",
                "uVar3": "temp_var3",
                "uVar4": "temp_var4",
                "uVar5": "temp_var5",
                "uVar6": "temp_var6",
                "uVar7": "temp_var7",
                "iVar8": "temp_var8",
                "uVar9": "temp_var9",
                "uVar10": "temp_var10",
                "uVar11": "temp_var11",
                "uVar12": "temp_var12",
                "bVar13": "bool_var13",
                "bVar14": "bool_var14",
                "bVar15": "bool_var15"
            },
            "code": "\nulonglong calculate_result_080082d0(uint input_a,uint input_b,uint input_c,uint input_d)\n\n{\n  int temp_var1;\n  byte temp_byte;\n  uint temp_var3;\n  uint temp_var4;\n  uint temp_var5;\n  uint temp_var6;\n  uint temp_var7;\n  int temp_var8;\n  uint temp_var9;\n  uint temp_var10;\n  uint temp_var11;\n  uint temp_var12;\n  bool bool_var13;\n  bool bool_var14;\n  bool bool_var15;\n  \n  temp_var6 = input_d ^ 0x80000000;\n  temp_var9 = input_b << 1;\n  input_d = input_d << 1;\n  bool_var13 = ((input_b ^ temp_var6) & 0x7fffffff) == 0;\n  bool_var14 = bool_var13 && input_a == input_c;\n  if (!bool_var13 || input_a != input_c) {\n    bool_var14 = (temp_var9 | input_a) == 0;\n  }\n  if (!bool_var14) {\n    bool_var14 = (input_d | input_c) == 0;\n  }\n  temp_var8 = (int)temp_var9 >> 0x15;\n  if (!bool_var14) {\n    bool_var14 = temp_var8 == -1;\n  }\n  temp_var1 = (int)input_d >> 0x15;\n  if (!bool_var14) {\n    bool_var14 = temp_var1 == -1;\n  }\n  if (bool_var14) {\n    if (temp_var8 == -1 || temp_var1 == -1) {\n      temp_var9 = temp_var6;\n      temp_var11 = input_c;\n      if (temp_var8 == -1) {\n        temp_var9 = input_b;\n        temp_var11 = input_a;\n      }\n      if (temp_var8 != -1 || temp_var1 != -1) {\n        input_c = temp_var11;\n        temp_var6 = temp_var9;\n      }\n      bool_var14 = (temp_var11 | temp_var9 << 0xc) == 0;\n      if (bool_var14) {\n        bool_var14 = (input_c | temp_var6 << 0xc) == 0;\n      }\n      if (bool_var14) {\n        bool_var14 = temp_var9 == temp_var6;\n      }\n      if (!bool_var14) {\n        temp_var9 = temp_var9 | 0x80000;\n      }\n      return CONCAT44(temp_var9,temp_var11);\n    }\n    if (((input_b ^ temp_var6) & 0x7fffffff) != 0 || input_a != input_c) {\n      if ((temp_var9 | input_a) == 0) {\n        input_a = input_c;\n        input_b = temp_var6;\n      }\n      return CONCAT44(input_b,input_a);\n    }\n    if (input_b != temp_var6) {\n      return 0;\n    }\n    if (temp_var9 >> 0x15 == 0) {\n      bool_var14 = (input_a & 0x80000000) != 0;\n      temp_var6 = input_b * 2 + (uint)bool_var14;\n      if (CARRY4(input_b,input_b) || CARRY4(input_b * 2,(uint)bool_var14)) {\n        temp_var6 = temp_var6 | 0x80000000;\n      }\n      return CONCAT44(temp_var6,input_a << 1);\n    }\n    if (temp_var9 < 0xffc00000) {\n      return CONCAT44(input_b + 0x100000,input_a);\n    }\n    input_b = input_b & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(input_b | 0x7ff00000) << 0x20;\n  }\n  temp_var9 = temp_var9 >> 0x15;\n  input_d = input_d >> 0x15;\n  temp_var11 = input_d - temp_var9;\n  bool_var14 = temp_var11 != 0;\n  if (input_d < temp_var9) {\n    temp_var11 = -temp_var11;\n  }\n  temp_var10 = input_a;\n  temp_var7 = input_b;\n  if (bool_var14 && temp_var9 <= input_d) {\n    temp_var9 = temp_var9 + temp_var11;\n    temp_var10 = input_c;\n    temp_var7 = temp_var6;\n    input_c = input_a;\n    temp_var6 = input_b;\n  }\n  if (0x36 < temp_var11) {\n    return CONCAT44(temp_var7,temp_var10);\n  }\n  temp_var4 = temp_var7 & 0xfffff | 0x100000;\n  if ((temp_var7 & 0x80000000) != 0) {\n    bool_var14 = temp_var10 != 0;\n    temp_var10 = -temp_var10;\n    temp_var4 = -temp_var4 - (uint)bool_var14;\n  }\n  temp_var7 = temp_var6 & 0xfffff | 0x100000;\n  if ((temp_var6 & 0x80000000) != 0) {\n    bool_var14 = input_c != 0;\n    input_c = -input_c;\n    temp_var7 = -temp_var7 - (uint)bool_var14;\n  }\n  if (temp_var9 == temp_var11) {\n    temp_var7 = temp_var7 ^ 0x100000;\n    if (temp_var9 == 0) {\n      temp_var4 = temp_var4 ^ 0x100000;\n      temp_var9 = 1;\n    }\n    else {\n      temp_var11 = temp_var11 - 1;\n    }\n  }\n  temp_var6 = -temp_var11 + 0x20;\n  if ((int)temp_var11 < 0x21) {\n    temp_var12 = input_c << (temp_var6 & 0xff);\n    input_c = input_c >> (temp_var11 & 0xff);\n    temp_var3 = temp_var10 + input_c;\n    temp_var5 = temp_var7 << (temp_var6 & 0xff);\n    temp_var6 = temp_var3 + temp_var5;\n    temp_var4 = temp_var4 + CARRY4(temp_var10,input_c) + ((int)temp_var7 >> (temp_var11 & 0xff)) +\n            (uint)CARRY4(temp_var3,temp_var5);\n  }\n  else {\n    temp_var12 = temp_var7 << (-temp_var11 + 0x40 & 0xff);\n    if (input_c != 0) {\n      temp_var12 = temp_var12 | 2;\n    }\n    temp_var7 = (int)temp_var7 >> (temp_var11 - 0x20 & 0xff);\n    temp_var6 = temp_var10 + temp_var7;\n    temp_var4 = temp_var4 + ((int)temp_var7 >> 0x1f) + (uint)CARRY4(temp_var10,temp_var7);\n  }\n  input_b = temp_var4 & 0x80000000;\n  temp_var11 = temp_var4;\n  if ((int)temp_var4 < 0) {\n    bool_var14 = temp_var12 == 0;\n    temp_var12 = -temp_var12;\n    temp_var11 = -temp_var6;\n    temp_var6 = -(uint)!bool_var14 - temp_var6;\n    temp_var11 = -(uint)(bool_var14 <= temp_var11) - temp_var4;\n  }\n  if (0xfffff < temp_var11) {\n    temp_var10 = temp_var9 - 1;\n    if (0x1fffff < temp_var11) {\n      temp_var10 = temp_var11 & 1;\n      temp_var11 = temp_var11 >> 1;\n      temp_byte = (byte)temp_var6;\n      temp_var6 = (uint)(temp_var10 != 0) << 0x1f | temp_var6 >> 1;\n      temp_var12 = (uint)(temp_byte & 1) << 0x1f | temp_var12 >> 1;\n      temp_var10 = temp_var9;\n      if (0xffbfffff < temp_var9 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    bool_var14 = 0x7fffffff < temp_var12;\n    if (temp_var12 == 0x80000000) {\n      bool_var14 = (temp_var6 & 1) != 0;\n    }\n    return CONCAT44(temp_var11 + temp_var10 * 0x100000 + (uint)CARRY4(temp_var6,(uint)bool_var14) | input_b,\n                    temp_var6 + bool_var14);\n  }\n  bool_var13 = (temp_var12 & 0x80000000) != 0;\n  temp_var12 = temp_var12 << 1;\n  temp_var10 = temp_var6 * 2;\n  bool_var14 = CARRY4(temp_var6,temp_var6);\n  temp_var6 = temp_var6 * 2 + (uint)bool_var13;\n  temp_var11 = temp_var11 * 2 + (uint)(bool_var14 || CARRY4(temp_var10,(uint)bool_var13));\n  temp_var10 = temp_var9 - 2;\n  if (temp_var9 - 1 != 0 && 0xfffff < temp_var11) goto LAB_080083e0;\n  temp_var7 = temp_var6;\n  temp_var9 = temp_var11;\n  if (temp_var11 == 0) {\n    temp_var7 = 0;\n    temp_var9 = temp_var6;\n  }\n  temp_var8 = count_leading_zeroes(temp_var9);\n  if (temp_var11 == 0) {\n    temp_var8 = temp_var8 + 0x20;\n  }\n  temp_var11 = temp_var8 - 0xb;\n  bool_var15 = SBORROW4(temp_var11,0x20);\n  temp_var6 = temp_var8 - 0x2b;\n  bool_var14 = (int)temp_var6 < 0;\n  bool_var13 = temp_var6 == 0;\n  if ((int)temp_var11 < 0x20) {\n    bool_var15 = SCARRY4(temp_var6,0xc);\n    temp_var8 = temp_var8 + -0x1f;\n    bool_var14 = temp_var8 < 0;\n    bool_var13 = temp_var8 == 0;\n    temp_var6 = temp_var11;\n    if (!bool_var13 && bool_var14 == bool_var15) {\n      temp_var7 = temp_var9 << (temp_var11 & 0xff);\n      temp_var9 = temp_var9 >> (0xcU - temp_var8 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bool_var13 || bool_var14 != bool_var15) {\n    temp_var12 = 0x20 - temp_var6;\n  }\n  temp_var9 = temp_var9 << (temp_var6 & 0xff);\n  if (bool_var13 || bool_var14 != bool_var15) {\n    temp_var9 = temp_var9 | temp_var7 >> (temp_var12 & 0xff);\n  }\n  if (bool_var13 || bool_var14 != bool_var15) {\n    temp_var7 = temp_var7 << (temp_var6 & 0xff);\n  }\nLAB_08008458:\n  if ((int)temp_var11 <= (int)temp_var10) {\n    return CONCAT44(temp_var9 + (temp_var10 - temp_var11) * 0x100000 | input_b,temp_var7);\n  }\n  temp_var6 = ~(temp_var10 - temp_var11);\n  if ((int)temp_var6 < 0x1f) {\n    temp_var8 = temp_var6 - 0x13;\n    if (temp_var8 != 0 && temp_var8 < 0 == SCARRY4(temp_var6 - 0x1f,0xc)) {\n      return CONCAT44(temp_var4,temp_var7 >> (0x20 - (0xcU - temp_var8) & 0xff) | temp_var9 << (0xcU - temp_var8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp_var6 = temp_var6 + 1;\n    return CONCAT44(input_b | temp_var9 >> (temp_var6 & 0xff),\n                    temp_var7 >> (temp_var6 & 0xff) | temp_var9 << (0x20 - temp_var6 & 0xff));\n  }\n  return CONCAT44(temp_var4,temp_var9 >> (temp_var6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080082d0",
            "calling": [
                "FUN_0800a5a0",
                "FUN_080096e8",
                "FUN_08009990",
                "FUN_0800af78",
                "FUN_08001f00",
                "FUN_08009410",
                "FUN_08003004",
                "FUN_0800adf0",
                "FUN_0800a1bc",
                "FUN_08009d78",
                "FUN_08009b24",
                "FUN_0800a348",
                "FUN_08004940"
            ],
            "imported": false,
            "current_name": "calculate_result_080082d0"
        },
        "FUN_08009318": {
            "renaming": {
                "FUN_08009318": "calculate_result_08009318",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "intVar1",
                "uVar2": "uintVar2",
                "uVar3": "uintVar3",
                "bVar4": "boolVar4",
                "uVar5": "uintVar5",
                "lVar6": "longlongVar6"
            },
            "code": "\nlonglong calculate_result_08009318(uint input_1,uint input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  int intVar1;\n  uint uintVar2;\n  uint uintVar3;\n  bool boolVar4;\n  undefined8 uintVar5;\n  longlong longlongVar6;\n  \n  uintVar3 = (input_2 << 1) >> 0x15;\n  uintVar2 = uintVar3 - 0x3ff;\n  if ((int)uintVar2 < 0x14) {\n    if ((int)uintVar2 < 0) {\n      uintVar5 = FUN_080082d4(input_1,input_2,DAT_08009400,DAT_08009404,input_4);\n      intVar1 = FUN_08008b60((int)uintVar5,(int)((ulonglong)uintVar5 >> 0x20),0,0);\n      longlongVar6 = CONCAT44(input_2,input_1);\n      if (intVar1 != 0) {\n        if ((int)input_2 < 0) {\n          longlongVar6 = -0x8000000000000000;\n        }\n        else {\n          input_1 = input_1 | input_2;\n          longlongVar6 = CONCAT44(input_1,input_1);\n          if (input_1 != 0) {\n            longlongVar6 = (ulonglong)DAT_0800940c << 0x20;\n          }\n        }\n      }\n    }\n    else {\n      uintVar3 = DAT_08009408 >> (uintVar2 & 0xff);\n      longlongVar6 = CONCAT44(input_2,input_1);\n      if ((input_2 & uintVar3 | input_1) != 0) {\n        uintVar5 = FUN_080082d4(input_1,input_2,DAT_08009400,DAT_08009404,input_4);\n        intVar1 = FUN_08008b60((int)uintVar5,(int)((ulonglong)uintVar5 >> 0x20),0,0);\n        longlongVar6 = CONCAT44(input_2,input_1);\n        if (intVar1 != 0) {\n          if (0 < (int)input_2) {\n            input_2 = input_2 + (0x100000 >> (uintVar2 & 0xff));\n          }\n          longlongVar6 = (ulonglong)(input_2 & ~uintVar3) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)uintVar2 < 0x34) {\n    uintVar3 = 0xffffffff >> (uintVar3 - 0x413 & 0xff);\n    longlongVar6 = CONCAT44(input_2,input_1);\n    if ((uintVar3 & input_1) != 0) {\n      uintVar5 = FUN_080082d4(input_1,input_2,DAT_08009400,DAT_08009404,input_4);\n      intVar1 = FUN_08008b60((int)uintVar5,(int)((ulonglong)uintVar5 >> 0x20),0,0);\n      longlongVar6 = CONCAT44(input_2,input_1);\n      if (intVar1 != 0) {\n        if (0 < (int)input_2) {\n          if (uintVar2 == 0x14) {\n            input_2 = input_2 + 1;\n          }\n          else {\n            uintVar2 = 1 << (0x34 - uintVar2 & 0xff);\n            boolVar4 = CARRY4(uintVar2,input_1);\n            input_1 = uintVar2 + input_1;\n            if (boolVar4 != false) {\n              input_2 = input_2 + 1;\n            }\n          }\n        }\n        longlongVar6 = CONCAT44(input_2,input_1 & ~uintVar3);\n      }\n    }\n  }\n  else {\n    longlongVar6 = CONCAT44(input_2,input_1);\n    if (uintVar2 == 0x400) {\n      longlongVar6 = FUN_080082d4();\n    }\n  }\n  return longlongVar6;\n}\n\n",
            "called": [
                "FUN_080082d4",
                "FUN_08008b60"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009318",
            "calling": [
                "FUN_08003004",
                "FUN_08002c18",
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "calculate_result_08009318"
        },
        "FUN_080018cc": {
            "renaming": {
                "FUN_080018cc": "update_register_080018cc",
                "param_1": "inputValue"
            },
            "code": "\nvoid updateRegister_080018cc(uint inputValue)\n\n{\n  *(uint *)(DAT_080018f8 + 0x14) = inputValue | *(uint *)(DAT_080018f8 + 0x14) & 0xfffffaaf;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080018cc",
            "calling": [
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "update_register_080018cc"
        },
        "FUN_080079e0": {
            "renaming": {
                "FUN_080079e0": "set_bit_in_array_080079e0",
                "param_1": "bitIndex"
            },
            "code": "\nvoid setBitInArray_080079e0(byte bitIndex)\n\n{\n  *(int *)(DAT_08007a0c + ((uint)(int)(char)bitIndex >> 5) * 4) = 1 << (bitIndex & 0x1f);\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080079e0",
            "calling": [
                "FUN_08007a70"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_080079e0"
        },
        "FUN_08006a58": {
            "renaming": {
                "FUN_08006a58": "set_bit_in_array_08006a58",
                "param_1": "inputByte",
                "uint": "unsignedInt",
                "int": "integer",
                "char": "character"
            },
            "code": "\nvoid setBitInArray_08006a58(byte inputByte)\n\n{\n  *(integer *)(DAT_08006a88 + (((unsignedInt)(integer)(character)inputByte >> 5) + 0x40) * 4) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006a58",
            "calling": [
                "FUN_08006dc4"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_08006a58"
        },
        "FUN_08005a84": {
            "renaming": {
                "FUN_08005a84": "get_data_value_08005a84"
            },
            "code": "\nundefined4 get_data_value_08005a84(void)\n\n{\n  return *(undefined4 *)PTR_DAT_08005a94;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a84",
            "calling": [
                "FUN_08005cec",
                "FUN_08007756",
                "FUN_0800618c",
                "FUN_08005a98",
                "FUN_08000268"
            ],
            "imported": false,
            "current_name": "get_data_value_08005a84"
        },
        "FUN_08008b10": {
            "renaming": {
                "FUN_08008b10": "check_status_08008b10",
                "in_ZR": "statusFlag"
            },
            "code": "\nbool checkStatus_08008b10(void)\n\n{\n  char statusFlag;\n  \n  FUN_08008b00();\n  return statusFlag != '\\0';\n}\n\n",
            "called": [
                "FUN_08008b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b10",
            "calling": [
                "FUN_0800a5a0",
                "FUN_08009d78"
            ],
            "imported": false,
            "current_name": "check_status_08008b10"
        },
        "FUN_08004e30": {
            "renaming": {
                "FUN_08004e30": "process_request_08004e30",
                "param_1": "requestType",
                "param_2": "requestData",
                "iVar4": "tempResult",
                "uVar1": "tempByte",
                "uVar2": "tempWord",
                "uVar3": "tempDword",
                "uVar5": "tempLong"
            },
            "code": "\nundefined4 processRequest_08004e30(int requestType,uint requestData)\n\n{\n  undefined tempByte;\n  undefined2 tempWord;\n  undefined4 tempDword;\n  int tempResult;\n  undefined8 tempLong;\n  \n  switch(requestType) {\n  case 0:\n  case 1:\n  case 2:\n    tempResult = FUN_0800923c(requestData,0);\n    if (tempResult != 0) {\n      return 8;\n    }\n    *(uint *)(PTR_DAT_080051a8 + requestType * 4) = requestData;\n    break;\n  case 3:\n    tempResult = FUN_08009228(requestData,DAT_080051ac);\n    if (tempResult != 0) {\n      return 9;\n    }\n    tempLong = FUN_08008590(requestData);\n    tempLong = FUN_08009654((int)tempLong,(int)((ulonglong)tempLong >> 0x20));\n    tempByte = FUN_08008bf0((int)tempLong,(int)((ulonglong)tempLong >> 0x20));\n    PTR_DAT_080051a8[0xd] = tempByte;\n    break;\n  case 4:\n    *(uint *)(PTR_DAT_080051a8 + 0x10) = requestData;\n    break;\n  case 5:\n    *(uint *)(PTR_DAT_080051a8 + 0x14) = requestData;\n    break;\n  case 6:\n    tempLong = FUN_08008590(requestData);\n    tempLong = FUN_08009798((int)tempLong,(int)((ulonglong)tempLong >> 0x20));\n    tempWord = FUN_08008bf0((int)tempLong,(int)((ulonglong)tempLong >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x18) = tempWord;\n    break;\n  case 7:\n    tempLong = FUN_08008590(requestData);\n    tempLong = FUN_08009654((int)tempLong,(int)((ulonglong)tempLong >> 0x20));\n    tempByte = FUN_08008bf0((int)tempLong,(int)((ulonglong)tempLong >> 0x20));\n    PTR_DAT_080051a8[0x3c] = tempByte;\n    break;\n  case 8:\n    tempDword = FUN_08008eec(requestData,DAT_080051b0);\n    tempDword = FUN_08008eec(tempDword,DAT_080051b0);\n    *(undefined4 *)(PTR_DAT_080051a8 + 0x20) = tempDword;\n    break;\n  case 9:\n    *(uint *)(PTR_DAT_080051a8 + 0x24) = requestData & 0x7fffffff;\n    break;\n  case 10:\n    *(uint *)(PTR_DAT_080051a8 + 0x1c) = requestData;\n    break;\n  case 0xb:\n    tempLong = FUN_08008590(requestData);\n    tempLong = FUN_08009654((int)tempLong,(int)((ulonglong)tempLong >> 0x20));\n    tempByte = FUN_08008bf0((int)tempLong,(int)((ulonglong)tempLong >> 0x20));\n    PTR_DAT_080051a8[0x3e] = tempByte;\n    break;\n  case 0xc:\n    tempLong = FUN_08008590(requestData);\n    tempLong = FUN_08009654((int)tempLong,(int)((ulonglong)tempLong >> 0x20));\n    tempByte = FUN_08008bf0((int)tempLong,(int)((ulonglong)tempLong >> 0x20));\n    PTR_DAT_080051a8[0x3d] = tempByte;\n    break;\n  case 0xd:\n    tempResult = FUN_08009214(requestData,0);\n    if (tempResult == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 1;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xfe;\n    }\n    break;\n  case 0xe:\n    tempResult = FUN_08009214(requestData,0);\n    if (tempResult == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 2;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xfd;\n    }\n    break;\n  case 0xf:\n    tempResult = FUN_08009214(requestData,0);\n    if (tempResult == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 4;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xfb;\n    }\n    break;\n  case 0x10:\n    tempResult = FUN_08009214(requestData,0);\n    if (tempResult == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 8;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xf7;\n    }\n    FUN_0800192c();\n    break;\n  case 0x11:\n    tempResult = FUN_08009214(requestData,0);\n    if (tempResult == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 0x10;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xef;\n    }\n    break;\n  case 0x12:\n    tempLong = FUN_08008590(requestData);\n    tempLong = FUN_08009798((int)tempLong,(int)((ulonglong)tempLong >> 0x20));\n    tempWord = FUN_08008bf0((int)tempLong,(int)((ulonglong)tempLong >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x2a) = tempWord;\n    break;\n  case 0x13:\n    *(uint *)(PTR_DAT_080051a8 + 0x2c) = requestData;\n    break;\n  case 0x14:\n    *(uint *)(PTR_DAT_080051a8 + 0x30) = requestData;\n    break;\n  case 0x15:\n    tempLong = FUN_08008590(requestData);\n    tempLong = FUN_08009654((int)tempLong,(int)((ulonglong)tempLong >> 0x20));\n    tempWord = FUN_08008bf0((int)tempLong,(int)((ulonglong)tempLong >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x34) = tempWord;\n    break;\n  case 0x16:\n    *(uint *)(PTR_DAT_080051a8 + 0x38) = requestData;\n    break;\n  case 0x17:\n    tempLong = FUN_08008590(requestData);\n    tempLong = FUN_08009798((int)tempLong,(int)((ulonglong)tempLong >> 0x20));\n    tempWord = FUN_08008bf0((int)tempLong,(int)((ulonglong)tempLong >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x1a) = tempWord;\n    break;\n  default:\n    return 6;\n  }\n  FUN_08004c2a();\n  return 0;\n}\n\n",
            "called": [
                "FUN_08009214",
                "FUN_0800192c",
                "FUN_08009654",
                "FUN_08008bf0",
                "FUN_08008eec",
                "FUN_0800923c",
                "FUN_08004c2a",
                "FUN_08009798",
                "FUN_08008590",
                "FUN_08009228"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e30",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "process_request_08004e30"
        },
        "FUN_08008c30": {
            "renaming": {
                "FUN_08008c30": "calculate_result_08008c30",
                "param_1": "inputValue1",
                "param_2": "inputValue2",
                "uVar1": "result",
                "uVar2": "tempValue1",
                "uVar3": "tempValue2",
                "in_r12": "tempInR12",
                "bVar4": "condition1",
                "bVar5": "condition2"
            },
            "code": "\nuint calculateResult_08008c30(uint inputValue1,uint inputValue2)\n\n{\n  uint result;\n  uint tempValue1;\n  uint tempValue2;\n  uint tempInR12;\n  bool condition1;\n  bool condition2;\n  \n  tempValue1 = inputValue2 * 2;\n  condition2 = tempValue1 < 0x70000000;\n  tempValue2 = tempValue1 + 0x90000000;\n  result = tempValue2;\n  if (!condition2) {\n    tempInR12 = tempValue1 + 0x8fe00000;\n    result = tempInR12;\n  }\n  condition1 = result == 0;\n  if (!condition2 && tempValue2 >= 0x200000) {\n    condition1 = tempInR12 == 0x1fc00000;\n  }\n  if (((condition2 || tempValue2 < 0x200000) || 0x1fc00000 < tempInR12) || condition1) {\n    if ((inputValue2 & 0x40000000) != 0) {\n      if (((int)tempValue1 >> 0x15 == -1) && ((inputValue1 | inputValue2 << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return inputValue2 & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(tempValue1 + 0x92e00000) < 0 != SCARRY4(tempValue2,0x2e00000)) {\n      return inputValue2 & 0x80000000;\n    }\n    tempValue1 = 0x18 - (tempValue1 + 0x92e00000 >> 0x15);\n    result = inputValue1 >> (tempValue1 & 0xff);\n    if (inputValue1 << (0x20 - tempValue1 & 0xff) != 0) {\n      result = result | 1;\n    }\n    tempValue2 = inputValue2 & 0x1fffff | 0x100000;\n    inputValue1 = result | tempValue2 << (0x20 - tempValue1 & 0xff);\n    tempValue2 = (tempValue2 >> (tempValue1 & 0xff)) << 1;\n  }\n  result = (inputValue2 & 0x80000000 | inputValue1 >> 0x1d) + tempValue2 * 4 + (uint)(0x7fffffff < inputValue1 * 8);\n  if (inputValue1 * 8 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008c30",
            "calling": [
                "FUN_080044e8",
                "FUN_08003004",
                "FUN_080005b4",
                "FUN_08002638",
                "FUN_0800056c",
                "FUN_08002978",
                "FUN_08001f00",
                "FUN_08004940",
                "FUN_08001994",
                "FUN_080046d0"
            ],
            "imported": false,
            "current_name": "calculate_result_08008c30"
        },
        "FUN_080082d4": {
            "renaming": {
                "FUN_080082d4": "floating_point_operation_080082d4",
                "param_1": "num1_low",
                "param_2": "num1_high",
                "param_3": "num2_low",
                "param_4": "num2_high",
                "iVar1": "shiftedNum2High",
                "bVar2": "carryBit",
                "uVar3": "tempSum1",
                "uVar4": "tempSum2",
                "uVar5": "num2_high_modified",
                "iVar6": "shiftedNum1High",
                "uVar7": "shiftedNum1High_unsigned",
                "uVar8": "num1_low_modified",
                "uVar9": "num2_high_modified_unsigned",
                "uVar10": "exponentDifference",
                "uVar11": "tempShift",
                "uVar12": "tempSum3",
                "bVar13": "isEqualHigh",
                "bVar14": "condition",
                "bVar15": "carryCondition"
            },
            "code": "\nulonglong floatingPointOperation_080082d4(uint num1_low,uint num1_high,uint num2_low,uint num2_high)\n\n{\n  int shiftedNum2High;\n  byte carryBit;\n  uint tempSum1;\n  uint tempSum2;\n  uint num2_high_modified;\n  int shiftedNum1High;\n  uint shiftedNum1High_unsigned;\n  uint num1_low_modified;\n  uint num2_high_modified_unsigned;\n  uint exponentDifference;\n  uint tempShift;\n  uint tempSum3;\n  bool isEqualHigh;\n  bool condition;\n  bool carryCondition;\n  \n  shiftedNum1High_unsigned = num1_high << 1;\n  num2_high_modified_unsigned = num2_high << 1;\n  isEqualHigh = ((num1_high ^ num2_high) & 0x7fffffff) == 0;\n  condition = isEqualHigh && num1_low == num2_low;\n  if (!isEqualHigh || num1_low != num2_low) {\n    condition = (shiftedNum1High_unsigned | num1_low) == 0;\n  }\n  if (!condition) {\n    condition = (num2_high_modified_unsigned | num2_low) == 0;\n  }\n  shiftedNum1High = (int)shiftedNum1High_unsigned >> 0x15;\n  if (!condition) {\n    condition = shiftedNum1High == -1;\n  }\n  shiftedNum2High = (int)num2_high_modified_unsigned >> 0x15;\n  if (!condition) {\n    condition = shiftedNum2High == -1;\n  }\n  if (condition) {\n    if (shiftedNum1High == -1 || shiftedNum2High == -1) {\n      num2_high_modified_unsigned = num2_high;\n      shiftedNum1High_unsigned = num2_low;\n      if (shiftedNum1High == -1) {\n        num2_high_modified_unsigned = num1_high;\n        shiftedNum1High_unsigned = num1_low;\n      }\n      if (shiftedNum1High != -1 || shiftedNum2High != -1) {\n        num2_low = shiftedNum1High_unsigned;\n        num2_high = num2_high_modified_unsigned;\n      }\n      condition = (shiftedNum1High_unsigned | num2_high_modified_unsigned << 0xc) == 0;\n      if (condition) {\n        condition = (num2_low | num2_high << 0xc) == 0;\n      }\n      if (condition) {\n        condition = num2_high_modified_unsigned == num2_high;\n      }\n      if (!condition) {\n        num2_high_modified_unsigned = num2_high_modified_unsigned | 0x80000;\n      }\n      return CONCAT44(num2_high_modified_unsigned,shiftedNum1High_unsigned);\n    }\n    if (((num1_high ^ num2_high) & 0x7fffffff) != 0 || num1_low != num2_low) {\n      if ((shiftedNum1High_unsigned | num1_low) == 0) {\n        num1_low = num2_low;\n        num1_high = num2_high;\n      }\n      return CONCAT44(num1_high,num1_low);\n    }\n    if (num1_high != num2_high) {\n      return 0;\n    }\n    if (shiftedNum1High_unsigned >> 0x15 == 0) {\n      condition = (num1_low & 0x80000000) != 0;\n      num2_high_modified_unsigned = num1_high * 2 + (uint)condition;\n      if (CARRY4(num1_high,num1_high) || CARRY4(num1_high * 2,(uint)condition)) {\n        num2_high_modified_unsigned = num2_high_modified_unsigned | 0x80000000;\n      }\n      return CONCAT44(num2_high_modified_unsigned,num1_low << 1);\n    }\n    if (shiftedNum1High_unsigned < 0xffc00000) {\n      return CONCAT44(num1_high + 0x100000,num1_low);\n    }\n    num1_high = num1_high & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(num1_high | 0x7ff00000) << 0x20;\n  }\n  shiftedNum1High_unsigned = shiftedNum1High_unsigned >> 0x15;\n  num2_high_modified_unsigned = num2_high_modified_unsigned >> 0x15;\n  exponentDifference = num2_high_modified_unsigned - shiftedNum1High_unsigned;\n  condition = exponentDifference != 0;\n  if (num2_high_modified_unsigned < shiftedNum1High_unsigned) {\n    exponentDifference = -exponentDifference;\n  }\n  num1_low_modified = num1_low;\n  num2_high_modified = num1_high;\n  if (condition && shiftedNum1High_unsigned <= num2_high_modified_unsigned) {\n    shiftedNum1High_unsigned = shiftedNum1High_unsigned + exponentDifference;\n    num1_low_modified = num2_low;\n    num2_high_modified = num2_high;\n    num2_low = num1_low;\n    num2_high = num1_high;\n  }\n  if (0x36 < exponentDifference) {\n    return CONCAT44(num2_high_modified,num1_low_modified);\n  }\n  num2_high_modified_unsigned = num2_high_modified & 0xfffff | 0x100000;\n  if ((num2_high_modified & 0x80000000) != 0) {\n    condition = num1_low_modified != 0;\n    num1_low_modified = -num1_low_modified;\n    num2_high_modified_unsigned = -num2_high_modified_unsigned - (uint)condition;\n  }\n  num2_high_modified = num2_high & 0xfffff | 0x100000;\n  if ((num2_high & 0x80000000) != 0) {\n    condition = num2_low != 0;\n    num2_low = -num2_low;\n    num2_high_modified = -num2_high_modified - (uint)condition;\n  }\n  if (shiftedNum1High_unsigned == exponentDifference) {\n    num2_high_modified = num2_high_modified ^ 0x100000;\n    if (shiftedNum1High_unsigned == 0) {\n      num2_high_modified_unsigned = num2_high_modified_unsigned ^ 0x100000;\n      shiftedNum1High_unsigned = 1;\n    }\n    else {\n      exponentDifference = exponentDifference - 1;\n    }\n  }\n  tempSum3 = -exponentDifference + 0x20;\n  if ((int)exponentDifference < 0x21) {\n    tempShift = num2_low << (tempSum3 & 0xff);\n    num2_low = num2_low >> (exponentDifference & 0xff);\n    tempSum1 = num1_low_modified + num2_low;\n    tempSum2 = num2_high_modified << (tempSum3 & 0xff);\n    tempSum3 = tempSum1 + tempSum2;\n    num2_high_modified_unsigned = num2_high_modified_unsigned + CARRY4(num1_low_modified,num2_low) + ((int)num2_high_modified >> (exponentDifference & 0xff)) +\n            (uint)CARRY4(tempSum1,tempSum2);\n  }\n  else {\n    tempShift = num2_high_modified << (-exponentDifference + 0x40 & 0xff);\n    if (num2_low != 0) {\n      tempShift = tempShift | 2;\n    }\n    num2_high_modified = (int)num2_high_modified >> (exponentDifference - 0x20 & 0xff);\n    tempSum3 = num1_low_modified + num2_high_modified;\n    num2_high_modified_unsigned = num2_high_modified_unsigned + ((int)num2_high_modified >> 0x1f) + (uint)CARRY4(num1_low_modified,num2_high_modified);\n  }\n  num1_high = num2_high_modified_unsigned & 0x80000000;\n  exponentDifference = num2_high_modified_unsigned;\n  if ((int)num2_high_modified_unsigned < 0) {\n    condition = tempShift == 0;\n    tempShift = -tempShift;\n    exponentDifference = -tempSum3;\n    tempSum3 = -(uint)!condition - tempSum3;\n    exponentDifference = -(uint)(condition <= exponentDifference) - num2_high_modified_unsigned;\n  }\n  if (0xfffff < exponentDifference) {\n    num1_low_modified = shiftedNum1High_unsigned - 1;\n    if (0x1fffff < exponentDifference) {\n      num2_high_modified_unsigned = exponentDifference & 1;\n      exponentDifference = exponentDifference >> 1;\n      carryBit = (byte)tempSum3;\n      tempSum3 = (uint)(num2_high_modified_unsigned != 0) << 0x1f | tempSum3 >> 1;\n      tempShift = (uint)(carryBit & 1) << 0x1f | tempShift >> 1;\n      num1_low_modified = shiftedNum1High_unsigned;\n      if (0xffbfffff < shiftedNum1High_unsigned * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    condition = 0x7fffffff < tempShift;\n    if (tempShift == 0x80000000) {\n      condition = (tempSum3 & 1) != 0;\n    }\n    return CONCAT44(exponentDifference + num1_low_modified * 0x100000 + (uint)CARRY4(tempSum3,(uint)condition) | num1_high,\n                    tempSum3 + condition);\n  }\n  isEqualHigh = (tempShift & 0x80000000) != 0;\n  tempShift = tempShift << 1;\n  num1_low_modified = tempSum3 * 2;\n  condition = CARRY4(tempSum3,tempSum3);\n  tempSum3 = tempSum3 * 2 + (uint)isEqualHigh;\n  exponentDifference = exponentDifference * 2 + (uint)(condition || CARRY4(num1_low_modified,(uint)isEqualHigh));\n  num1_low_modified = shiftedNum1High_unsigned - 2;\n  if (shiftedNum1High_unsigned - 1 != 0 && 0xfffff < exponentDifference) goto LAB_080083e0;\n  num2_high_modified = tempSum3;\n  shiftedNum1High_unsigned = exponentDifference;\n  if (exponentDifference == 0) {\n    num2_high_modified = 0;\n    shiftedNum1High_unsigned = tempSum3;\n  }\n  shiftedNum1High = count_leading_zeroes(shiftedNum1High_unsigned);\n  if (exponentDifference == 0) {\n    shiftedNum1High = shiftedNum1High + 0x20;\n  }\n  tempSum3 = shiftedNum1High - 0xb;\n  carryCondition = SBORROW4(tempSum3,0x20);\n  exponentDifference = shiftedNum1High - 0x2b;\n  condition = (int)exponentDifference < 0;\n  isEqualHigh = exponentDifference == 0;\n  if ((int)tempSum3 < 0x20) {\n    carryCondition = SCARRY4(exponentDifference,0xc);\n    shiftedNum1High = shiftedNum1High + -0x1f;\n    condition = shiftedNum1High < 0;\n    isEqualHigh = shiftedNum1High == 0;\n    exponentDifference = tempSum3;\n    if (!isEqualHigh && condition == carryCondition) {\n      num2_high_modified = shiftedNum1High_unsigned << (tempSum3 & 0xff);\n      shiftedNum1High_unsigned = shiftedNum1High_unsigned >> (0xcU - shiftedNum1High & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (isEqualHigh || condition != carryCondition) {\n    tempShift = 0x20 - exponentDifference;\n  }\n  shiftedNum1High_unsigned = shiftedNum1High_unsigned << (exponentDifference & 0xff);\n  if (isEqualHigh || condition != carryCondition) {\n    shiftedNum1High_unsigned = shiftedNum1High_unsigned | num2_high_modified >> (tempShift & 0xff);\n  }\n  if (isEqualHigh || condition != carryCondition) {\n    num2_high_modified = num2_high_modified << (exponentDifference & 0xff);\n  }\nLAB_08008458:\n  if ((int)tempSum3 <= (int)num1_low_modified) {\n    return CONCAT44(shiftedNum1High_unsigned + (num1_low_modified - tempSum3) * 0x100000 | num1_high,num2_high_modified);\n  }\n  exponentDifference = ~(num1_low_modified - tempSum3);\n  if ((int)exponentDifference < 0x1f) {\n    shiftedNum1High = exponentDifference - 0x13;\n    if (shiftedNum1High != 0 && shiftedNum1High < 0 == SCARRY4(exponentDifference - 0x1f,0xc)) {\n      return CONCAT44(num2_high_modified_unsigned,num2_high_modified >> (0x20 - (0xcU - shiftedNum1High) & 0xff) | shiftedNum1High_unsigned << (0xcU - shiftedNum1High & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    exponentDifference = exponentDifference + 1;\n    return CONCAT44(num1_high | shiftedNum1High_unsigned >> (exponentDifference & 0xff),\n                    num2_high_modified >> (exponentDifference & 0xff) | shiftedNum1High_unsigned << (0x20 - exponentDifference & 0xff));\n  }\n  return CONCAT44(num2_high_modified_unsigned,shiftedNum1High_unsigned >> (exponentDifference - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080082d4",
            "calling": [
                "FUN_0800a5a0",
                "FUN_08009990",
                "FUN_08009798",
                "FUN_08009318",
                "FUN_0800af78",
                "FUN_08001f00",
                "FUN_080094c0",
                "FUN_08009654",
                "FUN_0800adf0",
                "FUN_0800a1bc",
                "FUN_08009d78",
                "FUN_08009b24",
                "FUN_0800a348",
                "FUN_0800b2e8"
            ],
            "imported": false,
            "current_name": "floating_point_operation_080082d4"
        },
        "FUN_08007bf0": {
            "renaming": {
                "FUN_08007bf0": "update_minimum_value_08007bf0",
                "param_1": "inputValue"
            },
            "code": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid updateMinimumValue_08007bf0(uint inputValue)\n\n{\n  _DAT_4000002c = inputValue;\n  if (inputValue <= _DAT_40000024) {\n    _DAT_40000024 = inputValue;\n  }\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007bf0",
            "calling": [
                "FUN_08005324"
            ],
            "imported": false,
            "current_name": "update_minimum_value_08007bf0"
        },
        "FUN_08008590": {
            "renaming": {
                "FUN_08008590": "calculate_result_08008590",
                "param_1": "input_value",
                "param_2": "unused_param_2",
                "param_3": "unused_param_3",
                "param_4": "mask_value",
                "uVar1": "shifted_bit",
                "uVar2": "shifted_input_low",
                "uVar3": "combined_high",
                "uVar4": "shifted_input_high",
                "uVar5": "double_input",
                "iVar6": "leading_zeroes",
                "uVar7": "adjusted_zeroes",
                "in_r12": "shift_amount",
                "bVar8": "is_zero_shifted",
                "bVar9": "is_mask_zero",
                "bVar10": "carry_flag"
            },
            "code": "\nulonglong calculate_result_08008590(uint input_value,undefined4 unused_param_2,undefined4 unused_param_3,uint mask_value)\n\n{\n  uint shifted_bit;\n  uint shifted_input_low;\n  uint combined_high;\n  uint shifted_input_high;\n  uint double_input;\n  int leading_zeroes;\n  uint adjusted_zeroes;\n  uint shift_amount;\n  bool is_zero_shifted;\n  bool is_mask_zero;\n  bool carry_flag;\n  \n  double_input = input_value << 1;\n  is_mask_zero = double_input == 0;\n  shifted_bit = (uint)((input_value & 0x80000000) != 0) << 0x1f;\n  shifted_input_high = (uint)((int)double_input >> 3) >> 1;\n  combined_high = shifted_bit | shifted_input_high;\n  input_value = input_value << 0x1d;\n  if (!is_mask_zero) {\n    mask_value = double_input & 0xff000000;\n    is_mask_zero = mask_value == 0;\n  }\n  if (!is_mask_zero) {\n    is_mask_zero = mask_value == 0xff000000;\n  }\n  if (!is_mask_zero) {\n    return CONCAT44(combined_high,input_value) ^ 0x3800000000000000;\n  }\n  if ((double_input & 0xffffff) == 0) {\n    return CONCAT44(combined_high,input_value);\n  }\n  if (mask_value == 0xff000000) {\n    return CONCAT44(combined_high,input_value) | 0x8000000000000;\n  }\n  shifted_input_low = input_value;\n  double_input = shifted_input_high;\n  if (shifted_input_high == 0) {\n    shifted_input_low = 0;\n    double_input = input_value;\n  }\n  leading_zeroes = count_leading_zeroes(double_input);\n  if (shifted_input_high == 0) {\n    leading_zeroes = leading_zeroes + 0x20;\n  }\n  adjusted_zeroes = leading_zeroes - 0xb;\n  carry_flag = SBORROW4(adjusted_zeroes,0x20);\n  shifted_input_high = leading_zeroes - 0x2b;\n  is_mask_zero = (int)shifted_input_high < 0;\n  is_zero_shifted = shifted_input_high == 0;\n  if ((int)adjusted_zeroes < 0x20) {\n    carry_flag = SCARRY4(shifted_input_high,0xc);\n    leading_zeroes = leading_zeroes + -0x1f;\n    is_mask_zero = leading_zeroes < 0;\n    is_zero_shifted = leading_zeroes == 0;\n    shifted_input_high = adjusted_zeroes;\n    if (!is_zero_shifted && is_mask_zero == carry_flag) {\n      shifted_input_low = double_input << (adjusted_zeroes & 0xff);\n      double_input = double_input >> (0xcU - leading_zeroes & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (is_zero_shifted || is_mask_zero != carry_flag) {\n    shift_amount = 0x20 - shifted_input_high;\n  }\n  double_input = double_input << (shifted_input_high & 0xff);\n  if (is_zero_shifted || is_mask_zero != carry_flag) {\n    double_input = double_input | shifted_input_low >> (shift_amount & 0xff);\n  }\n  if (is_zero_shifted || is_mask_zero != carry_flag) {\n    shifted_input_low = shifted_input_low << (shifted_input_high & 0xff);\n  }\nLAB_08008458:\n  if ((int)adjusted_zeroes < 0x381) {\n    return CONCAT44(double_input + (0x380 - adjusted_zeroes) * 0x100000 | shifted_bit,shifted_input_low);\n  }\n  shifted_input_high = ~(0x380 - adjusted_zeroes);\n  if (0x1e < (int)shifted_input_high) {\n    return CONCAT44(combined_high,double_input >> (shifted_input_high - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leading_zeroes = shifted_input_high - 0x13;\n  if (leading_zeroes == 0 || leading_zeroes < 0 != SCARRY4(shifted_input_high - 0x1f,0xc)) {\n    shifted_input_high = shifted_input_high + 1;\n    return CONCAT44(shifted_bit | double_input >> (shifted_input_high & 0xff),\n                    shifted_input_low >> (shifted_input_high & 0xff) | double_input << (0x20 - shifted_input_high & 0xff));\n  }\n  return CONCAT44(combined_high,shifted_input_low >> (0x20 - (0xcU - leading_zeroes) & 0xff) | double_input << (0xcU - leading_zeroes & 0xff)) &\n         0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008590",
            "calling": [
                "FUN_080044e8",
                "FUN_080005b4",
                "FUN_08002638",
                "FUN_08002408",
                "FUN_0800056c",
                "FUN_08002978",
                "FUN_08004e30",
                "FUN_08003b98",
                "FUN_08001f00",
                "FUN_08003004",
                "FUN_08002c18",
                "FUN_08004940",
                "FUN_08001994",
                "FUN_080046d0"
            ],
            "imported": false,
            "current_name": "calculate_result_08008590"
        },
        "FUN_08007ad0": {
            "renaming": {
                "FUN_08007ad0": "initialize_memory_08007ad0"
            },
            "code": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid initializeMemory_08007ad0(void)\n\n{\n  FUN_08007a10(0x40000000);\n  _DAT_40000000 = 0;\n  _DAT_40000004 = 0;\n  _DAT_40000008 = 0;\n  _DAT_4000000c = 0;\n  _DAT_40000010 = 0;\n  _DAT_40000018 = 0;\n  _DAT_4000001c = 0;\n  _DAT_40000020 = 0;\n  _DAT_40000024 = 0;\n  _DAT_40000028 = (uint)((ulonglong)DAT_08007b6c * (ulonglong)*(uint *)PTR_DAT_08007b68 >> 0x38) - 1\n  ;\n  _DAT_4000002c = 0;\n  _DAT_40000034 = 0;\n  _DAT_40000038 = 0;\n  _DAT_4000003c = 0;\n  _DAT_40000040 = 0;\n  _DAT_40000048 = 0;\n  _DAT_4000004c = 0;\n  FUN_08007a70(0x40000000,0,0);\n  return;\n}\n\n",
            "called": [
                "FUN_08007a10",
                "FUN_08007a70"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007ad0",
            "calling": [
                "FUN_08007e08"
            ],
            "imported": false,
            "current_name": "initialize_memory_08007ad0"
        },
        "FUN_080005b4": {
            "renaming": {
                "FUN_080005b4": "process_input_data_080005b4",
                "param_1": "inputData",
                "puVar1": "tempPtr",
                "uVar2": "tempByte",
                "iVar3": "tempInt",
                "uVar4": "tempUInt4",
                "uVar5": "result",
                "uVar6": "tempUInt6",
                "uVar7": "tempUInt8",
                "local_94": "localBuffer",
                "local_84": "processedValue1",
                "local_80": "processedValue2",
                "local_7c": "processedValue3",
                "uStack_78": "processedValue4",
                "uStack_74": "processedValue5",
                "auStack_70": "inputBuffer",
                "local_58": "localValue",
                "local_52": "inputByte",
                "local_51": "byteArray",
                "local_3d": "loopCounter1",
                "local_3c": "loopCounter2",
                "local_3b": "loopCounter3",
                "local_3a": "loopCounter4",
                "local_39": "switchValue",
                "local_38": "localValue2",
                "local_34": "localValue3",
                "local_2f": "state",
                "local_2e": "stateCase",
                "local_2d": "stateFlag",
                "local_2c": "globalData",
                "local_27": "bitmask",
                "local_26": "shortBitmask",
                "local_24": "tempUInt"
            },
            "code": "\nuint processInputData_080005b4(undefined4 inputData)\n\n{\n  undefined *tempPtr;\n  undefined tempByte;\n  int tempInt;\n  undefined4 tempUInt4;\n  uint result;\n  undefined4 tempUInt6;\n  undefined8 tempUInt8;\n  undefined4 localBuffer [4];\n  undefined4 processedValue1;\n  undefined4 processedValue2;\n  undefined4 processedValue3;\n  undefined4 processedValue4;\n  undefined4 processedValue5;\n  undefined4 inputBuffer [6];\n  undefined4 localValue;\n  byte inputByte;\n  undefined byteArray [20];\n  byte loopCounter1;\n  byte loopCounter2;\n  byte loopCounter3;\n  byte loopCounter4;\n  char switchValue;\n  undefined4 localValue2;\n  undefined4 localValue3;\n  sbyte state;\n  char stateCase;\n  char stateFlag;\n  undefined4 globalData;\n  byte bitmask;\n  ushort shortBitmask;\n  uint tempUInt;\n  \n  if (PTR_DAT_08000808[1] == '\\x06') {\n    result = 0xc;\n  }\n  else {\n    byteArray[0] = 0;\n    shortBitmask = 0;\n    bitmask = 0;\n    globalData = DAT_0800080c;\n    stateFlag = '\\0';\n    stateCase = '\\0';\n    FUN_0800b430(inputBuffer + 3,0,0xc);\n    FUN_0800b430(inputBuffer,0,0xc);\n    *PTR_DAT_08000810 = 0;\n    state = 0;\n    while (tempInt = FUN_0800184c(&inputByte,inputBuffer + 6,inputData,byteArray), tempInt != 0) {\n      tempUInt8 = FUN_08008590(localValue);\n      tempUInt8 = FUN_08009798((int)tempUInt8,(int)((ulonglong)tempUInt8 >> 0x20));\n      tempUInt = FUN_08008ba0((int)tempUInt8,(int)((ulonglong)tempUInt8 >> 0x20));\n      if (inputByte == 0x47) {\n        switch(tempUInt) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 0x50:\n          state = 2;\n          break;\n        case 4:\n        case 10:\n        case 0x1c:\n        case 0x1e:\n        case 0x35:\n        case 0x5c:\n          state = 1;\n          break;\n        case 0x11:\n        case 0x12:\n        case 0x13:\n          state = 3;\n          break;\n        case 0x14:\n        case 0x15:\n          state = 7;\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          state = 9;\n          break;\n        case 0x5a:\n        case 0x5b:\n          state = 4;\n          break;\n        case 0x5d:\n        case 0x5e:\n          state = 6;\n        }\n        switch(tempUInt) {\n        case 0:\n          PTR_DAT_08000ca0[1] = 0;\n          break;\n        case 1:\n          PTR_DAT_08000ca0[1] = 1;\n          break;\n        case 2:\n          PTR_DAT_08000ca0[1] = 2;\n          break;\n        case 3:\n          PTR_DAT_08000ca0[1] = 3;\n          break;\n        case 4:\n          stateCase = '\\x01';\n          break;\n        default:\n          *PTR_DAT_08000ca0 = 3;\n          break;\n        case 10:\n          stateCase = '\\x02';\n          break;\n        case 0x11:\n          FUN_08000478(0,1,2);\n          break;\n        case 0x12:\n          FUN_08000478(2,0,1);\n          break;\n        case 0x13:\n          FUN_08000478(1,2,0);\n          break;\n        case 0x14:\n          PTR_DAT_08000ca0[3] = 1;\n          break;\n        case 0x15:\n          PTR_DAT_08000ca0[3] = 0;\n          break;\n        case 0x1c:\n        case 0x1e:\n          tempUInt4 = FUN_08008eec(localValue,DAT_08000ca4);\n          tempUInt8 = FUN_08008590(tempUInt4);\n          tempUInt8 = FUN_08009798((int)tempUInt8,(int)((ulonglong)tempUInt8 >> 0x20));\n          tempUInt = FUN_08008ba0((int)tempUInt8,(int)((ulonglong)tempUInt8 >> 0x20));\n          switch(tempUInt) {\n          case 0x118:\n            stateCase = '\\x03';\n            break;\n          case 0x119:\n            stateCase = '\\x04';\n            break;\n          default:\n            *PTR_DAT_08000ca0 = 3;\n            break;\n          case 300:\n            stateCase = '\\x05';\n            break;\n          case 0x12d:\n            stateCase = '\\x06';\n          }\n          break;\n        case 0x35:\n          stateFlag = '\\x01';\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          PTR_DAT_08000ca0[0x1c] = (char)tempUInt + -0x36;\n          break;\n        case 0x50:\n          PTR_DAT_08000ca0[1] = 4;\n          break;\n        case 0x5a:\n          PTR_DAT_08000ca0[4] = 1;\n          break;\n        case 0x5b:\n          PTR_DAT_08000ca0[4] = 0;\n          break;\n        case 0x5c:\n          tempUInt4 = FUN_08008eec(localValue,DAT_08000ca4);\n          tempUInt8 = FUN_08008590(tempUInt4);\n          tempUInt8 = FUN_08009798((int)tempUInt8,(int)((ulonglong)tempUInt8 >> 0x20));\n          tempUInt = FUN_08008ba0((int)tempUInt8,(int)((ulonglong)tempUInt8 >> 0x20));\n          if (tempUInt == 0x398) {\n            stateCase = '\\a';\n          }\n          else if (tempUInt == 0x399) {\n            stateCase = '\\b';\n          }\n          else {\n            *PTR_DAT_08000ca0 = 3;\n          }\n          break;\n        case 0x5d:\n          PTR_DAT_08000ca0[2] = 1;\n          break;\n        case 0x5e:\n          PTR_DAT_08000ca0[2] = 0;\n        }\n      }\n      else if (inputByte == 0x4d) {\n        if (tempUInt == 0x1e) {\nLAB_08000b96:\n          state = 5;\n        }\n        else if ((int)tempUInt < 0x1f) {\n          if ((int)tempUInt < 3) {\n            if (-1 < (int)tempUInt) goto LAB_08000b96;\n          }\n          else if (tempUInt - 3 < 3) {\n            state = 8;\n          }\n        }\n        switch(tempUInt) {\n        case 0:\n          PTR_DAT_08000ca0[5] = 1;\n          break;\n        case 1:\n          break;\n        case 2:\n        case 0x1e:\n          PTR_DAT_08000ca0[5] = 2;\n          break;\n        case 3:\n          PTR_DAT_08000ca0[6] = 1;\n          break;\n        case 4:\n          PTR_DAT_08000ca0[6] = 0xff;\n          break;\n        case 5:\n          PTR_DAT_08000ca0[6] = 0;\n          break;\n        default:\n          *PTR_DAT_08000ca0 = 3;\n          break;\n        case 7:\n          PTR_DAT_08000ca0[7] = 2;\n          break;\n        case 8:\n          PTR_DAT_08000ca0[7] = 1;\n          break;\n        case 9:\n          PTR_DAT_08000ca0[7] = 0;\n        }\n      }\n      if (state != 0) {\n        if (((int)(uint)shortBitmask >> state & 1U) == 0) {\n          shortBitmask = shortBitmask | (ushort)(1 << state);\n        }\n        else {\n          *PTR_DAT_08000ca0 = 5;\n        }\n        state = 0;\n      }\n    }\n    if (*PTR_DAT_08000ff0 == '\\0') {\n      localValue3 = 0;\n      localValue2 = 0;\n      switchValue = '\\0';\n      byteArray[0] = 0;\nswitchD_08000d18_caseD_47:\n      tempInt = FUN_0800184c(&inputByte,inputBuffer + 6,inputData,byteArray);\n      if (tempInt != 0) {\n        switch(inputByte) {\n        case 0x46:\n          tempInt = FUN_0800923c(localValue,0);\n          if (tempInt != 0) {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          if (PTR_DAT_08000ff0[2] == '\\0') {\n            tempUInt4 = FUN_0800056c(localValue);\n            *(undefined4 *)(PTR_DAT_08000ff0 + 8) = tempUInt4;\n          }\n          else {\n            globalData = FUN_0800056c(localValue);\n          }\n          break;\n        case 0x47:\n        case 0x4d:\n        case 0x4e:\n          break;\n        default:\n          *PTR_DAT_08000ff0 = 3;\n          break;\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n          result = (uint)inputByte;\n          tempUInt4 = FUN_0800056c(localValue);\n          inputBuffer[result - 0x49] = tempUInt4;\n          break;\n        case 0x4c:\n          tempUInt8 = FUN_08008590(localValue);\n          tempUInt8 = FUN_08009798((int)tempUInt8,(int)((ulonglong)tempUInt8 >> 0x20));\n          switchValue = FUN_08008bf0((int)tempUInt8,(int)((ulonglong)tempUInt8 >> 0x20));\n          break;\n        case 0x50:\n          localValue3 = localValue;\n          break;\n        case 0x52:\n          localValue2 = FUN_0800056c(localValue);\n          break;\n        case 0x53:\n          tempInt = FUN_08009228(localValue,0);\n          if (tempInt != 0) {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          break;\n        case 0x54:\n          tempInt = FUN_08009228(localValue,0);\n          if (tempInt != 0) {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          tempUInt8 = FUN_08008590(localValue);\n          tempUInt8 = FUN_08009798((int)tempUInt8,(int)((ulonglong)tempUInt8 >> 0x20));\n          tempByte = FUN_08008bf0((int)tempUInt8,(int)((ulonglong)tempUInt8 >> 0x20));\n          PTR_DAT_08000ff0[0x18] = tempByte;\n          break;\n        case 0x58:\n          inputBuffer[3] = FUN_0800056c(localValue);\n          bitmask = bitmask | 1;\n          break;\n        case 0x59:\n          inputBuffer[4] = FUN_0800056c(localValue);\n          bitmask = bitmask | 2;\n          break;\n        case 0x5a:\n          inputBuffer[5] = FUN_0800056c(localValue);\n          bitmask = bitmask | 4;\n        }\n        goto switchD_08000d18_caseD_47;\n      }\n      if (*PTR_DAT_08000ff0 == '\\0') {\n        if (PTR_DAT_08000ff4[1] != '\\a') {\n          FUN_0800525c((int)(char)PTR_DAT_08000ff0[6]);\n          FUN_08000220(PTR_DAT_08000ff0[7]);\n        }\n        if ((shortBitmask & 0x200) != 0) {\n          tempInt = FUN_08004d7c(PTR_DAT_08000ff0[0x1c],&processedValue3);\n          tempPtr = PTR_DAT_08000ff0;\n          if (tempInt == 0) {\n            return 10;\n          }\n          *(undefined4 *)(PTR_DAT_08000ff0 + 0x20) = processedValue3;\n          *(undefined4 *)(tempPtr + 0x24) = processedValue4;\n          *(undefined4 *)(tempPtr + 0x28) = processedValue5;\n        }\n        switch(stateCase) {\n        case '\\x01':\n          tempInt = FUN_08009228(localValue3,0);\n          if (tempInt == 0) {\n            if (PTR_DAT_08000ff4[1] != '\\a') {\n              FUN_08002408(localValue3);\n            }\n          }\n          else {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          break;\n        case '\\x02':\n          tempUInt8 = FUN_08008590(localValue3);\n          tempUInt8 = FUN_08009798((int)tempUInt8,(int)((ulonglong)tempUInt8 >> 0x20));\n          tempUInt = FUN_08008ba0((int)tempUInt8,(int)((ulonglong)tempUInt8 >> 0x20));\n          if ((((switchValue == '\\x02') || (switchValue == '\\x14')) && (-1 < (int)tempUInt)) &&\n             ((int)tempUInt < 7)) {\n            if ((bitmask == 0) && (switchValue == '\\x02')) {\n              *PTR_DAT_08000ff0 = 6;\n            }\n            else {\n              if ((int)tempUInt < 1) {\n                tempUInt = (uint)(byte)PTR_DAT_08001304[0x1c];\n              }\n              else {\n                tempUInt = tempUInt - 1;\n              }\n              tempInt = FUN_08004d7c(tempUInt & 0xff,localBuffer);\n              if (tempInt == 0) {\n                return 10;\n              }\n              for (loopCounter4 = 0; loopCounter4 < 3; loopCounter4 = loopCounter4 + 1) {\n                if (((int)(uint)bitmask >> loopCounter4 & 1U) != 0) {\n                  if (switchValue == '\\x14') {\n                    result = (uint)loopCounter4;\n                    tempUInt4 = FUN_08008cd8(*(undefined4 *)(PTR_DAT_08001304 + (loopCounter4 + 2) * 4 + 4),\n                                         inputBuffer[loopCounter4 + 3]);\n                    localBuffer[result] = tempUInt4;\n                  }\n                  else {\n                    localBuffer[loopCounter4] = inputBuffer[loopCounter4 + 3];\n                  }\n                }\n              }\n              FUN_08004bf4(tempUInt & 0xff,localBuffer);\n              tempPtr = PTR_DAT_08001304;\n              if (tempUInt == (byte)PTR_DAT_08001304[0x1c]) {\n                *(undefined4 *)(PTR_DAT_08001304 + 0x20) = localBuffer[0];\n                *(undefined4 *)(tempPtr + 0x24) = localBuffer[1];\n                *(undefined4 *)(tempPtr + 0x28) = localBuffer[2];\n              }\n            }\n          }\n          else {\n            *PTR_DAT_08000ff0 = 3;\n          }\n          bitmask = 0;\n          break;\n        case '\\x03':\n        case '\\x05':\n          if (bitmask != 0) {\n            for (loopCounter3 = 0; loopCounter3 < 3; loopCounter3 = loopCounter3 + 1) {\n              if (((int)(uint)bitmask >> loopCounter3 & 1U) == 0) {\n                inputBuffer[loopCounter3 + 3] =\n                     *(undefined4 *)(PTR_DAT_08001304 + (loopCounter3 + 2) * 4 + 4);\n              }\n              else if (PTR_DAT_08001304[4] == '\\0') {\n                result = (uint)loopCounter3;\n                tempUInt4 = FUN_08008cdc(inputBuffer[loopCounter3 + 3],\n                                     *(undefined4 *)(PTR_DAT_08001304 + (loopCounter3 + 2) * 4 + 4));\n                inputBuffer[result + 3] = tempUInt4;\n              }\n              else {\n                tempUInt6 = inputBuffer[loopCounter3 + 3];\n                tempUInt4 = FUN_08008cdc(*(undefined4 *)(PTR_DAT_08001304 + (loopCounter3 + 8) * 4),\n                                     *(undefined4 *)(PTR_DAT_08001304 + (loopCounter3 + 10) * 4 + 4));\n                result = (uint)loopCounter3;\n                tempUInt4 = FUN_08008cdc(tempUInt6,tempUInt4);\n                inputBuffer[result + 3] = tempUInt4;\n              }\n            }\n            FUN_08001e98(inputBuffer[3],inputBuffer[4],inputBuffer[5],\n                         *(undefined4 *)(PTR_DAT_08001308 + 0x14),0);\n          }\n          if (stateCase == '\\x05') {\n            tempInt = FUN_08004d7c(7,localBuffer + 3);\n            if (tempInt == 0) {\n              return 10;\n            }\n          }\n          else {\n            tempInt = FUN_08004d7c(6,localBuffer + 3);\n            if (tempInt == 0) {\n              return 10;\n            }\n          }\n          FUN_08001e98(localBuffer[3],processedValue1,processedValue2,*(undefined4 *)(PTR_DAT_08001308 + 0x14),0);\n          tempPtr = PTR_DAT_08001304;\n          *(undefined4 *)(PTR_DAT_08001304 + 0xc) = localBuffer[3];\n          *(undefined4 *)(tempPtr + 0x10) = processedValue1;\n          *(undefined4 *)(tempPtr + 0x14) = processedValue2;\n          bitmask = 0;\n          break;\n        case '\\x04':\n        case '\\x06':\n          if (stateCase == '\\x06') {\n            FUN_08004bf4(7,PTR_DAT_0800130c);\n          }\n          else {\n            FUN_08004bf4(6,PTR_DAT_0800130c);\n          }\n          break;\n        case '\\a':\n          if (bitmask == 0) {\n            *PTR_DAT_08001304 = 6;\n          }\n          else {\n            for (loopCounter2 = 0; loopCounter2 < 3; loopCounter2 = loopCounter2 + 1) {\n              if (((int)(uint)bitmask >> loopCounter2 & 1U) != 0) {\n                tempUInt4 = FUN_08008cd8(*(undefined4 *)(PTR_DAT_08001304 + (loopCounter2 + 2) * 4 + 4),\n                                     *(undefined4 *)(PTR_DAT_08001304 + (loopCounter2 + 8) * 4));\n                result = (uint)loopCounter2;\n                tempUInt4 = FUN_08008cd8(tempUInt4,inputBuffer[loopCounter2 + 3]);\n                *(undefined4 *)(PTR_DAT_08001304 + (result + 10) * 4 + 4) = tempUInt4;\n              }\n            }\n          }\n          bitmask = 0;\n          break;\n        case '\\b':\n          FUN_0800b430(PTR_DAT_08001310,0,0xc);\n        }\n        if (((shortBitmask & 4) != 0) || (bitmask != 0)) {\n          if ((PTR_DAT_08001574[2] != '\\0') &&\n             ((tempInt = FUN_08009228(globalData,0), tempInt != 0 && (PTR_DAT_08001574[1] != '\\x04')))) {\n            *PTR_DAT_08001574 = 6;\n          }\n          if (((stateFlag != '\\0') && (PTR_DAT_08001574[1] != '\\0')) &&\n             (PTR_DAT_08001574[1] != '\\x01')) {\n            *PTR_DAT_08001574 = 6;\n          }\n          if (*PTR_DAT_08001574 != '\\0') {\n            return (uint)(byte)*PTR_DAT_08001574;\n          }\n          for (loopCounter1 = 0; tempPtr = PTR_DAT_08001840, loopCounter1 < 3; loopCounter1 = loopCounter1 + 1) {\n            if (((int)(uint)bitmask >> loopCounter1 & 1U) == 0) {\n              inputBuffer[loopCounter1 + 3] = *(undefined4 *)(PTR_DAT_08001574 + (loopCounter1 + 2) * 4 + 4);\n            }\n            else if (stateFlag == '\\0') {\n              if (PTR_DAT_08001574[4] == '\\0') {\n                result = (uint)loopCounter1;\n                tempUInt4 = FUN_08008cdc(inputBuffer[loopCounter1 + 3],\n                                     *(undefined4 *)(PTR_DAT_08001574 + (loopCounter1 + 2) * 4 + 4));\n                inputBuffer[result + 3] = tempUInt4;\n              }\n              else {\n                tempUInt6 = inputBuffer[loopCounter1 + 3];\n                tempUInt4 = FUN_08008cdc(*(undefined4 *)(PTR_DAT_08001574 + (loopCounter1 + 8) * 4),\n                                     *(undefined4 *)(PTR_DAT_08001574 + (loopCounter1 + 10) * 4 + 4));\n                result = (uint)loopCounter1;\n                tempUInt4 = FUN_08008cdc(tempUInt6,tempUInt4);\n                inputBuffer[result + 3] = tempUInt4;\n              }\n            }\n          }\n          if ((byte)PTR_DAT_08001574[1] < 5) {\n                    /* WARNING: Could not recover jumptable at 0x08001474. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n            result = (*(code *)(&switchD_08001474::switchdataD_08001478)[(byte)PTR_DAT_08001574[1]])\n                              ();\n            return result;\n          }\n          if (*PTR_DAT_08001840 != '\\0') {\n            return (uint)(byte)*PTR_DAT_08001840;\n          }\n          *(undefined4 *)(PTR_DAT_08001840 + 0xc) = inputBuffer[3];\n          *(undefined4 *)(tempPtr + 0x10) = inputBuffer[4];\n          *(undefined4 *)(tempPtr + 0x14) = inputBuffer[5];\n        }\n        if (PTR_DAT_08001840[5] != '\\0') {\n          FUN_08002fd4();\n          PTR_DAT_08001848[0x10] = 0;\n          if (PTR_DAT_08001840[5] == '\\x02') {\n            FUN_080025e8();\n          }\n          else {\n            PTR_DAT_08001840[5] = 0;\n          }\n        }\n        result = (uint)(byte)*PTR_DAT_08001840;\n      }\n      else {\n        result = (uint)(byte)*PTR_DAT_08000ff0;\n      }\n    }\n    else {\n      result = (uint)(byte)*PTR_DAT_08000ff0;\n    }\n  }\n  return result;\n}\n\n",
            "called": [
                "FUN_0800525c",
                "FUN_08002408",
                "FUN_08009798",
                "FUN_0800056c",
                "FUN_08002fd4",
                "FUN_080025e8",
                "FUN_0800981c",
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_0800923c",
                "FUN_08000220",
                "FUN_08008cdc",
                "FUN_0800b430",
                "FUN_08008c30",
                "FUN_0800184c",
                "FUN_08008590",
                "FUN_08001f00",
                "FUN_08004bf4",
                "FUN_08001e98",
                "FUN_08009214",
                "FUN_08000478",
                "FUN_08008894",
                "FUN_08004d7c",
                "FUN_08008bf0",
                "FUN_080098d0",
                "FUN_08008ba0",
                "FUN_08009228"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080005b4",
            "calling": [
                "FUN_080039bc",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "process_input_data_080005b4"
        },
        "FUN_080039a0": {
            "renaming": {
                "FUN_080039a0": "initialize_system_080039a0"
            },
            "code": "\nvoid initializeSystem_080039a0(void)\n\n{\n  FUN_08003980();\n  FUN_08004228();\n  *(undefined4 *)PTR_DAT_080039b8 = 1;\n  return;\n}\n\n",
            "called": [
                "FUN_08003980",
                "FUN_08004228"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080039a0",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initialize_system_080039a0"
        },
        "FUN_08009204": {
            "renaming": {
                "FUN_08009204": "combine_parameters_08009204",
                "param_1": "first_parameter",
                "param_2": "second_parameter"
            },
            "code": "\nundefined8 combine_parameters_08009204(undefined4 first_parameter,undefined4 second_parameter)\n\n{\n  FUN_0800919c();\n  return CONCAT44(second_parameter,first_parameter);\n}\n\n",
            "called": [
                "FUN_0800919c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009204",
            "calling": [
                "FUN_08009214",
                "FUN_0800923c",
                "FUN_08009228",
                "FUN_080091fc"
            ],
            "imported": false,
            "current_name": "combine_parameters_08009204"
        },
        "FUN_080029d8": {
            "renaming": {
                "FUN_080029d8": "process_data_080029d8",
                "param_1": "result",
                "param_2": "data1",
                "param_3": "data2",
                "iVar1": "comparisonResult",
                "uVar2": "tempResult",
                "uVar3": "data1Value"
            },
            "code": "\nvoid processData_080029d8(undefined4 result,int data1,int data2)\n\n{\n  int comparisonResult;\n  undefined4 tempResult;\n  undefined4 data1Value;\n  \n  if (((data1 != 0) && (data2 != 0)) &&\n     (comparisonResult = FUN_08009214(*(undefined4 *)(data1 + 0x18),*(undefined4 *)(data1 + 0x1c)),\n     comparisonResult == 0)) {\n    if ((*(char *)(data1 + 0x25) == '\\0') &&\n       (comparisonResult = FUN_08009264(*(undefined4 *)(data1 + 0x1c),*(undefined4 *)(data2 + 0x18)),\n       comparisonResult != 0)) {\n      data1Value = *(undefined4 *)(data1 + 0x1c);\n      tempResult = FUN_08002978(*(uint *)(PTR_DAT_08002a90 + 0x20) ^ 0x80000000,\n                           *(undefined4 *)(data2 + 0x18),*(undefined4 *)(data1 + 0x20));\n      comparisonResult = FUN_08009228(data1Value,tempResult);\n      if (comparisonResult == 0) {\n        tempResult = FUN_08002978(*(uint *)(PTR_DAT_08002a90 + 0x20) ^ 0x80000000,\n                             *(undefined4 *)(data2 + 0x18),*(undefined4 *)(data1 + 0x20));\n      }\n      else {\n        tempResult = *(undefined4 *)(data1 + 0x1c);\n      }\n      *(undefined4 *)(data1 + 0x18) = tempResult;\n    }\n    else {\n      *(undefined4 *)(data1 + 0x18) = *(undefined4 *)(data1 + 0x1c);\n    }\n    *(undefined *)(data1 + 0x24) = 1;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08009214",
                "FUN_08009264",
                "FUN_08002978",
                "FUN_08009228"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080029d8",
            "calling": [
                "FUN_08002a94"
            ],
            "imported": false,
            "current_name": "process_data_080029d8"
        },
        "FUN_08007c5e": {
            "renaming": {
                "FUN_08007c5e": "set_global_value_08007c5e",
                "param_1": "value"
            },
            "code": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid setGlobalValue_08007c5e(undefined4 value)\n\n{\n  _DAT_40000038 = value;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007c5e",
            "calling": [
                "FUN_08005790"
            ],
            "imported": false,
            "current_name": "set_global_value_08007c5e"
        },
        "FUN_08005760": {
            "renaming": {
                "FUN_08005760": "process_data_08005760"
            },
            "code": "\nvoid processData_08005760(void)\n\n{\n  FUN_080052ac(*(undefined2 *)(PTR_DAT_08005774 + 0x18));\n  return;\n}\n\n",
            "called": [
                "FUN_080052ac"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005760",
            "calling": [
                "FUN_08007c7c"
            ],
            "imported": false,
            "current_name": "process_data_08005760"
        },
        "FUN_08008b24": {
            "renaming": {
                "FUN_08008b24": "check_status_08008b24",
                "in_CY": "statusFlag"
            },
            "code": "\nbool checkStatus_08008b24(void)\n\n{\n  char statusFlag;\n  \n  FUN_08008b00();\n  return statusFlag == '\\0';\n}\n\n",
            "called": [
                "FUN_08008b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b24",
            "calling": [
                "FUN_08003004",
                "FUN_080098d0",
                "FUN_08009b24"
            ],
            "imported": false,
            "current_name": "check_status_08008b24"
        },
        "FUN_08002814": {
            "renaming": {
                "FUN_08002814": "do_nothing_08002814"
            },
            "code": "\nvoid do_nothing_08002814(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002814",
            "calling": [
                "FUN_08002408",
                "FUN_08001d4c",
                "FUN_08004148"
            ],
            "imported": false,
            "current_name": "do_nothing_08002814"
        },
        "FUN_0800587c": {
            "renaming": {
                "FUN_0800587c": "update_data_0800587c"
            },
            "code": "\nvoid updateData_0800587c(void)\n\n{\n  if (PTR_DAT_0800589c[1] == '\\x03') {\n    PTR_DAT_0800589c[1] = 4;\n    PTR_DAT_0800589c[0x10] = 0;\n  }\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800587c",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "update_data_0800587c"
        },
        "FUN_08008a02": {
            "renaming": {
                "FUN_08008a02": "calculate_result_08008a02",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "tempVar1",
                "unaff_r4": "unaffectedVar",
                "uVar2": "maskedVar1",
                "uVar3": "maskedVar2",
                "in_r12": "inputMask",
                "bVar4": "zeroFlag"
            },
            "code": "\nulonglong calculate_result_08008a02(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint tempVar1;\n  uint unaffectedVar;\n  uint maskedVar1;\n  uint maskedVar2;\n  uint inputMask;\n  bool zeroFlag;\n  \n  maskedVar1 = inputMask & input4 >> 0x14;\n  maskedVar2 = input2;\n  if (unaffectedVar != inputMask || maskedVar1 != inputMask) {\n    if (unaffectedVar == inputMask) {\n      if (((input1 | input2 << 0xc) == 0) && (input1 = input3, maskedVar2 = input4, maskedVar1 != inputMask)\n         ) {\nLAB_08008874:\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (maskedVar1 == inputMask) {\n      input1 = input3;\n      maskedVar2 = input4;\n      if ((input3 | input4 << 0xc) == 0) {\nLAB_08008838:\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      zeroFlag = (input1 | input2 << 1) == 0;\n      if (!zeroFlag) {\n        zeroFlag = (input3 | input4 << 1) == 0;\n      }\n      if (!zeroFlag) {\n        if (unaffectedVar == 0) {\n          maskedVar2 = input2 & 0x80000000;\n          do {\n            tempVar1 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(tempVar1 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | maskedVar2;\n          if (maskedVar1 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          maskedVar2 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(maskedVar2 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) goto LAB_08008874;\n      if ((input3 | input4 << 1) != 0) goto LAB_08008838;\n    }\n  }\n  return CONCAT44(maskedVar2,input1) | 0x7ff8000000000000;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008a02",
            "calling": [
                "FUN_08008894"
            ],
            "imported": false,
            "current_name": "calculate_result_08008a02"
        },
        "FUN_0800369c": {
            "renaming": {
                "FUN_0800369c": "print_characters_0800369c",
                "param_1": "input_string",
                "local_c": "current_char_ptr"
            },
            "code": "\nvoid print_characters_0800369c(char *input_string)\n\n{\n  char *current_char_ptr;\n  \n  current_char_ptr = input_string;\n  while (*current_char_ptr != '\\0') {\n    FUN_08008250(*current_char_ptr);\n    current_char_ptr = current_char_ptr + 1;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800369c",
            "calling": [
                "FUN_080039bc",
                "FUN_08004900"
            ],
            "imported": false,
            "current_name": "print_characters_0800369c"
        },
        "FUN_08005a98": {
            "renaming": {
                "FUN_08005a98": "wait_until_sum_reaches_threshold_08005a98",
                "param_1": "threshold_offset",
                "iVar1": "first_random_value",
                "uVar2": "current_random_value"
            },
            "code": "\nvoid wait_until_sum_reaches_threshold_08005a98(int threshold_offset)\n\n{\n  int first_random_value;\n  uint current_random_value;\n  \n  first_random_value = FUN_08005a84();\n  do {\n    current_random_value = FUN_08005a84();\n  } while (current_random_value < (uint)(threshold_offset + first_random_value));\n  return;\n}\n\n",
            "called": [
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a98",
            "calling": [
                "FUN_080002a0"
            ],
            "imported": false,
            "current_name": "wait_until_sum_reaches_threshold_08005a98"
        },
        "FUN_08008cdc": {
            "renaming": {
                "FUN_08008cdc": "calculate_result_08008cdc",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "unused_param",
                "param_4": "temp_param",
                "iVar1": "temp_var1",
                "uVar2": "temp_var2",
                "uVar3": "temp_var3",
                "uVar4": "temp_var4",
                "uVar5": "temp_var5",
                "iVar6": "temp_var6",
                "bVar7": "condition"
            },
            "code": "\nuint calculate_result_08008cdc(uint input_1,uint input_2,undefined4 unused_param,uint temp_param)\n\n{\n  int temp_var1;\n  uint temp_var2;\n  uint temp_var3;\n  uint temp_var4;\n  uint temp_var5;\n  int temp_var6;\n  bool condition;\n  \n  temp_var3 = input_1 << 1;\n  condition = temp_var3 == 0;\n  if (!condition) {\n    temp_param = input_2 << 1;\n    condition = temp_param == 0;\n  }\n  if (!condition) {\n    condition = temp_var3 == temp_param;\n  }\n  temp_var6 = (int)temp_var3 >> 0x18;\n  if (!condition) {\n    condition = temp_var6 == -1;\n  }\n  if (!condition) {\n    condition = (int)temp_param >> 0x18 == -1;\n  }\n  if (condition) {\n    temp_var1 = (int)(input_2 << 1) >> 0x18;\n    if (temp_var6 == -1 || temp_var1 == -1) {\n      temp_var3 = input_2;\n      if (temp_var6 == -1) {\n        temp_var3 = input_1;\n      }\n      if (temp_var6 != -1 || temp_var1 != -1) {\n        input_2 = temp_var3;\n      }\n      condition = (temp_var3 & 0x7fffff) == 0;\n      if (condition) {\n        condition = (input_2 & 0x7fffff) == 0;\n      }\n      if (condition) {\n        condition = temp_var3 == input_2;\n      }\n      if (!condition) {\n        temp_var3 = temp_var3 | 0x400000;\n      }\n      return temp_var3;\n    }\n    if (((input_1 ^ input_2) & 0x7fffffff) != 0) {\n      if (temp_var3 == 0) {\n        input_1 = input_2;\n      }\n      return input_1;\n    }\n    if (input_1 != input_2) {\n      return 0;\n    }\n    if ((temp_var3 & 0xff000000) == 0) {\n      temp_var3 = input_1 << 1;\n      if ((input_1 & 0x80000000) != 0) {\n        temp_var3 = temp_var3 | 0x80000000;\n      }\n      return temp_var3;\n    }\n    if (temp_var3 < 0xfe000000) {\n      return input_1 + 0x800000;\n    }\n    input_1 = input_1 & 0x80000000;\nLAB_08008e12:\n    return input_1 | 0x7f800000;\n  }\n  temp_var3 = temp_var3 >> 0x18;\n  temp_param = temp_param >> 0x18;\n  temp_var5 = temp_param - temp_var3;\n  condition = temp_var5 != 0;\n  temp_var4 = temp_var3;\n  if (condition && temp_var3 <= temp_param) {\n    temp_var4 = temp_var3 + temp_var5;\n  }\n  if (condition && temp_var3 <= temp_param) {\n    input_2 = input_2 ^ input_1;\n  }\n  if (condition && temp_var3 <= temp_param) {\n    input_1 = input_1 ^ input_2;\n  }\n  if (condition && temp_var3 <= temp_param) {\n    input_2 = input_2 ^ input_1;\n  }\n  if (temp_param < temp_var3) {\n    temp_var5 = -temp_var5;\n  }\n  if (0x19 < temp_var5) {\n    return input_1;\n  }\n  temp_var3 = input_1 & 0xffffff | 0x800000;\n  if ((input_1 & 0x80000000) != 0) {\n    temp_var3 = -temp_var3;\n  }\n  temp_var2 = input_2 & 0xffffff | 0x800000;\n  if ((input_2 & 0x80000000) != 0) {\n    temp_var2 = -temp_var2;\n  }\n  if (temp_var4 == temp_var5) {\n    temp_var2 = temp_var2 ^ 0x800000;\n    if (temp_var4 == 0) {\n      temp_var3 = temp_var3 ^ 0x800000;\n      temp_var4 = 1;\n    }\n    else {\n      temp_var5 = temp_var5 - 1;\n    }\n  }\n  temp_var3 = temp_var3 + ((int)temp_var2 >> (temp_var5 & 0xff));\n  temp_var2 = temp_var2 << (0x20 - temp_var5 & 0xff);\n  input_1 = temp_var3 & 0x80000000;\n  if ((int)temp_var3 < 0) {\n    condition = temp_var2 != 0;\n    temp_var2 = -temp_var2;\n    temp_var3 = -temp_var3 - (uint)condition;\n  }\n  if (temp_var3 < 0x800000) {\n    temp_var5 = temp_var2 & 0x80000000;\n    temp_var2 = temp_var2 << 1;\n    temp_var3 = temp_var3 * 2 + (uint)(temp_var5 != 0);\n    temp_var5 = temp_var4 - 2;\n    if (temp_var4 - 1 == 0 || temp_var3 < 0x800000) {\n      temp_var6 = count_leading_zeroes(temp_var3);\n      temp_var4 = temp_var6 - 8;\n      temp_var3 = temp_var3 << (temp_var4 & 0xff);\n      if ((int)temp_var5 < (int)temp_var4) {\n        temp_var3 = temp_var3 >> (-(temp_var5 - temp_var4) & 0xff);\n      }\n      else {\n        temp_var3 = temp_var3 + (temp_var5 - temp_var4) * 0x800000;\n      }\n      return temp_var3 | input_1;\n    }\n  }\n  else {\n    temp_var5 = temp_var4 - 1;\n    if (0xffffff < temp_var3) {\n      temp_var5 = temp_var3 & 1;\n      temp_var3 = temp_var3 >> 1;\n      temp_var2 = (uint)(temp_var5 != 0) << 0x1f | temp_var2 >> 1;\n      temp_var5 = temp_var4;\n      if (0xfd < temp_var4) goto LAB_08008e12;\n    }\n  }\n  temp_var3 = temp_var3 + temp_var5 * 0x800000 + (uint)(0x7fffffff < temp_var2);\n  if (temp_var2 == 0x80000000) {\n    temp_var3 = temp_var3 & 0xfffffffe;\n  }\n  return temp_var3 | input_1;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008cdc",
            "calling": [
                "FUN_080005b4",
                "FUN_080028bc",
                "FUN_08003004",
                "FUN_08003826",
                "FUN_08002978",
                "FUN_08002908",
                "FUN_08001f00",
                "FUN_08004940"
            ],
            "imported": false,
            "current_name": "calculate_result_08008cdc"
        },
        "FUN_080044e8": {
            "renaming": {
                "FUN_080044e8": "process_data_080044e8",
                "iVar1": "result",
                "uVar2": "convertedValue",
                "uVar3": "tempValue",
                "auStack_18": "dataBuffer",
                "local_a": "bufferIndex",
                "local_9": "iteration"
            },
            "code": "\nvoid processData_080044e8(void)\n\n{\n  int result;\n  undefined4 convertedValue;\n  undefined8 tempValue;\n  undefined4 dataBuffer [3];\n  byte bufferIndex;\n  byte iteration;\n  \n  iteration = 0;\n  while( true ) {\n    if (7 < iteration) {\n      FUN_080036c6(PTR_s__G92__080046c8);\n      for (bufferIndex = 0; bufferIndex < 3; bufferIndex = bufferIndex + 1) {\n        if ((PTR_DAT_080046bc[0x28] & 1) == 0) {\n          FUN_08003826(*(undefined4 *)(PTR_DAT_080046cc + (bufferIndex + 10) * 4 + 4));\n        }\n        else {\n          tempValue = FUN_08008590(*(undefined4 *)(PTR_DAT_080046cc + (bufferIndex + 10) * 4 + 4));\n          tempValue = FUN_08008640((int)tempValue,(int)((ulonglong)tempValue >> 0x20),DAT_08004690,DAT_08004694)\n          ;\n          convertedValue = FUN_08008c30((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n          FUN_08003826(convertedValue);\n        }\n        if (bufferIndex < 2) {\n          FUN_080036c6(PTR_DAT_080046c0);\n        }\n        else {\n          FUN_080036c6(PTR_DAT_080046c4);\n        }\n      }\n      return;\n    }\n    result = FUN_08004d7c(iteration,dataBuffer);\n    if (result == 0) break;\n    FUN_080036c6(PTR_DAT_08004698);\n    switch(iteration) {\n    case 0:\n      FUN_080036c6(PTR_DAT_0800469c);\n      break;\n    case 1:\n      FUN_080036c6(PTR_DAT_080046a0);\n      break;\n    case 2:\n      FUN_080036c6(PTR_DAT_080046a4);\n      break;\n    case 3:\n      FUN_080036c6(PTR_DAT_080046a8);\n      break;\n    case 4:\n      FUN_080036c6(PTR_DAT_080046ac);\n      break;\n    case 5:\n      FUN_080036c6(PTR_DAT_080046b0);\n      break;\n    case 6:\n      FUN_080036c6(PTR_DAT_080046b4);\n      break;\n    case 7:\n      FUN_080036c6(PTR_DAT_080046b8);\n    }\n    for (bufferIndex = 0; bufferIndex < 3; bufferIndex = bufferIndex + 1) {\n      if ((PTR_DAT_080046bc[0x28] & 1) == 0) {\n        FUN_08003826(dataBuffer[bufferIndex]);\n      }\n      else {\n        tempValue = FUN_08008590(dataBuffer[bufferIndex]);\n        tempValue = FUN_08008640((int)tempValue,(int)((ulonglong)tempValue >> 0x20),DAT_08004690,DAT_08004694);\n        convertedValue = FUN_08008c30((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n        FUN_08003826(convertedValue);\n      }\n      if (bufferIndex < 2) {\n        FUN_080036c6(PTR_DAT_080046c0);\n      }\n      else {\n        FUN_080036c6(PTR_DAT_080046c4);\n      }\n    }\n    iteration = iteration + 1;\n  }\n  FUN_08004030(10);\n  return;\n}\n\n",
            "called": [
                "FUN_08008640",
                "FUN_08008c30",
                "FUN_08004d7c",
                "FUN_08004030",
                "FUN_080036c6",
                "FUN_08003826",
                "FUN_08008590"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080044e8",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "process_data_080044e8"
        },
        "FUN_08006c9c": {
            "renaming": {
                "FUN_08006c9c": "check_and_update_data_08006c9c",
                "param_1": "inputValue",
                "bVar1": "isValid"
            },
            "code": "\nbool checkAndUpdateData_08006c9c(int inputValue)\n\n{\n  bool isValid;\n  \n  isValid = inputValue - 1U < 0x1000000;\n  if (isValid) {\n    DAT_08006cdc[1] = inputValue + -1;\n    FUN_08006b00(0xffffffff,0xf);\n    DAT_08006cdc[2] = 0;\n    *DAT_08006cdc = 7;\n  }\n  return !isValid;\n}\n\n",
            "called": [
                "FUN_08006b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c9c",
            "calling": [
                "FUN_08006d72"
            ],
            "imported": false,
            "current_name": "check_and_update_data_08006c9c"
        },
        "FUN_0800a5a0": {
            "renaming": {
                "FUN_0800a5a0": "FUNC_0800a5a0"
            },
            "code": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nuint FUNC_0800a5a0(int param_1,undefined8 *param_2,int param_3,int param_4,int param_5,int param_6)\n\n{\n  undefined4 *puVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  uint *puVar5;\n  undefined4 uVar6;\n  uint **ppuVar7;\n  undefined4 uVar8;\n  int iVar9;\n  undefined4 *puVar10;\n  undefined4 uVar11;\n  uint uVar12;\n  uint *puVar13;\n  int iVar14;\n  int iVar15;\n  undefined8 *puVar16;\n  int iVar17;\n  undefined4 *puVar18;\n  undefined8 *puVar19;\n  undefined4 uVar20;\n  int iVar21;\n  undefined8 *puVar22;\n  undefined4 *puVar23;\n  bool bVar24;\n  undefined8 uVar25;\n  undefined8 uVar26;\n  undefined8 uVar27;\n  undefined8 uVar28;\n  ulonglong uVar29;\n  undefined8 *local_284;\n  int local_280;\n  int local_270;\n  int local_26c;\n  uint *local_260 [2];\n  uint local_258 [20];\n  undefined8 uStack_208;\n  undefined8 local_168;\n  int local_160 [38];\n  undefined8 uStack_c8;\n  \n  uVar28 = CONCAT44(param_5,param_5);\n  iVar15 = *(int *)(PTR_DAT_0800a894 + param_5 * 4);\n  iVar9 = param_4 + -1;\n  local_260[1] = (uint *)param_2;\n  if (param_3 + 0x14 < 0 == SCARRY4(param_3,0x14)) {\n    local_26c = (int)((longlong)DAT_0800a898 * (longlong)(param_3 + -3) >> 0x22) -\n                (param_3 + -3 >> 0x1f);\n    local_270 = (local_26c + 1) * -0x18;\n  }\n  else {\n    local_270 = -0x18;\n    local_26c = 0;\n  }\n  local_270 = param_3 + local_270;\n  iVar17 = local_26c - iVar9;\n  if (-1 < iVar15 + iVar9) {\n    iVar21 = iVar15 + iVar9 + 1 + iVar17;\n    puVar16 = &uStack_208;\n    do {\n      while (iVar17 < 0) {\n        iVar17 = iVar17 + 1;\n        *(undefined4 *)puVar16 = 0;\n        *(undefined4 *)((int)puVar16 + 4) = 0;\n        puVar16 = puVar16 + 1;\n        if (iVar17 == iVar21) goto LAB_0800a626;\n      }\n      uVar26 = FUN_0800856c(*(undefined4 *)(param_6 + iVar17 * 4));\n      iVar17 = iVar17 + 1;\n      *puVar16 = uVar26;\n      puVar16 = puVar16 + 1;\n    } while (iVar17 != iVar21);\n  }\nLAB_0800a626:\n  puVar10 = (undefined4 *)(param_1 + -8);\n  if (-1 < iVar15) {\n    puVar22 = &uStack_208 + param_4;\n    iVar17 = iVar9;\n    puVar16 = &uStack_c8;\n    do {\n      if (iVar9 < 0) {\n        uVar26 = 0;\n      }\n      else {\n        uVar26 = 0;\n        puVar23 = puVar10;\n        puVar19 = puVar22;\n        do {\n          puVar18 = puVar23 + 2;\n          uVar25 = FUN_08008640(*puVar18,puVar23[3],*(undefined4 *)(puVar19 + -1),\n                                *(undefined4 *)((int)puVar19 + -4));\n          uVar26 = FUN_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                (int)((ulonglong)uVar25 >> 0x20));\n          puVar23 = puVar18;\n          puVar19 = puVar19 + -1;\n        } while (puVar18 != puVar10 + param_4 * 2);\n      }\n      iVar17 = iVar17 + 1;\n      *puVar16 = uVar26;\n      puVar22 = puVar22 + 1;\n      puVar16 = puVar16 + 1;\n    } while (iVar17 != iVar15 + param_4);\n  }\n  local_260[0] = local_258 + iVar15 + -1;\n  iVar17 = iVar15;\n  do {\n    uVar26 = CONCAT44(*(undefined4 *)((int)&uStack_c8 + iVar17 * 8 + 4),\n                      *(undefined4 *)(&uStack_c8 + iVar17));\n    if (0 < iVar17) {\n      puVar16 = &uStack_c8 + iVar17;\n      puVar5 = local_258;\n      do {\n        uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n        FUN_08008640((int)uVar26,uVar6,0,DAT_0800a89c);\n        FUN_08008ba0();\n        uVar25 = FUN_0800856c();\n        uVar8 = (undefined4)((ulonglong)uVar25 >> 0x20);\n        uVar27 = FUN_08008640((int)uVar25,uVar8,0,DAT_0800a8a0);\n        FUN_080082d0((int)uVar26,uVar6,(int)uVar27,(int)((ulonglong)uVar27 >> 0x20));\n        uVar2 = FUN_08008ba0();\n        puVar22 = puVar16 + -1;\n        uVar6 = *(undefined4 *)puVar22;\n        uVar11 = *(undefined4 *)((int)puVar16 + -4);\n        *puVar5 = uVar2;\n        uVar26 = FUN_080082d4((int)uVar25,uVar8,uVar6,uVar11);\n        puVar16 = puVar22;\n        puVar5 = puVar5 + 1;\n      } while (puVar22 != &uStack_c8);\n    }\n    uVar26 = FUN_0800b2e8((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),local_270);\n    uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    FUN_08008640((int)uVar26,uVar8,0,0x3fc00000);\n    uVar25 = FUN_080094c0();\n    uVar25 = FUN_08008640((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),0,DAT_0800a8a4);\n    uVar26 = FUN_080082d0((int)uVar26,uVar8,(int)uVar25,(int)((ulonglong)uVar25 >> 0x20));\n    uVar2 = FUN_08008ba0();\n    uVar25 = FUN_0800856c();\n    uVar26 = FUN_080082d0((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                          (int)((ulonglong)uVar25 >> 0x20));\n    uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    uVar8 = (undefined4)uVar26;\n    if (local_270 < 1) {\n      if (local_270 == 0) {\n        iVar21 = (int)local_258[iVar17 + -1] >> 0x17;\n        goto joined_r0x0800a8b8;\n      }\n      iVar21 = FUN_08008b4c(uVar8,uVar6,0,DAT_0800ac3c);\n      if (iVar21 != 0) {\n        uVar2 = uVar2 + 1;\n        if (iVar17 < 1) {\n          uVar26 = FUN_080082d0(0,DAT_0800ac38,uVar8,uVar6);\n          iVar21 = 2;\n          goto LAB_0800a7a4;\n        }\n        iVar21 = 2;\n        goto LAB_0800a8c8;\n      }\n    }\n    else {\n      iVar4 = (int)local_258[iVar17 + -1] >> (0x18U - local_270 & 0xff);\n      uVar12 = local_258[iVar17 + -1] - (iVar4 << (0x18U - local_270 & 0xff));\n      iVar21 = (int)uVar12 >> (0x17U - local_270 & 0xff);\n      local_258[iVar17 + -1] = uVar12;\n      uVar2 = uVar2 + iVar4;\njoined_r0x0800a8b8:\n      if (0 < iVar21) {\n        uVar2 = uVar2 + 1;\n        if (iVar17 < 1) {\n          uVar12 = 0;\n        }\n        else {\nLAB_0800a8c8:\n          uVar12 = local_258[0];\n          if (local_258[0] == 0) {\n            if (iVar17 != 1) {\n              puVar5 = local_258;\n              iVar4 = 1;\n              do {\n                puVar5 = puVar5 + 1;\n                uVar12 = *puVar5;\n                if (uVar12 != 0) {\n                  iVar14 = iVar4 + 1;\n                  goto LAB_0800a8e2;\n                }\n                iVar4 = iVar4 + 1;\n              } while (iVar4 != iVar17);\n            }\n          }\n          else {\n            iVar14 = 1;\n            iVar4 = 0;\nLAB_0800a8e2:\n            local_258[iVar4] = 0x1000000 - uVar12;\n            if (iVar14 < iVar17) {\n              uVar12 = local_258[iVar14];\n              puVar5 = local_258 + iVar14;\n              while( true ) {\n                puVar13 = puVar5 + 1;\n                *puVar5 = 0xffffff - uVar12;\n                if (puVar13 == local_258 + iVar17) break;\n                uVar12 = *puVar13;\n                puVar5 = puVar13;\n              }\n            }\n            uVar12 = 1;\n          }\n        }\n        if (0 < local_270) {\n          if (local_270 == 1) {\n            local_258[iVar17 + -1] = local_258[iVar17 + -1] & 0x7fffff;\n          }\n          else if (local_270 == 2) {\n            local_258[iVar17 + -1] = local_258[iVar17 + -1] & 0x3fffff;\n          }\n        }\n        if (iVar21 == 2) {\n          uVar26 = FUN_080082d0(0,DAT_0800ac38,uVar8,uVar6);\n          if (uVar12 != 0) {\n            uVar25 = FUN_0800b2e8(0,DAT_0800ac38,local_270);\n            uVar26 = FUN_080082d0((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                  (int)((ulonglong)uVar25 >> 0x20));\n          }\n        }\n      }\n    }\nLAB_0800a7a4:\n    uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    iVar4 = FUN_08008b10((int)uVar26,uVar8,0,0);\n    if (iVar4 == 0) {\n      uVar26 = FUN_0800b2e8((int)uVar26,uVar8,-local_270);\n      uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n      uVar8 = (undefined4)uVar26;\n      iVar9 = FUN_08008b4c(uVar8,uVar6,0,DAT_0800ade4);\n      if (iVar9 == 0) {\n        uVar12 = FUN_08008ba0(uVar8,uVar6);\n        local_258[iVar17] = uVar12;\n        iVar4 = iVar17;\n      }\n      else {\n        FUN_08008640(uVar8,uVar6,0,DAT_0800ade8);\n        uVar12 = FUN_08008ba0();\n        uVar26 = FUN_0800856c();\n        uVar26 = FUN_08008640((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),0,DAT_0800ade4);\n        FUN_080082d0(uVar8,uVar6,(int)uVar26,(int)((ulonglong)uVar26 >> 0x20));\n        uVar3 = FUN_08008ba0();\n        local_270 = local_270 + 0x18;\n        local_258[iVar17] = uVar3;\n        local_258[iVar17 + 1] = uVar12;\n        iVar4 = iVar17 + 1;\n      }\n      goto LAB_0800a9f6;\n    }\n    iVar4 = iVar17 + -1;\n    if (iVar15 <= iVar4) {\n      uVar12 = 0;\n      puVar5 = local_258 + iVar17 + 0x3fffffff;\n      do {\n        puVar13 = puVar5 + -1;\n        uVar12 = uVar12 | *puVar5;\n        puVar5 = puVar13;\n      } while (puVar13 != local_260[0]);\n      if (uVar12 != 0) break;\n    }\n    if (local_258[iVar15 + -1] == 0) {\n      local_280 = 1;\n      ppuVar7 = local_260 + iVar15;\n      do {\n        puVar5 = *ppuVar7;\n        local_280 = local_280 + 1;\n        ppuVar7 = ppuVar7 + -1;\n      } while (puVar5 == (uint *)0x0);\n      local_280 = iVar17 + local_280;\n    }\n    else {\n      local_280 = iVar17 + 1;\n    }\n    iVar21 = iVar17 + 1;\n    puVar23 = (undefined4 *)(param_6 + (iVar21 + local_26c + 0x3fffffff) * 4);\n    puVar16 = &uStack_208 + iVar17 + param_4;\n    local_284 = &uStack_c8 + iVar21;\n    do {\n      puVar23 = puVar23 + 1;\n      uVar26 = FUN_0800856c(*puVar23);\n      *puVar16 = uVar26;\n      puVar22 = puVar16 + 1;\n      if (iVar9 < 0) {\n        uVar25 = 0;\n      }\n      else {\n        uVar25 = 0;\n        puVar18 = puVar10;\n        while( true ) {\n          puVar16 = puVar16 + -1;\n          puVar1 = puVar18 + 2;\n          uVar26 = FUN_08008640((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),*puVar1,puVar18[3]);\n          uVar25 = FUN_080082d4((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),(int)uVar26,\n                                (int)((ulonglong)uVar26 >> 0x20));\n          if (puVar1 == puVar10 + param_4 * 2) break;\n          uVar26 = *puVar16;\n          puVar18 = puVar1;\n        }\n      }\n      *local_284 = uVar25;\n      iVar21 = iVar21 + 1;\n      iVar17 = local_280;\n      puVar16 = puVar22;\n      local_284 = local_284 + 1;\n    } while (iVar21 <= local_280);\n  } while( true );\n  local_270 = local_270 + -0x18;\n  if (local_258[iVar4] == 0) {\n    puVar5 = local_258 + iVar17 + 0x3ffffffe;\n    do {\n      uVar12 = *puVar5;\n      iVar4 = iVar4 + -1;\n      local_270 = local_270 + -0x18;\n      puVar5 = puVar5 + -1;\n    } while (uVar12 == 0);\n  }\nLAB_0800a9f6:\n  uVar26 = FUN_0800b2e8(0,DAT_0800ac38,local_270);\n  if (iVar4 < 0) {\n    if (2 < param_5) {\n      if (param_5 == 3) {\n        uVar28 = 0;\nLAB_0800abe4:\n        if (iVar21 == 0) {\n          *local_260[1] = (undefined4)local_168;\n          *(int *)((int)local_260[1] + 4) = local_168._4_4_;\n          *(undefined8 *)((int)local_260[1] + 0x10) = uVar28;\n          *(int *)((int)local_260[1] + 8) = local_160[0];\n          *(int *)((int)local_260[1] + 0xc) = local_160[1];\n          return uVar2 & 7;\n        }\n        *(int *)((int)local_260[1] + 0x10) = (int)uVar28;\n        *(int *)((int)local_260[1] + 8) = local_160[0];\n        *(int *)((int)local_260[1] + 0x14) = (int)((ulonglong)uVar28 >> 0x20) + -0x80000000;\n        *(int *)((int)local_260[1] + 4) = local_168._4_4_ + -0x80000000;\n        *(int *)((int)local_260[1] + 0xc) = local_160[1] + -0x80000000;\n        *local_260[1] = (undefined4)local_168;\n        return uVar2 & 7;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param_5 < 1) {\n      if (param_5 != 0) goto LAB_0800ab0e;\nLAB_0800aafc:\n      iVar9 = (int)((ulonglong)uVar28 >> 0x20);\n      if (iVar21 != 0) {\n        iVar9 = iVar9 + -0x80000000;\n      }\n      *local_260[1] = (int)uVar28;\n      *(int *)((int)local_260[1] + 4) = iVar9;\nLAB_0800ab0e:\n      return uVar2 & 7;\n    }\n    uVar28 = 0;\n  }\n  else {\n    puVar22 = &uStack_c8 + iVar4;\n    puVar5 = local_258 + iVar4 + 1;\n    puVar16 = &uStack_c8 + iVar4 + 1;\n    do {\n      uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n      puVar5 = puVar5 + -1;\n      uVar25 = FUN_0800856c(*puVar5);\n      uVar25 = FUN_08008640((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),(int)uVar26,uVar8);\n      puVar16 = puVar16 + -1;\n      *puVar16 = uVar25;\n      uVar26 = FUN_08008640((int)uVar26,uVar8,0,DAT_0800ac40);\n    } while (puVar5 != local_258);\n    iVar9 = 0;\n    uVar8 = DAT_0800ac30;\n    uVar6 = DAT_0800ac34;\n    do {\n      DAT_0800ac30 = uVar8;\n      DAT_0800ac34 = uVar6;\n      if (iVar15 < 0) {\n        uVar26 = 0;\n      }\n      else {\n        uVar26 = 0;\n        iVar17 = 0;\n        puVar16 = puVar22;\n        puVar10 = (undefined4 *)PTR_DAT_0800ac44;\n        while( true ) {\n          uVar25 = FUN_08008640(*(undefined4 *)puVar16,*(undefined4 *)((int)puVar16 + 4),uVar8,uVar6\n                               );\n          uVar26 = FUN_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                (int)((ulonglong)uVar25 >> 0x20));\n          iVar17 = iVar17 + 1;\n          if ((iVar15 < iVar17) || (iVar9 < iVar17)) break;\n          uVar8 = *puVar10;\n          uVar6 = puVar10[1];\n          puVar16 = puVar16 + 1;\n          puVar10 = puVar10 + 2;\n        }\n      }\n      bVar24 = iVar9 != iVar4;\n      *(int *)(&local_168 + iVar9) = (int)uVar26;\n      *(int *)((int)&local_168 + (iVar9 * 2 + 1) * 4) = (int)((ulonglong)uVar26 >> 0x20);\n      puVar22 = puVar22 + -1;\n      iVar9 = iVar9 + 1;\n      uVar8 = DAT_0800ac30;\n      uVar6 = DAT_0800ac34;\n    } while (bVar24);\n    if (2 < param_5) {\n      if (param_5 == 3) {\n        if (iVar4 != 0) {\n          puVar16 = &local_168 + iVar4;\n          uVar28 = CONCAT44(*(undefined4 *)((int)&local_168 + (iVar4 * 2 + 1) * 4),\n                            *(undefined4 *)puVar16);\n          do {\n            uVar6 = (undefined4)((ulonglong)uVar28 >> 0x20);\n            uVar8 = (undefined4)uVar28;\n            uVar11 = *(undefined4 *)(puVar16 + -1);\n            uVar20 = *(undefined4 *)((int)puVar16 + -4);\n            uVar28 = FUN_080082d4(uVar8,uVar6,uVar11,uVar20);\n            uVar26 = FUN_080082d0(uVar11,uVar20,(int)uVar28,(int)((ulonglong)uVar28 >> 0x20));\n            uVar26 = FUN_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),uVar8,uVar6);\n            *puVar16 = uVar26;\n            puVar16 = puVar16 + -1;\n            *puVar16 = uVar28;\n          } while (&local_168 != puVar16);\n          if (1 < iVar4) {\n            puVar16 = &local_168 + iVar4;\n            uVar28 = CONCAT44(*(undefined4 *)((int)&local_168 + (iVar4 * 2 + 1) * 4),\n                              *(undefined4 *)puVar16);\n            do {\n              uVar6 = (undefined4)((ulonglong)uVar28 >> 0x20);\n              uVar8 = (undefined4)uVar28;\n              uVar11 = *(undefined4 *)(puVar16 + -1);\n              uVar20 = *(undefined4 *)((int)puVar16 + -4);\n              uVar28 = FUN_080082d4(uVar8,uVar6,uVar11,uVar20);\n              uVar26 = FUN_080082d0(uVar11,uVar20,(int)uVar28,(int)((ulonglong)uVar28 >> 0x20));\n              uVar26 = FUN_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),uVar8,uVar6);\n              *puVar16 = uVar26;\n              puVar16 = puVar16 + -1;\n              *puVar16 = uVar28;\n            } while (&local_168 + 1 != puVar16);\n            uVar28 = 0;\n            puVar16 = &local_168 + iVar4 + 1;\n            do {\n              puVar22 = puVar16 + -1;\n              uVar28 = FUN_080082d4((int)uVar28,(int)((ulonglong)uVar28 >> 0x20),\n                                    *(undefined4 *)puVar22,*(undefined4 *)((int)puVar16 + -4));\n              puVar16 = puVar22;\n            } while (&local_168 + 2 != puVar22);\n            goto LAB_0800abe4;\n          }\n        }\n        uVar28 = 0;\n        goto LAB_0800abe4;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param_5 < 1) {\n      if (param_5 != 0) goto LAB_0800ab0e;\n      puVar16 = &local_168 + iVar4 + 1;\n      do {\n        puVar22 = puVar16 + -1;\n        uVar28 = FUN_080082d4((int)uVar28,(int)((ulonglong)uVar28 >> 0x20),*(undefined4 *)puVar22,\n                              *(undefined4 *)((int)puVar16 + -4));\n        puVar16 = puVar22;\n      } while (&local_168 != puVar22);\n      goto LAB_0800aafc;\n    }\n    uVar28 = 0;\n    puVar16 = &local_168 + iVar4 + 1;\n    do {\n      puVar22 = puVar16 + -1;\n      uVar28 = FUN_080082d4((int)uVar28,(int)((ulonglong)uVar28 >> 0x20),*(undefined4 *)puVar22,\n                            *(undefined4 *)((int)puVar16 + -4));\n      puVar16 = puVar22;\n    } while (&local_168 != puVar22);\n  }\n  iVar9 = (int)((ulonglong)uVar28 >> 0x20);\n  uVar8 = (undefined4)uVar28;\n  if (iVar21 == 0) {\n    *(undefined8 *)local_260[1] = uVar28;\n    uVar29 = FUN_080082d0((undefined4)local_168,local_168._4_4_,uVar8,iVar9);\n    if (iVar4 < 1) goto LAB_0800ad26;\nLAB_0800ad04:\n    iVar9 = 1;\n    puVar16 = &local_168;\n    do {\n      uVar29 = FUN_080082d4((int)uVar29,(int)(uVar29 >> 0x20),*(undefined4 *)(puVar16 + 1),\n                            *(undefined4 *)((int)puVar16 + 0xc));\n      iVar9 = iVar9 + 1;\n      puVar16 = puVar16 + 1;\n    } while (iVar9 <= iVar4);\n    if (iVar21 == 0) goto LAB_0800ad26;\n  }\n  else {\n    *local_260[1] = uVar8;\n    *(int *)((int)local_260[1] + 4) = iVar9 + -0x80000000;\n    uVar29 = FUN_080082d0((undefined4)local_168,local_168._4_4_,uVar8,iVar9);\n    if (0 < iVar4) goto LAB_0800ad04;\n  }\n  uVar29 = uVar29 & 0xffffffff | (ulonglong)((int)(uVar29 >> 0x20) + 0x80000000) << 0x20;\nLAB_0800ad26:\n  *(ulonglong *)((int)local_260[1] + 8) = uVar29;\n  return uVar2 & 7;\n}\n\n",
            "called": [
                "FUN_08008640",
                "FUN_08008b10",
                "FUN_080082d4",
                "FUN_08008b4c",
                "FUN_080082d0",
                "FUN_0800856c",
                "FUN_08008ba0",
                "FUN_0800b2e8",
                "FUN_080094c0"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800a5a0",
            "calling": [
                "FUN_08009d78"
            ],
            "imported": false,
            "current_name": "FUNC_0800a5a0"
        },
        "FUN_0800195c": {
            "renaming": {
                "FUN_0800195c": "update_status_0800195c"
            },
            "code": "\nvoid updateStatus_0800195c(void)\n\n{\n  if ((PTR_DAT_08001990[1] != '\\x06') && ((PTR_DAT_08001990[2] & 0x20) == 0)) {\n    FUN_080025e8();\n    PTR_DAT_08001990[2] = PTR_DAT_08001990[2] | 0x40;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800195c",
            "calling": [
                "FUN_080074c8"
            ],
            "imported": false,
            "current_name": "update_status_0800195c"
        },
        "FUN_08009214": {
            "renaming": {
                "FUN_08009214": "check_status_08009214",
                "in_ZR": "statusFlag"
            },
            "code": "\nbool checkStatus_08009214(void)\n\n{\n  char statusFlag;\n  \n  FUN_08009204();\n  return statusFlag != '\\0';\n}\n\n",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009214",
            "calling": [
                "FUN_08002afc",
                "FUN_080005b4",
                "FUN_08002638",
                "FUN_080029d8",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "check_status_08009214"
        },
        "FUN_08004dd2": {
            "renaming": {
                "FUN_08004dd2": "check_and_initialize_08004dd2",
                "bVar1": "initializationType",
                "iVar2": "initializationResult"
            },
            "code": "\nundefined4 checkAndInitialize_08004dd2(void)\n\n{\n  byte initializationType;\n  int initializationResult;\n  \n  initializationType = FUN_08000310(0);\n  if (initializationType == 5) {\n    initializationResult = FUN_080003ec(PTR_DAT_08004e2c,1,0x40);\n    if (initializationResult == 0) {\n      return 0;\n    }\n  }\n  else {\n    if (4 < initializationType) {\n      return 0;\n    }\n    initializationResult = FUN_080003ec(PTR_DAT_08004e2c,1,0x28);\n    if (initializationResult == 0) {\n      return 0;\n    }\n    FUN_08004c48(0);\n  }\n  return 1;\n}\n\n",
            "called": [
                "FUN_08004c48",
                "FUN_08000310",
                "FUN_080003ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004dd2",
            "calling": [
                "FUN_080051b4"
            ],
            "imported": false,
            "current_name": "check_and_initialize_08004dd2"
        },
        "FUN_08008244": {
            "renaming": {
                "FUN_08008244": "do_nothing_08008244"
            },
            "code": "\nvoid do_nothing_08008244(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008244",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "do_nothing_08008244"
        },
        "FUN_08005778": {
            "renaming": {
                "FUN_08005778": "execute_function_from_pointer_08005778"
            },
            "code": "\nvoid executeFunctionFromPointer_08005778(void)\n\n{\n  FUN_080052ac(*(undefined2 *)PTR_DAT_0800578c);\n  return;\n}\n\n",
            "called": [
                "FUN_080052ac"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005778",
            "calling": [
                "FUN_08007c7c"
            ],
            "imported": false,
            "current_name": "execute_function_from_pointer_08005778"
        },
        "FUN_080028bc": {
            "renaming": {
                "FUN_080028bc": "calculate_result_080028bc",
                "param_1": "input_a",
                "param_2": "input_b",
                "param_3": "input_c",
                "uVar1": "intermediate_result_1",
                "uVar2": "intermediate_result_2"
            },
            "code": "\nundefined4 calculate_result_080028bc(undefined4 input_a,undefined4 input_b,undefined4 input_c)\n\n{\n  undefined4 intermediate_result_1;\n  undefined4 intermediate_result_2;\n  \n  intermediate_result_1 = FUN_08008eec(input_b,input_b);\n  intermediate_result_2 = FUN_08008eec(input_a,input_a);\n  intermediate_result_1 = FUN_08008cd8(intermediate_result_1,intermediate_result_2);\n  intermediate_result_2 = FUN_08008cdc(input_c,input_c);\n  intermediate_result_1 = FUN_08009054(intermediate_result_1,intermediate_result_2);\n  return intermediate_result_1;\n}\n\n",
            "called": [
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_08008cdc",
                "FUN_08009054"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080028bc",
            "calling": [
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_result_080028bc"
        },
        "FUN_08006628": {
            "renaming": {
                "FUN_08006628": "calculate_shifted_value_08006628",
                "uVar1": "initial_value",
                "uVar2": "leading_zeroes"
            },
            "code": "\nundefined4 calculate_shifted_value_08006628(void)\n\n{\n  uint initial_value;\n  uint leading_zeroes;\n  \n  initial_value = FUN_080064ec();\n  leading_zeroes = count_leading_zeroes(0xf000000);\n  *(uint *)PTR_DAT_0800667c =\n       initial_value >> PTR_DAT_08006678[(*(uint *)(DAT_08006674 + 8) & 0xf0) >> (leading_zeroes & 0xff)];\n  return *(undefined4 *)PTR_DAT_0800667c;\n}\n\n",
            "called": [
                "FUN_080064ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006628",
            "calling": [
                "FUN_0800618c",
                "FUN_08006680",
                "FUN_080066cc"
            ],
            "imported": false,
            "current_name": "calculate_shifted_value_08006628"
        },
        "FUN_0800738e": {
            "renaming": {
                "FUN_0800738e": "update_and_execute_0800738e",
                "param_1": "inputValue"
            },
            "code": "\nvoid updateAndExecute_0800738e(ushort inputValue)\n\n{\n  if (((uint)inputValue & *(uint *)(DAT_080073bc + 0x14)) != 0) {\n    *(uint *)(DAT_080073bc + 0x14) = (uint)inputValue;\n    do_nothing_080073c0(inputValue);\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_080073c0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800738e",
            "calling": [],
            "imported": false,
            "current_name": "update_and_execute_0800738e"
        },
        "FUN_08002828": {
            "renaming": {
                "FUN_08002828": "do_nothing_08002828"
            },
            "code": "\nvoid do_nothing_08002828(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002828",
            "calling": [
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "do_nothing_08002828"
        },
        "FUN_080053a0": {
            "renaming": {
                "FUN_080053a0": "process_data_080053a0",
                "uVar1": "memoryAllocationResult",
                "iVar2": "conditionResult"
            },
            "code": "\nvoid processData_080053a0(void)\n\n{\n  undefined4 memoryAllocationResult;\n  int conditionResult;\n  \n  FUN_080052dc(*(undefined2 *)PTR_DAT_080055f0);\n  *(undefined2 *)PTR_DAT_080055f8 = *(undefined2 *)PTR_DAT_080055f4;\n  if (*(int *)PTR_DAT_080055fc == 0) {\n    memoryAllocationResult = FUN_08002f74();\n    *(undefined4 *)PTR_DAT_080055fc = memoryAllocationResult;\n    if (*(int *)PTR_DAT_080055fc == 0) {\n      FUN_080057e4();\n      PTR_DAT_08005600[2] = PTR_DAT_08005600[2] | 4;\n    }\n    else {\n      if (PTR_DAT_08005600[1] == '\\x03') {\n        *(undefined4 *)(PTR_DAT_08005604 + 0x1c) = *(undefined4 *)(*(int *)PTR_DAT_080055fc + 0x28);\n        FUN_08005324(*(undefined4 *)(PTR_DAT_08005604 + 0x1c));\n        *(undefined4 *)(PTR_DAT_08005604 + 0x18) = DAT_08005608;\n      }\n      *(int *)(PTR_DAT_08005604 + 0x20) =\n           (*(int *)(*(int *)PTR_DAT_080055fc + 0x30) >> 1) +\n           *(int *)(*(int *)PTR_DAT_080055fc + 0x30);\n      *(int *)PTR_DAT_08005604 = -(*(int *)(*(int *)PTR_DAT_080055fc + 0x10) >> 1);\n      *(undefined4 *)(PTR_DAT_08005604 + 4) = *(undefined4 *)PTR_DAT_08005604;\n      *(undefined4 *)(PTR_DAT_08005604 + 8) = *(undefined4 *)PTR_DAT_08005604;\n      *(undefined4 *)(PTR_DAT_08005604 + 0xc) = *(undefined4 *)(*(int *)PTR_DAT_080055fc + 0x10);\n      *(undefined4 *)(PTR_DAT_08005604 + 0x10) = 0;\n    }\n  }\n  if (*(int *)PTR_DAT_080055fc != 0) {\n    *(undefined2 *)PTR_DAT_080055f0 = **(undefined2 **)PTR_DAT_080055fc;\n    *(undefined2 *)PTR_DAT_080055f4 = 0;\n    *(int *)PTR_DAT_08005604 = *(int *)(*(int *)PTR_DAT_080055fc + 4) + *(int *)PTR_DAT_08005604;\n    if (0 < *(int *)PTR_DAT_08005604) {\n      *(ushort *)PTR_DAT_080055f4 = *(ushort *)PTR_DAT_080055f4 | 0x10;\n      *(int *)PTR_DAT_08005604 = *(int *)PTR_DAT_08005604 - *(int *)(PTR_DAT_08005604 + 0xc);\n      if ((*(ushort *)PTR_DAT_080055f0 & 0x20) == 0) {\n        *(int *)(PTR_DAT_08005600 + 4) = *(int *)(PTR_DAT_08005600 + 4) + 1;\n      }\n      else {\n        *(int *)(PTR_DAT_08005600 + 4) = *(int *)(PTR_DAT_08005600 + 4) + -1;\n      }\n    }\n    *(int *)(PTR_DAT_08005604 + 4) =\n         *(int *)(*(int *)PTR_DAT_080055fc + 8) + *(int *)(PTR_DAT_08005604 + 4);\n    if (0 < *(int *)(PTR_DAT_08005604 + 4)) {\n      *(ushort *)PTR_DAT_080055f4 = *(ushort *)PTR_DAT_080055f4 | 0x440;\n      *(int *)(PTR_DAT_08005604 + 4) =\n           *(int *)(PTR_DAT_08005604 + 4) - *(int *)(PTR_DAT_08005604 + 0xc);\n      if ((*(ushort *)PTR_DAT_080055f0 & 0x80) == 0) {\n        *(int *)(PTR_DAT_08005600 + 8) = *(int *)(PTR_DAT_08005600 + 8) + 1;\n      }\n      else {\n        *(int *)(PTR_DAT_08005600 + 8) = *(int *)(PTR_DAT_08005600 + 8) + -1;\n      }\n    }\n    *(int *)(PTR_DAT_08005604 + 8) =\n         *(int *)(*(int *)PTR_DAT_080055fc + 0xc) + *(int *)(PTR_DAT_08005604 + 8);\n    if (0 < *(int *)(PTR_DAT_08005604 + 8)) {\n      *(ushort *)PTR_DAT_080055f4 = *(ushort *)PTR_DAT_080055f4 | 0x100;\n      *(int *)(PTR_DAT_08005604 + 8) =\n           *(int *)(PTR_DAT_08005604 + 8) - *(int *)(PTR_DAT_08005604 + 0xc);\n      if ((*(ushort *)PTR_DAT_080055f0 & 0x200) == 0) {\n        *(int *)(PTR_DAT_08005600 + 0xc) = *(int *)(PTR_DAT_08005600 + 0xc) + 1;\n      }\n      else {\n        *(int *)(PTR_DAT_08005600 + 0xc) = *(int *)(PTR_DAT_08005600 + 0xc) + -1;\n      }\n    }\n    *(int *)(PTR_DAT_08005604 + 0x10) = *(int *)(PTR_DAT_08005604 + 0x10) + 1;\n    if (*(uint *)(PTR_DAT_08005604 + 0x10) < *(uint *)(*(int *)PTR_DAT_080055fc + 0x10)) {\n      if (PTR_DAT_08005600[1] == '\\x04') {\n        conditionResult = FUN_08005360();\n        if (conditionResult != 0) {\n          if (*(uint *)(*(int *)PTR_DAT_080055fc + 0x30) < *(uint *)(PTR_DAT_08005604 + 0x1c)) {\n            *(int *)(PTR_DAT_08005604 + 0x1c) =\n                 *(int *)(PTR_DAT_08005604 + 0x1c) - *(int *)(*(int *)PTR_DAT_080055fc + 0x30);\n            FUN_08005324(*(undefined4 *)(PTR_DAT_08005604 + 0x1c));\n          }\n          else {\n            FUN_080057e4();\n            PTR_DAT_08005600[2] = PTR_DAT_08005600[2] | 4;\n          }\n        }\n      }\n      else if (*(uint *)(PTR_DAT_08005748 + 0x10) < *(uint *)(*(int *)PTR_DAT_0800574c + 0x34)) {\n        conditionResult = FUN_08005360();\n        if (conditionResult != 0) {\n          *(int *)(PTR_DAT_08005748 + 0x1c) =\n               *(int *)(PTR_DAT_08005748 + 0x1c) + *(int *)(*(int *)PTR_DAT_0800574c + 0x30);\n          if (*(uint *)(*(int *)PTR_DAT_0800574c + 0x3c) <= *(uint *)(PTR_DAT_08005748 + 0x1c)) {\n            *(undefined4 *)(PTR_DAT_08005748 + 0x1c) =\n                 *(undefined4 *)(*(int *)PTR_DAT_0800574c + 0x3c);\n          }\n          FUN_08005324(*(undefined4 *)(PTR_DAT_08005748 + 0x1c));\n        }\n      }\n      else if (*(uint *)(PTR_DAT_08005748 + 0x10) < *(uint *)(*(int *)PTR_DAT_0800574c + 0x38)) {\n        if (*(int *)(PTR_DAT_08005748 + 0x1c) != *(int *)(*(int *)PTR_DAT_0800574c + 0x3c)) {\n          *(undefined4 *)(PTR_DAT_08005748 + 0x1c) =\n               *(undefined4 *)(*(int *)PTR_DAT_0800574c + 0x3c);\n          FUN_08005324(*(undefined4 *)(PTR_DAT_08005748 + 0x1c));\n        }\n      }\n      else if (*(int *)(PTR_DAT_08005748 + 0x10) == *(int *)(*(int *)PTR_DAT_0800574c + 0x38)) {\n        if (*(int *)(PTR_DAT_08005748 + 0x1c) == *(int *)(*(int *)PTR_DAT_0800574c + 0x3c)) {\n          *(undefined4 *)(PTR_DAT_08005748 + 0x18) = DAT_08005750;\n        }\n        else {\n          *(int *)(PTR_DAT_08005748 + 0x18) = 420000 - *(int *)(PTR_DAT_08005748 + 0x18);\n        }\n      }\n      else {\n        conditionResult = FUN_08005360();\n        if (conditionResult != 0) {\n          if (*(uint *)(PTR_DAT_08005748 + 0x20) < *(uint *)(PTR_DAT_08005748 + 0x1c)) {\n            *(int *)(PTR_DAT_08005748 + 0x1c) =\n                 *(int *)(PTR_DAT_08005748 + 0x1c) - *(int *)(*(int *)PTR_DAT_0800574c + 0x30);\n          }\n          else {\n            *(uint *)(PTR_DAT_08005748 + 0x1c) = *(uint *)(PTR_DAT_08005748 + 0x1c) >> 1;\n          }\n          if (*(uint *)(PTR_DAT_08005748 + 0x1c) < *(uint *)(*(int *)PTR_DAT_0800574c + 0x2c)) {\n            *(undefined4 *)(PTR_DAT_08005748 + 0x1c) =\n                 *(undefined4 *)(*(int *)PTR_DAT_0800574c + 0x2c);\n          }\n          FUN_08005324(*(undefined4 *)(PTR_DAT_08005748 + 0x1c));\n        }\n      }\n    }\n    else {\n      *(undefined2 *)PTR_DAT_08005754 = 0;\n      *(undefined4 *)PTR_DAT_0800574c = 0;\n      FUN_08002f40();\n    }\n  }\n  *(ushort *)PTR_DAT_08005754 = *(ushort *)PTR_DAT_08005754 ^ *(ushort *)(PTR_DAT_08005758 + 0x18);\n  *(ushort *)PTR_DAT_0800575c = *(ushort *)PTR_DAT_0800575c ^ *(ushort *)(PTR_DAT_08005758 + 0x1a);\n  return;\n}\n\n",
            "called": [
                "FUN_08005360",
                "FUN_08005324",
                "FUN_08002f40",
                "FUN_080052dc",
                "FUN_08002f74",
                "FUN_080057e4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080053a0",
            "calling": [
                "FUN_08007c7c"
            ],
            "imported": false,
            "current_name": "process_data_080053a0"
        },
        "FUN_080092c4": {
            "renaming": {
                "FUN_080092c4": "initialize_and_execute_080092c4",
                "iVar1": "index",
                "puVar2": "dataPointer",
                "UNRECOVERED_JUMPTABLE": "unresolvedJumpTable"
            },
            "code": "\nvoid initializeAndExecute_080092c4(void)\n\n{\n  int index;\n  undefined4 *dataPointer;\n  code *unresolvedJumpTable;\n  \n  for (index = 0; dataPointer = (undefined4 *)PTR_DAT_0800930c,\n      PTR_DAT_08009304 + index < PTR_DAT_08009308; index = index + 4) {\n    *(undefined4 *)(PTR_DAT_08009304 + index) = *(undefined4 *)(DAT_08009300 + index);\n  }\n  for (; dataPointer < PTR_DAT_08009310; dataPointer = dataPointer + 1) {\n    *dataPointer = 0;\n  }\n  FUN_0800756c();\n  FUN_0800b3e8();\n  unresolvedJumpTable = (code *)0x80092fa;\n  FUN_08007540();\n                    /* WARNING: Could not recover jumptable at 0x080092fa. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*unresolvedJumpTable)();\n  return;\n}\n\n",
            "called": [
                "FUN_0800b3e8",
                "FUN_08007540",
                "FUN_0800756c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080092c4",
            "calling": [],
            "imported": false,
            "current_name": "initialize_and_execute_080092c4"
        },
        "FUN_08008250": {
            "renaming": {
                "FUN_08008250": "process_input_08008250",
                "param_1": "inputData"
            },
            "code": "\nvoid processInput_08008250(undefined inputData)\n\n{\n  FUN_08007e1c(inputData);\n  return;\n}\n\n",
            "called": [
                "FUN_08007e1c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008250",
            "calling": [
                "FUN_080036f0",
                "FUN_080037fc",
                "FUN_0800369c",
                "FUN_08003778",
                "FUN_080036c6",
                "FUN_08003826"
            ],
            "imported": false,
            "current_name": "process_input_08008250"
        },
        "FUN_0800184c": {
            "renaming": {
                "FUN_0800184c": "process_character_0800184c",
                "param_1": "outputChar",
                "param_2": "inputLimit",
                "param_3": "inputBuffer",
                "param_4": "currentIndex",
                "iVar1": "processResult",
                "uVar2": "functionResult"
            },
            "code": "\nundefined4 processCharacter_0800184c(byte *outputChar,undefined4 inputLimit,int inputBuffer,byte *currentIndex)\n\n{\n  int processResult;\n  undefined4 functionResult;\n  \n  if (*(char *)(inputBuffer + (uint)*currentIndex) == '\\0') {\n    functionResult = 0;\n  }\n  else {\n    *outputChar = *(byte *)(inputBuffer + (uint)*currentIndex);\n    if ((*outputChar < 0x41) || (0x5a < *outputChar)) {\n      *PTR_DAT_080018c8 = 2;\n      functionResult = 0;\n    }\n    else {\n      *currentIndex = *currentIndex + 1;\n      processResult = FUN_08002638(inputBuffer,currentIndex,inputLimit);\n      if (processResult == 0) {\n        *PTR_DAT_080018c8 = 1;\n        functionResult = 0;\n      }\n      else {\n        functionResult = 1;\n      }\n    }\n  }\n  return functionResult;\n}\n\n",
            "called": [
                "FUN_08002638"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800184c",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "process_character_0800184c"
        },
        "FUN_08001f00": {
            "renaming": {
                "FUN_08001f00": "process_data_08001f00",
                "param_1": "input_data",
                "param_2": "data_array",
                "param_3": "output_data",
                "param_4": "index1",
                "param_5": "index2",
                "param_6": "index3",
                "param_7": "parameter1",
                "param_8": "parameter2",
                "param_9": "parameter3",
                "param_10": "flag",
                "local_2c": "result1",
                "local_30": "result2",
                "local_34": "result3",
                "local_1c": "modified_value1",
                "local_20": "modified_value2",
                "local_38": "processed_value1",
                "local_3c": "processed_value2",
                "uVar1": "temp_var1",
                "uVar2": "temp_var2",
                "uVar5": "temp_var5",
                "uVar6": "temp_var6",
                "local_6c": "result_array",
                "local_5c": "temp_result1",
                "local_58": "temp_result2",
                "local_54": "intermediate_value1",
                "local_50": "intermediate_value2",
                "local_4c": "intermediate_value3",
                "local_48": "final_value1",
                "local_42": "loop_limit",
                "local_40": "loop_condition",
                "local_27": "counter",
                "local_26": "loop_counter",
                "local_24": "intermediate_result",
                "iVar3": "temp_int_var"
            },
            "code": "\nvoid process_data_08001f00(int input_data,undefined4 *data_array,int output_data,byte index1,byte index2,byte index3\n                 ,undefined4 parameter1,char parameter2,undefined4 parameter3,char flag)\n\n{\n  undefined4 temp_var1;\n  undefined4 temp_var2;\n  int temp_int_var;\n  uint uVar4;\n  undefined8 temp_var5;\n  undefined8 temp_var6;\n  uint result_array [4];\n  undefined4 temp_result1;\n  undefined4 temp_result2;\n  undefined4 intermediate_value1;\n  undefined4 intermediate_value2;\n  undefined4 intermediate_value3;\n  undefined4 final_value1;\n  ushort loop_limit;\n  undefined4 loop_condition;\n  undefined4 processed_value2;\n  undefined4 processed_value1;\n  uint result3;\n  undefined4 result2;\n  undefined4 result1;\n  char counter;\n  ushort loop_counter;\n  undefined4 intermediate_result;\n  uint modified_value2;\n  uint modified_value1;\n  \n  result1 = FUN_08008cdc(*(undefined4 *)((uint)index1 * 4 + input_data),\n                          *(undefined4 *)((uint)index1 * 4 + output_data));\n  result2 = FUN_08008cdc(*(undefined4 *)((uint)index2 * 4 + input_data),\n                          *(undefined4 *)((uint)index2 * 4 + output_data));\n  result3 = FUN_08008cd8(data_array[index3],*(undefined4 *)((uint)index3 * 4 + input_data));\n  modified_value1 = *(uint *)((uint)index1 * 4 + output_data) ^ 0x80000000;\n  modified_value2 = *(uint *)((uint)index2 * 4 + output_data) ^ 0x80000000;\n  processed_value1 = FUN_08008cd8(data_array[index1],result1);\n  processed_value2 = FUN_08008cd8(data_array[index2],result2);\n  temp_var1 = FUN_08008eec(modified_value1,processed_value2);\n  temp_var2 = FUN_08008eec(modified_value2,processed_value1);\n  temp_var1 = FUN_08008cd8(temp_var1,temp_var2);\n  temp_var5 = FUN_08008590(temp_var1);\n  temp_var1 = FUN_08008eec(modified_value1,processed_value1);\n  temp_var2 = FUN_08008eec(modified_value2,processed_value2);\n  temp_var1 = FUN_08008cdc(temp_var1,temp_var2);\n  temp_var6 = FUN_08008590(temp_var1);\n  temp_var5 = thunk_FUN_08009990((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20),(int)temp_var6,\n                             (int)((ulonglong)temp_var6 >> 0x20));\n  intermediate_result = FUN_08008c30((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n  if (flag == '\\0') {\n    temp_int_var = FUN_0800923c(intermediate_result,0);\n    if (temp_int_var != 0) {\n      temp_var5 = FUN_08008590(intermediate_result);\n      temp_var5 = FUN_080082d4((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20),DAT_08002240,DAT_08002244);\n      intermediate_result = FUN_08008c30((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n    }\n  }\n  else {\n    temp_int_var = FUN_08009250(intermediate_result,0);\n    if (temp_int_var != 0) {\n      temp_var5 = FUN_08008590(intermediate_result);\n      temp_var5 = FUN_080082d0((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20),DAT_08002240,DAT_08002244);\n      intermediate_result = FUN_08008c30((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n    }\n  }\n  temp_var1 = FUN_08008eec(intermediate_result,parameter3);\n  temp_var5 = FUN_08008590(temp_var1);\n  temp_var6 = FUN_08008590(result3 & 0x7fffffff);\n  temp_var5 = FUN_0800981c((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20),(int)temp_var6,\n                       (int)((ulonglong)temp_var6 >> 0x20));\n  loop_condition = FUN_08008c30((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n  temp_int_var = FUN_08009214(loop_condition,0);\n  if (temp_int_var == 0) {\n    temp_var1 = FUN_08009054(loop_condition,*(undefined4 *)(PTR_DAT_08002248 + 0x1c));\n    temp_var5 = FUN_08008590(temp_var1);\n    temp_var5 = FUN_080094c0((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n    loop_limit = FUN_08008bf0((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n    if (parameter2 != '\\0') {\n      temp_var1 = FUN_08008e44(loop_limit);\n      parameter1 = FUN_08008eec(parameter1,temp_var1);\n    }\n    temp_var1 = FUN_08008e44(loop_limit);\n    final_value1 = FUN_08009054(intermediate_result,temp_var1);\n    temp_var1 = FUN_08008e44(loop_limit);\n    intermediate_value3 = FUN_08009054(result3,temp_var1);\n    temp_var5 = FUN_08008590(final_value1);\n    temp_var5 = FUN_08008640((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20),0,DAT_0800224c);\n    temp_var6 = FUN_08008590(final_value1);\n    temp_var5 = FUN_08008640((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20),(int)temp_var6,\n                         (int)((ulonglong)temp_var6 >> 0x20));\n    temp_var5 = FUN_080082d0(0,DAT_08002250,(int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n    intermediate_value2 = FUN_08008c30((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n    intermediate_value1 = final_value1;\n    counter = '\\0';\n    result_array[index3] = *(uint *)(input_data + (uint)index3 * 4);\n    for (loop_counter = 1; loop_counter < loop_limit; loop_counter = loop_counter + 1) {\n      if ((int)counter < (int)(uint)(byte)PTR_DAT_08002248[0x3e]) {\n        temp_var1 = FUN_08008eec(modified_value1,intermediate_value1);\n        temp_var2 = FUN_08008eec(modified_value2,intermediate_value2);\n        result_array[3] = FUN_08008cdc(temp_var1,temp_var2);\n        temp_var1 = FUN_08008eec(modified_value1,intermediate_value2);\n        temp_var2 = FUN_08008eec(modified_value2,intermediate_value1);\n        modified_value1 = FUN_08008cd8(temp_var1,temp_var2);\n        modified_value2 = result_array[3];\n        counter = counter + '\\x01';\n      }\n      else {\n        temp_var1 = FUN_08008e44(loop_counter);\n        temp_var1 = FUN_08008eec(temp_var1,final_value1);\n        temp_var5 = FUN_08008590(temp_var1);\n        temp_var5 = FUN_08009410((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n        temp_result2 = FUN_08008c30((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n        temp_var1 = FUN_08008e44(loop_counter);\n        temp_var1 = FUN_08008eec(temp_var1,final_value1);\n        temp_var5 = FUN_08008590(temp_var1);\n        temp_var5 = FUN_080096e8((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n        temp_result1 = FUN_08008c30((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n        temp_var1 = FUN_08008eec(*(uint *)((uint)index1 * 4 + output_data) ^ 0x80000000,temp_result2);\n        temp_var2 = FUN_08008eec(*(undefined4 *)((uint)index2 * 4 + output_data),temp_result1);\n        modified_value1 = FUN_08008cdc(temp_var1,temp_var2);\n        temp_var1 = FUN_08008eec(*(uint *)((uint)index1 * 4 + output_data) ^ 0x80000000,temp_result1);\n        temp_var2 = FUN_08008eec(*(undefined4 *)((uint)index2 * 4 + output_data),temp_result2);\n        modified_value2 = FUN_08008cd8(temp_var1,temp_var2);\n        counter = '\\0';\n      }\n      uVar4 = FUN_08008cdc(result1,modified_value1);\n      result_array[index1] = uVar4;\n      uVar4 = FUN_08008cdc(result2,modified_value2);\n      result_array[index2] = uVar4;\n      uVar4 = FUN_08008cdc(result_array[index3],intermediate_value3);\n      result_array[index3] = uVar4;\n      FUN_08001e98(result_array[0],result_array[1],result_array[2],parameter1,parameter2);\n      if (*PTR_DAT_08002404 != '\\0') {\n        return;\n      }\n    }\n    FUN_08001e98(*data_array,data_array[1],data_array[2],parameter1,parameter2);\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08008640",
                "FUN_08008c30",
                "FUN_080082d4",
                "FUN_080096e8",
                "FUN_08009250",
                "FUN_080082d0",
                "FUN_08008e44",
                "FUN_08008590",
                "FUN_08009410",
                "thunk_FUN_08009990",
                "FUN_080094c0",
                "FUN_08001e98",
                "FUN_08009214",
                "FUN_0800981c",
                "FUN_08008bf0",
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_0800923c",
                "FUN_08008cdc",
                "FUN_08009054"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001f00",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "process_data_08001f00"
        },
        "FUN_08006ce0": {
            "renaming": {
                "FUN_08006ce0": "execute_function_08006ce0",
                "param_1": "inputParameter"
            },
            "code": "\nvoid executeFunction_08006ce0(undefined4 inputParameter)\n\n{\n  FUN_08006950(inputParameter);\n  return;\n}\n\n",
            "called": [
                "FUN_08006950"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ce0",
            "calling": [
                "FUN_080059b4"
            ],
            "imported": false,
            "current_name": "execute_function_08006ce0"
        },
        "FUN_08006d4a": {
            "renaming": {
                "FUN_08006d4a": "process_char_08006d4a",
                "param_1": "inputChar"
            },
            "code": "\nvoid processChar_08006d4a(char inputChar)\n\n{\n  FUN_080069e4((int)inputChar);\n  return;\n}\n\n",
            "called": [
                "FUN_080069e4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d4a",
            "calling": [],
            "imported": false,
            "current_name": "process_char_08006d4a"
        },
        "FUN_08008894": {
            "renaming": {
                "FUN_08008894": "calculate_result_08008894",
                "param_1": "input1_low",
                "param_2": "input1_high",
                "param_3": "input2_low",
                "param_4": "input2_high",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "result_high",
                "uVar9": "result_exp",
                "uVar10": "mantissa1",
                "uVar11": "mantissa2",
                "uVar12": "mantissa_diff",
                "uVar13": "input2_shifted",
                "unaff_r5": "input2_exp",
                "iVar8": "exp_diff",
                "bVar14": "condition1",
                "bVar15": "condition2",
                "bVar16": "condition3",
                "uVar17": "result_ull"
            },
            "code": "\nulonglong calculate_result_08008894(undefined4 input1_low,uint input1_high,uint input2_low,uint input2_high)\n\n{\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint result_high;\n  int exp_diff;\n  uint result_exp;\n  uint input2_exp;\n  uint mantissa1;\n  uint mantissa2;\n  uint mantissa_diff;\n  uint input2_shifted;\n  bool condition1;\n  bool condition2;\n  bool condition3;\n  ulonglong result_ull;\n  \n  result_ull = CONCAT44(input1_high,input1_low);\n  input2_shifted = 0x7ff;\n  result_high = input1_high >> 0x14 & 0x7ff;\n  condition1 = result_high == 0;\n  if (!condition1) {\n    input2_exp = input2_high >> 0x14 & 0x7ff;\n    condition1 = input2_exp == 0;\n  }\n  if (!condition1) {\n    condition1 = result_high == 0x7ff;\n  }\n  if (!condition1) {\n    condition1 = input2_exp == 0x7ff;\n  }\n  if (condition1) {\n    result_ull = FUN_08008a02();\n  }\n  result_exp = (uint)(result_ull >> 0x20);\n  mantissa2 = (uint)result_ull;\n  exp_diff = result_high - input2_exp;\n  if ((input2_low | input2_high << 0xc) == 0) {\n    result_high = (result_exp ^ input2_high) & 0x80000000 | result_exp & 0xfffff;\n    condition3 = SCARRY4(exp_diff,input2_shifted >> 1);\n    result_exp = exp_diff + (input2_shifted >> 1);\n    condition1 = (int)result_exp < 0;\n    condition2 = result_exp == 0;\n    if (!condition2 && condition1 == condition3) {\n      condition3 = SBORROW4(input2_shifted,result_exp);\n      condition1 = (int)(input2_shifted - result_exp) < 0;\n      condition2 = input2_shifted == result_exp;\n    }\n    if (!condition2 && condition1 == condition3) {\n      result_high = result_high | result_exp * 0x100000;\n    }\n    if (!condition2 && condition1 == condition3) {\n      return result_ull & 0xffffffff | (ulonglong)result_high << 0x20;\n    }\n    result_high = result_high | 0x100000;\n    input2_shifted = 0;\n    condition2 = SBORROW4(result_exp,1);\n    result_exp = result_exp - 1;\n    condition1 = result_exp == 0;\n    temp3 = result_exp;\n  }\n  else {\n    temp3 = (input2_high << 0xc) >> 4 | 0x10000000 | input2_low >> 0x18;\n    input2_shifted = input2_low << 8;\n    mantissa1 = (result_exp << 0xc) >> 4 | 0x10000000 | mantissa2 >> 0x18;\n    mantissa2 = mantissa2 * 0x100;\n    result_high = (result_exp ^ input2_high) & 0x80000000;\n    condition1 = temp3 <= mantissa1;\n    if (mantissa1 == temp3) {\n      condition1 = input2_shifted <= mantissa2;\n    }\n    exp_diff = exp_diff + (uint)condition1;\n    result_exp = exp_diff + 0x3fd;\n    if (condition1 == false) {\n      temp3 = temp3 >> 1;\n      input2_shifted = (uint)((input2_low >> 0x18 & 1) != 0) << 0x1f | input2_shifted >> 1;\n    }\n    mantissa_diff = mantissa2 - input2_shifted;\n    mantissa1 = (mantissa1 - temp3) - (uint)(mantissa2 < input2_shifted);\n    temp4 = temp3 >> 1;\n    temp1 = (uint)((temp3 & 1) != 0) << 0x1f | input2_shifted >> 1;\n    mantissa2 = 0x100000;\n    temp3 = 0x80000;\n    while( true ) {\n      condition1 = temp1 <= mantissa_diff;\n      if (temp4 < mantissa1 || mantissa1 - temp4 < (uint)condition1) {\n        mantissa_diff = mantissa_diff - temp1;\n        mantissa2 = mantissa2 | temp3;\n        mantissa1 = (mantissa1 - temp4) - (uint)!condition1;\n      }\n      temp5 = temp4 >> 1;\n      temp1 = (uint)((temp4 & 1) != 0) << 0x1f | temp1 >> 1;\n      condition2 = temp1 <= mantissa_diff;\n      condition1 = mantissa1 - temp5 < (uint)condition2;\n      input2_shifted = mantissa1;\n      if (temp5 < mantissa1 || condition1) {\n        mantissa_diff = mantissa_diff - temp1;\n        input2_shifted = (mantissa1 - temp5) - (uint)!condition2;\n      }\n      if (temp5 < mantissa1 || condition1) {\n        mantissa2 = mantissa2 | temp3 >> 1;\n      }\n      mantissa1 = temp4 >> 2;\n      temp2 = (uint)((temp5 & 1) != 0) << 0x1f | temp1 >> 1;\n      condition2 = temp2 <= mantissa_diff;\n      condition1 = input2_shifted - mantissa1 < (uint)condition2;\n      temp5 = input2_shifted;\n      if (mantissa1 < input2_shifted || condition1) {\n        mantissa_diff = mantissa_diff - temp2;\n        temp5 = (input2_shifted - mantissa1) - (uint)!condition2;\n      }\n      if (mantissa1 < input2_shifted || condition1) {\n        mantissa2 = mantissa2 | temp3 >> 2;\n      }\n      temp6 = temp4 >> 3;\n      temp1 = (uint)((mantissa1 & 1) != 0) << 0x1f | temp2 >> 1;\n      condition2 = temp1 <= mantissa_diff;\n      condition1 = temp5 - temp6 < (uint)condition2;\n      mantissa1 = temp5;\n      if (temp6 < temp5 || condition1) {\n        mantissa_diff = mantissa_diff - temp1;\n        mantissa1 = (temp5 - temp6) - (uint)!condition2;\n      }\n      if (temp6 < temp5 || condition1) {\n        mantissa2 = mantissa2 | temp3 >> 3;\n      }\n      input2_shifted = mantissa1 | mantissa_diff;\n      if (input2_shifted == 0) break;\n      mantissa1 = mantissa1 << 4 | mantissa_diff >> 0x1c;\n      mantissa_diff = mantissa_diff << 4;\n      temp4 = temp4 & 0xfffffff8 | temp1 >> 0x1d;\n      temp1 = (temp2 >> 1) << 3;\n      temp3 = temp3 >> 4;\n      if (temp3 == 0) {\n        temp6 = temp4;\n        if ((result_high & 0x100000) != 0) goto LAB_080089b2;\n        result_high = result_high | mantissa2;\n        mantissa2 = 0;\n        temp3 = 0x80000000;\n      }\n    }\n    if ((result_high & 0x100000) == 0) {\n      result_high = result_high | mantissa2;\n      mantissa2 = 0;\n    }\nLAB_080089b2:\n    condition3 = 0xfc < result_exp;\n    condition2 = SBORROW4(result_exp,0xfd);\n    temp4 = exp_diff + 0x300;\n    condition1 = temp4 == 0;\n    temp3 = temp4;\n    if (condition3 && !condition1) {\n      condition3 = 0x6ff < temp4;\n      condition2 = SBORROW4(temp4,0x700);\n      temp3 = exp_diff - 0x400;\n      condition1 = temp4 == 0x700;\n    }\n    if (!condition3 || condition1) {\n      condition1 = temp6 <= mantissa1;\n      if (mantissa1 == temp6) {\n        condition1 = temp1 <= mantissa_diff;\n      }\n      if (mantissa1 == temp6 && mantissa_diff == temp1) {\n        condition1 = (mantissa2 & 1) != 0;\n      }\n      return CONCAT44(result_high + result_exp * 0x100000 + (uint)CARRY4(mantissa2,(uint)condition1),mantissa2 + condition1);\n    }\n  }\n  if (!condition1 && (int)temp3 < 0 == condition2) {\n    return (ulonglong)(result_high & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  condition3 = SCARRY4(result_exp,0x36);\n  condition1 = (int)(result_exp + 0x36) < 0;\n  condition2 = result_exp == 0xffffffca;\n  if (condition2 || condition1 != condition3) {\n    mantissa2 = 0;\n  }\n  if (condition2 || condition1 != condition3) {\n    result_high = result_high & 0x80000000;\n  }\n  if (condition2 || condition1 != condition3) {\n    return CONCAT44(result_high,mantissa2);\n  }\n  temp3 = -result_exp;\n  mantissa1 = temp3 - 0x20;\n  if (0x1f < (int)temp3) {\n    temp3 = mantissa2 >> (mantissa1 & 0xff) | result_high << (0x20 - mantissa1 & 0xff);\n    result_exp = (result_high >> (mantissa1 & 0xff) & ~((result_high & 0x80000000) >> (mantissa1 & 0xff))) -\n            ((int)temp3 >> 0x1f);\n    if ((input2_shifted | mantissa2 << (0x20 - mantissa1 & 0xff) | temp3 << 1) == 0) {\n      result_exp = result_exp & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44(result_high,result_exp) & 0x80000000ffffffff;\n  }\n  exp_diff = temp3 - 0x14;\n  if (exp_diff != 0 && exp_diff < 0 == SCARRY4(mantissa1,0xc)) {\n    result_exp = 0xc - exp_diff;\n    temp3 = mantissa2 << (result_exp & 0xff);\n    mantissa2 = mantissa2 >> (0x20 - result_exp & 0xff) | result_high << (result_exp & 0xff);\n    result_exp = mantissa2 + -((int)temp3 >> 0x1f);\n    if ((input2_shifted | temp3 << 1) == 0) {\n      result_exp = result_exp & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44((result_high & 0x80000000) + (uint)CARRY4(mantissa2,-((int)temp3 >> 0x1f)),result_exp);\n  }\n  mantissa1 = mantissa2 << (result_exp + 0x20 & 0xff);\n  mantissa2 = mantissa2 >> (temp3 & 0xff) | result_high << (result_exp + 0x20 & 0xff);\n  result_exp = mantissa2 + -((int)mantissa1 >> 0x1f);\n  if ((input2_shifted | mantissa1 << 1) == 0) {\n    result_exp = result_exp & ~(mantissa1 >> 0x1f);\n  }\n  return CONCAT44((result_high & 0x80000000) +\n                  ((result_high & 0x7fffffff) >> (temp3 & 0xff)) +\n                  (uint)CARRY4(mantissa2,-((int)mantissa1 >> 0x1f)),result_exp);\n}\n\n",
            "called": [
                "FUN_08008a02"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008894",
            "calling": [
                "FUN_08003004",
                "FUN_080005b4",
                "FUN_080098d0",
                "FUN_08009990",
                "FUN_0800a1bc",
                "FUN_0800af78",
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "calculate_result_08008894"
        },
        "FUN_08000374": {
            "renaming": {
                "FUN_08000374": "process_data_08000374",
                "param_1": "inputData",
                "param_2": "inputBuffer",
                "param_3": "bufferSize",
                "local_1c": "remainingSize",
                "local_18": "currentBuffer",
                "local_14": "currentData",
                "local_9": "checksum"
            },
            "code": "\nvoid processData_08000374(int inputData,char *inputBuffer,int bufferSize)\n\n{\n  int remainingSize;\n  char *currentBuffer;\n  int currentData;\n  char checksum;\n  \n  checksum = '\\0';\n  remainingSize = bufferSize;\n  currentBuffer = inputBuffer;\n  currentData = inputData;\n  if (*(int *)PTR_DAT_080003e8 == 0) {\n    FUN_080002f0();\n    currentBuffer = inputBuffer;\n    currentData = inputData;\n  }\n  for (; remainingSize != 0; remainingSize = remainingSize + -1) {\n    checksum = (checksum != '\\0') + *currentBuffer;\n    FUN_08000340(currentData,*currentBuffer);\n    currentBuffer = currentBuffer + 1;\n    currentData = currentData + 1;\n  }\n  FUN_08000340(currentData,checksum);\n  return;\n}\n\n",
            "called": [
                "FUN_08000340",
                "FUN_080002f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000374",
            "calling": [
                "FUN_08004c2a",
                "FUN_08004bc0",
                "FUN_08004bf4"
            ],
            "imported": false,
            "current_name": "process_data_08000374"
        },
        "FUN_080037fc": {
            "renaming": {
                "FUN_080037fc": "print_absolute_value_080037fc",
                "param_1": "input_number",
                "local_c": "absolute_value"
            },
            "code": "\nvoid print_absolute_value_080037fc(int input_number)\n\n{\n  int absolute_value;\n  \n  absolute_value = input_number;\n  if (input_number < 0) {\n    FUN_08008250(0x2d);\n    absolute_value = -input_number;\n  }\n  FUN_08003778(absolute_value);\n  return;\n}\n\n",
            "called": [
                "FUN_08003778",
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080037fc",
            "calling": [
                "FUN_08004250",
                "FUN_080046d0",
                "FUN_08004900"
            ],
            "imported": false,
            "current_name": "print_absolute_value_080037fc"
        },
        "FUN_0800a1bc": {
            "renaming": {
                "FUN_0800a1bc": "calculate_result_0800a1bc",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "tempVar1",
                "uVar2": "tempVar2",
                "iVar3": "tempIntVar",
                "uVar4": "tempVar4",
                "uVar5": "tempVar5",
                "uVar6": "tempVar6",
                "uVar7": "tempVar7",
                "uVar8": "tempVar8",
                "uVar9": "tempVar9",
                "uVar10": "tempVar10",
                "uVar11": "tempVar11",
                "uVar12": "tempVar12",
                "uVar13": "tempVar13",
                "uVar14": "tempVar14"
            },
            "code": "\nuint calculate_result_0800a1bc(uint input1,uint input2)\n\n{\n  uint tempVar1;\n  uint tempVar2;\n  int tempIntVar;\n  uint tempVar4;\n  undefined4 tempVar5;\n  uint tempVar6;\n  uint tempVar7;\n  uint tempVar8;\n  uint tempVar9;\n  uint tempVar10;\n  uint tempVar11;\n  uint tempVar12;\n  uint tempVar13;\n  undefined8 tempVar14;\n  \n  if ((DAT_0800a340 & ~input2) == 0) {\n    tempVar14 = FUN_08008640(input1,input2,input1,input2);\n    tempVar8 = FUN_080082d4((int)tempVar14,(int)((ulonglong)tempVar14 >> 0x20),input1,input2);\n    return tempVar8;\n  }\n  if ((int)input2 < 1) {\n    if ((input2 & 0x7fffffff | input1) == 0) {\n      return input1;\n    }\n    if (input2 != 0) {\n      tempVar14 = FUN_080082d0(input1,input2,input1);\n      tempVar5 = (undefined4)((ulonglong)tempVar14 >> 0x20);\n      tempVar8 = FUN_08008894((int)tempVar14,tempVar5,(int)tempVar14,tempVar5);\n      return tempVar8;\n    }\n    do {\n      tempVar10 = input1;\n      tempVar8 = tempVar10 >> 0xb;\n      input2 = input2 - 0x15;\n      input1 = tempVar10 << 0x15;\n    } while (tempVar8 == 0);\n    tempVar2 = input2;\n    if (-1 < (int)tempVar10) goto LAB_0800a290;\n    tempVar11 = 0x20;\n    tempVar6 = 0xffffffff;\n    tempVar10 = input1;\n  }\n  else {\n    tempVar2 = (int)input2 >> 0x14;\n    tempVar8 = input2;\n    tempVar10 = input1;\n    if (tempVar2 != 0) goto LAB_0800a1da;\nLAB_0800a290:\n    tempVar10 = 0;\n    tempVar11 = tempVar8;\n    do {\n      tempVar6 = tempVar10;\n      tempVar8 = tempVar11 << 1;\n      tempIntVar = tempVar11 << 0xc;\n      tempVar10 = tempVar6 + 1;\n      tempVar11 = tempVar8;\n    } while (-1 < tempIntVar);\n    tempVar11 = 0x20 - tempVar10;\n    input2 = tempVar2;\n    tempVar10 = input1 << (tempVar10 & 0xff);\n  }\n  tempVar8 = input1 >> (tempVar11 & 0xff) | tempVar8;\n  tempVar2 = input2 - tempVar6;\nLAB_0800a1da:\n  tempVar8 = tempVar8 & 0xfffff | 0x100000;\n  if (-1 < (int)(tempVar2 << 0x1f)) {\n    tempVar8 = tempVar8 * 2 - ((int)tempVar10 >> 0x1f);\n    tempVar10 = tempVar10 << 1;\n  }\n  tempVar13 = 0;\n  tempVar8 = tempVar8 * 2 - ((int)tempVar10 >> 0x1f);\n  tempVar10 = tempVar10 << 1;\n  tempVar2 = 0;\n  tempVar11 = 0x16;\n  tempVar6 = 0x200000;\n  do {\n    tempIntVar = tempVar2 + tempVar6;\n    if (tempIntVar <= (int)tempVar8) {\n      tempVar8 = tempVar8 - tempIntVar;\n      tempVar2 = tempIntVar + tempVar6;\n      tempVar13 = tempVar13 + tempVar6;\n    }\n    tempVar11 = tempVar11 - 1;\n    tempVar8 = tempVar8 * 2 - ((int)tempVar10 >> 0x1f);\n    tempVar6 = tempVar6 >> 1;\n    tempVar10 = tempVar10 << 1;\n  } while (tempVar11 != 0);\n  tempVar1 = 0x20;\n  tempVar7 = 0x80000000;\n  tempVar6 = tempVar11;\n  do {\n    tempVar4 = tempVar7 + tempVar11;\n    tempVar12 = tempVar2;\n    if ((int)tempVar2 < (int)tempVar8) {\n      if ((int)tempVar4 < 0) {\nLAB_0800a26a:\n        if (-1 < (int)(tempVar4 + tempVar7)) {\n          tempVar12 = tempVar2 + 1;\n        }\n      }\n      tempVar9 = tempVar8 - tempVar2;\n      tempVar2 = tempVar12;\n      if (tempVar10 < tempVar4) {\n        tempVar9 = tempVar9 - 1;\n      }\nLAB_0800a262:\n      tempVar11 = tempVar4 + tempVar7;\n      tempVar10 = tempVar10 - tempVar4;\n      tempVar6 = tempVar6 + tempVar7;\n      tempVar8 = tempVar9;\n    }\n    else if ((tempVar8 == tempVar2) && (tempVar4 <= tempVar10)) {\n      if ((int)tempVar4 < 0) goto LAB_0800a26a;\n      tempVar9 = 0;\n      tempVar2 = tempVar8;\n      goto LAB_0800a262;\n    }\n    tempVar1 = tempVar1 - 1;\n    tempVar7 = tempVar7 >> 1;\n    tempVar8 = tempVar8 * 2 - ((int)tempVar10 >> 0x1f);\n    tempVar10 = tempVar10 << 1;\n    if (tempVar1 == 0) {\n      if ((tempVar8 | tempVar10) == 0) {\n        tempVar1 = tempVar6 >> 1;\n      }\n      else if (tempVar6 == 0xffffffff) {\n        tempVar13 = tempVar13 + 1;\n      }\n      else {\n        tempVar1 = tempVar6 + 1 >> 1;\n      }\n      if ((tempVar13 & 1) != 0) {\n        tempVar1 = tempVar1 | 0x80000000;\n      }\n      return tempVar1;\n    }\n  } while( true );\n}\n\n",
            "called": [
                "FUN_08008640",
                "FUN_08008894",
                "FUN_080082d4",
                "FUN_080082d0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800a1bc",
            "calling": [
                "FUN_080098d0",
                "FUN_08009b24"
            ],
            "imported": false,
            "current_name": "calculate_result_0800a1bc"
        },
        "FUN_0800525c": {
            "renaming": {
                "FUN_0800525c": "process_input_char_0800525c",
                "param_1": "inputChar"
            },
            "code": "\nvoid processInputChar_0800525c(char inputChar)\n\n{\n  if ((int)inputChar != (uint)(byte)*PTR_DAT_080052a8) {\n    FUN_08002fd4();\n    if (inputChar == '\\0') {\n      FUN_08005250();\n    }\n    else {\n      if (inputChar < '\\x01') {\n        do_nothing_0800522c();\n      }\n      else {\n        do_nothing_08005220();\n      }\n      do_nothing_08005208();\n    }\n    *PTR_DAT_080052a8 = inputChar;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_0800522c",
                "FUN_08005208",
                "FUN_08002fd4",
                "FUN_08005250",
                "FUN_08005220"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800525c",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "process_input_char_0800525c"
        },
        "FUN_080073d4": {
            "renaming": {
                "FUN_080073d4": "set_bit_in_memory_080073d4",
                "param_1": "bitIndex"
            },
            "code": "\nvoid setBitInMemory_080073d4(uint bitIndex)\n\n{\n  *(short *)(((int)bitIndex >> 4) * 0x400 + 0x4002001a) = (short)(1 << (bitIndex & 0xf));\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080073d4",
            "calling": [
                "FUN_08007520"
            ],
            "imported": false,
            "current_name": "set_bit_in_memory_080073d4"
        },
        "FUN_08006dfe": {
            "renaming": {
                "FUN_08006dfe": "process_character_08006dfe",
                "param_1": "inputChar"
            },
            "code": "\nvoid processCharacter_08006dfe(char inputChar)\n\n{\n  FUN_08006a8c((int)inputChar);\n  return;\n}\n\n",
            "called": [
                "FUN_08006a8c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006dfe",
            "calling": [],
            "imported": false,
            "current_name": "process_character_08006dfe"
        },
        "FUN_08006d66": {
            "renaming": {
                "FUN_08006d66": "call_sub_function_08006d66"
            },
            "code": "\nvoid callSubFunction_08006d66(void)\n\n{\n  FUNC_08006c70();\n  return;\n}\n\n",
            "called": [
                "FUN_08006c70"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d66",
            "calling": [],
            "imported": false,
            "current_name": "call_sub_function_08006d66"
        },
        "FUN_08006e88": {
            "renaming": {
                "FUN_08006e88": "update_configuration_08006e88",
                "param_1": "configArray",
                "param_2": "inputArray",
                "uVar1": "bitMask",
                "uVar2": "bitwiseAnd",
                "iVar3": "index",
                "local_c": "counter"
            },
            "code": "\nvoid updateConfiguration_08006e88(uint *configArray,uint *inputArray)\n\n{\n  uint bitMask;\n  uint bitwiseAnd;\n  int index;\n  uint counter;\n  \n  for (counter = 0; counter < 0x10; counter = counter + 1) {\n    bitMask = 1 << (counter & 0xff);\n    bitwiseAnd = *inputArray & bitMask;\n    if (bitwiseAnd == bitMask) {\n      if ((inputArray[1] == 2) || (inputArray[1] == 0x12)) {\n        bitMask = inputArray[4];\n        configArray[(counter >> 3) + 8] = configArray[(counter >> 3) + 8] & ~(0xf << ((counter & 7) << 2));\n        configArray[(counter >> 3) + 8] = configArray[(counter >> 3) + 8] | bitMask << ((counter & 7) << 2);\n      }\n      *configArray = *configArray & ~(3 << ((counter & 0x7f) << 1));\n      *configArray = *configArray | (inputArray[1] & 3) << ((counter & 0x7f) << 1);\n      if ((((inputArray[1] == 1) || (inputArray[1] == 2)) || (inputArray[1] == 0x11)) || (inputArray[1] == 0x12)\n         ) {\n        configArray[2] = configArray[2] & ~(3 << ((counter & 0x7f) << 1));\n        configArray[2] = configArray[2] | inputArray[3] << ((counter & 0x7f) << 1);\n        configArray[1] = configArray[1] & ~(1 << (counter & 0xff));\n        configArray[1] = configArray[1] | (inputArray[1] >> 4 & 1) << (counter & 0xff);\n      }\n      configArray[3] = configArray[3] & ~(3 << ((counter & 0x7f) << 1));\n      configArray[3] = configArray[3] | inputArray[2] << ((counter & 0x7f) << 1);\n      if ((inputArray[1] & 0x10000000) != 0) {\n        *(uint *)(DAT_0800719c + 0x44) = *(uint *)(DAT_0800719c + 0x44) | 0x4000;\n        *(uint *)(DAT_080071a0 + ((counter >> 2) + 2) * 4) =\n             ~(0xf << ((counter & 3) << 2)) & *(uint *)(DAT_080071a0 + ((counter >> 2) + 2) * 4);\n        if (configArray == DAT_080071a4) {\n          index = 0;\n        }\n        else if (configArray == DAT_080071a8) {\n          index = 1;\n        }\n        else if (configArray == DAT_080071ac) {\n          index = 2;\n        }\n        else if (configArray == DAT_080071b0) {\n          index = 3;\n        }\n        else if (configArray == DAT_080071b4) {\n          index = 4;\n        }\n        else if (configArray == DAT_080071b8) {\n          index = 5;\n        }\n        else if (configArray == DAT_080071bc) {\n          index = 6;\n        }\n        else if (configArray == DAT_080071c0) {\n          index = 7;\n        }\n        else if (configArray == DAT_080071c4) {\n          index = 8;\n        }\n        else if (configArray == DAT_080071c8) {\n          index = 9;\n        }\n        else {\n          index = 10;\n        }\n        *(uint *)(DAT_080071a0 + ((counter >> 2) + 2) * 4) =\n             index << ((counter & 3) << 2) | *(uint *)(DAT_080071a0 + ((counter >> 2) + 2) * 4);\n        *DAT_080071cc = ~bitwiseAnd & *DAT_080071cc;\n        DAT_080071cc[1] = ~bitwiseAnd & DAT_080071cc[1];\n        if ((inputArray[1] & 0x10000) != 0) {\n          *DAT_080071cc = bitwiseAnd | *DAT_080071cc;\n        }\n        if ((inputArray[1] & 0x20000) != 0) {\n          DAT_080071cc[1] = bitwiseAnd | DAT_080071cc[1];\n        }\n        DAT_080071cc[2] = ~bitwiseAnd & DAT_080071cc[2];\n        DAT_080071cc[3] = ~bitwiseAnd & DAT_080071cc[3];\n        if ((inputArray[1] & 0x100000) != 0) {\n          DAT_080071cc[2] = bitwiseAnd | DAT_080071cc[2];\n        }\n        if ((inputArray[1] & 0x200000) != 0) {\n          DAT_080071cc[3] = bitwiseAnd | DAT_080071cc[3];\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006e88",
            "calling": [
                "FUN_0800640c",
                "FUN_0800778c"
            ],
            "imported": false,
            "current_name": "update_configuration_08006e88"
        },
        "FUN_080001e0": {
            "renaming": {
                "FUN_080001e0": "do_nothing_080001e0"
            },
            "code": "\nvoid do_nothing_080001e0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001e0",
            "calling": [
                "FUN_08000220"
            ],
            "imported": false,
            "current_name": "do_nothing_080001e0"
        },
        "FUN_080036f0": {
            "renaming": {
                "FUN_080036f0": "print_binary_representation_080036f0",
                "param_1": "number",
                "param_2": "bit_length",
                "uVar1": "current_bit_char",
                "local_10": "current_bit_position",
                "local_c": "bit_mask"
            },
            "code": "\nvoid print_binary_representation_080036f0(uint number,int bit_length)\n\n{\n  undefined4 current_bit_char;\n  int current_bit_position;\n  uint bit_mask;\n  \n  bit_mask = 1 << (bit_length - 1U & 0xff);\n  for (current_bit_position = 0; current_bit_position < bit_length; current_bit_position = current_bit_position + 1) {\n    if ((bit_mask & number) == 0) {\n      current_bit_char = 0x30;\n    }\n    else {\n      current_bit_char = 0x31;\n    }\n    FUN_08008250(current_bit_char);\n    bit_mask = bit_mask >> 1;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080036f0",
            "calling": [
                "FUN_08003740",
                "FUN_0800375c"
            ],
            "imported": false,
            "current_name": "print_binary_representation_080036f0"
        },
        "FUN_08002edc": {
            "renaming": {
                "FUN_08002edc": "execute_operations_08002edc"
            },
            "code": "\nvoid executeOperations_08002edc(void)\n\n{\n  FUN_08002a94();\n  FUN_08002ba8();\n  FUN_08002e08();\n  return;\n}\n\n",
            "called": [
                "FUN_08002ba8",
                "FUN_08002a94",
                "FUN_08002e08"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002edc",
            "calling": [
                "FUN_08003618",
                "FUN_08003004"
            ],
            "imported": false,
            "current_name": "execute_operations_08002edc"
        },
        "FUN_0800375c": {
            "renaming": {
                "FUN_0800375c": "initialize_memory_0800375c",
                "param_1": "memoryBlock"
            },
            "code": "\nvoid initializeMemory_0800375c(undefined2 memoryBlock)\n\n{\n  FUN_080036f0(memoryBlock,0x10);\n  return;\n}\n\n",
            "called": [
                "FUN_080036f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800375c",
            "calling": [
                "FUN_08004250"
            ],
            "imported": false,
            "current_name": "initialize_memory_0800375c"
        },
        "FUN_08009990": {
            "renaming": {
                "FUN_08009990": "improved_calculation_08009990",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "intVar1",
                "uVar2": "uintVar2",
                "uVar3": "uintVar3",
                "uVar4": "uintVar4",
                "uVar5": "uintVar5",
                "uVar6": "uintVar6"
            },
            "code": "\nuint improvedCalculation_08009990(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int intVar1;\n  undefined4 uintVar2;\n  uint uintVar3;\n  uint uintVar4;\n  uint uintVar5;\n  undefined8 uintVar6;\n  \n  uintVar6 = CONCAT44(DAT_08009b04,DAT_08009b00);\n  uintVar4 = input4 & 0x7fffffff;\n  if ((DAT_08009b18 < (uintVar4 | (-input3 | input3) >> 0x1f)) ||\n     (uintVar5 = input2 & 0x7fffffff, DAT_08009b18 < (uintVar5 | (-input1 | input1) >> 0x1f))) {\n    uintVar4 = FUN_080082d4(input3,input4,input1,input2);\n  }\n  else {\n    if ((input4 + 0xc0100000 | input3) == 0) {\n      uintVar4 = FUN_0800af78();\n      return uintVar4;\n    }\n    uintVar3 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n    if ((uintVar5 | input1) == 0) {\n      uintVar4 = DAT_08009af0;\n      if ((uintVar3 != 2) && (uintVar4 = input1, uintVar3 == 3)) {\n        uintVar4 = DAT_08009af8;\n      }\n    }\n    else {\n      if ((uintVar4 | input3) != 0) {\n        if (uintVar4 == DAT_08009b18) {\n          uintVar3 = uintVar3 - 1;\n          if (uintVar5 == uintVar4) {\n            if (2 < uintVar3) {\n              return DAT_08009b10;\n            }\n            return *(uint *)(PTR_DAT_08009b20 + uintVar3 * 8);\n          }\n          if (uintVar3 < 3) {\n            return *(uint *)(PTR_DAT_08009b1c + uintVar3 * 8);\n          }\n          return 0;\n        }\n        if (uintVar5 != DAT_08009b18) {\n          intVar1 = (int)(uintVar5 - uintVar4) >> 0x14;\n          if ((int)(uintVar5 - uintVar4) < 0x3d00000) {\n            if (((int)input4 < 0) && (intVar1 + 0x3c < 0 != SCARRY4(intVar1,0x3c))) {\n              uintVar6 = 0;\n            }\n            else {\n              FUN_08008894(input1,input2,input3,input4,input4);\n              do_nothing_0800b2cc();\n              uintVar6 = FUN_0800af78();\n            }\n          }\n          uintVar2 = (undefined4)((ulonglong)uintVar6 >> 0x20);\n          uintVar4 = (uint)uintVar6;\n          if (uintVar3 == 1) {\n            return uintVar4;\n          }\n          if (uintVar3 == 2) {\n            uintVar6 = FUN_080082d0(uintVar4,uintVar2,DAT_08009ae8,DAT_08009aec);\n            uintVar4 = FUN_080082d0(DAT_08009af0,DAT_08009af4,(int)uintVar6,\n                                 (int)((ulonglong)uintVar6 >> 0x20));\n            return uintVar4;\n          }\n          if (uintVar3 == 0) {\n            return uintVar4;\n          }\n          uintVar6 = FUN_080082d0(uintVar4,uintVar2,DAT_08009ae8,DAT_08009aec);\n          uintVar4 = FUN_080082d0((int)uintVar6,(int)((ulonglong)uintVar6 >> 0x20),DAT_08009af0,DAT_08009af4)\n          ;\n          return uintVar4;\n        }\n      }\n      uintVar4 = DAT_08009b08;\n      if (-1 < (int)input2) {\n        uintVar4 = DAT_08009b00;\n      }\n    }\n  }\n  return uintVar4;\n}\n\n",
            "called": [
                "FUN_08008894",
                "FUN_080082d4",
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_0800af78"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009990",
            "calling": [
                "thunk_FUN_08009990"
            ],
            "imported": false,
            "current_name": "improved_calculation_08009990"
        },
        "FUN_08007e58": {
            "renaming": {
                "FUN_08007e58": "check_bit_status_08007e58"
            },
            "code": "\nbool checkBitStatus_08007e58(void)\n\n{\n  return (*DAT_08007e80 & 0x20) != 0;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e58",
            "calling": [
                "FUN_08008286"
            ],
            "imported": false,
            "current_name": "check_bit_status_08007e58"
        },
        "FUN_080059f8": {
            "renaming": {
                "FUN_080059f8": "reset_memory_segments_080059f8"
            },
            "code": "\nundefined4 reset_memory_segments_080059f8(void)\n\n{\n  *(undefined4 *)(DAT_08005a4c + 0x20) = 0xffffffff;\n  *(undefined4 *)(DAT_08005a4c + 0x20) = 0;\n  *(undefined4 *)(DAT_08005a4c + 0x24) = 0xffffffff;\n  *(undefined4 *)(DAT_08005a4c + 0x24) = 0;\n  *(undefined4 *)(DAT_08005a4c + 0x10) = 0xffffffff;\n  *(undefined4 *)(DAT_08005a4c + 0x10) = 0;\n  *(undefined4 *)(DAT_08005a4c + 0x14) = 0xffffffff;\n  *(undefined4 *)(DAT_08005a4c + 0x14) = 0;\n  *(undefined4 *)(DAT_08005a4c + 0x18) = 0xffffffff;\n  *(undefined4 *)(DAT_08005a4c + 0x18) = 0;\n  do_nothing_08005a5c();\n  return 0;\n}\n\n",
            "called": [
                "FUN_08005a5c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080059f8",
            "calling": [],
            "imported": false,
            "current_name": "reset_memory_segments_080059f8"
        },
        "FUN_08003f34": {
            "renaming": {
                "FUN_08003f34": "process_input_sequence_08003f34",
                "bVar1": "byteIndex",
                "bVar2": "inputByte",
                "uVar3": "result"
            },
            "code": "\nvoid processInputSequence_08003f34(void)\n\n{\n  byte byteIndex;\n  byte inputByte;\n  undefined4 result;\n  \n  while( true ) {\n    while( true ) {\n      inputByte = FUN_08008286();\n      if (inputByte == 0xff) {\n        return;\n      }\n      if ((inputByte == 10) || (inputByte == 0xd)) break;\n      if (*PTR_DAT_08004028 == '\\0') {\n        if ((0x20 < inputByte) && (inputByte != 0x2f)) {\n          if (inputByte == 0x28) {\n            *PTR_DAT_08004028 = 1;\n          }\n          else if (*PTR_DAT_08004020 == -1) {\n            FUN_08004030(0xd);\n            FUN_08003980();\n          }\n          else if ((inputByte < 0x61) || (0x7a < inputByte)) {\n            byteIndex = *PTR_DAT_08004020;\n            *PTR_DAT_08004020 = byteIndex + 1;\n            PTR_DAT_08004024[byteIndex] = inputByte;\n          }\n          else {\n            byteIndex = *PTR_DAT_08004020;\n            *PTR_DAT_08004020 = byteIndex + 1;\n            PTR_DAT_08004024[byteIndex] = inputByte - 0x20;\n          }\n        }\n      }\n      else if (inputByte == 0x29) {\n        *PTR_DAT_08004028 = 0;\n      }\n    }\n    FUN_08003a74();\n    if (*PTR_DAT_0800401c != '\\0') break;\n    if (*PTR_DAT_08004020 == '\\0') {\n      FUN_08004030(0);\n    }\n    else {\n      PTR_DAT_08004024[(byte)*PTR_DAT_08004020] = 0;\n      result = FUN_08003b98(PTR_DAT_08004024);\n      FUN_08004030(result);\n    }\n    FUN_08003980();\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08003980",
                "FUN_08004030",
                "FUN_08003a74",
                "FUN_08008286",
                "FUN_08003b98"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f34",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "process_input_sequence_08003f34"
        },
        "FUN_080095b8": {
            "renaming": {
                "FUN_080095b8": "calculate_modified_value_080095b8",
                "param_1": "inputValue1",
                "param_2": "inputValue2",
                "uVar1": "tempVar1",
                "uVar2": "shiftedInputValue2",
                "uVar3": "modifiedValue",
                "iVar4": "sign",
                "uVar5": "adjustedShift"
            },
            "code": "\nint calculateModifiedValue_080095b8(uint inputValue1,uint inputValue2)\n\n{\n  uint tempVar1;\n  uint shiftedInputValue2;\n  uint modifiedValue;\n  int sign;\n  uint adjustedShift;\n  \n  shiftedInputValue2 = (inputValue2 << 1) >> 0x15;\n  adjustedShift = shiftedInputValue2 - 0x3ff;\n  if ((int)inputValue2 < 0) {\n    sign = -1;\n  }\n  else {\n    sign = 1;\n  }\n  modifiedValue = inputValue2 & 0xfffff | 0x100000;\n  if ((int)adjustedShift < 0x14) {\n    if ((int)adjustedShift < 0) {\n      if (adjustedShift != 0xffffffff) {\n        sign = 0;\n      }\n      return sign;\n    }\n    modifiedValue = modifiedValue + (0x80000 >> (adjustedShift & 0xff)) >> (0x14 - adjustedShift & 0xff);\n  }\n  else {\n    if (0x1e < adjustedShift) {\n      sign = FUN_08008ba0();\n      return sign;\n    }\n    if ((int)adjustedShift < 0x34) {\n      tempVar1 = 0x80000000 >> (shiftedInputValue2 - 0x413 & 0xff);\n      if (CARRY4(tempVar1,inputValue1) != false) {\n        modifiedValue = modifiedValue + 1;\n      }\n      modifiedValue = modifiedValue << (shiftedInputValue2 - 0x413 & 0xff);\n      if (adjustedShift != 0x14) {\n        modifiedValue = modifiedValue | tempVar1 + inputValue1 >> (0x34 - adjustedShift & 0xff);\n      }\n    }\n    else {\n      modifiedValue = modifiedValue << (shiftedInputValue2 - 0x413 & 0xff) | inputValue1 << (shiftedInputValue2 - 0x433 & 0xff);\n    }\n  }\n  return modifiedValue * sign;\n}\n\n",
            "called": [
                "FUN_08008ba0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080095b8",
            "calling": [
                "FUN_08003004",
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "calculate_modified_value_080095b8"
        },
        "FUN_08006cf6": {
            "renaming": {
                "FUN_08006cf6": "process_data_08006cf6",
                "param_1": "inputChar",
                "param_2": "inputValue1",
                "param_3": "inputValue2",
                "uVar1": "processedValue"
            },
            "code": "\nvoid processData_08006cf6(char inputChar,undefined4 inputValue1,undefined4 inputValue2)\n\n{\n  undefined4 processedValue;\n  \n  processedValue = FUN_08006998();\n  processedValue = FUN_08006ba0(processedValue,inputValue1,inputValue2);\n  FUN_08006b00((int)inputChar,processedValue);\n  return;\n}\n\n",
            "called": [
                "FUN_08006ba0",
                "FUN_08006998",
                "FUN_08006b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006cf6",
            "calling": [
                "FUN_08007a70"
            ],
            "imported": false,
            "current_name": "process_data_08006cf6"
        },
        "FUN_08002ef0": {
            "renaming": {
                "FUN_08002ef0": "update_data_08002ef0",
                "uVar1": "result"
            },
            "code": "\nvoid updateData_08002ef0(void)\n\n{\n  undefined result;\n  \n  *PTR_DAT_08002f1c = *PTR_DAT_08002f18;\n  result = FUN_08002870(*PTR_DAT_08002f18);\n  *PTR_DAT_08002f20 = result;\n  return;\n}\n\n",
            "called": [
                "FUN_08002870"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ef0",
            "calling": [
                "FUN_08002f24"
            ],
            "imported": false,
            "current_name": "update_data_08002ef0"
        },
        "FUN_08001d4c": {
            "renaming": {
                "FUN_08001d4c": "blink_le_ds_08001d4c",
                "do_nothing_08002814": "delay",
                "local_9": "blinkCounter",
                "cVar1": "updatedCounter"
            },
            "code": "\nvoid blinkLEDs_08001d4c(void)\n\n{\n  char updatedCounter;\n  char blinkCounter;\n  \n  FUN_08005790();\n  FUN_08001994(4,1,0,*(undefined4 *)(PTR_DAT_08001dd8 + 0x30));\n  FUN_08001994(3,1,0,*(undefined4 *)(PTR_DAT_08001dd8 + 0x30));\n  do_nothing_08002814(*(undefined2 *)(PTR_DAT_08001dd8 + 0x34));\n  blinkCounter = '\\x02';\n  while( true ) {\n    updatedCounter = blinkCounter + -1;\n    if (blinkCounter == '\\0') break;\n    FUN_08001994(7,0,1,*(undefined4 *)(PTR_DAT_08001dd8 + 0x2c));\n    do_nothing_08002814(*(undefined2 *)(PTR_DAT_08001dd8 + 0x34));\n    blinkCounter = updatedCounter;\n    if ('\\0' < updatedCounter) {\n      FUN_08001994(7,1,0,*(undefined4 *)(PTR_DAT_08001dd8 + 0x2c));\n      do_nothing_08002814(*(undefined2 *)(PTR_DAT_08001dd8 + 0x34));\n    }\n  }\n  FUN_080057e4();\n  return;\n}\n\n",
            "called": [
                "FUN_08005790",
                "FUN_08002814",
                "FUN_08001994",
                "FUN_080057e4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001d4c",
            "calling": [
                "FUN_080024c4"
            ],
            "imported": false,
            "current_name": "blink_le_ds_08001d4c"
        },
        "FUN_08000268": {
            "renaming": {
                "FUN_08000268": "calculate_result_08000268",
                "iVar1": "intermediate_value"
            },
            "code": "\nint calculate_result_08000268(void)\n\n{\n  int intermediate_value;\n  \n  intermediate_value = FUN_08005a84();\n  return (intermediate_value + 1) * 1000 -\n         (uint)((ulonglong)DAT_0800029c * (ulonglong)(*(uint *)(DAT_08000298 + 8) >> 3) >> 0x21);\n}\n\n",
            "called": [
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000268",
            "calling": [
                "FUN_080002b6"
            ],
            "imported": false,
            "current_name": "calculate_result_08000268"
        },
        "FUN_08003778": {
            "renaming": {
                "FUN_08003778": "print_integer_as_text_08003778",
                "param_1": "inputNumber",
                "uVar1": "currentIndex",
                "local_1c": "numberRemaining",
                "acStack_15": "numberText",
                "local_9": "numDigits"
            },
            "code": "\nvoid printIntegerAsText_08003778(uint inputNumber)\n\n{\n  uint currentIndex;\n  uint numberRemaining;\n  char numberText [12];\n  byte numDigits;\n  \n  numDigits = 0;\n  numberRemaining = inputNumber;\n  if (inputNumber == 0) {\n    FUN_08008250(0x30);\n  }\n  else {\n    for (; numberRemaining != 0; numberRemaining = (uint)((ulonglong)DAT_080037f8 * (ulonglong)numberRemaining >> 0x23))\n    {\n      currentIndex = (uint)numDigits;\n      numDigits = numDigits + 1;\n      numberText[currentIndex + 1] =\n           (char)numberRemaining +\n           (char)(uint)((ulonglong)DAT_080037f8 * (ulonglong)numberRemaining >> 0x23) * -10 + '0';\n    }\n    for (; numDigits != 0; numDigits = numDigits - 1) {\n      FUN_08008250(numberText[numDigits]);\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003778",
            "calling": [
                "FUN_080037fc"
            ],
            "imported": false,
            "current_name": "print_integer_as_text_08003778"
        },
        "FUN_0800b3dc": {
            "renaming": {
                "FUN_0800b3dc": "get_data_value_0800b3dc"
            },
            "code": "\nundefined4 get_data_value_0800b3dc(void)\n\n{\n  return *(undefined4 *)PTR_PTR_DAT_0800b3e4;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b3dc",
            "calling": [
                "FUN_0800981c",
                "FUN_080098d0"
            ],
            "imported": false,
            "current_name": "get_data_value_0800b3dc"
        },
        "FUN_080046d0": {
            "renaming": {
                "FUN_080046d0": "process_data_080046d0",
                "bVar1": "byteValue",
                "cVar2": "charValue",
                "uVar3": "undefinedValue",
                "uVar4": "combinedValue"
            },
            "code": "\nvoid processData_080046d0(void)\n\n{\n  byte byteValue;\n  char charValue;\n  undefined4 undefinedValue;\n  undefined8 combinedValue;\n  \n  if (4 < (byte)PTR_DAT_08004890[1]) {\n    FUN_080036c6(PTR_DAT_080048a8);\n    FUN_080037fc((byte)PTR_DAT_08004890[0x1c] + 0x36);\n    if (PTR_DAT_08004890[0x19] == '\\0') {\n      if (PTR_DAT_08004890[0x1a] == '\\x01') {\n        FUN_080036c6(PTR_DAT_080048ac);\n      }\n      else {\n        FUN_080036c6(PTR_DAT_080048b0);\n      }\n    }\n    else {\n      FUN_080036c6(PTR_DAT_080048b4);\n    }\n    if (PTR_DAT_08004890[3] == '\\0') {\n      FUN_080036c6(PTR_DAT_080048bc);\n    }\n    else {\n      FUN_080036c6(PTR_DAT_080048b8);\n    }\n    if (PTR_DAT_08004890[4] == '\\0') {\n      FUN_080036c6(PTR_DAT_080048c4);\n    }\n    else {\n      FUN_080036c6(PTR_DAT_080048c0);\n    }\n    if (PTR_DAT_08004890[2] == '\\0') {\n      FUN_080036c6(PTR_DAT_080048cc);\n    }\n    else {\n      FUN_080036c6(PTR_DAT_080048c8);\n    }\n    byteValue = PTR_DAT_08004890[5];\n    if (byteValue == 2) {\n      FUN_080036c6(PTR_DAT_080048d8);\n    }\n    else if (byteValue < 3) {\n      if (byteValue == 0) {\n        FUN_080036c6(PTR_DAT_080048d0);\n      }\n      else if (byteValue == 1) {\n        FUN_080036c6(PTR_DAT_080048d4);\n      }\n    }\n    charValue = PTR_DAT_08004890[6];\n    if (charValue == '\\x01') {\n      FUN_080036c6(PTR_DAT_080048dc);\n    }\n    else if (charValue < '\\x02') {\n      if (charValue == -1) {\n        FUN_080036c6(PTR_DAT_080048e0);\n      }\n      else if (charValue == '\\0') {\n        FUN_080036c6(PTR_DAT_080048e4);\n      }\n    }\n    byteValue = PTR_DAT_08004890[7];\n    if (byteValue == 2) {\n      FUN_080036c6(PTR_DAT_080048f0);\n    }\n    else if (byteValue < 3) {\n      if (byteValue == 0) {\n        FUN_080036c6(PTR_DAT_080048e8);\n      }\n      else if (byteValue == 1) {\n        FUN_080036c6(PTR_DAT_080048ec);\n      }\n    }\n    FUN_080036c6(PTR_DAT_080048f4);\n    FUN_080037fc(PTR_DAT_08004890[0x18]);\n    FUN_080036c6(PTR_DAT_080048f8);\n    if (PTR_DAT_08004890[3] == '\\0') {\n      FUN_08003826(*(undefined4 *)(PTR_DAT_08004890 + 8));\n    }\n    else {\n      combinedValue = FUN_08008590(*(undefined4 *)(PTR_DAT_08004890 + 8));\n      combinedValue = FUN_08008640((int)combinedValue,(int)((ulonglong)combinedValue >> 0x20),DAT_08004888,DAT_0800488c);\n      undefinedValue = FUN_08008c30((int)combinedValue,(int)((ulonglong)combinedValue >> 0x20));\n      FUN_08003826(undefinedValue);\n    }\n    FUN_080036c6(PTR_DAT_080048fc);\n    return;\n  }\n                    /* WARNING: Could not recover jumptable at 0x080046de. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)(&switchD_080046de::switchdataD_080046e4)[(byte)PTR_DAT_08004890[1]])();\n  return;\n}\n\n",
            "called": [
                "FUN_080037fc",
                "FUN_08008640",
                "FUN_08008c30",
                "FUN_080036c6",
                "FUN_08003826",
                "FUN_08008590"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080046d0",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "process_data_080046d0"
        },
        "FUN_08006d72": {
            "renaming": {
                "FUN_08006d72": "get_result_08006d72",
                "param_1": "input_value",
                "uVar1": "result"
            },
            "code": "\nundefined4 get_result_08006d72(undefined4 input_value)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006c9c(input_value);\n  return result;\n}\n\n",
            "called": [
                "FUN_08006c9c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d72",
            "calling": [
                "FUN_080059b4"
            ],
            "imported": false,
            "current_name": "get_result_08006d72"
        },
        "FUN_0800756c": {
            "renaming": {
                "FUN_0800756c": "initialize_registers_0800756c"
            },
            "code": "\nvoid initializeRegisters_0800756c(void)\n\n{\n  *DAT_080075bc = *DAT_080075bc | 1;\n  DAT_080075bc[2] = 0;\n  *DAT_080075bc = *DAT_080075bc & 0xfef6ffff;\n  DAT_080075bc[1] = DAT_080075c0;\n  *DAT_080075bc = *DAT_080075bc & 0xfffbffff;\n  DAT_080075bc[3] = 0;\n  *(undefined4 *)(DAT_080075c4 + 8) = 0x8000000;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800756c",
            "calling": [
                "FUN_080092c4"
            ],
            "imported": false,
            "current_name": "initialize_registers_0800756c"
        },
        "FUN_080001f8": {
            "renaming": {
                "FUN_080001f8": "initialize_and_execute_080001f8"
            },
            "code": "\nvoid initializeAndExecute_080001f8(void)\n\n{\n  *PTR_DAT_0800020c = 0;\n  FUN_08000210();\n  return;\n}\n\n",
            "called": [
                "FUN_08000210"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001f8",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initialize_and_execute_080001f8"
        },
        "FUN_08002f74": {
            "renaming": {
                "FUN_08002f74": "retrieve_buffer_element_08002f74",
                "puVar1": "buffer_element_ptr"
            },
            "code": "\nundefined * retrieve_buffer_element_08002f74(void)\n\n{\n  undefined *buffer_element_ptr;\n  \n  if (*PTR_DAT_08002fa0 == *PTR_DAT_08002fa4) {\n    buffer_element_ptr = (undefined *)0x0;\n  }\n  else {\n    buffer_element_ptr = PTR_DAT_08002fa8 + (uint)(byte)*PTR_DAT_08002fa4 * 0x40;\n  }\n  return buffer_element_ptr;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f74",
            "calling": [
                "FUN_08002fd4",
                "FUN_080053a0"
            ],
            "imported": false,
            "current_name": "retrieve_buffer_element_08002f74"
        },
        "FUN_0800b3e8": {
            "renaming": {
                "FUN_0800b3e8": "execute_functions_in_sequence_0800b3e8",
                "iVar1": "counter",
                "ppcVar2": "functionPointer",
                "iVar3": "numFunctions"
            },
            "code": "\nvoid executeFunctionsInSequence_0800b3e8(void)\n\n{\n  int counter;\n  code **functionPointer;\n  int numFunctions;\n  \n  numFunctions = (int)PTR_DAT_0800b420 - (int)PTR_DAT_0800b424 >> 2;\n  if (numFunctions != 0) {\n    counter = 0;\n    functionPointer = (code **)PTR_DAT_0800b424;\n    do {\n      counter = counter + 1;\n      (**functionPointer)();\n      functionPointer = functionPointer + 1;\n    } while (numFunctions != counter);\n  }\n  functionPointer = (code **)PTR_DAT_0800b42c;\n  numFunctions = (int)PTR_DAT_0800b428 - (int)PTR_DAT_0800b42c;\n  do_nothing_0800b5b0();\n  numFunctions = numFunctions >> 2;\n  if (numFunctions != 0) {\n    counter = 0;\n    do {\n      counter = counter + 1;\n      (**functionPointer)();\n      functionPointer = functionPointer + 1;\n    } while (numFunctions != counter);\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_080001ac",
                "FUN_0800b4d0",
                "FUN_0800b5b0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b3e8",
            "calling": [
                "FUN_080092c4"
            ],
            "imported": false,
            "current_name": "execute_functions_in_sequence_0800b3e8"
        },
        "FUN_080096e8": {
            "renaming": {
                "FUN_080096e8": "process_data_080096e8",
                "param_1": "inputData",
                "param_2": "dataFlag",
                "uVar1": "result",
                "uVar2": "functionSelector",
                "local_28": "localData1",
                "uStack_24": "localData2",
                "local_20": "localData3",
                "uStack_1c": "localData4"
            },
            "code": "\nundefined4 processData_080096e8(undefined4 inputData,uint dataFlag)\n\n{\n  undefined4 result;\n  uint functionSelector;\n  undefined4 localData1;\n  undefined4 localData2;\n  undefined4 localData3;\n  undefined4 localData4;\n  \n  if (DAT_08009790 < (int)(dataFlag & 0x7fffffff)) {\n    if (DAT_08009794 < (int)(dataFlag & 0x7fffffff)) {\n      result = FUN_080082d0(inputData,dataFlag,inputData,dataFlag);\n    }\n    else {\n      functionSelector = FUN_08009d78(inputData,dataFlag,&localData1);\n      functionSelector = functionSelector & 3;\n      if (functionSelector == 1) {\n        result = FUN_0800a348(localData1,localData2,localData3,localData4);\n      }\n      else if (functionSelector == 2) {\n        result = FUN_0800adf0(localData1,localData2,localData3,localData4,1);\n      }\n      else if (functionSelector == 0) {\n        result = FUN_0800adf0(localData1,localData2,localData3,localData4,1);\n      }\n      else {\n        result = FUN_0800a348(localData1,localData2,localData3,localData4);\n      }\n    }\n    return result;\n  }\n  result = FUN_0800adf0(inputData,dataFlag,0,0,0);\n  return result;\n}\n\n",
            "called": [
                "FUN_0800adf0",
                "FUN_080082d0",
                "FUN_08009d78",
                "FUN_0800a348"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080096e8",
            "calling": [
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "process_data_080096e8"
        },
        "FUN_08006a18": {
            "renaming": {
                "FUN_08006a18": "check_bit_status_08006a18",
                "param_1": "inputByte"
            },
            "code": "\nbool checkBitStatus_08006a18(byte inputByte)\n\n{\n  return (*(uint *)(DAT_08006a54 + (((uint)(int)(char)inputByte >> 5) + 0x40) * 4) &\n         1 << (inputByte & 0x1f)) != 0;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006a18",
            "calling": [
                "FUN_08006de0"
            ],
            "imported": false,
            "current_name": "check_bit_status_08006a18"
        },
        "FUN_08002c18": {
            "renaming": {
                "FUN_08002c18": "calculate_values_08002c18",
                "param_1": "input_value",
                "param_2": "factor_1",
                "param_3": "factor_2",
                "uVar1": "temp_var",
                "iVar2": "intermediate_result",
                "uVar3": "temp_var_1",
                "uVar4": "temp_var_2",
                "uVar5": "temp_var_3",
                "uVar6": "unsigned_result",
                "uVar7": "double_temp_var",
                "local_20": "final_result",
                "local_1c": "first_result"
            },
            "code": "\nvoid calculate_values_08002c18(int input_value,undefined4 factor_1,undefined4 factor_2)\n\n{\n  undefined4 temp_var;\n  int intermediate_result;\n  undefined4 temp_var_1;\n  undefined4 temp_var_2;\n  undefined4 temp_var_3;\n  uint unsigned_result;\n  undefined8 double_temp_var;\n  int final_result;\n  uint first_result;\n  \n  temp_var = FUN_08008e3c(*(undefined4 *)(input_value + 0x3c));\n  temp_var = FUN_08008eec(temp_var,factor_1);\n  double_temp_var = FUN_08008590(temp_var);\n  double_temp_var = FUN_08009318((int)double_temp_var,(int)((ulonglong)double_temp_var >> 0x20));\n  temp_var = FUN_08008bf0((int)double_temp_var,(int)((ulonglong)double_temp_var >> 0x20));\n  *(undefined4 *)(input_value + 0x28) = temp_var;\n  temp_var = FUN_08008e3c(*(undefined4 *)(input_value + 0x3c));\n  temp_var = FUN_08008eec(temp_var,factor_2);\n  double_temp_var = FUN_08008590(temp_var);\n  double_temp_var = FUN_08009318((int)double_temp_var,(int)((ulonglong)double_temp_var >> 0x20));\n  temp_var = FUN_08008bf0((int)double_temp_var,(int)((ulonglong)double_temp_var >> 0x20));\n  *(undefined4 *)(input_value + 0x2c) = temp_var;\n  double_temp_var = FUN_0800856c(*(int *)(input_value + 0x30) * 0x32);\n  double_temp_var = FUN_08008640((int)double_temp_var,(int)((ulonglong)double_temp_var >> 0x20),0,DAT_08002e04);\n  intermediate_result = FUN_08008ba0((int)double_temp_var,(int)((ulonglong)double_temp_var >> 0x20));\n  temp_var = FUN_08008e3c(*(undefined4 *)(input_value + 0x28));\n  temp_var_1 = FUN_08008e3c(*(undefined4 *)(input_value + 0x3c));\n  temp_var_2 = FUN_08008e44(intermediate_result);\n  temp_var = FUN_080028bc(temp_var,temp_var_1,temp_var_2);\n  double_temp_var = FUN_08008590(temp_var);\n  double_temp_var = FUN_08009318((int)double_temp_var,(int)((ulonglong)double_temp_var >> 0x20));\n  first_result = FUN_08008ba0((int)double_temp_var,(int)((ulonglong)double_temp_var >> 0x20));\n  temp_var = FUN_08008e3c(*(undefined4 *)(input_value + 0x3c));\n  temp_var_1 = FUN_08008e3c(*(undefined4 *)(input_value + 0x2c));\n  temp_var_2 = FUN_08008e44(-intermediate_result);\n  temp_var = FUN_080028bc(temp_var,temp_var_1,temp_var_2);\n  double_temp_var = FUN_08008590(temp_var);\n  double_temp_var = FUN_080094c0((int)double_temp_var,(int)((ulonglong)double_temp_var >> 0x20));\n  final_result = FUN_08008ba0((int)double_temp_var,(int)((ulonglong)double_temp_var >> 0x20));\n  final_result = (*(int *)(input_value + 0x10) - first_result) - final_result;\n  if (final_result < 0) {\n    temp_var = FUN_08008e3c(*(undefined4 *)(input_value + 0x28));\n    temp_var_1 = FUN_08008e3c(*(undefined4 *)(input_value + 0x2c));\n    temp_var_2 = FUN_08008e44(intermediate_result);\n    temp_var_3 = FUN_08008e44(*(undefined4 *)(input_value + 0x10));\n    temp_var = FUN_08002908(temp_var,temp_var_1,temp_var_2,temp_var_3);\n    double_temp_var = FUN_08008590(temp_var);\n    double_temp_var = FUN_08009318((int)double_temp_var,(int)((ulonglong)double_temp_var >> 0x20));\n    unsigned_result = FUN_08008ba0((int)double_temp_var,(int)((ulonglong)double_temp_var >> 0x20));\n    unsigned_result = unsigned_result & ~((int)unsigned_result >> 0x1f);\n    first_result = *(uint *)(input_value + 0x10);\n    if ((int)unsigned_result <= (int)*(uint *)(input_value + 0x10)) {\n      first_result = unsigned_result;\n    }\n    final_result = 0;\n  }\n  *(uint *)(input_value + 0x34) = first_result;\n  *(uint *)(input_value + 0x38) = final_result + first_result;\n  return;\n}\n\n",
            "called": [
                "FUN_08008640",
                "FUN_08008e3c",
                "FUN_08008bf0",
                "FUN_080028bc",
                "FUN_08008eec",
                "FUN_08008e44",
                "FUN_08009318",
                "FUN_08008590",
                "FUN_08008ba0",
                "FUN_08002908",
                "FUN_0800856c",
                "FUN_080094c0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002c18",
            "calling": [
                "FUN_08002e08"
            ],
            "imported": false,
            "current_name": "calculate_values_08002c18"
        },
        "FUN_08006ac0": {
            "renaming": {
                "FUN_08006ac0": "check_bit_in_array_08006ac0",
                "param_1": "inputByte"
            },
            "code": "\nbool checkBitInArray_08006ac0(byte inputByte)\n\n{\n  return (*(uint *)(DAT_08006afc + (((uint)(int)(char)inputByte >> 5) + 0x80) * 4) &\n         1 << (inputByte & 0x1f)) != 0;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ac0",
            "calling": [
                "FUN_08006e1a"
            ],
            "imported": false,
            "current_name": "check_bit_in_array_08006ac0"
        },
        "FUN_080001ec": {
            "renaming": {
                "FUN_080001ec": "do_nothing_080001ec"
            },
            "code": "\nvoid do_nothing_080001ec(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001ec",
            "calling": [
                "FUN_08000210"
            ],
            "imported": false,
            "current_name": "do_nothing_080001ec"
        },
        "FUN_08005a50": {
            "renaming": {
                "FUN_08005a50": "do_nothing_08005a50"
            },
            "code": "\nvoid do_nothing_08005a50(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a50",
            "calling": [
                "FUN_080059b4"
            ],
            "imported": false,
            "current_name": "do_nothing_08005a50"
        },
        "FUN_08002ba8": {
            "renaming": {
                "FUN_08002ba8": "process_data_08002ba8",
                "puVar1": "tempDataPtr",
                "puVar2": "prevDataPtr",
                "puVar3": "currentDataPtr",
                "local_14": "sourceDataPtr",
                "local_10": "destinationDataPtr",
                "local_9": "dataIndex"
            },
            "code": "\nvoid processData_08002ba8(void)\n\n{\n  undefined *tempDataPtr;\n  undefined *prevDataPtr;\n  undefined *currentDataPtr;\n  undefined *sourceDataPtr;\n  undefined *destinationDataPtr;\n  byte dataIndex;\n  \n  dataIndex = *PTR_DAT_08002c0c;\n  sourceDataPtr = (undefined *)0x0;\n  destinationDataPtr = (undefined *)0x0;\n  currentDataPtr = (undefined *)0x0;\n  while (prevDataPtr = sourceDataPtr, dataIndex != *PTR_DAT_08002c14) {\n    sourceDataPtr = destinationDataPtr;\n    tempDataPtr = PTR_DAT_08002c10 + (uint)dataIndex * 0x40;\n    FUN_08002afc(prevDataPtr,destinationDataPtr,tempDataPtr);\n    dataIndex = FUN_08002870(dataIndex);\n    currentDataPtr = prevDataPtr;\n    destinationDataPtr = tempDataPtr;\n  }\n  FUN_08002afc(sourceDataPtr,destinationDataPtr,0,sourceDataPtr,currentDataPtr);\n  return;\n}\n\n",
            "called": [
                "FUN_08002afc",
                "FUN_08002870"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ba8",
            "calling": [
                "FUN_08002edc"
            ],
            "imported": false,
            "current_name": "process_data_08002ba8"
        },
        "FUN_0800919c": {
            "renaming": {
                "FUN_0800919c": "compare_and_combine_0800919c",
                "param_1": "input_a",
                "param_2": "input_b",
                "uVar2": "double_a",
                "uVar3": "double_b",
                "uVar4": "combined",
                "bVar1": "comparison_result",
                "bVar5": "is_zero"
            },
            "code": "\nuint compare_and_combine_0800919c(uint input_a,uint input_b)\n\n{\n  bool comparison_result;\n  uint double_a;\n  uint double_b;\n  uint combined;\n  bool is_zero;\n  \n  double_a = input_a * 2;\n  double_b = input_b * 2;\n  if (((int)double_a >> 0x18 == -1 || (int)double_b >> 0x18 == -1) &&\n     ((((int)double_a >> 0x18 == -1 && ((input_a & 0x7fffff) != 0)) ||\n      (((int)double_b >> 0x18 == -1 && ((input_b & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  combined = double_a | input_b & 0x7fffffff;\n  is_zero = combined == 0;\n  if (!is_zero) {\n    combined = input_a ^ input_b;\n    is_zero = combined == 0;\n  }\n  comparison_result = -1 < (int)combined;\n  if (comparison_result) {\n    input_a = double_a + input_b * -2;\n    is_zero = input_a == 0;\n  }\n  if ((comparison_result && double_b <= double_a) && !is_zero) {\n    input_a = (int)input_b >> 0x1f;\n  }\n  if (!comparison_result || double_b > double_a) {\n    input_a = ~((int)input_b >> 0x1f);\n  }\n  if (!is_zero) {\n    input_a = input_a | 1;\n  }\n  return input_a;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800919c",
            "calling": [
                "FUN_08009204"
            ],
            "imported": false,
            "current_name": "compare_and_combine_0800919c"
        },
        "FUN_0800b2cc": {
            "renaming": {
                "FUN_0800b2cc": "do_nothing_0800b2cc"
            },
            "code": "\nvoid do_nothing_0800b2cc(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2cc",
            "calling": [
                "FUN_08009990",
                "FUN_08009d78",
                "FUN_0800af78"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b2cc"
        },
        "FUN_0800854c": {
            "renaming": {
                "FUN_0800854c": "calculate_result_0800854c",
                "param_1": "input_value",
                "uVar1": "result_low",
                "uVar2": "shift_amount",
                "iVar3": "leading_zeroes",
                "uVar4": "adjusted_zeroes",
                "in_r12": "complementary_shift",
                "bVar5": "is_negative",
                "bVar6": "is_zero",
                "bVar7": "carry_flag"
            },
            "code": "\nulonglong calculate_result_0800854c(uint input_value)\n\n{\n  uint result_low;\n  uint shift_amount;\n  int leading_zeroes;\n  uint adjusted_zeroes;\n  uint complementary_shift;\n  bool is_negative;\n  bool is_zero;\n  bool carry_flag;\n  \n  if (input_value == 0) {\n    return 0;\n  }\n  result_low = 0;\n  leading_zeroes = count_leading_zeroes(input_value);\n  adjusted_zeroes = leading_zeroes + 0x15;\n  carry_flag = SBORROW4(adjusted_zeroes,0x20);\n  shift_amount = leading_zeroes - 0xb;\n  is_negative = (int)shift_amount < 0;\n  is_zero = shift_amount == 0;\n  if ((int)adjusted_zeroes < 0x20) {\n    carry_flag = SCARRY4(shift_amount,0xc);\n    leading_zeroes = leading_zeroes + 1;\n    is_negative = leading_zeroes < 0;\n    is_zero = leading_zeroes == 0;\n    shift_amount = adjusted_zeroes;\n    if (!is_zero && is_negative == carry_flag) {\n      result_low = input_value << (adjusted_zeroes & 0xff);\n      input_value = input_value >> (0xcU - leading_zeroes & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (is_zero || is_negative != carry_flag) {\n    complementary_shift = 0x20 - shift_amount;\n  }\n  input_value = input_value << (shift_amount & 0xff);\n  if (is_zero || is_negative != carry_flag) {\n    input_value = input_value | 0U >> (complementary_shift & 0xff);\n  }\n  if (is_zero || is_negative != carry_flag) {\n    result_low = 0 << (shift_amount & 0xff);\n  }\nLAB_08008458:\n  if ((int)adjusted_zeroes < 0x433) {\n    return CONCAT44(input_value + (0x432 - adjusted_zeroes) * 0x100000,result_low);\n  }\n  shift_amount = ~(0x432 - adjusted_zeroes);\n  if (0x1e < (int)shift_amount) {\n    return (ulonglong)(input_value >> (shift_amount - 0x1f & 0xff));\n  }\n  leading_zeroes = shift_amount - 0x13;\n  if (leading_zeroes == 0 || leading_zeroes < 0 != SCARRY4(shift_amount - 0x1f,0xc)) {\n    shift_amount = shift_amount + 1;\n    return CONCAT44(input_value >> (shift_amount & 0xff),\n                    result_low >> (shift_amount & 0xff) | input_value << (0x20 - shift_amount & 0xff));\n  }\n  return (ulonglong)(result_low >> (0x20 - (0xcU - leading_zeroes) & 0xff) | input_value << (0xcU - leading_zeroes & 0xff));\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800854c",
            "calling": [
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "calculate_result_0800854c"
        },
        "FUN_08008e44": {
            "renaming": {
                "FUN_08008e44": "convert_to_float_representation_08008e44",
                "param_1": "inputValue",
                "iVar1": "leadingZeroes",
                "uVar2": "shiftAmount",
                "uVar3": "result",
                "iVar4": "intermediateResult",
                "uVar5": "tempValue"
            },
            "code": "\nuint convertToFloatRepresentation_08008e44(uint inputValue)\n\n{\n  int leadingZeroes;\n  uint shiftAmount;\n  uint result;\n  int intermediateResult;\n  uint tempValue;\n  \n  result = inputValue & 0x80000000;\n  if ((int)result < 0) {\n    inputValue = -inputValue;\n  }\n  if (inputValue == 0) {\n    return 0;\n  }\n  leadingZeroes = count_leading_zeroes(inputValue);\n  shiftAmount = leadingZeroes - 8;\n  intermediateResult = ((result | 0x4b000000) - 0x800000) + shiftAmount * -0x800000;\n  if (7 < leadingZeroes) {\n    tempValue = 0 << (shiftAmount & 0xff);\n    result = intermediateResult + (inputValue << (shiftAmount & 0xff)) +\n            (0U >> (0x20 - shiftAmount & 0xff)) + (uint)(0x7fffffff < tempValue);\n    if (tempValue == 0x80000000) {\n      result = result & 0xfffffffe;\n    }\n    return result;\n  }\n  shiftAmount = inputValue << (leadingZeroes + 0x18U & 0xff);\n  result = intermediateResult + ((inputValue >> (0x20 - (leadingZeroes + 0x18U) & 0xff)) - ((int)shiftAmount >> 0x1f));\n  if ((shiftAmount & 0x7fffffff) == 0) {\n    result = result & ~(shiftAmount >> 0x1f);\n  }\n  return result;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008e44",
            "calling": [
                "FUN_08003618",
                "FUN_08003004",
                "FUN_080004fc",
                "FUN_08002408",
                "FUN_08002c18",
                "FUN_080024c4",
                "FUN_08001f00",
                "FUN_08004940"
            ],
            "imported": false,
            "current_name": "convert_to_float_representation_08008e44"
        },
        "FUN_0800733e": {
            "renaming": {
                "FUN_0800733e": "update_memory_address_0800733e",
                "param_1": "base_address",
                "param_2": "value_to_write",
                "param_3": "offset_selector"
            },
            "code": "\nvoid update_memory_address_0800733e(int base_address,undefined2 value_to_write,char offset_selector)\n\n{\n  if (offset_selector == '\\0') {\n    *(undefined2 *)(base_address + 0x1a) = value_to_write;\n  }\n  else {\n    *(undefined2 *)(base_address + 0x18) = value_to_write;\n  }\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800733e",
            "calling": [
                "FUN_0800778c"
            ],
            "imported": false,
            "current_name": "update_memory_address_0800733e"
        },
        "FUN_0800583c": {
            "renaming": {
                "FUN_0800583c": "execute_operations_0800583c"
            },
            "code": "\nvoid executeOperations_0800583c(void)\n\n{\n  FUN_080052ac(*(undefined2 *)(PTR_DAT_08005858 + 0x18));\n  FUN_08005790();\n  FUN_080057e4();\n  return;\n}\n\n",
            "called": [
                "FUN_08005790",
                "FUN_080057e4",
                "FUN_080052ac"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583c",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "execute_operations_0800583c"
        },
        "FUN_08001e98": {
            "renaming": {
                "FUN_08001e98": "process_data_08001e98",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "param_4": "data4",
                "param_5": "data5",
                "iVar1": "result"
            },
            "code": "\nvoid processData_08001e98(undefined4 data1,undefined4 data2,undefined4 data3,undefined4 data4,\n                 undefined data5)\n\n{\n  int result;\n  \n  if (PTR_DAT_08001efc[1] != '\\a') {\n    do {\n      FUN_08003a74();\n      if (*PTR_DAT_08001efc != '\\0') {\n        return;\n      }\n      result = FUN_08002fac();\n    } while (result != 0);\n    FUN_08003004(data1,data2,data3,data4,data5);\n    if (PTR_DAT_08001efc[1] == '\\0') {\n      PTR_DAT_08001efc[1] = 2;\n    }\n    if (PTR_DAT_08001efc[0x10] != '\\0') {\n      FUN_0800585c();\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08003004",
                "FUN_08003a74",
                "FUN_0800585c",
                "FUN_08002fac"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001e98",
            "calling": [
                "FUN_080005b4",
                "FUN_080024c4",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "process_data_08001e98"
        },
        "FUN_080069e4": {
            "renaming": {
                "FUN_080069e4": "set_bit_in_array_080069e4",
                "param_1": "inputByte"
            },
            "code": "\nvoid setBitInArray_080069e4(byte inputByte)\n\n{\n  *(int *)(DAT_08006a14 + (((uint)(int)(char)inputByte >> 5) + 0x20) * 4) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080069e4",
            "calling": [
                "FUN_08006d4a"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_080069e4"
        },
        "FUN_0800b2d4": {
            "renaming": {
                "FUN_0800b2d4": "calculate_bitwise_operation_0800b2d4",
                "param_1": "inputValue",
                "param_2": "bitwiseValue"
            },
            "code": "\nuint calculateBitwiseOperation_0800b2d4(undefined4 inputValue,uint bitwiseValue)\n\n{\n  return (bitwiseValue | 0x80000000) + 0x100000 >> 0x1f;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2d4",
            "calling": [
                "FUN_0800981c"
            ],
            "imported": false,
            "current_name": "calculate_bitwise_operation_0800b2d4"
        },
        "FUN_08008e3c": {
            "renaming": {
                "FUN_08008e3c": "calculate_modified_value_08008e3c",
                "param_1": "inputValue",
                "iVar1": "leadingZeroes",
                "uVar2": "shiftAmount",
                "iVar3": "baseValue",
                "uVar4": "tempValue"
            },
            "code": "\nuint calculateModifiedValue_08008e3c(uint inputValue)\n\n{\n  int leadingZeroes;\n  uint shiftAmount;\n  int baseValue;\n  uint tempValue;\n  \n  if (inputValue == 0) {\n    return 0;\n  }\n  leadingZeroes = count_leading_zeroes(inputValue);\n  shiftAmount = leadingZeroes - 8;\n  baseValue = shiftAmount * -0x800000 + 0x4a800000;\n  if (7 < leadingZeroes) {\n    tempValue = 0 << (shiftAmount & 0xff);\n    shiftAmount = baseValue + (inputValue << (shiftAmount & 0xff)) +\n            (0U >> (0x20 - shiftAmount & 0xff)) + (uint)(0x7fffffff < tempValue);\n    if (tempValue == 0x80000000) {\n      shiftAmount = shiftAmount & 0xfffffffe;\n    }\n    return shiftAmount;\n  }\n  tempValue = inputValue << (leadingZeroes + 0x18U & 0xff);\n  shiftAmount = baseValue + ((inputValue >> (0x20 - (leadingZeroes + 0x18U) & 0xff)) - ((int)tempValue >> 0x1f));\n  if ((tempValue & 0x7fffffff) == 0) {\n    shiftAmount = shiftAmount & ~(tempValue >> 0x1f);\n  }\n  return shiftAmount;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008e3c",
            "calling": [
                "FUN_08002638",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_modified_value_08008e3c"
        },
        "FUN_08009654": {
            "renaming": {
                "FUN_08009654": "process_long_long_08009654",
                "param_1": "lowBits",
                "param_2": "highBits",
                "uVar1": "intermediateValue1",
                "uVar2": "intermediateValue2",
                "lVar3": "result"
            },
            "code": "\nlonglong processLongLong_08009654(uint lowBits,uint highBits)\n\n{\n  uint intermediateValue1;\n  uint intermediateValue2;\n  longlong result;\n  \n  result = CONCAT44(highBits,lowBits);\n  intermediateValue2 = (highBits << 1) >> 0x15;\n  intermediateValue1 = intermediateValue2 - 0x3ff;\n  if ((int)intermediateValue1 < 0x14) {\n    if ((int)intermediateValue1 < 0) {\n      highBits = highBits & 0x80000000;\n      if (intermediateValue1 == 0xffffffff) {\n        highBits = highBits | 0x3ff00000;\n      }\n      result = (ulonglong)highBits << 0x20;\n    }\n    else {\n      intermediateValue2 = DAT_080096e4 >> (intermediateValue1 & 0xff);\n      result = CONCAT44(highBits,lowBits);\n      if ((highBits & intermediateValue2 | lowBits) != 0) {\n        result = (ulonglong)(highBits + (0x80000 >> (intermediateValue1 & 0xff)) & ~intermediateValue2) << 0x20;\n      }\n    }\n  }\n  else if ((int)intermediateValue1 < 0x34) {\n    intermediateValue2 = 0xffffffff >> (intermediateValue2 - 0x413 & 0xff);\n    if ((lowBits & intermediateValue2) != 0) {\n      intermediateValue1 = 1 << (0x33 - intermediateValue1 & 0xff);\n      if (CARRY4(lowBits,intermediateValue1) != false) {\n        highBits = highBits + 1;\n      }\n      result = CONCAT44(highBits,lowBits + intermediateValue1 & ~intermediateValue2);\n    }\n  }\n  else {\n    result = CONCAT44(highBits,lowBits);\n    if (intermediateValue1 == 0x400) {\n      result = FUN_080082d4();\n    }\n  }\n  return result;\n}\n\n",
            "called": [
                "FUN_080082d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009654",
            "calling": [
                "FUN_08004e30"
            ],
            "imported": false,
            "current_name": "process_long_long_08009654"
        },
        "FUN_08007bc2": {
            "renaming": {
                "FUN_08007bc2": "reset_control_registers_08007bc2"
            },
            "code": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid resetControlRegisters_08007bc2(void)\n\n{\n  _DAT_40000000 = _DAT_40000000 & 0xfffffffe;\n  _DAT_4000000c = _DAT_4000000c & 0xfffffff8;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007bc2",
            "calling": [
                "FUN_080057e4"
            ],
            "imported": false,
            "current_name": "reset_control_registers_08007bc2"
        },
        "FUN_08009410": {
            "renaming": {
                "FUN_08009410": "process_data_08009410",
                "param_1": "input_data",
                "param_2": "data_modifier",
                "uVar1": "result",
                "uVar2": "modifier_type",
                "local_28": "local_data_1",
                "uStack_24": "local_data_2",
                "local_20": "local_data_3",
                "uStack_1c": "local_data_4"
            },
            "code": "\nundefined4 process_data_08009410(undefined4 input_data,uint data_modifier)\n\n{\n  undefined4 result;\n  uint modifier_type;\n  undefined4 local_data_1;\n  undefined4 local_data_2;\n  undefined4 local_data_3;\n  undefined4 local_data_4;\n  \n  if (DAT_080094b4 < (int)(data_modifier & 0x7fffffff)) {\n    if (DAT_080094b8 < (int)(data_modifier & 0x7fffffff)) {\n      result = FUN_080082d0(input_data,data_modifier,input_data,data_modifier);\n    }\n    else {\n      modifier_type = FUN_08009d78(input_data,data_modifier,&local_data_1);\n      modifier_type = modifier_type & 3;\n      if (modifier_type == 1) {\n        result = FUN_0800adf0(local_data_1,local_data_2,local_data_3,local_data_4,1);\n      }\n      else if (modifier_type == 2) {\n        result = FUN_0800a348(local_data_1,local_data_2,local_data_3,local_data_4);\n      }\n      else if (modifier_type == 0) {\n        result = FUN_0800a348(local_data_1,local_data_2,local_data_3,local_data_4);\n      }\n      else {\n        result = FUN_0800adf0(local_data_1,local_data_2,local_data_3,local_data_4,1);\n      }\n    }\n    return result;\n  }\n  result = FUN_0800a348(input_data,data_modifier,0,0);\n  return result;\n}\n\n",
            "called": [
                "FUN_0800adf0",
                "FUN_080082d0",
                "FUN_08009d78",
                "FUN_0800a348"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009410",
            "calling": [
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "process_data_08009410"
        },
        "FUN_080035ec": {
            "renaming": {
                "FUN_080035ec": "update_parameters_080035ec",
                "param_1": "parameter1",
                "param_2": "parameter2",
                "param_3": "parameter3"
            },
            "code": "\nvoid update_parameters_080035ec(undefined4 parameter1,undefined4 parameter2,undefined4 parameter3)\n\n{\n  *(undefined4 *)PTR_DAT_08003614 = parameter1;\n  *(undefined4 *)(PTR_DAT_08003614 + 4) = parameter2;\n  *(undefined4 *)(PTR_DAT_08003614 + 8) = parameter3;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080035ec",
            "calling": [
                "FUN_0800283a"
            ],
            "imported": false,
            "current_name": "update_parameters_080035ec"
        },
        "FUN_08006c70": {
            "renaming": {
                "FUN_08006c70": "FUNC_08006c70"
            },
            "code": "\nvoid FUNC_08006c70(void)\n\n{\n  DataSynchronizationBarrier(0xf);\n  *(uint *)(DAT_08006c94 + 0xc) = DAT_08006c98 | *(uint *)(DAT_08006c94 + 0xc) & 0x700;\n  DataSynchronizationBarrier(0xf);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08006c70",
            "calling": [
                "FUN_08006d66"
            ],
            "imported": false,
            "current_name": "FUNC_08006c70"
        },
        "FUN_08006d98": {
            "renaming": {
                "FUN_08006d98": "process_char_and_params_08006d98",
                "param_1": "inputChar",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4",
                "uVar1": "processedChar"
            },
            "code": "\nvoid processCharAndParams_08006d98(char inputChar,undefined4 inputParam2,undefined4 inputParam3,undefined4 inputParam4)\n\n{\n  undefined4 processedChar;\n  \n  processedChar = FUN_08006b54((int)inputChar);\n  FUN_08006c04(processedChar,inputParam2,inputParam3,inputParam4);\n  return;\n}\n\n",
            "called": [
                "FUN_08006b54",
                "FUN_08006c04"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d98",
            "calling": [],
            "imported": false,
            "current_name": "process_char_and_params_08006d98"
        },
        "FUN_08005a68": {
            "renaming": {
                "FUN_08005a68": "increment_counter_08005a68"
            },
            "code": "\nvoid incrementCounter_08005a68(void)\n\n{\n  *(int *)PTR_DAT_08005a80 = *(int *)PTR_DAT_08005a80 + 1;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a68",
            "calling": [
                "FUN_08007756"
            ],
            "imported": false,
            "current_name": "increment_counter_08005a68"
        },
        "FUN_080079c0": {
            "renaming": {
                "FUN_080079c0": "initialize_data_080079c0"
            },
            "code": "\nvoid initializeData_080079c0(void)\n\n{\n  FUN_0800b430(PTR_DAT_080079d8,0,0x18);\n  *(undefined4 *)PTR_DAT_080079dc = 1;\n  return;\n}\n\n",
            "called": [
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080079c0",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "initialize_data_080079c0"
        },
        "FUN_0800b2e0": {
            "renaming": {
                "FUN_0800b2e0": "return_zero_0800b2e0"
            },
            "code": "\nundefined4 returnZero_0800b2e0(void)\n\n{\n  return 0;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2e0",
            "calling": [
                "FUN_0800981c",
                "FUN_080098d0"
            ],
            "imported": false,
            "current_name": "return_zero_0800b2e0"
        },
        "FUN_08002908": {
            "renaming": {
                "FUN_08002908": "calculate_result_08002908",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "intermediate1",
                "uVar2": "intermediate2"
            },
            "code": "\nundefined4 calculate_result_08002908(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 intermediate1;\n  undefined4 intermediate2;\n  \n  intermediate1 = FUN_08008cdc(input3,input3);\n  intermediate1 = FUN_08008eec(intermediate1,input4);\n  intermediate2 = FUN_08008eec(input1,input1);\n  intermediate1 = FUN_08008cd8(intermediate1,intermediate2);\n  intermediate2 = FUN_08008eec(input2,input2);\n  intermediate1 = FUN_08008cdc(intermediate1,intermediate2);\n  intermediate2 = FUN_08008eec(input3,0x40800000);\n  intermediate1 = FUN_08009054(intermediate1,intermediate2);\n  return intermediate1;\n}\n\n",
            "called": [
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_08008cdc",
                "FUN_08009054"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002908",
            "calling": [
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_result_08002908"
        },
        "FUN_08007c40": {
            "renaming": {
                "FUN_08007c40": "set_global_value_08007c40",
                "param_1": "value"
            },
            "code": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid setGlobalValue_08007c40(undefined4 value)\n\n{\n  _DAT_40000034 = value;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007c40",
            "calling": [
                "FUN_08005790"
            ],
            "imported": false,
            "current_name": "set_global_value_08007c40"
        },
        "FUN_080094c0": {
            "renaming": {
                "FUN_080094c0": "calculate_result_080094c0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "unused_param3",
                "param_4": "unused_param4",
                "iVar1": "check_result",
                "uVar2": "shifted_value",
                "uVar3": "temp_value",
                "bVar4": "carry_flag",
                "uVar5": "temp_result",
                "lVar6": "final_result"
            },
            "code": "\nlonglong calculate_result_080094c0(uint input1,uint input2,undefined4 unused_param3,undefined4 unused_param4)\n\n{\n  int check_result;\n  uint shifted_value;\n  uint temp_value;\n  bool carry_flag;\n  undefined8 temp_result;\n  longlong final_result;\n  \n  temp_value = (input2 << 1) >> 0x15;\n  shifted_value = temp_value - 0x3ff;\n  if ((int)shifted_value < 0x14) {\n    if ((int)shifted_value < 0) {\n      temp_result = FUN_080082d4(input1,input2,DAT_080095a8,DAT_080095ac,unused_param4);\n      check_result = FUN_08008b60((int)temp_result,(int)((ulonglong)temp_result >> 0x20),0,0);\n      final_result = CONCAT44(input2,input1);\n      if (check_result != 0) {\n        if ((int)input2 < 0) {\n          if ((input1 | input2 & 0x7fffffff) != 0) {\n            input2 = DAT_080095b4;\n          }\n          final_result = (ulonglong)input2 << 0x20;\n        }\n        else {\n          final_result = 0;\n        }\n      }\n    }\n    else {\n      temp_value = DAT_080095b0 >> (shifted_value & 0xff);\n      final_result = CONCAT44(input2,input1);\n      if ((input2 & temp_value | input1) != 0) {\n        temp_result = FUN_080082d4(input1,input2,DAT_080095a8,DAT_080095ac,unused_param4);\n        check_result = FUN_08008b60((int)temp_result,(int)((ulonglong)temp_result >> 0x20),0,0);\n        final_result = CONCAT44(input2,input1);\n        if (check_result != 0) {\n          if ((int)input2 < 0) {\n            input2 = input2 + (0x100000 >> (shifted_value & 0xff));\n          }\n          final_result = (ulonglong)(input2 & ~temp_value) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)shifted_value < 0x34) {\n    temp_value = 0xffffffff >> (temp_value - 0x413 & 0xff);\n    final_result = CONCAT44(input2,input1);\n    if ((temp_value & input1) != 0) {\n      temp_result = FUN_080082d4(input1,input2,DAT_080095a8,DAT_080095ac,unused_param4);\n      check_result = FUN_08008b60((int)temp_result,(int)((ulonglong)temp_result >> 0x20),0,0);\n      final_result = CONCAT44(input2,input1);\n      if (check_result != 0) {\n        if ((int)input2 < 0) {\n          if (shifted_value == 0x14) {\n            input2 = input2 + 1;\n          }\n          else {\n            shifted_value = 1 << (0x34 - shifted_value & 0xff);\n            carry_flag = CARRY4(shifted_value,input1);\n            input1 = shifted_value + input1;\n            if (carry_flag != false) {\n              input2 = input2 + 1;\n            }\n          }\n        }\n        final_result = CONCAT44(input2,input1 & ~temp_value);\n      }\n    }\n  }\n  else {\n    final_result = CONCAT44(input2,input1);\n    if (shifted_value == 0x400) {\n      final_result = FUN_080082d4();\n    }\n  }\n  return final_result;\n}\n\n",
            "called": [
                "FUN_08008b60",
                "FUN_080082d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080094c0",
            "calling": [
                "FUN_0800a5a0",
                "FUN_08002408",
                "FUN_08002c18",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "calculate_result_080094c0"
        },
        "FUN_08008eec": {
            "renaming": {
                "FUN_08008eec": "float_multiplication_08008eec",
                "param_1": "float1",
                "param_2": "float2",
                "param_3": "unused_param",
                "param_4": "float1_exp",
                "lVar1": "long_product",
                "uVar2": "temp_var",
                "uVar3": "float1_mantissa",
                "iVar4": "new_exp",
                "iVar5": "temp_exp",
                "uVar6": "product_low",
                "iVar7": "temp_exp2",
                "uVar8": "result",
                "bVar9": "condition",
                "bVar10": "borrow"
            },
            "code": "\nuint float_multiplication_08008eec(uint float1,uint float2,undefined4 unused_param,uint float1_exp)\n\n{\n  longlong long_product;\n  uint temp_var;\n  uint float1_mantissa;\n  int new_exp;\n  int temp_exp;\n  uint product_low;\n  int temp_exp2;\n  uint result;\n  bool condition;\n  bool borrow;\n  \n  float1_mantissa = float1 >> 0x17 & 0xff;\n  condition = float1_mantissa == 0;\n  if (!condition) {\n    float1_exp = float2 >> 0x17 & 0xff;\n    condition = float1_exp == 0;\n  }\n  if (!condition) {\n    condition = float1_mantissa == 0xff;\n  }\n  if (!condition) {\n    condition = float1_exp == 0xff;\n  }\n  if (condition) {\n    float1_exp = float2 >> 0x17 & 0xff;\n    if (float1_mantissa == 0xff || float1_exp == 0xff) {\n      condition = float1 == 0 || float1 == 0x80000000;\n      temp_var = float2;\n      if (float1 != 0 && float1 != 0x80000000) {\n        condition = float2 == 0;\n        temp_var = float1;\n      }\n      if (!condition) {\n        condition = float2 == 0x80000000;\n      }\n      result = temp_var;\n      if (((condition) || ((float1_mantissa == 0xff && ((temp_var & 0x7fffff) != 0)))) ||\n         ((float1_exp == 0xff && (result = float2, (float2 & 0x7fffff) != 0)))) {\n        return result | 0x7fc00000;\n      }\n      temp_var = temp_var ^ float2;\n      goto LAB_0800903c;\n    }\n    condition = (float1 & 0x7fffffff) == 0;\n    if (!condition) {\n      condition = (float2 & 0x7fffffff) == 0;\n    }\n    if (condition) {\n      return (float1 ^ float2) & 0x80000000;\n    }\n    condition = float1_mantissa == 0;\n    temp_var = float1 & 0x80000000;\n    while( true ) {\n      if (condition) {\n        float1 = float1 << 1;\n        condition = (float1 & 0x800000) == 0;\n      }\n      if (!condition) break;\n      float1_mantissa = float1_mantissa - 1;\n    }\n    float1 = float1 | temp_var;\n    condition = float1_exp == 0;\n    temp_var = float2 & 0x80000000;\n    while( true ) {\n      if (condition) {\n        float2 = float2 << 1;\n        condition = (float2 & 0x800000) == 0;\n      }\n      if (!condition) break;\n      float1_exp = float1_exp - 1;\n    }\n    float2 = float2 | temp_var;\n  }\n  new_exp = float1_mantissa + float1_exp;\n  result = float1 ^ float2;\n  float1_mantissa = float1 << 9;\n  condition = float1_mantissa == 0;\n  if (!condition) {\n    float2 = float2 << 9;\n    condition = float2 == 0;\n  }\n  if (condition) {\n    if (float1_mantissa == 0) {\n      float2 = float2 << 9;\n    }\n    temp_var = result & 0x80000000 | float1 & 0x7fffff | float2 >> 9;\n    borrow = SBORROW4(new_exp,0x7f);\n    temp_exp = new_exp + -0x7f;\n    condition = temp_exp == 0;\n    temp_exp2 = temp_exp;\n    if (!condition && 0x7e < new_exp) {\n      borrow = SBORROW4(0xff,temp_exp);\n      temp_exp2 = 0xff - temp_exp;\n      condition = temp_exp == 0xff;\n    }\n    if (!condition && temp_exp2 < 0 == borrow) {\n      temp_var = temp_var | temp_exp * 0x800000;\n    }\n    if (!condition && temp_exp2 < 0 == borrow) {\n      return temp_var;\n    }\n    temp_var = temp_var | 0x800000;\n    product_low = 0;\n    borrow = SBORROW4(temp_exp,1);\n    result = new_exp - 0x80;\n    condition = result == 0;\n    float1_mantissa = result;\n  }\n  else {\n    long_product = (ulonglong)(float1_mantissa >> 5 | 0x8000000) * (ulonglong)(float2 >> 5 | 0x8000000);\n    product_low = (uint)long_product;\n    temp_var = (uint)((ulonglong)long_product >> 0x20);\n    condition = temp_var < 0x800000;\n    if (condition) {\n      temp_var = temp_var << 1;\n    }\n    if (condition) {\n      temp_var = temp_var | product_low >> 0x1f;\n      product_low = product_low << 1;\n    }\n    temp_var = result & 0x80000000 | temp_var;\n    result = (new_exp + -0x7f) - (uint)condition;\n    borrow = SBORROW4(result,0xfd);\n    condition = result == 0xfd;\n    float1_mantissa = result - 0xfd;\n    if (result < 0xfe) {\n      temp_var = temp_var + result * 0x800000 + (uint)(0x7fffffff < product_low);\n      if (product_low == 0x80000000) {\n        temp_var = temp_var & 0xfffffffe;\n      }\n      return temp_var;\n    }\n  }\n  if (condition || (int)float1_mantissa < 0 != borrow) {\n    condition = (int)(result + 0x19) < 0;\n    if (result == 0xffffffe7 || condition != SCARRY4(result,0x19)) {\n      temp_var = temp_var & 0x80000000;\n    }\n    if (result != 0xffffffe7 && condition == SCARRY4(result,0x19)) {\n      float1_mantissa = (temp_var << 1) >> (-result & 0xff);\n      result = temp_var << (result + 0x20 & 0xff);\n      float1_mantissa = ((uint)((temp_var & 0x80000000) != 0) << 0x1f | float1_mantissa >> 1) + (uint)((byte)float1_mantissa & 1);\n      if ((product_low | result << 1) == 0) {\n        float1_mantissa = float1_mantissa & ~(result >> 0x1f);\n      }\n      return float1_mantissa;\n    }\n    return temp_var;\n  }\nLAB_0800903c:\n  return temp_var & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008eec",
            "calling": [
                "FUN_08003618",
                "FUN_080028bc",
                "FUN_080005b4",
                "FUN_08002638",
                "FUN_08002408",
                "FUN_08002978",
                "FUN_08004e30",
                "FUN_08002908",
                "FUN_080024c4",
                "FUN_08001f00",
                "FUN_08003004",
                "FUN_08003826",
                "FUN_08002c18",
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "float_multiplication_08008eec"
        },
        "FUN_08006b54": {
            "renaming": {
                "FUN_08006b54": "get_modified_byte_08006b54",
                "param_1": "inputByte",
                "bVar1": "modifiedByte"
            },
            "code": "\nbyte getModifiedByte_08006b54(byte inputByte)\n\n{\n  byte modifiedByte;\n  \n  if ((char)inputByte < '\\0') {\n    modifiedByte = *(byte *)((inputByte & 0xf) + DAT_08006b98 + 0x14);\n  }\n  else {\n    modifiedByte = *(byte *)((char)inputByte + DAT_08006b9c + 0x300);\n  }\n  return modifiedByte >> 4;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006b54",
            "calling": [
                "FUN_08006d98"
            ],
            "imported": false,
            "current_name": "get_modified_byte_08006b54"
        },
        "FUN_08007e84": {
            "renaming": {
                "FUN_08007e84": "get_lower_byte_08007e84"
            },
            "code": "\nuint get_lower_byte_08007e84(void)\n\n{\n  return *(uint *)(DAT_08007ea0 + 4) & 0xff;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e84",
            "calling": [
                "FUN_08008286"
            ],
            "imported": false,
            "current_name": "get_lower_byte_08007e84"
        },
        "FUN_080057e4": {
            "renaming": {
                "FUN_080057e4": "check_and_perform_action_080057e4",
                "do_nothing_0800530c": "performAction"
            },
            "code": "\nvoid checkAndPerformAction_080057e4(void)\n\n{\n  FUN_08007bc2();\n  if ((PTR_DAT_0800580c[0x3c] != -1) || ((PTR_DAT_08005810[2] & 0x20) != 0)) {\n    do_nothing_0800530c();\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08007bc2",
                "FUN_0800530c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080057e4",
            "calling": [
                "FUN_0800583c",
                "FUN_080025e8",
                "FUN_08001d4c",
                "FUN_080053a0"
            ],
            "imported": false,
            "current_name": "check_and_perform_action_080057e4"
        },
        "FUN_08006d8a": {
            "renaming": {
                "FUN_08006d8a": "get_result_08006d8a",
                "uVar1": "result"
            },
            "code": "\nundefined4 get_result_08006d8a(void)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006998();\n  return result;\n}\n\n",
            "called": [
                "FUN_08006998"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d8a",
            "calling": [],
            "imported": false,
            "current_name": "get_result_08006d8a"
        },
        "FUN_0800b2e8": {
            "renaming": {
                "FUN_0800b2e8": "calculate_result_0800b2e8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "offset",
                "param_4": "flags",
                "uVar1": "tempResult",
                "iVar2": "adjustedOffset",
                "uVar3": "shiftedInput",
                "uVar4": "combinedInput"
            },
            "code": "\nuint calculateResult_0800b2e8(uint input1,uint input2,int offset,undefined4 flags)\n\n{\n  uint tempResult;\n  int adjustedOffset;\n  uint shiftedInput;\n  ulonglong combinedInput;\n  \n  combinedInput = CONCAT44(input2,input1);\n  tempResult = (input2 << 1) >> 0x15;\n  if (tempResult == 0) {\n    if ((input1 | input2 & 0x7fffffff) == 0) {\n      return input1;\n    }\n    combinedInput = FUN_08008640(input1,input2,0,DAT_0800b3c8);\n    if (offset < DAT_0800b3cc) goto LAB_0800b34a;\n    tempResult = ((uint)((int)(combinedInput >> 0x20) << 1) >> 0x15) - 0x36;\n  }\n  else if (tempResult == 0x7ff) {\n    tempResult = FUN_080082d4(input1,input2,input1,input2,flags);\n    return tempResult;\n  }\n  shiftedInput = (uint)(combinedInput >> 0x20);\n  adjustedOffset = tempResult + offset;\n  if (adjustedOffset < 0x7ff) {\n    if (0 < adjustedOffset) {\n      return (uint)combinedInput;\n    }\n    if (adjustedOffset + 0x35 < 0 == SCARRY4(adjustedOffset,0x35)) {\n      tempResult = FUN_08008640((uint)combinedInput,shiftedInput & 0x800fffff | (adjustedOffset + 0x36) * 0x100000,0,DAT_0800b3d8\n                          );\n      return tempResult;\n    }\n    if (offset < 0xc351) {\n      combinedInput = combinedInput & 0x8000000000000000 | (ulonglong)DAT_0800b3d0 | 0x1a56e1f00000000;\nLAB_0800b34a:\n      tempResult = FUN_08008640((int)combinedInput,(int)(combinedInput >> 0x20),DAT_0800b3b8,DAT_0800b3bc);\n      return tempResult;\n    }\n  }\n  tempResult = FUN_08008640(DAT_0800b3d4,shiftedInput & 0x80000000 | 0x7e37e43c,DAT_0800b3c0,DAT_0800b3c4);\n  return tempResult;\n}\n\n",
            "called": [
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2e8",
            "calling": [
                "FUN_0800a5a0"
            ],
            "imported": false,
            "current_name": "calculate_result_0800b2e8"
        },
        "FUN_08005220": {
            "renaming": {
                "FUN_08005220": "do_nothing_08005220"
            },
            "code": "\nvoid do_nothing_08005220(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005220",
            "calling": [
                "FUN_0800525c"
            ],
            "imported": false,
            "current_name": "do_nothing_08005220"
        },
        "FUN_08007520": {
            "renaming": {
                "FUN_08007520": "check_and_execute_08007520",
                "param_1": "inputNumber"
            },
            "code": "\nvoid checkAndExecute_08007520(uint inputNumber)\n\n{\n  if ((inputNumber & 1) != 0) {\n    FUN_080073d4(0x3e);\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_080073d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007520",
            "calling": [
                "FUN_08007930"
            ],
            "imported": false,
            "current_name": "check_and_execute_08007520"
        },
        "FUN_08007884": {
            "renaming": {
                "FUN_08007884": "combine_bits_08007884",
                "iVar1": "bit1",
                "iVar2": "bit2",
                "iVar3": "bit3",
                "iVar4": "bit4",
                "iVar5": "bit5",
                "uVar6": "combinedBits"
            },
            "code": "\nuint combineBits_08007884(void)\n\n{\n  int bit1;\n  int bit2;\n  int bit3;\n  int bit4;\n  int bit5;\n  uint combinedBits;\n  \n  bit1 = FUN_08007854(0x36);\n  bit2 = FUN_08007854(0x37);\n  bit3 = FUN_08007854(0x38);\n  bit4 = FUN_08007854(0x39);\n  bit5 = FUN_08007854(0xf);\n  combinedBits = FUN_08007854(0);\n  return combinedBits | bit1 << 4 | bit2 << 3 | bit3 << 2 | bit4 << 1 | bit5 << 7;\n}\n\n",
            "called": [
                "FUN_08007854"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007884",
            "calling": [
                "FUN_08007930"
            ],
            "imported": false,
            "current_name": "combine_bits_08007884"
        },
        "FUN_08004250": {
            "renaming": {
                "FUN_08004250": "display_machine_settings_08004250",
                "uVar1": "convertedValue"
            },
            "code": "\nvoid displayMachineSettings_08004250(void)\n\n{\n  undefined4 convertedValue;\n  \n  FUN_080036c6(PTR_DAT_08004470);\n  FUN_08003826(*(undefined4 *)PTR_DAT_08004474);\n  FUN_080036c6(PTR_s___x__step_mm___1__08004478);\n  FUN_08003826(*(undefined4 *)(PTR_DAT_08004474 + 4));\n  FUN_080036c6(PTR_s___y__step_mm___2__0800447c);\n  FUN_08003826(*(undefined4 *)(PTR_DAT_08004474 + 8));\n  FUN_080036c6(PTR_s___z__step_mm___3__08004480);\n  FUN_080037fc(PTR_DAT_08004474[0xd]);\n  FUN_080036c6(PTR_s___step_pulse__usec___4__08004484);\n  FUN_08003826(*(undefined4 *)(PTR_DAT_08004474 + 0x10));\n  FUN_080036c6(PTR_s___default_feed__mm_min___5__08004488);\n  FUN_08003826(*(undefined4 *)(PTR_DAT_08004474 + 0x14));\n  FUN_080036c6(PTR_s___default_seek__mm_min___6__0800448c);\n  FUN_080037fc(*(undefined2 *)(PTR_DAT_08004474 + 0x18));\n  FUN_080036c6(PTR_s___step_port_invert_mask__int__08004490);\n  FUN_0800375c(*(undefined2 *)(PTR_DAT_08004474 + 0x18));\n  FUN_080036c6(PTR_s____7__08004494);\n  FUN_080037fc(PTR_DAT_08004474[0x3c]);\n  FUN_080036c6(PTR_s___step_idle_delay__msec___8__08004498);\n  convertedValue = FUN_08009054(*(undefined4 *)(PTR_DAT_08004474 + 0x20),DAT_0800449c);\n  FUN_08003826(convertedValue);\n  FUN_080036c6(PTR_s___acceleration__mm_sec_2___9__080044a0);\n  FUN_08003826(*(undefined4 *)(PTR_DAT_08004474 + 0x24));\n  FUN_080036c6(PTR_s___junction_deviation__mm___10__080044a4);\n  FUN_08003826(*(undefined4 *)(PTR_DAT_08004474 + 0x1c));\n  FUN_080036c6(PTR_s___arc__mm_segment___11__080044a8);\n  FUN_080037fc(PTR_DAT_08004474[0x3e]);\n  FUN_080036c6(PTR_s___n_arc_correction__int___12__080044ac);\n  FUN_080037fc(PTR_DAT_08004474[0x3d]);\n  FUN_080036c6(PTR_s___n_decimals__int___13__080044b0);\n  FUN_080037fc((PTR_DAT_08004474[0x28] & 1) != 0);\n  FUN_080036c6(PTR_s___report_inches__bool___14__080044b4);\n  FUN_080037fc((PTR_DAT_08004474[0x28] & 2) != 0);\n  FUN_080036c6(PTR_s___auto_start__bool___15__080044b8);\n  FUN_080037fc((PTR_DAT_08004474[0x28] & 4) != 0);\n  FUN_080036c6(PTR_s___invert_step_enable__bool___16__080044bc);\n  FUN_080037fc((PTR_DAT_08004474[0x28] & 8) != 0);\n  FUN_080036c6(PTR_s___hard_limits__bool___17__080044c0);\n  FUN_080037fc((PTR_DAT_08004474[0x28] & 0x10) != 0);\n  FUN_080036c6(PTR_s___homing_cycle__bool___18__080044c4);\n  FUN_080037fc(*(undefined2 *)(PTR_DAT_08004474 + 0x2a));\n  FUN_080036c6(PTR_s___homing_dir_invert_mask__int__080044c8);\n  FUN_0800375c(*(undefined2 *)(PTR_DAT_08004474 + 0x2a));\n  FUN_080036c6(PTR_s____19__080044cc);\n  FUN_08003826(*(undefined4 *)(PTR_DAT_08004474 + 0x2c));\n  FUN_080036c6(PTR_s___homing_feed__mm_min___20__080044d0);\n  FUN_08003826(*(undefined4 *)(PTR_DAT_08004474 + 0x30));\n  FUN_080036c6(PTR_s___homing_seek__mm_min___21__080044d4);\n  FUN_080037fc(*(undefined2 *)(PTR_DAT_08004474 + 0x34));\n  FUN_080036c6(PTR_s___homing_debounce__msec___22__080044d8);\n  FUN_08003826(*(undefined4 *)(PTR_DAT_08004474 + 0x38));\n  FUN_080036c6(PTR_s___homing_pull_off__mm___23__080044dc);\n  FUN_080037fc(*(undefined2 *)(PTR_DAT_08004474 + 0x1a));\n  FUN_080036c6(PTR_s___dir_port_invert_mask__int__080044e0);\n  FUN_0800375c(*(undefined2 *)(PTR_DAT_08004474 + 0x1a));\n  FUN_080036c6(PTR_DAT_080044e4);\n  return;\n}\n\n",
            "called": [
                "FUN_080037fc",
                "FUN_080036c6",
                "FUN_08003826",
                "FUN_08009054",
                "FUN_0800375c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004250",
            "calling": [
                "FUN_080051b4",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "display_machine_settings_08004250"
        },
        "FUN_08006dc4": {
            "renaming": {
                "FUN_08006dc4": "process_character_08006dc4",
                "param_1": "inputChar"
            },
            "code": "\nvoid processCharacter_08006dc4(char inputChar)\n\n{\n  FUN_08006a58((int)inputChar);\n  return;\n}\n\n",
            "called": [
                "FUN_08006a58"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006dc4",
            "calling": [],
            "imported": false,
            "current_name": "process_character_08006dc4"
        },
        "FUN_08007402": {
            "renaming": {
                "FUN_08007402": "set_bit_at_position_08007402",
                "param_1": "bitPosition"
            },
            "code": "\nvoid setBitAtPosition_08007402(uint bitPosition)\n\n{\n  *(short *)(((int)bitPosition >> 4) * 0x400 + 0x40020018) = (short)(1 << (bitPosition & 0xf));\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007402",
            "calling": [
                "FUN_080074c8"
            ],
            "imported": false,
            "current_name": "set_bit_at_position_08007402"
        },
        "FUN_08002870": {
            "renaming": {
                "FUN_08002870": "increment_and_check_08002870",
                "param_1": "input_char",
                "local_9": "result_char"
            },
            "code": "\nchar increment_and_check_08002870(char input_char)\n\n{\n  char result_char;\n  \n  result_char = input_char + '\\x01';\n  if (result_char == '\\x12') {\n    result_char = '\\0';\n  }\n  return result_char;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002870",
            "calling": [
                "FUN_08002ba8",
                "FUN_08002f40",
                "FUN_08003004",
                "FUN_08002ef0",
                "FUN_08002e08"
            ],
            "imported": false,
            "current_name": "increment_and_check_08002870"
        },
        "FUN_08000210": {
            "renaming": {
                "FUN_08000210": "execute_operations_08000210",
                "do_nothing_080001ec": "operationA",
                "do_nothing_080001d4": "operationB"
            },
            "code": "\nvoid executeOperations_08000210(void)\n\n{\n  do_nothing_080001ec();\n  do_nothing_080001d4();\n  return;\n}\n\n",
            "called": [
                "FUN_080001ec",
                "FUN_080001d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000210",
            "calling": [
                "FUN_080025e8",
                "FUN_08000220",
                "FUN_080001f8"
            ],
            "imported": false,
            "current_name": "execute_operations_08000210"
        },
        "FUN_08005900": {
            "renaming": {
                "FUN_08005900": "process_input_byte_08005900",
                "param_1": "inputByte"
            },
            "code": "\nundefined4 processInputByte_08005900(byte inputByte)\n\n{\n  if (inputByte == 0x7e) {\n    PTR_DAT_08005978[2] = PTR_DAT_08005978[2] | 2;\n    return 1;\n  }\n  if (inputByte < 0x7f) {\n    if (inputByte == 0x3f) {\n      PTR_DAT_08005978[2] = PTR_DAT_08005978[2] | 1;\n      return 1;\n    }\n    if (inputByte < 0x40) {\n      if (inputByte == 0x18) {\n        FUN_080025e8();\n        return 1;\n      }\n      if (inputByte == 0x21) {\n        PTR_DAT_08005978[2] = PTR_DAT_08005978[2] | 8;\n        return 1;\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "called": [
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005900",
            "calling": [
                "FUN_08008286"
            ],
            "imported": false,
            "current_name": "process_input_byte_08005900"
        },
        "FUN_08002638": {
            "renaming": {
                "FUN_08002638": "parse_and_process_number_08002638",
                "param_1": "baseOffset",
                "param_2": "inputByte",
                "param_3": "result",
                "bVar1": "digitDiff",
                "bVar2": "isNegative",
                "bVar3": "isDecimal",
                "iVar4": "checkResult",
                "pcVar5": "tempPtr",
                "pcVar6": "startPtr",
                "uVar7": "returnCode",
                "uVar8": "tempValue",
                "local_1c": "processedNumber",
                "local_16": "digitCount",
                "local_15": "decimalPlaces",
                "local_14": "integerPart",
                "local_d": "currentChar",
                "local_c": "currentPtr"
            },
            "code": "\nundefined4 parseAndProcessNumber_08002638(int baseOffset,byte *inputByte,uint *result)\n\n{\n  byte digitDiff;\n  bool isNegative;\n  bool isDecimal;\n  int checkResult;\n  char *tempPtr;\n  char *startPtr;\n  undefined4 returnCode;\n  undefined8 tempValue;\n  uint processedNumber;\n  byte digitCount;\n  char decimalPlaces;\n  int integerPart;\n  char currentChar;\n  char *currentPtr;\n  \n  startPtr = (char *)(baseOffset + (uint)*inputByte);\n  tempPtr = startPtr + 1;\n  currentChar = *startPtr;\n  isNegative = false;\n  if (currentChar == '-') {\n    isNegative = true;\n    currentChar = *tempPtr;\n    currentPtr = startPtr + 2;\n  }\n  else {\n    currentPtr = tempPtr;\n    if (currentChar == '+') {\n      currentPtr = startPtr + 2;\n      currentChar = *tempPtr;\n    }\n  }\n  integerPart = 0;\n  decimalPlaces = '\\0';\n  digitCount = 0;\n  isDecimal = false;\n  do {\n    digitDiff = currentChar - 0x30;\n    if (digitDiff < 10) {\n      digitCount = digitCount + 1;\n      if (digitCount < 9) {\n        if (isDecimal) {\n          decimalPlaces = decimalPlaces + -1;\n        }\n        integerPart = (uint)digitDiff + integerPart * 10;\n      }\n      else if (!isDecimal) {\n        decimalPlaces = decimalPlaces + '\\x01';\n      }\n    }\n    else {\n      if ((digitDiff != 0xfe) || (isDecimal)) {\n        if (digitCount == 0) {\n          returnCode = 0;\n        }\n        else {\n          processedNumber = FUN_08008e3c(integerPart);\n          checkResult = FUN_08009214(processedNumber,0);\n          if (checkResult == 0) {\n            for (; decimalPlaces < -1; decimalPlaces = decimalPlaces + '\\x02') {\n              tempValue = FUN_08008590(processedNumber);\n              tempValue = FUN_08008640((int)tempValue,(int)((ulonglong)tempValue >> 0x20),DAT_08002800,\n                                   DAT_08002804);\n              processedNumber = FUN_08008c30((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n            }\n            if (decimalPlaces < '\\0') {\n              tempValue = FUN_08008590(processedNumber);\n              tempValue = FUN_08008640((int)tempValue,(int)((ulonglong)tempValue >> 0x20),DAT_08002808,\n                                   DAT_0800280c);\n              processedNumber = FUN_08008c30((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n            }\n            else {\n              for (; '\\0' < decimalPlaces; decimalPlaces = decimalPlaces + -1) {\n                processedNumber = FUN_08008eec(processedNumber,DAT_08002810);\n              }\n            }\n          }\n          if (isNegative) {\n            *result = processedNumber ^ 0x80000000;\n          }\n          else {\n            *result = processedNumber;\n          }\n          *inputByte = ((char)currentPtr - (char)baseOffset) - 1;\n          returnCode = 1;\n        }\n        return returnCode;\n      }\n      isDecimal = true;\n    }\n    currentChar = *currentPtr;\n    currentPtr = currentPtr + 1;\n  } while( true );\n}\n\n",
            "called": [
                "FUN_08008640",
                "FUN_08009214",
                "FUN_08008e3c",
                "FUN_08008c30",
                "FUN_08008eec",
                "FUN_08008590"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002638",
            "calling": [
                "FUN_0800184c",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "parse_and_process_number_08002638"
        },
        "FUN_080051b4": {
            "renaming": {
                "FUN_080051b4": "process_data_080051b4",
                "iVar1": "result",
                "auStack_18": "buffer",
                "local_9": "index"
            },
            "code": "\nvoid processData_080051b4(void)\n\n{\n  int result;\n  undefined buffer [15];\n  byte index;\n  \n  result = FUN_08004dd2();\n  if (result == 0) {\n    FUN_08004030(10);\n    FUN_08004c48(1);\n    FUN_08004250();\n  }\n  for (index = 0; index < 8; index = index + 1) {\n    result = FUN_08004d7c(index,buffer);\n    if (result == 0) {\n      FUN_08004030(10);\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08004d7c",
                "FUN_08004030",
                "FUN_08004250",
                "FUN_08004c48",
                "FUN_08004dd2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080051b4",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "process_data_080051b4"
        },
        "FUN_080098d0": {
            "renaming": {
                "FUN_080098d0": "process_data_080098d0",
                "param_1": "input_1",
                "param_2": "input_2",
                "cVar1": "config_value",
                "uVar2": "initial_result",
                "iVar3": "function_result",
                "puVar4": "error_code_ptr",
                "piVar5": "local_result_ptr",
                "local_50": "flag",
                "local_4c": "data_pointer",
                "local_48": "data_1",
                "uStack_44": "data_2",
                "local_40": "data_3",
                "uStack_3c": "data_4",
                "local_38": "final_result",
                "local_30": "local_result"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nundefined4 process_data_080098d0(undefined4 input_1,undefined4 input_2)\n\n{\n  char config_value;\n  undefined4 initial_result;\n  int function_result;\n  undefined4 *error_code_ptr;\n  int *local_result_ptr;\n  undefined4 flag;\n  undefined *data_pointer;\n  undefined4 data_1;\n  undefined4 data_2;\n  undefined4 data_3;\n  undefined4 data_4;\n  undefined8 final_result;\n  int local_result;\n  \n  initial_result = FUN_0800a1bc();\n  config_value = *PTR_DAT_08009988;\n  if (((config_value == -1) || (local_result = FUN_08008b74(input_1,input_2,input_1,input_2), local_result != 0))\n     || (function_result = FUN_08008b24(input_1,input_2,0,0), function_result == 0)) {\n    return initial_result;\n  }\n  flag = 1;\n  data_pointer = PTR_DAT_0800998c;\n  data_1 = input_1;\n  data_2 = input_2;\n  data_3 = input_1;\n  data_4 = input_2;\n  if (config_value == '\\0') {\n    final_result = 0;\nLAB_0800996c:\n    function_result = FUN_0800b2e0(&flag);\n    if (function_result != 0) goto joined_r0x0800997a;\n  }\n  else {\n    final_result = FUN_08008894(0,0,0,0);\n    if (config_value != '\\x02') goto LAB_0800996c;\n  }\n  error_code_ptr = (undefined4 *)FUN_0800b3dc();\n  *error_code_ptr = 0x21;\njoined_r0x0800997a:\n  if (local_result != 0) {\n    local_result_ptr = (int *)FUN_0800b3dc();\n    *local_result_ptr = local_result;\n  }\n  return (undefined4)final_result;\n}\n\n",
            "called": [
                "FUN_08008894",
                "FUN_0800b2e0",
                "FUN_08008b24",
                "FUN_08008b74",
                "FUN_0800b3dc",
                "FUN_0800a1bc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080098d0",
            "calling": [
                "FUN_08003004",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "process_data_080098d0"
        },
        "FUN_08005c30": {
            "renaming": {
                "FUN_08005c30": "validate_and_set_values_08005c30",
                "param_1": "inputValue",
                "bVar1": "isValid"
            },
            "code": "\nbool validateAndSetValues_08005c30(int inputValue)\n\n{\n  bool isValid;\n  \n  isValid = inputValue - 1U < 0x1000000;\n  if (isValid) {\n    DAT_08005c70[1] = inputValue + -1;\n    FUN_08005bdc(0xffffffff,0xf);\n    DAT_08005c70[2] = 0;\n    *DAT_08005c70 = 7;\n  }\n  return !isValid;\n}\n\n",
            "called": [
                "FUN_08005bdc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005c30",
            "calling": [
                "FUN_0800618c"
            ],
            "imported": false,
            "current_name": "validate_and_set_values_08005c30"
        },
        "FUN_0800b51c": {
            "renaming": {
                "FUN_0800b51c": "do_nothing_0800b51c"
            },
            "code": "\nvoid do_nothing_0800b51c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b51c",
            "calling": [
                "FUN_0800b524"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b51c"
        },
        "FUN_0800056c": {
            "renaming": {
                "FUN_0800056c": "process_data_0800056c",
                "param_1": "inputData",
                "uVar1": "intermediateResult"
            },
            "code": "\nundefined4 processData_0800056c(undefined4 inputData)\n\n{\n  undefined8 intermediateResult;\n  \n  if (PTR_DAT_080005b0[3] != '\\0') {\n    intermediateResult = FUN_08008590(inputData);\n    intermediateResult = FUN_08008640((int)intermediateResult,(int)((ulonglong)intermediateResult >> 0x20),DAT_080005a8,DAT_080005ac);\n    inputData = FUN_08008c30((int)intermediateResult,(int)((ulonglong)intermediateResult >> 0x20));\n  }\n  return inputData;\n}\n\n",
            "called": [
                "FUN_08008640",
                "FUN_08008c30",
                "FUN_08008590"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800056c",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "process_data_0800056c"
        },
        "FUN_08002f24": {
            "renaming": {
                "FUN_08002f24": "initialize_system_08002f24"
            },
            "code": "\nvoid initialize_system_08002f24(void)\n\n{\n  FUN_08002ef0();\n  FUN_0800b430(PTR_DAT_08002f3c,0,0x1c);\n  return;\n}\n\n",
            "called": [
                "FUN_0800b430",
                "FUN_08002ef0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f24",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initialize_system_08002f24"
        },
        "FUN_0800981c": {
            "renaming": {
                "FUN_0800981c": "calculate_result_0800981c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "cVar1": "char_var",
                "puVar2": "ptr_var",
                "iVar3": "int_var",
                "puVar4": "ptr_var_4",
                "piVar5": "int_ptr_var",
                "uVar6": "result",
                "local_50": "local_var_50",
                "puStack_4c": "ptr_stack_4c",
                "local_48": "local_var_48",
                "uStack_44": "stack_var_44",
                "local_40": "local_var_40",
                "uStack_3c": "stack_var_3c",
                "local_38": "local_var_38",
                "uStack_34": "stack_var_34",
                "local_30": "local_var_30"
            },
            "code": "\nundefined8 calculate_result_0800981c(undefined4 input_1,undefined4 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  char char_var;\n  undefined *ptr_var;\n  int int_var;\n  undefined4 *ptr_var_4;\n  int *int_ptr_var;\n  undefined8 result;\n  undefined4 local_var_50;\n  undefined *ptr_stack_4c;\n  undefined4 local_var_48;\n  undefined4 stack_var_44;\n  undefined4 local_var_40;\n  undefined4 stack_var_3c;\n  undefined4 local_var_38;\n  undefined4 stack_var_34;\n  int local_var_30;\n  \n  ptr_var = PTR_DAT_080098cc;\n  result = FUN_08009b24();\n  if (*ptr_var == -1) {\n    return result;\n  }\n  local_var_30 = FUN_0800b2d4();\n  if (local_var_30 != 0) {\n    return result;\n  }\n  int_var = FUN_0800b2d4(input_1,input_2);\n  if (int_var == 0) {\n    return result;\n  }\n  int_var = FUN_0800b2d4(input_3,input_4);\n  if (int_var == 0) {\n    return result;\n  }\n  char_var = *ptr_var;\n  local_var_50 = 3;\n  ptr_stack_4c = PTR_s_hypot_080098c0;\n  local_var_48 = input_1;\n  stack_var_44 = input_2;\n  local_var_40 = input_3;\n  stack_var_3c = input_4;\n  if (char_var == '\\0') {\n    local_var_38 = 0xe0000000;\n    stack_var_34 = DAT_080098c8;\nLAB_080098aa:\n    int_var = FUN_0800b2e0(&local_var_50);\n    if (int_var != 0) goto LAB_08009896;\n  }\n  else {\n    local_var_38 = 0;\n    stack_var_34 = DAT_080098c4;\n    if (char_var != '\\x02') goto LAB_080098aa;\n  }\n  ptr_var_4 = (undefined4 *)FUN_0800b3dc();\n  *ptr_var_4 = 0x22;\nLAB_08009896:\n  result = CONCAT44(stack_var_34,local_var_38);\n  if (local_var_30 != 0) {\n    int_ptr_var = (int *)FUN_0800b3dc();\n    result = CONCAT44(stack_var_34,local_var_38);\n    *int_ptr_var = local_var_30;\n  }\n  return result;\n}\n\n",
            "called": [
                "FUN_0800b2d4",
                "FUN_0800b2e0",
                "FUN_0800b3dc",
                "FUN_08009b24"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800981c",
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "calculate_result_0800981c"
        },
        "FUN_080059b4": {
            "renaming": {
                "FUN_080059b4": "initialize_hardware_080059b4",
                "do_nothing_08005a50": "waitForCompletion"
            },
            "code": "\nundefined4 initializeHardware_080059b4(void)\n\n{\n  *DAT_080059f4 = *DAT_080059f4 | 0x200;\n  *DAT_080059f4 = *DAT_080059f4 | 0x400;\n  *DAT_080059f4 = *DAT_080059f4 | 0x100;\n  FUN_08006d72(16000);\n  FUN_08006ce0(3);\n  do_nothing_08005a50();\n  return 0;\n}\n\n",
            "called": [
                "FUN_08005a50",
                "FUN_08006d72",
                "FUN_08006ce0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080059b4",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "initialize_hardware_080059b4"
        },
        "FUN_08006c04": {
            "renaming": {
                "FUN_08006c04": "bitwise_operation_08006c04",
                "param_1": "inputValue",
                "param_2": "bitShift",
                "param_3": "outputValue1",
                "param_4": "outputValue2",
                "uVar1": "tempVar"
            },
            "code": "\nvoid bitwiseOperation_08006c04(uint inputValue,uint bitShift,uint *outputValue1,uint *outputValue2)\n\n{\n  uint tempVar;\n  \n  bitShift = bitShift & 7;\n  tempVar = 7 - bitShift;\n  if (3 < tempVar) {\n    tempVar = 4;\n  }\n  if (bitShift + 4 < 7) {\n    bitShift = 0;\n  }\n  else {\n    bitShift = bitShift - 3;\n  }\n  *outputValue1 = (1 << (tempVar & 0xff)) - 1U & inputValue >> (bitShift & 0xff);\n  *outputValue2 = (1 << (bitShift & 0xff)) - 1U & inputValue;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c04",
            "calling": [
                "FUN_08006d98"
            ],
            "imported": false,
            "current_name": "bitwise_operation_08006c04"
        },
        "FUN_08002e08": {
            "renaming": {
                "FUN_08002e08": "process_data_sequence_08002e08",
                "uVar1": "result1",
                "uVar2": "result2",
                "puVar3": "current_data",
                "local_18": "previous_data",
                "local_11": "data_index"
            },
            "code": "\nvoid process_data_sequence_08002e08(void)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined *current_data;\n  undefined *previous_data;\n  byte data_index;\n  \n  data_index = *PTR_DAT_08002ed0;\n  previous_data = (undefined *)0x0;\n  while (data_index != *PTR_DAT_08002ed8) {\n    current_data = PTR_DAT_08002ed4 + (uint)data_index * 0x40;\n    if ((previous_data != (undefined *)0x0) && ((previous_data[0x24] != '\\0' || (current_data[0x24] != '\\0')))) {\n      result1 = FUN_08009054(*(undefined4 *)(previous_data + 0x18),*(undefined4 *)(previous_data + 0x14));\n      result2 = FUN_08009054(*(undefined4 *)(current_data + 0x18),*(undefined4 *)(previous_data + 0x14));\n      FUN_08002c18(previous_data,result1,result2);\n      previous_data[0x24] = 0;\n    }\n    data_index = FUN_08002870(data_index);\n    previous_data = current_data;\n  }\n  result1 = FUN_08009054(*(undefined4 *)(previous_data + 0x18),*(undefined4 *)(previous_data + 0x14));\n  result2 = FUN_08009054(0,*(undefined4 *)(previous_data + 0x14));\n  FUN_08002c18(previous_data,result1,result2);\n  previous_data[0x24] = 0;\n  return;\n}\n\n",
            "called": [
                "FUN_08002c18",
                "FUN_08002870",
                "FUN_08009054"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002e08",
            "calling": [
                "FUN_08002edc"
            ],
            "imported": false,
            "current_name": "process_data_sequence_08002e08"
        },
        "FUN_08006680": {
            "renaming": {
                "FUN_08006680": "calculate_shifted_value_08006680",
                "uVar1": "initial_value",
                "uVar2": "leading_zeroes_count"
            },
            "code": "\nuint calculate_shifted_value_08006680(void)\n\n{\n  uint initial_value;\n  uint leading_zeroes_count;\n  \n  initial_value = FUN_08006628();\n  leading_zeroes_count = count_leading_zeroes(0x380000);\n  return initial_value >> PTR_DAT_080066c8[(*(uint *)(DAT_080066c4 + 8) & 0x1c00) >> (leading_zeroes_count & 0xff)];\n}\n\n",
            "called": [
                "FUN_08006628"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006680",
            "calling": [
                "FUN_08007f54"
            ],
            "imported": false,
            "current_name": "calculate_shifted_value_08006680"
        },
        "FUN_08000340": {
            "renaming": {
                "FUN_08000340": "store_data_08000340",
                "param_1": "index",
                "param_2": "value"
            },
            "code": "\nvoid storeData_08000340(uint index,undefined value)\n\n{\n  if (*(int *)PTR_DAT_0800036c == 0) {\n    FUN_080002f0();\n  }\n  PTR_DAT_08000370[index & 0x3ff] = value;\n  return;\n}\n\n",
            "called": [
                "FUN_080002f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000340",
            "calling": [
                "FUN_08004c2a",
                "FUN_08000374"
            ],
            "imported": false,
            "current_name": "store_data_08000340"
        },
        "thunk_FUN_08009990": {
            "renaming": {
                "thunk_FUN_08009990": "calculate_result_thunk_08009990",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "temp_var",
                "uVar2": "temp_result",
                "uVar3": "case_selector",
                "uVar4": "result",
                "uVar5": "masked_input_2",
                "uVar6": "combined_result"
            },
            "code": "\nuint calculate_result_thunk_08009990(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  int temp_var;\n  undefined4 temp_result;\n  uint case_selector;\n  uint result;\n  uint masked_input_2;\n  undefined8 combined_result;\n  \n  combined_result = CONCAT44(DAT_08009b04,DAT_08009b00);\n  result = input_4 & 0x7fffffff;\n  if ((DAT_08009b18 < (result | (-input_3 | input_3) >> 0x1f)) ||\n     (masked_input_2 = input_2 & 0x7fffffff, DAT_08009b18 < (masked_input_2 | (-input_1 | input_1) >> 0x1f))) {\n    result = FUN_080082d4(input_3,input_4,input_1,input_2);\n  }\n  else {\n    if ((input_4 + 0xc0100000 | input_3) == 0) {\n      result = FUN_0800af78();\n      return result;\n    }\n    case_selector = (int)input_4 >> 0x1e & 2U | input_2 >> 0x1f;\n    if ((masked_input_2 | input_1) == 0) {\n      result = DAT_08009af0;\n      if ((case_selector != 2) && (result = input_1, case_selector == 3)) {\n        result = DAT_08009af8;\n      }\n    }\n    else {\n      if ((result | input_3) != 0) {\n        if (result == DAT_08009b18) {\n          case_selector = case_selector - 1;\n          if (masked_input_2 == result) {\n            if (2 < case_selector) {\n              return DAT_08009b10;\n            }\n            return *(uint *)(PTR_DAT_08009b20 + case_selector * 8);\n          }\n          if (case_selector < 3) {\n            return *(uint *)(PTR_DAT_08009b1c + case_selector * 8);\n          }\n          return 0;\n        }\n        if (masked_input_2 != DAT_08009b18) {\n          temp_var = (int)(masked_input_2 - result) >> 0x14;\n          if ((int)(masked_input_2 - result) < 0x3d00000) {\n            if (((int)input_4 < 0) && (temp_var + 0x3c < 0 != SCARRY4(temp_var,0x3c))) {\n              combined_result = 0;\n            }\n            else {\n              FUN_08008894(input_1,input_2,input_3,input_4,input_4);\n              do_nothing_0800b2cc();\n              combined_result = FUN_0800af78();\n            }\n          }\n          temp_result = (undefined4)((ulonglong)combined_result >> 0x20);\n          result = (uint)combined_result;\n          if (case_selector == 1) {\n            return result;\n          }\n          if (case_selector == 2) {\n            combined_result = FUN_080082d0(result,temp_result,DAT_08009ae8,DAT_08009aec);\n            result = FUN_080082d0(DAT_08009af0,DAT_08009af4,(int)combined_result,\n                                 (int)((ulonglong)combined_result >> 0x20));\n            return result;\n          }\n          if (case_selector == 0) {\n            return result;\n          }\n          combined_result = FUN_080082d0(result,temp_result,DAT_08009ae8,DAT_08009aec);\n          result = FUN_080082d0((int)combined_result,(int)((ulonglong)combined_result >> 0x20),DAT_08009af0,DAT_08009af4)\n          ;\n          return result;\n        }\n      }\n      result = DAT_08009b08;\n      if (-1 < (int)input_2) {\n        result = DAT_08009b00;\n      }\n    }\n  }\n  return result;\n}\n\n",
            "called": [
                "FUN_08009990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009818",
            "calling": [
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "calculate_result_thunk_08009990"
        },
        "FUN_08004bf4": {
            "renaming": {
                "FUN_08004bf4": "calculate_and_process_data_08004bf4",
                "param_1": "inputByte",
                "param_2": "processingData"
            },
            "code": "\nvoid calculateAndProcessData_08004bf4(byte inputByte,undefined4 processingData)\n\n{\n  FUN_08000374((ushort)inputByte * 0xd + 0x200,processingData,0xc);\n  return;\n}\n\n",
            "called": [
                "FUN_08000374"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004bf4",
            "calling": [
                "FUN_08004d7c",
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "calculate_and_process_data_08004bf4"
        },
        "FUN_08004d7c": {
            "renaming": {
                "FUN_08004d7c": "process_data_08004d7c",
                "param_1": "inputByte",
                "param_2": "dataBuffer",
                "iVar1": "operationResult"
            },
            "code": "\nbool processData_08004d7c(byte inputByte,undefined4 dataBuffer)\n\n{\n  int operationResult;\n  \n  operationResult = FUN_080003ec(dataBuffer,(ushort)inputByte * 0xd + 0x200,0xc);\n  if (operationResult == 0) {\n    FUN_0800b430(dataBuffer,0,0xc);\n    FUN_08004bf4(inputByte,dataBuffer);\n  }\n  return operationResult != 0;\n}\n\n",
            "called": [
                "FUN_0800b430",
                "FUN_080003ec",
                "FUN_08004bf4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d7c",
            "calling": [
                "FUN_080051b4",
                "FUN_080044e8",
                "FUN_080005b4",
                "FUN_080004ac"
            ],
            "imported": false,
            "current_name": "process_data_08004d7c"
        },
        "FUN_08009278": {
            "renaming": {
                "FUN_08009278": "calculate_value_08009278",
                "param_1": "inputValue",
                "uVar1": "tempValue1",
                "uVar2": "tempValue2"
            },
            "code": "\nuint calculateValue_08009278(uint inputValue)\n\n{\n  uint tempValue1;\n  uint tempValue2;\n  \n  if (inputValue << 1 < 0x7f000000) {\n    return 0;\n  }\n  tempValue1 = (inputValue << 1) >> 0x18;\n  tempValue2 = 0x9e - tempValue1;\n  if (tempValue1 < 0x9f && tempValue2 != 0) {\n    tempValue1 = (inputValue << 8 | 0x80000000) >> (tempValue2 & 0xff);\n    if ((inputValue & 0x80000000) != 0) {\n      tempValue1 = -tempValue1;\n    }\n    return tempValue1;\n  }\n  if ((tempValue2 == 0xffffff9f) && ((inputValue & 0x7fffff) != 0)) {\n    return 0;\n  }\n  inputValue = inputValue & 0x80000000;\n  if (inputValue == 0) {\n    inputValue = 0x7fffffff;\n  }\n  return inputValue;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009278",
            "calling": [
                "FUN_08003826",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "calculate_value_08009278"
        },
        "FUN_080004fc": {
            "renaming": {
                "FUN_080004fc": "process_parameters_080004fc",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "uVar1": "tempResult"
            },
            "code": "\nvoid processParameters_080004fc(undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3)\n\n{\n  undefined4 tempResult;\n  \n  tempResult = FUN_08008e44(inputParam1);\n  tempResult = FUN_08009054(tempResult,*(undefined4 *)PTR_DAT_08000564);\n  *(undefined4 *)(PTR_DAT_08000568 + 0xc) = tempResult;\n  tempResult = FUN_08008e44(inputParam2);\n  tempResult = FUN_08009054(tempResult,*(undefined4 *)(PTR_DAT_08000564 + 4));\n  *(undefined4 *)(PTR_DAT_08000568 + 0x10) = tempResult;\n  tempResult = FUN_08008e44(inputParam3);\n  tempResult = FUN_08009054(tempResult,*(undefined4 *)(PTR_DAT_08000564 + 8));\n  *(undefined4 *)(PTR_DAT_08000568 + 0x14) = tempResult;\n  return;\n}\n\n",
            "called": [
                "FUN_08008e44",
                "FUN_08009054"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080004fc",
            "calling": [
                "FUN_0800283a"
            ],
            "imported": false,
            "current_name": "process_parameters_080004fc"
        },
        "FUN_08000220": {
            "renaming": {
                "FUN_08000220": "process_input_08000220",
                "param_1": "inputChar",
                "do_nothing_080001c8": "actionType1",
                "do_nothing_080001e0": "actionType2"
            },
            "code": "\nvoid processInput_08000220(char inputChar)\n\n{\n  if (inputChar != *PTR_DAT_08000264) {\n    FUN_08002fd4();\n    if (inputChar == '\\x01') {\n      do_nothing_080001c8();\n    }\n    else if (inputChar == '\\x02') {\n      do_nothing_080001e0();\n    }\n    else {\n      FUN_08000210();\n    }\n    *PTR_DAT_08000264 = inputChar;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08000210",
                "FUN_08002fd4",
                "FUN_080001e0",
                "FUN_080001c8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000220",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "process_input_08000220"
        },
        "FUN_08005238": {
            "renaming": {
                "FUN_08005238": "initialize_and_execute_08005238"
            },
            "code": "\nvoid initializeAndExecute_08005238(void)\n\n{\n  *PTR_DAT_0800524c = 0;\n  FUN_08005250();\n  return;\n}\n\n",
            "called": [
                "FUN_08005250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005238",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initialize_and_execute_08005238"
        },
        "FUN_08007da8": {
            "renaming": {
                "FUN_08007da8": "update_data_flags_08007da8",
                "puVar1": "dataFlagsPtr"
            },
            "code": "\nvoid updateDataFlags_08007da8(void)\n\n{\n  uint *dataFlagsPtr;\n  \n  dataFlagsPtr = DAT_08007dd4;\n  DAT_08007dd4[8] = DAT_08007dd4[8] | 0x10;\n  *dataFlagsPtr = *dataFlagsPtr | 1;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007da8",
            "calling": [
                "FUN_08007e08"
            ],
            "imported": false,
            "current_name": "update_data_flags_08007da8"
        },
        "FUN_08004148": {
            "renaming": {
                "FUN_08004148": "display_alarm_message_08004148",
                "param_1": "alarmCode"
            },
            "code": "\nvoid displayAlarmMessage_08004148(char alarmCode)\n\n{\n  FUN_080036c6(PTR_s_ALARM__08004190);\n  if (alarmCode == -2) {\n    FUN_080036c6(PTR_s_Abort_during_cycle_08004198);\n  }\n  else if (alarmCode == -1) {\n    FUN_080036c6(PTR_s_Hard_limit_08004194);\n  }\n  FUN_080036c6(PTR_s___MPos__0800419c);\n  do_nothing_08002814(500);\n  return;\n}\n\n",
            "called": [
                "FUN_080036c6",
                "FUN_08002814"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004148",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "display_alarm_message_08004148"
        },
        "FUN_08004940": {
            "renaming": {
                "FUN_08004940": "process_coordinates_08004940",
                "uVar1": "tempVar1",
                "uVar2": "tempVar2",
                "uVar3": "tempVar3",
                "uVar4": "tempVar4",
                "uVar5": "tempVar5",
                "auStack_2c": "coordArray",
                "local_11": "coordIndex"
            },
            "code": "\nvoid processCoordinates_08004940(void)\n\n{\n  undefined4 tempVar1;\n  uint tempVar2;\n  undefined4 tempVar3;\n  undefined8 tempVar4;\n  undefined8 tempVar5;\n  undefined4 coordArray [6];\n  byte coordIndex;\n  \n  coordArray[3] = *(undefined4 *)(PTR_DAT_08004b88 + 4);\n  coordArray[4] = *(undefined4 *)(PTR_DAT_08004b88 + 8);\n  coordArray[5] = *(undefined4 *)(PTR_DAT_08004b88 + 0xc);\n  if ((byte)PTR_DAT_08004b88[1] < 8) {\n                    /* WARNING: Could not recover jumptable at 0x0800495e. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)(&switchD_0800495e::switchdataD_08004964)[(byte)PTR_DAT_08004b88[1]])();\n    return;\n  }\n  FUN_080036c6(PTR_s__MPos__08004ba8);\n  for (coordIndex = 0; coordIndex < 3; coordIndex = coordIndex + 1) {\n    tempVar1 = FUN_08008e44(coordArray[coordIndex + 3]);\n    tempVar2 = (uint)coordIndex;\n    tempVar1 = FUN_08009054(tempVar1,*(undefined4 *)(PTR_DAT_08004bac + (uint)coordIndex * 4));\n    coordArray[tempVar2] = tempVar1;\n    if ((PTR_DAT_08004bac[0x28] & 1) != 0) {\n      tempVar4 = FUN_08008590(coordArray[coordIndex]);\n      tempVar4 = FUN_08008640((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20),DAT_08004b80,DAT_08004b84);\n      tempVar2 = (uint)coordIndex;\n      tempVar1 = FUN_08008c30((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n      coordArray[tempVar2] = tempVar1;\n    }\n    FUN_08003826(coordArray[coordIndex]);\n    FUN_080036c6(PTR_DAT_08004bb0);\n  }\n  FUN_080036c6(PTR_s_WPos__08004bb4);\n  for (coordIndex = 0; coordIndex < 3; coordIndex = coordIndex + 1) {\n    if ((PTR_DAT_08004bac[0x28] & 1) == 0) {\n      tempVar3 = coordArray[coordIndex];\n      tempVar1 = FUN_08008cdc(*(undefined4 *)(PTR_DAT_08004bb8 + (coordIndex + 8) * 4),\n                           *(undefined4 *)(PTR_DAT_08004bb8 + (coordIndex + 10) * 4 + 4));\n      tempVar2 = (uint)coordIndex;\n      tempVar1 = FUN_08008cd8(tempVar3,tempVar1);\n      coordArray[tempVar2] = tempVar1;\n    }\n    else {\n      tempVar4 = FUN_08008590(coordArray[coordIndex]);\n      tempVar1 = FUN_08008cdc(*(undefined4 *)(PTR_DAT_08004bb8 + (coordIndex + 8) * 4),\n                           *(undefined4 *)(PTR_DAT_08004bb8 + (coordIndex + 10) * 4 + 4));\n      tempVar5 = FUN_08008590(tempVar1);\n      tempVar5 = FUN_08008640((int)tempVar5,(int)((ulonglong)tempVar5 >> 0x20),DAT_08004b80,DAT_08004b84);\n      tempVar4 = FUN_080082d0((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20),(int)tempVar5,\n                           (int)((ulonglong)tempVar5 >> 0x20));\n      tempVar2 = (uint)coordIndex;\n      tempVar1 = FUN_08008c30((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n      coordArray[tempVar2] = tempVar1;\n    }\n    FUN_08003826(coordArray[coordIndex]);\n    if (coordIndex < 2) {\n      FUN_080036c6(PTR_DAT_08004bb0);\n    }\n  }\n  FUN_080036c6(PTR_DAT_08004bbc);\n  return;\n}\n\n",
            "called": [
                "FUN_08008640",
                "FUN_08008c30",
                "FUN_08008cd8",
                "FUN_080036c6",
                "FUN_080082d0",
                "FUN_08008cdc",
                "FUN_08003826",
                "FUN_08008e44",
                "FUN_08008590",
                "FUN_08009054"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004940",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "process_coordinates_08004940"
        },
        "FUN_08008a74": {
            "renaming": {
                "FUN_08008a74": "compare_uints_08008a74",
                "param_1": "num1",
                "param_2": "num2",
                "param_3": "num3",
                "param_4": "num4",
                "uVar1": "xor_result",
                "bVar2": "comparison_flag",
                "bVar3": "conditional_flag"
            },
            "code": "\nuint compare_uints_08008a74(uint num1,uint num2,uint num3,uint num4)\n\n{\n  uint xor_result;\n  bool comparison_flag;\n  bool conditional_flag;\n  \n  if (((int)(num2 << 1) >> 0x15 == -1 || (int)(num4 << 1) >> 0x15 == -1) &&\n     ((((int)(num2 << 1) >> 0x15 == -1 && ((num1 | num2 << 0xc) != 0)) ||\n      (((int)(num4 << 1) >> 0x15 == -1 && ((num3 | num4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  comparison_flag = (num1 | num2 << 1) == 0;\n  if (comparison_flag) {\n    comparison_flag = (num3 | num4 << 1) == 0;\n  }\n  if (!comparison_flag) {\n    comparison_flag = num2 == num4;\n  }\n  if (comparison_flag) {\n    comparison_flag = num1 == num3;\n  }\n  if (!comparison_flag) {\n    xor_result = num2 ^ num4;\n    comparison_flag = xor_result == 0;\n    if (-1 < (int)xor_result) {\n      comparison_flag = num2 == num4;\n    }\n    conditional_flag = -1 < (int)xor_result && num4 <= num2;\n    if (comparison_flag) {\n      conditional_flag = num3 <= num1;\n    }\n    num4 = (int)num4 >> 0x1f;\n    if (!conditional_flag) {\n      num4 = ~num4;\n    }\n    return num4 | 1;\n  }\n  return 0;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008a74",
            "calling": [
                "FUN_08008b00"
            ],
            "imported": false,
            "current_name": "compare_uints_08008a74"
        },
        "FUN_08002fd4": {
            "renaming": {
                "FUN_08002fd4": "execute_while_condition_met_08002fd4",
                "iVar1": "conditionResult"
            },
            "code": "\nvoid executeWhileConditionMet_08002fd4(void)\n\n{\n  int conditionResult;\n  \n  while ((conditionResult = FUN_08002f74(), conditionResult != 0 || (PTR_DAT_08003000[1] == '\\x03'))) {\n    FUN_08003a74();\n    if (*PTR_DAT_08003000 != '\\0') {\n      return;\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08003a74",
                "FUN_08002f74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002fd4",
            "calling": [
                "FUN_0800525c",
                "FUN_080005b4",
                "FUN_08002408",
                "FUN_08000220",
                "FUN_080024c4"
            ],
            "imported": false,
            "current_name": "execute_while_condition_met_08002fd4"
        },
        "FUN_08002408": {
            "renaming": {
                "FUN_08002408": "process_data_08002408",
                "param_1": "inputData",
                "uVar1": "result1",
                "uVar2": "tempVar1",
                "uVar3": "tempVar2",
                "uVar4": "tempVar3",
                "local_12": "counter"
            },
            "code": "\nvoid processData_08002408(undefined4 inputData)\n\n{\n  undefined2 result1;\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  undefined8 tempVar3;\n  ushort counter;\n  \n  tempVar1 = FUN_08008eec(inputData,DAT_080024b8);\n  tempVar3 = FUN_08008590(tempVar1);\n  tempVar3 = FUN_080094c0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n  counter = FUN_08008bf0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n  FUN_08002fd4();\n  tempVar1 = FUN_08008eec(inputData,DAT_080024bc);\n  tempVar2 = FUN_08008e44((uint)counter * 0x32);\n  tempVar1 = FUN_08008cd8(tempVar1,tempVar2);\n  tempVar3 = FUN_08008590(tempVar1);\n  tempVar3 = FUN_080094c0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n  result1 = FUN_08008bf0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n  do_nothing_08002814(result1);\n  while ((counter != 0 && (FUN_08003a74(), *PTR_DAT_080024c0 == '\\0'))) {\n    FUN_080002a0(0x32);\n    counter = counter - 1;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08003a74",
                "FUN_08008bf0",
                "FUN_08008cd8",
                "FUN_080002a0",
                "FUN_08008eec",
                "FUN_08008e44",
                "FUN_08002814",
                "FUN_08008590",
                "FUN_08002fd4",
                "FUN_080094c0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002408",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "process_data_08002408"
        },
        "FUN_08002a94": {
            "renaming": {
                "FUN_08002a94": "process_data_08002a94",
                "puVar1": "currentData",
                "puVar2": "nextData",
                "local_18": "previousData",
                "local_14": "currentData",
                "local_9": "currentValue"
            },
            "code": "\nvoid processData_08002a94(void)\n\n{\n  undefined *currentData;\n  undefined *nextData;\n  undefined *previousData;\n  undefined *currentData;\n  byte currentValue;\n  \n  currentValue = *PTR_DAT_08002af0;\n  previousData = (undefined *)0x0;\n  currentData = (undefined *)0x0;\n  while (currentData = currentData, currentValue != *PTR_DAT_08002af8) {\n    currentValue = FUN_08002896(currentValue);\n    currentData = previousData;\n    nextData = PTR_DAT_08002af4 + (uint)currentValue * 0x40;\n    FUN_080029d8(nextData,previousData,currentData);\n    previousData = nextData;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_080029d8",
                "FUN_08002896"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002a94",
            "calling": [
                "FUN_08002edc"
            ],
            "imported": false,
            "current_name": "process_data_08002a94"
        },
        "FUN_08003618": {
            "renaming": {
                "FUN_08003618": "process_data_08003618",
                "param_1": "inputData",
                "bVar1": "byteVar",
                "puVar2": "dataPtr",
                "uVar3": "tempVar1",
                "uVar4": "tempVar2"
            },
            "code": "\nvoid processData_08003618(undefined4 inputData)\n\n{\n  byte byteVar;\n  undefined *dataPtr;\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  \n  dataPtr = PTR_DAT_08003698;\n  byteVar = *PTR_DAT_08003694;\n  tempVar2 = *(undefined4 *)(PTR_DAT_08003698 + (uint)byteVar * 0x40 + 0x20);\n  tempVar1 = FUN_08008e44(inputData);\n  tempVar1 = FUN_08008eec(tempVar2,tempVar1);\n  tempVar2 = FUN_08008e44(*(undefined4 *)(dataPtr + (uint)byteVar * 0x40 + 0x10));\n  tempVar1 = FUN_08009054(tempVar1,tempVar2);\n  *(undefined4 *)(dataPtr + (uint)byteVar * 0x40 + 0x20) = tempVar1;\n  *(undefined4 *)(dataPtr + (uint)byteVar * 0x40 + 0x10) = inputData;\n  *(undefined4 *)(dataPtr + (uint)byteVar * 0x40 + 0x18) = 0;\n  *(undefined4 *)(dataPtr + (uint)byteVar * 0x40 + 0x1c) = 0;\n  dataPtr[(uint)byteVar * 0x40 + 0x25] = 0;\n  dataPtr[(uint)byteVar * 0x40 + 0x24] = 1;\n  FUN_08002edc();\n  return;\n}\n\n",
            "called": [
                "FUN_08008eec",
                "FUN_08002edc",
                "FUN_08008e44",
                "FUN_08009054"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003618",
            "calling": [
                "FUN_080058a0"
            ],
            "imported": false,
            "current_name": "process_data_08003618"
        },
        "FUN_0800522c": {
            "renaming": {
                "FUN_0800522c": "do_nothing_0800522c"
            },
            "code": "\nvoid do_nothing_0800522c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800522c",
            "calling": [
                "FUN_0800525c"
            ],
            "imported": false,
            "current_name": "do_nothing_0800522c"
        },
        "FUN_0800af78": {
            "renaming": {
                "FUN_0800af78": "improved_calculation_0800af78",
                "param_1": "input_1",
                "param_2": "input_2",
                "puVar1": "temp_pointer",
                "iVar2": "result",
                "uVar3": "temp_var3",
                "uVar4": "temp_var4",
                "uVar5": "temp_var5",
                "uVar6": "temp_var6",
                "uVar7": "temp_var7",
                "uVar8": "masked_input",
                "uVar9": "temp_result1",
                "uVar10": "temp_result2",
                "local_2c": "local_temp"
            },
            "code": "\nint improved_calculation_0800af78(int input_1,uint input_2)\n\n{\n  undefined *temp_pointer;\n  int result;\n  undefined4 temp_var3;\n  undefined4 temp_var4;\n  undefined4 temp_var5;\n  undefined4 temp_var6;\n  undefined4 temp_var7;\n  uint masked_input;\n  undefined8 temp_result1;\n  undefined8 temp_result2;\n  undefined4 local_temp;\n  \n  temp_result1 = CONCAT44(input_2,input_1);\n  masked_input = input_2 & 0x7fffffff;\n  if (DAT_0800b298 < (int)masked_input) {\n    if ((masked_input != DAT_0800b29c && (int)DAT_0800b29c <= (int)masked_input) ||\n       ((result = DAT_0800b2a8, masked_input == DAT_0800b29c && (input_1 != 0)))) {\n      result = FUN_080082d4(input_1,input_2,input_1);\n      return result;\n    }\n  }\n  else {\n    if (DAT_0800b2ac < (int)masked_input) {\n      temp_result1 = do_nothing_0800b2cc();\n      temp_var6 = (undefined4)((ulonglong)temp_result1 >> 0x20);\n      temp_var3 = (undefined4)temp_result1;\n      if (DAT_0800b2bc < (int)masked_input) {\n        if ((int)masked_input < DAT_0800b2c0) {\n          temp_result1 = FUN_080082d0(temp_var3,temp_var6,0,DAT_0800b2c4);\n          temp_result2 = FUN_08008640(temp_var3,temp_var6,0,DAT_0800b2c4);\n          temp_result2 = FUN_080082d4((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),0,DAT_0800b2b8);\n          temp_result1 = FUN_08008894((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),(int)temp_result2,\n                               (int)((ulonglong)temp_result2 >> 0x20));\n          result = 2;\n        }\n        else {\n          temp_result1 = FUN_08008894(0,DAT_0800b2c8,temp_var3,temp_var6);\n          result = 3;\n        }\n      }\n      else if (DAT_0800b2bc + -0xd0000 < (int)masked_input) {\n        temp_result1 = FUN_080082d0(temp_var3,temp_var6,0,DAT_0800b2b8);\n        temp_result2 = FUN_080082d4(temp_var3,temp_var6,0,DAT_0800b2b8);\n        temp_result1 = FUN_08008894((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),(int)temp_result2,\n                             (int)((ulonglong)temp_result2 >> 0x20));\n        result = 1;\n      }\n      else {\n        temp_result1 = FUN_080082d4(temp_var3,temp_var6,temp_var3,temp_var6);\n        temp_result1 = FUN_080082d0((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),0,DAT_0800b2b8);\n        temp_result2 = FUN_080082d4(temp_var3,temp_var6,0,0x40000000);\n        temp_result1 = FUN_08008894((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),(int)temp_result2,\n                             (int)((ulonglong)temp_result2 >> 0x20));\n        result = 0;\n      }\n    }\n    else {\n      if ((int)masked_input <= DAT_0800b2ac + -0x1bc0000) {\n        temp_result2 = FUN_080082d4(input_1,input_2,DAT_0800b290,DAT_0800b294);\n        result = FUN_08008b60((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),0,DAT_0800b2b8);\n        if (result != 0) {\n          return input_1;\n        }\n      }\n      result = -1;\n    }\n    local_temp = (undefined4)((ulonglong)temp_result1 >> 0x20);\n    temp_var7 = (undefined4)temp_result1;\n    temp_result1 = FUN_08008640(temp_var7,local_temp,temp_var7);\n    temp_var4 = (undefined4)((ulonglong)temp_result1 >> 0x20);\n    temp_var3 = (undefined4)temp_result1;\n    temp_result1 = FUN_08008640(temp_var3,temp_var4,temp_var3,temp_var4);\n    temp_var5 = (undefined4)((ulonglong)temp_result1 >> 0x20);\n    temp_var6 = (undefined4)temp_result1;\n    temp_result1 = FUN_08008640(temp_var6,temp_var5,DAT_0800b238,DAT_0800b23c);\n    temp_result1 = FUN_080082d4((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),DAT_0800b240,DAT_0800b244);\n    temp_result1 = FUN_08008640((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),temp_var6,temp_var5);\n    temp_result1 = FUN_080082d4((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),DAT_0800b248,DAT_0800b24c);\n    temp_result1 = FUN_08008640((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),temp_var6,temp_var5);\n    temp_result1 = FUN_080082d4((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),DAT_0800b250,DAT_0800b254);\n    temp_result1 = FUN_08008640((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),temp_var6,temp_var5);\n    temp_result1 = FUN_080082d4((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),DAT_0800b258,DAT_0800b25c);\n    temp_result1 = FUN_08008640((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),temp_var6,temp_var5);\n    temp_result1 = FUN_080082d4((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),DAT_0800b260,DAT_0800b264);\n    temp_result1 = FUN_08008640((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),temp_var3,temp_var4);\n    temp_var3 = (undefined4)((ulonglong)temp_result1 >> 0x20);\n    temp_result2 = FUN_08008640(temp_var6,temp_var5,DAT_0800b268,DAT_0800b26c);\n    temp_result2 = FUN_080082d0((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),DAT_0800b270,DAT_0800b274);\n    temp_result2 = FUN_08008640((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),temp_var6,temp_var5);\n    temp_result2 = FUN_080082d0((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),DAT_0800b278,DAT_0800b27c);\n    temp_result2 = FUN_08008640((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),temp_var6,temp_var5);\n    temp_result2 = FUN_080082d0((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),DAT_0800b280,DAT_0800b284);\n    temp_result2 = FUN_08008640((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),temp_var6,temp_var5);\n    temp_result2 = FUN_080082d0((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),DAT_0800b288,DAT_0800b28c);\n    temp_result2 = FUN_08008640((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),temp_var6,temp_var5);\n    temp_var6 = (undefined4)((ulonglong)temp_result2 >> 0x20);\n    if (result == -1) {\n      temp_result1 = FUN_080082d4((int)temp_result1,temp_var3,(int)temp_result2,temp_var6);\n      temp_result1 = FUN_08008640((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),temp_var7,local_temp);\n      result = FUN_080082d0(temp_var7,local_temp,(int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20));\n      return result;\n    }\n    temp_result1 = FUN_080082d4((int)temp_result1,temp_var3,(int)temp_result2,temp_var6);\n    temp_pointer = PTR_DAT_0800b2b0;\n    temp_result1 = FUN_08008640((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),temp_var7,local_temp);\n    temp_result1 = FUN_080082d0((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),\n                         *(undefined4 *)(PTR_DAT_0800b2b4 + result * 8),\n                         *(undefined4 *)((int)(PTR_DAT_0800b2b4 + result * 8) + 4));\n    temp_result1 = FUN_080082d0((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),temp_var7,local_temp);\n    result = FUN_080082d0(*(undefined4 *)(temp_pointer + result * 8),\n                         *(undefined4 *)((int)(temp_pointer + result * 8) + 4),(int)temp_result1,\n                         (int)((ulonglong)temp_result1 >> 0x20));\n    if ((int)input_2 < 0) {\n      return result;\n    }\n  }\n  return result;\n}\n\n",
            "called": [
                "FUN_08008640",
                "FUN_08008894",
                "FUN_080082d4",
                "FUN_08008b60",
                "FUN_080082d0",
                "FUN_0800b2cc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800af78",
            "calling": [
                "FUN_08009990"
            ],
            "imported": false,
            "current_name": "improved_calculation_0800af78"
        },
        "FUN_08007d08": {
            "renaming": {
                "FUN_08007d08": "initialize_data_array_08007d08",
                "puVar1": "dataArray"
            },
            "code": "\nvoid initializeDataArray_08007d08(void)\n\n{\n  undefined4 *dataArray;\n  \n  dataArray = DAT_08007d9c;\n  FUN_08007a10(DAT_08007d9c);\n  *dataArray = 0x80;\n  dataArray[1] = 0;\n  dataArray[2] = 0;\n  dataArray[3] = 0;\n  dataArray[4] = 0;\n  dataArray[6] = 0x6800;\n  dataArray[7] = 0;\n  dataArray[8] = 0;\n  dataArray[9] = 0;\n  dataArray[10] = (uint)((ulonglong)DAT_08007da4 * (ulonglong)*(uint *)PTR_DAT_08007da0 >> 0x35) - 1;\n  dataArray[0xb] = 199;\n  dataArray[0xd] = 0;\n  dataArray[0xe] = 100;\n  dataArray[0xf] = 0;\n  dataArray[0x10] = 0;\n  dataArray[0x12] = 0;\n  dataArray[0x13] = 0;\n  dataArray[5] = 1;\n  return;\n}\n\n",
            "called": [
                "FUN_08007a10"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007d08",
            "calling": [
                "FUN_08007e08"
            ],
            "imported": false,
            "current_name": "initialize_data_array_08007d08"
        },
        "FUN_080091fc": {
            "renaming": {
                "FUN_080091fc": "swap_parameters_080091fc",
                "param_1": "first_parameter",
                "param_2": "second_parameter"
            },
            "code": "\nvoid swap_parameters_080091fc(undefined4 first_parameter,undefined4 second_parameter)\n\n{\n  FUN_08009204(second_parameter,first_parameter);\n  return;\n}\n\n",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080091fc",
            "calling": [
                "FUN_08009250",
                "FUN_08009264"
            ],
            "imported": false,
            "current_name": "swap_parameters_080091fc"
        },
        "FUN_080058a0": {
            "renaming": {
                "FUN_080058a0": "process_data_080058a0"
            },
            "code": "\nvoid processData_080058a0(void)\n\n{\n  if (*(int *)PTR_DAT_080058f0 == 0) {\n    PTR_DAT_080058fc[1] = 0;\n  }\n  else {\n    FUN_08003618(*(int *)(*(int *)PTR_DAT_080058f0 + 0x10) - *(int *)(PTR_DAT_080058f4 + 0x10));\n    *(undefined4 *)(PTR_DAT_080058f4 + 0x1c) = 0;\n    FUN_08005324(*(undefined4 *)(PTR_DAT_080058f4 + 0x1c));\n    *(undefined4 *)(PTR_DAT_080058f4 + 0x18) = DAT_080058f8;\n    *(undefined4 *)(PTR_DAT_080058f4 + 0x10) = 0;\n    PTR_DAT_080058fc[1] = 2;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08003618",
                "FUN_08005324"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080058a0",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "process_data_080058a0"
        },
        "FUN_080036c6": {
            "renaming": {
                "FUN_080036c6": "process_string_080036c6",
                "param_1": "inputString",
                "local_c": "currentChar"
            },
            "code": "\nvoid processString_080036c6(char *inputString)\n\n{\n  char *currentChar;\n  \n  currentChar = inputString;\n  while (*currentChar != '\\0') {\n    FUN_08008250(*currentChar);\n    currentChar = currentChar + 1;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080036c6",
            "calling": [
                "FUN_080044e8",
                "FUN_08004030",
                "FUN_08004250",
                "FUN_08004228",
                "FUN_0800423c",
                "FUN_08004148",
                "FUN_080041a0",
                "FUN_08004940",
                "FUN_080046d0",
                "FUN_08004900"
            ],
            "imported": false,
            "current_name": "process_string_080036c6"
        },
        "FUN_08008190": {
            "renaming": {
                "FUN_08008190": "update_memory_registers_08008190",
                "puVar1": "memoryRegister"
            },
            "code": "\nvoid updateMemoryRegisters_08008190(void)\n\n{\n  uint *memoryRegister;\n  \n  memoryRegister = DAT_08008240;\n  FUN_08007ea4(DAT_08008240);\n  memoryRegister[3] = memoryRegister[3] & 0xffffdfff;\n  memoryRegister[3] = memoryRegister[3] & 0xffff400c | 0xc;\n  memoryRegister[4] = memoryRegister[4] & 0xffff8090;\n  memoryRegister[5] = memoryRegister[5] & 0xfffff000;\n  *memoryRegister = *memoryRegister & 0xfffffc00;\n  FUN_08007f54(memoryRegister,0x1c200);\n  memoryRegister[6] = memoryRegister[6];\n  memoryRegister[3] = memoryRegister[3] | 0x2000;\n  return;\n}\n\n",
            "called": [
                "FUN_08007f54",
                "FUN_08007ea4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008190",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "update_memory_registers_08008190"
        },
        "FUN_080074c8": {
            "renaming": {
                "FUN_080074c8": "process_operations_080074c8",
                "param_1": "operationFlags"
            },
            "code": "\nvoid processOperations_080074c8(uint operationFlags)\n\n{\n  if ((operationFlags & 1) != 0) {\n    FUN_08007402(0x3e);\n  }\n  if ((*(int *)PTR_DAT_08007518 != 0) && ((operationFlags & 0x1e) != 0)) {\n    FUN_0800195c();\n  }\n  if ((*(int *)PTR_DAT_0800751c != 0) && ((operationFlags & 0x80) != 0)) {\n    FUN_08003a18(operationFlags);\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_0800195c",
                "FUN_08003a18",
                "FUN_08007402"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080074c8",
            "calling": [
                "FUN_08007930"
            ],
            "imported": false,
            "current_name": "process_operations_080074c8"
        },
        "FUN_0800b430": {
            "renaming": {
                "FUN_0800b430": "memset_custom_0800b430",
                "param_1": "dst",
                "param_2": "value",
                "param_3": "count",
                "puVar1": "dst_ptr",
                "puVar2": "temp_ptr",
                "uVar3": "remaining_count",
                "uVar4": "value_32bit",
                "bVar5": "is_zero"
            },
            "code": "\nvoid memset_custom_0800b430(undefined4 *dst,undefined value,uint count)\n\n{\n  undefined4 *dst_ptr;\n  undefined4 *temp_ptr;\n  uint remaining_count;\n  undefined4 value_32bit;\n  bool is_zero;\n  \n  if (((uint)dst & 3) != 0) {\n    remaining_count = count - 1;\n    dst_ptr = dst;\n    if (count == 0) {\n      return;\n    }\n    while( true ) {\n      dst = (undefined4 *)((int)dst_ptr + 1);\n      *(undefined *)dst_ptr = value;\n      count = remaining_count;\n      if (((uint)dst & 3) == 0) break;\n      is_zero = remaining_count == 0;\n      remaining_count = remaining_count - 1;\n      dst_ptr = dst;\n      if (is_zero) {\n        return;\n      }\n    }\n  }\n  if (3 < count) {\n    value_32bit = CONCAT22(CONCAT11(value,value),CONCAT11(value,value));\n    if (0xf < count) {\n      dst_ptr = dst + 4;\n      do {\n        dst_ptr[-4] = value_32bit;\n        dst_ptr[-3] = value_32bit;\n        dst_ptr[-2] = value_32bit;\n        dst_ptr[-1] = value_32bit;\n        dst_ptr = dst_ptr + 4;\n      } while (dst_ptr != (undefined4 *)((int)dst + (count - 0x10 & 0xfffffff0) + 0x20));\n      remaining_count = count & 0xc;\n      dst = dst + ((count - 0x10 >> 4) + 1) * 4;\n      count = count & 0xf;\n      if (remaining_count == 0) goto joined_r0x0800b4a8;\n    }\n    dst_ptr = (undefined4 *)((count - 4 & 0xfffffffc) + 4 + (int)dst);\n    do {\n      temp_ptr = dst + 1;\n      *dst = value_32bit;\n      dst = temp_ptr;\n    } while (dst_ptr != temp_ptr);\n    count = count & 3;\n    dst = dst_ptr;\n  }\njoined_r0x0800b4a8:\n  if (count != 0) {\n    dst_ptr = dst;\n    do {\n      temp_ptr = (undefined4 *)((int)dst_ptr + 1);\n      *(undefined *)dst_ptr = value;\n      dst_ptr = temp_ptr;\n    } while ((undefined4 *)(count + (int)dst) != temp_ptr);\n  }\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b430",
            "calling": [
                "FUN_08004d7c",
                "FUN_08002f24",
                "FUN_080005b4",
                "FUN_08001ddc",
                "FUN_080024c4",
                "FUN_08001994",
                "FUN_080004ac",
                "FUN_080002f0",
                "FUN_08005814",
                "FUN_080079c0"
            ],
            "imported": false,
            "current_name": "memset_custom_0800b430"
        },
        "FUN_08004030": {
            "renaming": {
                "FUN_08004030": "handle_error_codes_08004030",
                "param_1": "errorCode"
            },
            "code": "\nvoid handleErrorCodes_08004030(char errorCode)\n\n{\n  if (errorCode == '\\0') {\n    FUN_080036c6(PTR_DAT_08004108);\n  }\n  else {\n    FUN_080036c6(PTR_s_error__0800410c);\n    switch(errorCode) {\n    case '\\x01':\n      FUN_080036c6(PTR_s_Bad_number_format_08004110);\n      break;\n    case '\\x02':\n      FUN_080036c6(PTR_s_Expected_command_letter_08004114);\n      break;\n    case '\\x03':\n      FUN_080036c6(PTR_s_Unsupported_statement_08004118);\n      break;\n    case '\\x04':\n      FUN_080036c6(PTR_s_Invalid_radius_0800411c);\n      break;\n    case '\\x05':\n      FUN_080036c6(PTR_s_Modal_group_violation_08004120);\n      break;\n    case '\\x06':\n      FUN_080036c6(PTR_s_Invalid_statement_08004124);\n      break;\n    case '\\a':\n      FUN_080036c6(PTR_s_Setting_disabled_08004128);\n      break;\n    case '\\b':\n      FUN_080036c6(PTR_s_Value___0_0_0800412c);\n      break;\n    case '\\t':\n      FUN_080036c6(PTR_s_Value___3_usec_08004130);\n      break;\n    case '\\n':\n      FUN_080036c6(PTR_s_EEPROM_read_fail__Using_defaults_08004134);\n      break;\n    case '\\v':\n      FUN_080036c6(PTR_s_Busy_or_queued_08004138);\n      break;\n    case '\\f':\n      FUN_080036c6(PTR_s_Alarm_lock_0800413c);\n      break;\n    case '\\r':\n      FUN_080036c6(PTR_s_Line_overflow_08004140);\n    }\n    FUN_080036c6(PTR_DAT_08004144);\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004030",
            "calling": [
                "FUN_080051b4",
                "FUN_080044e8",
                "FUN_080039bc",
                "FUN_08003b98",
                "FUN_080004ac",
                "FUN_08003f34"
            ],
            "imported": false,
            "current_name": "handle_error_codes_08004030"
        },
        "FUN_08005360": {
            "renaming": {
                "FUN_08005360": "compare_and_update_values_08005360",
                "uVar1": "currentValue",
                "uVar2": "updatedValue"
            },
            "code": "\nbool compareAndUpdateValues_08005360(void)\n\n{\n  uint currentValue;\n  uint updatedValue;\n  \n  *(int *)(PTR_DAT_08005398 + 0x18) =\n       *(int *)(PTR_DAT_08005398 + 0x14) + *(int *)(PTR_DAT_08005398 + 0x18);\n  currentValue = DAT_0800539c;\n  updatedValue = *(uint *)(PTR_DAT_08005398 + 0x18);\n  if (DAT_0800539c < updatedValue) {\n    *(int *)(PTR_DAT_08005398 + 0x18) = *(int *)(PTR_DAT_08005398 + 0x18) + -420000;\n  }\n  return currentValue < updatedValue;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005360",
            "calling": [
                "FUN_080053a0"
            ],
            "imported": false,
            "current_name": "compare_and_update_values_08005360"
        },
        "FUN_08003980": {
            "renaming": {
                "FUN_08003980": "reset_memory_pointers_08003980"
            },
            "code": "\nvoid resetMemoryPointers_08003980(void)\n\n{\n  *PTR_DAT_08003998 = 0;\n  *PTR_DAT_0800399c = 0;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003980",
            "calling": [
                "FUN_080039a0",
                "FUN_08003f34"
            ],
            "imported": false,
            "current_name": "reset_memory_pointers_08003980"
        },
        "FUN_08006de0": {
            "renaming": {
                "FUN_08006de0": "process_character_08006de0",
                "param_1": "inputChar",
                "uVar1": "processedValue"
            },
            "code": "\nundefined4 processCharacter_08006de0(char inputChar)\n\n{\n  undefined4 processedValue;\n  \n  processedValue = FUN_08006a18((int)inputChar);\n  return processedValue;\n}\n\n",
            "called": [
                "FUN_08006a18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006de0",
            "calling": [],
            "imported": false,
            "current_name": "process_character_08006de0"
        },
        "FUN_08007540": {
            "renaming": {
                "FUN_08007540": "initialize_system_08007540"
            },
            "code": "\nundefined4 initialize_system_08007540(void)\n\n{\n  FUN_080059b4();\n  FUN_08007436();\n  FUN_0800778c();\n  FUN_08007e08();\n  FUN_080079c0();\n  FUN_08008190();\n  FUN_08005984(0);\n  FUN_08001ddc();\n  return 0;\n}\n\n",
            "called": [
                "FUN_08005984",
                "FUN_08007436",
                "FUN_080059b4",
                "FUN_0800778c",
                "FUN_08008190",
                "FUN_08001ddc",
                "FUN_08007e08",
                "FUN_080079c0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007540",
            "calling": [
                "FUN_080092c4"
            ],
            "imported": false,
            "current_name": "initialize_system_08007540"
        },
        "FUN_080052dc": {
            "renaming": {
                "FUN_080052dc": "update_register_080052dc",
                "param_1": "inputValue"
            },
            "code": "\nvoid updateRegister_080052dc(uint inputValue)\n\n{\n  *(uint *)(DAT_08005308 + 0x14) = inputValue | *(uint *)(DAT_08005308 + 0x14) & 0xfffff55f;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052dc",
            "calling": [
                "FUN_080053a0"
            ],
            "imported": false,
            "current_name": "update_register_080052dc"
        },
        "FUN_080064ec": {
            "renaming": {
                "FUN_080064ec": "calculate_result_080064ec",
                "uVar1": "temp_var1",
                "uVar2": "temp_var2",
                "local_c": "result"
            },
            "code": "\nuint calculate_result_080064ec(void)\n\n{\n  uint temp_var1;\n  uint temp_var2;\n  uint result;\n  \n  temp_var1 = *(uint *)(DAT_0800661c + 8) & 0xc;\n  if (temp_var1 == 8) {\n    temp_var2 = *(uint *)(DAT_0800661c + 4) & 0x3f;\n    temp_var1 = count_leading_zeroes(0x200);\n    if ((*(uint *)(DAT_0800661c + 4) & 0x400000) >> (temp_var1 & 0xff) == 0) {\n      temp_var1 = count_leading_zeroes(0x3fe0000);\n      result = ((*(uint *)(DAT_0800661c + 4) & 0x7fc0) >> (temp_var1 & 0xff)) * (DAT_08006620 / temp_var2);\n    }\n    else {\n      temp_var1 = count_leading_zeroes(0x3fe0000);\n      result = ((*(uint *)(DAT_0800661c + 4) & 0x7fc0) >> (temp_var1 & 0xff)) * (DAT_08006624 / temp_var2);\n    }\n    temp_var1 = count_leading_zeroes(0xc000);\n    return result / ((((*(uint *)(DAT_0800661c + 4) & 0x30000) >> (temp_var1 & 0xff)) + 1) * 2);\n  }\n  if (temp_var1 < 9) {\n    if (temp_var1 == 0) {\n      return DAT_08006620;\n    }\n    if (temp_var1 == 4) {\n      return DAT_08006624;\n    }\n  }\n  return DAT_08006620;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080064ec",
            "calling": [
                "FUN_08006628"
            ],
            "imported": false,
            "current_name": "calculate_result_080064ec"
        },
        "FUN_08006ba0": {
            "renaming": {
                "FUN_08006ba0": "bitwise_operation_08006ba0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "tempVar"
            },
            "code": "\nuint bitwiseOperation_08006ba0(uint input1,uint input2,uint input3)\n\n{\n  uint tempVar;\n  \n  input1 = input1 & 7;\n  tempVar = 7 - input1;\n  if (3 < tempVar) {\n    tempVar = 4;\n  }\n  if (input1 + 4 < 7) {\n    input1 = 0;\n  }\n  else {\n    input1 = input1 - 3;\n  }\n  return input3 & (1 << (input1 & 0xff)) - 1U |\n         ((1 << (tempVar & 0xff)) - 1U & input2) << (input1 & 0xff);\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ba0",
            "calling": [
                "FUN_08006cf6"
            ],
            "imported": false,
            "current_name": "bitwise_operation_08006ba0"
        },
        "FUN_080003ec": {
            "renaming": {
                "FUN_080003ec": "validate_checksum_080003ec",
                "param_1": "output_buffer",
                "param_2": "input_offset",
                "param_3": "length",
                "local_1c": "remaining_length",
                "local_18": "current_offset",
                "local_14": "current_output",
                "local_9": "checksum"
            },
            "code": "\nbool validate_checksum_080003ec(char *output_buffer,int input_offset,int length)\n\n{\n  char cVar1;\n  uint uVar2;\n  int remaining_length;\n  int current_offset;\n  char *current_output;\n  byte checksum;\n  \n  checksum = 0;\n  remaining_length = length;\n  current_offset = input_offset;\n  current_output = output_buffer;\n  if (*(int *)PTR_DAT_08000470 == 0) {\n    FUN_080002f0();\n    current_offset = input_offset;\n    current_output = output_buffer;\n  }\n  for (; remaining_length != 0; remaining_length = remaining_length + -1) {\n    cVar1 = FUN_08000310(current_offset);\n    checksum = cVar1 + (checksum != 0);\n    *current_output = cVar1;\n    current_offset = current_offset + 1;\n    current_output = current_output + 1;\n  }\n  uVar2 = FUN_08000310(current_offset);\n  return checksum == uVar2;\n}\n\n",
            "called": [
                "FUN_08000310",
                "FUN_080002f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080003ec",
            "calling": [
                "FUN_08004d7c",
                "FUN_08004d2c",
                "FUN_08004dd2"
            ],
            "imported": false,
            "current_name": "validate_checksum_080003ec"
        },
        "FUN_08002896": {
            "renaming": {
                "FUN_08002896": "adjust_character_08002896",
                "param_1": "inputChar",
                "local_9": "adjustedChar"
            },
            "code": "\nchar adjustCharacter_08002896(char inputChar)\n\n{\n  char adjustedChar;\n  \n  adjustedChar = inputChar;\n  if (inputChar == '\\0') {\n    adjustedChar = '\\x12';\n  }\n  return adjustedChar + -1;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002896",
            "calling": [
                "FUN_08002a94"
            ],
            "imported": false,
            "current_name": "adjust_character_08002896"
        },
        "FUN_0800a348": {
            "renaming": {
                "FUN_0800a348": "calculate_result_0800a348",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "temp_var",
                "uVar2": "intermediate_result_1",
                "uVar3": "intermediate_result_2",
                "uVar4": "masked_input_2",
                "uVar5": "operation_result_1",
                "uVar6": "operation_result_2",
                "uVar7": "operation_result_3",
                "lVar8": "long_result",
                "local_30": "result_part_1",
                "uStack_2c": "result_part_2",
                "local_28": "result_part_3",
                "uStack_24": "result_part_4"
            },
            "code": "\nundefined4 calculate_result_0800a348(undefined4 input_1,uint input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  int temp_var;\n  undefined4 intermediate_result_1;\n  undefined4 intermediate_result_2;\n  uint masked_input_2;\n  undefined8 operation_result_1;\n  undefined8 operation_result_2;\n  undefined8 operation_result_3;\n  longlong long_result;\n  undefined4 result_part_1;\n  undefined4 result_part_2;\n  undefined4 result_part_3;\n  undefined4 result_part_4;\n  \n  masked_input_2 = input_2 & 0x7fffffff;\n  if (masked_input_2 < 0x3e400000) {\n    temp_var = FUN_08008ba0();\n    if (temp_var == 0) {\n      return 0;\n    }\n    operation_result_1 = FUN_08008640(input_1,input_2,input_1,input_2);\n    intermediate_result_2 = (undefined4)((ulonglong)operation_result_1 >> 0x20);\n    intermediate_result_1 = (undefined4)operation_result_1;\n    operation_result_2 = FUN_08008640(intermediate_result_1,intermediate_result_2,DAT_0800a558,DAT_0800a55c);\n    operation_result_2 = FUN_080082d4((int)operation_result_2,(int)((ulonglong)operation_result_2 >> 0x20),DAT_0800a560,DAT_0800a564);\n    operation_result_2 = FUN_08008640((int)operation_result_2,(int)((ulonglong)operation_result_2 >> 0x20),intermediate_result_1,intermediate_result_2);\n    operation_result_2 = FUN_080082d0((int)operation_result_2,(int)((ulonglong)operation_result_2 >> 0x20),DAT_0800a568,DAT_0800a56c);\n    operation_result_2 = FUN_08008640((int)operation_result_2,(int)((ulonglong)operation_result_2 >> 0x20),intermediate_result_1,intermediate_result_2);\n    operation_result_2 = FUN_080082d4((int)operation_result_2,(int)((ulonglong)operation_result_2 >> 0x20),DAT_0800a570,DAT_0800a574);\n    operation_result_2 = FUN_08008640((int)operation_result_2,(int)((ulonglong)operation_result_2 >> 0x20),intermediate_result_1,intermediate_result_2);\n    operation_result_2 = FUN_080082d0((int)operation_result_2,(int)((ulonglong)operation_result_2 >> 0x20),DAT_0800a578,DAT_0800a57c);\n    operation_result_2 = FUN_08008640((int)operation_result_2,(int)((ulonglong)operation_result_2 >> 0x20),intermediate_result_1,intermediate_result_2);\n    operation_result_2 = FUN_080082d4((int)operation_result_2,(int)((ulonglong)operation_result_2 >> 0x20),DAT_0800a580,DAT_0800a584);\n    operation_result_2 = FUN_08008640((int)operation_result_2,(int)((ulonglong)operation_result_2 >> 0x20),intermediate_result_1,intermediate_result_2);\n  }\n  else {\n    operation_result_1 = FUN_08008640(input_1,input_2,input_1,input_2);\n    intermediate_result_2 = (undefined4)((ulonglong)operation_result_1 >> 0x20);\n    intermediate_result_1 = (undefined4)operation_result_1;\n    operation_result_2 = FUN_08008640(intermediate_result_1,intermediate_result_2,DAT_0800a558,DAT_0800a55c);\n    operation_result_2 = FUN_080082d4((int)operation_result_2,(int)((ulonglong)operation_result_2 >> 0x20),DAT_0800a560,DAT_0800a564);\n    operation_result_2 = FUN_08008640((int)operation_result_2,(int)((ulonglong)operation_result_2 >> 0x20),intermediate_result_1,intermediate_result_2);\n    operation_result_2 = FUN_080082d0((int)operation_result_2,(int)((ulonglong)operation_result_2 >> 0x20),DAT_0800a568,DAT_0800a56c);\n    operation_result_2 = FUN_08008640((int)operation_result_2,(int)((ulonglong)operation_result_2 >> 0x20),intermediate_result_1,intermediate_result_2);\n    operation_result_2 = FUN_080082d4((int)operation_result_2,(int)((ulonglong)operation_result_2 >> 0x20),DAT_0800a570,DAT_0800a574);\n    operation_result_2 = FUN_08008640((int)operation_result_2,(int)((ulonglong)operation_result_2 >> 0x20),intermediate_result_1,intermediate_result_2);\n    operation_result_2 = FUN_080082d0((int)operation_result_2,(int)((ulonglong)operation_result_2 >> 0x20),DAT_0800a578,DAT_0800a57c);\n    operation_result_2 = FUN_08008640((int)operation_result_2,(int)((ulonglong)operation_result_2 >> 0x20),intermediate_result_1,intermediate_result_2);\n    operation_result_2 = FUN_080082d4((int)operation_result_2,(int)((ulonglong)operation_result_2 >> 0x20),DAT_0800a580,DAT_0800a584);\n    operation_result_2 = FUN_08008640((int)operation_result_2,(int)((ulonglong)operation_result_2 >> 0x20),intermediate_result_1,intermediate_result_2);\n    if (DAT_0800a590 < (int)masked_input_2) {\n      if (DAT_0800a594 < (int)masked_input_2) {\n        long_result = (ulonglong)DAT_0800a598 << 0x20;\n        temp_var = DAT_0800a59c;\n      }\n      else {\n        long_result = FUN_080082d0(0,DAT_0800a58c,0,masked_input_2 - 0x200000);\n        temp_var = masked_input_2 - 0x200000;\n      }\n      result_part_4 = (undefined4)((ulonglong)long_result >> 0x20);\n      result_part_3 = (undefined4)long_result;\n      operation_result_1 = FUN_08008640(intermediate_result_1,intermediate_result_2,0,DAT_0800a588);\n      operation_result_1 = FUN_080082d0((int)operation_result_1,(int)((ulonglong)operation_result_1 >> 0x20),0,temp_var);\n      operation_result_2 = FUN_08008640(intermediate_result_1,intermediate_result_2,(int)operation_result_2,(int)((ulonglong)operation_result_2 >> 0x20));\n      operation_result_3 = FUN_08008640(input_1,input_2,input_3,input_4);\n      operation_result_2 = FUN_080082d0((int)operation_result_2,(int)((ulonglong)operation_result_2 >> 0x20),(int)operation_result_3,\n                           (int)((ulonglong)operation_result_3 >> 0x20));\n      operation_result_1 = FUN_080082d0((int)operation_result_1,(int)((ulonglong)operation_result_1 >> 0x20),(int)operation_result_2,\n                           (int)((ulonglong)operation_result_2 >> 0x20));\n      intermediate_result_1 = FUN_080082d0(result_part_3,result_part_4,(int)operation_result_1,(int)((ulonglong)operation_result_1 >> 0x20));\n      return intermediate_result_1;\n    }\n  }\n  result_part_2 = (undefined4)((ulonglong)operation_result_2 >> 0x20);\n  result_part_1 = (undefined4)operation_result_2;\n  intermediate_result_1 = (undefined4)((ulonglong)operation_result_1 >> 0x20);\n  operation_result_2 = FUN_08008640((int)operation_result_1,intermediate_result_1,0,DAT_0800a588);\n  operation_result_1 = FUN_08008640((int)operation_result_1,intermediate_result_1,result_part_1,result_part_2);\n  operation_result_3 = FUN_08008640(input_1,input_2,input_3,input_4);\n  operation_result_1 = FUN_080082d0((int)operation_result_1,(int)((ulonglong)operation_result_1 >> 0x20),(int)operation_result_3,\n                       (int)((ulonglong)operation_result_3 >> 0x20));\n  operation_result_1 = FUN_080082d0((int)operation_result_2,(int)((ulonglong)operation_result_2 >> 0x20),(int)operation_result_1,\n                       (int)((ulonglong)operation_result_1 >> 0x20));\n  intermediate_result_1 = FUN_080082d0(0,DAT_0800a58c,(int)operation_result_1,(int)((ulonglong)operation_result_1 >> 0x20));\n  return intermediate_result_1;\n}\n\n",
            "called": [
                "FUN_08008640",
                "FUN_080082d4",
                "FUN_080082d0",
                "FUN_08008ba0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800a348",
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "imported": false,
            "current_name": "calculate_result_0800a348"
        },
        "FUN_080001ac": {
            "renaming": {
                "FUN_080001ac": "concatenate_params_080001ac",
                "param_1": "first_param",
                "param_2": "second_param"
            },
            "code": "\nundefined8 concatenate_params_080001ac(undefined *first_param,undefined *second_param)\n\n{\n  if (DAT_080001bc != 0) {\n    first_param = PTR_FUN_080001c4;\n    second_param = PTR_DAT_080001c0;\n  }\n  return CONCAT44(second_param,first_param);\n}\n\n",
            "called": [
                "FUN_0800b5b0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001ac",
            "calling": [
                "FUN_0800b3e8"
            ],
            "imported": false,
            "current_name": "concatenate_params_080001ac"
        },
        "FUN_08003740": {
            "renaming": {
                "FUN_08003740": "initialize_buffer_08003740",
                "param_1": "buffer"
            },
            "code": "\nvoid initializeBuffer_08003740(undefined buffer)\n\n{\n  FUN_080036f0(buffer,8);\n  return;\n}\n\n",
            "called": [
                "FUN_080036f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003740",
            "calling": [],
            "imported": false,
            "current_name": "initialize_buffer_08003740"
        },
        "FUN_08000478": {
            "renaming": {
                "FUN_08000478": "update_parameters_08000478",
                "param_1": "parameter1",
                "param_2": "parameter2",
                "param_3": "parameter3"
            },
            "code": "\nvoid updateParameters_08000478(undefined parameter1,undefined parameter2,undefined parameter3)\n\n{\n  PTR_DAT_080004a8[0x19] = parameter1;\n  PTR_DAT_080004a8[0x1a] = parameter2;\n  PTR_DAT_080004a8[0x1b] = parameter3;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000478",
            "calling": [
                "FUN_080005b4",
                "FUN_080004ac"
            ],
            "imported": false,
            "current_name": "update_parameters_08000478"
        },
        "FUN_08006d2e": {
            "renaming": {
                "FUN_08006d2e": "process_character_08006d2e",
                "param_1": "inputChar"
            },
            "code": "\nvoid processCharacter_08006d2e(char inputChar)\n\n{\n  FUN_080069b4((int)inputChar);\n  return;\n}\n\n",
            "called": [
                "FUN_080069b4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d2e",
            "calling": [],
            "imported": false,
            "current_name": "process_character_08006d2e"
        },
        "FUN_08007e1c": {
            "renaming": {
                "FUN_08007e1c": "wait_for_flag_and_write_08007e1c",
                "param_1": "inputByte"
            },
            "code": "\nvoid waitForFlagAndWrite_08007e1c(byte inputByte)\n\n{\n  do {\n  } while ((*DAT_08007e48 & 0x80) == 0);\n  DAT_08007e48[1] = (uint)inputByte;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e1c",
            "calling": [
                "FUN_0800826a",
                "FUN_08008250"
            ],
            "imported": false,
            "current_name": "wait_for_flag_and_write_08007e1c"
        },
        "FUN_0800adf0": {
            "renaming": {
                "FUN_0800adf0": "complex_calculation_0800adf0",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "param_5": "flag",
                "iVar1": "result_check",
                "uVar2": "temp_var_1",
                "uVar3": "temp_var_2",
                "uVar4": "temp_var_3",
                "uVar5": "temp_var_4",
                "uVar6": "temp_var_5",
                "uVar7": "intermediate_result",
                "uVar8": "intermediate_result_2"
            },
            "code": "\nundefined4\ncomplex_calculation_0800adf0(undefined4 input_1,uint input_2,undefined4 input_3,undefined4 input_4,int flag)\n\n{\n  int result_check;\n  undefined4 temp_var_1;\n  undefined4 temp_var_2;\n  undefined4 temp_var_3;\n  undefined4 temp_var_4;\n  undefined4 temp_var_5;\n  undefined8 intermediate_result;\n  undefined8 intermediate_result_2;\n  \n  if (((input_2 & 0x7fffffff) < 0x3e400000) && (result_check = FUN_08008ba0(), result_check == 0)) {\n    return input_1;\n  }\n  intermediate_result = FUN_08008640(input_1,input_2,input_1);\n  temp_var_3 = (undefined4)((ulonglong)intermediate_result >> 0x20);\n  temp_var_2 = (undefined4)intermediate_result;\n  intermediate_result = FUN_08008640(input_1,input_2,temp_var_2,temp_var_3);\n  temp_var_4 = (undefined4)((ulonglong)intermediate_result >> 0x20);\n  temp_var_1 = (undefined4)intermediate_result;\n  intermediate_result = FUN_08008640(temp_var_2,temp_var_3,DAT_0800af40,DAT_0800af44);\n  intermediate_result = FUN_080082d0((int)intermediate_result,(int)((ulonglong)intermediate_result >> 0x20),DAT_0800af48,DAT_0800af4c);\n  intermediate_result = FUN_08008640((int)intermediate_result,(int)((ulonglong)intermediate_result >> 0x20),temp_var_2,temp_var_3);\n  intermediate_result = FUN_080082d4((int)intermediate_result,(int)((ulonglong)intermediate_result >> 0x20),DAT_0800af50,DAT_0800af54);\n  intermediate_result = FUN_08008640((int)intermediate_result,(int)((ulonglong)intermediate_result >> 0x20),temp_var_2,temp_var_3);\n  intermediate_result = FUN_080082d0((int)intermediate_result,(int)((ulonglong)intermediate_result >> 0x20),DAT_0800af58,DAT_0800af5c);\n  intermediate_result = FUN_08008640((int)intermediate_result,(int)((ulonglong)intermediate_result >> 0x20),temp_var_2,temp_var_3);\n  intermediate_result = FUN_080082d4((int)intermediate_result,(int)((ulonglong)intermediate_result >> 0x20),DAT_0800af60,DAT_0800af64);\n  temp_var_5 = (undefined4)((ulonglong)intermediate_result >> 0x20);\n  if (flag != 0) {\n    intermediate_result_2 = FUN_08008640(input_3,input_4,0,DAT_0800af70);\n    intermediate_result = FUN_08008640(temp_var_1,temp_var_4,(int)intermediate_result,temp_var_5);\n    intermediate_result = FUN_080082d0((int)intermediate_result_2,(int)((ulonglong)intermediate_result_2 >> 0x20),(int)intermediate_result,\n                         (int)((ulonglong)intermediate_result >> 0x20));\n    intermediate_result = FUN_08008640((int)intermediate_result,(int)((ulonglong)intermediate_result >> 0x20),temp_var_2,temp_var_3);\n    intermediate_result = FUN_080082d0((int)intermediate_result,(int)((ulonglong)intermediate_result >> 0x20),input_3,input_4);\n    intermediate_result_2 = FUN_08008640(temp_var_1,temp_var_4,DAT_0800af68,DAT_0800af6c);\n    intermediate_result = FUN_080082d4((int)intermediate_result,(int)((ulonglong)intermediate_result >> 0x20),(int)intermediate_result_2,\n                         (int)((ulonglong)intermediate_result_2 >> 0x20));\n    temp_var_2 = FUN_080082d0(input_1,input_2,(int)intermediate_result,(int)((ulonglong)intermediate_result >> 0x20));\n    return temp_var_2;\n  }\n  intermediate_result = FUN_08008640(temp_var_2,temp_var_3,(int)intermediate_result,temp_var_5);\n  intermediate_result = FUN_080082d0((int)intermediate_result,(int)((ulonglong)intermediate_result >> 0x20),DAT_0800af68,DAT_0800af6c);\n  intermediate_result = FUN_08008640((int)intermediate_result,(int)((ulonglong)intermediate_result >> 0x20),temp_var_1,temp_var_4);\n  temp_var_2 = FUN_080082d4((int)intermediate_result,(int)((ulonglong)intermediate_result >> 0x20),input_1,input_2);\n  return temp_var_2;\n}\n\n",
            "called": [
                "FUN_08008640",
                "FUN_080082d4",
                "FUN_080082d0",
                "FUN_08008ba0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800adf0",
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "imported": false,
            "current_name": "complex_calculation_0800adf0"
        },
        "FUN_08003a74": {
            "renaming": {
                "FUN_08003a74": "process_status_flags_08003a74",
                "bVar1": "statusFlags"
            },
            "code": "\nvoid processStatusFlags_08003a74(void)\n\n{\n  byte statusFlags;\n  \n  if (PTR_DAT_08003b90[2] != '\\0') {\n    statusFlags = PTR_DAT_08003b90[2];\n    if ((statusFlags & 0x60) != 0) {\n      PTR_DAT_08003b90[1] = 6;\n      if ((statusFlags & 0x40) == 0) {\n        FUN_08004148(0xfffffffe);\n      }\n      else {\n        FUN_08004148(0xffffffff);\n        FUN_080041a0(1);\n        PTR_DAT_08003b90[2] = PTR_DAT_08003b90[2] & 0xef;\n        do {\n        } while ((PTR_DAT_08003b90[2] & 0x10) == 0);\n      }\n      PTR_DAT_08003b90[2] = PTR_DAT_08003b90[2] & 0x9f;\n    }\n    if ((statusFlags & 0x10) == 0) {\n      if ((statusFlags & 1) != 0) {\n        FUN_08004940();\n        PTR_DAT_08003b90[2] = PTR_DAT_08003b90[2] & 0xfe;\n      }\n      if ((statusFlags & 8) != 0) {\n        FUN_0800587c();\n        PTR_DAT_08003b90[2] = PTR_DAT_08003b90[2] & 0xf7;\n      }\n      if ((statusFlags & 4) != 0) {\n        FUN_080058a0();\n        PTR_DAT_08003b90[2] = PTR_DAT_08003b90[2] & 0xfb;\n      }\n      if ((statusFlags & 2) != 0) {\n        FUN_0800585c();\n        if ((PTR_DAT_08003b94[0x28] & 2) != 0) {\n          PTR_DAT_08003b90[0x10] = 1;\n        }\n        PTR_DAT_08003b90[2] = PTR_DAT_08003b90[2] & 0xfd;\n      }\n    }\n    else {\n      *PTR_DAT_08003b90 = 1;\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_080058a0",
                "FUN_0800585c",
                "FUN_080041a0",
                "FUN_08004148",
                "FUN_08004940",
                "FUN_0800587c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003a74",
            "calling": [
                "FUN_08002408",
                "FUN_08001ddc",
                "FUN_08002fd4",
                "FUN_080024c4",
                "FUN_08003f34",
                "FUN_08001e98"
            ],
            "imported": false,
            "current_name": "process_status_flags_08003a74"
        },
        "FUN_08005cec": {
            "renaming": {
                "FUN_08005cec": "process_control_flags_08005cec",
                "param_1": "controlFlags",
                "iVar1": "currentTime",
                "uVar2": "elapsedTime",
                "uVar3": "leadingZeroes1",
                "uVar4": "leadingZeroes2"
            },
            "code": "\nundefined4 processControlFlags_08005cec(uint *controlFlags)\n\n{\n  int currentTime;\n  uint elapsedTime;\n  uint leadingZeroes1;\n  uint leadingZeroes2;\n  \n  if ((*controlFlags & 1) != 0) {\n    if (((DAT_08005fac[2] & 0xc) == 4) ||\n       (((DAT_08005fac[2] & 0xc) == 8 && ((DAT_08005fac[1] & 0x400000) == 0x400000)))) {\n      if (((*DAT_08005fac & 0x20000) != 0) && (controlFlags[1] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      *DAT_08005fb0 = 0;\n      currentTime = FUN_08005a84();\n      while ((*DAT_08005fac & 0x20000) != 0) {\n        elapsedTime = FUN_08005a84();\n        if (currentTime + 5000U <= elapsedTime) {\n          return 3;\n        }\n      }\n      *DAT_08005fb0 = (char)controlFlags[1];\n      if (controlFlags[1] == 1) {\n        currentTime = FUN_08005a84();\n        while ((*DAT_08005fac & 0x20000) == 0) {\n          elapsedTime = FUN_08005a84();\n          if (currentTime + 5000U <= elapsedTime) {\n            return 3;\n          }\n        }\n      }\n      else {\n        currentTime = FUN_08005a84();\n        while ((*DAT_08005fac & 0x20000) != 0) {\n          elapsedTime = FUN_08005a84();\n          if (currentTime + 5000U <= elapsedTime) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*controlFlags & 2) != 0) {\n    if (((DAT_08005fac[2] & 0xc) == 0) ||\n       (((DAT_08005fac[2] & 0xc) == 8 && ((DAT_08005fac[1] & 0x400000) == 0)))) {\n      if (((*DAT_08005fac & 2) != 0) && (controlFlags[3] != 1)) {\n        return 1;\n      }\n    }\n    else if (controlFlags[3] == 0) {\n      *DAT_08005fb4 = 0;\n      currentTime = FUN_08005a84();\n      while ((*DAT_08005fac & 2) != 0) {\n        elapsedTime = FUN_08005a84();\n        if (currentTime + 100U <= elapsedTime) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08005fb4 = 1;\n      currentTime = FUN_08005a84();\n      while ((*DAT_08005fac & 2) == 0) {\n        elapsedTime = FUN_08005a84();\n        if (currentTime + 100U <= elapsedTime) {\n          return 3;\n        }\n      }\n      elapsedTime = count_leading_zeroes(0x1f000000);\n      *DAT_08005fac = controlFlags[4] << (elapsedTime & 0xff) | *DAT_08005fac & 0xffffff07;\n    }\n  }\n  if ((*controlFlags & 8) != 0) {\n    if (controlFlags[5] == 0) {\n      *DAT_08005fb8 = 0;\n      currentTime = FUN_08005a84();\n      while ((DAT_08005fac[0x1d] & 2) != 0) {\n        elapsedTime = FUN_08005a84();\n        if (currentTime + 100U <= elapsedTime) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08005fb8 = 1;\n      currentTime = FUN_08005a84();\n      while ((DAT_08005fac[0x1d] & 2) == 0) {\n        elapsedTime = FUN_08005a84();\n        if (currentTime + 100U <= elapsedTime) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*controlFlags & 4) != 0) {\n    DAT_08005fac[0x10] = DAT_08005fac[0x10] | 0x10000000;\n    *DAT_08005fbc = *DAT_08005fbc | 0x100;\n    currentTime = FUN_08005a84();\n    while ((*DAT_08005fbc & 0x100) == 0) {\n      elapsedTime = FUN_08005a84();\n      if (currentTime + 100U <= elapsedTime) {\n        return 3;\n      }\n    }\n    *DAT_08005fc0 = 0;\n    currentTime = FUN_08005a84();\n    while ((DAT_08006180[0x1c] & 2) != 0) {\n      elapsedTime = FUN_08005a84();\n      if (currentTime + 5000U <= elapsedTime) {\n        return 3;\n      }\n    }\n    *DAT_08006184 = (char)controlFlags[2];\n    if (controlFlags[2] == 1) {\n      currentTime = FUN_08005a84();\n      while ((DAT_08006180[0x1c] & 2) == 0) {\n        elapsedTime = FUN_08005a84();\n        if (currentTime + 5000U <= elapsedTime) {\n          return 3;\n        }\n      }\n    }\n    else {\n      currentTime = FUN_08005a84();\n      while ((DAT_08006180[0x1c] & 2) != 0) {\n        elapsedTime = FUN_08005a84();\n        if (currentTime + 5000U <= elapsedTime) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (controlFlags[6] != 0) {\n    if ((DAT_08006180[2] & 0xc) == 8) {\n      return 1;\n    }\n    if (controlFlags[6] == 2) {\n      *DAT_08006188 = 0;\n      currentTime = FUN_08005a84();\n      while ((*DAT_08006180 & 0x2000000) != 0) {\n        elapsedTime = FUN_08005a84();\n        if (currentTime + 100U <= elapsedTime) {\n          return 3;\n        }\n      }\n      elapsedTime = count_leading_zeroes(0x3fe0000);\n      leadingZeroes1 = count_leading_zeroes(0xc000);\n      leadingZeroes2 = count_leading_zeroes(0xf0);\n      DAT_08006180[1] =\n           controlFlags[0xb] << (leadingZeroes2 & 0xff) |\n           controlFlags[8] | controlFlags[9] << (elapsedTime & 0xff) | (controlFlags[10] >> 1) - 1 << (leadingZeroes1 & 0xff) |\n           controlFlags[7] | 0x20000000;\n      *DAT_08006188 = 1;\n      currentTime = FUN_08005a84();\n      while ((*DAT_08006180 & 0x2000000) == 0) {\n        elapsedTime = FUN_08005a84();\n        if (currentTime + 100U <= elapsedTime) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08006188 = 0;\n      currentTime = FUN_08005a84();\n      while ((*DAT_08006180 & 0x2000000) != 0) {\n        elapsedTime = FUN_08005a84();\n        if (currentTime + 100U <= elapsedTime) {\n          return 3;\n        }\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "called": [
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005cec",
            "calling": [
                "FUN_08007436"
            ],
            "imported": false,
            "current_name": "process_control_flags_08005cec"
        },
        "FUN_08006b00": {
            "renaming": {
                "FUN_08006b00": "update_memory_08006b00",
                "param_1": "byteIndex",
                "param_2": "value"
            },
            "code": "\nvoid updateMemory_08006b00(byte byteIndex,uint value)\n\n{\n  if ((char)byteIndex < '\\0') {\n    *(char *)((byteIndex & 0xf) + DAT_08006b4c + 0x14) = (char)((value & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)byteIndex + DAT_08006b50 + 0x300) = (char)((value & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006b00",
            "calling": [
                "FUN_08006cf6",
                "FUN_08006c9c"
            ],
            "imported": false,
            "current_name": "update_memory_08006b00"
        },
        "FUN_0800b4d0": {
            "renaming": {
                "FUN_0800b4d0": "execute_if_data_exists_0800b4d0"
            },
            "code": "\nvoid executeIfDataExists_0800b4d0(void)\n\n{\n  if (DAT_0800b4dc != 0) {\n    FUN_0800b524(0,PTR_LAB_0800b4f0_1_0800b4e0,0);\n    return;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_0800b524"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b4d0",
            "calling": [
                "FUN_0800b3e8"
            ],
            "imported": false,
            "current_name": "execute_if_data_exists_0800b4d0"
        },
        "FUN_08007f54": {
            "renaming": {
                "FUN_08007f54": "calculate_value_08007f54",
                "param_1": "input1",
                "param_2": "input2",
                "lVar1": "longVal1",
                "iVar2": "intVal2",
                "iVar3": "intVal3",
                "uVar4": "undefinedVal4"
            },
            "code": "\nvoid calculateValue_08007f54(int input1,int input2)\n\n{\n  longlong longVal1;\n  int intVal2;\n  int intVal3;\n  undefined8 undefinedVal4;\n  \n  if ((*(uint *)(input1 + 0xc) & 0x8000) == 0) {\n    if ((input1 != DAT_08008184) && (input1 != DAT_08008188)) {\n      undefinedVal4 = FUN_08006680();\n      longVal1 = (ulonglong)DAT_0800818c *\n              ((ulonglong)(uint)((int)undefinedVal4 * 0x19) / (ulonglong)(uint)(input2 << 2));\n      intVal2 = FUN_08006680((int)undefinedVal4,(int)((ulonglong)undefinedVal4 >> 0x20),(int)longVal1);\n      intVal3 = FUN_08006680();\n      *(uint *)(input1 + 8) =\n           (uint)((ulonglong)longVal1 >> 0x25) << 4 |\n           (uint)((ulonglong)DAT_0800818c *\n                  (ulonglong)\n                  (((uint)(intVal2 * 0x19) / (uint)(input2 << 2) +\n                   (uint)((ulonglong)DAT_0800818c *\n                          ((ulonglong)(uint)(intVal3 * 0x19) / (ulonglong)(uint)(input2 << 2)) >>\n                         0x25) * -100) * 0x10 + 0x32) >> 0x25) & 0xf;\n      return;\n    }\n    undefinedVal4 = FUN_080066cc();\n    longVal1 = (ulonglong)DAT_0800818c *\n            ((ulonglong)(uint)((int)undefinedVal4 * 0x19) / (ulonglong)(uint)(input2 << 2));\n    intVal2 = FUN_080066cc((int)undefinedVal4,(int)((ulonglong)undefinedVal4 >> 0x20),(int)longVal1);\n    intVal3 = FUN_080066cc();\n    *(uint *)(input1 + 8) =\n         (uint)((ulonglong)longVal1 >> 0x25) << 4 |\n         (uint)((ulonglong)DAT_0800818c *\n                (ulonglong)\n                (((uint)(intVal2 * 0x19) / (uint)(input2 << 2) +\n                 (uint)((ulonglong)DAT_0800818c *\n                        ((ulonglong)(uint)(intVal3 * 0x19) / (ulonglong)(uint)(input2 << 2)) >> 0x25)\n                 * -100) * 0x10 + 0x32) >> 0x25) & 0xf;\n  }\n  else {\n    if ((input1 != DAT_08008184) && (input1 != DAT_08008188)) {\n      undefinedVal4 = FUN_08006680();\n      longVal1 = (ulonglong)DAT_0800818c *\n              ((ulonglong)(uint)((int)undefinedVal4 * 0x19) / (ulonglong)(uint)(input2 << 1));\n      intVal2 = FUN_08006680((int)undefinedVal4,(int)((ulonglong)undefinedVal4 >> 0x20),(int)longVal1);\n      intVal3 = FUN_08006680();\n      *(uint *)(input1 + 8) =\n           (uint)((ulonglong)longVal1 >> 0x25) << 4 |\n           (uint)((ulonglong)DAT_0800818c *\n                  (ulonglong)\n                  (((uint)(intVal2 * 0x19) / (uint)(input2 << 1) +\n                   (uint)((ulonglong)DAT_0800818c *\n                          ((ulonglong)(uint)(intVal3 * 0x19) / (ulonglong)(uint)(input2 << 1)) >>\n                         0x25) * -100) * 0x10 + 0x32) >> 0x25) & 0xf;\n      return;\n    }\n    undefinedVal4 = FUN_080066cc();\n    longVal1 = (ulonglong)DAT_0800818c *\n            ((ulonglong)(uint)((int)undefinedVal4 * 0x19) / (ulonglong)(uint)(input2 << 1));\n    intVal2 = FUN_080066cc((int)undefinedVal4,(int)((ulonglong)undefinedVal4 >> 0x20),(int)longVal1);\n    intVal3 = FUN_080066cc();\n    *(uint *)(input1 + 8) =\n         (uint)((ulonglong)longVal1 >> 0x25) << 4 |\n         (uint)((ulonglong)DAT_0800818c *\n                (ulonglong)\n                (((uint)(intVal2 * 0x19) / (uint)(input2 << 1) +\n                 (uint)((ulonglong)DAT_0800818c *\n                        ((ulonglong)(uint)(intVal3 * 0x19) / (ulonglong)(uint)(input2 << 1)) >> 0x25)\n                 * -100) * 0x10 + 0x32) >> 0x25) & 0xf;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08006680",
                "FUN_080066cc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007f54",
            "calling": [
                "FUN_08008190"
            ],
            "imported": false,
            "current_name": "calculate_value_08007f54"
        },
        "FUN_08003b98": {
            "renaming": {
                "FUN_08003b98": "process_command_08003b98",
                "param_1": "command",
                "bVar1": "currentByte",
                "iVar2": "result",
                "uVar3": "tempVar1",
                "uVar4": "tempVar2",
                "uVar5": "tempVar3",
                "local_14": "commandValue1",
                "local_10": "commandValue2",
                "local_a": "commandIndex",
                "local_9": "isNestedCommand"
            },
            "code": "\nuint processCommand_08003b98(char *command)\n\n{\n  byte currentByte;\n  int result;\n  undefined4 tempVar1;\n  uint tempVar2;\n  undefined8 tempVar3;\n  undefined4 commandValue1;\n  undefined4 commandValue2;\n  byte commandIndex;\n  byte isNestedCommand;\n  \n  if (*command != '$') {\n    tempVar2 = FUN_080005b4(command);\n    return tempVar2;\n  }\n  commandIndex = 1;\n  isNestedCommand = '\\0';\n  currentByte = command[1];\n  if (currentByte == 0) {\n    FUN_0800423c();\n    return 0;\n  }\n  if ((0x58 < currentByte) || (currentByte < 0x23)) goto switchD_08003bdc_caseD_25;\n  switch(currentByte) {\n  case 0x23:\n    commandIndex = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    FUN_080044e8();\n    break;\n  case 0x24:\n    commandIndex = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    FUN_08004250();\n    break;\n  case 0x43:\n    commandIndex = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    if (PTR_DAT_08003f2c[1] == '\\a') {\n      FUN_080025e8();\n      FUN_080041a0(5);\n    }\n    else {\n      if (PTR_DAT_08003f2c[1] != '\\0') {\n        return 0xb;\n      }\n      PTR_DAT_08003f2c[1] = 7;\n      FUN_080041a0(4);\n    }\n    break;\n  case 0x47:\n    commandIndex = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    FUN_080046d0();\n    break;\n  case 0x48:\n    if ((PTR_DAT_08003f30[0x28] & 0x10) == 0) {\n      return 7;\n    }\n    if ((PTR_DAT_08003f2c[1] != '\\0') && (PTR_DAT_08003f2c[1] != '\\x06')) {\n      return 0xb;\n    }\n    FUN_080024c4();\n    if (*PTR_DAT_08003f2c == '\\0') {\n      FUN_080039bc();\n    }\n    break;\n  case 0x4e:\n    commandIndex = 2;\n    if (command[2] == '\\0') {\n      for (isNestedCommand = 0; isNestedCommand < 2; isNestedCommand = isNestedCommand + 1) {\n        result = FUN_08004d2c(isNestedCommand,command);\n        if (result == 0) {\n          FUN_08004030(10);\n        }\n        else {\n          FUN_08004900(isNestedCommand,command);\n        }\n      }\n      return 0;\n    }\n    isNestedCommand = '\\x01';\n  default:\nswitchD_08003bdc_caseD_25:\n    result = FUN_08002638(command,&commandIndex,&commandValue2);\n    if (result == 0) {\n      return 1;\n    }\n    currentByte = commandIndex + 1;\n    if (command[commandIndex] != '=') {\n      return 3;\n    }\n    commandIndex = currentByte;\n    if (isNestedCommand == '\\0') {\n      result = FUN_08002638(command,&commandIndex,&commandValue1);\n      if (result == 0) {\n        return 1;\n      }\n      if (command[commandIndex] == '\\0') {\n        tempVar1 = FUN_08009278(commandValue2);\n        tempVar2 = FUN_08004e30(tempVar1,commandValue1);\n        return tempVar2;\n      }\n      return 3;\n    }\n    do {\n      command[(uint)commandIndex - (uint)currentByte] = command[commandIndex];\n      tempVar2 = (uint)commandIndex;\n      commandIndex = commandIndex + 1;\n    } while (command[tempVar2] != '\\0');\n    isNestedCommand = currentByte;\n    isNestedCommand = FUN_080005b4(command);\n    if (isNestedCommand != 0) {\n      return (uint)isNestedCommand;\n    }\n    tempVar3 = FUN_08008590(commandValue2);\n    tempVar3 = FUN_08009798((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n    isNestedCommand = FUN_08008bf0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n    FUN_08004bc0(isNestedCommand,command);\n    break;\n  case 0x58:\n    commandIndex = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    if (PTR_DAT_08003f2c[1] == '\\x06') {\n      FUN_080041a0(3);\n      PTR_DAT_08003f2c[1] = 0;\n    }\n  }\n  return 0;\n}\n\n",
            "called": [
                "FUN_080044e8",
                "FUN_080005b4",
                "FUN_08009278",
                "FUN_08002638",
                "FUN_08009798",
                "FUN_08004bc0",
                "FUN_08008590",
                "FUN_08004d2c",
                "FUN_08004e30",
                "FUN_080024c4",
                "FUN_08004030",
                "FUN_080025e8",
                "FUN_08008bf0",
                "FUN_08004250",
                "FUN_0800423c",
                "FUN_080039bc",
                "FUN_080041a0",
                "FUN_080046d0",
                "FUN_08004900"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003b98",
            "calling": [
                "FUN_08003f34"
            ],
            "imported": false,
            "current_name": "process_command_08003b98"
        },
        "FUN_080024c4": {
            "renaming": {
                "FUN_080024c4": "process_data_080024c4",
                "uVar1": "convertedValue1",
                "uVar2": "convertedValue2",
                "uVar3": "convertedValue3",
                "local_11": "flag1",
                "local_12": "flag2",
                "local_13": "flag3"
            },
            "code": "\nvoid processData_080024c4(void)\n\n{\n  undefined4 convertedValue1;\n  undefined4 convertedValue2;\n  undefined4 convertedValue3;\n  char flag3;\n  char flag2;\n  char flag1;\n  \n  PTR_DAT_080025d8[1] = 5;\n  *(undefined4 *)PTR_DAT_080025dc = 0;\n  FUN_08001d4c();\n  FUN_08003a74();\n  if (*PTR_DAT_080025d8 == '\\0') {\n    FUN_0800b430(PTR_DAT_080025e0,0,0xc);\n    FUN_0800283a();\n    PTR_DAT_080025d8[1] = 0;\n    if ((*(ushort *)(PTR_DAT_080025e4 + 0x2a) & 0x20) == 0) {\n      flag1 = -1;\n    }\n    else {\n      flag1 = '\\x01';\n    }\n    if ((*(ushort *)(PTR_DAT_080025e4 + 0x2a) & 0x80) == 0) {\n      flag2 = -1;\n    }\n    else {\n      flag2 = '\\x01';\n    }\n    if ((*(ushort *)(PTR_DAT_080025e4 + 0x2a) & 0x200) == 0) {\n      flag3 = -1;\n    }\n    else {\n      flag3 = '\\x01';\n    }\n    convertedValue1 = FUN_08008e44((int)flag1);\n    convertedValue1 = FUN_08008eec(convertedValue1,*(undefined4 *)(PTR_DAT_080025e4 + 0x38));\n    convertedValue2 = FUN_08008e44((int)flag2);\n    convertedValue2 = FUN_08008eec(convertedValue2,*(undefined4 *)(PTR_DAT_080025e4 + 0x38));\n    convertedValue3 = FUN_08008e44((int)flag3);\n    convertedValue3 = FUN_08008eec(convertedValue3,*(undefined4 *)(PTR_DAT_080025e4 + 0x38));\n    FUN_08001e98(convertedValue1,convertedValue2,convertedValue3,*(undefined4 *)(PTR_DAT_080025e4 + 0x30),0);\n    FUN_0800585c();\n    FUN_08002fd4();\n    FUN_0800283a();\n    if ((PTR_DAT_080025e4[0x28] & 8) != 0) {\n      *(undefined4 *)PTR_DAT_080025dc = 1;\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08003a74",
                "FUN_0800585c",
                "FUN_08008eec",
                "FUN_0800283a",
                "FUN_08008e44",
                "FUN_0800b430",
                "FUN_08002fd4",
                "FUN_08001d4c",
                "FUN_08001e98"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080024c4",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "process_data_080024c4"
        },
        "FUN_08002f40": {
            "renaming": {
                "FUN_08002f40": "update_data_08002f40",
                "uVar1": "updatedValue"
            },
            "code": "\nvoid updateData_08002f40(void)\n\n{\n  undefined updatedValue;\n  \n  if (*PTR_DAT_08002f6c != *PTR_DAT_08002f70) {\n    updatedValue = FUN_08002870(*PTR_DAT_08002f70);\n    *PTR_DAT_08002f70 = updatedValue;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08002870"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f40",
            "calling": [
                "FUN_080053a0"
            ],
            "imported": false,
            "current_name": "update_data_08002f40"
        },
        "FUN_08009054": {
            "renaming": {
                "FUN_08009054": "floating_point_division_08009054",
                "param_1": "dividend",
                "param_2": "divisor",
                "param_3": "unused",
                "param_4": "divisorExponent",
                "uVar1": "divisorMantissa",
                "uVar2": "dividendExponent",
                "iVar3": "exponentDiff",
                "uVar4": "tempVar1",
                "iVar5": "tempVar2",
                "uVar6": "tempVar3",
                "bVar7": "condition1",
                "bVar8": "condition2",
                "bVar9": "condition3"
            },
            "code": "\nuint floatingPointDivision_08009054(uint dividend,uint divisor,undefined4 unused,uint divisorExponent)\n\n{\n  uint divisorMantissa;\n  uint dividendExponent;\n  int exponentDiff;\n  uint tempVar1;\n  int tempVar2;\n  uint tempVar3;\n  bool condition1;\n  bool condition2;\n  bool condition3;\n  \n  dividendExponent = dividend >> 0x17 & 0xff;\n  condition1 = dividendExponent == 0;\n  if (!condition1) {\n    divisorExponent = divisor >> 0x17 & 0xff;\n    condition1 = divisorExponent == 0;\n  }\n  if (!condition1) {\n    condition1 = dividendExponent == 0xff;\n  }\n  if (!condition1) {\n    condition1 = divisorExponent == 0xff;\n  }\n  if (condition1) {\n    divisorExponent = divisor >> 0x17 & 0xff;\n    tempVar3 = dividend;\n    if (dividendExponent == 0xff) {\n      if (((dividend & 0x7fffff) != 0) || (tempVar3 = divisor, divisorExponent == 0xff)) {\nLAB_0800904a:\n        return tempVar3 | 0x7fc00000;\n      }\n    }\n    else {\n      if (divisorExponent == 0xff) {\n        tempVar3 = divisor;\n        if ((divisor & 0x7fffff) == 0) {\nLAB_08009000:\n          return (dividend ^ divisor) & 0x80000000;\n        }\n        goto LAB_0800904a;\n      }\n      condition1 = (dividend & 0x7fffffff) == 0;\n      if (!condition1) {\n        condition1 = (divisor & 0x7fffffff) == 0;\n      }\n      if (!condition1) {\n        condition1 = dividendExponent == 0;\n        tempVar3 = dividend & 0x80000000;\n        while( true ) {\n          if (condition1) {\n            dividend = dividend << 1;\n            condition1 = (dividend & 0x800000) == 0;\n          }\n          if (!condition1) break;\n          dividendExponent = dividendExponent - 1;\n        }\n        dividend = dividend | tempVar3;\n        condition1 = divisorExponent == 0;\n        tempVar3 = divisor & 0x80000000;\n        while( true ) {\n          if (condition1) {\n            divisor = divisor << 1;\n            condition1 = (divisor & 0x800000) == 0;\n          }\n          if (!condition1) break;\n          divisorExponent = divisorExponent - 1;\n        }\n        divisor = divisor | tempVar3;\n        goto LAB_0800906c;\n      }\n      if ((dividend & 0x7fffffff) == 0) {\n        if ((divisor & 0x7fffffff) != 0) goto LAB_08009000;\n        goto LAB_0800904a;\n      }\n    }\n    dividend = dividend ^ divisor;\n  }\n  else {\nLAB_0800906c:\n    exponentDiff = dividendExponent - divisorExponent;\n    if (divisor << 9 == 0) {\n      dividend = (dividend ^ divisor) & 0x80000000 | dividend & 0x7fffff;\n      condition3 = SCARRY4(exponentDiff,0x7f);\n      tempVar2 = exponentDiff + 0x7f;\n      condition1 = tempVar2 < 0;\n      condition2 = tempVar2 == 0;\n      if (!condition2 && condition1 == condition3) {\n        condition3 = SBORROW4(0xff,tempVar2);\n        condition1 = 0xff - tempVar2 < 0;\n        condition2 = tempVar2 == 0xff;\n      }\n      if (!condition2 && condition1 == condition3) {\n        dividend = dividend | tempVar2 * 0x800000;\n      }\n      if (!condition2 && condition1 == condition3) {\n        return dividend;\n      }\n      dividend = dividend | 0x800000;\n      dividendExponent = 0;\n      condition2 = SBORROW4(tempVar2,1);\n      tempVar1 = exponentDiff + 0x7e;\n      condition1 = tempVar1 == 0;\n      tempVar3 = tempVar1;\n    }\n    else {\n      divisorMantissa = (divisor << 9) >> 4 | 0x10000000;\n      dividendExponent = (dividend << 9) >> 4 | 0x10000000;\n      dividend = (dividend ^ divisor) & 0x80000000;\n      condition1 = divisorMantissa <= dividendExponent;\n      if (!condition1) {\n        dividendExponent = dividendExponent << 1;\n      }\n      tempVar1 = exponentDiff + 0x7d + (uint)condition1;\n      tempVar3 = 0x800000;\n      do {\n        if (divisorMantissa <= dividendExponent) {\n          dividendExponent = dividendExponent - divisorMantissa;\n          dividend = dividend | tempVar3;\n        }\n        condition1 = divisorMantissa >> 1 <= dividendExponent;\n        if (condition1) {\n          dividendExponent = dividendExponent - (divisorMantissa >> 1);\n        }\n        if (condition1) {\n          dividend = dividend | tempVar3 >> 1;\n        }\n        condition1 = divisorMantissa >> 2 <= dividendExponent;\n        if (condition1) {\n          dividendExponent = dividendExponent - (divisorMantissa >> 2);\n        }\n        if (condition1) {\n          dividend = dividend | tempVar3 >> 2;\n        }\n        condition1 = divisorMantissa >> 3 <= dividendExponent;\n        if (condition1) {\n          dividendExponent = dividendExponent - (divisorMantissa >> 3);\n        }\n        if (condition1) {\n          dividend = dividend | tempVar3 >> 3;\n        }\n        dividendExponent = dividendExponent * 0x10;\n        condition1 = dividendExponent == 0;\n        if (!condition1) {\n          tempVar3 = tempVar3 >> 4;\n          condition1 = tempVar3 == 0;\n        }\n      } while (!condition1);\n      condition2 = SBORROW4(tempVar1,0xfd);\n      condition1 = tempVar1 == 0xfd;\n      tempVar3 = tempVar1 - 0xfd;\n      if (tempVar1 < 0xfe) {\n        dividend = dividend + tempVar1 * 0x800000 + (uint)(divisorMantissa <= dividendExponent);\n        if (dividendExponent - divisorMantissa == 0) {\n          dividend = dividend & 0xfffffffe;\n        }\n        return dividend;\n      }\n    }\n    if (condition1 || (int)tempVar3 < 0 != condition2) {\n      condition1 = (int)(tempVar1 + 0x19) < 0;\n      if (tempVar1 == 0xffffffe7 || condition1 != SCARRY4(tempVar1,0x19)) {\n        dividend = dividend & 0x80000000;\n      }\n      if (tempVar1 == 0xffffffe7 || condition1 != SCARRY4(tempVar1,0x19)) {\n        return dividend;\n      }\n      tempVar3 = (dividend << 1) >> (-tempVar1 & 0xff);\n      tempVar1 = dividend << (tempVar1 + 0x20 & 0xff);\n      tempVar3 = ((uint)((dividend & 0x80000000) != 0) << 0x1f | tempVar3 >> 1) + (uint)((byte)tempVar3 & 1);\n      if ((dividendExponent | tempVar1 << 1) == 0) {\n        tempVar3 = tempVar3 & ~(tempVar1 >> 0x1f);\n      }\n      return tempVar3;\n    }\n  }\n  return dividend & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009054",
            "calling": [
                "FUN_08003618",
                "FUN_080028bc",
                "FUN_08003004",
                "FUN_080004fc",
                "FUN_08004250",
                "FUN_08002e08",
                "FUN_08002908",
                "FUN_08001f00",
                "FUN_08004940",
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "floating_point_division_08009054"
        },
        "FUN_080025e8": {
            "renaming": {
                "FUN_080025e8": "process_data_080025e8"
            },
            "code": "\nvoid processData_080025e8(void)\n\n{\n  if ((PTR_DAT_08002634[2] & 0x10) == 0) {\n    PTR_DAT_08002634[2] = PTR_DAT_08002634[2] | 0x10;\n    FUN_08005250();\n    FUN_08000210();\n    if ((byte)PTR_DAT_08002634[1] - 3 < 3) {\n      PTR_DAT_08002634[2] = PTR_DAT_08002634[2] | 0x20;\n      FUN_080057e4();\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08000210",
                "FUN_08005250",
                "FUN_080057e4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025e8",
            "calling": [
                "FUN_08005900",
                "FUN_080005b4",
                "FUN_0800195c",
                "FUN_08003a18",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "process_data_080025e8"
        },
        "FUN_080001c8": {
            "renaming": {
                "FUN_080001c8": "do_nothing_080001c8"
            },
            "code": "\nvoid do_nothing_080001c8(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001c8",
            "calling": [
                "FUN_08000220"
            ],
            "imported": false,
            "current_name": "do_nothing_080001c8"
        },
        "FUN_08005250": {
            "renaming": {
                "FUN_08005250": "call_do_nothing_function_08005250"
            },
            "code": "\nvoid callDoNothingFunction_08005250(void)\n\n{\n  do_nothing_08005214();\n  return;\n}\n\n",
            "called": [
                "FUN_08005214"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005250",
            "calling": [
                "FUN_0800525c",
                "FUN_080025e8",
                "FUN_08005238"
            ],
            "imported": false,
            "current_name": "call_do_nothing_function_08005250"
        },
        "FUN_08007430": {
            "renaming": {
                "FUN_08007430": "infinite_loop_08007430"
            },
            "code": "\nvoid infiniteLoop_08007430(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007430",
            "calling": [
                "FUN_08007436"
            ],
            "imported": false,
            "current_name": "infinite_loop_08007430"
        },
        "FUN_08008640": {
            "renaming": {
                "FUN_08008640": "multiply_floats_08008640",
                "param_1": "float1_low",
                "param_2": "float1_high",
                "param_3": "float2_low",
                "param_4": "float2_high",
                "uVar1": "product_low",
                "lVar2": "product_high",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "iVar5": "exponent_sum",
                "uVar6": "adjusted_exponent",
                "unaff_r5": "float2_exponent",
                "uVar7": "exponent_mask",
                "uVar8": "temp3",
                "bVar9": "condition1",
                "bVar10": "condition2",
                "bVar11": "condition3",
                "uVar12": "input_float"
            },
            "code": "\nulonglong multiply_floats_08008640(undefined4 float1_low,uint float1_high,uint float2_low,uint float2_high)\n\n{\n  ulonglong product_low;\n  longlong product_high;\n  uint temp1;\n  uint temp2;\n  int exponent_sum;\n  uint adjusted_exponent;\n  uint float2_exponent;\n  uint exponent_mask;\n  uint temp3;\n  bool condition1;\n  bool condition2;\n  bool condition3;\n  ulonglong input_float;\n  \n  input_float = CONCAT44(float1_high,float1_low);\n  exponent_mask = 0x7ff;\n  temp2 = float1_high >> 0x14 & 0x7ff;\n  condition1 = temp2 == 0;\n  if (!condition1) {\n    float2_exponent = float2_high >> 0x14 & 0x7ff;\n    condition1 = float2_exponent == 0;\n  }\n  if (!condition1) {\n    condition1 = temp2 == 0x7ff;\n  }\n  if (!condition1) {\n    condition1 = float2_exponent == 0x7ff;\n  }\n  if (condition1) {\n    input_float = FUN_0800881c();\n  }\n  temp1 = (uint)(input_float >> 0x20);\n  exponent_sum = temp2 + float2_exponent;\n  temp2 = temp1 ^ float2_high;\n  temp1 = temp1 & ~(exponent_mask << 0x15);\n  float2_high = float2_high & ~(exponent_mask << 0x15);\n  condition1 = ((uint)input_float | temp1 << 0xc) == 0;\n  if (!condition1) {\n    condition1 = (float2_low | float2_high << 0xc) == 0;\n  }\n  temp1 = temp1 | 0x100000;\n  float2_high = float2_high | 0x100000;\n  if (condition1) {\n    float2_low = (uint)input_float | float2_low;\n    float2_high = (temp2 & 0x80000000 | temp1) ^ float2_high;\n    temp2 = exponent_mask >> 1;\n    condition3 = SBORROW4(exponent_sum,temp2);\n    adjusted_exponent = exponent_sum - temp2;\n    condition1 = adjusted_exponent == 0;\n    temp1 = adjusted_exponent;\n    if (!condition1 && (int)temp2 <= exponent_sum) {\n      condition3 = SBORROW4(exponent_mask,adjusted_exponent);\n      temp1 = exponent_mask - adjusted_exponent;\n      condition1 = exponent_mask == adjusted_exponent;\n    }\n    if (!condition1 && (int)temp1 < 0 == condition3) {\n      float2_high = float2_high | adjusted_exponent * 0x100000;\n    }\n    if (!condition1 && (int)temp1 < 0 == condition3) {\n      return CONCAT44(float2_high,float2_low);\n    }\n    float2_high = float2_high | 0x100000;\n    exponent_mask = 0;\n    condition3 = SBORROW4(adjusted_exponent,1);\n    adjusted_exponent = adjusted_exponent - 1;\n    condition1 = adjusted_exponent == 0;\n    temp2 = adjusted_exponent;\n  }\n  else {\n    product_low = (input_float & 0xffffffff) * (ulonglong)float2_low;\n    input_float = (input_float & 0xffffffff) * (ulonglong)float2_high +\n             (ulonglong)temp1 * (ulonglong)float2_low + (product_low >> 0x20);\n    temp3 = (uint)input_float;\n    product_high = (ulonglong)temp1 * (ulonglong)float2_high + (input_float >> 0x20);\n    exponent_mask = (uint)product_high;\n    temp1 = (uint)((ulonglong)product_high >> 0x20);\n    if ((int)product_low != 0) {\n      temp3 = temp3 | 1;\n    }\n    adjusted_exponent = (exponent_sum + -0x3ff) - (uint)(temp1 < 0x200);\n    if (temp1 < 0x200) {\n      condition1 = (temp3 & 0x80000000) != 0;\n      temp3 = temp3 << 1;\n      product_high = CONCAT44(temp1 * 2 + (uint)(CARRY4(exponent_mask,exponent_mask) || CARRY4(exponent_mask * 2,(uint)condition1)),\n                       exponent_mask * 2 + (uint)condition1);\n    }\n    float2_high = temp2 & 0x80000000 | (int)((ulonglong)product_high >> 0x20) << 0xb | (uint)product_high >> 0x15;\n    float2_low = (uint)product_high << 0xb | temp3 >> 0x15;\n    exponent_mask = temp3 * 0x800;\n    condition2 = 0xfc < adjusted_exponent;\n    condition3 = SBORROW4(adjusted_exponent,0xfd);\n    temp1 = adjusted_exponent - 0xfd;\n    condition1 = temp1 == 0;\n    temp2 = temp1;\n    if (condition2 && !condition1) {\n      condition2 = 0x6ff < temp1;\n      condition3 = SBORROW4(temp1,0x700);\n      temp2 = adjusted_exponent - 0x7fd;\n      condition1 = temp1 == 0x700;\n    }\n    if (!condition2 || condition1) {\n      condition1 = 0x7fffffff < exponent_mask;\n      if (exponent_mask == 0x80000000) {\n        condition1 = (temp3 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(float2_high + adjusted_exponent * 0x100000 + (uint)CARRY4(float2_low,(uint)condition1),float2_low + condition1\n                     );\n    }\n  }\n  if (!condition1 && (int)temp2 < 0 == condition3) {\n    return (ulonglong)(float2_high & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  condition2 = SCARRY4(adjusted_exponent,0x36);\n  condition1 = (int)(adjusted_exponent + 0x36) < 0;\n  condition3 = adjusted_exponent == 0xffffffca;\n  if (condition3 || condition1 != condition2) {\n    float2_low = 0;\n  }\n  if (condition3 || condition1 != condition2) {\n    float2_high = float2_high & 0x80000000;\n  }\n  if (condition3 || condition1 != condition2) {\n    return CONCAT44(float2_high,float2_low);\n  }\n  temp2 = -adjusted_exponent;\n  temp1 = temp2 - 0x20;\n  if (0x1f < (int)temp2) {\n    adjusted_exponent = float2_low >> (temp1 & 0xff) | float2_high << (0x20 - temp1 & 0xff);\n    temp2 = (float2_high >> (temp1 & 0xff) & ~((float2_high & 0x80000000) >> (temp1 & 0xff))) -\n            ((int)adjusted_exponent >> 0x1f);\n    if ((exponent_mask | float2_low << (0x20 - temp1 & 0xff) | adjusted_exponent << 1) == 0) {\n      temp2 = temp2 & ~(adjusted_exponent >> 0x1f);\n    }\n    return CONCAT44(float2_high,temp2) & 0x80000000ffffffff;\n  }\n  exponent_sum = temp2 - 0x14;\n  if (exponent_sum == 0 || exponent_sum < 0 != SCARRY4(temp1,0xc)) {\n    temp3 = float2_low << (adjusted_exponent + 0x20 & 0xff);\n    temp1 = float2_low >> (temp2 & 0xff) | float2_high << (adjusted_exponent + 0x20 & 0xff);\n    adjusted_exponent = temp1 + -((int)temp3 >> 0x1f);\n    if ((exponent_mask | temp3 << 1) == 0) {\n      adjusted_exponent = adjusted_exponent & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44((float2_high & 0x80000000) +\n                    ((float2_high & 0x7fffffff) >> (temp2 & 0xff)) +\n                    (uint)CARRY4(temp1,-((int)temp3 >> 0x1f)),adjusted_exponent);\n  }\n  temp2 = 0xc - exponent_sum;\n  adjusted_exponent = float2_low << (temp2 & 0xff);\n  temp2 = float2_low >> (0x20 - temp2 & 0xff) | float2_high << (temp2 & 0xff);\n  temp1 = temp2 + -((int)adjusted_exponent >> 0x1f);\n  if ((exponent_mask | adjusted_exponent << 1) == 0) {\n    temp1 = temp1 & ~(adjusted_exponent >> 0x1f);\n  }\n  return CONCAT44((float2_high & 0x80000000) + (uint)CARRY4(temp2,-((int)adjusted_exponent >> 0x1f)),temp1);\n}\n\n",
            "called": [
                "FUN_0800881c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008640",
            "calling": [
                "FUN_080044e8",
                "FUN_0800a5a0",
                "FUN_08002638",
                "FUN_0800056c",
                "FUN_0800af78",
                "FUN_08001f00",
                "FUN_08003004",
                "FUN_0800adf0",
                "FUN_08002c18",
                "FUN_0800a1bc",
                "FUN_08009d78",
                "FUN_08009b24",
                "FUN_0800a348",
                "FUN_08004940",
                "FUN_08001994",
                "FUN_080046d0",
                "FUN_0800b2e8"
            ],
            "imported": false,
            "current_name": "multiply_floats_08008640"
        },
        "FUN_08007436": {
            "renaming": {
                "FUN_08007436": "initialize_hardware_08007436",
                "iVar1": "result",
                "local_4c": "systemConfig1",
                "local_48": "systemConfig2",
                "local_34": "systemConfig3",
                "local_30": "systemConfig4",
                "local_2c": "systemConfig5",
                "local_28": "systemConfig6",
                "local_24": "systemConfig7",
                "local_20": "systemConfig8",
                "local_1c": "memoryConfig1",
                "local_18": "memoryConfig2",
                "local_14": "memoryConfig3",
                "local_10": "memoryConfig4",
                "local_c": "memoryConfig5"
            },
            "code": "\nvoid initializeHardware_08007436(void)\n\n{\n  int result;\n  undefined4 systemConfig1;\n  undefined4 systemConfig2;\n  undefined4 systemConfig3;\n  undefined4 systemConfig4;\n  undefined4 systemConfig5;\n  undefined4 systemConfig6;\n  undefined4 systemConfig7;\n  undefined4 systemConfig8;\n  undefined4 memoryConfig1;\n  undefined4 memoryConfig2;\n  undefined4 memoryConfig3;\n  undefined4 memoryConfig4;\n  undefined4 memoryConfig5;\n  \n  *(uint *)(DAT_080074c0 + 0x40) = *(uint *)(DAT_080074c0 + 0x40) | 0x10000000;\n  *DAT_080074c4 = *DAT_080074c4 | 0xc000;\n  systemConfig1 = 1;\n  systemConfig2 = 1;\n  systemConfig3 = 2;\n  systemConfig4 = 0x400000;\n  systemConfig5 = 8;\n  systemConfig6 = 0x150;\n  systemConfig7 = 2;\n  systemConfig8 = 7;\n  result = FUN_08005cec(&systemConfig1);\n  if (result != 0) {\n    FUN_08007430();\n  }\n  memoryConfig1 = 0xf;\n  memoryConfig2 = 2;\n  memoryConfig3 = 0;\n  memoryConfig4 = 0x1400;\n  memoryConfig5 = 0x1000;\n  result = FUN_0800618c(&memoryConfig1,5);\n  if (result != 0) {\n    FUN_08007430();\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08005cec",
                "FUN_0800618c",
                "FUN_08007430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007436",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "initialize_hardware_08007436"
        },
        "FUN_08005814": {
            "renaming": {
                "FUN_08005814": "initialize_settings_08005814"
            },
            "code": "\nvoid initializeSettings_08005814(void)\n\n{\n  FUN_0800b430(PTR_DAT_08005834,0,0x24);\n  FUN_08005324(800);\n  *(undefined4 *)PTR_DAT_08005838 = 0;\n  return;\n}\n\n",
            "called": [
                "FUN_08005324",
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005814",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initialize_settings_08005814"
        },
        "FUN_08005bdc": {
            "renaming": {
                "FUN_08005bdc": "update_memory_08005bdc",
                "param_1": "byteInput",
                "param_2": "uintInput"
            },
            "code": "\nvoid updateMemory_08005bdc(byte byteInput,uint uintInput)\n\n{\n  if ((char)byteInput < '\\0') {\n    *(char *)((byteInput & 0xf) + DAT_08005c28 + 0x14) = (char)((uintInput & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)byteInput + DAT_08005c2c + 0x300) = (char)((uintInput & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005bdc",
            "calling": [
                "FUN_08005c30"
            ],
            "imported": false,
            "current_name": "update_memory_08005bdc"
        },
        "FUN_080002f0": {
            "renaming": {
                "FUN_080002f0": "initialize_settings_080002f0"
            },
            "code": "\nvoid initializeSettings_080002f0(void)\n\n{\n  FUN_0800b430(PTR_DAT_08000308,0xff,4);\n  *(undefined4 *)PTR_DAT_0800030c = 1;\n  return;\n}\n\n",
            "called": [
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080002f0",
            "calling": [
                "FUN_08000310",
                "FUN_080003ec",
                "FUN_08000374",
                "FUN_08000340"
            ],
            "imported": false,
            "current_name": "initialize_settings_080002f0"
        },
        "FUN_080073c0": {
            "renaming": {
                "FUN_080073c0": "do_nothing_080073c0"
            },
            "code": "\nvoid do_nothing_080073c0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080073c0",
            "calling": [
                "FUN_0800738e"
            ],
            "imported": false,
            "current_name": "do_nothing_080073c0"
        },
        "FUN_0800778c": {
            "renaming": {
                "FUN_0800778c": "process_data_0800778c",
                "local_24": "bitShiftedValue",
                "local_20": "value1",
                "local_1c": "value2",
                "local_18": "value3",
                "local_14": "value4",
                "local_10": "dataPointer",
                "local_c": "index"
            },
            "code": "\nvoid processData_0800778c(void)\n\n{\n  int bitShiftedValue;\n  uint value1;\n  uint value2;\n  uint value3;\n  uint value4;\n  uint *dataPointer;\n  uint index;\n  \n  for (index = 0; index < 0x11; index = index + 1) {\n    dataPointer = (uint *)(PTR_DAT_0800784c + index * 0x18);\n    *(uint *)(DAT_08007850 + 0x30) = *(uint *)(DAT_08007850 + 0x30) | 1 << (*dataPointer >> 4 & 0xff);\n    bitShiftedValue = 1 << (*dataPointer & 0xf);\n    value1 = dataPointer[1];\n    value2 = dataPointer[2];\n    value3 = dataPointer[3];\n    value4 = dataPointer[4];\n    FUN_08006e88(((*dataPointer >> 4) + 0x100080) * 0x400,&bitShiftedValue);\n    if (-1 < (int)dataPointer[5]) {\n      FUN_0800733e(((*dataPointer >> 4) + 0x100080) * 0x400,1 << (*dataPointer & 0xf) & 0xffff,\n                   dataPointer[5] & 0xff);\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08006e88",
                "FUN_0800733e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800778c",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "process_data_0800778c"
        },
        "FUN_080001d4": {
            "renaming": {
                "FUN_080001d4": "do_nothing_080001d4"
            },
            "code": "\nvoid do_nothing_080001d4(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001d4",
            "calling": [
                "FUN_08000210"
            ],
            "imported": false,
            "current_name": "do_nothing_080001d4"
        },
        "FUN_08001ddc": {
            "renaming": {
                "FUN_08001ddc": "main_process_08001ddc",
                "do_nothing_08008244": "initializeSystem",
                "do_nothing_080082ba": "waitForInterrupt"
            },
            "code": "\nvoid mainProcess_08001ddc(void)\n\n{\n  do_nothing_08008244();\n  FUN_080051b4();\n  FUN_0800583c();\n  FUN_0800b430(PTR_DAT_08001e90,0,0x14);\n  *PTR_DAT_08001e90 = 1;\n  PTR_DAT_08001e90[1] = 1;\n  do {\n    if (*PTR_DAT_08001e90 != '\\0') {\n      do_nothing_080082ba();\n      FUN_08002f24();\n      FUN_080004ac();\n      FUN_080039a0();\n      FUN_08005238();\n      FUN_080001f8();\n      FUN_0800192c();\n      FUN_08005814();\n      FUN_0800283a();\n      *PTR_DAT_08001e90 = 0;\n      PTR_DAT_08001e90[2] = 0;\n      if ((PTR_DAT_08001e94[0x28] & 2) != 0) {\n        PTR_DAT_08001e90[0x10] = 1;\n      }\n      if ((PTR_DAT_08001e90[1] == '\\x01') && ((PTR_DAT_08001e94[0x28] & 0x10) != 0)) {\n        PTR_DAT_08001e90[1] = 6;\n      }\n      if (PTR_DAT_08001e90[1] == '\\x06') {\n        FUN_080041a0(2);\n      }\n      else {\n        PTR_DAT_08001e90[1] = 0;\n        FUN_080039bc();\n      }\n    }\n    FUN_08003a74();\n    FUN_08003f34();\n  } while( true );\n}\n\n",
            "called": [
                "FUN_080051b4",
                "FUN_08008244",
                "FUN_08005238",
                "FUN_08002f24",
                "FUN_080082ba",
                "FUN_08003f34",
                "FUN_08005814",
                "FUN_0800192c",
                "FUN_0800583c",
                "FUN_08003a74",
                "FUN_080039a0",
                "FUN_0800283a",
                "FUN_0800b430",
                "FUN_080039bc",
                "FUN_080001f8",
                "FUN_080041a0",
                "FUN_080004ac"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001ddc",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "main_process_08001ddc"
        },
        "FUN_080069b4": {
            "renaming": {
                "FUN_080069b4": "set_bit_in_array_080069b4",
                "param_1": "bitIndex"
            },
            "code": "\nvoid setBitInArray_080069b4(byte bitIndex)\n\n{\n  *(int *)(DAT_080069e0 + ((uint)(int)(char)bitIndex >> 5) * 4) = 1 << (bitIndex & 0x1f);\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080069b4",
            "calling": [
                "FUN_08006d2e"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_080069b4"
        },
        "FUN_08009228": {
            "renaming": {
                "FUN_08009228": "check_condition_08009228",
                "in_CY": "conditionFlag"
            },
            "code": "\nbool checkCondition_08009228(void)\n\n{\n  char conditionFlag;\n  \n  FUN_08009204();\n  return conditionFlag == '\\0';\n}\n\n",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009228",
            "calling": [
                "FUN_08002afc",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_08003826",
                "FUN_080029d8",
                "FUN_08004e30"
            ],
            "imported": false,
            "current_name": "check_condition_08009228"
        },
        "FUN_08007c7c": {
            "renaming": {
                "FUN_08007c7c": "check_and_execute_functions_08007c7c"
            },
            "code": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid checkAndExecuteFunctions_08007c7c(void)\n\n{\n  if (((_DAT_40000010 & 2) != 0) && ((_DAT_4000000c & 2) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffd;\n    FUN_08005778();\n  }\n  if (((_DAT_40000010 & 4) != 0) && ((_DAT_4000000c & 4) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffb;\n    FUN_08005760();\n  }\n  if (((_DAT_40000010 & 1) != 0) && ((_DAT_4000000c & 1) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffe;\n    FUN_080053a0();\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08005760",
                "FUN_080053a0",
                "FUN_08005778"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007c7c",
            "calling": [],
            "imported": false,
            "current_name": "check_and_execute_functions_08007c7c"
        },
        "FUN_08007b70": {
            "renaming": {
                "FUN_08007b70": "update_control_registers_08007b70",
                "local_c": "controlBits"
            },
            "code": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid updateControlRegisters_08007b70(void)\n\n{\n  uint controlBits;\n  \n  controlBits = 1;\n  if (_DAT_40000034 != 0) {\n    controlBits = 3;\n  }\n  if (_DAT_40000038 != 0) {\n    controlBits = controlBits | 4;\n  }\n  _DAT_4000000c = _DAT_4000000c | controlBits;\n  _DAT_40000000 = _DAT_40000000 | 1;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007b70",
            "calling": [
                "FUN_08005790"
            ],
            "imported": false,
            "current_name": "update_control_registers_08007b70"
        },
        "FUN_08004d2c": {
            "renaming": {
                "FUN_08004d2c": "process_data_08004d2c",
                "param_1": "inputByte",
                "param_2": "outputData",
                "iVar1": "functionResult"
            },
            "code": "\nbool processData_08004d2c(byte inputByte,undefined *outputData)\n\n{\n  int functionResult;\n  \n  functionResult = FUN_080003ec(outputData,(ushort)inputByte * 0x101 + 0x300,0x100);\n  if (functionResult == 0) {\n    *outputData = 0;\n    FUN_08004bc0(inputByte,outputData);\n  }\n  return functionResult != 0;\n}\n\n",
            "called": [
                "FUN_08004bc0",
                "FUN_080003ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d2c",
            "calling": [
                "FUN_080039bc",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "process_data_08004d2c"
        },
        "FUN_08003004": {
            "renaming": {
                "FUN_08003004": "process_data_08003004",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "flag",
                "puVar1": "tempPtr",
                "uVar2": "tempVar2",
                "uVar3": "result1",
                "iVar4": "value1",
                "iVar5": "value2",
                "iVar6": "value3",
                "uVar7": "result2",
                "uVar8": "result3",
                "uVar9": "intermediateResult1",
                "uVar10": "intermediateResult2",
                "uVar11": "maxVal1",
                "uVar14": "maxVal2",
                "uVar15": "tempResult1",
                "uVar16": "tempResult2",
                "uVar17": "tempResult3",
                "local_20": "localResult",
                "local_1c": "localResult2",
                "puVar12": "dataPtr",
                "iVar13": "tempInt"
            },
            "code": "\nvoid processData_08003004(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 char flag)\n\n{\n  undefined *tempPtr;\n  undefined tempVar2;\n  undefined4 result1;\n  int value1;\n  int value2;\n  int value3;\n  undefined4 result2;\n  undefined4 result3;\n  undefined4 intermediateResult1;\n  undefined4 intermediateResult2;\n  uint maxVal1;\n  ushort *dataPtr;\n  int tempInt;\n  uint maxVal2;\n  undefined8 tempResult1;\n  undefined8 tempResult2;\n  undefined8 tempResult3;\n  undefined4 localResult;\n  undefined4 localResult2;\n  \n  dataPtr = (ushort *)(PTR_DAT_08003234 + (uint)(byte)*PTR_DAT_08003230 * 0x40);\n  result1 = FUN_08008eec(*(undefined4 *)PTR_DAT_08003238,input1);\n  tempResult1 = FUN_08008590(result1);\n  value1 = FUN_080095b8((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n  result1 = FUN_08008eec(*(undefined4 *)(PTR_DAT_08003238 + 4),input2);\n  tempResult1 = FUN_08008590(result1);\n  value2 = FUN_080095b8((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n  result1 = FUN_08008eec(*(undefined4 *)(PTR_DAT_08003238 + 8),input3);\n  tempResult1 = FUN_08008590(result1);\n  value3 = FUN_080095b8((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n  *dataPtr = 0;\n  if (value1 < *(int *)PTR_DAT_0800323c) {\n    *dataPtr = *dataPtr | 0x20;\n  }\n  if (value2 < *(int *)(PTR_DAT_0800323c + 4)) {\n    *dataPtr = *dataPtr | 0x880;\n  }\n  if (value3 < *(int *)(PTR_DAT_0800323c + 8)) {\n    *dataPtr = *dataPtr | 0x200;\n  }\n  tempInt = value1 - *(int *)PTR_DAT_0800323c;\n  if (tempInt < 0) {\n    tempInt = -tempInt;\n  }\n  *(int *)(dataPtr + 2) = tempInt;\n  tempInt = value2 - *(int *)(PTR_DAT_0800323c + 4);\n  if (tempInt < 0) {\n    tempInt = -tempInt;\n  }\n  *(int *)(dataPtr + 4) = tempInt;\n  tempInt = value3 - *(int *)(PTR_DAT_0800323c + 8);\n  if (tempInt < 0) {\n    tempInt = -tempInt;\n  }\n  *(int *)(dataPtr + 6) = tempInt;\n  maxVal1 = *(uint *)(dataPtr + 6);\n  if (*(uint *)(dataPtr + 6) < *(uint *)(dataPtr + 4)) {\n    maxVal1 = *(uint *)(dataPtr + 4);\n  }\n  maxVal2 = *(uint *)(dataPtr + 2);\n  if (*(uint *)(dataPtr + 2) < maxVal1) {\n    maxVal2 = maxVal1;\n  }\n  *(uint *)(dataPtr + 8) = maxVal2;\n  if (*(int *)(dataPtr + 8) != 0) {\n    result1 = FUN_08008e44(value1 - *(int *)PTR_DAT_0800323c);\n    result1 = FUN_08009054(result1,*(undefined4 *)PTR_DAT_08003238);\n    result2 = FUN_08008e44(value2 - *(int *)(PTR_DAT_0800323c + 4));\n    result2 = FUN_08009054(result2,*(undefined4 *)(PTR_DAT_08003238 + 4));\n    result3 = FUN_08008e44(value3 - *(int *)(PTR_DAT_0800323c + 8));\n    result3 = FUN_08009054(result3,*(undefined4 *)(PTR_DAT_08003238 + 8));\n    intermediateResult1 = FUN_08008eec(result1,result1);\n    intermediateResult2 = FUN_08008eec(result2,result2);\n    intermediateResult1 = FUN_08008cdc(intermediateResult1,intermediateResult2);\n    intermediateResult2 = FUN_08008eec(result3,result3);\n    intermediateResult1 = FUN_08008cdc(intermediateResult1,intermediateResult2);\n    tempResult1 = FUN_08008590(intermediateResult1);\n    tempResult1 = FUN_080098d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n    intermediateResult1 = FUN_08008c30((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n    *(undefined4 *)(dataPtr + 0x10) = intermediateResult1;\n    intermediateResult1 = FUN_08009054(0x3f800000,*(undefined4 *)(dataPtr + 0x10));\n    if (flag == '\\0') {\n      localResult2 = FUN_08008eec(input4,intermediateResult1);\n    }\n    else {\n      localResult2 = FUN_08009054(0x3f800000,input4);\n    }\n    intermediateResult2 = FUN_08008eec(*(undefined4 *)(dataPtr + 0x10),localResult2);\n    *(undefined4 *)(dataPtr + 10) = intermediateResult2;\n    intermediateResult2 = FUN_08008e44(*(undefined4 *)(dataPtr + 8));\n    intermediateResult2 = FUN_08008eec(intermediateResult2,localResult2);\n    tempResult1 = FUN_08008590(intermediateResult2);\n    tempResult1 = FUN_08009318((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n    intermediateResult2 = FUN_08008bf0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n    *(undefined4 *)(dataPtr + 0x1e) = intermediateResult2;\n    intermediateResult2 = FUN_08008e44(*(undefined4 *)(dataPtr + 8));\n    intermediateResult2 = FUN_08008eec(intermediateResult2,intermediateResult1);\n    intermediateResult2 = FUN_08008eec(intermediateResult2,*(undefined4 *)(PTR_DAT_08003560 + 0x20));\n    intermediateResult2 = FUN_08009054(intermediateResult2,DAT_08003564);\n    tempResult1 = FUN_08008590(intermediateResult2);\n    tempResult1 = FUN_08009318((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n    intermediateResult2 = FUN_08008ba0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n    *(undefined4 *)(dataPtr + 0x18) = intermediateResult2;\n    result1 = FUN_08008eec(result1,intermediateResult1);\n    result2 = FUN_08008eec(result2,intermediateResult1);\n    result3 = FUN_08008eec(result3,intermediateResult1);\n    localResult = 0;\n    if ((*PTR_DAT_08003568 != *PTR_DAT_0800356c) &&\n       (tempInt = FUN_08009264(*(undefined4 *)(PTR_DAT_08003570 + 0x18),0), tempInt != 0)) {\n      intermediateResult1 = FUN_08008eec(*(uint *)(PTR_DAT_08003570 + 0xc) ^ 0x80000000,result1);\n      intermediateResult2 = FUN_08008eec(*(undefined4 *)(PTR_DAT_08003570 + 0x10),result2);\n      intermediateResult1 = FUN_08008cd8(intermediateResult1,intermediateResult2);\n      intermediateResult2 = FUN_08008eec(*(undefined4 *)(PTR_DAT_08003570 + 0x14),result3);\n      intermediateResult1 = FUN_08008cd8(intermediateResult1,intermediateResult2);\n      tempResult1 = FUN_08008590(intermediateResult1);\n      tempInt = FUN_08008b24((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),DAT_08003550,DAT_08003554);\n      if (tempInt != 0) {\n        tempInt = FUN_08009228(*(undefined4 *)(PTR_DAT_08003570 + 0x18),*(undefined4 *)(dataPtr + 10)\n                             );\n        if (tempInt == 0) {\n          localResult = *(undefined4 *)(dataPtr + 10);\n        }\n        else {\n          localResult = *(undefined4 *)(PTR_DAT_08003570 + 0x18);\n        }\n        tempResult1 = FUN_08008590(intermediateResult1);\n        tempInt = FUN_08008b60((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),DAT_08003558,DAT_0800355c\n                             );\n        if (tempInt != 0) {\n          tempResult1 = FUN_08008590(intermediateResult1);\n          tempResult1 = FUN_080082d0(0,DAT_08003574,(int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n          tempResult1 = FUN_08008640((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0,DAT_08003578);\n          tempResult1 = FUN_080098d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n          intermediateResult1 = FUN_08008c30((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n          tempResult1 = FUN_08008590(localResult);\n          intermediateResult2 = FUN_08008eec(*(undefined4 *)(PTR_DAT_08003560 + 0x20),\n                                *(undefined4 *)(PTR_DAT_08003560 + 0x24));\n          intermediateResult2 = FUN_08008eec(intermediateResult2,intermediateResult1);\n          tempResult2 = FUN_08008590(intermediateResult2);\n          tempResult3 = FUN_08008590(intermediateResult1);\n          tempResult3 = FUN_080082d0(0,DAT_08003574,(int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20));\n          tempResult2 = FUN_08008894((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),(int)tempResult3,\n                                (int)((ulonglong)tempResult3 >> 0x20));\n          tempResult2 = FUN_080098d0((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20));\n          tempInt = FUN_08008b24((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),(int)tempResult2,\n                                (int)((ulonglong)tempResult2 >> 0x20));\n          if (tempInt == 0) {\n            intermediateResult2 = FUN_08008eec(*(undefined4 *)(PTR_DAT_08003560 + 0x20),\n                                  *(undefined4 *)(PTR_DAT_08003560 + 0x24));\n            intermediateResult2 = FUN_08008eec(intermediateResult2,intermediateResult1);\n            tempResult1 = FUN_08008590(intermediateResult2);\n            tempResult2 = FUN_08008590(intermediateResult1);\n            tempResult2 = FUN_080082d0(0,DAT_08003574,(int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20));\n            tempResult1 = FUN_08008894((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),(int)tempResult2,\n                                  (int)((ulonglong)tempResult2 >> 0x20));\n            tempResult1 = FUN_080098d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n            localResult = FUN_08008c30((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n          }\n        }\n      }\n    }\n    *(undefined4 *)(dataPtr + 0xe) = localResult;\n    intermediateResult2 = FUN_08002978(*(uint *)(PTR_DAT_08003560 + 0x20) ^ 0x80000000,0,\n                          *(undefined4 *)(dataPtr + 0x10));\n    tempInt = FUN_08009228(localResult,intermediateResult2);\n    intermediateResult1 = intermediateResult2;\n    if (tempInt != 0) {\n      intermediateResult1 = localResult;\n    }\n    *(undefined4 *)(dataPtr + 0xc) = intermediateResult1;\n    tempInt = FUN_08009250(intermediateResult2,*(undefined4 *)(dataPtr + 10));\n    if (tempInt == 0) {\n      *(undefined *)((int)dataPtr + 0x25) = 0;\n    }\n    else {\n      *(undefined *)((int)dataPtr + 0x25) = 1;\n    }\n    *(undefined *)(dataPtr + 0x12) = 1;\n    tempPtr = PTR_DAT_080035e0;\n    *(undefined4 *)(PTR_DAT_080035e0 + 0xc) = result1;\n    *(undefined4 *)(tempPtr + 0x10) = result2;\n    *(undefined4 *)(tempPtr + 0x14) = result3;\n    *(undefined4 *)(PTR_DAT_080035e0 + 0x18) = *(undefined4 *)(dataPtr + 10);\n    *PTR_DAT_080035e8 = *PTR_DAT_080035e4;\n    tempVar2 = FUN_08002870(*PTR_DAT_080035e8);\n    *PTR_DAT_080035e4 = tempVar2;\n    tempPtr = PTR_DAT_080035e0;\n    *(int *)PTR_DAT_080035e0 = value1;\n    *(int *)(tempPtr + 4) = value2;\n    *(int *)(tempPtr + 8) = value3;\n    FUN_08002edc();\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08008640",
                "FUN_08008c30",
                "FUN_080082d0",
                "FUN_08008b24",
                "FUN_08009250",
                "FUN_08009264",
                "FUN_08002edc",
                "FUN_08008e44",
                "FUN_08008590",
                "FUN_08009318",
                "FUN_08002978",
                "FUN_08008894",
                "FUN_08008b60",
                "FUN_08008bf0",
                "FUN_08008cd8",
                "FUN_080098d0",
                "FUN_08008eec",
                "FUN_08008cdc",
                "FUN_08002870",
                "FUN_08008ba0",
                "FUN_08009228",
                "FUN_08009054",
                "FUN_080095b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003004",
            "calling": [
                "FUN_08001e98"
            ],
            "imported": false,
            "current_name": "process_data_08003004"
        },
        "FUN_080066cc": {
            "renaming": {
                "FUN_080066cc": "calculate_shifted_value_080066cc",
                "uVar1": "result_from_function",
                "uVar2": "leading_zeroes_count"
            },
            "code": "\nuint calculate_shifted_value_080066cc(void)\n\n{\n  uint result_from_function;\n  uint leading_zeroes_count;\n  \n  result_from_function = FUN_08006628();\n  leading_zeroes_count = count_leading_zeroes(0x70000);\n  return result_from_function >> PTR_DAT_08006714[(*(uint *)(DAT_08006710 + 8) & 0xe000) >> (leading_zeroes_count & 0xff)];\n}\n\n",
            "called": [
                "FUN_08006628"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080066cc",
            "calling": [
                "FUN_08007f54"
            ],
            "imported": false,
            "current_name": "calculate_shifted_value_080066cc"
        },
        "FUN_080018fc": {
            "renaming": {
                "FUN_080018fc": "update_register_value_080018fc",
                "param_1": "inputValue"
            },
            "code": "\nvoid updateRegisterValue_080018fc(uint inputValue)\n\n{\n  *(uint *)(DAT_08001928 + 0x14) = inputValue | *(uint *)(DAT_08001928 + 0x14) & 0xfffff55f;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080018fc",
            "calling": [
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "update_register_value_080018fc"
        },
        "FUN_080039bc": {
            "renaming": {
                "FUN_080039bc": "process_data_080039bc",
                "iVar1": "conditionResult",
                "uVar2": "result",
                "local_9": "iteration"
            },
            "code": "\nvoid processData_080039bc(void)\n\n{\n  int conditionResult;\n  undefined4 result;\n  byte iteration;\n  \n  for (iteration = 0; iteration < 2; iteration = iteration + 1) {\n    conditionResult = FUN_08004d2c(iteration,PTR_DAT_08003a14);\n    if (conditionResult == 0) {\n      FUN_08004030(10);\n    }\n    else if (*PTR_DAT_08003a14 != '\\0') {\n      FUN_0800369c(PTR_DAT_08003a14);\n      result = FUN_080005b4(PTR_DAT_08003a14);\n      FUN_08004030(result);\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08004030",
                "FUN_080005b4",
                "FUN_0800369c",
                "FUN_08004d2c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080039bc",
            "calling": [
                "FUN_08001ddc",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "process_data_080039bc"
        },
        "FUN_0800618c": {
            "renaming": {
                "FUN_0800618c": "configure_device_0800618c",
                "param_1": "configArray",
                "param_2": "deviceSetting",
                "lVar1": "longResult",
                "iVar2": "currentTimestamp",
                "uVar3": "updatedTimestamp",
                "uVar4": "timeoutTimestamp",
                "uVar5": "deviceInfo"
            },
            "code": "\nundefined4 configureDevice_0800618c(uint *configArray,uint deviceSetting)\n\n{\n  longlong longResult;\n  int currentTimestamp;\n  uint updatedTimestamp;\n  uint timeoutTimestamp;\n  ulonglong deviceInfo;\n  \n  if ((*DAT_08006400 & 0xf) < deviceSetting) {\n    *(char *)DAT_08006400 = (char)deviceSetting;\n    if (deviceSetting != (*DAT_08006400 & 0xf)) {\n      return 1;\n    }\n    if ((*configArray & 1) != 0) {\n      if (configArray[1] == 1) {\n        if ((*DAT_08006404 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if ((configArray[1] != 2) && ((*DAT_08006404 & 2) == 0)) {\n        return 1;\n      }\n      DAT_08006404[2] = configArray[1] | DAT_08006404[2] & 0xfffffffc;\n      currentTimestamp = FUN_08005a84();\n      timeoutTimestamp = currentTimestamp + 5000;\n      if (configArray[1] == 1) {\n        while ((DAT_08006404[2] & 0xc) != 4) {\n          updatedTimestamp = FUN_08005a84();\n          if (timeoutTimestamp <= updatedTimestamp) {\n            return 3;\n          }\n        }\n      }\n      else if (configArray[1] == 2) {\n        while ((DAT_08006404[2] & 0xc) != 8) {\n          updatedTimestamp = FUN_08005a84();\n          if (timeoutTimestamp <= updatedTimestamp) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((DAT_08006404[2] & 0xc) != 0) {\n          updatedTimestamp = FUN_08005a84();\n          if (timeoutTimestamp <= updatedTimestamp) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  else {\n    if ((*configArray & 1) != 0) {\n      if (configArray[1] == 1) {\n        if ((*DAT_08006404 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if (configArray[1] == 2) {\n        if ((*DAT_08006404 & 0x2000000) == 0) {\n          return 1;\n        }\n      }\n      else if ((*DAT_08006404 & 2) == 0) {\n        return 1;\n      }\n      DAT_08006404[2] = configArray[1] | DAT_08006404[2] & 0xfffffffc;\n      currentTimestamp = FUN_08005a84();\n      timeoutTimestamp = currentTimestamp + 5000;\n      if (configArray[1] == 1) {\n        while ((DAT_08006404[2] & 0xc) != 4) {\n          updatedTimestamp = FUN_08005a84();\n          if (timeoutTimestamp <= updatedTimestamp) {\n            return 3;\n          }\n        }\n      }\n      else if (configArray[1] == 2) {\n        while ((DAT_08006404[2] & 0xc) != 8) {\n          updatedTimestamp = FUN_08005a84();\n          if (timeoutTimestamp <= updatedTimestamp) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((DAT_08006404[2] & 0xc) != 0) {\n          updatedTimestamp = FUN_08005a84();\n          if (timeoutTimestamp <= updatedTimestamp) {\n            return 3;\n          }\n        }\n      }\n    }\n    *(char *)DAT_08006400 = (char)deviceSetting;\n    if (deviceSetting != (*DAT_08006400 & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*configArray & 2) != 0) {\n    DAT_08006404[2] = configArray[2] | DAT_08006404[2] & 0xffffff0f;\n  }\n  if ((*configArray & 4) != 0) {\n    DAT_08006404[2] = configArray[3] | DAT_08006404[2] & 0xffffe3ff;\n  }\n  if ((*configArray & 8) != 0) {\n    DAT_08006404[2] = configArray[4] << 3 | DAT_08006404[2] & 0xffff1fff;\n  }\n  deviceInfo = FUN_08006628();\n  longResult = (ulonglong)DAT_08006408 * (deviceInfo & 0xffffffff);\n  FUN_08005c30((uint)((ulonglong)longResult >> 0x26),(int)(deviceInfo >> 0x20),(int)longResult);\n  return 0;\n}\n\n",
            "called": [
                "FUN_08005c30",
                "FUN_08006628",
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800618c",
            "calling": [
                "FUN_08007436"
            ],
            "imported": false,
            "current_name": "configure_device_0800618c"
        },
        "FUN_08006998": {
            "renaming": {
                "FUN_08006998": "extract_bits_from_data_08006998"
            },
            "code": "\nuint extract_bits_from_data_08006998(void)\n\n{\n  return *(uint *)(DAT_080069b0 + 0xc) >> 8 & 7;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006998",
            "calling": [
                "FUN_08006cf6",
                "FUN_08006d8a"
            ],
            "imported": false,
            "current_name": "extract_bits_from_data_08006998"
        },
        "FUN_080004ac": {
            "renaming": {
                "FUN_080004ac": "initialize_system_080004ac",
                "iVar1": "validationResult"
            },
            "code": "\nvoid initializeSystem_080004ac(void)\n\n{\n  int validationResult;\n  \n  FUN_0800b430(PTR_DAT_080004f0,0,0x38);\n  *(undefined4 *)(PTR_DAT_080004f0 + 8) = *(undefined4 *)(PTR_DAT_080004f4 + 0x10);\n  FUN_08000478(0,1,2);\n  PTR_DAT_080004f0[4] = 1;\n  validationResult = FUN_08004d7c(PTR_DAT_080004f0[0x1c],PTR_DAT_080004f8);\n  if (validationResult == 0) {\n    FUN_08004030(10);\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08000478",
                "FUN_08004d7c",
                "FUN_08004030",
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080004ac",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initialize_system_080004ac"
        },
        "FUN_080078f4": {
            "renaming": {
                "FUN_080078f4": "combine_values_080078f4",
                "local_10": "index",
                "local_c": "combined_value"
            },
            "code": "\nuint combine_values_080078f4(void)\n\n{\n  int index;\n  uint combined_value;\n  \n  combined_value = 0;\n  for (index = 0; index < 4; index = index + 1) {\n    combined_value = *(uint *)(PTR_DAT_0800792c + index * 4) | combined_value;\n  }\n  return combined_value;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080078f4",
            "calling": [
                "FUN_08007930",
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "combine_values_080078f4"
        },
        "FUN_080041a0": {
            "renaming": {
                "FUN_080041a0": "display_message_080041a0",
                "param_1": "messageCode"
            },
            "code": "\nvoid displayMessage_080041a0(undefined messageCode)\n\n{\n  FUN_080036c6(PTR_DAT_0800420c);\n  switch(messageCode) {\n  case 1:\n    FUN_080036c6(PTR_s_Reset_to_continue_08004210);\n    break;\n  case 2:\n    FUN_080036c6(PTR_s___H____X__to_unlock_08004214);\n    break;\n  case 3:\n    FUN_080036c6(PTR_s_Caution__Unlocked_08004218);\n    break;\n  case 4:\n    FUN_080036c6(PTR_s_Enabled_0800421c);\n    break;\n  case 5:\n    FUN_080036c6(PTR_s_Disabled_08004220);\n  }\n  FUN_080036c6(PTR_DAT_08004224);\n  return;\n}\n\n",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041a0",
            "calling": [
                "FUN_08003a74",
                "FUN_08001ddc",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "display_message_080041a0"
        },
        "FUN_08008bf0": {
            "renaming": {
                "FUN_08008bf0": "calculate_shifted_value_08008bf0",
                "param_1": "input_value1",
                "param_2": "input_value2",
                "iVar1": "intermediate_value1",
                "uVar2": "intermediate_value2"
            },
            "code": "\nuint calculate_shifted_value_08008bf0(uint input_value1,uint input_value2)\n\n{\n  int intermediate_value1;\n  uint intermediate_value2;\n  \n  if ((input_value2 & 0x80000000) != 0) {\n    return 0;\n  }\n  intermediate_value1 = input_value2 * 2 + 0x200000;\n  if (input_value2 * 2 < 0xffe00000) {\n    if (-1 < intermediate_value1) {\n      return 0;\n    }\n    intermediate_value2 = -(intermediate_value1 >> 0x15) - 0x3e1;\n    if (-1 < (int)intermediate_value2) {\n      return (input_value2 << 0xb | 0x80000000 | input_value1 >> 0x15) >> (intermediate_value2 & 0xff);\n    }\n  }\n  else if ((input_value1 | input_value2 << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008bf0",
            "calling": [
                "FUN_08003004",
                "FUN_080005b4",
                "FUN_08002408",
                "FUN_08002c18",
                "FUN_08004e30",
                "FUN_08003b98",
                "FUN_08001f00",
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "calculate_shifted_value_08008bf0"
        },
        "FUN_08003a18": {
            "renaming": {
                "FUN_08003a18": "update_flag_08003a18",
                "param_1": "inputFlag"
            },
            "code": "\nvoid updateFlag_08003a18(uint inputFlag)\n\n{\n  if ((inputFlag & 0x80) == 0) {\n    if ((inputFlag & 0x40) == 0) {\n      if ((inputFlag & 0x20) != 0) {\n        PTR_DAT_08003a70[2] = PTR_DAT_08003a70[2] | 2;\n      }\n    }\n    else {\n      PTR_DAT_08003a70[2] = PTR_DAT_08003a70[2] | 8;\n    }\n  }\n  else {\n    FUN_080025e8();\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003a18",
            "calling": [
                "FUN_080074c8"
            ],
            "imported": false,
            "current_name": "update_flag_08003a18"
        },
        "FUN_08005790": {
            "renaming": {
                "FUN_08005790": "process_data_08005790"
            },
            "code": "\nvoid processData_08005790(void)\n\n{\n  do_nothing_08005318();\n  if (PTR_DAT_080057d4[1] == '\\x03') {\n    *(undefined2 *)PTR_DAT_080057dc = *(undefined2 *)(PTR_DAT_080057d8 + 0x18);\n    *(undefined2 *)PTR_DAT_080057e0 = *(undefined2 *)(PTR_DAT_080057d8 + 0x1a);\n    FUN_08007c40(0x69);\n    FUN_08007c5e(((byte)PTR_DAT_080057d8[0xd] + 5) * 0x15);\n    FUN_08007b70();\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08007c5e",
                "FUN_08007b70",
                "FUN_08005318",
                "FUN_08007c40"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005790",
            "calling": [
                "FUN_0800583c",
                "FUN_0800585c",
                "FUN_08001d4c"
            ],
            "imported": false,
            "current_name": "process_data_08005790"
        },
        "FUN_08001994": {
            "renaming": {
                "FUN_08001994": "process_data_08001994",
                "param_1": "inputFlags",
                "param_2": "flagParam2",
                "param_3": "flagParam3",
                "param_4": "inputParam4",
                "uVar1": "tempVar1",
                "uVar2": "tempVar2",
                "uVar3": "tempVar3",
                "uVar4": "tempVar4",
                "local_61": "currentFlags",
                "local_5c": "value5c",
                "local_58": "value58",
                "local_54": "value54",
                "local_4e": "initialValue4e",
                "local_4c": "value4c",
                "local_48": "value48",
                "local_44": "value44",
                "local_40": "maxValue",
                "local_3c": "value3c",
                "local_36": "modifiedValue36",
                "local_34": "value34",
                "local_30": "value30",
                "local_2c": "value2c",
                "local_28": "value28",
                "local_24": "value24",
                "local_20": "value20",
                "local_1a": "modifiedValue1a",
                "local_18": "minValue",
                "local_11": "count"
            },
            "code": "\nvoid processData_08001994(byte inputFlags,char flagParam2,char flagParam3,undefined4 inputParam4)\n\n{\n  undefined4 tempVar1;\n  uint tempVar2;\n  undefined8 tempVar3;\n  undefined8 tempVar4;\n  byte currentFlags;\n  uint value5c;\n  uint value58;\n  uint value54;\n  ushort initialValue4e;\n  uint value4c;\n  int value48;\n  undefined4 value44;\n  uint maxValue;\n  uint value3c;\n  ushort modifiedValue36;\n  uint value34;\n  uint value30;\n  int value2c;\n  int value28;\n  int value24;\n  int value20;\n  ushort modifiedValue1a;\n  uint minValue;\n  char count;\n  \n  count = '\\0';\n  FUN_0800b430(&value5c,0,0xc);\n  if ((inputFlags & 1) != 0) {\n    count = count + '\\x01';\n    tempVar3 = FUN_08008590(*(undefined4 *)PTR_DAT_08001c90);\n    value5c = FUN_080095b8((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n  }\n  if ((inputFlags & 2) != 0) {\n    count = count + '\\x01';\n    tempVar3 = FUN_08008590(*(undefined4 *)(PTR_DAT_08001c90 + 4));\n    value58 = FUN_080095b8((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n  }\n  if ((inputFlags & 4) != 0) {\n    count = count + '\\x01';\n    tempVar3 = FUN_08008590(*(undefined4 *)(PTR_DAT_08001c90 + 8));\n    value54 = FUN_080095b8((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n  }\n  tempVar2 = value54;\n  if (value54 < value58) {\n    tempVar2 = value58;\n  }\n  maxValue = value5c;\n  if (value5c < tempVar2) {\n    maxValue = tempVar2;\n  }\n  tempVar3 = FUN_0800854c(maxValue);\n  tempVar4 = FUN_0800854c(count);\n  tempVar4 = FUN_080098d0((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n  tempVar3 = FUN_08008894((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20),(int)tempVar4,\n                       (int)((ulonglong)tempVar4 >> 0x20));\n  value44 = FUN_08008c30((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n  tempVar1 = FUN_08008eec(*(undefined4 *)(PTR_DAT_08001c90 + 0x20),value44);\n  tempVar1 = FUN_08009054(tempVar1,DAT_08001c94);\n  tempVar3 = FUN_08008590(tempVar1);\n  tempVar3 = FUN_08009318((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n  value48 = FUN_08008bf0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n  tempVar3 = FUN_0800854c(count);\n  tempVar3 = FUN_080098d0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n  tempVar4 = FUN_08008590(inputParam4);\n  tempVar3 = FUN_08008640((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20),(int)tempVar4,\n                       (int)((ulonglong)tempVar4 >> 0x20));\n  tempVar1 = FUN_08008c30((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n  tempVar1 = FUN_08008eec(value44,tempVar1);\n  tempVar1 = FUN_08009054(DAT_08001c98,tempVar1);\n  tempVar3 = FUN_08008590(tempVar1);\n  value4c = FUN_080095b8((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n  minValue = DAT_08001c9c;\n  if (value4c < DAT_08001c9c) {\n    minValue = value4c;\n  }\n  initialValue4e = *(ushort *)(PTR_DAT_08001c90 + 0x18);\n  modifiedValue1a = *(ushort *)(PTR_DAT_08001c90 + 0x1a) ^ *(ushort *)(PTR_DAT_08001c90 + 0x2a) & 0xaa0;\n  if (flagParam2 == '\\0') {\n    modifiedValue1a = modifiedValue1a ^ 0xaa0;\n  }\n  FUN_080018fc(modifiedValue1a);\n  FUN_080018cc(initialValue4e);\n  value28 = -(maxValue >> 1);\n  value2c = minValue - (byte)PTR_DAT_08001c90[0xd];\n  value30 = 0;\n  value34 = 10000;\n  currentFlags = inputFlags;\n  value24 = value28;\n  value20 = value28;\n  while( true ) {\n    modifiedValue36 = initialValue4e;\n    value3c = FUN_080078f4();\n    if (flagParam3 == '\\0') {\n      value3c = value3c ^ 0x1e;\n    }\n    if (((currentFlags & 1) != 0) && (value20 = value20 + value5c, 0 < value20)) {\n      if ((value3c & 0x10) == 0) {\n        currentFlags = currentFlags & 0xfe;\n      }\n      else {\n        modifiedValue36 = modifiedValue36 ^ 0x10;\n      }\n      value20 = value20 - maxValue;\n    }\n    if (((currentFlags & 2) != 0) && (value24 = value24 + value58, 0 < value24)) {\n      if ((value3c & 8) == 0) {\n        currentFlags = currentFlags & 0xfd;\n      }\n      else {\n        modifiedValue36 = modifiedValue36 ^ 0x440;\n      }\n      value24 = value24 - maxValue;\n    }\n    if (((currentFlags & 4) != 0) && (value28 = value28 + value54, 0 < value28)) {\n      if ((value3c & 4) == 0) {\n        currentFlags = currentFlags & 0xfb;\n      }\n      else {\n        modifiedValue36 = modifiedValue36 ^ 0x100;\n      }\n      value28 = value28 - maxValue;\n    }\n    if ((currentFlags == 0) || ((PTR_DAT_08001d40[2] & 0x10) != 0)) break;\n    FUN_080018cc(modifiedValue36);\n    do_nothing_08002828(PTR_DAT_08001d44[0xd]);\n    FUN_080018cc(initialValue4e);\n    do_nothing_08002828(value2c);\n    if ((value4c < minValue) && (value34 = minValue + value34, 20000 < value34)) {\n      value34 = value34 - 20000;\n      value30 = value48 + value30;\n      minValue = DAT_08001d48 / value30;\n      if (minValue < value4c) {\n        minValue = value4c;\n      }\n      value2c = minValue - (byte)PTR_DAT_08001d44[0xd];\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_0800854c",
                "FUN_08008640",
                "FUN_08008c30",
                "FUN_08008590",
                "FUN_08009318",
                "FUN_08002828",
                "FUN_08008894",
                "FUN_08008bf0",
                "FUN_080098d0",
                "FUN_08008eec",
                "FUN_080018fc",
                "FUN_0800b430",
                "FUN_08009054",
                "FUN_080095b8",
                "FUN_080018cc",
                "FUN_080078f4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001994",
            "calling": [
                "FUN_08001d4c"
            ],
            "imported": false,
            "current_name": "process_data_08001994"
        },
        "FUN_08007854": {
            "renaming": {
                "FUN_08007854": "get_bit_from_memory_08007854",
                "param_1": "bitIndex"
            },
            "code": "\nuint getBitFromMemory_08007854(uint bitIndex)\n\n{\n  return *(uint *)(((int)bitIndex >> 4) * 0x400 + 0x40020010) >> (bitIndex & 0xf) & 1;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007854",
            "calling": [
                "FUN_08007884"
            ],
            "imported": false,
            "current_name": "get_bit_from_memory_08007854"
        },
        "FUN_08004900": {
            "renaming": {
                "FUN_08004900": "execute_operations_08004900",
                "param_1": "input_1",
                "param_2": "input_2"
            },
            "code": "\nvoid execute_operations_08004900(undefined input_1,undefined4 input_2)\n\n{\n  FUN_080036c6(PTR_DAT_08004934);\n  FUN_080037fc(input_1);\n  FUN_080036c6(PTR_DAT_08004938);\n  FUN_0800369c(input_2);\n  FUN_080036c6(PTR_DAT_0800493c);\n  return;\n}\n\n",
            "called": [
                "FUN_080037fc",
                "FUN_0800369c",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004900",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "execute_operations_08004900"
        },
        "FUN_08005318": {
            "renaming": {
                "FUN_08005318": "do_nothing_08005318"
            },
            "code": "\nvoid do_nothing_08005318(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005318",
            "calling": [
                "FUN_08005790"
            ],
            "imported": false,
            "current_name": "do_nothing_08005318"
        },
        "FUN_08004228": {
            "renaming": {
                "FUN_08004228": "display_grbl_help_08004228"
            },
            "code": "\nvoid displayGrblHelp_08004228(void)\n\n{\n  FUN_080036c6(PTR_s__Grbl_0_8c______for_help__08004238);\n  return;\n}\n\n",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004228",
            "calling": [
                "FUN_080039a0"
            ],
            "imported": false,
            "current_name": "display_grbl_help_08004228"
        },
        "FUN_08009b24": {
            "renaming": {
                "FUN_08009b24": "calculate_result_08009b24",
                "param_1": "input_value1",
                "param_2": "input_value2",
                "param_3": "input_value3",
                "param_4": "input_value4",
                "uVar1": "temp_var1",
                "iVar2": "temp_var2",
                "uVar3": "temp_var3",
                "iVar4": "temp_var4",
                "uVar5": "temp_var5",
                "iVar6": "temp_var6",
                "uVar7": "temp_var7",
                "uVar8": "temp_var8",
                "uVar9": "temp_var9",
                "uVar10": "temp_var10",
                "uVar11": "temp_var11",
                "uVar12": "temp_var12",
                "uVar13": "temp_var13",
                "local_3c": "local_offset"
            },
            "code": "\nuint calculate_result_08009b24(uint input_value1,uint input_value2,uint input_value3,uint input_value4)\n\n{\n  undefined4 temp_var1;\n  int temp_var2;\n  uint temp_var3;\n  int temp_var4;\n  undefined4 temp_var5;\n  int temp_var6;\n  uint temp_var7;\n  undefined4 temp_var8;\n  undefined4 temp_var9;\n  undefined8 temp_var10;\n  undefined8 temp_var11;\n  undefined8 temp_var12;\n  undefined8 temp_var13;\n  int local_offset;\n  \n  temp_var1 = DAT_08009d70;\n  input_value2 = input_value2 & 0x7fffffff;\n  input_value4 = input_value4 & 0x7fffffff;\n  temp_var3 = input_value1;\n  temp_var7 = input_value2;\n  if (input_value2 < input_value4) {\n    temp_var3 = input_value3;\n    input_value3 = input_value1;\n    temp_var7 = input_value4;\n    input_value4 = input_value2;\n  }\n  if (0x3c00000 < (int)(temp_var7 - input_value4)) {\n    temp_var3 = FUN_080082d4(temp_var3,temp_var7,input_value3,input_value4);\n    return temp_var3;\n  }\n  if (DAT_08009d68 < (int)temp_var7) {\n    if (DAT_08009d74 < (int)temp_var7) {\n      if ((temp_var7 & 0xfffff | temp_var3) != 0) {\n        temp_var3 = FUN_080082d4(temp_var3,temp_var7,input_value3,input_value4);\n      }\n      if ((input_value4 ^ 0x7ff00000 | input_value3) != 0) {\n        return temp_var3;\n      }\n      return input_value3;\n    }\n    temp_var7 = temp_var7 + 0xda800000;\n    input_value4 = input_value4 + 0xda800000;\n    local_offset = 600;\n  }\n  else {\n    local_offset = 0;\n  }\n  temp_var11 = CONCAT44(temp_var7,temp_var3);\n  temp_var10 = CONCAT44(input_value4,input_value3);\n  if ((int)input_value4 <= DAT_08009d6c) {\n    if ((int)input_value4 < 0x100000) {\n      if ((input_value4 | input_value3) == 0) {\n        return temp_var3;\n      }\n      temp_var10 = FUN_08008640(input_value3,input_value4,0,DAT_08009d70);\n      temp_var11 = FUN_08008640(temp_var3,temp_var7,0,temp_var1);\n      local_offset = local_offset + -0x3fe;\n    }\n    else {\n      temp_var7 = temp_var7 + 0x25800000;\n      temp_var11 = CONCAT44(temp_var7,temp_var3);\n      input_value4 = input_value4 + 0x25800000;\n      temp_var10 = CONCAT44(input_value4,input_value3);\n      local_offset = local_offset + -600;\n    }\n  }\n  temp_var9 = (undefined4)((ulonglong)temp_var11 >> 0x20);\n  temp_var8 = (undefined4)temp_var11;\n  temp_var6 = (int)((ulonglong)temp_var10 >> 0x20);\n  temp_var5 = (undefined4)temp_var10;\n  temp_var10 = FUN_080082d0(temp_var8,temp_var9,temp_var5,temp_var6);\n  temp_var4 = (int)((ulonglong)temp_var10 >> 0x20);\n  temp_var1 = (undefined4)temp_var10;\n  temp_var2 = FUN_08008b24(temp_var5,temp_var6,temp_var1,temp_var4);\n  if (temp_var2 == 0) {\n    temp_var10 = FUN_08008640(0,input_value4,0);\n    temp_var11 = FUN_08008640(temp_var1,temp_var4 + -0x80000000,temp_var1,temp_var4);\n    temp_var12 = FUN_080082d4(temp_var8,temp_var9,temp_var8,temp_var9);\n    temp_var12 = FUN_080082d0((int)temp_var12,(int)((ulonglong)temp_var12 >> 0x20),0,temp_var7 + 0x100000);\n    temp_var12 = FUN_08008640((int)temp_var12,(int)((ulonglong)temp_var12 >> 0x20),temp_var5,temp_var6);\n    temp_var13 = FUN_080082d0(temp_var5,temp_var6,0,input_value4);\n    temp_var13 = FUN_08008640((int)temp_var13,(int)((ulonglong)temp_var13 >> 0x20),0,temp_var7 + 0x100000);\n    temp_var12 = FUN_080082d4((int)temp_var12,(int)((ulonglong)temp_var12 >> 0x20),(int)temp_var13,\n                          (int)((ulonglong)temp_var13 >> 0x20));\n    temp_var11 = FUN_080082d0((int)temp_var11,(int)((ulonglong)temp_var11 >> 0x20),(int)temp_var12,\n                          (int)((ulonglong)temp_var12 >> 0x20));\n    FUN_080082d0((int)temp_var10,(int)((ulonglong)temp_var10 >> 0x20),(int)temp_var11,\n                 (int)((ulonglong)temp_var11 >> 0x20));\n    temp_var10 = FUN_0800a1bc();\n  }\n  else {\n    temp_var10 = FUN_08008640(0,temp_var7,0,temp_var7);\n    temp_var11 = FUN_08008640(temp_var5,temp_var6 + -0x80000000,temp_var5,temp_var6);\n    temp_var12 = FUN_080082d4(temp_var8,temp_var9,0,temp_var7);\n    temp_var13 = FUN_080082d0(temp_var8,temp_var9,0,temp_var7);\n    temp_var12 = FUN_08008640((int)temp_var12,(int)((ulonglong)temp_var12 >> 0x20),(int)temp_var13,\n                          (int)((ulonglong)temp_var13 >> 0x20));\n    temp_var11 = FUN_080082d0((int)temp_var11,(int)((ulonglong)temp_var11 >> 0x20),(int)temp_var12,\n                          (int)((ulonglong)temp_var12 >> 0x20));\n    FUN_080082d0((int)temp_var10,(int)((ulonglong)temp_var10 >> 0x20),(int)temp_var11,\n                 (int)((ulonglong)temp_var11 >> 0x20));\n    temp_var10 = FUN_0800a1bc();\n  }\n  temp_var3 = (uint)temp_var10;\n  if (local_offset != 0) {\n    temp_var3 = FUN_08008640(temp_var3,(int)((ulonglong)temp_var10 >> 0x20),0,local_offset * 0x100000 + 0x3ff00000);\n  }\n  return temp_var3;\n}\n\n",
            "called": [
                "FUN_08008640",
                "FUN_080082d4",
                "FUN_080082d0",
                "FUN_08008b24",
                "FUN_0800a1bc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009b24",
            "calling": [
                "FUN_0800981c"
            ],
            "imported": false,
            "current_name": "calculate_result_08009b24"
        },
        "FUN_080076c8": {
            "renaming": {
                "FUN_080076c8": "toggle_bit_in_memory_080076c8",
                "param_1": "bitPosition"
            },
            "code": "\nvoid toggleBitInMemory_080076c8(uint bitPosition)\n\n{\n  *(uint *)(((int)bitPosition >> 4) * 0x400 + 0x40020014) =\n       *(uint *)(((int)bitPosition >> 4) * 0x400 + 0x40020014) ^ 1 << (bitPosition & 0xf);\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080076c8",
            "calling": [
                "FUN_08007756"
            ],
            "imported": false,
            "current_name": "toggle_bit_in_memory_080076c8"
        },
        "FUN_0800530c": {
            "renaming": {
                "FUN_0800530c": "do_nothing_0800530c"
            },
            "code": "\nvoid do_nothing_0800530c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800530c",
            "calling": [
                "FUN_080057e4"
            ],
            "imported": false,
            "current_name": "do_nothing_0800530c"
        },
        "FUN_08006a8c": {
            "renaming": {
                "FUN_08006a8c": "set_bit_at_index_08006a8c",
                "param_1": "bitIndex"
            },
            "code": "\nvoid setBitAtIndex_08006a8c(byte bitIndex)\n\n{\n  *(int *)(DAT_08006abc + (((uint)(int)(char)bitIndex >> 5) + 0x60) * 4) = 1 << (bitIndex & 0x1f);\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006a8c",
            "calling": [
                "FUN_08006dfe"
            ],
            "imported": false,
            "current_name": "set_bit_at_index_08006a8c"
        },
        "FUN_0800283a": {
            "renaming": {
                "FUN_0800283a": "execute_functions_0800283a"
            },
            "code": "\nvoid execute_functions_0800283a(void)\n\n{\n  FUN_080035ec(*(undefined4 *)(PTR_DAT_08002868 + 4),*(undefined4 *)(PTR_DAT_08002868 + 8),\n               *(undefined4 *)(PTR_DAT_08002868 + 0xc));\n  FUN_080004fc(*(undefined4 *)(PTR_DAT_08002868 + 4),*(undefined4 *)(PTR_DAT_08002868 + 8),\n               *(undefined4 *)(PTR_DAT_08002868 + 0xc));\n  return;\n}\n\n",
            "called": [
                "FUN_080035ec",
                "FUN_080004fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800283a",
            "calling": [
                "FUN_08001ddc",
                "FUN_080024c4"
            ],
            "imported": false,
            "current_name": "execute_functions_0800283a"
        },
        "FUN_0800881c": {
            "renaming": {
                "FUN_0800881c": "calculate_result_0800881c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "temp_var_1",
                "unaff_r4": "unaffected_var",
                "uVar2": "temp_var_2",
                "uVar3": "temp_var_3",
                "in_r12": "input_mask",
                "bVar4": "is_zero"
            },
            "code": "\nulonglong calculate_result_0800881c(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  uint temp_var_1;\n  uint unaffected_var;\n  uint temp_var_2;\n  uint temp_var_3;\n  uint input_mask;\n  bool is_zero;\n  \n  temp_var_2 = input_mask & input_4 >> 0x14;\n  if (unaffected_var != input_mask && temp_var_2 != input_mask) {\n    is_zero = (input_1 | input_2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input_3 | input_4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input_2 ^ input_4) & 0x80000000) << 0x20;\n    }\n    if (unaffected_var == 0) {\n      temp_var_3 = input_2 & 0x80000000;\n      do {\n        temp_var_1 = input_1 & 0x80000000;\n        input_1 = input_1 << 1;\n        input_2 = input_2 * 2 + (uint)(temp_var_1 != 0);\n      } while ((input_2 & 0x100000) == 0);\n      input_2 = input_2 | temp_var_3;\n      if (temp_var_2 != 0) {\n        return CONCAT44(input_2,input_1);\n      }\n    }\n    do {\n      temp_var_2 = input_3 & 0x80000000;\n      input_3 = input_3 << 1;\n      input_4 = input_4 * 2 + (uint)(temp_var_2 != 0);\n    } while ((input_4 & 0x100000) == 0);\n    return CONCAT44(input_2,input_1);\n  }\n  is_zero = (input_1 | input_2 << 1) == 0;\n  if (is_zero) {\n    input_2 = input_4;\n    input_1 = input_3;\n  }\n  if (!is_zero) {\n    is_zero = (input_3 | input_4 << 1) == 0;\n  }\n  temp_var_3 = input_2;\n  if (((!is_zero) && ((unaffected_var != input_mask || ((input_1 | input_2 << 0xc) == 0)))) &&\n     ((temp_var_2 != input_mask || (input_1 = input_3, temp_var_3 = input_4, (input_3 | input_4 << 0xc) == 0)))) {\n    return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(temp_var_3,input_1) | 0x7ff8000000000000;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800881c",
            "calling": [
                "FUN_08008640"
            ],
            "imported": false,
            "current_name": "calculate_result_0800881c"
        },
        "FUN_08004bc0": {
            "renaming": {
                "FUN_08004bc0": "calculate_and_call_08004bc0",
                "param_1": "inputByte",
                "param_2": "inputValue"
            },
            "code": "\nvoid calculateAndCall_08004bc0(byte inputByte,undefined4 inputValue)\n\n{\n  FUN_08000374((ushort)inputByte * 0x101 + 0x300,inputValue,0x100);\n  return;\n}\n\n",
            "called": [
                "FUN_08000374"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004bc0",
            "calling": [
                "FUN_08004d2c",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "calculate_and_call_08004bc0"
        },
        "FUN_08008b4c": {
            "renaming": {
                "FUN_08008b4c": "check_function_status_08008b4c",
                "in_ZR": "zeroFlag",
                "in_CY": "carryFlag"
            },
            "code": "\nbool checkFunctionStatus_08008b4c(void)\n\n{\n  undefined zeroFlag;\n  undefined carryFlag;\n  \n  FUN_08008af0();\n  return !(bool)carryFlag || (bool)zeroFlag;\n}\n\n",
            "called": [
                "FUN_08008af0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b4c",
            "calling": [
                "FUN_0800a5a0"
            ],
            "imported": false,
            "current_name": "check_function_status_08008b4c"
        },
        "FUN_08004c2a": {
            "renaming": {
                "FUN_08004c2a": "initialize_system_08004c2a"
            },
            "code": "\nvoid initializeSystem_08004c2a(void)\n\n{\n  FUN_08000340(0,5);\n  FUN_08000374(1,PTR_DAT_08004c44,0x40);\n  return;\n}\n\n",
            "called": [
                "FUN_08000374",
                "FUN_08000340"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c2a",
            "calling": [
                "FUN_08004c48",
                "FUN_08004e30"
            ],
            "imported": false,
            "current_name": "initialize_system_08004c2a"
        },
        "FUN_0800826a": {
            "renaming": {
                "FUN_0800826a": "process_data_0800826a",
                "param_1": "inputData"
            },
            "code": "\nundefined4 processData_0800826a(undefined inputData)\n\n{\n  FUN_08007e1c(inputData);\n  return 0;\n}\n\n",
            "called": [
                "FUN_08007e1c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800826a",
            "calling": [],
            "imported": false,
            "current_name": "process_data_0800826a"
        },
        "FUN_08008b60": {
            "renaming": {
                "FUN_08008b60": "check_condition_08008b60",
                "in_CY": "conditionFlag"
            },
            "code": "\nbool checkCondition_08008b60(void)\n\n{\n  char conditionFlag;\n  \n  FUN_08008af0();\n  return conditionFlag == '\\0';\n}\n\n",
            "called": [
                "FUN_08008af0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b60",
            "calling": [
                "FUN_08003004",
                "FUN_08009318",
                "FUN_0800af78",
                "FUN_080094c0"
            ],
            "imported": false,
            "current_name": "check_condition_08008b60"
        },
        "FUN_08005324": {
            "renaming": {
                "FUN_08005324": "calculate_and_set_ratio_08005324",
                "param_1": "input_value",
                "local_14": "calculated_ratio"
            },
            "code": "\nvoid calculate_and_set_ratio_08005324(uint input_value)\n\n{\n  uint calculated_ratio;\n  \n  calculated_ratio = input_value;\n  if (input_value < 800) {\n    calculated_ratio = 800;\n  }\n  calculated_ratio = DAT_08005358 / calculated_ratio;\n  *(uint *)(PTR_DAT_0800535c + 0x14) = calculated_ratio;\n  FUN_08007bf0(calculated_ratio);\n  return;\n}\n\n",
            "called": [
                "FUN_08007bf0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005324",
            "calling": [
                "FUN_080058a0",
                "FUN_080053a0",
                "FUN_08005814"
            ],
            "imported": false,
            "current_name": "calculate_and_set_ratio_08005324"
        },
        "FUN_08000310": {
            "renaming": {
                "FUN_08000310": "get_value_from_lookup_table_08000310",
                "param_1": "index"
            },
            "code": "\nundefined getValueFromLookupTable_08000310(uint index)\n\n{\n  if (*(int *)PTR_DAT_08000338 == 0) {\n    FUN_080002f0();\n  }\n  return PTR_DAT_0800033c[index & 0x3ff];\n}\n\n",
            "called": [
                "FUN_080002f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000310",
            "calling": [
                "FUN_080003ec",
                "FUN_08004dd2"
            ],
            "imported": false,
            "current_name": "get_value_from_lookup_table_08000310"
        },
        "FUN_08005208": {
            "renaming": {
                "FUN_08005208": "do_nothing_08005208"
            },
            "code": "\nvoid do_nothing_08005208(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005208",
            "calling": [
                "FUN_0800525c"
            ],
            "imported": false,
            "current_name": "do_nothing_08005208"
        },
        "FUN_08007a70": {
            "renaming": {
                "FUN_08007a70": "process_parameters_08007a70",
                "param_1": "inputValue",
                "param_2": "firstParam",
                "param_3": "secondParam",
                "local_c": "selectedValue"
            },
            "code": "\nvoid processParameters_08007a70(int inputValue,undefined4 firstParam,undefined4 secondParam)\n\n{\n  undefined selectedValue;\n  \n  if (inputValue == 0x40000000) {\n    selectedValue = 0x1c;\n  }\n  else if (inputValue == DAT_08007ac8) {\n    selectedValue = 0x1d;\n  }\n  else {\n    if (inputValue != DAT_08007acc) {\n      return;\n    }\n    selectedValue = 0x1e;\n  }\n  FUN_08006cf6(selectedValue,firstParam,secondParam);\n  FUN_080079e0(selectedValue);\n  return;\n}\n\n",
            "called": [
                "FUN_08006cf6",
                "FUN_080079e0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007a70",
            "calling": [
                "FUN_08007ad0"
            ],
            "imported": false,
            "current_name": "process_parameters_08007a70"
        },
        "FUN_0800b5b0": {
            "renaming": {
                "FUN_0800b5b0": "do_nothing_0800b5b0"
            },
            "code": "\nvoid do_nothing_0800b5b0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b5b0",
            "calling": [
                "FUN_0800b3e8",
                "FUN_080001ac",
                "FUN_08000188"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b5b0"
        },
        "FUN_08002978": {
            "renaming": {
                "FUN_08002978": "calculate_result_08002978",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "uVar1": "intermediate_result_1",
                "uVar2": "intermediate_result_2",
                "uVar3": "intermediate_result_3"
            },
            "code": "\nundefined4 calculate_result_08002978(undefined4 input_1,undefined4 input_2,undefined4 input_3)\n\n{\n  undefined4 intermediate_result_1;\n  undefined4 intermediate_result_2;\n  undefined8 intermediate_result_3;\n  \n  intermediate_result_1 = FUN_08008eec(input_2,input_2);\n  intermediate_result_2 = FUN_08008cdc(input_1,input_1);\n  intermediate_result_2 = FUN_08008eec(intermediate_result_2,input_3);\n  intermediate_result_1 = FUN_08008cd8(intermediate_result_1,intermediate_result_2);\n  intermediate_result_3 = FUN_08008590(intermediate_result_1);\n  intermediate_result_3 = FUN_080098d0((int)intermediate_result_3,(int)((ulonglong)intermediate_result_3 >> 0x20));\n  intermediate_result_1 = FUN_08008c30((int)intermediate_result_3,(int)((ulonglong)intermediate_result_3 >> 0x20));\n  return intermediate_result_1;\n}\n\n",
            "called": [
                "FUN_08008c30",
                "FUN_08008cd8",
                "FUN_080098d0",
                "FUN_08008eec",
                "FUN_08008cdc",
                "FUN_08008590"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002978",
            "calling": [
                "FUN_08002afc",
                "FUN_08003004",
                "FUN_080029d8"
            ],
            "imported": false,
            "current_name": "calculate_result_08002978"
        },
        "FUN_08009d78": {
            "renaming": {
                "FUN_08009d78": "improved_calculation_08009d78",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "result_array",
                "uVar1": "tempVar1",
                "uVar2": "tempVar2",
                "uVar3": "tempVar3",
                "uVar4": "tempVar4",
                "uVar5": "tempVar5",
                "uVar6": "tempVar6",
                "uVar7": "tempVar7",
                "uVar8": "maskedInput2",
                "iVar9": "finalResult",
                "uVar10": "intermediateResult1",
                "uVar11": "intermediateResult2",
                "uVar12": "intermediateResult3",
                "local_50": "localVar1",
                "uStack_4c": "localVar2",
                "local_40": "localVar3",
                "local_38": "localVar4",
                "local_30": "localVar5"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nint improvedCalculation_08009d78(undefined4 input_1,uint input_2,undefined8 *result_array)\n\n{\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  undefined4 tempVar3;\n  undefined4 tempVar4;\n  undefined4 tempVar5;\n  undefined4 tempVar6;\n  undefined4 tempVar7;\n  uint maskedInput2;\n  int finalResult;\n  undefined8 intermediateResult1;\n  undefined8 intermediateResult2;\n  undefined8 intermediateResult3;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined8 localVar3;\n  undefined8 localVar4;\n  undefined8 localVar5;\n  \n  maskedInput2 = input_2 & 0x7fffffff;\n  if ((int)maskedInput2 <= DAT_08009fb0) {\n    *(undefined4 *)result_array = input_1;\n    *(uint *)((int)result_array + 4) = input_2;\n    *(undefined4 *)(result_array + 1) = 0;\n    *(undefined4 *)((int)result_array + 0xc) = 0;\n    return 0;\n  }\n  if ((int)maskedInput2 <= DAT_08009fb4) {\n    if ((int)input_2 < 1) {\n      intermediateResult1 = FUN_080082d4(input_1,input_2,DAT_08009f88,DAT_08009f8c);\n      tempVar3 = (undefined4)((ulonglong)intermediateResult1 >> 0x20);\n      tempVar1 = (undefined4)intermediateResult1;\n      if (maskedInput2 != DAT_0800a1b8) {\n        intermediateResult1 = FUN_080082d4(tempVar1,tempVar3,DAT_0800a1b0,DAT_0800a1b4);\n        *result_array = intermediateResult1;\n        intermediateResult1 = FUN_080082d0(tempVar1,tempVar3);\n        intermediateResult1 = FUN_080082d4((int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20),DAT_0800a1b0,DAT_0800a1b4\n                             );\n        result_array[1] = intermediateResult1;\n        return -1;\n      }\n      intermediateResult1 = FUN_080082d4(tempVar1,tempVar3,DAT_0800a190,DAT_0800a194);\n      tempVar1 = (undefined4)((ulonglong)intermediateResult1 >> 0x20);\n      intermediateResult2 = FUN_080082d4((int)intermediateResult1,tempVar1,DAT_0800a198,DAT_0800a19c);\n      *result_array = intermediateResult2;\n      intermediateResult1 = FUN_080082d0((int)intermediateResult1,tempVar1);\n      intermediateResult1 = FUN_080082d4((int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20),DAT_0800a198,DAT_0800a19c);\n      result_array[1] = intermediateResult1;\n      return -1;\n    }\n    intermediateResult1 = FUN_080082d0();\n    tempVar3 = (undefined4)((ulonglong)intermediateResult1 >> 0x20);\n    tempVar1 = (undefined4)intermediateResult1;\n    if (maskedInput2 != DAT_08009fb8) {\n      intermediateResult1 = FUN_080082d0(tempVar1,tempVar3,DAT_08009f90,DAT_08009f94);\n      *result_array = intermediateResult1;\n      intermediateResult1 = FUN_080082d0(tempVar1,tempVar3);\n      intermediateResult1 = FUN_080082d0((int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20),DAT_08009f90,DAT_08009f94);\n      result_array[1] = intermediateResult1;\n      return 1;\n    }\n    intermediateResult1 = FUN_080082d0(tempVar1,tempVar3,DAT_08009f98,DAT_08009f9c);\n    tempVar1 = (undefined4)((ulonglong)intermediateResult1 >> 0x20);\n    intermediateResult2 = FUN_080082d0((int)intermediateResult1,tempVar1,DAT_08009fa0,DAT_08009fa4);\n    *result_array = intermediateResult2;\n    intermediateResult1 = FUN_080082d0((int)intermediateResult1,tempVar1);\n    intermediateResult1 = FUN_080082d0((int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20),DAT_08009fa0,DAT_08009fa4);\n    result_array[1] = intermediateResult1;\n    return 1;\n  }\n  if (DAT_08009fbc < (int)maskedInput2) {\n    if (DAT_08009fc0 < (int)maskedInput2) {\n      intermediateResult1 = FUN_080082d0(input_1,input_2,input_1,input_2);\n      result_array[1] = intermediateResult1;\n      *result_array = intermediateResult1;\n      return 0;\n    }\n    finalResult = ((int)maskedInput2 >> 0x14) + -0x416;\n    FUN_08008ba0();\n    localVar3 = FUN_0800856c();\n    intermediateResult1 = FUN_080082d0(input_1,maskedInput2 + finalResult * -0x100000,(int)localVar3,\n                          (int)((ulonglong)localVar3 >> 0x20));\n    intermediateResult1 = FUN_08008640((int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20),0,DAT_08009fc4);\n    FUN_08008ba0();\n    localVar4 = FUN_0800856c();\n    intermediateResult1 = FUN_080082d0((int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20));\n    localVar5 = FUN_08008640((int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20),0,DAT_08009fc4);\n    FUN_08008b10((int)localVar5,(int)((ulonglong)localVar5 >> 0x20),0,0);\n    finalResult = FUNC_0800a5a0(&localVar3,result_array,finalResult);\n    if (-1 < (int)input_2) {\n      return finalResult;\n    }\n    *(int *)((int)result_array + 4) = *(int *)((int)result_array + 4) + -0x80000000;\n    *(int *)((int)result_array + 0xc) = *(int *)((int)result_array + 0xc) + -0x80000000;\n    return -finalResult;\n  }\n  intermediateResult1 = do_nothing_0800b2cc();\n  tempVar3 = (undefined4)((ulonglong)intermediateResult1 >> 0x20);\n  intermediateResult2 = FUN_08008640((int)intermediateResult1,tempVar3,DAT_08009fa8,DAT_08009fac);\n  FUN_080082d4((int)intermediateResult2,(int)((ulonglong)intermediateResult2 >> 0x20),0,DAT_08009fcc);\n  finalResult = FUN_08008ba0();\n  intermediateResult2 = FUN_0800856c();\n  tempVar4 = (undefined4)((ulonglong)intermediateResult2 >> 0x20);\n  tempVar1 = (undefined4)intermediateResult2;\n  intermediateResult2 = FUN_08008640(tempVar1,tempVar4,DAT_08009f88,DAT_08009f8c);\n  intermediateResult1 = FUN_080082d0((int)intermediateResult1,tempVar3,(int)intermediateResult2,(int)((ulonglong)intermediateResult2 >> 0x20));\n  tempVar5 = (undefined4)((ulonglong)intermediateResult1 >> 0x20);\n  tempVar3 = (undefined4)intermediateResult1;\n  intermediateResult2 = FUN_08008640(tempVar1,tempVar4,DAT_08009f90,DAT_08009f94);\n  if ((0x1f < finalResult) || (*(uint *)(PTR_DAT_08009fd0 + (finalResult + -1) * 4) == maskedInput2)) {\n    intermediateResult3 = FUN_080082d0(tempVar3,tempVar5,(int)intermediateResult2,(int)((ulonglong)intermediateResult2 >> 0x20));\n    if ((int)((maskedInput2 >> 0x14) - ((uint)((int)((ulonglong)intermediateResult3 >> 0x20) << 1) >> 0x15)) < 0x11)\n    goto LAB_0800a0ce;\n    intermediateResult2 = FUN_08008640(tempVar1,tempVar4,DAT_0800a190,DAT_0800a194);\n    tempVar6 = (undefined4)((ulonglong)intermediateResult2 >> 0x20);\n    intermediateResult1 = FUN_080082d0(tempVar3,tempVar5,(int)intermediateResult2,tempVar6);\n    tempVar7 = (undefined4)((ulonglong)intermediateResult1 >> 0x20);\n    tempVar2 = (undefined4)intermediateResult1;\n    intermediateResult3 = FUN_080082d0(tempVar3,tempVar5,tempVar2,tempVar7);\n    intermediateResult2 = FUN_080082d0((int)intermediateResult3,(int)((ulonglong)intermediateResult3 >> 0x20),(int)intermediateResult2,tempVar6);\n    intermediateResult3 = FUN_08008640(tempVar1,tempVar4,DAT_0800a198,DAT_0800a19c);\n    intermediateResult2 = FUN_080082d0((int)intermediateResult3,(int)((ulonglong)intermediateResult3 >> 0x20),(int)intermediateResult2,\n                          (int)((ulonglong)intermediateResult2 >> 0x20));\n    intermediateResult3 = FUN_080082d0(tempVar2,tempVar7,(int)intermediateResult2,(int)((ulonglong)intermediateResult2 >> 0x20));\n    if ((int)(((int)maskedInput2 >> 0x14) - ((uint)((int)((ulonglong)intermediateResult3 >> 0x20) << 1) >> 0x15)) < 0x32\n       ) goto LAB_0800a0ce;\n    intermediateResult2 = FUN_08008640(tempVar1,tempVar4,DAT_0800a1a0,DAT_0800a1a4);\n    tempVar3 = (undefined4)((ulonglong)intermediateResult2 >> 0x20);\n    intermediateResult1 = FUN_080082d0(tempVar2,tempVar7,(int)intermediateResult2,tempVar3);\n    intermediateResult3 = FUN_080082d0(tempVar2,tempVar7);\n    intermediateResult2 = FUN_080082d0((int)intermediateResult3,(int)((ulonglong)intermediateResult3 >> 0x20),(int)intermediateResult2,tempVar3);\n    intermediateResult3 = FUN_08008640(tempVar1,tempVar4,DAT_0800a1a8,DAT_0800a1ac);\n    intermediateResult2 = FUN_080082d0((int)intermediateResult3,(int)((ulonglong)intermediateResult3 >> 0x20),(int)intermediateResult2,\n                          (int)((ulonglong)intermediateResult2 >> 0x20));\n  }\n  intermediateResult3 = FUN_080082d0((int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20),(int)intermediateResult2,\n                        (int)((ulonglong)intermediateResult2 >> 0x20));\nLAB_0800a0ce:\n  localVar2 = (undefined4)((ulonglong)intermediateResult1 >> 0x20);\n  localVar1 = (undefined4)intermediateResult1;\n  *result_array = intermediateResult3;\n  intermediateResult1 = FUN_080082d0(localVar1,localVar2);\n  intermediateResult1 = FUN_080082d0((int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20),(int)intermediateResult2,\n                        (int)((ulonglong)intermediateResult2 >> 0x20));\n  result_array[1] = intermediateResult1;\n  if ((int)input_2 < 0) {\n    *(int *)result_array = (int)intermediateResult3;\n    *(int *)((int)result_array + 4) = (int)((ulonglong)intermediateResult3 >> 0x20) + -0x80000000;\n    *(int *)(result_array + 1) = (int)intermediateResult1;\n    *(int *)((int)result_array + 0xc) = (int)((ulonglong)intermediateResult1 >> 0x20) + -0x80000000;\n    finalResult = -finalResult;\n  }\n  return finalResult;\n}\n\n",
            "called": [
                "FUN_08008640",
                "FUN_08008b10",
                "FUN_080082d4",
                "FUN_0800a5a0",
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_0800856c",
                "FUN_08008ba0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009d78",
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "imported": false,
            "current_name": "improved_calculation_08009d78"
        },
        "FUN_08003826": {
            "renaming": {
                "FUN_08003826": "convert_float_to_string_08003826",
                "param_1": "float_value",
                "iVar1": "is_negative",
                "uVar2": "encoded_float",
                "bVar3": "next_index",
                "uVar4": "current_index",
                "local_24": "processed_value",
                "local_10": "temp_value",
                "local_a": "current_position",
                "local_9": "iteration_count",
                "acStack_1d": "output_buffer"
            },
            "code": "\nvoid convert_float_to_string_08003826(uint float_value)\n\n{\n  int is_negative;\n  undefined4 encoded_float;\n  byte next_index;\n  uint current_index;\n  uint processed_value;\n  char output_buffer [13];\n  uint temp_value;\n  byte current_position;\n  byte iteration_count;\n  \n  is_negative = FUN_08009228(float_value,0);\n  processed_value = float_value;\n  if (is_negative != 0) {\n    FUN_08008250(0x2d);\n    processed_value = float_value ^ 0x80000000;\n  }\n  for (iteration_count = PTR_DAT_08003970[0x3d]; 1 < iteration_count; iteration_count = iteration_count - 2) {\n    processed_value = FUN_08008eec(processed_value,DAT_08003974);\n  }\n  if (iteration_count != 0) {\n    processed_value = FUN_08008eec(processed_value,DAT_08003978);\n  }\n  encoded_float = FUN_08008cdc(processed_value,0x3f000000);\n  current_position = 0;\n  temp_value = FUN_08009278(encoded_float);\n  output_buffer[(byte)PTR_DAT_08003970[0x3d] + 1] = '.';\n  for (; temp_value != 0; temp_value = (uint)((ulonglong)DAT_0800397c * (ulonglong)temp_value >> 0x23)) {\n    if (current_position == PTR_DAT_08003970[0x3d]) {\n      current_position = current_position + 1;\n    }\n    current_index = (uint)current_position;\n    current_position = current_position + 1;\n    output_buffer[current_index + 1] =\n         (char)temp_value + (char)(uint)((ulonglong)DAT_0800397c * (ulonglong)temp_value >> 0x23) * -10\n         + '0';\n  }\n  while (current_position < (byte)PTR_DAT_08003970[0x3d]) {\n    current_index = (uint)current_position;\n    current_position = current_position + 1;\n    output_buffer[current_index + 1] = '0';\n  }\n  if (current_position == PTR_DAT_08003970[0x3d]) {\n    next_index = current_position + 1;\n    current_position = current_position + 2;\n    output_buffer[next_index + 1] = '0';\n  }\n  for (; current_position != 0; current_position = current_position - 1) {\n    FUN_08008250(output_buffer[current_position]);\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08009278",
                "FUN_08008eec",
                "FUN_08008cdc",
                "FUN_08008250",
                "FUN_08009228"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003826",
            "calling": [
                "FUN_080044e8",
                "FUN_08004250",
                "FUN_08004940",
                "FUN_080046d0"
            ],
            "imported": false,
            "current_name": "convert_float_to_string_08003826"
        },
        "FUN_0800923c": {
            "renaming": {
                "FUN_0800923c": "check_status_0800923c",
                "in_ZR": "zeroFlag",
                "in_CY": "carryFlag"
            },
            "code": "\nbool checkStatus_0800923c(void)\n\n{\n  undefined zeroFlag;\n  undefined carryFlag;\n  \n  FUN_08009204();\n  return !(bool)carryFlag || (bool)zeroFlag;\n}\n\n",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800923c",
            "calling": [
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "check_status_0800923c"
        },
        "FUN_08002afc": {
            "renaming": {
                "FUN_08002afc": "process_parameters_08002afc",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "iVar1": "checkResult",
                "uVar2": "tempVar2",
                "uVar3": "tempVar3"
            },
            "code": "\nvoid processParameters_08002afc(int inputParam1,int inputParam2)\n\n{\n  int checkResult;\n  undefined4 tempVar2;\n  undefined4 tempVar3;\n  \n  if (((inputParam1 != 0) && (*(char *)(inputParam1 + 0x25) == '\\0')) &&\n     (checkResult = FUN_08009228(*(undefined4 *)(inputParam1 + 0x18),*(undefined4 *)(inputParam2 + 0x18)),\n     checkResult != 0)) {\n    tempVar3 = *(undefined4 *)(inputParam2 + 0x18);\n    tempVar2 = FUN_08002978(*(uint *)(PTR_DAT_08002ba4 + 0x20) ^ 0x80000000,\n                         *(undefined4 *)(inputParam1 + 0x18),*(undefined4 *)(inputParam1 + 0x20));\n    checkResult = FUN_08009228(tempVar3,tempVar2);\n    if (checkResult == 0) {\n      tempVar2 = FUN_08002978(*(uint *)(PTR_DAT_08002ba4 + 0x20) ^ 0x80000000,\n                           *(undefined4 *)(inputParam1 + 0x18),*(undefined4 *)(inputParam1 + 0x20));\n    }\n    else {\n      tempVar2 = *(undefined4 *)(inputParam2 + 0x18);\n    }\n    checkResult = FUN_08009214(tempVar2,*(undefined4 *)(inputParam2 + 0x18));\n    if (checkResult == 0) {\n      *(undefined4 *)(inputParam2 + 0x18) = tempVar2;\n      *(undefined *)(inputParam2 + 0x24) = 1;\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08009214",
                "FUN_08002978",
                "FUN_08009228"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002afc",
            "calling": [
                "FUN_08002ba8"
            ],
            "imported": false,
            "current_name": "process_parameters_08002afc"
        },
        "FUN_08004c48": {
            "renaming": {
                "FUN_08004c48": "initialize_settings_08004c48",
                "param_1": "enableSettings"
            },
            "code": "\nvoid initializeSettings_08004c48(char enableSettings)\n\n{\n  if (enableSettings != '\\0') {\n    *(undefined4 *)PTR_DAT_08004d0c = DAT_08004d10;\n    *(undefined4 *)(PTR_DAT_08004d0c + 4) = DAT_08004d10;\n    *(undefined4 *)(PTR_DAT_08004d0c + 8) = DAT_08004d10;\n    PTR_DAT_08004d0c[0xd] = 10;\n    *(undefined4 *)(PTR_DAT_08004d0c + 0x10) = DAT_08004d14;\n    *(undefined4 *)(PTR_DAT_08004d0c + 0x14) = DAT_08004d18;\n    *(undefined4 *)(PTR_DAT_08004d0c + 0x20) = DAT_08004d1c;\n    *(undefined4 *)(PTR_DAT_08004d0c + 0x1c) = DAT_08004d20;\n    *(undefined2 *)(PTR_DAT_08004d0c + 0x18) = 0;\n    *(undefined2 *)(PTR_DAT_08004d0c + 0x1a) = 0xa80;\n    *(undefined4 *)(PTR_DAT_08004d0c + 0x24) = DAT_08004d24;\n  }\n  PTR_DAT_08004d0c[0x28] = 0;\n  PTR_DAT_08004d0c[0x28] = PTR_DAT_08004d0c[0x28] | 2;\n  PTR_DAT_08004d0c[0x28] = PTR_DAT_08004d0c[0x28] | 0x10;\n  *(undefined2 *)(PTR_DAT_08004d0c + 0x2a) = 0;\n  *(undefined4 *)(PTR_DAT_08004d0c + 0x2c) = DAT_08004d28;\n  *(undefined4 *)(PTR_DAT_08004d0c + 0x30) = DAT_08004d14;\n  *(undefined2 *)(PTR_DAT_08004d0c + 0x34) = 100;\n  *(undefined4 *)(PTR_DAT_08004d0c + 0x38) = 0x3f800000;\n  PTR_DAT_08004d0c[0x3c] = 0x19;\n  PTR_DAT_08004d0c[0x3d] = 3;\n  PTR_DAT_08004d0c[0x3e] = 0x19;\n  FUN_08004c2a();\n  return;\n}\n\n",
            "called": [
                "FUN_08004c2a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c48",
            "calling": [
                "FUN_080051b4",
                "FUN_08004dd2"
            ],
            "imported": false,
            "current_name": "initialize_settings_08004c48"
        },
        "FUN_080002a0": {
            "renaming": {
                "FUN_080002a0": "execute_operation_080002a0",
                "param_1": "operationCode"
            },
            "code": "\nvoid executeOperation_080002a0(undefined4 operationCode)\n\n{\n  FUN_08005a98(operationCode);\n  return;\n}\n\n",
            "called": [
                "FUN_08005a98"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080002a0",
            "calling": [
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "execute_operation_080002a0"
        },
        "FUN_08009250": {
            "renaming": {
                "FUN_08009250": "check_status_08009250",
                "in_ZR": "zeroFlag",
                "in_CY": "carryFlag"
            },
            "code": "\nbool checkStatus_08009250(void)\n\n{\n  undefined zeroFlag;\n  undefined carryFlag;\n  \n  FUN_080091fc();\n  return !(bool)carryFlag || (bool)zeroFlag;\n}\n\n",
            "called": [
                "FUN_080091fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009250",
            "calling": [
                "FUN_08003004",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "check_status_08009250"
        },
        "FUN_0800640c": {
            "renaming": {
                "FUN_0800640c": "update_configuration_0800640c",
                "param_1": "configFlag",
                "param_2": "configValue1",
                "param_3": "configValue2",
                "local_1c": "configSetting",
                "local_18": "configParam1",
                "local_14": "configParam2",
                "local_10": "configParam3",
                "local_c": "configParam4"
            },
            "code": "\nvoid updateConfiguration_0800640c(int configFlag,uint configValue1,uint configValue2)\n\n{\n  undefined4 configSetting;\n  undefined4 configParam1;\n  undefined4 configParam2;\n  undefined4 configParam3;\n  undefined4 configParam4;\n  \n  if (configFlag == 0) {\n    *(uint *)(DAT_080064b0 + 0x30) = *(uint *)(DAT_080064b0 + 0x30) | 1;\n    configSetting = 0x100;\n    configParam1 = 2;\n    configParam3 = 3;\n    configParam2 = 0;\n    configParam4 = 0;\n    FUN_08006e88(DAT_080064b4,&configSetting);\n    *(uint *)(DAT_080064b0 + 8) = configValue2 | configValue1 | *(uint *)(DAT_080064b0 + 8) & 0xf89fffff;\n  }\n  else {\n    *(uint *)(DAT_080064b0 + 0x30) = *(uint *)(DAT_080064b0 + 0x30) | 4;\n    configSetting = 0x200;\n    configParam1 = 2;\n    configParam3 = 3;\n    configParam2 = 0;\n    configParam4 = 0;\n    FUN_08006e88(DAT_080064b8,&configSetting);\n    *(uint *)(DAT_080064b0 + 8) = configValue1 | configValue2 << 3 | *(uint *)(DAT_080064b0 + 8) & 0x7ffffff;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08006e88"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800640c",
            "calling": [],
            "imported": false,
            "current_name": "update_configuration_0800640c"
        },
        "FUN_08008af0": {
            "renaming": {
                "FUN_08008af0": "swap_parameters_08008af0",
                "param_1": "first_param",
                "param_2": "second_param",
                "param_3": "third_param",
                "param_4": "fourth_param"
            },
            "code": "\nvoid swap_parameters_08008af0(undefined4 first_param,undefined4 second_param,undefined4 third_param,undefined4 fourth_param)\n\n{\n  FUN_08008b00(third_param,fourth_param,first_param,second_param);\n  return;\n}\n\n",
            "called": [
                "FUN_08008b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008af0",
            "calling": [
                "FUN_08008b60",
                "FUN_08008b4c"
            ],
            "imported": false,
            "current_name": "swap_parameters_08008af0"
        },
        "FUN_08006e1a": {
            "renaming": {
                "FUN_08006e1a": "char_to_int_conversion_08006e1a",
                "param_1": "inputChar",
                "uVar1": "convertedInt"
            },
            "code": "\nundefined4 charToIntConversion_08006e1a(char inputChar)\n\n{\n  undefined4 convertedInt;\n  \n  convertedInt = FUN_08006ac0((int)inputChar);\n  return convertedInt;\n}\n\n",
            "called": [
                "FUN_08006ac0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006e1a",
            "calling": [],
            "imported": false,
            "current_name": "char_to_int_conversion_08006e1a"
        },
        "FUN_080052ac": {
            "renaming": {
                "FUN_080052ac": "update_bitmask_080052ac",
                "param_1": "bitmask"
            },
            "code": "\nvoid updateBitmask_080052ac(uint bitmask)\n\n{\n  *(uint *)(DAT_080052d8 + 0x14) = bitmask | *(uint *)(DAT_080052d8 + 0x14) & 0xfffffaaf;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052ac",
            "calling": [
                "FUN_0800583c",
                "FUN_08005760",
                "FUN_08005778"
            ],
            "imported": false,
            "current_name": "update_bitmask_080052ac"
        },
        "FUN_08008286": {
            "renaming": {
                "FUN_08008286": "process_data_08008286",
                "uVar1": "processedData",
                "iVar2": "operationResult"
            },
            "code": "\nundefined processData_08008286(void)\n\n{\n  undefined processedData;\n  int operationResult;\n  \n  operationResult = FUN_08007e58();\n  if (operationResult != 0) {\n    processedData = FUN_08007e84();\n    operationResult = FUN_08005900(processedData);\n    if (operationResult == 0) {\n      return processedData;\n    }\n  }\n  return 0xff;\n}\n\n",
            "called": [
                "FUN_08005900",
                "FUN_08007e84",
                "FUN_08007e58"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008286",
            "calling": [
                "FUN_08003f34"
            ],
            "imported": false,
            "current_name": "process_data_08008286"
        },
        "FUN_0800b5bc": {
            "renaming": {
                "FUN_0800b5bc": "do_nothing_0800b5bc"
            },
            "code": "\nvoid do_nothing_0800b5bc(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b5bc",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_0800b5bc"
        },
        "FUN_08008b74": {
            "renaming": {
                "FUN_08008b74": "check_conditions_08008b74",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4"
            },
            "code": "\nundefined4 check_conditions_08008b74(uint value1,int value2,uint value3,int value4)\n\n{\n  if ((((value2 << 1) >> 0x15 != -1) || ((value1 | value2 << 0xc) == 0)) &&\n     (((value4 << 1) >> 0x15 != -1 || ((value3 | value4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b74",
            "calling": [
                "FUN_080098d0"
            ],
            "imported": false,
            "current_name": "check_conditions_08008b74"
        },
        "FUN_0800b524": {
            "renaming": {
                "FUN_0800b524": "process_data_0800b524",
                "param_1": "mode",
                "param_2": "dataInput",
                "param_3": "configParam1",
                "param_4": "configParam2",
                "puVar1": "dataPtr",
                "uVar2": "result",
                "uVar3": "bitMask",
                "iVar4": "baseAddress",
                "iVar5": "targetAddress",
                "uVar6": "currentIndex"
            },
            "code": "\nundefined4 processData_0800b524(int mode,undefined4 dataInput,undefined4 configParam1,undefined4 configParam2)\n\n{\n  undefined *dataPtr;\n  undefined4 result;\n  uint bitMask;\n  int baseAddress;\n  int targetAddress;\n  uint currentIndex;\n  \n  dataPtr = PTR_PTR_DAT_0800b5ac;\n  do_nothing_0800b51c(*(undefined4 *)PTR_PTR_DAT_0800b5ac);\n  baseAddress = *(int *)PTR_PTR_DAT_0800b5a8;\n  targetAddress = *(int *)(baseAddress + 0x148);\n  if (targetAddress == 0) {\n    targetAddress = baseAddress + 0x14c;\n    *(int *)(baseAddress + 0x148) = targetAddress;\n  }\n  currentIndex = *(uint *)(targetAddress + 4);\n  if ((int)currentIndex < 0x20) {\n    if (mode != 0) {\n      baseAddress = targetAddress + currentIndex * 4;\n      *(undefined4 *)(baseAddress + 0x88) = configParam1;\n      bitMask = 1 << (currentIndex & 0xff);\n      *(uint *)(targetAddress + 0x188) = *(uint *)(targetAddress + 0x188) | bitMask;\n      *(undefined4 *)(baseAddress + 0x108) = configParam2;\n      if (mode == 2) {\n        *(uint *)(targetAddress + 0x18c) = bitMask | *(uint *)(targetAddress + 0x18c);\n      }\n    }\n    result = *(undefined4 *)dataPtr;\n    *(uint *)(targetAddress + 4) = currentIndex + 1;\n    *(undefined4 *)(targetAddress + (currentIndex + 2) * 4) = dataInput;\n    do_nothing_0800b520(result);\n    result = 0;\n  }\n  else {\n    do_nothing_0800b520(*(undefined4 *)dataPtr);\n    result = 0xffffffff;\n  }\n  return result;\n}\n\n",
            "called": [
                "FUN_0800b520",
                "FUN_0800b51c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b524",
            "calling": [
                "FUN_0800b4d0"
            ],
            "imported": false,
            "current_name": "process_data_0800b524"
        },
        "FUN_08005214": {
            "renaming": {
                "FUN_08005214": "do_nothing_08005214"
            },
            "code": "\nvoid do_nothing_08005214(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005214",
            "calling": [
                "FUN_08005250"
            ],
            "imported": false,
            "current_name": "do_nothing_08005214"
        },
        "FUN_08007ea4": {
            "renaming": {
                "FUN_08007ea4": "update_flags_08007ea4",
                "param_1": "flagValue"
            },
            "code": "\nvoid updateFlags_08007ea4(int flagValue)\n\n{\n  if (flagValue == DAT_08007f38) {\n    *(uint *)(DAT_08007f3c + 0x44) = *(uint *)(DAT_08007f3c + 0x44) | 0x10;\n  }\n  else if (flagValue == DAT_08007f40) {\n    *(uint *)(DAT_08007f3c + 0x40) = *(uint *)(DAT_08007f3c + 0x40) | 0x20000;\n  }\n  else if (flagValue == DAT_08007f44) {\n    *(uint *)(DAT_08007f3c + 0x40) = *(uint *)(DAT_08007f3c + 0x40) | 0x40000;\n  }\n  else if (flagValue == DAT_08007f48) {\n    *(uint *)(DAT_08007f3c + 0x40) = *(uint *)(DAT_08007f3c + 0x40) | 0x80000;\n  }\n  else if (flagValue == DAT_08007f4c) {\n    *(uint *)(DAT_08007f3c + 0x40) = *(uint *)(DAT_08007f3c + 0x40) | 0x100000;\n  }\n  else if (flagValue == DAT_08007f50) {\n    *(uint *)(DAT_08007f3c + 0x44) = *(uint *)(DAT_08007f3c + 0x44) | 0x20;\n  }\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007ea4",
            "calling": [
                "FUN_08008190"
            ],
            "imported": false,
            "current_name": "update_flags_08007ea4"
        },
        "FUN_08007756": {
            "renaming": {
                "FUN_08007756": "check_and_execute_functions_08007756",
                "uVar1": "functionResult"
            },
            "code": "\nvoid checkAndExecuteFunctions_08007756(void)\n\n{\n  uint functionResult;\n  \n  functionResult = FUN_08005a84();\n  if ((functionResult & 0x1ff) == 0) {\n    FUN_080076c8(0x3c);\n  }\n  if ((functionResult & 0xf) == 0) {\n    FUN_08007930();\n  }\n  FUN_08005a68();\n  return;\n}\n\n",
            "called": [
                "FUN_08007930",
                "FUN_08005a68",
                "FUN_080076c8",
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007756",
            "calling": [],
            "imported": false,
            "current_name": "check_and_execute_functions_08007756"
        },
        "FUN_0800b520": {
            "renaming": {
                "FUN_0800b520": "do_nothing_0800b520"
            },
            "code": "\nvoid do_nothing_0800b520(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b520",
            "calling": [
                "FUN_0800b524"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b520"
        },
        "FUN_0800423c": {
            "renaming": {
                "FUN_0800423c": "display_grbl_settings_0800423c"
            },
            "code": "\nvoid displayGrblSettings_0800423c(void)\n\n{\n  FUN_080036c6(PTR_s_____view_Grbl_settings______view_0800424c);\n  return;\n}\n\n",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800423c",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "display_grbl_settings_0800423c"
        },
        "FUN_08009264": {
            "renaming": {
                "FUN_08009264": "check_function_result_08009264",
                "in_CY": "resultFlag"
            },
            "code": "\nbool checkFunctionResult_08009264(void)\n\n{\n  char resultFlag;\n  \n  FUN_080091fc();\n  return resultFlag == '\\0';\n}\n\n",
            "called": [
                "FUN_080091fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009264",
            "calling": [
                "FUN_08003004",
                "FUN_080029d8"
            ],
            "imported": false,
            "current_name": "check_function_result_08009264"
        },
        "FUN_08007e08": {
            "renaming": {
                "FUN_08007e08": "execute_operations_08007e08"
            },
            "code": "\nvoid executeOperations_08007e08(void)\n\n{\n  FUN_08007ad0();\n  FUN_08007d08();\n  FUN_08007da8();\n  return;\n}\n\n",
            "called": [
                "FUN_08007d08",
                "FUN_08007ad0",
                "FUN_08007da8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e08",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "execute_operations_08007e08"
        },
        "FUN_08002fac": {
            "renaming": {
                "FUN_08002fac": "compare_pointer_values_08002fac"
            },
            "code": "\nbool compare_pointer_values_08002fac(void)\n\n{\n  return *PTR_DAT_08002fcc == *PTR_DAT_08002fd0;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002fac",
            "calling": [
                "FUN_08001e98"
            ],
            "imported": false,
            "current_name": "compare_pointer_values_08002fac"
        },
        "FUN_080002b6": {
            "renaming": {
                "FUN_080002b6": "wait_until_greater_080002b6",
                "param_1": "offset",
                "uVar1": "current_high",
                "uVar2": "target_high",
                "bVar3": "is_greater",
                "lVar4": "initial_value",
                "uVar5": "current_value"
            },
            "code": "\nvoid wait_until_greater_080002b6(uint offset)\n\n{\n  uint current_high;\n  uint target_high;\n  bool is_greater;\n  longlong initial_value;\n  undefined8 current_value;\n  \n  initial_value = FUN_08000268();\n  target_high = (uint)(initial_value + (ulonglong)offset >> 0x20);\n  do {\n    current_value = FUN_08000268();\n    current_high = (uint)((ulonglong)current_value >> 0x20);\n    is_greater = target_high <= current_high;\n    if (current_high == target_high) {\n      is_greater = (uint)(initial_value + (ulonglong)offset) <= (uint)current_value;\n    }\n  } while (!is_greater);\n  return;\n}\n\n",
            "called": [
                "FUN_08000268"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080002b6",
            "calling": [],
            "imported": false,
            "current_name": "wait_until_greater_080002b6"
        }
    },
    "used_tokens": 173770,
    "layers": [
        [
            "FUN_0800192c",
            "FUN_08006950",
            "FUN_08008ba0",
            "FUN_08005984",
            "FUN_08007a10",
            "FUN_0800856c",
            "FUN_08008b00",
            "FUN_0800585c",
            "FUN_0800597c",
            "FUN_08009798",
            "FUN_08008cd8",
            "FUN_08007930",
            "FUN_08000188",
            "FUN_080082d0",
            "FUN_08009318",
            "FUN_080018cc",
            "FUN_080079e0",
            "FUN_08006a58",
            "FUN_08005a84",
            "FUN_08008b10",
            "FUN_08004e30",
            "FUN_08008c30",
            "FUN_080082d4",
            "FUN_08007bf0",
            "FUN_08008590",
            "FUN_08007ad0",
            "FUN_080005b4",
            "FUN_080039a0",
            "FUN_08009204",
            "FUN_080029d8",
            "FUN_08007c5e",
            "FUN_08005760",
            "FUN_08008b24",
            "FUN_0800587c",
            "FUN_08008a02",
            "FUN_0800369c",
            "FUN_08005a98",
            "FUN_08008cdc",
            "FUN_080044e8",
            "FUN_08006c9c",
            "FUN_0800a5a0",
            "FUN_0800195c",
            "FUN_08009214",
            "FUN_08004dd2",
            "FUN_08005778",
            "FUN_080028bc",
            "FUN_08006628",
            "FUN_0800738e",
            "FUN_080053a0",
            "FUN_080092c4",
            "FUN_08008250",
            "FUN_0800184c",
            "FUN_08001f00",
            "FUN_08006ce0",
            "FUN_08006d4a",
            "FUN_08008894",
            "FUN_08000374",
            "FUN_080037fc",
            "FUN_0800a1bc",
            "FUN_0800525c",
            "FUN_080073d4",
            "FUN_08006dfe",
            "FUN_08006d66",
            "FUN_08006e88",
            "FUN_080036f0",
            "FUN_08002edc",
            "FUN_0800375c",
            "FUN_08009990",
            "FUN_08007e58",
            "FUN_080059f8",
            "FUN_08003f34",
            "FUN_080095b8",
            "FUN_08006cf6",
            "FUN_08002ef0",
            "FUN_08001d4c",
            "FUN_08000268",
            "FUN_08003778",
            "FUN_0800b3dc",
            "FUN_080046d0",
            "FUN_08006d72",
            "FUN_0800756c",
            "FUN_080001f8",
            "FUN_08002f74",
            "FUN_0800b3e8",
            "FUN_080096e8",
            "FUN_08006a18",
            "FUN_08002c18",
            "FUN_08006ac0",
            "FUN_08002ba8",
            "FUN_0800919c",
            "FUN_0800854c",
            "FUN_08008e44",
            "FUN_0800733e",
            "FUN_0800583c",
            "FUN_08001e98",
            "FUN_080069e4",
            "FUN_0800b2d4",
            "FUN_08008e3c",
            "FUN_08009654",
            "FUN_08007bc2",
            "FUN_08009410",
            "FUN_080035ec",
            "FUN_08006c70",
            "FUN_08006d98",
            "FUN_08005a68",
            "FUN_080079c0",
            "FUN_0800b2e0",
            "FUN_08002908",
            "FUN_08007c40",
            "FUN_080094c0",
            "FUN_08008eec",
            "FUN_08006b54",
            "FUN_08007e84",
            "FUN_080057e4",
            "FUN_08006d8a",
            "FUN_0800b2e8",
            "FUN_08007520",
            "FUN_08007884",
            "FUN_08004250",
            "FUN_08006dc4",
            "FUN_08007402",
            "FUN_08002870",
            "FUN_08000210",
            "FUN_08005900",
            "FUN_08002638",
            "FUN_080051b4",
            "FUN_080098d0",
            "FUN_08005c30",
            "FUN_0800056c",
            "FUN_08002f24",
            "FUN_0800981c",
            "FUN_080059b4",
            "FUN_08006c04",
            "FUN_08002e08",
            "FUN_08006680",
            "FUN_08000340",
            "thunk_FUN_08009990",
            "FUN_08004bf4",
            "FUN_08004d7c",
            "FUN_08009278",
            "FUN_080004fc",
            "FUN_08000220",
            "FUN_08005238",
            "FUN_08007da8",
            "FUN_08004148",
            "FUN_08004940",
            "FUN_08008a74",
            "FUN_08002fd4",
            "FUN_08002408",
            "FUN_08002a94",
            "FUN_08003618",
            "FUN_0800af78",
            "FUN_08007d08",
            "FUN_080091fc",
            "FUN_080058a0",
            "FUN_080036c6",
            "FUN_08008190",
            "FUN_080074c8",
            "FUN_0800b430",
            "FUN_08004030",
            "FUN_08005360",
            "FUN_08003980",
            "FUN_08006de0",
            "FUN_08007540",
            "FUN_080052dc",
            "FUN_080064ec",
            "FUN_08006ba0",
            "FUN_080003ec",
            "FUN_08002896",
            "FUN_0800a348",
            "FUN_080001ac",
            "FUN_08003740",
            "FUN_08000478",
            "FUN_08006d2e",
            "FUN_08007e1c",
            "FUN_0800adf0",
            "FUN_08003a74",
            "FUN_08005cec",
            "FUN_08006b00",
            "FUN_0800b4d0",
            "FUN_08007f54",
            "FUN_08003b98",
            "FUN_080024c4",
            "FUN_08002f40",
            "FUN_08009054",
            "FUN_080025e8",
            "FUN_08005250",
            "FUN_08007430",
            "FUN_08008640",
            "FUN_08007436",
            "FUN_08005814",
            "FUN_08005bdc",
            "FUN_080002f0",
            "FUN_0800778c",
            "FUN_08001ddc",
            "FUN_080069b4",
            "FUN_08009228",
            "FUN_08007c7c",
            "FUN_08007b70",
            "FUN_08004d2c",
            "FUN_08003004",
            "FUN_080066cc",
            "FUN_080018fc",
            "FUN_080039bc",
            "FUN_0800618c",
            "FUN_08006998",
            "FUN_080004ac",
            "FUN_080078f4",
            "FUN_080041a0",
            "FUN_08008bf0",
            "FUN_08003a18",
            "FUN_08005790",
            "FUN_08001994",
            "FUN_08007854",
            "FUN_08004900",
            "FUN_08004228",
            "FUN_08009b24",
            "FUN_080076c8",
            "FUN_08006a8c",
            "FUN_0800283a",
            "FUN_0800881c",
            "FUN_08004bc0",
            "FUN_08008b4c",
            "FUN_08004c2a",
            "FUN_0800826a",
            "FUN_08008b60",
            "FUN_08005324",
            "FUN_08000310",
            "FUN_08007a70",
            "FUN_08002978",
            "FUN_08009d78",
            "FUN_08003826",
            "FUN_0800923c",
            "FUN_08002afc",
            "FUN_08004c48",
            "FUN_080002a0",
            "FUN_08009250",
            "FUN_0800640c",
            "FUN_08008af0",
            "FUN_08006e1a",
            "FUN_080052ac",
            "FUN_08008286",
            "FUN_08008b74",
            "FUN_0800b524",
            "FUN_08007ea4",
            "FUN_08007756",
            "FUN_0800423c",
            "FUN_08009264",
            "FUN_08007e08",
            "FUN_08002fac",
            "FUN_080002b6"
        ]
    ],
    "locked_functions": []
}