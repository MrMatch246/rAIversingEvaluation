{
    "functions": {
        "FUN_080050fc": {
            "renaming": {
                "FUN_080050fc": "process_format_string_080050fc",
                "param_1": "error_code",
                "param_2": "output_buffer",
                "param_3": "format_string",
                "param_4": "argument_list",
                "puVar1": "flag_ptr",
                "iVar2": "temp_var",
                "iVar3": "result",
                "puVar4": "processed_length",
                "piVar5": "arg_ptr",
                "bVar6": "is_digit",
                "pbVar7": "current_char",
                "pbVar8": "next_char",
                "unaff_r9": "temp_processed_length",
                "local_8c": "current_arg",
                "local_88": "flags",
                "local_84": "precision",
                "local_80": "unused_var",
                "local_7c": "width",
                "local_74": "total_processed_length",
                "local_70": "conversion_specifier",
                "local_6f": "unused_flag_1",
                "local_6e": "unused_flag_2",
                "local_45": "sign_character",
                "local_30": "unused_flag_3"
            },
            "code": "\nint process_format_string_080050fc(undefined4 *error_code,int *output_buffer,byte *format_string,int *argument_list)\n\n{\n  undefined *flag_ptr;\n  int temp_var;\n  int result;\n  undefined4 *processed_length;\n  int *arg_ptr;\n  bool is_digit;\n  byte *current_char;\n  byte *next_char;\n  undefined4 *temp_processed_length;\n  int *current_arg;\n  uint flags;\n  int precision;\n  undefined4 unused_var;\n  int width;\n  int total_processed_length;\n  byte conversion_specifier;\n  undefined unused_flag_1;\n  undefined unused_flag_2;\n  undefined sign_character;\n  undefined4 unused_flag_3;\n  \n  current_arg = argument_list;\n  if (((int)((uint)*(ushort *)(output_buffer + 3) << 0x18) < 0) && (output_buffer[4] == 0)) {\n    temp_var = FUN_08005714(error_code,0x40);\n    *output_buffer = temp_var;\n    output_buffer[4] = temp_var;\n    if (temp_var == 0) {\n      *error_code = 0xc;\n      return -1;\n    }\n    output_buffer[5] = 0x40;\n  }\n  total_processed_length = 0;\n  unused_flag_1 = 0x20;\n  unused_flag_2 = 0x30;\n  current_char = format_string;\nLAB_08005146:\n  next_char = current_char;\n  if (*next_char != 0) goto LAB_080051ca;\n  goto LAB_08005150;\nLAB_080051ca:\n  current_char = next_char + 1;\n  if (*next_char != 0x25) goto LAB_08005146;\nLAB_08005150:\n  temp_var = (int)next_char - (int)format_string;\n  if (temp_var != 0) {\n    result = FUN_08005044(error_code,output_buffer,format_string,temp_var);\n    if (result == -1) {\nLAB_080052ac:\n      if ((int)((uint)*(ushort *)(output_buffer + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return total_processed_length;\n    }\n    total_processed_length = total_processed_length + temp_var;\n  }\n  if (*next_char == 0) goto LAB_080052ac;\n  flags = 0;\n  width = 0;\n  precision = -1;\n  unused_var = 0;\n  sign_character = 0;\n  unused_flag_3 = 0;\n  current_char = next_char + 1;\n  while( true ) {\n    temp_var = FUN_08005614(PTR_DAT_080052d0,*current_char);\n    flag_ptr = PTR_DAT_080052d4;\n    format_string = current_char + 1;\n    if (temp_var == 0) break;\n    flags = 1 << (temp_var - (int)PTR_DAT_080052d0 & 0xffU) | flags;\n    current_char = format_string;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    sign_character = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    sign_character = 0x2b;\n  }\n  if (*current_char == 0x2a) {\n    arg_ptr = current_arg + 1;\n    temp_var = *current_arg;\n    current_arg = arg_ptr;\n    if (-1 < temp_var) goto LAB_080051ee;\n    width = -temp_var;\n    flags = flags | 2;\n  }\n  else {\n    is_digit = false;\n    temp_var = width;\n    format_string = current_char;\n    while( true ) {\n      if (9 < *format_string - 0x30) break;\n      temp_var = temp_var * 10 + (*format_string - 0x30);\n      is_digit = true;\n      format_string = format_string + 1;\n    }\n    if (is_digit) {\nLAB_080051ee:\n      width = temp_var;\n    }\n  }\n  if (*format_string == 0x2e) {\n    if (format_string[1] == 0x2a) {\n      format_string = format_string + 2;\n      arg_ptr = current_arg + 1;\n      precision = *current_arg;\n      current_arg = arg_ptr;\n      if (precision < 0) {\n        precision = -1;\n      }\n    }\n    else {\n      is_digit = false;\n      temp_var = 0;\n      precision = 0;\n      while( true ) {\n        format_string = format_string + 1;\n        if (9 < *format_string - 0x30) break;\n        temp_var = temp_var * 10 + (*format_string - 0x30);\n        is_digit = true;\n      }\n      if (is_digit) {\n        precision = temp_var;\n      }\n    }\n  }\n  temp_var = FUN_08005614(PTR_DAT_080052d4,*format_string,3);\n  if (temp_var != 0) {\n    format_string = format_string + 1;\n    flags = flags | 0x40 << (temp_var - (int)flag_ptr & 0xffU);\n  }\n  conversion_specifier = *format_string;\n  format_string = format_string + 1;\n  temp_var = FUN_08005614(PTR_s_efgEFG_080052d8,conversion_specifier,6);\n  if (temp_var == 0) {\n    processed_length = (undefined4 *)FUN_080053d4(error_code,&flags,output_buffer,DAT_080052e0,&current_arg);\n  }\n  else {\n    processed_length = error_code;\n    if (DAT_080052dc == 0) {\n      current_arg = (int *)(((int)current_arg + 7U & 0xfffffff8) + 8);\n      processed_length = temp_processed_length;\n      goto LAB_08005260;\n    }\n  }\n  if (processed_length == (undefined4 *)0xffffffff) goto LAB_080052ac;\nLAB_08005260:\n  total_processed_length = total_processed_length + (int)processed_length;\n  current_char = format_string;\n  temp_processed_length = processed_length;\n  goto LAB_08005146;\n}\n\n",
            "called": [
                "FUN_080053d4",
                "FUN_08005714",
                "FUN_08005044",
                "FUN_08005614"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080050fc",
            "calling": [
                "FUN_08004ffc"
            ],
            "imported": false,
            "current_name": "process_format_string_080050fc"
        },
        "FUN_08003320": {
            "renaming": {
                "FUN_08003320": "update_global_value_08003320",
                "param_1": "newValue"
            },
            "code": "\nvoid updateGlobalValue_08003320(undefined4 newValue)\n\n{\n  *(undefined4 *)PTR_DAT_08003328 = newValue;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003320",
            "calling": [
                "FUN_08002f28",
                "FUN_08002ea0"
            ],
            "imported": false,
            "current_name": "update_global_value_08003320"
        },
        "FUN_08004410": {
            "renaming": {
                "FUN_08004410": "process_data_08004410",
                "param_1": "inputData",
                "param_2": "bitmask",
                "param_3": "additionalData",
                "local_10": "dataPart1",
                "local_c": "maskedData",
                "uStack_8": "dataPart2"
            },
            "code": "\nvoid processData_08004410(undefined4 inputData,uint bitmask,undefined4 additionalData)\n\n{\n  undefined4 dataPart1;\n  uint maskedData;\n  undefined4 dataPart2;\n  \n  dataPart1 = *(undefined4 *)PTR_DAT_08004430;\n  maskedData = bitmask & 0xffff0000 | (uint)*(ushort *)(PTR_DAT_08004430 + 4);\n  dataPart2 = additionalData;\n  FUN_08004300(0x6c,&dataPart1,6);\n  return;\n}\n\n",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004410",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "process_data_08004410"
        },
        "FUN_08001264": {
            "renaming": {
                "FUN_08001264": "configure_pins_08001264",
                "param_1": "pin_config",
                "param_2": "pin_settings",
                "puVar1": "pin_data",
                "uVar2": "config_var_2",
                "uVar3": "config_var_3",
                "uVar4": "config_value",
                "uVar5": "masked_pin_settings",
                "uVar6": "setting_option",
                "uVar8": "pin_index",
                "uVar9": "bit_mask",
                "uVar10": "config_var_10",
                "unaff_r10": "current_pin",
                "iVar7": "pin_group",
                "iVar11": "shift_value"
            },
            "code": "\nvoid configure_pins_08001264(uint *pin_config,uint *pin_settings)\n\n{\n  uint *pin_data;\n  uint config_var_2;\n  uint config_var_3;\n  uint config_value;\n  uint masked_pin_settings;\n  uint setting_option;\n  int pin_group;\n  uint pin_index;\n  uint bit_mask;\n  uint config_var_10;\n  uint *current_pin;\n  int shift_value;\n  \n  config_var_3 = DAT_08001418;\n  config_var_2 = DAT_08001414;\n  pin_data = DAT_08001404;\n  config_value = 0;\n  pin_index = 0;\n  do {\n    bit_mask = 1 << (pin_index & 0xff);\n    masked_pin_settings = bit_mask & *pin_settings;\n    if (bit_mask == masked_pin_settings) {\n      setting_option = pin_settings[1];\n      if (setting_option == 0x12) {\n        config_value = pin_settings[3] + 0xc;\n      }\n      else if (setting_option < 0x13) {\n        if (setting_option == 2) {\n          config_value = pin_settings[3] + 8;\n        }\n        else if (setting_option < 3) {\n          if (setting_option == 0) goto LAB_080013be;\n          if (setting_option == 1) {\n            config_value = pin_settings[3];\n          }\n        }\n        else if (setting_option == 3) {\n          config_value = 0;\n        }\n        else if (setting_option == 0x11) {\n          config_value = pin_settings[3] + 4;\n        }\n      }\n      else {\n        if (setting_option != DAT_08001410) {\n          if (DAT_08001410 < setting_option) {\n            if ((setting_option != config_var_2) && (config_var_10 = DAT_08001420, setting_option != config_var_3)) goto LAB_080013b8;\n          }\n          else if (setting_option != DAT_0800141c) {\n            config_var_10 = DAT_0800141c + 0x10000;\nLAB_080013b8:\n            if (setting_option != config_var_10) goto LAB_080012a8;\n          }\n        }\nLAB_080013be:\n        config_value = pin_settings[2];\n        if (config_value == 0) {\n          config_value = 4;\n        }\n        else {\n          if (config_value == 1) {\n            pin_config[4] = bit_mask;\n          }\n          if (config_value != 1) {\n            pin_config[5] = bit_mask;\n          }\n          config_value = 8;\n        }\n      }\nLAB_080012a8:\n      if (masked_pin_settings < 0x100) {\n        bit_mask = *pin_config;\n        setting_option = pin_index << 2;\n        current_pin = pin_config;\n      }\n      else {\n        bit_mask = pin_config[1];\n        setting_option = (pin_index + 0x3ffffff8) * 4;\n      }\n      if (0xff < masked_pin_settings) {\n        current_pin = pin_config + 1;\n      }\n      *current_pin = bit_mask & ~(0xf << (setting_option & 0xff)) | config_value << (setting_option & 0xff);\n      current_pin = (uint *)pin_settings[1];\n      if (((uint)current_pin & 0x10000000) != 0) {\n        *(uint *)(DAT_08001408 + 0x18) = *(uint *)(DAT_08001408 + 0x18) | 1;\n        shift_value = (pin_index & 3) << 2;\n        if (pin_config == DAT_0800140c) {\n          pin_group = 0;\n        }\n        else if (pin_config == DAT_0800140c + 0x100) {\n          pin_group = 1;\n        }\n        else if (pin_config == DAT_0800140c + 0x200) {\n          pin_group = 2;\n        }\n        else if (pin_config == DAT_0800140c + 0x300) {\n          pin_group = 3;\n        }\n        else {\n          pin_group = 4;\n        }\n        *(uint *)(&DAT_40010008 + (pin_index & 0xfffffffc)) =\n             pin_group << shift_value | *(uint *)(&DAT_40010008 + (pin_index & 0xfffffffc)) & ~(0xf << shift_value);\n        if (((uint)current_pin & 0x10000) == 0) {\n          bit_mask = *pin_data & ~masked_pin_settings;\n        }\n        else {\n          bit_mask = *pin_data | masked_pin_settings;\n        }\n        *pin_data = bit_mask;\n        if (((uint)current_pin & 0x20000) == 0) {\n          bit_mask = pin_data[1] & ~masked_pin_settings;\n        }\n        else {\n          bit_mask = pin_data[1] | masked_pin_settings;\n        }\n        pin_data[1] = bit_mask;\n        if (((uint)current_pin & 0x100000) == 0) {\n          bit_mask = pin_data[2] & ~masked_pin_settings;\n        }\n        else {\n          bit_mask = pin_data[2] | masked_pin_settings;\n        }\n        pin_data[2] = bit_mask;\n        if (((uint)current_pin & 0x200000) == 0) {\n          masked_pin_settings = pin_data[3] & ~masked_pin_settings;\n        }\n        else {\n          masked_pin_settings = masked_pin_settings | pin_data[3];\n        }\n        pin_data[3] = masked_pin_settings;\n      }\n    }\n    pin_index = pin_index + 1;\n    if (pin_index == 0x10) {\n      return;\n    }\n  } while( true );\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001264",
            "calling": [
                "FUN_08004e14",
                "FUN_08004d48",
                "FUN_08004e7c",
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "configure_pins_08001264"
        },
        "FUN_08002ea0": {
            "renaming": {
                "FUN_08002ea0": "process_data_08002ea0",
                "param_1": "inputData1",
                "param_2": "inputData2",
                "param_3": "inputData3",
                "param_4": "inputData4",
                "extraout_r1": "intermediateResult"
            },
            "code": "\nvoid processData_08002ea0(undefined4 inputData1,undefined4 inputData2,undefined4 inputData3,undefined4 inputData4)\n\n{\n  undefined4 intermediateResult;\n  \n  FUN_08002ad0();\n  FUN_08002cb0();\n  FUN_08003314(DAT_08002ebc);\n  FUN_08003320(0,intermediateResult,inputData3,inputData4);\n  return;\n}\n\n",
            "called": [
                "FUN_08003314",
                "FUN_08002cb0",
                "FUN_08003320",
                "FUN_08002ad0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ea0",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "process_data_08002ea0"
        },
        "FUN_080070b0": {
            "renaming": {
                "FUN_080070b0": "process_numbers_080070b0",
                "param_1": "num1",
                "param_2": "num2",
                "param_3": "num3",
                "uVar1": "tempVar1",
                "uVar2": "tempVar2",
                "uVar3": "tempVar3",
                "uVar4": "tempVar4",
                "uVar5": "shiftAmount",
                "uVar6": "mask",
                "uVar7": "result1",
                "uVar8": "result2"
            },
            "code": "\nulonglong processNumbers_080070b0(uint num1,uint num2,undefined4 num3)\n\n{\n  undefined4 tempVar1;\n  uint tempVar2;\n  undefined4 tempVar3;\n  uint tempVar4;\n  uint shiftAmount;\n  uint mask;\n  undefined8 result1;\n  ulonglong result2;\n  \n  mask = (num2 << 1) >> 0x15;\n  shiftAmount = mask - 0x3ff;\n  tempVar2 = num2;\n  if ((int)shiftAmount < 0x14) {\n    if ((int)shiftAmount < 0) {\n      if ((num2 & 0x7fffffff | num1) == 0) {\n        return CONCAT44(num2,num1);\n      }\n      tempVar2 = num2 & 0xfffff | num1;\n      tempVar1 = *(undefined4 *)(PTR_DAT_080071b8 + ((int)num2 >> 0x1f) * -8);\n      tempVar3 = *(undefined4 *)((int)(PTR_DAT_080071b8 + ((int)num2 >> 0x1f) * -8) + 4);\n      result1 = FUN_0800016c(num1,(-tempVar2 | tempVar2) >> 0xc & 0x80000 | num2 & 0xfffe0000,tempVar1,\n                           tempVar3,num1,num2,num3);\n      result2 = FUN_08000168((int)result1,(int)((ulonglong)result1 >> 0x20),tempVar1,tempVar3);\n      return result2 & 0xffffffff |\n             (ulonglong)((uint)(result2 >> 0x20) & 0x7fffffff | num2 & 0x80000000) << 0x20;\n    }\n    mask = DAT_080071bc >> (shiftAmount & 0xff);\n    if ((num2 & mask | num1) == 0) {\n      return CONCAT44(num2,num1);\n    }\n    mask = mask >> 1;\n    tempVar4 = num2 & mask | num1;\n    if (tempVar4 != 0) {\n      if (shiftAmount == 0x13) {\n        tempVar4 = 0x80000000;\n      }\n      else {\n        tempVar4 = 0;\n      }\n      tempVar2 = 0x40000 >> (shiftAmount & 0xff) | num2 & ~mask;\n    }\n  }\n  else {\n    if (0x33 < (int)shiftAmount) {\n      if (shiftAmount != 0x400) {\n        return CONCAT44(num2,num1);\n      }\n      result2 = FUN_0800016c();\n      return result2;\n    }\n    mask = mask - 0x413;\n    shiftAmount = 0xffffffff >> (mask & 0xff);\n    if ((num1 & shiftAmount) == 0) {\n      return CONCAT44(num2,num1);\n    }\n    shiftAmount = shiftAmount >> 1;\n    tempVar4 = num1;\n    if ((num1 & shiftAmount) != 0) {\n      tempVar4 = 0x40000000 >> (mask & 0xff) | num1 & ~shiftAmount;\n    }\n  }\n  tempVar1 = *(undefined4 *)(PTR_DAT_080071b8 + ((int)num2 >> 0x1f) * -8);\n  tempVar3 = *(undefined4 *)((int)(PTR_DAT_080071b8 + ((int)num2 >> 0x1f) * -8) + 4);\n  result1 = FUN_0800016c(tempVar4,tempVar2,tempVar1,tempVar3,num1,num2,num3);\n  result2 = FUN_08000168((int)result1,(int)((ulonglong)result1 >> 0x20),tempVar1,tempVar3);\n  return result2;\n}\n\n",
            "called": [
                "FUN_08000168",
                "FUN_0800016c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080070b0",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "process_numbers_080070b0"
        },
        "FUN_08002998": {
            "renaming": {
                "FUN_08002998": "do_nothing_08002998"
            },
            "code": "\nvoid do_nothing_08002998(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002998",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": false,
            "current_name": "do_nothing_08002998"
        },
        "FUN_08001424": {
            "renaming": {
                "FUN_08001424": "update_memory_address_08001424",
                "param_1": "memory_address",
                "param_2": "value",
                "param_3": "shift_flag"
            },
            "code": "\nvoid update_memory_address_08001424(int memory_address,int value,int shift_flag)\n\n{\n  if (shift_flag == 0) {\n    value = value << 0x10;\n  }\n  *(int *)(memory_address + 0x10) = value;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001424",
            "calling": [
                "FUN_0800458c",
                "FUN_08003f3c",
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "update_memory_address_08001424"
        },
        "FUN_08001028": {
            "renaming": {
                "FUN_08001028": "check_status_08001028",
                "in_CY": "statusFlag"
            },
            "code": "\nbool checkStatus_08001028(void)\n\n{\n  char statusFlag;\n  \n  FUN_08001004();\n  return statusFlag == '\\0';\n}\n\n",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001028",
            "calling": [
                "FUN_08002ee8",
                "FUN_0800483c",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "check_status_08001028"
        },
        "FUN_08005900": {
            "renaming": {
                "FUN_08005900": "process_data_08005900",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "lVar9": "result",
                "puVar2": "data_ptr",
                "uVar7": "upper_result",
                "uVar8": "lower_result",
                "cVar1": "data_char",
                "local_30": "temp_result",
                "local_50": "operation_type",
                "local_4c": "operation_data_ptr",
                "local_48": "input1_copy",
                "uStack_44": "input2_copy",
                "local_40": "input3_copy",
                "uStack_3c": "input4_copy",
                "local_38": "output_result",
                "iVar3": "status1",
                "iVar4": "status2",
                "piVar5": "error_ptr",
                "puVar6": "error_code_ptr",
                "uVar10": "temp_val1",
                "uVar11": "temp_val2"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nlonglong process_data_08005900(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  char data_char;\n  undefined *data_ptr;\n  int status1;\n  int status2;\n  int *error_ptr;\n  undefined4 *error_code_ptr;\n  undefined4 upper_result;\n  undefined4 lower_result;\n  longlong result;\n  undefined8 temp_val1;\n  undefined8 temp_val2;\n  undefined4 operation_type;\n  undefined *operation_data_ptr;\n  undefined4 input1_copy;\n  undefined4 input2_copy;\n  undefined4 input3_copy;\n  undefined4 input4_copy;\n  undefined8 output_result;\n  int temp_result;\n  \n  result = FUNC_08006228();\n  data_ptr = PTR_DAT_08005ba8;\n  upper_result = (undefined4)((ulonglong)result >> 0x20);\n  lower_result = (undefined4)result;\n  data_char = *PTR_DAT_08005ba8;\n  if (data_char == -1) {\n    return result;\n  }\n  temp_result = FUN_08000a04(input3,input4,input3,input4);\n  if (temp_result != 0) {\n    return result;\n  }\n  status1 = FUN_08000a04(input1,input2,input1,input2);\n  input1_copy = input1;\n  input2_copy = input2;\n  input3_copy = input3;\n  input4_copy = input4;\n  if (status1 == 0) {\n    status2 = FUN_080009a0(input1,input2,0,0);\n    if (status2 != 0) {\n      temp_result = FUN_080009a0(input3,input4,0,0);\n      if (temp_result != 0) {\n        operation_type = 1;\n        operation_data_ptr = PTR_DAT_08005bac;\n        output_result = 0;\n        temp_result = status1;\n        if (data_char != '\\0') {\n          output_result = (ulonglong)DAT_08005bb0 << 0x20;\n          goto LAB_080059d0;\n        }\n        goto LAB_08005978;\n      }\n      status1 = FUN_08007092(input3,input4);\n      if (status1 == 0) {\n        return result;\n      }\n      status1 = FUN_080009b4(input3,input4,0,0);\n      if (status1 == 0) {\n        return result;\n      }\n      operation_type = 1;\n      operation_data_ptr = PTR_DAT_08005bac;\n      data_char = *data_ptr;\n      if (data_char == '\\0') goto LAB_08005a22;\n      output_result = (ulonglong)DAT_08005bb4 << 0x20;\nLAB_08005a32:\n      if (data_char != '\\x02') goto LAB_08005978;\n      goto LAB_08005a34;\n    }\n    status1 = FUN_08007092(lower_result,upper_result);\n    if (((status1 != 0) || (status2 = FUN_08007092(input1,input2), status2 == 0)) ||\n       (status2 = FUN_08007092(input3,input4), status2 == 0)) {\n      status1 = FUN_080009a0(lower_result,upper_result,0,0);\n      if (status1 == 0) {\n        return result;\n      }\n      status1 = FUN_08007092(input1,input2);\n      if (status1 == 0) {\n        return result;\n      }\n      status1 = FUN_08007092(input3,input4);\n      if (status1 == 0) {\n        return result;\n      }\n      operation_type = 4;\n      operation_data_ptr = PTR_DAT_08005bac;\n      temp_result = 0;\n      output_result._0_4_ = 0;\n      output_result._4_4_ = 0;\n      goto LAB_08005afa;\n    }\n    temp_result = FUN_08000a04(lower_result,upper_result);\n    data_char = *data_ptr;\n    if (temp_result != 0) {\n      operation_data_ptr = PTR_DAT_08005bac;\n      operation_type = 1;\n      temp_result = status1;\n      if (data_char != '\\0') {\n        output_result = FUN_08000724(0,0,0,0);\n        goto LAB_08005a32;\n      }\nLAB_08005a22:\n      operation_type = 1;\n      output_result = 0;\n      operation_data_ptr = PTR_DAT_08005bac;\n      goto LAB_08005978;\n    }\n    operation_data_ptr = PTR_DAT_08005bac;\n    operation_type = 3;\n    if (data_char == '\\0') {\n      output_result._0_4_ = 0xe0000000;\n      output_result._4_4_ = DAT_08005bb8;\n      status1 = FUN_080009b4(input1,input2,0,0);\n      if (status1 != 0) {\n        temp_val1 = FUN_080004d0(input3,input4,0,DAT_08005bbc);\n        temp_val2 = FUN_080070b0();\n        status1 = FUN_080009a0((int)temp_val1,(int)((ulonglong)temp_val1 >> 0x20),(int)temp_val2,\n                             (int)((ulonglong)temp_val2 >> 0x20));\n        if (status1 == 0) {\n          output_result._0_4_ = 0xe0000000;\n          output_result._4_4_ = DAT_08005bc0;\n        }\n        goto LAB_08005afa;\n      }\nLAB_08005b98:\n      status1 = FUN_0800709e(&operation_type);\n      if (status1 != 0) goto LAB_080059d0;\n    }\n    else {\n      output_result._0_4_ = 0;\n      output_result._4_4_ = DAT_08005bc4;\n      status1 = FUN_080009b4(input1,input2,0,0);\n      if (status1 != 0) {\n        temp_val1 = FUN_080004d0(input3,input4,0,DAT_08005bbc);\n        temp_val2 = FUN_080070b0();\n        status1 = FUN_080009a0((int)temp_val1,(int)((ulonglong)temp_val1 >> 0x20),(int)temp_val2,\n                             (int)((ulonglong)temp_val2 >> 0x20));\n        if (status1 == 0) {\n          output_result._0_4_ = 0;\n          output_result._4_4_ = DAT_08005bb4;\n        }\n      }\nLAB_08005afa:\n      if (*data_ptr != '\\x02') goto LAB_08005b98;\n    }\n    error_code_ptr = (undefined4 *)FUN_080072ac();\n    lower_result = 0x22;\n  }\n  else {\n    status1 = FUN_080009a0(input3,input4,0,0);\n    if (status1 == 0) {\n      return result;\n    }\n    operation_type = 1;\n    operation_data_ptr = PTR_DAT_08005bac;\n    output_result = (ulonglong)DAT_08005bb0 << 0x20;\n    if (data_char == '\\x02') {\n      return (ulonglong)DAT_08005bb0 << 0x20;\n    }\nLAB_08005978:\n    status1 = FUN_0800709e(&operation_type);\n    if (status1 != 0) goto LAB_080059d0;\nLAB_08005a34:\n    error_code_ptr = (undefined4 *)FUN_080072ac();\n    lower_result = 0x21;\n  }\n  *error_code_ptr = lower_result;\nLAB_080059d0:\n  if (temp_result != 0) {\n    error_ptr = (int *)FUN_080072ac();\n    *error_ptr = temp_result;\n  }\n  return output_result;\n}\n\n",
            "called": [
                "FUN_08000724",
                "FUN_080072ac",
                "FUN_080009b4",
                "FUN_08007092",
                "FUN_08006228",
                "FUN_080004d0",
                "FUN_08000a04",
                "FUN_080009a0",
                "FUN_0800709e",
                "FUN_080070b0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005900",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "process_data_08005900"
        },
        "FUN_080006ac": {
            "renaming": {
                "FUN_080006ac": "calculate_result_080006ac",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "temp_1",
                "unaff_r4": "register_r4",
                "uVar2": "temp_2",
                "uVar3": "temp_3",
                "in_r12": "register_r12",
                "bVar4": "is_zero"
            },
            "code": "\nulonglong calculate_result_080006ac(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  uint temp_1;\n  uint register_r4;\n  uint temp_2;\n  uint temp_3;\n  uint register_r12;\n  bool is_zero;\n  \n  temp_2 = register_r12 & input_4 >> 0x14;\n  if (register_r4 != register_r12 && temp_2 != register_r12) {\n    is_zero = (input_1 | input_2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input_3 | input_4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input_2 ^ input_4) & 0x80000000) << 0x20;\n    }\n    if (register_r4 == 0) {\n      temp_3 = input_2 & 0x80000000;\n      do {\n        temp_1 = input_1 & 0x80000000;\n        input_1 = input_1 << 1;\n        input_2 = input_2 * 2 + (uint)(temp_1 != 0);\n      } while ((input_2 & 0x100000) == 0);\n      input_2 = input_2 | temp_3;\n      if (temp_2 != 0) {\n        return CONCAT44(input_2,input_1);\n      }\n    }\n    do {\n      temp_2 = input_3 & 0x80000000;\n      input_3 = input_3 << 1;\n      input_4 = input_4 * 2 + (uint)(temp_2 != 0);\n    } while ((input_4 & 0x100000) == 0);\n    return CONCAT44(input_2,input_1);\n  }\n  is_zero = (input_1 | input_2 << 1) == 0;\n  if (is_zero) {\n    input_2 = input_4;\n    input_1 = input_3;\n  }\n  if (!is_zero) {\n    is_zero = (input_3 | input_4 << 1) == 0;\n  }\n  temp_3 = input_2;\n  if (((!is_zero) && ((register_r4 != register_r12 || ((input_1 | input_2 << 0xc) == 0)))) &&\n     ((temp_2 != register_r12 || (input_1 = input_3, temp_3 = input_4, (input_3 | input_4 << 0xc) == 0)))) {\n    return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(temp_3,input_1) | 0x7ff8000000000000;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080006ac",
            "calling": [
                "FUN_080004d0"
            ],
            "imported": false,
            "current_name": "calculate_result_080006ac"
        },
        "FUN_08001828": {
            "renaming": {
                "FUN_08001828": "process_data_08001828",
                "param_1": "data_ptr",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "param_5": "byte_array",
                "param_6": "short_val",
                "param_7": "arg7",
                "iVar1": "result1",
                "iVar2": "result2",
                "puVar3": "temp_ptr",
                "uVar4": "temp_var"
            },
            "code": "\nundefined4\nprocess_data_08001828(uint **data_ptr,undefined4 arg2,undefined4 arg3,undefined4 arg4,byte *byte_array,\n            short short_val,undefined4 arg7)\n\n{\n  int result1;\n  int result2;\n  uint *temp_ptr;\n  uint temp_var;\n  \n  if (*(char *)((int)data_ptr + 0x35) == ' ') {\n    if (byte_array == (byte *)0x0) {\n      return 1;\n    }\n    if (short_val == 0) {\n      return 1;\n    }\n    result1 = FUN_0800115c();\n    do {\n      temp_ptr = *data_ptr;\n      if ((~temp_ptr[6] & 2) != 0) {\n        if (*(char *)(data_ptr + 0xd) == '\\x01') {\n          return 2;\n        }\n        temp_var = *temp_ptr;\n        *(undefined *)(data_ptr + 0xd) = 1;\n        *temp_ptr = temp_var & 0xfffff7ff;\n        *(undefined *)((int)data_ptr + 0x35) = 0x21;\n        *(undefined *)((int)data_ptr + 0x36) = 0x40;\n        data_ptr[0xe] = (uint *)0x0;\n        result1 = FUN_08001530(data_ptr,arg2,arg3,arg4,arg7);\n        if (result1 != 0) {\n          *(undefined *)(data_ptr + 0xd) = 0;\n          if (data_ptr[0xe] == (uint *)0x4) {\n            return 1;\n          }\n          return 3;\n        }\n        goto LAB_080018e2;\n      }\n      result2 = FUN_0800115c();\n    } while ((uint)(result2 - result1) < 0x2711);\n    *(undefined *)(data_ptr + 0xd) = 0;\n    *(undefined *)((int)data_ptr + 0x35) = 0x20;\n  }\n  return 2;\n  while (short_val != 0) {\nLAB_080018e2:\n    result1 = FUN_080014e2(data_ptr,arg7);\n    if (result1 != 0) goto LAB_080018ee;\n    temp_ptr = *data_ptr;\n    temp_ptr[4] = (uint)*byte_array;\n    if ((int)(temp_ptr[5] << 0x1d) < 0) {\n      if ((short)(short_val + -1) == 0) break;\n      short_val = short_val + -2;\n      temp_ptr[4] = (uint)byte_array[1];\n      byte_array = byte_array + 2;\n    }\n    else {\n      byte_array = byte_array + 1;\n      short_val = short_val + -1;\n    }\n  }\n  result1 = FUN_080014e2(data_ptr,arg7);\n  if (result1 == 0) {\n    **data_ptr = **data_ptr | 0x200;\n    *(undefined *)(data_ptr + 0xd) = 0;\n    *(undefined *)((int)data_ptr + 0x35) = 0x20;\n    *(undefined *)((int)data_ptr + 0x36) = 0;\n    return 0;\n  }\nLAB_080018ee:\n  if (data_ptr[0xe] == (uint *)0x4) {\n    **data_ptr = **data_ptr | 0x200;\n    return 1;\n  }\n  return 3;\n}\n\n",
            "called": [
                "FUN_080014e2",
                "FUN_08001530",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001828",
            "calling": [
                "FUN_0800403c"
            ],
            "imported": false,
            "current_name": "process_data_08001828"
        },
        "FUN_08004c64": {
            "renaming": {
                "FUN_08004c64": "initialize_memory_08004c64",
                "puVar1": "memory_pointer",
                "iVar2": "counter"
            },
            "code": "\nvoid initialize_memory_08004c64(void)\n\n{\n  undefined *memory_pointer;\n  int counter;\n  \n  memory_pointer = PTR_DAT_08004c6c;\n  counter = 0;\n  *(undefined2 *)(PTR_DAT_08004c6c + 0x800) = 0;\n  *(undefined2 *)(memory_pointer + 0x802) = 0;\n  *(undefined2 *)(memory_pointer + 0x804) = 0;\n  do {\n    memory_pointer[counter] = 0;\n    counter = counter + 1;\n  } while (counter != 0x800);\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c64",
            "calling": [
                "FUN_08004c70"
            ],
            "imported": false,
            "current_name": "initialize_memory_08004c64"
        },
        "FUN_0800016c": {
            "renaming": {
                "FUN_0800016c": "calculate_float_multiplication_0800016c",
                "param_1": "floatA_mantissa",
                "param_2": "floatA_exponent",
                "param_3": "floatB_mantissa",
                "param_4": "floatB_exponent",
                "iVar1": "shiftedExponentB",
                "bVar2": "carryBit",
                "uVar3": "mantissaSum",
                "uVar4": "shiftedMantissaB",
                "uVar5": "normalizedMantissaA",
                "iVar6": "shiftedExponentA",
                "uVar7": "doubleExponentA",
                "uVar8": "doubleMantissaA",
                "uVar9": "doubleExponentB",
                "uVar10": "exponentDifference",
                "uVar11": "shiftedMantissaA",
                "uVar12": "mantissaResult",
                "bVar13": "isExponentEqual",
                "bVar14": "isConditionTrue",
                "bVar15": "isCarry"
            },
            "code": "\nulonglong calculate_float_multiplication_0800016c(uint floatA_mantissa,uint floatA_exponent,uint floatB_mantissa,uint floatB_exponent)\n\n{\n  int shiftedExponentB;\n  byte carryBit;\n  uint mantissaSum;\n  uint shiftedMantissaB;\n  uint normalizedMantissaA;\n  int shiftedExponentA;\n  uint doubleExponentA;\n  uint doubleMantissaA;\n  uint doubleExponentB;\n  uint exponentDifference;\n  uint shiftedMantissaA;\n  uint mantissaResult;\n  bool isExponentEqual;\n  bool isConditionTrue;\n  bool isCarry;\n  \n  doubleExponentA = floatA_exponent << 1;\n  doubleExponentB = floatB_exponent << 1;\n  isExponentEqual = ((floatA_exponent ^ floatB_exponent) & 0x7fffffff) == 0;\n  isConditionTrue = isExponentEqual && floatA_mantissa == floatB_mantissa;\n  if (!isExponentEqual || floatA_mantissa != floatB_mantissa) {\n    isConditionTrue = (doubleExponentA | floatA_mantissa) == 0;\n  }\n  if (!isConditionTrue) {\n    isConditionTrue = (doubleExponentB | floatB_mantissa) == 0;\n  }\n  shiftedExponentA = (int)doubleExponentA >> 0x15;\n  if (!isConditionTrue) {\n    isConditionTrue = shiftedExponentA == -1;\n  }\n  shiftedExponentB = (int)doubleExponentB >> 0x15;\n  if (!isConditionTrue) {\n    isConditionTrue = shiftedExponentB == -1;\n  }\n  if (isConditionTrue) {\n    if (shiftedExponentA == -1 || shiftedExponentB == -1) {\n      doubleExponentB = floatB_exponent;\n      doubleExponentA = floatB_mantissa;\n      if (shiftedExponentA == -1) {\n        doubleExponentB = floatA_exponent;\n        doubleExponentA = floatA_mantissa;\n      }\n      if (shiftedExponentA != -1 || shiftedExponentB != -1) {\n        floatB_mantissa = doubleExponentA;\n        floatB_exponent = doubleExponentB;\n      }\n      isConditionTrue = (doubleExponentA | doubleExponentB << 0xc) == 0;\n      if (isConditionTrue) {\n        isConditionTrue = (floatB_mantissa | floatB_exponent << 0xc) == 0;\n      }\n      if (isConditionTrue) {\n        isConditionTrue = doubleExponentB == floatB_exponent;\n      }\n      if (!isConditionTrue) {\n        doubleExponentB = doubleExponentB | 0x80000;\n      }\n      return CONCAT44(doubleExponentB,doubleExponentA);\n    }\n    if (((floatA_exponent ^ floatB_exponent) & 0x7fffffff) != 0 || floatA_mantissa != floatB_mantissa) {\n      if ((doubleExponentA | floatA_mantissa) == 0) {\n        floatA_mantissa = floatB_mantissa;\n        floatA_exponent = floatB_exponent;\n      }\n      return CONCAT44(floatA_exponent,floatA_mantissa);\n    }\n    if (floatA_exponent != floatB_exponent) {\n      return 0;\n    }\n    if (doubleExponentA >> 0x15 == 0) {\n      isConditionTrue = (floatA_mantissa & 0x80000000) != 0;\n      doubleExponentB = floatA_exponent * 2 + (uint)isConditionTrue;\n      if (CARRY4(floatA_exponent,floatA_exponent) || CARRY4(floatA_exponent * 2,(uint)isConditionTrue)) {\n        doubleExponentB = doubleExponentB | 0x80000000;\n      }\n      return CONCAT44(doubleExponentB,floatA_mantissa << 1);\n    }\n    if (doubleExponentA < 0xffc00000) {\n      return CONCAT44(floatA_exponent + 0x100000,floatA_mantissa);\n    }\n    floatA_exponent = floatA_exponent & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(floatA_exponent | 0x7ff00000) << 0x20;\n  }\n  doubleExponentA = doubleExponentA >> 0x15;\n  doubleExponentB = doubleExponentB >> 0x15;\n  exponentDifference = doubleExponentB - doubleExponentA;\n  isConditionTrue = exponentDifference != 0;\n  if (doubleExponentB < doubleExponentA) {\n    exponentDifference = -exponentDifference;\n  }\n  doubleMantissaA = floatA_mantissa;\n  normalizedMantissaA = floatA_exponent;\n  if (isConditionTrue && doubleExponentA <= doubleExponentB) {\n    doubleExponentA = doubleExponentA + exponentDifference;\n    doubleMantissaA = floatB_mantissa;\n    normalizedMantissaA = floatB_exponent;\n    floatB_mantissa = floatA_mantissa;\n    floatB_exponent = floatA_exponent;\n  }\n  if (0x36 < exponentDifference) {\n    return CONCAT44(normalizedMantissaA,doubleMantissaA);\n  }\n  doubleExponentB = normalizedMantissaA & 0xfffff | 0x100000;\n  if ((normalizedMantissaA & 0x80000000) != 0) {\n    isConditionTrue = doubleMantissaA != 0;\n    doubleMantissaA = -doubleMantissaA;\n    doubleExponentB = -doubleExponentB - (uint)isConditionTrue;\n  }\n  normalizedMantissaA = floatB_exponent & 0xfffff | 0x100000;\n  if ((floatB_exponent & 0x80000000) != 0) {\n    isConditionTrue = floatB_mantissa != 0;\n    floatB_mantissa = -floatB_mantissa;\n    normalizedMantissaA = -normalizedMantissaA - (uint)isConditionTrue;\n  }\n  if (doubleExponentA == exponentDifference) {\n    normalizedMantissaA = normalizedMantissaA ^ 0x100000;\n    if (doubleExponentA == 0) {\n      doubleExponentB = doubleExponentB ^ 0x100000;\n      doubleExponentA = 1;\n    }\n    else {\n      exponentDifference = exponentDifference - 1;\n    }\n  }\n  mantissaResult = -exponentDifference + 0x20;\n  if ((int)exponentDifference < 0x21) {\n    shiftedMantissaA = floatB_mantissa << (mantissaResult & 0xff);\n    floatB_mantissa = floatB_mantissa >> (exponentDifference & 0xff);\n    mantissaSum = doubleMantissaA + floatB_mantissa;\n    shiftedMantissaB = normalizedMantissaA << (mantissaResult & 0xff);\n    mantissaResult = mantissaSum + shiftedMantissaB;\n    doubleExponentB = doubleExponentB + CARRY4(doubleMantissaA,floatB_mantissa) + ((int)normalizedMantissaA >> (exponentDifference & 0xff)) +\n            (uint)CARRY4(mantissaSum,shiftedMantissaB);\n  }\n  else {\n    shiftedMantissaA = normalizedMantissaA << (-exponentDifference + 0x40 & 0xff);\n    if (floatB_mantissa != 0) {\n      shiftedMantissaA = shiftedMantissaA | 2;\n    }\n    normalizedMantissaA = (int)normalizedMantissaA >> (exponentDifference - 0x20 & 0xff);\n    mantissaResult = doubleMantissaA + normalizedMantissaA;\n    doubleExponentB = doubleExponentB + ((int)normalizedMantissaA >> 0x1f) + (uint)CARRY4(doubleMantissaA,normalizedMantissaA);\n  }\n  floatA_exponent = doubleExponentB & 0x80000000;\n  exponentDifference = doubleExponentB;\n  if ((int)doubleExponentB < 0) {\n    isConditionTrue = shiftedMantissaA == 0;\n    shiftedMantissaA = -shiftedMantissaA;\n    exponentDifference = -mantissaResult;\n    mantissaResult = -(uint)!isConditionTrue - mantissaResult;\n    exponentDifference = -(uint)(isConditionTrue <= exponentDifference) - doubleExponentB;\n  }\n  if (0xfffff < exponentDifference) {\n    doubleMantissaA = doubleExponentA - 1;\n    if (0x1fffff < exponentDifference) {\n      doubleExponentB = exponentDifference & 1;\n      exponentDifference = exponentDifference >> 1;\n      carryBit = (byte)mantissaResult;\n      mantissaResult = (uint)(doubleExponentB != 0) << 0x1f | mantissaResult >> 1;\n      shiftedMantissaA = (uint)(carryBit & 1) << 0x1f | shiftedMantissaA >> 1;\n      doubleMantissaA = doubleExponentA;\n      if (0xffbfffff < doubleExponentA * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    isConditionTrue = 0x7fffffff < shiftedMantissaA;\n    if (shiftedMantissaA == 0x80000000) {\n      isConditionTrue = (mantissaResult & 1) != 0;\n    }\n    return CONCAT44(exponentDifference + doubleMantissaA * 0x100000 + (uint)CARRY4(mantissaResult,(uint)isConditionTrue) | floatA_exponent,\n                    mantissaResult + isConditionTrue);\n  }\n  isExponentEqual = (shiftedMantissaA & 0x80000000) != 0;\n  shiftedMantissaA = shiftedMantissaA << 1;\n  doubleMantissaA = mantissaResult * 2;\n  isConditionTrue = CARRY4(mantissaResult,mantissaResult);\n  mantissaResult = mantissaResult * 2 + (uint)isExponentEqual;\n  exponentDifference = exponentDifference * 2 + (uint)(isConditionTrue || CARRY4(doubleMantissaA,(uint)isExponentEqual));\n  doubleMantissaA = doubleExponentA - 2;\n  if ((exponentDifference & 0x100000) != 0) goto LAB_08000278;\n  normalizedMantissaA = mantissaResult;\n  doubleExponentA = exponentDifference;\n  if (exponentDifference == 0) {\n    normalizedMantissaA = 0;\n    doubleExponentA = mantissaResult;\n  }\n  shiftedExponentA = count_leading_zeroes(doubleExponentA);\n  if (exponentDifference == 0) {\n    shiftedExponentA = shiftedExponentA + 0x20;\n  }\n  mantissaResult = shiftedExponentA - 0xb;\n  isCarry = SBORROW4(mantissaResult,0x20);\n  exponentDifference = shiftedExponentA - 0x2b;\n  isConditionTrue = (int)exponentDifference < 0;\n  isExponentEqual = exponentDifference == 0;\n  if ((int)mantissaResult < 0x20) {\n    isCarry = SCARRY4(exponentDifference,0xc);\n    shiftedExponentA = shiftedExponentA + -0x1f;\n    isConditionTrue = shiftedExponentA < 0;\n    isExponentEqual = shiftedExponentA == 0;\n    exponentDifference = mantissaResult;\n    if (!isExponentEqual && isConditionTrue == isCarry) {\n      normalizedMantissaA = doubleExponentA << (mantissaResult & 0xff);\n      doubleExponentA = doubleExponentA >> (0xcU - shiftedExponentA & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (isExponentEqual || isConditionTrue != isCarry) {\n    shiftedMantissaA = 0x20 - exponentDifference;\n  }\n  doubleExponentA = doubleExponentA << (exponentDifference & 0xff);\n  if (isExponentEqual || isConditionTrue != isCarry) {\n    doubleExponentA = doubleExponentA | normalizedMantissaA >> (shiftedMantissaA & 0xff);\n  }\n  if (isExponentEqual || isConditionTrue != isCarry) {\n    normalizedMantissaA = normalizedMantissaA << (exponentDifference & 0xff);\n  }\nLAB_080002f0:\n  if ((int)mantissaResult <= (int)doubleMantissaA) {\n    return CONCAT44(doubleExponentA + (doubleMantissaA - mantissaResult) * 0x100000 | floatA_exponent,normalizedMantissaA);\n  }\n  exponentDifference = ~(doubleMantissaA - mantissaResult);\n  if ((int)exponentDifference < 0x1f) {\n    shiftedExponentA = exponentDifference - 0x13;\n    if (shiftedExponentA != 0 && shiftedExponentA < 0 == SCARRY4(exponentDifference - 0x1f,0xc)) {\n      return CONCAT44(doubleExponentB,normalizedMantissaA >> (0x20 - (0xcU - shiftedExponentA) & 0xff) | doubleExponentA << (0xcU - shiftedExponentA & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    exponentDifference = exponentDifference + 1;\n    return CONCAT44(floatA_exponent | doubleExponentA >> (exponentDifference & 0xff),\n                    normalizedMantissaA >> (exponentDifference & 0xff) | doubleExponentA << (0x20 - exponentDifference & 0xff));\n  }\n  return CONCAT44(doubleExponentB,doubleExponentA >> (exponentDifference - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800016c",
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08006228",
                "FUN_080071c0",
                "FUN_080070b0",
                "FUN_08006c0c",
                "FUN_08006070"
            ],
            "imported": false,
            "current_name": "calculate_float_multiplication_0800016c"
        },
        "FUN_08001b58": {
            "renaming": {
                "FUN_08001b58": "process_parameters_08001b58",
                "param_1": "input_params",
                "puVar1": "register_1",
                "puVar2": "register_2",
                "iVar3": "current_time",
                "iVar4": "previous_time",
                "uVar5": "leading_zeroes_count"
            },
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001eec) */\n/* WARNING: Removing unreachable block (ram,0x08001ee8) */\n\nundefined4 process_parameters_08001b58(int *input_params)\n\n{\n  uint *register_1;\n  uint *register_2;\n  int current_time;\n  int previous_time;\n  uint leading_zeroes_count;\n  \n  register_1 = DAT_08001e70;\n  if (*input_params << 0x1f < 0) {\n    if (((DAT_08001e70[1] & 0xc) == 4) ||\n       (((DAT_08001e70[1] & 0xc) == 8 && ((int)(DAT_08001e70[1] << 0xf) < 0)))) {\n      leading_zeroes_count = count_leading_zeroes(0x4000);\n      if (((int)((*DAT_08001e70 >> (leading_zeroes_count & 0x1f)) << 0x1f) < 0) && (input_params[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      previous_time = input_params[1];\n      if (previous_time == 0x10000) {\nLAB_08001c1e:\n        leading_zeroes_count = *register_1 | 0x10000;\n      }\n      else {\n        if (previous_time == 0) {\n          *DAT_08001e70 = *DAT_08001e70 & 0xfffeffff;\n          *register_1 = *register_1 & 0xfffbffff;\n          previous_time = FUN_0800115c();\n          while (leading_zeroes_count = count_leading_zeroes(0x4000),\n                (int)((*register_1 >> (leading_zeroes_count & 0x1f)) << 0x1f) < 0) {\n            current_time = FUN_0800115c();\n            if (100 < (uint)(current_time - previous_time)) {\n              return 3;\n            }\n          }\n          goto LAB_08001b64;\n        }\n        if (previous_time == 0x50000) {\n          *DAT_08001e70 = *DAT_08001e70 | 0x40000;\n          goto LAB_08001c1e;\n        }\n        *DAT_08001e70 = *DAT_08001e70 & 0xfffeffff;\n        leading_zeroes_count = *register_1 & 0xfffbffff;\n      }\n      *register_1 = leading_zeroes_count;\n      previous_time = FUN_0800115c();\n      while (leading_zeroes_count = count_leading_zeroes(0x4000), -1 < (int)((*register_1 >> (leading_zeroes_count & 0x1f)) << 0x1f))\n      {\n        current_time = FUN_0800115c();\n        if (100 < (uint)(current_time - previous_time)) {\n          return 3;\n        }\n      }\n    }\n  }\nLAB_08001b64:\n  register_1 = DAT_08001e70;\n  if (*input_params << 0x1e < 0) {\n    if (((DAT_08001e70[1] & 0xc) == 0) ||\n       (((DAT_08001e70[1] & 0xc) == 8 && (-1 < (int)(DAT_08001e70[1] << 0xf))))) {\n      leading_zeroes_count = count_leading_zeroes(0x40000000);\n      if (((int)((*DAT_08001e70 >> (leading_zeroes_count & 0x1f)) << 0x1f) < 0) && (input_params[4] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      if (input_params[4] == 0) {\n        previous_time = count_leading_zeroes(0x80000000);\n        *(undefined4 *)(previous_time * 4 + 0x42420000) = 0;\n        previous_time = FUN_0800115c();\n        while (leading_zeroes_count = count_leading_zeroes(0x40000000),\n              (int)((*register_1 >> (leading_zeroes_count & 0x1f)) << 0x1f) < 0) {\n          current_time = FUN_0800115c();\n          if (2 < (uint)(current_time - previous_time)) {\n            return 3;\n          }\n        }\n        goto LAB_08001b6c;\n      }\n      previous_time = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(previous_time * 4 + 0x42420000) = 1;\n      previous_time = FUN_0800115c();\n      while (leading_zeroes_count = count_leading_zeroes(0x40000000),\n            -1 < (int)((*register_1 >> (leading_zeroes_count & 0x1f)) << 0x1f)) {\n        current_time = FUN_0800115c();\n        if (2 < (uint)(current_time - previous_time)) {\n          return 3;\n        }\n      }\n    }\n    leading_zeroes_count = count_leading_zeroes(0x1f000000);\n    *register_1 = input_params[5] << (leading_zeroes_count & 0xff) | *register_1 & 0xffffff07;\n  }\nLAB_08001b6c:\n  register_1 = DAT_08001e70;\n  if (*input_params << 0x1c < 0) {\n    if (input_params[6] == 0) {\n      previous_time = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(DAT_08001e74 + previous_time * 4) = 0;\n      previous_time = FUN_0800115c();\n      while (leading_zeroes_count = count_leading_zeroes(0x40000000),\n            (int)((register_1[9] >> (leading_zeroes_count & 0x1f)) << 0x1f) < 0) {\n        current_time = FUN_0800115c();\n        if (2 < (uint)(current_time - previous_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      previous_time = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(DAT_08001e74 + previous_time * 4) = 1;\n      previous_time = FUN_0800115c();\n      while (leading_zeroes_count = count_leading_zeroes(0x40000000),\n            -1 < (int)((register_1[9] >> (leading_zeroes_count & 0x1f)) << 0x1f)) {\n        current_time = FUN_0800115c();\n        if (2 < (uint)(current_time - previous_time)) {\n          return 3;\n        }\n      }\n      do_nothing_08001168(1);\n    }\n  }\n  register_2 = DAT_08001e78;\n  register_1 = DAT_08001e70;\n  if (-1 < *input_params << 0x1d) goto LAB_08001bc2;\n  DAT_08001e70[7] = DAT_08001e70[7] | 0x10000000;\n  *register_2 = *register_2 | 0x100;\n  previous_time = FUN_0800115c();\n  while (-1 < (int)(*register_2 << 0x17)) {\n    current_time = FUN_0800115c();\n    if (100 < (uint)(current_time - previous_time)) {\n      return 3;\n    }\n  }\n  previous_time = input_params[3];\n  if (previous_time == 1) {\nLAB_08001e1a:\n    leading_zeroes_count = register_1[8] | 1;\n  }\n  else {\n    if (previous_time == 0) {\n      register_1[8] = register_1[8] & 0xfffffffe;\n      register_1[8] = register_1[8] & 0xfffffffb;\n      previous_time = FUN_0800115c();\n      while (leading_zeroes_count = count_leading_zeroes(0x40000000),\n            (int)((register_1[8] >> (leading_zeroes_count & 0x1f)) << 0x1f) < 0) {\n        current_time = FUN_0800115c();\n        if (5000 < (uint)(current_time - previous_time)) {\n          return 3;\n        }\n      }\n      goto LAB_08001bc2;\n    }\n    if (previous_time == 5) {\n      register_1[8] = register_1[8] | 4;\n      goto LAB_08001e1a;\n    }\n    register_1[8] = register_1[8] & 0xfffffffe;\n    leading_zeroes_count = register_1[8] & 0xfffffffb;\n  }\n  register_1[8] = leading_zeroes_count;\n  previous_time = FUN_0800115c();\n  while (leading_zeroes_count = count_leading_zeroes(0x40000000), -1 < (int)((register_1[8] >> (leading_zeroes_count & 0x1f)) << 0x1f)\n        ) {\n    current_time = FUN_0800115c();\n    if (5000 < (uint)(current_time - previous_time)) {\n      return 3;\n    }\n  }\nLAB_08001bc2:\n  register_1 = DAT_08002004;\n  if (input_params[7] == 0) {\n    return 0;\n  }\n  if ((DAT_08002004[1] & 0xc) != 8) {\n    if (input_params[7] != 2) {\n      previous_time = count_leading_zeroes(0x80);\n      *(undefined4 *)(previous_time * 4 + 0x42420000) = 0;\n      previous_time = FUN_0800115c();\n      do {\n        leading_zeroes_count = count_leading_zeroes(0x40);\n        if (-1 < (int)((*register_1 >> (leading_zeroes_count & 0x1f)) << 0x1f)) {\n          return 0;\n        }\n        current_time = FUN_0800115c();\n      } while ((uint)(current_time - previous_time) < 3);\n      return 3;\n    }\n    previous_time = count_leading_zeroes(0x80);\n    *(undefined4 *)(previous_time * 4 + 0x42420000) = 0;\n    previous_time = FUN_0800115c();\n    do {\n      leading_zeroes_count = count_leading_zeroes(0x40);\n      if (-1 < (int)((*register_1 >> (leading_zeroes_count & 0x1f)) << 0x1f)) {\n        leading_zeroes_count = input_params[8];\n        if (leading_zeroes_count == 0x10000) {\n          register_1[1] = register_1[1] & 0xfffdffff | input_params[2];\n        }\n        register_1[1] = leading_zeroes_count | input_params[9] | register_1[1] & 0xffc2ffff;\n        previous_time = count_leading_zeroes(0x80);\n        *(undefined4 *)(previous_time * 4 + 0x42420000) = 1;\n        previous_time = FUN_0800115c();\n        do {\n          leading_zeroes_count = count_leading_zeroes(0x40);\n          if ((int)((*register_1 >> (leading_zeroes_count & 0x1f)) << 0x1f) < 0) {\n            return 0;\n          }\n          current_time = FUN_0800115c();\n        } while ((uint)(current_time - previous_time) < 3);\n        return 3;\n      }\n      current_time = FUN_0800115c();\n    } while ((uint)(current_time - previous_time) < 3);\n    return 3;\n  }\n  return 1;\n}\n\n",
            "called": [
                "FUN_08001168",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001b58",
            "calling": [
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "process_parameters_08001b58"
        },
        "FUN_08007092": {
            "renaming": {
                "FUN_08007092": "calculate_bit_shift_08007092",
                "param_1": "inputValue",
                "param_2": "bitMask"
            },
            "code": "\nuint calculateBitShift_08007092(undefined4 inputValue,uint bitMask)\n\n{\n  return (bitMask | 0x80000000) + 0x100000 >> 0x1f;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007092",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "calculate_bit_shift_08007092"
        },
        "FUN_0800290c": {
            "renaming": {
                "FUN_0800290c": "process_data_0800290c",
                "param_1": "data",
                "bVar1": "byteValue",
                "iVar2": "intVar",
                "uVar3": "uintVar",
                "uVar4": "undefinedVar",
                "sVar5": "shortVar",
                "puVar6": "ushortPtr",
                "puVar7": "updatedUshortPtr",
                "bVar8": "boolVar"
            },
            "code": "\nundefined4 processData_0800290c(int *data)\n\n{\n  byte byteValue;\n  int intVar;\n  uint uintVar;\n  undefined4 undefinedVar;\n  short shortVar;\n  ushort *ushortPtr;\n  ushort *updatedUshortPtr;\n  bool boolVar;\n  \n  if ((*(byte *)((int)data + 0x39) & 0xef) != 0x22) {\n    return 2;\n  }\n  intVar = *data;\n  ushortPtr = (ushort *)data[10];\n  if (data[2] == 0x1000) {\n    if (data[4] == 0) {\n      updatedUshortPtr = ushortPtr + 1;\n      *ushortPtr = (ushort)((uint)(*(int *)(intVar + 4) << 0x17) >> 0x17);\n    }\n    else {\n      updatedUshortPtr = (ushort *)((int)ushortPtr + 1);\n      *ushortPtr = (ushort)*(int *)(intVar + 4) & 0xff;\n    }\n    data[10] = (int)updatedUshortPtr;\n  }\n  else {\n    if (data[4] == 0) {\n      byteValue = (byte)*(undefined4 *)(intVar + 4);\n      data[10] = (int)ushortPtr + 1;\n    }\n    else {\n      undefinedVar = *(undefined4 *)(intVar + 4);\n      data[10] = (int)ushortPtr + 1;\n      byteValue = (byte)undefinedVar & 0x7f;\n    }\n    *(byte *)ushortPtr = byteValue;\n  }\n  shortVar = *(short *)((int)data + 0x2e) + -1;\n  *(short *)((int)data + 0x2e) = shortVar;\n  if (shortVar == 0) {\n    intVar = *data;\n    *(uint *)(intVar + 0xc) = *(uint *)(intVar + 0xc) & 0xffffffdf;\n    uintVar = (uint)*(byte *)((int)data + 0x39);\n    boolVar = uintVar != 0x32;\n    if (boolVar) {\n      uintVar = *(uint *)(intVar + 0xc) & 0xfffffeff;\n    }\n    else {\n      intVar = 0x12;\n    }\n    if (boolVar) {\n      *(uint *)(intVar + 0xc) = uintVar;\n      uintVar = *(uint *)(intVar + 0x14) & 0xfffffffe;\n    }\n    if (boolVar) {\n      *(uint *)(intVar + 0x14) = uintVar;\n      intVar = 1;\n    }\n    *(char *)((int)data + 0x39) = (char)intVar;\n    FUN_08004c30();\n  }\n  return 0;\n}\n\n",
            "called": [
                "FUN_08004c30"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800290c",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": false,
            "current_name": "process_data_0800290c"
        },
        "FUN_08002f28": {
            "renaming": {
                "FUN_08002f28": "process_data_08002f28",
                "sVar1": "shortVar1",
                "puVar2": "ptrVar2",
                "puVar3": "ptrVar3",
                "puVar4": "ptrVar4",
                "uVar5": "ushortVar5",
                "iVar6": "intVar6",
                "uVar7": "uintVar7",
                "iVar8": "intVar8"
            },
            "code": "\nvoid processData_08002f28(void)\n\n{\n  short shortVar1;\n  undefined *ptrVar2;\n  undefined *ptrVar3;\n  undefined *ptrVar4;\n  undefined2 ushortVar5;\n  int intVar6;\n  undefined4 uintVar7;\n  int intVar8;\n  \n  FUN_08002b48();\n  FUNC_08002bf0();\n  FUN_08002d88();\n  intVar6 = thunk_FUN_0800115c();\n  ptrVar3 = PTR_DAT_08003004;\n  ptrVar2 = PTR_DAT_08003000;\n  intVar8 = *(int *)PTR_DAT_08003000;\n  *(int *)PTR_DAT_08003004 = intVar6;\n  uintVar7 = FUN_08000c3c(intVar6 - intVar8);\n  FUN_08000e54(uintVar7,DAT_08003008);\n  FUN_08003320();\n  ptrVar4 = PTR_DAT_0800300c;\n  *(undefined4 *)ptrVar2 = *(undefined4 *)ptrVar3;\n  FUN_08003330(*(int *)(ptrVar4 + 4) + -0x80000000,*(int *)ptrVar4 + -0x80000000,\n               *(undefined4 *)(ptrVar4 + 8),*(undefined4 *)(PTR_DAT_08003018 + 4),\n               *(undefined4 *)PTR_DAT_08003018,*(int *)(PTR_DAT_08003018 + 8) + -0x80000000,\n               *(undefined4 *)PTR_DAT_08003014,*(undefined4 *)(PTR_DAT_08003014 + 4),\n               *(undefined4 *)(PTR_DAT_08003014 + 8),PTR_DAT_08003010);\n  ptrVar4 = PTR_DAT_08003024;\n  ptrVar3 = PTR_DAT_08003020;\n  ptrVar2 = PTR_DAT_0800301c;\n  *(short *)PTR_DAT_08003020 = (short)((uint)(int)*(short *)PTR_DAT_0800301c / 100);\n  shortVar1 = *(short *)(ptrVar2 + 2);\n  *(short *)(ptrVar3 + 4) = (short)((uint)(int)*(short *)(ptrVar2 + 4) / 100);\n  ptrVar2 = PTR_DAT_08003028;\n  *(short *)(ptrVar3 + 2) = (short)((uint)(int)shortVar1 / 100);\n  *(undefined2 *)(ptrVar3 + 6) = *(undefined2 *)ptrVar2;\n  ushortVar5 = *(undefined2 *)(ptrVar2 + 4);\n  *(undefined2 *)(ptrVar3 + 8) = *(undefined2 *)(ptrVar2 + 2);\n  *(undefined2 *)(ptrVar3 + 10) = ushortVar5;\n  ptrVar2 = PTR_DAT_0800302c;\n  *(undefined2 *)(ptrVar3 + 0xc) = *(undefined2 *)PTR_DAT_0800302c;\n  ushortVar5 = *(undefined2 *)(ptrVar2 + 4);\n  *(undefined2 *)(ptrVar3 + 0xe) = *(undefined2 *)(ptrVar2 + 2);\n  *(undefined2 *)(ptrVar3 + 0x10) = ushortVar5;\n  uintVar7 = FUN_08002ed4();\n  FUN_08000cec(uintVar7,DAT_08003030);\n  ushortVar5 = FUN_08001078();\n  *(undefined2 *)ptrVar4 = ushortVar5;\n  uintVar7 = FUN_08002ec0();\n  FUN_08000cec(uintVar7,DAT_08003030);\n  ushortVar5 = FUN_08001078();\n  *(undefined2 *)(ptrVar4 + 2) = ushortVar5;\n  FUN_08002ee8();\n  ushortVar5 = FUN_08001078();\n  *(undefined2 *)(ptrVar4 + 4) = ushortVar5;\n  return;\n}\n\n",
            "called": [
                "FUN_08000e54",
                "FUN_08001078",
                "FUN_08003330",
                "thunk_FUN_0800115c",
                "FUN_08003320",
                "FUN_08002b48",
                "FUN_08000c3c",
                "FUN_08002ee8",
                "FUN_08000cec",
                "FUN_08002d88",
                "FUN_08002ed4",
                "FUN_08002ec0",
                "FUN_08002bf0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f28",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "process_data_08002f28"
        },
        "FUN_08004384": {
            "renaming": {
                "FUN_08004384": "update_and_call_08004384",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "puVar1": "data_ptr",
                "local_14": "value1",
                "uStack_10": "value2",
                "local_c": "masked_value"
            },
            "code": "\nvoid update_and_call_08004384(undefined4 arg1,undefined4 arg2,undefined4 arg3,uint arg4)\n\n{\n  undefined *data_ptr;\n  undefined4 value1;\n  undefined4 value2;\n  uint masked_value;\n  \n  data_ptr = PTR_DAT_080043b8;\n  PTR_DAT_080043b8[4] = 7;\n  data_ptr[5] = 0;\n  data_ptr[6] = 0x2a;\n  data_ptr[7] = 0;\n  value1 = *(undefined4 *)data_ptr;\n  value2 = *(undefined4 *)(data_ptr + 4);\n  data_ptr[8] = 0;\n  data_ptr[9] = 0;\n  data_ptr[10] = 0;\n  masked_value = arg4 & 0xff000000 | (uint)*(ushort *)(data_ptr + 8);\n  FUN_08004300(0x65,&value1,0xb,*(ushort *)(data_ptr + 8),arg1);\n  return;\n}\n\n",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004384",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "update_and_call_08004384"
        },
        "FUN_080009a0": {
            "renaming": {
                "FUN_080009a0": "check_status_080009a0",
                "in_ZR": "statusFlag"
            },
            "code": "\nbool checkStatus_080009a0(void)\n\n{\n  char statusFlag;\n  \n  FUN_08000990();\n  return statusFlag != '\\0';\n}\n\n",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009a0",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "check_status_080009a0"
        },
        "FUN_0800290a": {
            "renaming": {
                "FUN_0800290a": "do_nothing_0800290a"
            },
            "code": "\nvoid do_nothing_0800290a(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800290a",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": false,
            "current_name": "do_nothing_0800290a"
        },
        "FUN_08003298": {
            "renaming": {
                "FUN_08003298": "initialize_data_08003298",
                "puVar1": "srcPointer",
                "puVar2": "dataPointer1",
                "puVar3": "dataPointer2",
                "iVar4": "index",
                "local_1c": "highByte",
                "local_1b": "lowByte"
            },
            "code": "\nvoid initializeData_08003298(void)\n\n{\n  undefined *srcPointer;\n  undefined *dataPointer1;\n  undefined *dataPointer2;\n  int index;\n  undefined highByte;\n  undefined lowByte;\n  \n  index = 0;\n  FUN_0800403c(0xee,0x1e,1);\n  thunk_do_nothing_08001168(10);\n  dataPointer1 = PTR_DAT_0800330c;\n  srcPointer = PTR_s____Src_MS5611_c_08003308;\n  *PTR_DAT_08003304 = 8;\n  do {\n    highByte = 0;\n    lowByte = 0;\n    FUN_080040e8(0xee,index + 0xa0U & 0xffff,&highByte,2,srcPointer,0x7c);\n    *(ushort *)(dataPointer1 + index) = CONCAT11(highByte,lowByte);\n    dataPointer2 = PTR_DAT_08003310;\n    index = index + 2;\n  } while (index != 0x10);\n  index = 0;\n  do {\n    *(undefined4 *)(dataPointer2 + index * 4) = 0;\n    index = index + 1;\n  } while (index != 0x14);\n  return;\n}\n\n",
            "called": [
                "thunk_FUN_08001168",
                "FUN_080040e8",
                "FUN_0800403c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003298",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "initialize_data_08003298"
        },
        "FUN_08004300": {
            "renaming": {
                "FUN_08004300": "process_data_08004300",
                "param_1": "inputValue",
                "param_2": "byteArray",
                "param_3": "arraySize",
                "uVar1": "xorResult",
                "pbVar2": "byteIterator"
            },
            "code": "\nvoid processData_08004300(uint inputValue,byte *byteArray,uint arraySize)\n\n{\n  uint xorResult;\n  byte *byteIterator;\n  \n  FUN_08004c8c(PTR_DAT_08004344);\n  FUN_08004c18(arraySize & 0xff);\n  xorResult = arraySize & 0xff ^ inputValue;\n  FUN_08004c18(inputValue);\n  for (byteIterator = byteArray; (int)byteIterator - (int)byteArray < (int)arraySize; byteIterator = byteIterator + 1) {\n    FUN_08004c18(*byteIterator);\n    xorResult = xorResult ^ *byteIterator;\n  }\n  FUN_08004c18(xorResult);\n  return;\n}\n\n",
            "called": [
                "FUN_08004c18",
                "FUN_08004c8c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004300",
            "calling": [
                "FUN_08004410",
                "FUN_08004458",
                "FUN_08004384",
                "FUN_080043f0",
                "FUN_08004434",
                "FUN_080043bc",
                "FUN_08004348"
            ],
            "imported": false,
            "current_name": "process_data_08004300"
        },
        "FUN_08005630": {
            "renaming": {
                "FUN_08005630": "copy_array_elements_08005630",
                "param_1": "destination_offset",
                "param_2": "source_array",
                "param_3": "copy_length",
                "puVar1": "end_pointer",
                "puVar2": "destination_pointer"
            },
            "code": "\nvoid copy_array_elements_08005630(int destination_offset,undefined *source_array,int copy_length)\n\n{\n  undefined *end_pointer;\n  undefined *destination_pointer;\n  \n  destination_pointer = (undefined *)(destination_offset + -1);\n  end_pointer = source_array + copy_length;\n  for (; source_array != end_pointer; source_array = source_array + 1) {\n    destination_pointer = destination_pointer + 1;\n    *destination_pointer = *source_array;\n  }\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005630",
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "imported": false,
            "current_name": "copy_array_elements_08005630"
        },
        "FUN_08003330": {
            "renaming": {
                "FUN_08003330": "process_data_08003330",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "param_6": "input6",
                "param_7": "input7",
                "param_8": "input8",
                "param_9": "input9",
                "param_10": "output",
                "uVar28": "tempVar1",
                "iVar29": "tempVar2",
                "uVar31": "tempVar3",
                "uVar30": "tempVar4",
                "uVar2": "calculation1",
                "uVar3": "calculation2",
                "uVar5": "calculation3",
                "uVar6": "calculation4",
                "uVar7": "calculation5",
                "iVar4": "intermediateResult1",
                "iVar9": "intermediateResult2",
                "iVar20": "intermediateResult3",
                "iVar27": "intermediateResult4",
                "uVar32": "longCalc1",
                "uVar33": "longCalc2",
                "puVar1": "pointer1"
            },
            "code": "\nvoid processData_08003330(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 undefined4 input5,undefined4 input6,undefined4 input7,undefined4 input8,\n                 undefined4 input9,undefined4 *output)\n\n{\n  undefined *pointer1;\n  undefined4 calculation1;\n  undefined4 calculation2;\n  int intermediateResult1;\n  undefined4 calculation3;\n  undefined4 calculation4;\n  undefined4 calculation5;\n  undefined4 uVar8;\n  int intermediateResult2;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  undefined4 uVar13;\n  undefined4 uVar14;\n  undefined4 uVar15;\n  undefined4 uVar16;\n  undefined4 uVar17;\n  undefined4 uVar18;\n  undefined4 uVar19;\n  int intermediateResult3;\n  undefined4 calculation11;\n  undefined4 calculation12;\n  undefined4 calculation13;\n  undefined4 calculation14;\n  undefined4 calculation15;\n  undefined4 calculation16;\n  int intermediateResult4;\n  undefined4 tempVar1;\n  int tempVar2;\n  undefined4 tempVar4;\n  undefined4 tempVar3;\n  undefined8 longCalc1;\n  undefined8 longCalc2;\n  \n  tempVar1 = *(undefined4 *)PTR_DAT_080035d8;\n  tempVar2 = *(int *)(PTR_DAT_080035d8 + 4);\n  tempVar3 = *(undefined4 *)(PTR_DAT_080035d8 + 8);\n  tempVar4 = *(undefined4 *)(PTR_DAT_080035d8 + 0xc);\n  calculation1 = FUN_08000cec(input1,input1);\n  calculation2 = FUN_08000cec(input2);\n  calculation1 = FUN_08000adc(calculation1,calculation2);\n  calculation2 = FUN_08000cec(input3);\n  FUN_08000adc(calculation1,calculation2);\n  FUN_08000428();\n  FUN_08005bc8();\n  calculation1 = FUN_08000a30();\n  intermediateResult1 = FUN_08001014(calculation1,0);\n  if (intermediateResult1 == 0) {\n    calculation2 = FUN_08000cec(input7);\n    calculation3 = FUN_08000cec(input8);\n    calculation2 = FUN_08000adc(calculation2,calculation3);\n    calculation3 = FUN_08000cec(input9);\n    FUN_08000adc(calculation2,calculation3);\n    FUN_08000428();\n    FUN_08005bc8();\n    calculation2 = FUN_08000a30();\n    intermediateResult1 = FUN_08001014(calculation2,0);\n    if (intermediateResult1 == 0) {\n      longCalc1 = FUN_08000428(input4);\n      FUN_080004d0((int)longCalc1,(int)((ulonglong)longCalc1 >> 0x20),DAT_080035d0,DAT_080035d4);\n      calculation3 = FUN_08000a30();\n      longCalc1 = FUN_08000428(input5);\n      FUN_080004d0((int)longCalc1,(int)((ulonglong)longCalc1 >> 0x20),DAT_080035d0,DAT_080035d4);\n      calculation4 = FUN_08000a30();\n      longCalc1 = FUN_08000428(input6);\n      FUN_080004d0((int)longCalc1,(int)((ulonglong)longCalc1 >> 0x20),DAT_080035d0,DAT_080035d4);\n      calculation5 = FUN_08000a30();\n      intermediateResult1 = FUN_08000adc(tempVar1);\n      uVar8 = FUN_08000adc(tempVar2);\n      intermediateResult2 = FUN_08000adc(tempVar3,tempVar3);\n      uVar10 = FUN_08000adc(tempVar4,tempVar4);\n      uVar11 = FUN_08000cec(tempVar1);\n      uVar12 = FUN_08000cec(tempVar1,tempVar2);\n      uVar13 = FUN_08000cec(tempVar1,tempVar3);\n      uVar14 = FUN_08000cec(tempVar2);\n      uVar15 = FUN_08000cec(tempVar2,tempVar4);\n      uVar16 = FUN_08000cec(tempVar3,tempVar3);\n      uVar17 = FUN_08000cec(tempVar4,tempVar4);\n      calculation1 = FUN_08000e54(0x3f800000,calculation1);\n      calculation2 = FUN_08000e54(0x3f800000,calculation2);\n      uVar18 = FUN_08000cec(input7,calculation2);\n      uVar19 = FUN_08000cec(input8,calculation2);\n      calculation2 = FUN_08000cec(input9,calculation2);\n      intermediateResult3 = FUN_08000cec(intermediateResult1,uVar18);\n      calculation11 = FUN_08000cec(intermediateResult1,uVar19);\n      calculation12 = FUN_08000cec(intermediateResult1,calculation2);\n      calculation13 = FUN_08000cec(uVar8,uVar18);\n      calculation14 = FUN_08000cec(uVar11,uVar18);\n      calculation15 = FUN_08000cec(tempVar4,calculation11);\n      calculation14 = FUN_08000ad8(calculation14,calculation15);\n      calculation15 = FUN_08000cec(tempVar3,calculation12);\n      calculation14 = FUN_08000adc(calculation14,calculation15);\n      calculation15 = FUN_08000cec(uVar14,uVar18);\n      calculation14 = FUN_08000adc(calculation14,calculation15);\n      calculation15 = FUN_08000cec(uVar8,uVar19);\n      calculation15 = FUN_08000cec(calculation15,tempVar3);\n      calculation14 = FUN_08000adc(calculation14,calculation15);\n      calculation15 = FUN_08000cec(uVar8,calculation2);\n      calculation15 = FUN_08000cec(calculation15,tempVar4);\n      calculation14 = FUN_08000adc(calculation14,calculation15);\n      calculation15 = FUN_08000cec(uVar16,uVar18);\n      calculation14 = FUN_08000ad8(calculation14,calculation15);\n      calculation15 = FUN_08000cec(uVar17,uVar18);\n      calculation14 = FUN_08000ad8(calculation14,calculation15);\n      calculation15 = FUN_08000cec(tempVar4,intermediateResult3);\n      calculation16 = FUN_08000cec(uVar11,uVar19);\n      calculation15 = FUN_08000adc(calculation15,calculation16);\n      calculation12 = FUN_08000cec(tempVar2,calculation12);\n      calculation12 = FUN_08000ad8(calculation15,calculation12);\n      calculation15 = FUN_08000cec(tempVar3,calculation13);\n      calculation12 = FUN_08000adc(calculation12,calculation15);\n      calculation15 = FUN_08000cec(uVar14,uVar19);\n      calculation12 = FUN_08000ad8(calculation12,calculation15);\n      calculation15 = FUN_08000cec(uVar16,uVar19);\n      calculation12 = FUN_08000adc(calculation12,calculation15);\n      calculation15 = FUN_08000cec(intermediateResult2,calculation2);\n      calculation15 = FUN_08000cec(calculation15,tempVar4);\n      calculation12 = FUN_08000adc(calculation12,calculation15);\n      calculation15 = FUN_08000cec(uVar17,uVar19);\n      calculation12 = FUN_08000ad8(calculation12,calculation15);\n      calculation14 = FUN_08000cec(calculation14,calculation14);\n      calculation12 = FUN_08000cec(calculation12,calculation12);\n      FUN_08000adc(calculation14,calculation12);\n      FUN_08000428();\n      FUN_08005bc8();\n      intermediateResult4 = FUN_08000a30();\n      calculation12 = FUN_08000cec(intermediateResult3 + -0x80000000,tempVar3);\n      calculation11 = FUN_08000cec(tempVar2,calculation11);\n      calculation11 = FUN_08000adc(calculation12,calculation11);\n      uVar11 = FUN_08000cec(uVar11,calculation2);\n      uVar11 = FUN_08000adc(calculation11,uVar11);\n      calculation11 = FUN_08000cec(tempVar4,calculation13);\n      uVar11 = FUN_08000adc(uVar11,calculation11);\n      calculation11 = FUN_08000cec(uVar14,calculation2);\n      uVar11 = FUN_08000ad8(uVar11,calculation11);\n      calculation11 = FUN_08000cec(intermediateResult2,uVar19);\n      calculation11 = FUN_08000cec(calculation11,tempVar4);\n      uVar11 = FUN_08000adc(uVar11,calculation11);\n      calculation11 = FUN_08000cec(uVar16,calculation2);\n      uVar11 = FUN_08000ad8(uVar11,calculation11);\n      calculation11 = FUN_08000cec(uVar17,calculation2);\n      uVar11 = FUN_08000adc(uVar11,calculation11);\n      calculation11 = FUN_08000adc(uVar11,uVar11);\n      calculation12 = FUN_08000adc(uVar15);\n      calculation13 = FUN_08000cec(tempVar3,intermediateResult1);\n      calculation12 = FUN_08000ad8(calculation12,calculation13);\n      calculation13 = FUN_08000cec(input1,calculation1);\n      calculation12 = FUN_08000ad8(calculation12,calculation13);\n      calculation13 = FUN_08000cec(tempVar4,intermediateResult2);\n      calculation14 = FUN_08000adc(uVar12);\n      calculation13 = FUN_08000adc(calculation13,calculation14);\n      calculation14 = FUN_08000cec(input2,calculation1);\n      calculation13 = FUN_08000ad8(calculation13,calculation14);\n      calculation14 = FUN_08000cec(tempVar3,uVar11);\n      calculation15 = FUN_08000ad8(0x3f000000,uVar16);\n      uVar17 = FUN_08000ad8(calculation15,uVar17);\n      uVar17 = FUN_08000cec(uVar17,intermediateResult4);\n      calculation15 = FUN_08000ad8(uVar15,uVar13);\n      calculation15 = FUN_08000cec(calculation15,uVar11);\n      uVar17 = FUN_08000adc(uVar17,calculation15);\n      uVar17 = FUN_08000ad8(uVar17,uVar18);\n      uVar18 = FUN_08000cec(tempVar2,uVar11);\n      calculation15 = FUN_08000cec(tempVar2,tempVar3);\n      calculation16 = FUN_08000cec(tempVar1,tempVar4);\n      calculation15 = FUN_08000ad8(calculation15,calculation16);\n      calculation15 = FUN_08000cec(calculation15,intermediateResult4);\n      calculation16 = FUN_08000cec(tempVar3,tempVar4);\n      uVar12 = FUN_08000adc(calculation16,uVar12);\n      uVar12 = FUN_08000cec(uVar12,uVar11);\n      uVar12 = FUN_08000adc(calculation15,uVar12);\n      uVar12 = FUN_08000ad8(uVar12,uVar19);\n      uVar19 = FUN_08000cec(tempVar3,intermediateResult4);\n      calculation15 = FUN_08000ad8(0x3f000000,uVar14);\n      calculation15 = FUN_08000ad8(calculation15,uVar16);\n      calculation15 = FUN_08000cec(calculation15,uVar11);\n      uVar13 = FUN_08000adc(uVar13,uVar15);\n      uVar13 = FUN_08000cec(uVar13,intermediateResult4);\n      uVar13 = FUN_08000adc(calculation15,uVar13);\n      calculation2 = FUN_08000ad8(uVar13,calculation2);\n      uVar13 = FUN_08000cec(intermediateResult2 + -0x80000000,calculation12);\n      uVar15 = FUN_08000cec(uVar8,calculation13);\n      uVar13 = FUN_08000adc(uVar13,uVar15);\n      uVar15 = FUN_08000cec(calculation14,uVar17);\n      uVar13 = FUN_08000ad8(uVar13,uVar15);\n      uVar15 = FUN_08000cec(tempVar4,intermediateResult4 + -0x80000000);\n      uVar15 = FUN_08000adc(uVar15,uVar18);\n      uVar15 = FUN_08000cec(uVar15,uVar12);\n      uVar13 = FUN_08000adc(uVar13,uVar15);\n      uVar15 = FUN_08000cec(uVar19,calculation2);\n      uVar13 = FUN_08000adc(uVar13,uVar15);\n      uVar14 = FUN_08000adc(uVar14);\n      uVar14 = FUN_08000ad8(0x3f800000,uVar14);\n      uVar15 = FUN_08000adc(uVar16);\n      uVar14 = FUN_08000ad8(uVar14,uVar15);\n      calculation1 = FUN_08000cec(input3,calculation1);\n      calculation1 = FUN_08000ad8(uVar14,calculation1);\n      uVar14 = FUN_08000cec(tempVar4,uVar11);\n      uVar11 = FUN_08000cec(tempVar1,uVar11);\n      uVar15 = FUN_08000cec(uVar10,calculation12);\n      uVar16 = FUN_08000cec(intermediateResult1,calculation13);\n      uVar15 = FUN_08000adc(uVar15,uVar16);\n      uVar16 = FUN_08000cec(tempVar2,0x40800000);\n      uVar16 = FUN_08000cec(uVar16,calculation1);\n      uVar15 = FUN_08000ad8(uVar15,uVar16);\n      uVar16 = FUN_08000cec(uVar17,uVar14);\n      uVar15 = FUN_08000adc(uVar15,uVar16);\n      uVar16 = FUN_08000adc(uVar19,uVar11);\n      uVar16 = FUN_08000cec(uVar16,uVar12);\n      uVar15 = FUN_08000adc(uVar15,uVar16);\n      uVar16 = FUN_08000cec(tempVar4,intermediateResult4);\n      uVar19 = FUN_08000cec(tempVar2,calculation11);\n      uVar16 = FUN_08000ad8(uVar16,uVar19);\n      uVar16 = FUN_08000cec(uVar16,calculation2);\n      uVar15 = FUN_08000adc(uVar15,uVar16);\n      intermediateResult3 = FUN_08000adc(intermediateResult4,intermediateResult4);\n      uVar16 = FUN_08000cec(tempVar2,intermediateResult4);\n      uVar19 = FUN_08000cec(intermediateResult1 + -0x80000000,calculation12);\n      uVar10 = FUN_08000cec(uVar10,calculation13);\n      uVar10 = FUN_08000adc(uVar19,uVar10);\n      uVar19 = FUN_08000cec(tempVar3,0x40800000);\n      calculation1 = FUN_08000cec(uVar19,calculation1);\n      calculation1 = FUN_08000ad8(uVar10,calculation1);\n      uVar10 = FUN_08000cec(tempVar3,intermediateResult3 + -0x80000000);\n      uVar10 = FUN_08000ad8(uVar10,uVar11);\n      uVar10 = FUN_08000cec(uVar10,uVar17);\n      calculation1 = FUN_08000adc(calculation1,uVar10);\n      uVar10 = FUN_08000adc(uVar14,uVar16);\n      uVar10 = FUN_08000cec(uVar10,uVar12);\n      calculation1 = FUN_08000adc(calculation1,uVar10);\n      uVar10 = FUN_08000cec(tempVar1,intermediateResult4);\n      uVar11 = FUN_08000cec(tempVar3,calculation11);\n      uVar10 = FUN_08000ad8(uVar10,uVar11);\n      uVar10 = FUN_08000cec(uVar10,calculation2);\n      calculation1 = FUN_08000adc(calculation1,uVar10);\n      uVar8 = FUN_08000cec(uVar8,calculation12);\n      uVar10 = FUN_08000cec(intermediateResult2,calculation13);\n      uVar8 = FUN_08000adc(uVar8,uVar10);\n      uVar10 = FUN_08000cec(tempVar4,intermediateResult3 + -0x80000000);\n      uVar10 = FUN_08000adc(uVar10,uVar18);\n      uVar10 = FUN_08000cec(uVar10,uVar17);\n      uVar8 = FUN_08000adc(uVar8,uVar10);\n      uVar10 = FUN_08000cec(tempVar1,intermediateResult4 + -0x80000000);\n      uVar10 = FUN_08000adc(uVar10,calculation14);\n      uVar10 = FUN_08000cec(uVar10,uVar12);\n      uVar8 = FUN_08000adc(uVar8,uVar10);\n      calculation2 = FUN_08000cec(calculation2,uVar16);\n      calculation2 = FUN_08000adc(uVar8,calculation2);\n      uVar8 = FUN_08000cec(uVar13);\n      uVar10 = FUN_08000cec(uVar15);\n      uVar8 = FUN_08000adc(uVar8,uVar10);\n      uVar10 = FUN_08000cec(calculation1,calculation1);\n      uVar8 = FUN_08000adc(uVar8,uVar10);\n      uVar10 = FUN_08000cec(calculation2,calculation2);\n      FUN_08000adc(uVar8,uVar10);\n      FUN_08000428();\n      FUN_08005bc8();\n      uVar8 = FUN_08000a30();\n      uVar8 = FUN_08000e54(0x3f800000,uVar8);\n      pointer1 = PTR_DAT_08003d84;\n      uVar12 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar14 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar16 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar17 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar10 = FUN_08000cec(tempVar2 + -0x80000000,calculation3);\n      uVar11 = FUN_08000cec(tempVar3,calculation4);\n      uVar10 = FUN_08000ad8(uVar10,uVar11);\n      uVar11 = FUN_08000cec(tempVar4,calculation5);\n      uVar10 = FUN_08000ad8(uVar10,uVar11);\n      uVar10 = FUN_08000cec(uVar10,0x3f000000);\n      uVar11 = FUN_08000cec(uVar13,uVar8);\n      uVar13 = *(undefined4 *)pointer1;\n      uVar11 = FUN_08000cec(uVar11,uVar12);\n      uVar10 = FUN_08000ad8(uVar10,uVar11);\n      uVar10 = FUN_08000cec(uVar10,uVar13);\n      uVar10 = FUN_08000adc(uVar10,tempVar1);\n      uVar11 = FUN_08000cec(tempVar1,calculation3);\n      uVar12 = FUN_08000cec(tempVar3,calculation5);\n      uVar13 = *(undefined4 *)pointer1;\n      uVar11 = FUN_08000adc(uVar11,uVar12);\n      uVar12 = FUN_08000cec(tempVar4,calculation4);\n      uVar11 = FUN_08000ad8(uVar11,uVar12);\n      uVar11 = FUN_08000cec(uVar11,0x3f000000);\n      uVar12 = FUN_08000cec(uVar15,uVar8);\n      uVar12 = FUN_08000cec(uVar12,uVar14);\n      uVar11 = FUN_08000ad8(uVar11,uVar12);\n      uVar11 = FUN_08000cec(uVar11,uVar13);\n      uVar11 = FUN_08000adc(uVar11,tempVar2);\n      uVar14 = *(undefined4 *)pointer1;\n      uVar12 = FUN_08000cec(tempVar1,calculation4);\n      uVar13 = FUN_08000cec(tempVar2,calculation5);\n      uVar12 = FUN_08000ad8(uVar12,uVar13);\n      uVar13 = FUN_08000cec(tempVar4,calculation3);\n      uVar12 = FUN_08000adc(uVar12,uVar13);\n      uVar12 = FUN_08000cec(uVar12,0x3f000000);\n      calculation1 = FUN_08000cec(calculation1,uVar8);\n      calculation1 = FUN_08000cec(calculation1,uVar16);\n      calculation1 = FUN_08000ad8(uVar12,calculation1);\n      calculation1 = FUN_08000cec(calculation1,uVar14);\n      calculation1 = FUN_08000adc(calculation1,tempVar3);\n      tempVar1 = FUN_08000cec(tempVar1,calculation5);\n      calculation4 = FUN_08000cec(tempVar2,calculation4);\n      tempVar1 = FUN_08000adc(tempVar1,calculation4);\n      tempVar3 = FUN_08000cec(tempVar3,calculation3);\n      tempVar1 = FUN_08000ad8(tempVar1,tempVar3);\n      tempVar1 = FUN_08000cec(tempVar1,0x3f000000);\n      calculation2 = FUN_08000cec(calculation2,uVar8);\n      calculation2 = FUN_08000cec(calculation2,uVar17);\n      tempVar3 = *(undefined4 *)pointer1;\n      calculation2 = FUN_08000ad8(tempVar1,calculation2);\n      calculation2 = FUN_08000cec(calculation2,tempVar3);\n      calculation2 = FUN_08000adc(calculation2,tempVar4);\n      tempVar1 = FUN_08000cec(uVar10,uVar10);\n      tempVar4 = FUN_08000cec(uVar11,uVar11);\n      tempVar1 = FUN_08000adc(tempVar1,tempVar4);\n      tempVar4 = FUN_08000cec(calculation1,calculation1);\n      tempVar1 = FUN_08000adc(tempVar1,tempVar4);\n      tempVar4 = FUN_08000cec(calculation2,calculation2);\n      FUN_08000adc(tempVar1,tempVar4);\n      FUN_08000428();\n      FUN_08005bc8();\n      tempVar1 = FUN_08000a30();\n      tempVar1 = FUN_08000e54(0x3f800000,tempVar1);\n      tempVar4 = FUN_08000cec(uVar10,tempVar1);\n      pointer1 = PTR_DAT_08003d88;\n      *(undefined4 *)PTR_DAT_08003d88 = tempVar4;\n      tempVar3 = FUN_08000cec(uVar11,tempVar1);\n      *(undefined4 *)(pointer1 + 4) = tempVar3;\n      calculation1 = FUN_08000cec(calculation1,tempVar1);\n      *(undefined4 *)(pointer1 + 8) = calculation1;\n      calculation2 = FUN_08000cec(calculation2,tempVar1);\n      *(undefined4 *)(pointer1 + 0xc) = calculation2;\n      calculation2 = FUN_08000cec(tempVar3,calculation2);\n      calculation1 = FUN_08000cec(tempVar4,calculation1);\n      calculation1 = FUN_08000ad8(calculation2,calculation1);\n      FUN_08000adc(calculation1,calculation1);\n      FUN_08000428();\n      longCalc1 = FUN_08005854();\n      longCalc1 = FUN_080004d0((int)longCalc1,(int)((ulonglong)longCalc1 >> 0x20),0,DAT_08003d8c);\n      FUN_08000724((int)longCalc1,(int)((ulonglong)longCalc1 >> 0x20),DAT_08003d78,DAT_08003d7c);\n      calculation1 = FUN_08000a30();\n      *output = calculation1;\n      tempVar3 = *(undefined4 *)pointer1;\n      calculation3 = *(undefined4 *)(pointer1 + 4);\n      calculation1 = FUN_08000cec(tempVar3,tempVar3);\n      calculation2 = FUN_08000cec(calculation3,calculation3);\n      calculation1 = FUN_08000ad8(calculation1,calculation2);\n      tempVar1 = *(undefined4 *)(pointer1 + 8);\n      calculation2 = FUN_08000cec(tempVar1,tempVar1);\n      calculation1 = FUN_08000ad8(calculation1,calculation2);\n      tempVar4 = *(undefined4 *)(pointer1 + 0xc);\n      calculation2 = FUN_08000cec(tempVar4,tempVar4);\n      FUN_08000adc(calculation1,calculation2);\n      longCalc1 = FUN_08000428();\n      calculation1 = FUN_08000cec(tempVar3,calculation3);\n      calculation2 = FUN_08000cec(tempVar1,tempVar4);\n      calculation1 = FUN_08000adc(calculation1,calculation2);\n      FUN_08000adc(calculation1,calculation1);\n      longCalc2 = FUN_08000428();\n      longCalc1 = thunk_FUN_08006070((int)longCalc2,(int)((ulonglong)longCalc2 >> 0x20),(int)longCalc1,\n                                  (int)((ulonglong)longCalc1 >> 0x20));\n      longCalc1 = FUN_080004d0((int)longCalc1,(int)((ulonglong)longCalc1 >> 0x20),0,DAT_08003ea8);\n      FUN_08000724((int)longCalc1,(int)((ulonglong)longCalc1 >> 0x20),DAT_08003ea0,DAT_08003ea4);\n      calculation1 = FUN_08000a30();\n      output[1] = calculation1;\n      tempVar4 = *(undefined4 *)pointer1;\n      tempVar3 = *(undefined4 *)(pointer1 + 4);\n      calculation1 = FUN_08000cec(tempVar4,tempVar4);\n      calculation2 = FUN_08000cec(tempVar3,tempVar3);\n      calculation1 = FUN_08000adc(calculation1,calculation2);\n      calculation3 = *(undefined4 *)(pointer1 + 8);\n      calculation2 = FUN_08000cec(calculation3,calculation3);\n      calculation1 = FUN_08000ad8(calculation1,calculation2);\n      tempVar1 = *(undefined4 *)(pointer1 + 0xc);\n      calculation2 = FUN_08000cec(tempVar1,tempVar1);\n      FUN_08000ad8(calculation1,calculation2);\n      longCalc1 = FUN_08000428();\n      calculation1 = FUN_08000cec(tempVar3,calculation3);\n      calculation2 = FUN_08000cec(tempVar4,tempVar1);\n      calculation1 = FUN_08000adc(calculation1,calculation2);\n      FUN_08000adc(calculation1,calculation1);\n      longCalc2 = FUN_08000428();\n      longCalc1 = thunk_FUN_08006070((int)longCalc2,(int)((ulonglong)longCalc2 >> 0x20),(int)longCalc1,\n                                  (int)((ulonglong)longCalc1 >> 0x20));\n      longCalc1 = FUN_080004d0((int)longCalc1,(int)((ulonglong)longCalc1 >> 0x20),0,DAT_08003ea8);\n      FUN_08000724((int)longCalc1,(int)((ulonglong)longCalc1 >> 0x20),DAT_08003ea0,DAT_08003ea4);\n      calculation1 = FUN_08000a30();\n      output[2] = calculation1;\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08000724",
                "FUN_08000428",
                "thunk_FUN_08006070",
                "FUN_08000adc",
                "FUN_08001014",
                "FUN_080004d0",
                "FUN_08000cec",
                "FUN_08000e54",
                "FUN_08000a30",
                "FUN_08000ad8",
                "FUN_08005854",
                "FUN_08005bc8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003330",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "process_data_08003330"
        },
        "FUN_08000980": {
            "renaming": {
                "FUN_08000980": "process_data_08000980",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "code": "\nvoid processData_08000980(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  FUN_08000990(input3,input4,input1,input2);\n  return;\n}\n\n",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000980",
            "calling": [
                "FUN_080009f0"
            ],
            "imported": false,
            "current_name": "process_data_08000980"
        },
        "FUN_08004028": {
            "renaming": {
                "FUN_08004028": "perform_operations_08004028",
                "thunk_do_nothing_08001168": "delay",
                "iVar1": "counter"
            },
            "code": "\nvoid performOperations_08004028(void)\n\n{\n  int counter;\n  \n  FUN_0800458c();\n  FUN_08003ff4();\n  counter = 3;\n  do {\n    FUN_08003f3c(1,0);\n    delay(100);\n    FUN_08003f3c(0,1);\n    delay(100);\n    FUN_08003f3c(0,0,1);\n    delay(100);\n    counter = counter + -1;\n  } while (counter != 0);\n  FUN_08003f3c(1,1);\n  return;\n}\n\n",
            "called": [
                "thunk_FUN_08001168",
                "FUN_0800458c",
                "FUN_08003f3c",
                "FUN_08003ff4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004028",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "perform_operations_08004028"
        },
        "FUN_0800708c": {
            "renaming": {
                "FUN_0800708c": "do_nothing_0800708c"
            },
            "code": "\nvoid do_nothing_0800708c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800708c",
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08006228",
                "FUN_08005854",
                "FUN_08006070"
            ],
            "imported": false,
            "current_name": "do_nothing_0800708c"
        },
        "FUN_08002368": {
            "renaming": {
                "FUN_08002368": "update_parameter_values_08002368",
                "param_1": "inputParam",
                "param_2": "updateParams",
                "uVar1": "tempVar",
                "puVar2": "pointerVar"
            },
            "code": "\nvoid updateParameterValues_08002368(uint *inputParam,uint *updateParams)\n\n{\n  uint tempVar;\n  uint *pointerVar;\n  \n  tempVar = *inputParam;\n  if ((((inputParam == DAT_080023cc) || (inputParam == (uint *)0x40000000)) ||\n      (inputParam == DAT_080023cc + -0x4a00)) || (inputParam == DAT_080023cc + -0x4900)) {\n    tempVar = tempVar & 0xffffff8f | updateParams[1];\n    if (((inputParam == DAT_080023cc) || (inputParam == (uint *)0x40000000)) ||\n       ((inputParam == DAT_080023cc + -0x4a00 || (inputParam == DAT_080023cc + -0x4900)))) {\n      tempVar = tempVar & 0xfffffcff | updateParams[3];\n    }\n  }\n  *inputParam = tempVar;\n  inputParam[0xb] = updateParams[2];\n  inputParam[10] = *updateParams;\n  pointerVar = DAT_080023cc;\n  if (inputParam == DAT_080023cc) {\n    pointerVar = (uint *)updateParams[4];\n  }\n  if (inputParam == DAT_080023cc) {\n    inputParam[0xc] = (uint)pointerVar;\n  }\n  inputParam[5] = 1;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002368",
            "calling": [
                "FUN_080023d0"
            ],
            "imported": false,
            "current_name": "update_parameter_values_08002368"
        },
        "FUN_08002520": {
            "renaming": {
                "FUN_08002520": "update_bit_field_08002520",
                "param_1": "baseAddress",
                "param_2": "bitPosition",
                "param_3": "newValue"
            },
            "code": "\nvoid updateBitField_08002520(int baseAddress,uint bitPosition,int newValue)\n\n{\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & ~(1 << (bitPosition & 0xff));\n  *(uint *)(baseAddress + 0x20) = newValue << (bitPosition & 0xff) | *(uint *)(baseAddress + 0x20);\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002520",
            "calling": [
                "FUN_08002538"
            ],
            "imported": false,
            "current_name": "update_bit_field_08002520"
        },
        "FUN_08002008": {
            "renaming": {
                "FUN_08002008": "calculate_result_08002008",
                "uVar1": "temp_var1",
                "uVar2": "temp_var2",
                "uVar3": "masked_value",
                "uVar4": "leading_zeroes",
                "uVar5": "result",
                "puVar6": "source_ptr",
                "puVar7": "destination_ptr",
                "local_24": "multiplier_array",
                "local_20": "copied_array"
            },
            "code": "\nuint calculate_result_08002008(void)\n\n{\n  undefined4 temp_var1;\n  undefined4 temp_var2;\n  uint masked_value;\n  uint leading_zeroes;\n  uint result;\n  undefined4 *source_ptr;\n  undefined4 *destination_ptr;\n  byte multiplier_array [4];\n  undefined4 copied_array [5];\n  \n  destination_ptr = copied_array;\n  source_ptr = (undefined4 *)PTR_DAT_0800208c;\n  do {\n    temp_var1 = *source_ptr;\n    temp_var2 = source_ptr[1];\n    source_ptr = source_ptr + 2;\n    *destination_ptr = temp_var1;\n    destination_ptr[1] = temp_var2;\n    destination_ptr = destination_ptr + 2;\n  } while (source_ptr != (undefined4 *)(PTR_DAT_0800208c + 0x10));\n  multiplier_array[0] = 1;\n  multiplier_array[1] = 2;\n  masked_value = *(uint *)(DAT_08002090 + 4);\n  result = DAT_08002094;\n  if ((masked_value & 0xc) == 8) {\n    leading_zeroes = count_leading_zeroes(0x3c00);\n    result = DAT_08002098;\n    if ((int)(masked_value << 0xf) < 0) {\n      result = count_leading_zeroes(0x4000);\n      result = DAT_08002094 / multiplier_array[(*(uint *)(DAT_08002090 + 4) & 0x20000) >> (result & 0xff)];\n    }\n    result = result * *(byte *)((int)copied_array + ((masked_value & 0x3c0000) >> (leading_zeroes & 0xff)));\n  }\n  return result;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002008",
            "calling": [
                "FUN_0800209c"
            ],
            "imported": false,
            "current_name": "calculate_result_08002008"
        },
        "FUN_08002404": {
            "renaming": {
                "FUN_08002404": "update_registers_08002404",
                "param_1": "registerBase",
                "param_2": "inputValues",
                "uVar1": "tempReg1",
                "uVar2": "tempReg2",
                "iVar3": "inputValue"
            },
            "code": "\nvoid updateRegisters_08002404(int registerBase,int *inputValues)\n\n{\n  uint tempReg1;\n  uint tempReg2;\n  int inputValue;\n  \n  *(uint *)(registerBase + 0x20) = *(uint *)(registerBase + 0x20) & 0xffffffef;\n  tempReg2 = *(uint *)(registerBase + 4);\n  inputValue = *inputValues;\n  tempReg1 = *(uint *)(registerBase + 0x20) & 0xffffffdf | inputValues[2] << 4;\n  if (registerBase == DAT_08002458) {\n    tempReg1 = (tempReg1 & 0xffffff7f | inputValues[3] << 4) & 0xffffffbf;\n    tempReg2 = tempReg2 & 0xfffff3ff | (inputValues[5] | inputValues[6]) << 2;\n  }\n  *(uint *)(registerBase + 4) = tempReg2;\n  *(uint *)(registerBase + 0x18) = *(uint *)(registerBase + 0x18) & 0xffff8cff | inputValue << 8;\n  *(int *)(registerBase + 0x38) = inputValues[1];\n  *(uint *)(registerBase + 0x20) = tempReg1;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002404",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "update_registers_08002404"
        },
        "FUN_08005bc8": {
            "renaming": {
                "FUN_08005bc8": "process_data_08005bc8",
                "param_1": "input_1",
                "param_2": "input_2",
                "cVar1": "check_flag",
                "iVar2": "result",
                "piVar3": "error_pointer",
                "puVar4": "status_pointer",
                "uVar5": "initial_value",
                "local_50": "data_flag",
                "local_4c": "data_pointer",
                "local_48": "data_input_1",
                "uStack_44": "data_input_2",
                "local_40": "data_copy_1",
                "uStack_3c": "data_copy_2",
                "local_38": "output",
                "local_30": "error_code"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nundefined8 processData_08005bc8(undefined4 input_1,undefined4 input_2)\n\n{\n  char check_flag;\n  int result;\n  int *error_pointer;\n  undefined4 *status_pointer;\n  undefined8 initial_value;\n  undefined4 data_flag;\n  undefined *data_pointer;\n  undefined4 data_input_1;\n  undefined4 data_input_2;\n  undefined4 data_copy_1;\n  undefined4 data_copy_2;\n  undefined8 output;\n  int error_code;\n  \n  initial_value = FUN_08006c0c();\n  check_flag = *PTR_DAT_08005c68;\n  if (check_flag == -1) {\n    return initial_value;\n  }\n  error_code = FUN_08000a04(input_1,input_2,input_1,input_2);\n  if (error_code != 0) {\n    return initial_value;\n  }\n  result = FUN_080009b4(input_1,input_2,0,0);\n  if (result == 0) {\n    return initial_value;\n  }\n  data_flag = 1;\n  data_pointer = PTR_DAT_08005c6c;\n  data_input_1 = input_1;\n  data_input_2 = input_2;\n  data_copy_1 = input_1;\n  data_copy_2 = input_2;\n  if (check_flag == '\\0') {\n    output = 0;\nLAB_08005c26:\n    result = FUN_0800709e(&data_flag);\n    if (result != 0) goto LAB_08005c2e;\n  }\n  else {\n    output = FUN_08000724(0,0,0,0);\n    if (check_flag != '\\x02') goto LAB_08005c26;\n  }\n  status_pointer = (undefined4 *)FUN_080072ac();\n  *status_pointer = 0x21;\nLAB_08005c2e:\n  if (error_code != 0) {\n    error_pointer = (int *)FUN_080072ac();\n    *error_pointer = error_code;\n  }\n  return output;\n}\n\n",
            "called": [
                "FUN_08000724",
                "FUN_080072ac",
                "FUN_080009b4",
                "FUN_08000a04",
                "FUN_0800709e",
                "FUN_08006c0c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005bc8",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "process_data_08005bc8"
        },
        "FUN_08001436": {
            "renaming": {
                "FUN_08001436": "update_flag_and_status_08001436",
                "param_1": "inputArray",
                "iVar1": "firstElement"
            },
            "code": "\nundefined4 updateFlagAndStatus_08001436(int *inputArray)\n\n{\n  int firstElement;\n  \n  firstElement = *inputArray;\n  if ((*(uint *)(firstElement + 0x14) & 0x400) != 0) {\n    *(uint *)(firstElement + 0x14) = *(uint *)(firstElement + 0x14) & 0xfffffbff;\n    inputArray[0xe] = 4;\n    *(undefined *)((int)inputArray + 0x35) = 0x20;\n    *(undefined *)(inputArray + 0xd) = 0;\n    return 1;\n  }\n  return 0;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001436",
            "calling": [
                "FUN_080014e2"
            ],
            "imported": false,
            "current_name": "update_flag_and_status_08001436"
        },
        "FUN_08004a30": {
            "renaming": {
                "FUN_08004a30": "update_data_values_08004a30",
                "puVar1": "dataPtr1",
                "puVar2": "dataPtr2",
                "puVar3": "dataPtr3",
                "uVar4": "tempVar"
            },
            "code": "\nvoid updateDataValues_08004a30(void)\n\n{\n  undefined *dataPtr1;\n  undefined *dataPtr2;\n  undefined *dataPtr3;\n  undefined4 tempVar;\n  \n  dataPtr3 = PTR_DAT_08004a7c;\n  dataPtr2 = PTR_DAT_08004a78;\n  dataPtr1 = PTR_DAT_08004a74;\n  if (PTR_DAT_08004a74[1] != '\\0') {\n    if (*PTR_DAT_08004a78 == '\\0') {\n      tempVar = FUN_08003068();\n      tempVar = FUN_08000cec(tempVar,DAT_08004a80);\n      *(undefined4 *)(dataPtr3 + 0x1c) = tempVar;\n      *dataPtr2 = 1;\n    }\n    else {\n      tempVar = FUN_08003068();\n      tempVar = FUN_08000cec(tempVar,DAT_08004a80);\n      *(undefined4 *)(dataPtr3 + 0x30) = tempVar;\n    }\n  }\n  if (dataPtr1[1] == '\\0') {\n    if (*PTR_DAT_08004a78 != '\\0') {\n      *PTR_DAT_08004a78 = 0;\n    }\n    *(undefined4 *)(PTR_DAT_08004a7c + 0x48) = *(undefined4 *)(dataPtr1 + 4);\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08003068",
                "FUN_08000cec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a30",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "update_data_values_08004a30"
        },
        "FUN_08004c70": {
            "renaming": {
                "FUN_08004c70": "process_data_08004c70",
                "puVar1": "dataPointer1",
                "puVar2": "dataPointer2",
                "uVar3": "tempVar",
                "uVar4": "flagVar",
                "iVar5": "intVar"
            },
            "code": "\nundefined4 processData_08004c70(void)\n\n{\n  undefined *dataPointer1;\n  undefined *dataPointer2;\n  undefined tempVar;\n  uint flagVar;\n  int intVar;\n  \n  FUN_08004c64();\n  dataPointer2 = PTR_DAT_08004c88;\n  dataPointer1 = PTR_DAT_08004c84;\n  if ((PTR_DAT_08004c88[0x39] == '\\x01') || (PTR_DAT_08004c88[0x39] == '\\x12')) {\n    if (PTR_DAT_08004c84 == (undefined *)0x0) {\n      return 1;\n    }\n    if (PTR_DAT_08004c88[0x38] != '\\x01') {\n      PTR_DAT_08004c88[0x38] = 1;\n      *(undefined4 *)(dataPointer2 + 0x3c) = 0;\n      *(undefined2 *)(dataPointer2 + 0x2c) = 1;\n      *(undefined2 *)(dataPointer2 + 0x2e) = 1;\n      dataPointer2[0x38] = 0;\n      if (dataPointer2[0x39] == '\\x12') {\n        tempVar = 0x32;\n      }\n      else {\n        tempVar = 0x22;\n      }\n      intVar = *(int *)dataPointer2;\n      dataPointer2[0x39] = tempVar;\n      flagVar = *(uint *)(intVar + 0xc);\n      *(undefined **)(dataPointer2 + 0x28) = dataPointer1;\n      *(uint *)(intVar + 0xc) = flagVar | 0x100;\n      *(uint *)(intVar + 0x14) = *(uint *)(intVar + 0x14) | 1;\n      *(uint *)(intVar + 0xc) = *(uint *)(intVar + 0xc) | 0x20;\n      return 0;\n    }\n  }\n  return 2;\n}\n\n",
            "called": [
                "FUN_08004c64"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c70",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "process_data_08004c70"
        },
        "FUN_08000904": {
            "renaming": {
                "FUN_08000904": "compare_and_combine_08000904",
                "param_1": "input_a1",
                "param_2": "input_a2",
                "param_3": "input_b1",
                "param_4": "input_b2",
                "uVar1": "xor_result",
                "bVar2": "comparison_result",
                "bVar3": "condition_result"
            },
            "code": "\nuint compare_and_combine_08000904(uint input_a1,uint input_a2,uint input_b1,uint input_b2)\n\n{\n  uint xor_result;\n  bool comparison_result;\n  bool condition_result;\n  \n  if (((int)(input_a2 << 1) >> 0x15 == -1 || (int)(input_b2 << 1) >> 0x15 == -1) &&\n     ((((int)(input_a2 << 1) >> 0x15 == -1 && ((input_a1 | input_a2 << 0xc) != 0)) ||\n      (((int)(input_b2 << 1) >> 0x15 == -1 && ((input_b1 | input_b2 << 0xc) != 0)))))) {\n    return 1;\n  }\n  comparison_result = (input_a1 | input_a2 << 1) == 0;\n  if (comparison_result) {\n    comparison_result = (input_b1 | input_b2 << 1) == 0;\n  }\n  if (!comparison_result) {\n    comparison_result = input_a2 == input_b2;\n  }\n  if (comparison_result) {\n    comparison_result = input_a1 == input_b1;\n  }\n  if (!comparison_result) {\n    xor_result = input_a2 ^ input_b2;\n    comparison_result = xor_result == 0;\n    if (-1 < (int)xor_result) {\n      comparison_result = input_a2 == input_b2;\n    }\n    condition_result = -1 < (int)xor_result && input_b2 <= input_a2;\n    if (comparison_result) {\n      condition_result = input_b1 <= input_a1;\n    }\n    input_b2 = (int)input_b2 >> 0x1f;\n    if (!condition_result) {\n      input_b2 = ~input_b2;\n    }\n    return input_b2 | 1;\n  }\n  return 0;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000904",
            "calling": [
                "FUN_08000990"
            ],
            "imported": false,
            "current_name": "compare_and_combine_08000904"
        },
        "FUN_0800299a": {
            "renaming": {
                "FUN_0800299a": "process_data_0800299a",
                "param_1": "data",
                "uVar1": "var1",
                "sVar2": "sVar",
                "uVar3": "var3",
                "puVar4": "ptrVar4",
                "uVar5": "var5",
                "puVar6": "ptrVar6",
                "uVar7": "var7",
                "bVar8": "boolVar8"
            },
            "code": "\nvoid processData_0800299a(uint **data)\n\n{\n  uint var1;\n  short sVar;\n  uint var3;\n  uint *ptrVar4;\n  undefined var5;\n  uint *ptrVar6;\n  uint var7;\n  bool boolVar8;\n  \n  ptrVar6 = *data;\n  var3 = *ptrVar6;\n  var1 = ptrVar6[3];\n  if ((var3 & 0xf) == 0) {\n    if (((int)(var3 << 0x1a) < 0) && ((int)(var1 << 0x1a) < 0)) {\n      FUN_0800290c();\n      return;\n    }\n  }\n  else {\n    var7 = ptrVar6[5] & 1;\n    if ((var7 != 0) || ((var1 & 0x120) != 0)) {\n      ptrVar6 = (uint *)(var3 << 0x1f);\n      if ((int)ptrVar6 < 0) {\n        boolVar8 = (int)(var1 << 0x17) < 0;\n        if (boolVar8) {\n          ptrVar6 = (uint *)((uint)data[0xf] | 1);\n        }\n        if (boolVar8) {\n          data[0xf] = ptrVar6;\n        }\n      }\n      if (((int)(var3 << 0x1d) < 0) && (var7 != 0)) {\n        data[0xf] = (uint *)((uint)data[0xf] | 2);\n      }\n      if (((int)(var3 << 0x1e) < 0) && (var7 != 0)) {\n        data[0xf] = (uint *)((uint)data[0xf] | 4);\n      }\n      if (((int)(var3 << 0x1c) < 0) && (var7 != 0)) {\n        data[0xf] = (uint *)((uint)data[0xf] | 8);\n      }\n      if (data[0xf] == (uint *)0x0) {\n        return;\n      }\n      if (((int)(var3 << 0x1a) < 0) && ((int)(var1 << 0x1a) < 0)) {\n        FUN_0800290c(data);\n      }\n      ptrVar6 = *data;\n      if ((-1 < (int)data[0xf] << 0x1c) && ((ptrVar6[5] & 0x40) == 0)) {\n        do_nothing_08002998(data);\n        data[0xf] = (uint *)0x0;\n        return;\n      }\n      ptrVar6[3] = ptrVar6[3] & 0xfffffedf;\n      ptrVar6[5] = ptrVar6[5] & 0xfffffffe;\n      *(undefined *)((int)data + 0x39) = 1;\n      do_nothing_08002998(data);\n      return;\n    }\n  }\n  if (((int)(var3 << 0x18) < 0) && ((int)(var1 << 0x18) < 0)) {\n    if ((*(byte *)((int)data + 0x39) & 0xdf) == 0x12) {\n      ptrVar4 = data[8];\n      if (data[2] == (uint *)0x1000) {\n        ptrVar6[1] = *(ushort *)ptrVar4 & 0x1ff;\n        if (data[4] == (uint *)0x0) {\n          ptrVar4 = (uint *)((int)ptrVar4 + 2);\n        }\n        else {\n          ptrVar4 = (uint *)((int)ptrVar4 + 1);\n        }\n        data[8] = ptrVar4;\n      }\n      else {\n        data[8] = (uint *)((int)ptrVar4 + 1);\n        ptrVar6[1] = (uint)*(byte *)ptrVar4;\n      }\n      sVar = *(short *)((int)data + 0x26) + -1;\n      *(short *)((int)data + 0x26) = sVar;\n      if (sVar == 0) {\n        ptrVar6[3] = ptrVar6[3] & 0xffffff7f;\n        ptrVar6[3] = ptrVar6[3] | 0x40;\n        return;\n      }\n    }\n  }\n  else if (((int)(var3 << 0x19) < 0) && ((int)(var1 << 0x19) < 0)) {\n    ptrVar6[3] = ptrVar6[3] & 0xffffffbf;\n    if (*(char *)((int)data + 0x39) == '2') {\n      var5 = 0x22;\n    }\n    else {\n      var5 = 1;\n    }\n    *(undefined *)((int)data + 0x39) = var5;\n    do_nothing_0800290a(data);\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_0800290a",
                "FUN_08002998",
                "FUN_0800290c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800299a",
            "calling": [],
            "imported": false,
            "current_name": "process_data_0800299a"
        },
        "FUN_0800114c": {
            "renaming": {
                "FUN_0800114c": "increment_counter_0800114c"
            },
            "code": "\nvoid incrementCounter_0800114c(void)\n\n{\n  *(int *)PTR_DAT_08001158 = *(int *)PTR_DAT_08001158 + 1;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800114c",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "increment_counter_0800114c"
        },
        "FUN_080052e4": {
            "renaming": {
                "FUN_080052e4": "process_data_080052e4",
                "param_1": "input_data",
                "param_2": "data_array",
                "param_3": "output_value",
                "param_4": "extra_data",
                "param_5": "callback_function",
                "iVar1": "result",
                "uVar2": "temp_value",
                "uVar3": "iteration_value",
                "bVar4": "condition"
            },
            "code": "\nundefined4\nprocess_data_080052e4(undefined4 input_data,uint *data_array,uint *output_value,undefined4 extra_data,code *callback_function)\n\n{\n  int result;\n  uint temp_value;\n  uint iteration_value;\n  bool condition;\n  \n  temp_value = data_array[4];\n  if ((int)data_array[4] < (int)data_array[2]) {\n    temp_value = data_array[2];\n  }\n  *output_value = temp_value;\n  if (*(char *)((int)data_array + 0x43) != '\\0') {\n    *output_value = temp_value + 1;\n  }\n  if ((int)(*data_array << 0x1a) < 0) {\n    *output_value = *output_value + 2;\n  }\n  temp_value = *data_array & 6;\n  if (temp_value == 0) {\n    for (; (int)temp_value < (int)(data_array[3] - *output_value); temp_value = temp_value + 1) {\n      result = (*callback_function)(input_data,extra_data,(int)data_array + 0x19,1);\n      if (result == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  temp_value = (uint)*(byte *)((int)data_array + 0x43);\n  if (temp_value != 0) {\n    temp_value = 1;\n  }\n  iteration_value = temp_value;\n  if ((int)(*data_array << 0x1a) < 0) {\n    *(undefined *)((int)data_array + temp_value + 0x43) = 0x30;\n    iteration_value = temp_value + 2;\n    *(undefined *)((int)data_array + temp_value + 0x44) = *(undefined *)((int)data_array + 0x45);\n  }\n  result = (*callback_function)(input_data,extra_data,(int)data_array + 0x43,iteration_value);\n  if (result != -1) {\n    temp_value = data_array[3];\n    condition = (*data_array & 6) != 4;\n    if (condition) {\n      temp_value = 0;\n    }\n    iteration_value = 0;\n    if (!condition) {\n      temp_value = temp_value - *output_value;\n    }\n    if (!condition) {\n      temp_value = temp_value & ~((int)temp_value >> 0x1f);\n    }\n    if ((int)data_array[4] < (int)data_array[2]) {\n      temp_value = temp_value + (data_array[2] - data_array[4]);\n    }\n    while( true ) {\n      if (temp_value == iteration_value) {\n        return 0;\n      }\n      result = (*callback_function)(input_data,extra_data,(int)data_array + 0x1a,1);\n      if (result == -1) break;\n      iteration_value = iteration_value + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052e4",
            "calling": [
                "FUN_080053d4"
            ],
            "imported": false,
            "current_name": "process_data_080052e4"
        },
        "FUN_080014e2": {
            "renaming": {
                "FUN_080014e2": "process_parameters_080014e2",
                "param_1": "int_array_ptr",
                "param_2": "comparison_value",
                "iVar1": "initial_time",
                "iVar2": "result"
            },
            "code": "\nundefined4 process_parameters_080014e2(int *int_array_ptr,uint comparison_value)\n\n{\n  int initial_time;\n  int result;\n  \n  initial_time = FUN_0800115c();\n  while( true ) {\n    if (*(int *)(*int_array_ptr + 0x14) << 0x18 < 0) {\n      return 0;\n    }\n    result = FUN_08001436(int_array_ptr);\n    if (result != 0) break;\n    if ((comparison_value != 0xffffffff) &&\n       ((comparison_value == 0 || (result = FUN_0800115c(), comparison_value < (uint)(result - initial_time))))) {\n      int_array_ptr[0xe] = int_array_ptr[0xe] | 0x20;\n      *(undefined *)((int)int_array_ptr + 0x35) = 0x20;\n      *(undefined *)(int_array_ptr + 0xd) = 0;\n      return 3;\n    }\n  }\n  return 1;\n}\n\n",
            "called": [
                "FUN_08001436",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080014e2",
            "calling": [
                "FUN_080015e8",
                "FUN_08001530",
                "FUN_08001828"
            ],
            "imported": false,
            "current_name": "process_parameters_080014e2"
        },
        "FUN_0800142e": {
            "renaming": {
                "FUN_0800142e": "xor_update_value_0800142e",
                "param_1": "base_address",
                "param_2": "xor_value"
            },
            "code": "\nvoid xor_update_value_0800142e(int base_address,uint xor_value)\n\n{\n  *(uint *)(base_address + 0xc) = xor_value ^ *(uint *)(base_address + 0xc);\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800142e",
            "calling": [
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "xor_update_value_0800142e"
        },
        "FUN_08004d8c": {
            "renaming": {
                "FUN_08004d8c": "update_register_flags_08004d8c",
                "param_1": "inputValuePtr",
                "iVar1": "inputValue"
            },
            "code": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid updateRegisterFlags_08004d8c(int *inputValuePtr)\n\n{\n  int inputValue;\n  \n  inputValue = *inputValuePtr;\n  if (inputValue == DAT_08004e04) {\n    *(uint *)(DAT_08004e08 + 0x18) = *(uint *)(DAT_08004e08 + 0x18) | 0x800;\n  }\n  else if (inputValue == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c | 1;\n  }\n  else if (inputValue == DAT_08004e0c) {\n    *(uint *)(DAT_08004e08 + 0x1c) = *(uint *)(DAT_08004e08 + 0x1c) | 2;\n  }\n  else if (inputValue == DAT_08004e10) {\n    *(uint *)(DAT_08004e08 + 0x1c) = *(uint *)(DAT_08004e08 + 0x1c) | 4;\n  }\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d8c",
            "calling": [
                "FUN_080023d0"
            ],
            "imported": false,
            "current_name": "update_register_flags_08004d8c"
        },
        "FUN_08002250": {
            "renaming": {
                "FUN_08002250": "calculate_shifted_value_08002250",
                "uVar1": "leading_zeroes_count"
            },
            "code": "\nuint calculate_shifted_value_08002250(void)\n\n{\n  uint leading_zeroes_count;\n  \n  leading_zeroes_count = count_leading_zeroes(0x1c0000);\n  return *(uint *)PTR_DAT_0800227c >>\n         PTR_DAT_08002278[(*(uint *)(DAT_08002274 + 4) & 0x3800) >> (leading_zeroes_count & 0xff)];\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002250",
            "calling": [
                "FUN_080025e8"
            ],
            "imported": false,
            "current_name": "calculate_shifted_value_08002250"
        },
        "FUN_080009b4": {
            "renaming": {
                "FUN_080009b4": "check_status_080009b4",
                "in_CY": "statusFlag"
            },
            "code": "\nbool checkStatus_080009b4(void)\n\n{\n  char statusFlag;\n  \n  FUN_08000990();\n  return statusFlag == '\\0';\n}\n\n",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009b4",
            "calling": [
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "check_status_080009b4"
        },
        "FUN_080011fc": {
            "renaming": {
                "FUN_080011fc": "set_bit_at_index_080011fc",
                "param_1": "bitIndex"
            },
            "code": "\nvoid setBitAtIndex_080011fc(uint bitIndex)\n\n{\n  *(int *)(DAT_08001210 + (bitIndex >> 5) * 4) = 1 << (bitIndex & 0x1f);\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080011fc",
            "calling": [
                "FUN_08004e7c"
            ],
            "imported": false,
            "current_name": "set_bit_at_index_080011fc"
        },
        "FUN_08003068": {
            "renaming": {
                "FUN_08003068": "get_data_value_08003068"
            },
            "code": "\nundefined4 get_data_value_08003068(void)\n\n{\n  return *(undefined4 *)PTR_DAT_08003070;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003068",
            "calling": [
                "FUN_08004a30"
            ],
            "imported": false,
            "current_name": "get_data_value_08003068"
        },
        "FUN_08005646": {
            "renaming": {
                "FUN_08005646": "shift_and_copy_08005646",
                "param_1": "src_ptr",
                "param_2": "dest_ptr",
                "param_3": "shift_amount",
                "puVar1": "end_ptr"
            },
            "code": "\nvoid shift_and_copy_08005646(undefined *src_ptr,undefined *dest_ptr,int shift_amount)\n\n{\n  undefined *end_ptr;\n  \n  end_ptr = dest_ptr + shift_amount;\n  if ((dest_ptr < src_ptr) && (src_ptr < end_ptr)) {\n    src_ptr = src_ptr + shift_amount;\n    shift_amount = shift_amount - (int)end_ptr;\n    while (end_ptr + shift_amount != (undefined *)0x0) {\n      end_ptr = end_ptr + -1;\n      src_ptr = src_ptr + -1;\n      *src_ptr = *end_ptr;\n    }\n    return;\n  }\n  src_ptr = src_ptr + -1;\n  for (; dest_ptr != end_ptr; dest_ptr = dest_ptr + 1) {\n    src_ptr = src_ptr + 1;\n    *src_ptr = *dest_ptr;\n  }\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005646",
            "calling": [
                "FUN_08005044"
            ],
            "imported": false,
            "current_name": "shift_and_copy_08005646"
        },
        "FUN_08000990": {
            "renaming": {
                "FUN_08000990": "initialize_and_return_08000990",
                "param_1": "input_value"
            },
            "code": "\nundefined4 initialize_and_return_08000990(undefined4 input_value)\n\n{\n  FUN_08000904();\n  return input_value;\n}\n\n",
            "called": [
                "FUN_08000904"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000990",
            "calling": [
                "FUN_080009b4",
                "FUN_080009c8",
                "FUN_080009a0",
                "FUN_08000980"
            ],
            "imported": false,
            "current_name": "initialize_and_return_08000990"
        },
        "FUN_08000110": {
            "renaming": {
                "FUN_08000110": "initialize_function_pointer_08000110",
                "param_1": "functionPointer"
            },
            "code": "\nundefined * initializeFunctionPointer_08000110(undefined *functionPointer)\n\n{\n  if (*PTR_DAT_08000128 == '\\0') {\n    if (DAT_0800012c != 0) {\n      functionPointer = PTR_FUN_08000130;\n    }\n    *PTR_DAT_08000128 = 1;\n  }\n  return functionPointer;\n}\n\n",
            "called": [
                "FUN_080072d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000110",
            "calling": [],
            "imported": false,
            "current_name": "initialize_function_pointer_08000110"
        },
        "FUN_0800709e": {
            "renaming": {
                "FUN_0800709e": "return_zero_0800709e"
            },
            "code": "\nundefined4 return_zero_0800709e(void)\n\n{\n  return 0;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800709e",
            "calling": [
                "FUN_08005900",
                "FUN_08005854",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "return_zero_0800709e"
        },
        "FUN_08002ec0": {
            "renaming": {
                "FUN_08002ec0": "calculate_result_08002ec0",
                "puVar1": "result_ptr",
                "uVar2": "temp_result",
                "uVar3": "value1",
                "uVar4": "value2"
            },
            "code": "\nvoid calculate_result_08002ec0(void)\n\n{\n  undefined *result_ptr;\n  undefined4 temp_result;\n  undefined4 value1;\n  undefined4 value2;\n  \n  result_ptr = PTR_DAT_08002ed0;\n  value1 = *(undefined4 *)(PTR_DAT_08002ecc + 4);\n  value2 = *(undefined4 *)(PTR_DAT_08002ed0 + 4);\n  temp_result = FUN_08000ad8(0x3f800000,value2);\n  temp_result = FUN_08000cec(temp_result,value1);\n  value1 = FUN_08000cec(value2,*(undefined4 *)result_ptr);\n  temp_result = FUN_08000adc(value1,temp_result);\n  *(undefined4 *)result_ptr = temp_result;\n  return;\n}\n\n",
            "called": [
                "FUN_08000adc",
                "FUN_08000cec",
                "FUN_08000ad8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ec0",
            "calling": [
                "FUN_08002f28",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "calculate_result_08002ec0"
        },
        "FUN_08004434": {
            "renaming": {
                "FUN_08004434": "process_data_08004434",
                "param_1": "inputData",
                "param_2": "dataMask",
                "param_3": "extraData",
                "local_10": "processedData",
                "local_c": "maskedData",
                "uStack_8": "stackExtraData"
            },
            "code": "\nvoid processData_08004434(undefined4 inputData,uint dataMask,undefined4 extraData)\n\n{\n  undefined4 processedData;\n  uint maskedData;\n  undefined4 stackExtraData;\n  \n  processedData = *(undefined4 *)PTR_DAT_08004454;\n  maskedData = dataMask & 0xffff0000 | (uint)*(ushort *)(PTR_DAT_08004454 + 4);\n  stackExtraData = extraData;\n  FUN_08004300(0x6d,&processedData,6);\n  return;\n}\n\n",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004434",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "process_data_08004434"
        },
        "FUN_08001168": {
            "renaming": {
                "FUN_08001168": "do_nothing_08001168"
            },
            "code": "\nvoid do_nothing_08001168(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001168",
            "calling": [
                "thunk_FUN_08001168",
                "FUN_08001b58"
            ],
            "imported": false,
            "current_name": "do_nothing_08001168"
        },
        "FUN_08006c0c": {
            "renaming": {
                "FUN_08006c0c": "calculate_double_representation_08006c0c",
                "param_1": "input_1",
                "param_2": "input_2",
                "uVar1": "temp_var_1",
                "uVar2": "temp_var_2",
                "iVar3": "int_var_3",
                "uVar4": "temp_var_4",
                "uVar5": "temp_var_5",
                "uVar6": "temp_var_6",
                "iVar7": "int_var_7",
                "uVar8": "temp_var_8",
                "uVar9": "temp_var_9",
                "iVar10": "int_var_10",
                "uVar11": "temp_var_11",
                "uVar12": "temp_var_12",
                "uVar13": "temp_var_13"
            },
            "code": "\nundefined8 calculate_double_representation_08006c0c(uint input_1,uint input_2)\n\n{\n  undefined4 temp_var_1;\n  uint temp_var_2;\n  int int_var_3;\n  uint temp_var_4;\n  uint temp_var_5;\n  uint temp_var_6;\n  int int_var_7;\n  uint temp_var_8;\n  uint temp_var_9;\n  int int_var_10;\n  uint temp_var_11;\n  uint temp_var_12;\n  undefined8 temp_var_13;\n  \n  if ((DAT_08006d60 & ~input_2) == 0) {\n    temp_var_13 = FUN_080004d0(input_1,input_2,input_1,input_2);\n    temp_var_13 = FUN_0800016c(input_1,input_2,(int)temp_var_13,(int)((ulonglong)temp_var_13 >> 0x20));\n    return temp_var_13;\n  }\n  if ((int)input_2 < 1) {\n    if ((input_2 & 0x7fffffff | input_1) == 0) {\n      return CONCAT44(input_2,input_1);\n    }\n    if (input_2 != 0) {\n      temp_var_13 = FUN_08000168(input_1,input_2,input_1,input_2);\n      temp_var_1 = (undefined4)((ulonglong)temp_var_13 >> 0x20);\n      temp_var_13 = FUN_08000724((int)temp_var_13,temp_var_1,(int)temp_var_13,temp_var_1);\n      return temp_var_13;\n    }\n  }\n  int_var_3 = (int)input_2 >> 0x14;\n  if (int_var_3 == 0) {\n    while (input_2 == 0) {\n      int_var_3 = int_var_3 + -0x15;\n      input_2 = input_1 >> 0xb;\n      input_1 = input_1 << 0x15;\n    }\n    temp_var_2 = 0;\n    for (; -1 < (int)(input_2 << 0xb); input_2 = input_2 << 1) {\n      temp_var_2 = temp_var_2 + 1;\n    }\n    int_var_3 = int_var_3 - (temp_var_2 - 1);\n    input_2 = input_2 | input_1 >> (0x20 - temp_var_2 & 0xff);\n    input_1 = input_1 << (temp_var_2 & 0xff);\n  }\n  int_var_7 = 0;\n  temp_var_2 = input_2 & 0xfffff | 0x100000;\n  if ((int_var_3 + -0x3ff) * -0x80000000 < 0) {\n    temp_var_2 = temp_var_2 * 2 - ((int)input_1 >> 0x1f);\n    input_1 = input_1 << 1;\n  }\n  temp_var_2 = temp_var_2 * 2 - ((int)input_1 >> 0x1f);\n  temp_var_4 = 0x16;\n  temp_var_5 = 0;\n  temp_var_8 = 0x200000;\n  input_1 = input_1 << 1;\n  do {\n    int_var_10 = temp_var_5 + temp_var_8;\n    if (int_var_10 <= (int)temp_var_2) {\n      temp_var_2 = temp_var_2 - int_var_10;\n      temp_var_5 = int_var_10 + temp_var_8;\n      int_var_7 = int_var_7 + temp_var_8;\n    }\n    temp_var_4 = temp_var_4 - 1;\n    temp_var_2 = temp_var_2 * 2 - ((int)input_1 >> 0x1f);\n    temp_var_8 = temp_var_8 >> 1;\n    input_1 = input_1 << 1;\n  } while (temp_var_4 != 0);\n  temp_var_12 = 0x20;\n  temp_var_9 = 0x80000000;\n  temp_var_8 = temp_var_4;\n  do {\n    temp_var_11 = temp_var_9 + temp_var_8;\n    temp_var_6 = temp_var_5;\n    if (((int)temp_var_5 < (int)temp_var_2) || ((temp_var_2 == temp_var_5 && (temp_var_11 <= input_1)))) {\n      temp_var_8 = temp_var_11 + temp_var_9;\n      if (((int)temp_var_11 < 0) && (-1 < (int)temp_var_8)) {\n        temp_var_6 = temp_var_5 + 1;\n      }\n      temp_var_2 = temp_var_2 - temp_var_5;\n      if (input_1 < temp_var_11) {\n        temp_var_2 = temp_var_2 - 1;\n      }\n      input_1 = input_1 - temp_var_11;\n      temp_var_4 = temp_var_4 + temp_var_9;\n    }\n    temp_var_2 = temp_var_2 * 2 - ((int)input_1 >> 0x1f);\n    temp_var_12 = temp_var_12 - 1;\n    input_1 = input_1 << 1;\n    temp_var_9 = temp_var_9 >> 1;\n    temp_var_5 = temp_var_6;\n  } while (temp_var_12 != 0);\n  if ((input_1 | temp_var_2) != 0) {\n    if (temp_var_4 == 0xffffffff) {\n      int_var_7 = int_var_7 + 1;\n      temp_var_4 = temp_var_12;\n    }\n    else {\n      temp_var_4 = temp_var_4 + 1 & 0xfffffffe;\n    }\n  }\n  temp_var_4 = temp_var_4 >> 1;\n  if (int_var_7 << 0x1f < 0) {\n    temp_var_4 = temp_var_4 | 0x80000000;\n  }\n  return CONCAT44((int_var_7 >> 1) + 0x3fe00000 + (int_var_3 + -0x3ff >> 1) * 0x100000,temp_var_4);\n}\n\n",
            "called": [
                "FUN_08000724",
                "FUN_08000168",
                "FUN_080004d0",
                "FUN_0800016c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c0c",
            "calling": [
                "FUN_08005c70",
                "FUN_08006228",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "calculate_double_representation_08006c0c"
        },
        "FUN_0800426c": {
            "renaming": {
                "FUN_0800426c": "process_data_0800426c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "puVar1": "data_ptr1",
                "puVar2": "data_ptr2",
                "uVar3": "temp_var1",
                "uVar4": "temp_var2",
                "uVar5": "temp_var3",
                "uVar6": "result1",
                "uVar7": "result2",
                "uVar8": "result3",
                "uVar9": "result4"
            },
            "code": "\nvoid process_data_0800426c(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined *data_ptr1;\n  undefined *data_ptr2;\n  undefined4 temp_var1;\n  undefined4 temp_var2;\n  undefined4 temp_var3;\n  uint result1;\n  uint result2;\n  uint result3;\n  uint result4;\n  \n  temp_var1 = FUN_08000ad8();\n  temp_var2 = FUN_08000adc(input1,input2);\n  temp_var3 = FUN_08000ad8(temp_var1,input3);\n  temp_var3 = FUN_08000adc(temp_var3,input4);\n  FUN_08000ad8(temp_var3,DAT_080042fc);\n  result1 = FUN_08001078();\n  temp_var3 = FUN_08000ad8(temp_var2,input3);\n  temp_var3 = FUN_08000ad8(temp_var3,input4);\n  FUN_08000ad8(temp_var3,DAT_080042fc);\n  result2 = FUN_08001078();\n  temp_var1 = FUN_08000adc(temp_var1,input3);\n  temp_var1 = FUN_08000ad8(temp_var1,input4);\n  FUN_08000ad8(temp_var1,DAT_080042fc);\n  result3 = FUN_08001078();\n  temp_var1 = FUN_08000adc(input3,temp_var2);\n  temp_var1 = FUN_08000adc(temp_var1,input4);\n  FUN_08000ad8(temp_var1,DAT_080042fc);\n  result4 = FUN_08001078();\n  data_ptr1 = PTR_DAT_08004264;\n  if (999 < (int)result4) {\n    result4 = 1000;\n  }\n  if (999 < (int)result3) {\n    result3 = 1000;\n  }\n  if (999 < (int)result2) {\n    result2 = 1000;\n  }\n  if (999 < (int)result1) {\n    result1 = 1000;\n  }\n  *(uint *)(PTR_DAT_08004264 + 8) = result2 & ~((int)result2 >> 0x1f);\n  *(uint *)(data_ptr1 + 0xc) = result1 & ~((int)result1 >> 0x1f);\n  *(uint *)(data_ptr1 + 4) = result3 & ~((int)result3 >> 0x1f);\n  *(uint *)data_ptr1 = result4 & ~((int)result4 >> 0x1f);\n  FUN_08003fc4();\n  FUN_08003fd0(*(undefined4 *)(data_ptr1 + 4));\n  FUN_08003fdc(*(undefined4 *)(data_ptr1 + 8));\n  FUN_08003fe8(*(undefined4 *)(data_ptr1 + 0xc));\n  data_ptr2 = PTR_DAT_08004268;\n  *(short *)PTR_DAT_08004268 = (short)*(undefined4 *)data_ptr1 + 1000;\n  *(short *)(data_ptr2 + 2) = (short)*(undefined4 *)(data_ptr1 + 4) + 1000;\n  *(short *)(data_ptr2 + 4) = (short)*(undefined4 *)(data_ptr1 + 8) + 1000;\n  *(short *)(data_ptr2 + 6) = (short)*(undefined4 *)(data_ptr1 + 0xc) + 1000;\n  return;\n}\n\n",
            "called": [
                "FUN_08003fc4",
                "FUN_08000adc",
                "FUN_08001078",
                "FUN_08000ad8",
                "FUN_08003fdc",
                "FUN_08003fd0",
                "FUN_08003fe8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800426c",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "process_data_0800426c"
        },
        "FUN_08002538": {
            "renaming": {
                "FUN_08002538": "update_flags_08002538",
                "param_1": "ptr_array",
                "param_2": "value",
                "puVar1": "temp_var1",
                "puVar2": "temp_var2"
            },
            "code": "\nundefined4 update_flags_08002538(uint **ptr_array,undefined4 value)\n\n{\n  uint *temp_var1;\n  uint *temp_var2;\n  \n  FUN_08002520(*ptr_array,value,1);\n  temp_var2 = *ptr_array;\n  temp_var1 = DAT_08002560;\n  if (temp_var2 == DAT_08002560) {\n    temp_var1 = (uint *)(temp_var2[0x11] | 0x8000);\n  }\n  if (temp_var2 == DAT_08002560) {\n    temp_var2[0x11] = (uint)temp_var1;\n  }\n  *temp_var2 = *temp_var2 | 1;\n  return 0;\n}\n\n",
            "called": [
                "FUN_08002520"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002538",
            "calling": [
                "FUN_08003ff4"
            ],
            "imported": false,
            "current_name": "update_flags_08002538"
        },
        "FUN_080040e8": {
            "renaming": {
                "FUN_080040e8": "process_data_080040e8",
                "param_1": "inputData",
                "param_2": "offset",
                "param_3": "outputBuffer",
                "param_4": "iterations",
                "puVar1": "srcData",
                "puVar4": "currentOutput",
                "iVar3": "index",
                "iVar5": "remainingIterations",
                "uVar2": "processedData"
            },
            "code": "\nvoid processData_080040e8(undefined4 inputData,int offset,int outputBuffer,int iterations)\n\n{\n  undefined *srcData;\n  undefined processedData;\n  int index;\n  undefined *currentOutput;\n  int remainingIterations;\n  \n  srcData = PTR_s____Src_i2c_c_08004118;\n  currentOutput = (undefined *)(outputBuffer + -1);\n  remainingIterations = iterations;\n  for (index = 0; index < iterations; index = index + 1) {\n    processedData = FUN_0800407c(inputData,offset + index & 0xffff,srcData,0x4c,remainingIterations);\n    currentOutput = currentOutput + 1;\n    *currentOutput = processedData;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_0800407c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080040e8",
            "calling": [
                "FUN_08003298",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_08002bf0",
                "FUN_08002b48"
            ],
            "imported": false,
            "current_name": "process_data_080040e8"
        },
        "FUN_08004ffc": {
            "renaming": {
                "FUN_08004ffc": "process_data_08004ffc",
                "param_1": "inputData",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "local_78": "buffer",
                "local_70": "maxInt",
                "local_6c": "shortValue1",
                "local_6a": "shortValue2",
                "local_68": "inputCopy",
                "local_64": "maxInt2",
                "uStack_c": "stackArg1",
                "uStack_8": "stackArg2",
                "uStack_4": "stackArg3"
            },
            "code": "\nvoid processData_08004ffc(undefined *inputData,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  undefined *buffer [2];\n  undefined4 maxInt;\n  undefined2 shortValue1;\n  undefined2 shortValue2;\n  undefined *inputCopy;\n  undefined4 maxInt2;\n  undefined4 stackArg1;\n  undefined4 stackArg2;\n  undefined4 stackArg3;\n  \n  shortValue1 = 0x208;\n  maxInt = 0x7fffffff;\n  maxInt2 = 0x7fffffff;\n  shortValue2 = 0xffff;\n  buffer[0] = inputData;\n  inputCopy = inputData;\n  stackArg1 = arg1;\n  stackArg2 = arg2;\n  stackArg3 = arg3;\n  FUN_080050fc(*(undefined4 *)PTR_PTR_DAT_08005040,buffer,arg1);\n  *buffer[0] = 0;\n  return;\n}\n\n",
            "called": [
                "FUN_080050fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ffc",
            "calling": [
                "FUN_08004cac"
            ],
            "imported": false,
            "current_name": "process_data_08004ffc"
        },
        "FUN_0800115c": {
            "renaming": {
                "FUN_0800115c": "get_data_from_ptr_0800115c"
            },
            "code": "\nundefined4 get_data_from_ptr_0800115c(void)\n\n{\n  return *(undefined4 *)PTR_DAT_08001164;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800115c",
            "calling": [
                "FUN_080015e8",
                "FUN_080014e2",
                "FUN_08001530",
                "FUN_08004c18",
                "FUN_08001938",
                "FUN_08001460",
                "FUN_08001828",
                "FUN_080016f4",
                "FUN_0800209c",
                "thunk_FUN_0800115c",
                "FUN_08001b58",
                "thunk_FUN_0800115c"
            ],
            "imported": false,
            "current_name": "get_data_from_ptr_0800115c"
        },
        "FUN_08002d88": {
            "renaming": {
                "FUN_08002d88": "process_sensor_data_08002d88",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "sVar1": "shortVar1",
                "sVar2": "shortVar2",
                "puVar3": "ptrVar3",
                "puVar4": "ptrVar4",
                "puVar5": "ptrVar5",
                "puVar6": "ptrVar6",
                "iVar7": "intVar7",
                "uVar8": "uintVar8",
                "uVar9": "uintVar9",
                "local_28": "localVar28",
                "uStack_26": "stackVar26",
                "uStack_25": "stackVar25",
                "local_24": "localVar24",
                "local_23": "localVar23",
                "local_22": "localVar22",
                "uStack_21": "stackVar21"
            },
            "code": "\nvoid processSensorData_08002d88(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  short shortVar1;\n  short shortVar2;\n  undefined *ptrVar3;\n  undefined *ptrVar4;\n  undefined *ptrVar5;\n  undefined *ptrVar6;\n  int intVar7;\n  undefined4 uintVar8;\n  undefined4 uintVar9;\n  undefined2 localVar28;\n  undefined stackVar26;\n  undefined stackVar25;\n  undefined localVar24;\n  undefined localVar23;\n  byte localVar22;\n  undefined stackVar21;\n  \n  ptrVar3 = PTR_s____Src_MPU9250_c_08002e80;\n  stackVar21 = (undefined)((uint)arg4 >> 0x18);\n  localVar28 = 0;\n  stackVar26 = 0;\n  stackVar25 = 0;\n  localVar24 = 0;\n  localVar23 = 0;\n  localVar22 = 0;\n  intVar7 = FUN_0800407c(0x18,2,PTR_s____Src_MPU9250_c_08002e80,0xd7,arg1,arg2);\n  if (intVar7 << 0x1f < 0) {\n    FUN_080040e8(0x18,3,&localVar28,7,ptrVar3,0xda);\n    ptrVar3 = PTR_DAT_08002e84;\n    if ((int)((uint)localVar22 << 0x1c) < 0) {\n      *(short *)(PTR_DAT_08002e94 + 2) = *(short *)(PTR_DAT_08002e94 + 2) + 1;\n    }\n    else {\n      shortVar1 = CONCAT11(stackVar25,stackVar26);\n      shortVar2 = CONCAT11(localVar23,localVar24);\n      *(undefined2 *)PTR_DAT_08002e84 = localVar28;\n      *(short *)(ptrVar3 + 2) = shortVar1;\n      *(short *)(ptrVar3 + 4) = shortVar2;\n      ptrVar6 = PTR_DAT_08002e9c;\n      ptrVar5 = PTR_DAT_08002e98;\n      uintVar9 = *(undefined4 *)PTR_DAT_08002e88;\n      uintVar8 = FUN_08000c44();\n      uintVar8 = FUN_08000cec(uintVar8,uintVar9);\n      ptrVar3 = PTR_DAT_08002e8c;\n      uintVar8 = FUN_08000cec(uintVar8,*(undefined4 *)ptrVar5);\n      uintVar8 = FUN_08000ad8(uintVar8,*(undefined4 *)ptrVar6);\n      uintVar8 = FUN_08000cec(uintVar8,*(undefined4 *)ptrVar3);\n      ptrVar4 = PTR_DAT_08002e90;\n      *(undefined4 *)PTR_DAT_08002e90 = uintVar8;\n      uintVar8 = FUN_08000c44((int)shortVar1);\n      uintVar8 = FUN_08000cec(uintVar8,uintVar9);\n      uintVar8 = FUN_08000cec(uintVar8,*(undefined4 *)(ptrVar5 + 4));\n      uintVar8 = FUN_08000ad8(uintVar8,*(undefined4 *)(ptrVar6 + 4));\n      uintVar8 = FUN_08000cec(uintVar8,*(undefined4 *)(ptrVar3 + 4));\n      *(undefined4 *)(ptrVar4 + 4) = uintVar8;\n      uintVar8 = FUN_08000c44((int)shortVar2);\n      uintVar8 = FUN_08000cec(uintVar8,uintVar9);\n      uintVar8 = FUN_08000cec(uintVar8,*(undefined4 *)(ptrVar5 + 8));\n      uintVar8 = FUN_08000ad8(uintVar8,*(undefined4 *)(ptrVar6 + 8));\n      uintVar8 = FUN_08000cec(uintVar8,*(undefined4 *)(ptrVar3 + 8));\n      *(undefined4 *)(ptrVar4 + 8) = uintVar8;\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_0800407c",
                "FUN_08000cec",
                "FUN_08000c44",
                "FUN_08000ad8",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002d88",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "process_sensor_data_08002d88"
        },
        "FUN_08000c44": {
            "renaming": {
                "FUN_08000c44": "calculate_result_08000c44",
                "param_1": "input_value",
                "iVar1": "leading_zeroes",
                "uVar2": "shift_amount",
                "uVar3": "result",
                "iVar4": "intermediate_value",
                "uVar5": "temp_value"
            },
            "code": "\nuint calculate_result_08000c44(uint input_value)\n\n{\n  int leading_zeroes;\n  uint shift_amount;\n  uint result;\n  int intermediate_value;\n  uint temp_value;\n  \n  result = input_value & 0x80000000;\n  if ((int)result < 0) {\n    input_value = -input_value;\n  }\n  if (input_value == 0) {\n    return 0;\n  }\n  leading_zeroes = count_leading_zeroes(input_value);\n  shift_amount = leading_zeroes - 8;\n  intermediate_value = ((result | 0x4b000000) - 0x800000) + shift_amount * -0x800000;\n  if (7 < leading_zeroes) {\n    temp_value = 0 << (shift_amount & 0xff);\n    result = intermediate_value + (input_value << (shift_amount & 0xff)) +\n            (0U >> (0x20 - shift_amount & 0xff)) + (uint)(0x7fffffff < temp_value);\n    if (temp_value == 0x80000000) {\n      result = result & 0xfffffffe;\n    }\n    return result;\n  }\n  shift_amount = input_value << (leading_zeroes + 0x18U & 0xff);\n  result = intermediate_value + ((input_value >> (0x20 - (leading_zeroes + 0x18U) & 0xff)) - ((int)shift_amount >> 0x1f));\n  if ((shift_amount & 0x7fffffff) == 0) {\n    result = result & ~(shift_amount >> 0x1f);\n  }\n  return result;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000c44",
            "calling": [
                "FUN_0800483c",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_08002bf0",
                "FUN_0800411c",
                "FUN_08002b48"
            ],
            "imported": false,
            "current_name": "calculate_result_08000c44"
        },
        "FUN_08000a04": {
            "renaming": {
                "FUN_08000a04": "check_conditions_08000a04",
                "param_1": "inputA",
                "param_2": "inputB",
                "param_3": "inputC",
                "param_4": "inputD"
            },
            "code": "\nundefined4 check_conditions_08000a04(uint inputA,int inputB,uint inputC,int inputD)\n\n{\n  if ((((inputB << 1) >> 0x15 != -1) || ((inputA | inputB << 0xc) == 0)) &&\n     (((inputD << 1) >> 0x15 != -1 || ((inputC | inputD << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000a04",
            "calling": [
                "FUN_08005900",
                "FUN_08005854",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "check_conditions_08000a04"
        },
        "FUN_080025e8": {
            "renaming": {
                "FUN_080025e8": "update_registers_080025e8",
                "param_1": "inputArray",
                "iVar1": "tempVar1",
                "iVar2": "tempVar2",
                "uVar3": "unsignedVar",
                "iVar4": "calcResult1",
                "iVar5": "shiftedInput",
                "iVar6": "registerBase"
            },
            "code": "\nvoid updateRegisters_080025e8(int *inputArray)\n\n{\n  int tempVar1;\n  int tempVar2;\n  uint unsignedVar;\n  int calcResult1;\n  int shiftedInput;\n  int registerBase;\n  \n  registerBase = *inputArray;\n  unsignedVar = inputArray[4];\n  *(uint *)(registerBase + 0x10) = *(uint *)(registerBase + 0x10) & 0xffffcfff | inputArray[3];\n  *(uint *)(registerBase + 0xc) = inputArray[2] | unsignedVar | inputArray[5] | *(uint *)(registerBase + 0xc) & 0xffffe9f3;\n  *(uint *)(registerBase + 0x14) = *(uint *)(registerBase + 0x14) & 0xfffffcff | inputArray[6];\n  if (registerBase == DAT_08002720) {\n    tempVar1 = FUN_08002250();\n    calcResult1 = (int)(((ulonglong)(uint)(tempVar1 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2)) / 100);\n    tempVar1 = FUN_08002250();\n    shiftedInput = inputArray[1];\n    tempVar2 = FUN_08002250();\n    tempVar2 = (uint)(tempVar1 * 0x19) / (uint)(shiftedInput << 2) +\n            (int)(((ulonglong)(uint)(tempVar2 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2)) / 100) *\n            -100;\n    tempVar1 = FUN_08002250();\n    unsignedVar = (uint)(tempVar1 * 0x19) / (uint)(inputArray[1] << 2);\n    tempVar1 = FUN_08002250();\n  }\n  else {\n    tempVar1 = FUN_08002220();\n    calcResult1 = (int)(((ulonglong)(uint)(tempVar1 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2)) / 100);\n    tempVar1 = FUN_08002220();\n    shiftedInput = inputArray[1];\n    tempVar2 = FUN_08002220();\n    tempVar2 = (uint)(tempVar1 * 0x19) / (uint)(shiftedInput << 2) +\n            (int)(((ulonglong)(uint)(tempVar2 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2)) / 100) *\n            -100;\n    tempVar1 = FUN_08002220();\n    unsignedVar = (uint)(tempVar1 * 0x19) / (uint)(inputArray[1] << 2);\n    tempVar1 = FUN_08002220();\n  }\n  *(uint *)(registerBase + 8) =\n       (((unsignedVar + (int)(((ulonglong)(uint)(tempVar1 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2)) / 100\n                       ) * -100) * 0x10 + 0x32) / 100 & 0xf | (tempVar2 * 0x10 + 0x32U) / 100 & 0xf0) +\n       calcResult1 * 0x10;\n  return;\n}\n\n",
            "called": [
                "FUN_08002250",
                "FUN_08002220"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025e8",
            "calling": [
                "FUN_08002724"
            ],
            "imported": false,
            "current_name": "update_registers_080025e8"
        },
        "FUN_08002b48": {
            "renaming": {
                "FUN_08002b48": "process_sensor_data_08002b48",
                "in_r3": "inputData",
                "puVar1": "sensorDataPtr",
                "uVar2": "processedData",
                "local_18": "sensorData1",
                "local_14": "sensorData2"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nvoid processSensorData_08002b48(void)\n\n{\n  undefined *sensorDataPtr;\n  undefined4 processedData;\n  uint inputData;\n  undefined4 sensorData1;\n  undefined4 sensorData2;\n  \n  sensorData1 = 0;\n  sensorData2 = inputData & 0xffff0000;\n  FUN_080040e8(0xd0,0x3b,&sensorData1,6,PTR_s____Src_MPU9250_c_08002be4,0x58);\n  sensorDataPtr = PTR_DAT_08002be8;\n  *(ushort *)PTR_DAT_08002be8 = CONCAT11((undefined)sensorData1,sensorData1._1_1_);\n  *(short *)(sensorDataPtr + 2) = CONCAT11(sensorData1._2_1_,sensorData1._3_1_);\n  *(short *)(sensorDataPtr + 4) = CONCAT11((undefined)sensorData2,sensorData2._1_1_);\n  processedData = FUN_08000c44();\n  processedData = FUN_08000cec(processedData,0x40800000);\n  processedData = FUN_08000cec(processedData,0x38000000);\n  sensorDataPtr = PTR_DAT_08002bec;\n  *(undefined4 *)PTR_DAT_08002bec = processedData;\n  processedData = FUN_08000c44((int)CONCAT11(sensorData1._2_1_,sensorData1._3_1_));\n  processedData = FUN_08000cec(processedData,0x40800000);\n  processedData = FUN_08000cec(processedData,0x38000000);\n  *(undefined4 *)(sensorDataPtr + 4) = processedData;\n  processedData = FUN_08000c44((int)CONCAT11((undefined)sensorData2,sensorData2._1_1_));\n  processedData = FUN_08000cec(processedData,0x40800000);\n  processedData = FUN_08000cec(processedData,0x38000000);\n  *(undefined4 *)(sensorDataPtr + 8) = processedData;\n  return;\n}\n\n",
            "called": [
                "FUN_08000cec",
                "FUN_08000c44",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002b48",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "process_sensor_data_08002b48"
        },
        "FUN_08004f68": {
            "renaming": {
                "FUN_08004f68": "copy_and_initialize_memory_08004f68",
                "iVar1": "index",
                "puVar2": "ptr",
                "UNRECOVERED_JUMPTABLE": "unrecoveredJumpTable"
            },
            "code": "\nvoid copyAndInitializeMemory_08004f68(void)\n\n{\n  int index;\n  undefined4 *ptr;\n  code *unrecoveredJumpTable;\n  \n  for (index = 0; ptr = (undefined4 *)PTR_DAT_08004fa8,\n      PTR_DAT_08004fa0 + index < PTR_DAT_08004fa4; index = index + 4) {\n    *(undefined4 *)(PTR_DAT_08004fa0 + index) = *(undefined4 *)(DAT_08004f9c + index);\n  }\n  for (; ptr < PTR_DAT_08004fac; ptr = ptr + 1) {\n    *ptr = 0;\n  }\n  FUN_08004f10();\n  FUN_08004fb4();\n  unrecoveredJumpTable = (code *)0x8004f9a;\n  FUN_080041ae();\n                    /* WARNING: Could not recover jumptable at 0x08004f9a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*unrecoveredJumpTable)();\n  return;\n}\n\n",
            "called": [
                "FUN_08004f10",
                "FUN_080041ae",
                "FUN_08004fb4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f68",
            "calling": [],
            "imported": false,
            "current_name": "copy_and_initialize_memory_08004f68"
        },
        "FUN_08001170": {
            "renaming": {
                "FUN_08001170": "update_register_value_08001170",
                "param_1": "inputValue"
            },
            "code": "\nvoid updateRegisterValue_08001170(uint inputValue)\n\n{\n  *(uint *)(DAT_08001190 + 0xc) =\n       *(uint *)(DAT_08001190 + 0xc) & 0xf8ff | 0x5fa0000 | (inputValue & 7) << 8;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001170",
            "calling": [
                "FUN_08001128",
                "FUN_08004ccc"
            ],
            "imported": false,
            "current_name": "update_register_value_08001170"
        },
        "FUN_08002bf0": {
            "renaming": {
                "FUN_08002bf0": "FUNC_08002bf0"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nvoid FUNC_08002bf0(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined4 uVar3;\n  undefined4 local_20;\n  undefined2 local_1c;\n  \n  local_20 = 0;\n  local_1c = 0;\n  FUN_080040e8(0xd0,0x43,&local_20,6,PTR_s____Src_MPU9250_c_08002c9c,0x7b);\n  puVar1 = PTR_DAT_08002ca0;\n  *(ushort *)PTR_DAT_08002ca0 = CONCAT11((undefined)local_20,local_20._1_1_);\n  *(short *)(puVar1 + 2) = CONCAT11(local_20._2_1_,local_20._3_1_);\n  *(short *)(puVar1 + 4) = CONCAT11((undefined)local_1c,local_1c._1_1_);\n  uVar3 = FUN_08000c44();\n  puVar1 = PTR_DAT_08002ca4;\n  uVar3 = FUN_08000cec(uVar3,DAT_08002ca8);\n  uVar3 = FUN_08000cec(uVar3,0x38000000);\n  uVar3 = FUN_08000ad8(uVar3,*(undefined4 *)puVar1);\n  puVar2 = PTR_DAT_08002cac;\n  *(undefined4 *)PTR_DAT_08002cac = uVar3;\n  uVar3 = FUN_08000c44((int)CONCAT11(local_20._2_1_,local_20._3_1_));\n  uVar3 = FUN_08000cec(uVar3,DAT_08002ca8);\n  uVar3 = FUN_08000cec(uVar3,0x38000000);\n  uVar3 = FUN_08000ad8(uVar3,*(undefined4 *)(puVar1 + 4));\n  *(undefined4 *)(puVar2 + 4) = uVar3;\n  uVar3 = FUN_08000c44((int)CONCAT11((undefined)local_1c,local_1c._1_1_));\n  uVar3 = FUN_08000cec(uVar3,DAT_08002ca8);\n  uVar3 = FUN_08000cec(uVar3,0x38000000);\n  uVar3 = FUN_08000ad8(uVar3,*(undefined4 *)(puVar1 + 8));\n  *(undefined4 *)(puVar2 + 8) = uVar3;\n  return;\n}\n\n",
            "called": [
                "FUN_08000cec",
                "FUN_08000c44",
                "FUN_08000ad8",
                "FUN_080040e8"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08002bf0",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "FUNC_08002bf0"
        },
        "FUN_08002ad0": {
            "renaming": {
                "FUN_08002ad0": "initialize_mpu9250_08002ad0"
            },
            "code": "\nvoid initializeMPU9250_08002ad0(void)\n\n{\n  FUN_0800407c(0xd0,0x75,PTR_s____Src_MPU9250_c_08002b44,0x3b);\n  FUN_0800403c(0xd0,0x6b,0x80,1);\n  FUN_0800403c(0xd0,0x6b,1);\n  FUN_0800403c(0xd0,0x6c,0,1);\n  FUN_0800403c(0xd0,0x19,0,1);\n  FUN_0800403c(0xd0,0x1d,3,1);\n  FUN_0800403c(0xd0,0x1a,3,1);\n  FUN_0800403c(0xd0,0x1b,0x10,1);\n  FUN_0800403c(0xd0,0x1c,8,1);\n  return;\n}\n\n",
            "called": [
                "FUN_0800407c",
                "FUN_0800403c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ad0",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": false,
            "current_name": "initialize_mpu9250_08002ad0"
        },
        "FUN_08001050": {
            "renaming": {
                "FUN_08001050": "FUNC_08001050"
            },
            "code": "\nbool FUNC_08001050(void)\n\n{\n  undefined in_ZR;\n  undefined in_CY;\n  \n  FUN_08000ffc();\n  return !(bool)in_CY || (bool)in_ZR;\n}\n\n",
            "called": [
                "FUN_08000ffc"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001050",
            "calling": [
                "FUN_08002ee8"
            ],
            "imported": false,
            "current_name": "FUNC_08001050"
        },
        "FUN_080009c8": {
            "renaming": {
                "FUN_080009c8": "check_status_080009c8",
                "in_ZR": "zeroFlag",
                "in_CY": "carryFlag"
            },
            "code": "\nbool checkStatus_080009c8(void)\n\n{\n  undefined zeroFlag;\n  undefined carryFlag;\n  \n  FUN_08000990();\n  return !(bool)carryFlag || (bool)zeroFlag;\n}\n\n",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009c8",
            "calling": [
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "check_status_080009c8"
        },
        "FUN_08002ed4": {
            "renaming": {
                "FUN_08002ed4": "calculate_result_08002ed4",
                "puVar1": "result_pointer",
                "uVar2": "intermediate_result1",
                "uVar3": "intermediate_result2",
                "uVar4": "intermediate_result3"
            },
            "code": "\nvoid calculate_result_08002ed4(void)\n\n{\n  undefined *result_pointer;\n  undefined4 intermediate_result1;\n  undefined4 intermediate_result2;\n  undefined4 intermediate_result3;\n  \n  result_pointer = PTR_DAT_08002ee4;\n  intermediate_result2 = *(undefined4 *)PTR_DAT_08002ee0;\n  intermediate_result3 = *(undefined4 *)(PTR_DAT_08002ee4 + 4);\n  intermediate_result1 = FUN_08000ad8(0x3f800000,intermediate_result3);\n  intermediate_result1 = FUN_08000cec(intermediate_result1,intermediate_result2);\n  intermediate_result2 = FUN_08000cec(intermediate_result3,*(undefined4 *)result_pointer);\n  intermediate_result1 = FUN_08000adc(intermediate_result2,intermediate_result1);\n  *(undefined4 *)result_pointer = intermediate_result1;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ed4",
            "calling": [
                "FUN_08002f28",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "calculate_result_08002ed4"
        },
        "FUN_08000f9c": {
            "renaming": {
                "FUN_08000f9c": "calculate_result_08000f9c",
                "param_1": "input1",
                "param_2": "input2",
                "uVar2": "doubleInput1",
                "uVar3": "doubleInput2",
                "uVar4": "tempResult",
                "bVar1": "condition1",
                "bVar5": "isZero"
            },
            "code": "\nuint calculateResult_08000f9c(uint input1,uint input2)\n\n{\n  bool condition1;\n  uint doubleInput1;\n  uint doubleInput2;\n  uint tempResult;\n  bool isZero;\n  \n  doubleInput1 = input1 * 2;\n  doubleInput2 = input2 * 2;\n  if (((int)doubleInput1 >> 0x18 == -1 || (int)doubleInput2 >> 0x18 == -1) &&\n     ((((int)doubleInput1 >> 0x18 == -1 && ((input1 & 0x7fffff) != 0)) ||\n      (((int)doubleInput2 >> 0x18 == -1 && ((input2 & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  tempResult = doubleInput1 | input2 & 0x7fffffff;\n  isZero = tempResult == 0;\n  if (!isZero) {\n    tempResult = input1 ^ input2;\n    isZero = tempResult == 0;\n  }\n  condition1 = -1 < (int)tempResult;\n  if (condition1) {\n    input1 = doubleInput1 + input2 * -2;\n    isZero = input1 == 0;\n  }\n  if ((condition1 && doubleInput2 <= doubleInput1) && !isZero) {\n    input1 = (int)input2 >> 0x1f;\n  }\n  if (!condition1 || doubleInput2 > doubleInput1) {\n    input1 = ~((int)input2 >> 0x1f);\n  }\n  if (!isZero) {\n    input1 = input1 | 1;\n  }\n  return input1;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000f9c",
            "calling": [
                "FUN_08001004"
            ],
            "imported": false,
            "current_name": "calculate_result_08000f9c"
        },
        "FUN_08006228": {
            "renaming": {
                "FUN_08006228": "FUNC_08006228"
            },
            "code": "\nuint FUNC_08006228(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  uint extraout_r1;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 extraout_r1_00;\n  undefined4 extraout_r1_01;\n  uint extraout_r1_02;\n  undefined4 extraout_r1_03;\n  int iVar5;\n  int iVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined4 uVar9;\n  uint uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  ulonglong uVar13;\n  undefined8 uVar14;\n  undefined8 uVar15;\n  undefined8 uVar16;\n  undefined8 uVar17;\n  longlong lVar18;\n  ulonglong uVar19;\n  ulonglong uVar20;\n  undefined8 uVar21;\n  uint local_70;\n  undefined4 local_68;\n  undefined4 local_64;\n  int local_54;\n  \n  uVar10 = param_4 & 0x7fffffff;\n  if ((uVar10 | param_3) == 0) {\n    return 0;\n  }\n  uVar8 = param_2 & 0x7fffffff;\n  if ((int)uVar8 <= (int)DAT_08006428) {\n    if (uVar8 == DAT_08006428) {\n      if (param_1 == 0) {\n        if (uVar8 < uVar10) goto LAB_08006278;\nLAB_08006262:\n        if ((uVar10 != DAT_08006428) || (param_3 == 0)) {\n          if (-1 < (int)param_2) goto LAB_0800632a;\n          if (DAT_08006430 < (int)uVar10) {\n            local_70 = 2;\nLAB_080062ba:\n            if (param_3 == 0) {\n              if (uVar10 == DAT_08006428) {\n                if ((uVar8 + 0xc0100000 | param_1) == 0) {\n                  return 0;\n                }\n                if (DAT_08006434 < (int)uVar8) {\n                  if ((int)param_4 < 0) {\n                    return 0;\n                  }\n                  return 0;\n                }\n                if (-1 < (int)param_4) {\n                  return 0;\n                }\n                return 0;\n              }\nLAB_0800630c:\n              if (uVar10 == DAT_08006438) {\n                if (-1 < (int)param_4) {\n                  return param_1;\n                }\n                uVar8 = 0;\n                uVar10 = DAT_08006438;\n                goto LAB_08006320;\n              }\n              uVar19 = CONCAT44(param_2,param_1);\n              if (param_4 == 0x40000000) goto LAB_0800634a;\n              if ((param_4 == DAT_0800643c) && (-1 < (int)param_2)) {\n                uVar10 = FUN_08006c0c(param_1,param_2);\n                return uVar10;\n              }\n            }\n          }\n          else {\n            if ((int)uVar10 <= DAT_08006430 + -0x3500000) {\nLAB_0800632a:\n              local_70 = 0;\n              goto LAB_080062ba;\n            }\n            iVar6 = ((int)uVar10 >> 0x14) + -0x3ff;\n            if (0x14 < iVar6) {\n              uVar2 = param_3 >> (0x34U - iVar6 & 0xff);\n              if (param_3 == uVar2 << (0x34U - iVar6 & 0xff)) {\n                local_70 = 2 - (uVar2 & 1);\n                goto LAB_080062ba;\n              }\n              goto LAB_0800632a;\n            }\n            if (param_3 == 0) {\n              uVar2 = (int)uVar10 >> (0x14U - iVar6 & 0xff);\n              local_70 = param_3;\n              if (uVar10 == uVar2 << (0x14U - iVar6 & 0xff)) {\n                local_70 = 2 - (uVar2 & 1);\n              }\n              goto LAB_0800630c;\n            }\n            local_70 = 0;\n          }\n          uVar13 = do_nothing_0800708c(param_1,param_2);\n          uVar19 = CONCAT44(DAT_08006424,DAT_08006420);\n          uVar11 = (undefined4)(uVar13 >> 0x20);\n          uVar1 = (undefined4)uVar13;\n          uVar20 = uVar13 & 0xffffffff | ((ulonglong)param_2 & 0x7fffffff) << 0x20;\n          if ((param_1 == 0) && ((uVar8 == 0 || ((param_2 & 0x3fffffff) == DAT_08006438)))) {\n            if ((int)param_4 < 0) {\n              uVar13 = FUN_08000724(0,DAT_08006438,uVar1,uVar11);\n            }\n            if (-1 < (int)param_2) {\n              return (uint)uVar13;\n            }\n            if ((local_70 | uVar8 + 0xc0100000) != 0) {\n              return (uint)uVar13;\n            }\n          }\n          else {\n            uVar2 = 0xffffffff - ((int)param_2 >> 0x1f);\n            uVar13 = CONCAT44(param_2,param_1);\n            if ((local_70 | uVar2) != 0) {\n              if (DAT_08006440 < (int)uVar10) {\n                param_1 = DAT_08006420;\n                param_2 = DAT_08006424;\n                if (DAT_08006440 + 0x2100000 < (int)uVar10) {\n                  if (DAT_08006434 < (int)uVar8) {\nLAB_08006418:\n                    if ((int)param_4 < 1) {\n                      return 0;\n                    }\n                    goto LAB_0800634a;\n                  }\nLAB_080063fa:\n                  uVar19 = CONCAT44(DAT_08006424,DAT_08006420);\n                  if (-1 < (int)param_4) {\n                    return 0;\n                  }\n                  goto LAB_0800634a;\n                }\n                if ((int)uVar8 <= DAT_08006444) goto LAB_080063fa;\n                if ((int)DAT_08006438 < (int)uVar8) goto LAB_08006418;\n                uVar14 = FUN_08000168(uVar1,uVar11,0,DAT_080065d0);\n                uVar11 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar1 = (undefined4)uVar14;\n                uVar14 = FUN_080004d0(uVar1,uVar11,DAT_080065a8,DAT_080065ac);\n                uVar15 = FUN_080004d0(uVar1,uVar11,DAT_080065b0,DAT_080065b4);\n                uVar16 = FUN_080004d0(uVar1,uVar11,0,DAT_080065d4);\n                uVar16 = FUN_08000168(DAT_080065b8,DAT_080065bc,(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUN_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),uVar1,uVar11);\n                uVar16 = FUN_08000168(0,DAT_080065d8,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n                uVar17 = FUN_080004d0(uVar1,uVar11,uVar1,uVar11);\n                uVar16 = FUN_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar17,\n                                      (int)((ulonglong)uVar17 >> 0x20));\n                uVar16 = FUN_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),DAT_080065c0,\n                                      DAT_080065c4);\n                uVar15 = FUN_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                FUN_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,\n                             (int)((ulonglong)uVar15 >> 0x20));\n                lVar18 = (ulonglong)extraout_r1 << 0x20;\n                uVar10 = extraout_r1;\n              }\n              else {\n                local_54 = 0;\n                if (uVar8 < 0x100000) {\n                  uVar20 = FUN_080004d0();\n                  local_54 = -0x35;\n                }\n                uVar10 = (uint)(uVar20 >> 0x20);\n                uVar1 = (undefined4)uVar20;\n                local_54 = ((int)uVar10 >> 0x14) + -0x3ff + local_54;\n                uVar10 = uVar10 & 0xfffff;\n                uVar8 = uVar10 | 0x3ff00000;\n                if (DAT_0800691c < (int)uVar10) {\n                  if (DAT_08006920 < (int)uVar10) {\n                    uVar8 = uVar8 - 0x100000;\n                    local_54 = local_54 + 1;\n                    goto LAB_08006628;\n                  }\n                  iVar6 = 1;\n                }\n                else {\nLAB_08006628:\n                  iVar6 = 0;\n                }\n                uVar7 = *(undefined4 *)(PTR_DAT_08006924 + iVar6 * 8);\n                uVar9 = *(undefined4 *)((int)(PTR_DAT_08006924 + iVar6 * 8) + 4);\n                uVar14 = FUN_08000168(uVar1,uVar8,uVar7,uVar9);\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUN_0800016c(uVar1,uVar8,uVar7,uVar9);\n                uVar15 = FUN_08000724(0,DAT_08006928,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar3 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUN_080004d0((int)uVar14,uVar12,(int)uVar15,uVar3);\n                uVar4 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar11 = (undefined4)uVar16;\n                uVar16 = FUN_080004d0(0,uVar4);\n                uVar14 = FUN_08000168((int)uVar14,uVar12,(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUN_08000168(0,((int)uVar8 >> 1 | 0x20000000U) + 0x80000 + iVar6 * 0x40000,\n                                      uVar7,uVar9);\n                uVar16 = FUN_08000168(uVar1,uVar8,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUN_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),0,uVar4);\n                uVar14 = FUN_08000168((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar14 = FUN_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,uVar3\n                                     );\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUN_080004d0(uVar11,uVar4);\n                uVar3 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar1 = (undefined4)uVar15;\n                uVar15 = FUN_080004d0(uVar1,uVar3,DAT_080068d0,DAT_080068d4);\n                uVar15 = FUN_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068d8,\n                                      DAT_080068dc);\n                uVar15 = FUN_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUN_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068e0,\n                                      DAT_080068e4);\n                uVar15 = FUN_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUN_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068e8,\n                                      DAT_080068ec);\n                uVar15 = FUN_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUN_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068f0,\n                                      DAT_080068f4);\n                uVar15 = FUN_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUN_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068f8,\n                                      DAT_080068fc);\n                uVar16 = FUN_080004d0(uVar1,uVar3,uVar1,uVar3);\n                uVar15 = FUN_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUN_0800016c(uVar11,uVar4,0,uVar4);\n                uVar16 = FUN_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar14,\n                                      uVar12);\n                uVar15 = FUN_0800016c((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar1 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUN_080004d0(0,uVar4,0,uVar4);\n                uVar3 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar17 = FUN_0800016c((int)uVar16,uVar3,0,DAT_0800692c);\n                FUN_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),(int)uVar15,uVar1);\n                uVar17 = FUN_080004d0(0,uVar4,0,extraout_r1_00);\n                uVar7 = (undefined4)((ulonglong)uVar17 >> 0x20);\n                uVar21 = FUN_08000168(0,extraout_r1_00,0,DAT_0800692c);\n                uVar16 = FUN_08000168((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),(int)uVar16,uVar3\n                                     );\n                uVar15 = FUN_08000168((int)uVar15,uVar1,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20)\n                                     );\n                uVar15 = FUN_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar14 = FUN_080004d0((int)uVar14,uVar12,0,extraout_r1_00);\n                uVar15 = FUN_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar1 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                FUN_0800016c((int)uVar17,uVar7,(int)uVar15,uVar1);\n                uVar14 = FUN_080004d0(0,extraout_r1_01,DAT_08006900,DAT_08006904);\n                uVar16 = FUN_08000168(0,extraout_r1_01,(int)uVar17,uVar7);\n                uVar15 = FUN_08000168((int)uVar15,uVar1,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20)\n                                     );\n                uVar15 = FUN_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006908,\n                                      DAT_0800690c);\n                uVar16 = FUN_080004d0(0,extraout_r1_01,DAT_08006910,DAT_08006914);\n                uVar15 = FUN_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar15 = FUN_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),\n                                      *(undefined4 *)(PTR_DAT_08006930 + iVar6 * 8),\n                                      *(undefined4 *)((int)(PTR_DAT_08006930 + iVar6 * 8) + 4));\n                uVar16 = FUN_08000404(local_54);\n                uVar1 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar11 = *(undefined4 *)(PTR_DAT_08006934 + iVar6 * 8);\n                uVar12 = *(undefined4 *)((int)(PTR_DAT_08006934 + iVar6 * 8) + 4);\n                uVar17 = FUN_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar17 = FUN_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),uVar11,uVar12);\n                FUN_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),(int)uVar16,uVar1);\n                uVar16 = FUN_08000168(0,extraout_r1_02,(int)uVar16,uVar1);\n                lVar18 = FUN_08000168((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),uVar11,uVar12);\n                uVar10 = extraout_r1_02;\n              }\n              uVar14 = FUN_08000168((int)lVar18,(int)((ulonglong)lVar18 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              uVar14 = FUN_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              param_2 = DAT_080065dc;\n              if ((local_70 - 1 | uVar2) != 0) {\n                param_2 = DAT_080065d0;\n              }\n              uVar15 = FUN_08000168(param_3,param_4,0,param_4);\n              uVar15 = FUN_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),0,uVar10);\n              uVar14 = FUN_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),param_3,param_4);\n              uVar14 = FUN_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n              uVar1 = (undefined4)uVar14;\n              uVar14 = FUN_080004d0(0,uVar10,0,param_4);\n              uVar3 = (undefined4)((ulonglong)uVar14 >> 0x20);\n              uVar11 = (undefined4)uVar14;\n              lVar18 = FUN_0800016c(uVar1,uVar12,uVar11,uVar3);\n              uVar8 = (uint)((ulonglong)lVar18 >> 0x20);\n              uVar10 = (uint)lVar18;\n              if (DAT_080065e0 < (int)uVar8) {\n                if ((uVar8 + 0xbf700000 | uVar10) == 0) {\n                  uVar15 = FUN_0800016c(uVar1,uVar12,DAT_08006ba8,DAT_08006bac);\n                  uVar16 = FUN_08000168(uVar10,uVar8,uVar11,uVar3);\n                  iVar6 = FUN_080009f0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                       (int)((ulonglong)uVar16 >> 0x20));\n                  if (iVar6 == 0) goto LAB_08006968;\n                }\n                uVar19 = FUN_080004d0(0,param_2,DAT_080065c8,DAT_080065cc);\n                param_1 = DAT_080065c8;\n                param_2 = DAT_080065cc;\n                goto LAB_0800634a;\n              }\n              if (DAT_08006c04 < (int)(uVar8 & 0x7fffffff)) {\n                if ((DAT_08006c08 + uVar8 | uVar10) == 0) {\n                  uVar15 = FUN_08000168(uVar10,uVar8,uVar11,uVar3);\n                  iVar6 = FUN_080009c8(uVar1,uVar12,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                  if (iVar6 == 0) goto LAB_08006968;\n                }\n                uVar19 = FUN_080004d0(0,param_2,DAT_08006bf0,DAT_08006bf4);\n                param_1 = DAT_08006bf0;\n                param_2 = DAT_08006bf4;\n              }\n              else {\nLAB_08006968:\n                if (DAT_08006bf8 < (int)(uVar8 & 0x7fffffff)) {\n                  uVar8 = (0x100000 >> (((int)(uVar8 & 0x7fffffff) >> 0x14) - 0x3feU & 0xff)) +\n                          uVar8;\n                  uVar10 = (uVar8 * 2 >> 0x15) - 0x3ff;\n                  iVar6 = (int)(uVar8 & 0xfffff | 0x100000) >> (0x14 - uVar10 & 0xff);\n                  if (lVar18 < 0) {\n                    iVar6 = -iVar6;\n                  }\n                  uVar14 = FUN_08000168(uVar11,uVar3,0,uVar8 & ~(DAT_08006bfc >> (uVar10 & 0xff)));\n                }\n                else {\n                  iVar6 = 0;\n                }\n                local_64 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                local_68 = (undefined4)uVar14;\n                FUN_0800016c(local_68,local_64,uVar1,uVar12);\n                uVar14 = FUN_080004d0(0,extraout_r1_03,DAT_08006bb0,DAT_08006bb4);\n                uVar11 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUN_08000168(0,extraout_r1_03,local_68,local_64);\n                uVar15 = FUN_08000168(uVar1,uVar12,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar15 = FUN_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bb8,\n                                      DAT_08006bbc);\n                uVar16 = FUN_080004d0(0,extraout_r1_03,DAT_08006bc0,DAT_08006bc4);\n                uVar15 = FUN_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar12 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUN_0800016c((int)uVar14,uVar11,(int)uVar15,uVar12);\n                uVar3 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar1 = (undefined4)uVar16;\n                uVar14 = FUN_08000168(uVar1,uVar3,(int)uVar14,uVar11);\n                uVar14 = FUN_08000168((int)uVar15,uVar12,(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUN_080004d0(uVar1,uVar3,uVar1,uVar3);\n                uVar4 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar11 = (undefined4)uVar15;\n                uVar15 = FUN_080004d0(uVar11,uVar4,DAT_08006bc8,DAT_08006bcc);\n                uVar15 = FUN_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bd0,\n                                      DAT_08006bd4);\n                uVar15 = FUN_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUN_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bd8,\n                                      DAT_08006bdc);\n                uVar15 = FUN_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUN_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006be0,\n                                      DAT_08006be4);\n                uVar15 = FUN_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUN_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006be8,\n                                      DAT_08006bec);\n                uVar15 = FUN_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUN_08000168(uVar1,uVar3,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar11 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUN_080004d0(uVar1,uVar3,(int)uVar15,uVar11);\n                uVar15 = FUN_08000168((int)uVar15,uVar11,0,0x40000000);\n                uVar15 = FUN_08000724((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar16 = FUN_080004d0(uVar1,uVar3,(int)uVar14,uVar12);\n                uVar14 = FUN_0800016c((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar14,\n                                      uVar12);\n                uVar14 = FUN_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar14 = FUN_08000168((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),uVar1,uVar3);\n                uVar13 = FUN_08000168(0,DAT_08006c00,(int)uVar14,(int)((ulonglong)uVar14 >> 0x20));\n                iVar5 = (int)(uVar13 >> 0x20);\n                uVar10 = iVar5 + iVar6 * 0x100000;\n                uVar19 = uVar13 & 0xffffffff | (ulonglong)uVar10 << 0x20;\n                if ((int)uVar10 < 0x100000) {\n                  uVar19 = FUN_080071c0((int)uVar13,iVar5,iVar6);\n                }\n                param_1 = 0;\n              }\nLAB_0800634a:\n              uVar10 = FUN_080004d0((int)uVar19,(int)(uVar19 >> 0x20),param_1,param_2);\n              return uVar10;\n            }\n          }\n          uVar1 = (undefined4)(uVar13 >> 0x20);\n          uVar14 = FUN_08000168((int)uVar13,uVar1,(int)uVar13,uVar1);\n          uVar10 = (uint)((ulonglong)uVar14 >> 0x20);\n          uVar8 = (uint)uVar14;\n          param_1 = uVar8;\n          param_2 = uVar10;\nLAB_08006320:\n          uVar10 = FUN_08000724(uVar8,uVar10,param_1,param_2);\n          return uVar10;\n        }\n      }\n    }\n    else if ((int)uVar10 <= (int)DAT_08006428) goto LAB_08006262;\n  }\n  if ((uVar8 + 0xc0100000 | param_1) == 0) {\n    return 0;\n  }\nLAB_08006278:\n  uVar10 = FUN_080070a4(PTR_DAT_0800642c);\n  return uVar10;\n}\n\n",
            "called": [
                "FUN_08000724",
                "FUN_080070a4",
                "FUN_08000404",
                "FUN_080009f0",
                "FUN_0800708c",
                "FUN_080009c8",
                "FUN_080004d0",
                "FUN_08000168",
                "FUN_080071c0",
                "FUN_0800016c",
                "FUN_08006c0c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08006228",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "FUNC_08006228"
        },
        "FUN_08000c3c": {
            "renaming": {
                "FUN_08000c3c": "calculate_transformed_value_08000c3c",
                "param_1": "input_value",
                "iVar1": "leading_zeroes_count",
                "uVar2": "adjusted_zeroes_count",
                "iVar3": "intermediate_result",
                "uVar4": "shifted_value"
            },
            "code": "\nuint calculate_transformed_value_08000c3c(uint input_value)\n\n{\n  int leading_zeroes_count;\n  uint adjusted_zeroes_count;\n  int intermediate_result;\n  uint shifted_value;\n  \n  if (input_value == 0) {\n    return 0;\n  }\n  leading_zeroes_count = count_leading_zeroes(input_value);\n  adjusted_zeroes_count = leading_zeroes_count - 8;\n  intermediate_result = adjusted_zeroes_count * -0x800000 + 0x4a800000;\n  if (7 < leading_zeroes_count) {\n    shifted_value = 0 << (adjusted_zeroes_count & 0xff);\n    adjusted_zeroes_count = intermediate_result + (input_value << (adjusted_zeroes_count & 0xff)) +\n            (0U >> (0x20 - adjusted_zeroes_count & 0xff)) + (uint)(0x7fffffff < shifted_value);\n    if (shifted_value == 0x80000000) {\n      adjusted_zeroes_count = adjusted_zeroes_count & 0xfffffffe;\n    }\n    return adjusted_zeroes_count;\n  }\n  shifted_value = input_value << (leading_zeroes_count + 0x18U & 0xff);\n  adjusted_zeroes_count = intermediate_result + ((input_value >> (0x20 - (leading_zeroes_count + 0x18U) & 0xff)) - ((int)shifted_value >> 0x1f));\n  if ((shifted_value & 0x7fffffff) == 0) {\n    adjusted_zeroes_count = adjusted_zeroes_count & ~(shifted_value >> 0x1f);\n  }\n  return adjusted_zeroes_count;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000c3c",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "calculate_transformed_value_08000c3c"
        },
        "FUN_080043bc": {
            "renaming": {
                "FUN_080043bc": "copy_and_process_data_080043bc",
                "uVar1": "currentData1",
                "uVar2": "currentData2",
                "puVar3": "destinationBuffer",
                "puVar4": "sourceBuffer",
                "local_24": "dataBuffer",
                "local_1c": "shortData"
            },
            "code": "\nvoid copyAndProcessData_080043bc(void)\n\n{\n  undefined4 currentData1;\n  undefined4 currentData2;\n  undefined4 *destinationBuffer;\n  undefined4 *sourceBuffer;\n  undefined4 dataBuffer [2];\n  undefined2 shortData [6];\n  \n  destinationBuffer = dataBuffer;\n  sourceBuffer = (undefined4 *)PTR_DAT_080043ec;\n  do {\n    currentData1 = *sourceBuffer;\n    currentData2 = sourceBuffer[1];\n    sourceBuffer = sourceBuffer + 2;\n    *destinationBuffer = currentData1;\n    destinationBuffer[1] = currentData2;\n    destinationBuffer = destinationBuffer + 2;\n  } while (sourceBuffer != (undefined4 *)(PTR_DAT_080043ec + 0x10));\n  *(undefined2 *)destinationBuffer = *(undefined2 *)sourceBuffer;\n  FUN_08004300(0x66,dataBuffer,0x12);\n  return;\n}\n\n",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080043bc",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "copy_and_process_data_080043bc"
        },
        "FUN_08001214": {
            "renaming": {
                "FUN_08001214": "update_data_structure_08001214",
                "param_1": "input_value",
                "puVar1": "data_structure",
                "iVar2": "data_offset"
            },
            "code": "\nundefined4 update_data_structure_08001214(int input_value)\n\n{\n  undefined4 *data_structure;\n  int data_offset;\n  \n  data_offset = DAT_0800123c;\n  data_structure = DAT_08001238;\n  if (input_value - 1U < 0x1000000) {\n    DAT_08001238[1] = input_value - 1U;\n    *(undefined *)(data_offset + 0x23) = 0xf0;\n    data_structure[2] = 0;\n    *data_structure = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001214",
            "calling": [
                "FUN_08004514",
                "FUN_08001104"
            ],
            "imported": false,
            "current_name": "update_data_structure_08001214"
        },
        "FUN_08003fc4": {
            "renaming": {
                "FUN_08003fc4": "set_data_08003fc4",
                "param_1": "input_data"
            },
            "code": "\nvoid set_data_08003fc4(undefined4 input_data)\n\n{\n  *(undefined4 *)(*(int *)PTR_DAT_08003fcc + 0x40) = input_data;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fc4",
            "calling": [
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "imported": false,
            "current_name": "set_data_08003fc4"
        },
        "FUN_08000404": {
            "renaming": {
                "FUN_08000404": "calculate_result_08000404",
                "param_1": "input_value",
                "uVar1": "result_lower",
                "uVar2": "abs_input",
                "uVar3": "shift_amount",
                "iVar4": "leading_zeroes",
                "uVar5": "adjusted_zeroes",
                "uVar6": "sign_bit",
                "in_r12": "inverse_shift",
                "bVar7": "negative_condition",
                "bVar8": "zero_condition",
                "bVar9": "borrow_condition"
            },
            "code": "\nulonglong calculate_result_08000404(uint input_value)\n\n{\n  uint result_lower;\n  uint abs_input;\n  uint shift_amount;\n  int leading_zeroes;\n  uint adjusted_zeroes;\n  uint sign_bit;\n  uint inverse_shift;\n  bool negative_condition;\n  bool zero_condition;\n  bool borrow_condition;\n  \n  if (input_value == 0) {\n    return 0;\n  }\n  sign_bit = input_value & 0x80000000;\n  abs_input = input_value;\n  if ((int)sign_bit < 0) {\n    abs_input = -input_value;\n  }\n  result_lower = 0;\n  leading_zeroes = count_leading_zeroes(abs_input);\n  adjusted_zeroes = leading_zeroes + 0x15;\n  borrow_condition = SBORROW4(adjusted_zeroes,0x20);\n  shift_amount = leading_zeroes - 0xb;\n  negative_condition = (int)shift_amount < 0;\n  zero_condition = shift_amount == 0;\n  if ((int)adjusted_zeroes < 0x20) {\n    borrow_condition = SCARRY4(shift_amount,0xc);\n    leading_zeroes = leading_zeroes + 1;\n    negative_condition = leading_zeroes < 0;\n    zero_condition = leading_zeroes == 0;\n    shift_amount = adjusted_zeroes;\n    if (!zero_condition && negative_condition == borrow_condition) {\n      result_lower = abs_input << (adjusted_zeroes & 0xff);\n      abs_input = abs_input >> (0xcU - leading_zeroes & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (zero_condition || negative_condition != borrow_condition) {\n    inverse_shift = 0x20 - shift_amount;\n  }\n  abs_input = abs_input << (shift_amount & 0xff);\n  if (zero_condition || negative_condition != borrow_condition) {\n    abs_input = abs_input | 0U >> (inverse_shift & 0xff);\n  }\n  if (zero_condition || negative_condition != borrow_condition) {\n    result_lower = 0 << (shift_amount & 0xff);\n  }\nLAB_080002f0:\n  if ((int)adjusted_zeroes < 0x433) {\n    return CONCAT44(abs_input + (0x432 - adjusted_zeroes) * 0x100000 | sign_bit,result_lower);\n  }\n  shift_amount = ~(0x432 - adjusted_zeroes);\n  if (0x1e < (int)shift_amount) {\n    return CONCAT44(input_value,abs_input >> (shift_amount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leading_zeroes = shift_amount - 0x13;\n  if (leading_zeroes == 0 || leading_zeroes < 0 != SCARRY4(shift_amount - 0x1f,0xc)) {\n    shift_amount = shift_amount + 1;\n    return CONCAT44(sign_bit | abs_input >> (shift_amount & 0xff),\n                    result_lower >> (shift_amount & 0xff) | abs_input << (0x20 - shift_amount & 0xff));\n  }\n  return CONCAT44(input_value,result_lower >> (0x20 - (0xcU - leading_zeroes) & 0xff) | abs_input << (0xcU - leading_zeroes & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000404",
            "calling": [
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "calculate_result_08000404"
        },
        "FUN_0800209c": {
            "renaming": {
                "FUN_0800209c": "process_data_0800209c",
                "param_1": "input_array",
                "param_2": "input_value",
                "cVar1": "value1",
                "cVar2": "value2",
                "puVar3": "data_ptr",
                "iVar4": "temp_var1",
                "iVar5": "temp_var2",
                "uVar6": "first_element",
                "uVar7": "leading_zeroes"
            },
            "code": "\nundefined4 process_data_0800209c(uint *input_array,uint input_value)\n\n{\n  char value1;\n  char value2;\n  uint *data_ptr;\n  int temp_var1;\n  int temp_var2;\n  uint first_element;\n  uint leading_zeroes;\n  \n  data_ptr = DAT_08002204;\n  if ((input_value <= (*DAT_08002204 & 7)) ||\n     (*DAT_08002204 = *DAT_08002204 & 0xfffffff8 | input_value, input_value == (*data_ptr & 7))) {\n    first_element = *input_array;\n    if ((int)(first_element << 0x1e) < 0) {\n      DAT_08002208[1] = DAT_08002208[1] & 0xffffff0f | input_array[2];\n    }\n    data_ptr = DAT_08002208;\n    temp_var1 = first_element << 0x1f;\n    if (-1 < temp_var1) {\nLAB_080020ba:\n      data_ptr = DAT_08002204;\n      if ((input_value < (*DAT_08002204 & 7)) &&\n         (*DAT_08002204 = *DAT_08002204 & 0xfffffff8 | input_value, input_value != (*data_ptr & 7))) {\n        return 1;\n      }\n      data_ptr = DAT_08002208;\n      first_element = *input_array;\n      if ((first_element & 4) != 0) {\n        DAT_08002208[1] = DAT_08002208[1] & 0xfffff8ff | input_array[3];\n      }\n      if ((int)(first_element << 0x1c) < 0) {\n        data_ptr[1] = data_ptr[1] & 0xffffc7ff | input_array[4] << 3;\n      }\n      first_element = FUN_08002008();\n      leading_zeroes = count_leading_zeroes(0xf000000);\n      *(uint *)PTR_DAT_08002210 = first_element >> PTR_DAT_0800220c[(data_ptr[1] & 0xf0) >> (leading_zeroes & 0xff)];\n      FUN_08001104(0);\n      return 0;\n    }\n    first_element = input_array[1];\n    if (first_element == 1) {\n      value2 = '\\x01';\n      value1 = '\\0';\n    }\n    else {\n      if (first_element == 2) {\n        leading_zeroes = *DAT_08002208;\n        goto LAB_08002176;\n      }\n      value2 = '\\0';\n      value1 = '\\x01';\n    }\n    leading_zeroes = count_leading_zeroes((uint)(byte)(value1 << 6) << 0x18 | (uint)(byte)(value2 << 6) << 8);\n    leading_zeroes = (*DAT_08002208 >> (leading_zeroes & 0x1f)) << 0x1f;\n    if ((int)leading_zeroes < 0) {\nLAB_08002176:\n      DAT_08002208[1] = DAT_08002208[1] & 0xfffffffc | first_element;\n      temp_var1 = FUN_0800115c(temp_var1,leading_zeroes);\n      if (input_array[1] == 1) {\n        do {\n          if ((data_ptr[1] & 0xc) == 4) goto LAB_080020ba;\n          temp_var2 = FUN_0800115c();\n        } while ((uint)(temp_var2 - temp_var1) < 0x1389);\n      }\n      else if (input_array[1] == 2) {\n        do {\n          if ((data_ptr[1] & 0xc) == 8) goto LAB_080020ba;\n          temp_var2 = FUN_0800115c();\n        } while ((uint)(temp_var2 - temp_var1) < 0x1389);\n      }\n      else {\n        do {\n          if ((data_ptr[1] & 0xc) == 0) goto LAB_080020ba;\n          temp_var2 = FUN_0800115c();\n        } while ((uint)(temp_var2 - temp_var1) < 0x1389);\n      }\n      return 3;\n    }\n  }\n  return 1;\n}\n\n",
            "called": [
                "FUN_08002008",
                "FUN_08001104",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800209c",
            "calling": [
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "process_data_0800209c"
        },
        "FUN_0800403c": {
            "renaming": {
                "FUN_0800403c": "process_data_0800403c",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "dataFlag",
                "param_4": "delayFlag",
                "iVar1": "result",
                "local_14": "buffer"
            },
            "code": "\nvoid processData_0800403c(undefined4 data1,undefined4 data2,undefined dataFlag,int delayFlag)\n\n{\n  int result;\n  undefined buffer [8];\n  \n  buffer[0] = dataFlag;\n  result = FUN_08001828(PTR_DAT_08004074,data1,data2,1,buffer,1,200);\n  if (result != 0) {\n    FUN_08004490(PTR_s____Src_i2c_c_08004078,0x1b);\n  }\n  if (delayFlag != 0) {\n    thunk_do_nothing_08001168(0x32);\n  }\n  return;\n}\n\n",
            "called": [
                "thunk_FUN_08001168",
                "FUN_08001828",
                "FUN_08004490"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800403c",
            "calling": [
                "FUN_08003298",
                "FUN_08002cb0",
                "FUN_0800411c",
                "FUN_08002ad0"
            ],
            "imported": false,
            "current_name": "process_data_0800403c"
        },
        "FUN_08000cec": {
            "renaming": {
                "FUN_08000cec": "floating_point_addition_08000cec",
                "param_1": "num1",
                "param_2": "num2",
                "param_3": "unusedParam",
                "param_4": "exp1",
                "lVar1": "longProduct",
                "uVar2": "tempResult",
                "uVar3": "shiftedNum1",
                "iVar4": "expSum",
                "iVar5": "adjustedExp",
                "uVar6": "productLow",
                "iVar7": "finalExp",
                "uVar8": "finalResult",
                "bVar9": "condition",
                "bVar10": "borrow"
            },
            "code": "\nuint floatingPointAddition_08000cec(uint num1,uint num2,undefined4 unusedParam,uint exp1)\n\n{\n  longlong longProduct;\n  uint tempResult;\n  uint shiftedNum1;\n  int expSum;\n  int adjustedExp;\n  uint productLow;\n  int finalExp;\n  uint finalResult;\n  bool condition;\n  bool borrow;\n  \n  shiftedNum1 = num1 >> 0x17 & 0xff;\n  condition = shiftedNum1 == 0;\n  if (!condition) {\n    exp1 = num2 >> 0x17 & 0xff;\n    condition = exp1 == 0;\n  }\n  if (!condition) {\n    condition = shiftedNum1 == 0xff;\n  }\n  if (!condition) {\n    condition = exp1 == 0xff;\n  }\n  if (condition) {\n    exp1 = num2 >> 0x17 & 0xff;\n    if (shiftedNum1 == 0xff || exp1 == 0xff) {\n      condition = num1 == 0 || num1 == 0x80000000;\n      tempResult = num2;\n      if (num1 != 0 && num1 != 0x80000000) {\n        condition = num2 == 0;\n        tempResult = num1;\n      }\n      if (!condition) {\n        condition = num2 == 0x80000000;\n      }\n      finalResult = tempResult;\n      if (((condition) || ((shiftedNum1 == 0xff && ((tempResult & 0x7fffff) != 0)))) ||\n         ((exp1 == 0xff && (finalResult = num2, (num2 & 0x7fffff) != 0)))) {\n        return finalResult | 0x7fc00000;\n      }\n      tempResult = tempResult ^ num2;\n      goto LAB_08000e3c;\n    }\n    condition = (num1 & 0x7fffffff) == 0;\n    if (!condition) {\n      condition = (num2 & 0x7fffffff) == 0;\n    }\n    if (condition) {\n      return (num1 ^ num2) & 0x80000000;\n    }\n    condition = shiftedNum1 == 0;\n    tempResult = num1 & 0x80000000;\n    while( true ) {\n      if (condition) {\n        num1 = num1 << 1;\n        condition = (num1 & 0x800000) == 0;\n      }\n      if (!condition) break;\n      shiftedNum1 = shiftedNum1 - 1;\n    }\n    num1 = num1 | tempResult;\n    condition = exp1 == 0;\n    tempResult = num2 & 0x80000000;\n    while( true ) {\n      if (condition) {\n        num2 = num2 << 1;\n        condition = (num2 & 0x800000) == 0;\n      }\n      if (!condition) break;\n      exp1 = exp1 - 1;\n    }\n    num2 = num2 | tempResult;\n  }\n  expSum = shiftedNum1 + exp1;\n  finalResult = num1 ^ num2;\n  shiftedNum1 = num1 << 9;\n  condition = shiftedNum1 == 0;\n  if (!condition) {\n    num2 = num2 << 9;\n    condition = num2 == 0;\n  }\n  if (condition) {\n    if (shiftedNum1 == 0) {\n      num2 = num2 << 9;\n    }\n    tempResult = finalResult & 0x80000000 | num1 & 0x7fffff | num2 >> 9;\n    borrow = SBORROW4(expSum,0x7f);\n    adjustedExp = expSum + -0x7f;\n    condition = adjustedExp == 0;\n    finalExp = adjustedExp;\n    if (!condition && 0x7e < expSum) {\n      borrow = SBORROW4(0xff,adjustedExp);\n      finalExp = 0xff - adjustedExp;\n      condition = adjustedExp == 0xff;\n    }\n    if (!condition && finalExp < 0 == borrow) {\n      tempResult = tempResult | adjustedExp * 0x800000;\n    }\n    if (!condition && finalExp < 0 == borrow) {\n      return tempResult;\n    }\n    tempResult = tempResult | 0x800000;\n    productLow = 0;\n    borrow = SBORROW4(adjustedExp,1);\n    finalResult = expSum - 0x80;\n    condition = finalResult == 0;\n    shiftedNum1 = finalResult;\n  }\n  else {\n    longProduct = (ulonglong)(shiftedNum1 >> 5 | 0x8000000) * (ulonglong)(num2 >> 5 | 0x8000000);\n    productLow = (uint)longProduct;\n    tempResult = (uint)((ulonglong)longProduct >> 0x20);\n    condition = tempResult < 0x800000;\n    if (condition) {\n      tempResult = tempResult << 1;\n    }\n    if (condition) {\n      tempResult = tempResult | productLow >> 0x1f;\n      productLow = productLow << 1;\n    }\n    tempResult = finalResult & 0x80000000 | tempResult;\n    finalResult = (expSum + -0x7f) - (uint)condition;\n    borrow = SBORROW4(finalResult,0xfd);\n    condition = finalResult == 0xfd;\n    shiftedNum1 = finalResult - 0xfd;\n    if (finalResult < 0xfe) {\n      tempResult = tempResult + finalResult * 0x800000 + (uint)(0x7fffffff < productLow);\n      if (productLow == 0x80000000) {\n        tempResult = tempResult & 0xfffffffe;\n      }\n      return tempResult;\n    }\n  }\n  if (condition || (int)shiftedNum1 < 0 != borrow) {\n    condition = (int)(finalResult + 0x19) < 0;\n    if (finalResult == 0xffffffe7 || condition != SCARRY4(finalResult,0x19)) {\n      tempResult = tempResult & 0x80000000;\n    }\n    if (finalResult != 0xffffffe7 && condition == SCARRY4(finalResult,0x19)) {\n      shiftedNum1 = (tempResult << 1) >> (-finalResult & 0xff);\n      finalResult = tempResult << (finalResult + 0x20 & 0xff);\n      shiftedNum1 = ((uint)((tempResult & 0x80000000) != 0) << 0x1f | shiftedNum1 >> 1) + (uint)((byte)shiftedNum1 & 1);\n      if ((productLow | finalResult << 1) == 0) {\n        shiftedNum1 = shiftedNum1 & ~(finalResult >> 0x1f);\n      }\n      return shiftedNum1;\n    }\n    return tempResult;\n  }\nLAB_08000e3c:\n  return tempResult & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000cec",
            "calling": [
                "FUN_08002f28",
                "FUN_08004a30",
                "FUN_0800483c",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_08004a84",
                "FUN_08002ec0",
                "FUN_08003330",
                "FUN_08002bf0",
                "FUN_08002b48"
            ],
            "imported": false,
            "current_name": "floating_point_addition_08000cec"
        },
        "FUN_08006070": {
            "renaming": {
                "FUN_08006070": "improved_calculation_08006070",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "tempVar1",
                "uVar2": "tempVar2",
                "iVar3": "tempVar3",
                "uVar4": "maskedInput4",
                "uVar5": "result",
                "uVar6": "tempResult",
                "uVar7": "intermediateResult1",
                "uVar8": "intermediateResult2"
            },
            "code": "\nulonglong improvedCalculation_08006070(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint tempVar1;\n  uint tempVar2;\n  int tempVar3;\n  uint maskedInput4;\n  ulonglong result;\n  ulonglong tempResult;\n  undefined8 intermediateResult1;\n  undefined8 intermediateResult2;\n  \n  tempResult = CONCAT44(DAT_08006214,DAT_08006210);\n  result = CONCAT44(DAT_08006204,DAT_08006200);\n  maskedInput4 = input4 & 0x7fffffff;\n  if ((DAT_08006220 < (maskedInput4 | (-input3 | input3) >> 0x1f)) ||\n     (tempVar2 = input2 & 0x7fffffff, DAT_08006220 < (tempVar2 | (-input1 | input1) >> 0x1f))) {\n    result = FUN_0800016c(input1,input2,input3,input4,input4);\n    return result;\n  }\n  if ((input4 + 0xc0100000 | input3) == 0) {\n    result = FUN_08006d68();\n    return result;\n  }\n  tempVar1 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n  if ((input1 | tempVar2) == 0) {\n    if (tempVar1 == 2) {\n      return CONCAT44(DAT_080061fc,DAT_080061f8);\n    }\n    if (tempVar1 != 3) {\n      return CONCAT44(input2,input1);\n    }\n  }\n  else {\n    if ((input3 | maskedInput4) != 0) {\n      if (maskedInput4 == DAT_08006220) {\n        if (tempVar2 == maskedInput4) {\n          if (tempVar1 == 2) {\n            return CONCAT44(DAT_080061ec,DAT_080061e8);\n          }\n          if (tempVar1 == 3) {\n            return CONCAT44(DAT_080061f4,DAT_080061f0);\n          }\n          if (tempVar1 != 1) {\n            return CONCAT44(DAT_0800621c,DAT_08006218);\n          }\n          return CONCAT44(DAT_080061e4,DAT_080061e0);\n        }\n        if (tempVar1 == 2) {\n          return CONCAT44(DAT_080061fc,DAT_080061f8);\n        }\n        if (tempVar1 == 3) {\n          return result;\n        }\n        if (tempVar1 == 1) {\n          return 0x8000000000000000;\n        }\n        return 0;\n      }\n      if (tempVar2 != DAT_08006220) {\n        tempVar3 = (int)(tempVar2 - maskedInput4) >> 0x14;\n        if (tempVar3 < 0x3d) {\n          if (((int)input4 < 0) && (tempVar3 + 0x3c < 0 != SCARRY4(tempVar3,0x3c))) {\n            tempResult = 0;\n          }\n          else {\n            FUN_08000724(input1,input2);\n            do_nothing_0800708c();\n            tempResult = FUN_08006d68();\n          }\n        }\n        tempVar3 = (int)(tempResult >> 0x20);\n        if (tempVar1 != 1) {\n          if (tempVar1 == 2) {\n            intermediateResult2 = FUN_08000168((int)tempResult,tempVar3,DAT_08006208,DAT_0800620c);\n            intermediateResult1 = CONCAT44(DAT_080061fc,DAT_080061f8);\n          }\n          else {\n            if (tempVar1 == 0) {\n              return tempResult;\n            }\n            intermediateResult1 = FUN_08000168((int)tempResult,tempVar3,DAT_08006208,DAT_0800620c);\n            intermediateResult2 = CONCAT44(DAT_080061fc,DAT_080061f8);\n          }\n          result = FUN_08000168((int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20),(int)intermediateResult2,\n                               (int)((ulonglong)intermediateResult2 >> 0x20));\n          return result;\n        }\n        return tempResult & 0xffffffff | (ulonglong)(tempVar3 + 0x80000000) << 0x20;\n      }\n    }\n    result = tempResult;\n    if ((int)input2 < 0) {\n      result = CONCAT44(DAT_080061dc,DAT_080061d8);\n    }\n  }\n  return result;\n}\n\n",
            "called": [
                "FUN_08000724",
                "FUN_08006d68",
                "FUN_0800708c",
                "FUN_08000168",
                "FUN_0800016c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006070",
            "calling": [
                "thunk_FUN_08006070"
            ],
            "imported": false,
            "current_name": "improved_calculation_08006070"
        },
        "thunk_FUN_08006070": {
            "renaming": {
                "thunk_FUN_08006070": "calculate_result_thunk_08006070",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "combined_condition",
                "uVar2": "masked_input2",
                "iVar3": "difference_shifted",
                "uVar4": "masked_input4",
                "uVar5": "result",
                "uVar6": "temp_result",
                "uVar7": "intermediate_result1",
                "uVar8": "intermediate_result2"
            },
            "code": "\nulonglong calculate_result_thunk_08006070(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint combined_condition;\n  uint masked_input2;\n  int difference_shifted;\n  uint masked_input4;\n  ulonglong result;\n  ulonglong temp_result;\n  undefined8 intermediate_result1;\n  undefined8 intermediate_result2;\n  \n  temp_result = CONCAT44(DAT_08006214,DAT_08006210);\n  result = CONCAT44(DAT_08006204,DAT_08006200);\n  masked_input4 = input4 & 0x7fffffff;\n  if ((DAT_08006220 < (masked_input4 | (-input3 | input3) >> 0x1f)) ||\n     (masked_input2 = input2 & 0x7fffffff, DAT_08006220 < (masked_input2 | (-input1 | input1) >> 0x1f))) {\n    result = FUN_0800016c(input1,input2,input3,input4,input4);\n    return result;\n  }\n  if ((input4 + 0xc0100000 | input3) == 0) {\n    result = FUN_08006d68();\n    return result;\n  }\n  combined_condition = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n  if ((input1 | masked_input2) == 0) {\n    if (combined_condition == 2) {\n      return CONCAT44(DAT_080061fc,DAT_080061f8);\n    }\n    if (combined_condition != 3) {\n      return CONCAT44(input2,input1);\n    }\n  }\n  else {\n    if ((input3 | masked_input4) != 0) {\n      if (masked_input4 == DAT_08006220) {\n        if (masked_input2 == masked_input4) {\n          if (combined_condition == 2) {\n            return CONCAT44(DAT_080061ec,DAT_080061e8);\n          }\n          if (combined_condition == 3) {\n            return CONCAT44(DAT_080061f4,DAT_080061f0);\n          }\n          if (combined_condition != 1) {\n            return CONCAT44(DAT_0800621c,DAT_08006218);\n          }\n          return CONCAT44(DAT_080061e4,DAT_080061e0);\n        }\n        if (combined_condition == 2) {\n          return CONCAT44(DAT_080061fc,DAT_080061f8);\n        }\n        if (combined_condition == 3) {\n          return result;\n        }\n        if (combined_condition == 1) {\n          return 0x8000000000000000;\n        }\n        return 0;\n      }\n      if (masked_input2 != DAT_08006220) {\n        difference_shifted = (int)(masked_input2 - masked_input4) >> 0x14;\n        if (difference_shifted < 0x3d) {\n          if (((int)input4 < 0) && (difference_shifted + 0x3c < 0 != SCARRY4(difference_shifted,0x3c))) {\n            temp_result = 0;\n          }\n          else {\n            FUN_08000724(input1,input2);\n            do_nothing_0800708c();\n            temp_result = FUN_08006d68();\n          }\n        }\n        difference_shifted = (int)(temp_result >> 0x20);\n        if (combined_condition != 1) {\n          if (combined_condition == 2) {\n            intermediate_result2 = FUN_08000168((int)temp_result,difference_shifted,DAT_08006208,DAT_0800620c);\n            intermediate_result1 = CONCAT44(DAT_080061fc,DAT_080061f8);\n          }\n          else {\n            if (combined_condition == 0) {\n              return temp_result;\n            }\n            intermediate_result1 = FUN_08000168((int)temp_result,difference_shifted,DAT_08006208,DAT_0800620c);\n            intermediate_result2 = CONCAT44(DAT_080061fc,DAT_080061f8);\n          }\n          result = FUN_08000168((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),(int)intermediate_result2,\n                               (int)((ulonglong)intermediate_result2 >> 0x20));\n          return result;\n        }\n        return temp_result & 0xffffffff | (ulonglong)(difference_shifted + 0x80000000) << 0x20;\n      }\n    }\n    result = temp_result;\n    if ((int)input2 < 0) {\n      result = CONCAT44(DAT_080061dc,DAT_080061d8);\n    }\n  }\n  return result;\n}\n\n",
            "called": [
                "FUN_08006070"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080058fc",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "calculate_result_thunk_08006070"
        },
        "FUN_08004cac": {
            "renaming": {
                "FUN_08004cac": "process_data_08004cac",
                "param_1": "inputData",
                "puVar1": "tempPointer"
            },
            "code": "\nvoid processData_08004cac(undefined4 inputData)\n\n{\n  undefined *tempPointer;\n  \n  tempPointer = PTR_DAT_08004cc4;\n  FUN_08004ffc(PTR_DAT_08004cc4,PTR_DAT_08004cc8,inputData);\n  FUN_08004c8c(tempPointer);\n  return;\n}\n\n",
            "called": [
                "FUN_08004c8c",
                "FUN_08004ffc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004cac",
            "calling": [
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "process_data_08004cac"
        },
        "FUN_08004c18": {
            "renaming": {
                "FUN_08004c18": "process_data_08004c18",
                "param_1": "inputData",
                "puVar1": "dataPtr",
                "iVar2": "time1",
                "iVar3": "time2",
                "uVar4": "stateValue",
                "puVar5": "ushortPtr"
            },
            "code": "\nundefined4 processData_08004c18(undefined inputData)\n\n{\n  undefined *dataPtr;\n  int time1;\n  int time2;\n  undefined stateValue;\n  ushort *ushortPtr;\n  \n  ushortPtr = (ushort *)PTR_DAT_08004c28;\n  *PTR_DAT_08004c28 = inputData;\n  dataPtr = PTR_DAT_08004c2c;\n  if ((PTR_DAT_08004c2c[0x39] == '\\x01') || (PTR_DAT_08004c2c[0x39] == '\\\"')) {\n    if (ushortPtr == (ushort *)0x0) {\n      return 1;\n    }\n    if (PTR_DAT_08004c2c[0x38] != '\\x01') {\n      PTR_DAT_08004c2c[0x38] = 1;\n      *(undefined4 *)(dataPtr + 0x3c) = 0;\n      *(undefined2 *)(dataPtr + 0x24) = 1;\n      if (dataPtr[0x39] == '\\\"') {\n        stateValue = 0x32;\n      }\n      else {\n        stateValue = 0x12;\n      }\n      *(undefined2 *)(dataPtr + 0x26) = 1;\n      dataPtr[0x39] = stateValue;\nLAB_080027c4:\n      do {\n        if (*(short *)(dataPtr + 0x26) == 0) {\n          time1 = FUN_0800115c();\n          do {\n            if (**(int **)dataPtr << 0x19 < 0) {\n              if (dataPtr[0x39] == '2') {\n                stateValue = 0x22;\n              }\n              else {\n                stateValue = 1;\n              }\n              dataPtr[0x39] = stateValue;\n              dataPtr[0x38] = 0;\n              return 0;\n            }\n            time2 = FUN_0800115c();\n          } while ((uint)(time2 - time1) < 6);\nLAB_0800281c:\n          time1 = *(int *)dataPtr;\n          *(uint *)(time1 + 0xc) = *(uint *)(time1 + 0xc) & 0xffffff7f;\n          *(uint *)(time1 + 0xc) = *(uint *)(time1 + 0xc) & 0xffffffdf;\n          *(uint *)(time1 + 0xc) = *(uint *)(time1 + 0xc) & 0xfffffeff;\n          *(uint *)(time1 + 0x14) = *(uint *)(time1 + 0x14) & 0xfffffffe;\n          dataPtr[0x39] = 1;\n          dataPtr[0x38] = 0;\n          return 3;\n        }\n        *(short *)(dataPtr + 0x26) = *(short *)(dataPtr + 0x26) + -1;\n        if (*(int *)(dataPtr + 8) == 0x1000) {\n          time1 = FUN_0800115c();\n          while (-1 < **(int **)dataPtr << 0x18) {\n            time2 = FUN_0800115c();\n            if (5 < (uint)(time2 - time1)) goto LAB_0800281c;\n          }\n          (*(int **)dataPtr)[1] = *ushortPtr & 0x1ff;\n          if (*(int *)(dataPtr + 0x10) == 0) {\n            ushortPtr = ushortPtr + 1;\n            goto LAB_080027c4;\n          }\n        }\n        else {\n          time1 = FUN_0800115c();\n          while (-1 < **(int **)dataPtr << 0x18) {\n            time2 = FUN_0800115c();\n            if (5 < (uint)(time2 - time1)) goto LAB_0800281c;\n          }\n          (*(int **)dataPtr)[1] = (uint)*(byte *)ushortPtr;\n        }\n        ushortPtr = (ushort *)((int)ushortPtr + 1);\n      } while( true );\n    }\n  }\n  return 2;\n}\n\n",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c18",
            "calling": [
                "FUN_08004c8c",
                "FUN_08004300",
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "process_data_08004c18"
        },
        "FUN_0800483c": {
            "renaming": {
                "FUN_0800483c": "process_data_0800483c",
                "param_1": "data_array",
                "uVar1": "temp_result1",
                "uVar2": "temp_result2",
                "iVar3": "temp_var3",
                "iVar4": "temp_var4",
                "iVar5": "temp_var5",
                "iVar6": "temp_var6"
            },
            "code": "\nvoid process_data_0800483c(int *data_array)\n\n{\n  undefined4 temp_result1;\n  undefined4 temp_result2;\n  int temp_var3;\n  int temp_var4;\n  int temp_var5;\n  int temp_var6;\n  \n  temp_var4 = data_array[0xc];\n  temp_result1 = FUN_08000adc(data_array[7],data_array[9]);\n  temp_var4 = FUN_08000ad8(temp_result1,temp_var4);\n  data_array[10] = temp_var4;\n  if (*data_array == 3) {\n    temp_var4 = FUN_08001064(data_array[10],0);\n    if (temp_var4 == 0) {\n      temp_var4 = FUN_08001028(data_array[10],DAT_08004974);\n    }\n    else {\n      temp_var4 = FUN_08001064(data_array[10],DAT_08004964);\n    }\n    if (temp_var4 != 0) {\n      temp_var5 = data_array[10];\n      temp_result1 = FUN_08000cec(data_array[10],DAT_08004968);\n      temp_var4 = FUN_08001064(data_array[10],0);\n      temp_var3 = data_array[10];\n      if (temp_var4 == 0) {\n        temp_var3 = temp_var3 + -0x80000000;\n      }\n      temp_result1 = FUN_08000e54(temp_result1,temp_var3);\n      temp_var4 = FUN_08000ad8(temp_var5,temp_result1);\n      data_array[10] = temp_var4;\n    }\n  }\n  temp_var6 = data_array[2];\n  temp_var5 = data_array[3];\n  temp_var4 = FUN_08000cec(data_array[1],data_array[10]);\n  data_array[0xe] = temp_var4;\n  temp_var4 = FUN_08000adc(data_array[10],data_array[0xf]);\n  data_array[0xf] = temp_var4;\n  temp_var3 = FUN_08001028(data_array[0xf],DAT_0800496c);\n  temp_var4 = DAT_0800496c;\n  if ((temp_var3 == 0) &&\n     (temp_var3 = FUN_08001064(data_array[0xf],DAT_08004970), temp_var4 = DAT_08004970, temp_var3 == 0)) {\n    temp_var4 = data_array[0xf];\n  }\n  data_array[0xf] = temp_var4;\n  temp_var4 = FUN_08000ad8(data_array[0xc],data_array[0xd]);\n  data_array[0x10] = temp_var4;\n  temp_var4 = data_array[0xe];\n  temp_result1 = FUN_08000cec(temp_var6,data_array[0xf]);\n  temp_result1 = FUN_08000adc(temp_result1,temp_var4);\n  temp_result2 = FUN_08000cec(temp_var5,data_array[0x10]);\n  temp_var4 = FUN_08000ad8(temp_result1,temp_result2);\n  data_array[0x12] = temp_var4;\n  temp_result1 = FUN_08000c44(data_array[0x13]);\n  temp_var3 = FUN_08001028(data_array[0x12],DAT_0800496c);\n  temp_var4 = DAT_0800496c;\n  if ((temp_var3 == 0) &&\n     (temp_var3 = FUN_08001064(data_array[0x12],DAT_08004970), temp_var4 = DAT_08004970, temp_var3 == 0)) {\n    temp_var4 = data_array[0x12];\n  }\n  temp_var4 = FUN_08000cec(temp_var4,temp_result1);\n  data_array[0x12] = temp_var4;\n  data_array[0xd] = data_array[0xc];\n  data_array[0xb] = data_array[10];\n  data_array[0x15] = data_array[0x14];\n  return;\n}\n\n",
            "called": [
                "FUN_08001064",
                "FUN_08000adc",
                "FUN_08000e54",
                "FUN_08000cec",
                "FUN_08000c44",
                "FUN_08000ad8",
                "FUN_08001028"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800483c",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "process_data_0800483c"
        },
        "FUN_08004c8c": {
            "renaming": {
                "FUN_08004c8c": "process_array_08004c8c",
                "param_1": "inputArray",
                "uVar1": "requiredLength",
                "puVar2": "currentElement"
            },
            "code": "\nvoid processArray_08004c8c(undefined *inputArray)\n\n{\n  uint requiredLength;\n  undefined *currentElement;\n  \n  currentElement = inputArray;\n  while( true ) {\n    requiredLength = FUN_08000150(inputArray);\n    if (requiredLength <= (uint)((int)currentElement - (int)inputArray)) break;\n    FUN_08004c18(*currentElement);\n    currentElement = currentElement + 1;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08000150",
                "FUN_08004c18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c8c",
            "calling": [
                "FUN_08004300",
                "FUN_08004490",
                "FUN_08004cac"
            ],
            "imported": false,
            "current_name": "process_array_08004c8c"
        },
        "FUN_08001460": {
            "renaming": {
                "FUN_08001460": "process_data_08001460",
                "param_1": "data_ptr",
                "param_2": "input_value",
                "param_3": "timeout",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "uVar3": "selected_value",
                "puVar4": "data"
            },
            "code": "\nundefined4 processData_08001460(uint **data_ptr,uint input_value,uint timeout)\n\n{\n  int start_time;\n  int current_time;\n  uint selected_value;\n  uint *data;\n  \n  start_time = FUN_0800115c();\n  do {\n    data = *data_ptr;\n    if ((input_value << 8) >> 0x18 == 1) {\n      selected_value = data[5];\n    }\n    else {\n      selected_value = data[6];\n    }\n    if ((input_value & 0xffff & ~selected_value) == 0) {\n      return 0;\n    }\n    if ((int)(data[5] << 0x15) < 0) {\n      *data = *data | 0x200;\n      data[5] = data[5] & 0xfffffbff;\n      data_ptr[0xe] = (uint *)0x4;\n      *(undefined *)((int)data_ptr + 0x35) = 0x20;\n      *(undefined *)(data_ptr + 0xd) = 0;\n      return 1;\n    }\n  } while ((timeout == 0xffffffff) ||\n          ((timeout != 0 && (current_time = FUN_0800115c(), (uint)(current_time - start_time) <= timeout))));\n  *(undefined *)((int)data_ptr + 0x35) = 0x20;\n  *(undefined *)(data_ptr + 0xd) = 0;\n  return 3;\n}\n\n",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001460",
            "calling": [
                "FUN_080015e8",
                "FUN_08001530"
            ],
            "imported": false,
            "current_name": "process_data_08001460"
        },
        "FUN_08001064": {
            "renaming": {
                "FUN_08001064": "check_zero_status_08001064",
                "in_CY": "zeroStatus"
            },
            "code": "\nbool checkZeroStatus_08001064(void)\n\n{\n  char zeroStatus;\n  \n  FUN_08000ffc();\n  return zeroStatus == '\\0';\n}\n\n",
            "called": [
                "FUN_08000ffc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001064",
            "calling": [
                "FUN_0800483c",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "check_zero_status_08001064"
        },
        "FUN_08003fd0": {
            "renaming": {
                "FUN_08003fd0": "update_value_at_offset_08003fd0",
                "param_1": "new_value"
            },
            "code": "\nvoid update_value_at_offset_08003fd0(undefined4 new_value)\n\n{\n  *(undefined4 *)(*(int *)PTR_DAT_08003fd8 + 0x3c) = new_value;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fd0",
            "calling": [
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "imported": false,
            "current_name": "update_value_at_offset_08003fd0"
        },
        "FUN_08000892": {
            "renaming": {
                "FUN_08000892": "calculate_result_08000892",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "tempVar1",
                "unaff_r4": "unaffectedVar",
                "uVar2": "tempVar2",
                "uVar3": "tempVar3",
                "in_r12": "inputMask",
                "bVar4": "isZero"
            },
            "code": "\nulonglong calculateResult_08000892(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint tempVar1;\n  uint unaffectedVar;\n  uint tempVar2;\n  uint tempVar3;\n  uint inputMask;\n  bool isZero;\n  \n  tempVar2 = inputMask & input4 >> 0x14;\n  tempVar3 = input2;\n  if (unaffectedVar != inputMask || tempVar2 != inputMask) {\n    if (unaffectedVar == inputMask) {\n      if (((input1 | input2 << 0xc) == 0) && (input1 = input3, tempVar3 = input4, tempVar2 != inputMask)\n         ) {\nLAB_08000704:\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (tempVar2 == inputMask) {\n      input1 = input3;\n      tempVar3 = input4;\n      if ((input3 | input4 << 0xc) == 0) {\nLAB_080006c8:\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      isZero = (input1 | input2 << 1) == 0;\n      if (!isZero) {\n        isZero = (input3 | input4 << 1) == 0;\n      }\n      if (!isZero) {\n        if (unaffectedVar == 0) {\n          tempVar3 = input2 & 0x80000000;\n          do {\n            tempVar1 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(tempVar1 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | tempVar3;\n          if (tempVar2 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          tempVar3 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(tempVar3 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) goto LAB_08000704;\n      if ((input3 | input4 << 1) != 0) goto LAB_080006c8;\n    }\n  }\n  return CONCAT44(tempVar3,input1) | 0x7ff8000000000000;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000892",
            "calling": [
                "FUN_08000724"
            ],
            "imported": false,
            "current_name": "calculate_result_08000892"
        },
        "FUN_08004458": {
            "renaming": {
                "FUN_08004458": "copy_and_process_data_08004458",
                "puVar1": "destination",
                "uVar2": "tempData",
                "puVar3": "destIter",
                "puVar4": "srcIter",
                "puVar5": "source",
                "local_30": "buffer",
                "local_24": "unusedArray"
            },
            "code": "\nvoid copyAndProcessData_08004458(void)\n\n{\n  undefined4 *destination;\n  undefined4 tempData;\n  undefined4 *destIter;\n  undefined4 *srcIter;\n  undefined4 *source;\n  undefined4 buffer [3];\n  undefined2 unusedArray [10];\n  \n  destination = buffer;\n  source = (undefined4 *)PTR_DAT_0800448c;\n  do {\n    srcIter = source;\n    destIter = destination;\n    tempData = srcIter[1];\n    source = srcIter + 2;\n    *destIter = *srcIter;\n    destIter[1] = tempData;\n    destination = destIter + 2;\n  } while (source != (undefined4 *)(PTR_DAT_0800448c + 0x18));\n  destIter[2] = *source;\n  *(undefined2 *)(destIter + 3) = *(undefined2 *)(srcIter + 3);\n  FUN_08004300(0x70,buffer,0x1e);\n  return;\n}\n\n",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004458",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "copy_and_process_data_08004458"
        },
        "thunk_FUN_08001168": {
            "renaming": {
                "thunk_FUN_08001168": "thunk_do_nothing_08001168"
            },
            "code": "\nvoid thunk_do_nothing_08001168(void)\n\n{\n  return;\n}\n\n",
            "called": [
                "FUN_08001168"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f64",
            "calling": [
                "FUN_08003298",
                "FUN_08004028",
                "FUN_0800403c",
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "thunk_do_nothing_08001168"
        },
        "FUN_08000134": {
            "renaming": {
                "FUN_08000134": "combine_parameters_08000134",
                "param_1": "first_param",
                "param_2": "second_param"
            },
            "code": "\nundefined8 combine_parameters_08000134(undefined *first_param,undefined *second_param)\n\n{\n  if (DAT_08000144 != 0) {\n    first_param = PTR_FUN_0800014c;\n    second_param = PTR_DAT_08000148;\n  }\n  return CONCAT44(second_param,first_param);\n}\n\n",
            "called": [
                "FUN_080072d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000134",
            "calling": [
                "FUN_08004fb4"
            ],
            "imported": false,
            "current_name": "combine_parameters_08000134"
        },
        "FUN_08003eb0": {
            "renaming": {
                "FUN_08003eb0": "shift_or_interrupt_08003eb0",
                "param_1": "inputValue",
                "CONCAT44": "combineValues"
            },
            "code": "\nlonglong shiftOrInterrupt_08003eb0(uint inputValue)\n\n{\n  if (*(int *)PTR_DAT_08003ec4 == 0) {\n    software_interrupt(0x3f);\n    return combineValues(inputValue,1);\n  }\n  return (ulonglong)inputValue << 0x20;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003eb0",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "shift_or_interrupt_08003eb0"
        },
        "FUN_08005c70": {
            "renaming": {
                "FUN_08005c70": "complex_calculation_08005c70",
                "param_1": "input_1",
                "param_2": "input_2",
                "iVar1": "int_var1",
                "uVar2": "uint_var2",
                "uVar3": "uint_var3",
                "uVar4": "uint_var4",
                "uVar5": "uint_var5",
                "uVar6": "uint_var6",
                "uVar7": "uint_var7",
                "uVar8": "uint_var8",
                "uVar9": "ulonglong_var9",
                "uVar10": "ulonglong_var10",
                "uVar11": "ulonglong_var11",
                "uVar12": "ulonglong_var12"
            },
            "code": "\nulonglong complex_calculation_08005c70(uint input_1,uint input_2)\n\n{\n  int int_var1;\n  undefined4 uint_var2;\n  undefined4 uint_var3;\n  undefined4 uint_var4;\n  undefined4 uint_var5;\n  undefined4 uint_var6;\n  undefined4 uint_var7;\n  uint uint_var8;\n  ulonglong ulonglong_var9;\n  undefined8 ulonglong_var10;\n  undefined8 ulonglong_var11;\n  undefined8 ulonglong_var12;\n  \n  ulonglong_var9 = CONCAT44(input_2,input_1);\n  uint_var8 = input_2 & 0x7fffffff;\n  if (DAT_08005f90 < (int)uint_var8) {\n    if ((uint_var8 + 0xc0100000 | input_1) != 0) {\n      ulonglong_var10 = FUN_08000168(input_1,input_2,input_1,input_2);\n      uint_var2 = (undefined4)((ulonglong)ulonglong_var10 >> 0x20);\n      ulonglong_var9 = FUN_08000724((int)ulonglong_var10,uint_var2,(int)ulonglong_var10,uint_var2);\n      return ulonglong_var9;\n    }\n    ulonglong_var9 = FUN_080004d0(input_1,input_2,DAT_08005f28,DAT_08005f2c);\n    ulonglong_var10 = FUN_080004d0(input_1,input_2,DAT_08005f30,DAT_08005f34);\nLAB_08005cba:\n    ulonglong_var9 = FUN_0800016c((int)ulonglong_var9,(int)(ulonglong_var9 >> 0x20),(int)ulonglong_var10,\n                         (int)((ulonglong)ulonglong_var10 >> 0x20));\n  }\n  else {\n    if ((int)uint_var8 <= DAT_08005f94) {\n      if (0x3e3fffff < uint_var8) {\n        ulonglong_var10 = FUN_080004d0(input_1,input_2,input_1,input_2);\n        uint_var7 = (undefined4)((ulonglong)ulonglong_var10 >> 0x20);\n        uint_var2 = (undefined4)ulonglong_var10;\n        ulonglong_var10 = FUN_080004d0(uint_var2,uint_var7,DAT_08005f40,DAT_08005f44);\n        ulonglong_var10 = FUN_0800016c((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),DAT_08005f48,DAT_08005f4c\n                             );\n        ulonglong_var10 = FUN_080004d0((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),uint_var2,uint_var7);\n        ulonglong_var10 = FUN_08000168((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),DAT_08005f50,DAT_08005f54\n                             );\n        ulonglong_var10 = FUN_080004d0((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),uint_var2,uint_var7);\n        ulonglong_var10 = FUN_0800016c((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),DAT_08005f58,DAT_08005f5c\n                             );\n        ulonglong_var10 = FUN_080004d0((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),uint_var2,uint_var7);\n        ulonglong_var10 = FUN_08000168((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),DAT_08005f60,DAT_08005f64\n                             );\n        ulonglong_var10 = FUN_080004d0((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),uint_var2,uint_var7);\n        ulonglong_var10 = FUN_0800016c((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),DAT_08005f68,DAT_08005f6c\n                             );\n        ulonglong_var10 = FUN_080004d0((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),uint_var2,uint_var7);\n        ulonglong_var11 = FUN_080004d0(uint_var2,uint_var7,DAT_08005f70,DAT_08005f74);\n        ulonglong_var11 = FUN_08000168((int)ulonglong_var11,(int)((ulonglong)ulonglong_var11 >> 0x20),DAT_08005f78,DAT_08005f7c\n                             );\n        ulonglong_var11 = FUN_080004d0((int)ulonglong_var11,(int)((ulonglong)ulonglong_var11 >> 0x20),uint_var2,uint_var7);\n        ulonglong_var11 = FUN_0800016c((int)ulonglong_var11,(int)((ulonglong)ulonglong_var11 >> 0x20),DAT_08005f80,DAT_08005f84\n                             );\n        ulonglong_var11 = FUN_080004d0((int)ulonglong_var11,(int)((ulonglong)ulonglong_var11 >> 0x20),uint_var2,uint_var7);\n        ulonglong_var11 = FUN_08000168((int)ulonglong_var11,(int)((ulonglong)ulonglong_var11 >> 0x20),DAT_08005f88,DAT_08005f8c\n                             );\n        ulonglong_var11 = FUN_080004d0((int)ulonglong_var11,(int)((ulonglong)ulonglong_var11 >> 0x20),uint_var2,uint_var7);\n        ulonglong_var11 = FUN_0800016c((int)ulonglong_var11,(int)((ulonglong)ulonglong_var11 >> 0x20),0,DAT_08005f98);\n        ulonglong_var10 = FUN_08000724((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),(int)ulonglong_var11,\n                              (int)((ulonglong)ulonglong_var11 >> 0x20));\n        ulonglong_var10 = FUN_080004d0((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),input_1,input_2);\n        goto LAB_08005cba;\n      }\n      ulonglong_var10 = FUN_0800016c(input_1,input_2,DAT_08005f38,DAT_08005f3c);\n      int_var1 = FUN_080009f0((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),0,DAT_08005f98);\n      if (int_var1 != 0) {\n        return ulonglong_var9;\n      }\n    }\n    ulonglong_var10 = do_nothing_0800708c(input_1,input_2);\n    ulonglong_var10 = FUN_08000168(0,DAT_08005f98,(int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20));\n    ulonglong_var10 = FUN_080004d0((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),0,DAT_08005f9c);\n    uint_var3 = (undefined4)((ulonglong)ulonglong_var10 >> 0x20);\n    uint_var2 = (undefined4)ulonglong_var10;\n    ulonglong_var10 = FUN_080004d0(uint_var2,uint_var3,DAT_08005f40,DAT_08005f44);\n    ulonglong_var10 = FUN_0800016c((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),DAT_08005f48,DAT_08005f4c);\n    ulonglong_var10 = FUN_080004d0((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),uint_var2,uint_var3);\n    ulonglong_var10 = FUN_08000168((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),DAT_08005f50,DAT_08005f54);\n    ulonglong_var10 = FUN_080004d0((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),uint_var2,uint_var3);\n    ulonglong_var10 = FUN_0800016c((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),DAT_08005f58,DAT_08005f5c);\n    ulonglong_var10 = FUN_080004d0((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),uint_var2,uint_var3);\n    ulonglong_var10 = FUN_08000168((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),DAT_08005f60,DAT_08005f64);\n    ulonglong_var10 = FUN_080004d0((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),uint_var2,uint_var3);\n    ulonglong_var10 = FUN_0800016c((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),DAT_08005f68,DAT_08005f6c);\n    ulonglong_var10 = FUN_080004d0((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),uint_var2,uint_var3);\n    uint_var4 = (undefined4)((ulonglong)ulonglong_var10 >> 0x20);\n    ulonglong_var11 = FUN_080004d0(uint_var2,uint_var3,DAT_08005f70,DAT_08005f74);\n    ulonglong_var11 = FUN_08000168((int)ulonglong_var11,(int)((ulonglong)ulonglong_var11 >> 0x20),DAT_08005f78,DAT_08005f7c);\n    ulonglong_var11 = FUN_080004d0((int)ulonglong_var11,(int)((ulonglong)ulonglong_var11 >> 0x20),uint_var2,uint_var3);\n    ulonglong_var11 = FUN_0800016c((int)ulonglong_var11,(int)((ulonglong)ulonglong_var11 >> 0x20),DAT_08005f80,DAT_08005f84);\n    ulonglong_var11 = FUN_080004d0((int)ulonglong_var11,(int)((ulonglong)ulonglong_var11 >> 0x20),uint_var2,uint_var3);\n    ulonglong_var11 = FUN_08000168((int)ulonglong_var11,(int)((ulonglong)ulonglong_var11 >> 0x20),DAT_08005f88,DAT_08005f8c);\n    ulonglong_var11 = FUN_080004d0((int)ulonglong_var11,(int)((ulonglong)ulonglong_var11 >> 0x20),uint_var2,uint_var3);\n    ulonglong_var11 = FUN_0800016c((int)ulonglong_var11,(int)((ulonglong)ulonglong_var11 >> 0x20),0,DAT_08005f98);\n    uint_var5 = (undefined4)((ulonglong)ulonglong_var11 >> 0x20);\n    ulonglong_var12 = FUN_08006c0c(uint_var2,uint_var3);\n    uint_var6 = (undefined4)((ulonglong)ulonglong_var12 >> 0x20);\n    uint_var7 = (undefined4)ulonglong_var12;\n    if (DAT_08005fa0 < (int)uint_var8) {\n      ulonglong_var10 = FUN_08000724((int)ulonglong_var10,uint_var4,(int)ulonglong_var11,uint_var5);\n      ulonglong_var10 = FUN_080004d0((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),uint_var7,uint_var6);\n      ulonglong_var10 = FUN_0800016c((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),uint_var7,uint_var6);\n      uint_var2 = (undefined4)((ulonglong)ulonglong_var10 >> 0x20);\n      ulonglong_var10 = FUN_0800016c((int)ulonglong_var10,uint_var2,(int)ulonglong_var10,uint_var2);\n      ulonglong_var10 = FUN_08000168((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),DAT_08005f30,DAT_08005f34);\n      uint_var2 = DAT_08005f28;\n      uint_var7 = DAT_08005f2c;\n    }\n    else {\n      ulonglong_var10 = FUN_08000724((int)ulonglong_var10,uint_var4,(int)ulonglong_var11,uint_var5);\n      ulonglong_var11 = FUN_0800016c(uint_var7,uint_var6,uint_var7,uint_var6);\n      ulonglong_var10 = FUN_080004d0((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),(int)ulonglong_var11,\n                            (int)((ulonglong)ulonglong_var11 >> 0x20));\n      ulonglong_var11 = FUN_080004d0(0,uint_var6,0,uint_var6);\n      ulonglong_var11 = FUN_08000168(uint_var2,uint_var3,(int)ulonglong_var11,(int)((ulonglong)ulonglong_var11 >> 0x20));\n      ulonglong_var12 = FUN_0800016c(uint_var7,uint_var6,0,uint_var6);\n      ulonglong_var11 = FUN_08000724((int)ulonglong_var11,(int)((ulonglong)ulonglong_var11 >> 0x20),(int)ulonglong_var12,\n                            (int)((ulonglong)ulonglong_var12 >> 0x20));\n      uint_var2 = (undefined4)((ulonglong)ulonglong_var11 >> 0x20);\n      ulonglong_var11 = FUN_0800016c((int)ulonglong_var11,uint_var2,(int)ulonglong_var11,uint_var2);\n      ulonglong_var11 = FUN_08000168(DAT_08006060,DAT_08006064,(int)ulonglong_var11,(int)((ulonglong)ulonglong_var11 >> 0x20));\n      ulonglong_var10 = FUN_08000168((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),(int)ulonglong_var11,\n                            (int)((ulonglong)ulonglong_var11 >> 0x20));\n      ulonglong_var11 = FUN_0800016c(0,uint_var6,0,uint_var6);\n      ulonglong_var11 = FUN_08000168(DAT_08006068,DAT_0800606c,(int)ulonglong_var11,(int)((ulonglong)ulonglong_var11 >> 0x20));\n      ulonglong_var10 = FUN_08000168((int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20),(int)ulonglong_var11,\n                            (int)((ulonglong)ulonglong_var11 >> 0x20));\n      uint_var2 = DAT_08006068;\n      uint_var7 = DAT_0800606c;\n    }\n    ulonglong_var9 = FUN_08000168(uint_var2,uint_var7,(int)ulonglong_var10,(int)((ulonglong)ulonglong_var10 >> 0x20));\n    if ((int)input_2 < 1) {\n      ulonglong_var9 = ulonglong_var9 & 0xffffffff | (ulonglong)((int)(ulonglong_var9 >> 0x20) + 0x80000000) << 0x20;\n    }\n  }\n  return ulonglong_var9;\n}\n\n",
            "called": [
                "FUN_08000724",
                "FUN_080009f0",
                "FUN_0800708c",
                "FUN_08000168",
                "FUN_080004d0",
                "FUN_0800016c",
                "FUN_08006c0c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005c70",
            "calling": [
                "FUN_08005854"
            ],
            "imported": false,
            "current_name": "complex_calculation_08005c70"
        },
        "FUN_08002ee8": {
            "renaming": {
                "FUN_08002ee8": "process_data_08002ee8",
                "iVar1": "conditionResult",
                "uVar2": "data"
            },
            "code": "\nvoid processData_08002ee8(void)\n\n{\n  int conditionResult;\n  undefined4 data;\n  \n  data = *(undefined4 *)(PTR_DAT_08002f18 + 8);\n  conditionResult = FUNC_08001050(data,DAT_08002f1c);\n  if ((conditionResult != 0) && (conditionResult = FUN_08001028(data,DAT_08002f20), conditionResult != 0)) {\n    FUN_08000adc(data,DAT_08002f20);\n    return;\n  }\n  FUN_08000ad8(data,DAT_08002f24);\n  return;\n}\n\n",
            "called": [
                "FUN_08000adc",
                "FUN_08000ad8",
                "FUN_08001050",
                "FUN_08001028"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ee8",
            "calling": [
                "FUN_08002f28",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "process_data_08002ee8"
        },
        "FUN_08001104": {
            "renaming": {
                "FUN_08001104": "process_data_08001104",
                "param_1": "inputData",
                "uVar1": "tempResult"
            },
            "code": "\nundefined4 processData_08001104(undefined4 inputData)\n\n{\n  uint tempResult;\n  \n  tempResult = FUN_08002214();\n  FUN_08001214(tempResult / 1000);\n  FUN_08001194(0xffffffff,inputData,0);\n  return 0;\n}\n\n",
            "called": [
                "FUN_08002214",
                "FUN_08001194",
                "FUN_08001214"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001104",
            "calling": [
                "FUN_08001128",
                "FUN_0800209c"
            ],
            "imported": false,
            "current_name": "process_data_08001104"
        },
        "thunk_FUN_0800115c": {
            "renaming": {
                "thunk_FUN_0800115c": "get_data_from_ptr_thunk_0800115c",
                "undefined4": "uint32_t"
            },
            "code": "\nuint32_t get_data_from_ptr_thunk_0800115c(void)\n\n{\n  return *(uint32_t *)PTR_DAT_08001164;\n}\n\n",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f60",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "get_data_from_ptr_thunk_0800115c"
        },
        "FUN_08006d68": {
            "renaming": {
                "FUN_08006d68": "calculate_result_08006d68",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "unused1",
                "param_4": "unused2",
                "iVar1": "case_index",
                "uVar2": "temp_var1",
                "uVar3": "temp_var2",
                "uVar4": "temp_var3",
                "uVar5": "temp_var4",
                "uVar6": "result_low",
                "uVar7": "result_high",
                "uVar8": "input2_masked",
                "puVar9": "case_offsets",
                "uVar10": "final_result",
                "uVar11": "intermediate_result1",
                "uVar12": "intermediate_result2",
                "uVar13": "intermediate_result3"
            },
            "code": "\nulonglong calculate_result_08006d68(int input1,uint input2,undefined4 unused1,undefined4 unused2)\n\n{\n  int case_index;\n  undefined4 temp_var1;\n  undefined4 temp_var2;\n  undefined4 temp_var3;\n  undefined4 temp_var4;\n  undefined4 result_low;\n  undefined4 result_high;\n  uint input2_masked;\n  undefined4 *case_offsets;\n  ulonglong final_result;\n  undefined8 intermediate_result1;\n  ulonglong intermediate_result2;\n  undefined8 intermediate_result3;\n  \n  final_result = CONCAT44(DAT_08007088,DAT_08007060);\n  intermediate_result2 = CONCAT44(input2,input1);\n  input2_masked = input2 & 0x7fffffff;\n  if (DAT_08007058 < (int)input2_masked) {\n    if (((int)DAT_0800705c < (int)input2_masked) || ((input2_masked == DAT_0800705c && (input1 != 0)))) {\n      final_result = FUN_0800016c(input1,input2,input1,input2,unused2);\n    }\n    else if ((int)input2 < 1) {\n      final_result = CONCAT44(DAT_08007064,DAT_08007060);\n    }\n  }\n  else {\n    if (DAT_08007068 < (int)input2_masked) {\n      intermediate_result1 = do_nothing_0800708c();\n      temp_var2 = (undefined4)((ulonglong)intermediate_result1 >> 0x20);\n      temp_var1 = (undefined4)intermediate_result1;\n      if (DAT_08007070 < (int)input2_masked) {\n        if (DAT_08007074 < (int)input2_masked) {\n          intermediate_result2 = FUN_08000724(0,DAT_0800707c,temp_var1,temp_var2);\n          case_index = 3;\n        }\n        else {\n          intermediate_result1 = FUN_08000168(temp_var1,temp_var2,0,DAT_08007078);\n          intermediate_result3 = FUN_080004d0(temp_var1,temp_var2,0,DAT_08007078);\n          intermediate_result3 = FUN_0800016c((int)intermediate_result3,(int)((ulonglong)intermediate_result3 >> 0x20),0,DAT_0800706c);\n          intermediate_result2 = FUN_08000724((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),(int)intermediate_result3,\n                                (int)((ulonglong)intermediate_result3 >> 0x20));\n          case_index = 2;\n        }\n      }\n      else if (DAT_08007070 + -0xd0000 < (int)input2_masked) {\n        intermediate_result1 = FUN_08000168(temp_var1,temp_var2,0,DAT_0800706c);\n        intermediate_result3 = FUN_0800016c(temp_var1,temp_var2,0,DAT_0800706c);\n        intermediate_result2 = FUN_08000724((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),(int)intermediate_result3,\n                              (int)((ulonglong)intermediate_result3 >> 0x20));\n        case_index = 1;\n      }\n      else {\n        intermediate_result1 = FUN_0800016c(temp_var1,temp_var2,temp_var1,temp_var2);\n        intermediate_result1 = FUN_08000168((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),0,DAT_0800706c);\n        intermediate_result3 = FUN_0800016c(temp_var1,temp_var2,0,0x40000000);\n        intermediate_result2 = FUN_08000724((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),(int)intermediate_result3,\n                              (int)((ulonglong)intermediate_result3 >> 0x20));\n        case_index = 0;\n      }\n    }\n    else {\n      if ((int)input2_masked <= DAT_08007068 + -0x1bc0000) {\n        intermediate_result1 = FUN_0800016c(input1,input2,DAT_08006ff8,DAT_08006ffc,unused2);\n        case_index = FUN_080009f0((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),0,DAT_0800706c);\n        if (case_index != 0) {\n          return intermediate_result2;\n        }\n      }\n      case_index = -1;\n    }\n    result_high = (undefined4)(intermediate_result2 >> 0x20);\n    result_low = (undefined4)intermediate_result2;\n    intermediate_result1 = FUN_080004d0(result_low,result_high,result_low,result_high);\n    temp_var3 = (undefined4)((ulonglong)intermediate_result1 >> 0x20);\n    temp_var1 = (undefined4)intermediate_result1;\n    intermediate_result1 = FUN_080004d0(temp_var1,temp_var3,temp_var1,temp_var3);\n    temp_var4 = (undefined4)((ulonglong)intermediate_result1 >> 0x20);\n    temp_var2 = (undefined4)intermediate_result1;\n    intermediate_result1 = FUN_080004d0(temp_var2,temp_var4,DAT_08007000,DAT_08007004);\n    intermediate_result1 = FUN_0800016c((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),DAT_08007008,DAT_0800700c);\n    intermediate_result1 = FUN_080004d0((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),temp_var2,temp_var4);\n    intermediate_result1 = FUN_0800016c((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),DAT_08007010,DAT_08007014);\n    intermediate_result1 = FUN_080004d0((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),temp_var2,temp_var4);\n    intermediate_result1 = FUN_0800016c((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),DAT_08007018,DAT_0800701c);\n    intermediate_result1 = FUN_080004d0((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),temp_var2,temp_var4);\n    intermediate_result1 = FUN_0800016c((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),DAT_08007020,DAT_08007024);\n    intermediate_result1 = FUN_080004d0((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),temp_var2,temp_var4);\n    intermediate_result1 = FUN_0800016c((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),DAT_08007028,DAT_0800702c);\n    intermediate_result1 = FUN_080004d0((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),temp_var1,temp_var3);\n    temp_var1 = (undefined4)((ulonglong)intermediate_result1 >> 0x20);\n    intermediate_result3 = FUN_080004d0(temp_var2,temp_var4,DAT_08007030,DAT_08007034);\n    intermediate_result3 = FUN_08000168((int)intermediate_result3,(int)((ulonglong)intermediate_result3 >> 0x20),DAT_08007038,DAT_0800703c);\n    intermediate_result3 = FUN_080004d0((int)intermediate_result3,(int)((ulonglong)intermediate_result3 >> 0x20),temp_var2,temp_var4);\n    intermediate_result3 = FUN_08000168((int)intermediate_result3,(int)((ulonglong)intermediate_result3 >> 0x20),DAT_08007040,DAT_08007044);\n    intermediate_result3 = FUN_080004d0((int)intermediate_result3,(int)((ulonglong)intermediate_result3 >> 0x20),temp_var2,temp_var4);\n    intermediate_result3 = FUN_08000168((int)intermediate_result3,(int)((ulonglong)intermediate_result3 >> 0x20),DAT_08007048,DAT_0800704c);\n    intermediate_result3 = FUN_080004d0((int)intermediate_result3,(int)((ulonglong)intermediate_result3 >> 0x20),temp_var2,temp_var4);\n    intermediate_result3 = FUN_08000168((int)intermediate_result3,(int)((ulonglong)intermediate_result3 >> 0x20),DAT_08007050,DAT_08007054);\n    intermediate_result3 = FUN_080004d0((int)intermediate_result3,(int)((ulonglong)intermediate_result3 >> 0x20),temp_var2,temp_var4);\n    temp_var2 = (undefined4)((ulonglong)intermediate_result3 >> 0x20);\n    if (case_index == -1) {\n      intermediate_result1 = FUN_0800016c((int)intermediate_result1,temp_var1,(int)intermediate_result3,temp_var2);\n      intermediate_result1 = FUN_080004d0((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),result_low,result_high);\n      final_result = FUN_08000168(result_low,result_high,(int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20));\n    }\n    else {\n      intermediate_result1 = FUN_0800016c((int)intermediate_result1,temp_var1,(int)intermediate_result3,temp_var2);\n      intermediate_result1 = FUN_080004d0((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),result_low,result_high);\n      case_offsets = (undefined4 *)(PTR_DAT_08007080 + case_index * 8);\n      intermediate_result1 = FUN_08000168((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),\n                            *(undefined4 *)(PTR_DAT_08007084 + case_index * 8),\n                            *(undefined4 *)((int)(PTR_DAT_08007084 + case_index * 8) + 4));\n      intermediate_result1 = FUN_08000168((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),result_low,result_high);\n      final_result = FUN_08000168(*case_offsets,case_offsets[1],(int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20));\n      if ((int)input2 < 0) {\n        final_result = final_result & 0xffffffff | (ulonglong)((int)(final_result >> 0x20) + 0x80000000) << 0x20;\n      }\n    }\n  }\n  return final_result;\n}\n\n",
            "called": [
                "FUN_08000724",
                "FUN_080009f0",
                "FUN_0800708c",
                "FUN_080004d0",
                "FUN_08000168",
                "FUN_0800016c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d68",
            "calling": [
                "FUN_08006070"
            ],
            "imported": false,
            "current_name": "calculate_result_08006d68"
        },
        "FUN_080072b8": {
            "renaming": {
                "FUN_080072b8": "update_data_080072b8",
                "param_1": "input_value",
                "puVar1": "pointer_variable"
            },
            "code": "\nvoid update_data_080072b8(int input_value)\n\n{\n  undefined *pointer_variable;\n  \n  pointer_variable = PTR_DAT_080072cc;\n  if (*(int *)PTR_DAT_080072cc == 0) {\n    *(undefined **)PTR_DAT_080072cc = PTR_DAT_080072d0;\n  }\n  *(int *)pointer_variable = input_value + *(int *)pointer_variable;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072b8",
            "calling": [
                "FUN_0800581c"
            ],
            "imported": false,
            "current_name": "update_data_080072b8"
        },
        "FUN_0800581c": {
            "renaming": {
                "FUN_0800581c": "update_parameter_from_memory_0800581c",
                "param_1": "output_param",
                "param_2": "input_param",
                "puVar1": "memory_pointer",
                "iVar2": "function_result"
            },
            "code": "\nvoid update_parameter_from_memory_0800581c(int *output_param,undefined4 input_param)\n\n{\n  undefined *memory_pointer;\n  int function_result;\n  \n  memory_pointer = PTR_DAT_08005838;\n  *(undefined4 *)PTR_DAT_08005838 = 0;\n  function_result = FUN_080072b8(input_param);\n  if ((function_result == -1) && (*(int *)memory_pointer != 0)) {\n    *output_param = *(int *)memory_pointer;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_080072b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800581c",
            "calling": [
                "FUN_08005714"
            ],
            "imported": false,
            "current_name": "update_parameter_from_memory_0800581c"
        },
        "FUN_08004d48": {
            "renaming": {
                "FUN_08004d48": "update_status_08004d48",
                "param_1": "statusPtr",
                "param_2": "additionalData",
                "local_18": "value1",
                "local_14": "value2"
            },
            "code": "\nvoid updateStatus_08004d48(int *statusPtr,undefined4 additionalData)\n\n{\n  undefined4 value1;\n  undefined4 value2;\n  \n  if (*statusPtr == DAT_08004d80) {\n    value1 = 0xc0;\n    value2 = 0x12;\n    FUN_08001264(DAT_08004d84,&value1,*statusPtr,3,statusPtr,additionalData);\n    *(uint *)(DAT_08004d88 + 0x1c) = *(uint *)(DAT_08004d88 + 0x1c) | 0x200000;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d48",
            "calling": [
                "FUN_08001754"
            ],
            "imported": false,
            "current_name": "update_status_08004d48"
        },
        "FUN_080072ac": {
            "renaming": {
                "FUN_080072ac": "get_data_from_pointer_080072ac",
                "undefined4": "uint32_t"
            },
            "code": "\nuint32_t get_data_from_pointer_080072ac(void)\n\n{\n  return *(uint32_t *)PTR_PTR_DAT_080072b4;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072ac",
            "calling": [
                "FUN_08005900",
                "FUN_08005854",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "get_data_from_pointer_080072ac"
        },
        "FUN_08002280": {
            "renaming": {
                "FUN_08002280": "update_configuration_08002280",
                "param_1": "config_base",
                "param_2": "config_values",
                "uVar1": "config_register_20",
                "uVar2": "config_register_4",
                "uVar3": "config_value_0"
            },
            "code": "\nvoid update_configuration_08002280(int config_base,uint *config_values)\n\n{\n  uint config_register_20;\n  uint config_register_4;\n  uint config_value_0;\n  \n  *(uint *)(config_base + 0x20) = *(uint *)(config_base + 0x20) & 0xfffffffe;\n  config_register_4 = *(uint *)(config_base + 4);\n  config_value_0 = *config_values;\n  config_register_20 = *(uint *)(config_base + 0x20) & 0xfffffffd | config_values[2];\n  if (config_base == DAT_080022cc) {\n    config_register_20 = (config_register_20 & 0xfffffff7 | config_values[3]) & 0xfffffffb;\n    config_register_4 = config_register_4 & 0xfffffcff | config_values[5] | config_values[6];\n  }\n  *(uint *)(config_base + 4) = config_register_4;\n  *(uint *)(config_base + 0x18) = *(uint *)(config_base + 0x18) & 0xffffff8c | config_value_0;\n  *(uint *)(config_base + 0x34) = config_values[1];\n  *(uint *)(config_base + 0x20) = config_register_20;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002280",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "update_configuration_08002280"
        },
        "FUN_08001194": {
            "renaming": {
                "FUN_08001194": "process_data_08001194",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "tempVar1",
                "uVar2": "tempVar2",
                "uVar3": "tempVar3",
                "uVar4": "tempVar4"
            },
            "code": "\nvoid processData_08001194(uint input1,uint input2,uint input3)\n\n{\n  undefined tempVar1;\n  uint tempVar2;\n  uint tempVar3;\n  uint tempVar4;\n  \n  tempVar3 = (uint)(*(int *)(DAT_080011f4 + 0xc) << 0x15) >> 0x1d;\n  tempVar2 = 7 - tempVar3;\n  tempVar4 = tempVar3 + 4;\n  if (3 < tempVar2) {\n    tempVar2 = 4;\n  }\n  if (tempVar4 < 7) {\n    tempVar3 = 0;\n  }\n  tempVar2 = (1 << (tempVar2 & 0xff)) - 1;\n  if (6 < tempVar4) {\n    tempVar3 = tempVar3 - 3;\n  }\n  tempVar1 = (undefined)\n          ((input3 & (1 << (tempVar3 & 0xff)) - 1U | (input2 & tempVar2) << (tempVar3 & 0xff)) << 4);\n  if (-1 < (int)input1) {\n    tempVar3 = input1 + 0xe000e100;\n  }\n  else {\n    tempVar3 = input1 & 0xf;\n    tempVar2 = DAT_080011f8;\n  }\n  if (-1 < (int)input1) {\n    *(undefined *)(tempVar3 + 0x300) = tempVar1;\n  }\n  else {\n    *(undefined *)(tempVar2 + tempVar3) = tempVar1;\n  }\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001194",
            "calling": [
                "FUN_08004514",
                "FUN_08004e7c",
                "FUN_08004ccc",
                "FUN_08001104"
            ],
            "imported": false,
            "current_name": "process_data_08001194"
        },
        "FUN_08002cb0": {
            "renaming": {
                "FUN_08002cb0": "process_sensor_data_08002cb0",
                "param_1": "sensor1",
                "param_2": "sensor2",
                "param_3": "sensor3",
                "param_4": "data",
                "local_c": "processedData",
                "puVar1": "sensorPtr",
                "uVar2": "tempVar"
            },
            "code": "\nvoid processSensorData_08002cb0(undefined4 sensor1,undefined4 sensor2,undefined4 sensor3,uint data)\n\n{\n  undefined *sensorPtr;\n  undefined4 tempVar;\n  uint processedData;\n  \n  processedData = data;\n  FUN_0800403c(0xd0,0x37,0x22,1,sensor1,sensor2,sensor3);\n  sensorPtr = PTR_s____Src_MPU9250_c_08002d80;\n  FUN_0800403c(0xd0,0x6a,1);\n  FUN_0800407c(0x18,0,sensorPtr,0xad);\n  FUN_0800403c(0x18,0xb,1);\n  FUN_0800403c(0x18,10,0,1);\n  FUN_0800403c(0x18,10,0xf,1);\n  FUN_080040e8(0x18,0x10,&processedData,3,sensorPtr,0xb6);\n  sensorPtr = PTR_DAT_08002d84;\n  tempVar = FUN_08000c44((processedData & 0xff) - 0x80);\n  tempVar = FUN_08000cec(tempVar,0x3b800000);\n  tempVar = FUN_08000adc(tempVar,0x3f800000);\n  *(undefined4 *)sensorPtr = tempVar;\n  tempVar = FUN_08000c44((processedData >> 8 & 0xff) - 0x80);\n  tempVar = FUN_08000cec(tempVar,0x3b800000);\n  tempVar = FUN_08000adc(tempVar,0x3f800000);\n  *(undefined4 *)(sensorPtr + 4) = tempVar;\n  tempVar = FUN_08000c44((processedData >> 0x10 & 0xff) - 0x80);\n  tempVar = FUN_08000cec(tempVar,0x3b800000);\n  tempVar = FUN_08000adc(tempVar,0x3f800000);\n  *(undefined4 *)(sensorPtr + 8) = tempVar;\n  FUN_0800403c(0x18,10,0,1);\n  FUN_0800403c(0x18,10,0x16,1);\n  return;\n}\n\n",
            "called": [
                "FUN_08000adc",
                "FUN_0800407c",
                "FUN_08000cec",
                "FUN_08000c44",
                "FUN_080040e8",
                "FUN_0800403c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002cb0",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": false,
            "current_name": "process_sensor_data_08002cb0"
        },
        "FUN_08004348": {
            "renaming": {
                "FUN_08004348": "configure_memory_08004348",
                "param_1": "memoryAddress",
                "param_2": "memorySize",
                "param_3": "memoryValue",
                "puVar1": "memoryPtr",
                "local_10": "dataValue",
                "local_c": "maskedMemorySize",
                "uStack_8": "stackMemoryValue"
            },
            "code": "\nvoid configureMemory_08004348(undefined4 memoryAddress,uint memorySize,undefined4 memoryValue)\n\n{\n  undefined *memoryPtr;\n  undefined4 dataValue;\n  uint maskedMemorySize;\n  undefined4 stackMemoryValue;\n  \n  memoryPtr = PTR_DAT_08004380;\n  *PTR_DAT_08004380 = 0xe9;\n  memoryPtr[1] = 3;\n  memoryPtr[3] = 4;\n  memoryPtr[2] = 0;\n  dataValue = *(undefined4 *)memoryPtr;\n  memoryPtr[4] = 0;\n  memoryPtr[5] = 0;\n  memoryPtr[6] = 0;\n  maskedMemorySize = memorySize & 0xff000000 | (uint)*(ushort *)(memoryPtr + 4);\n  stackMemoryValue = memoryValue;\n  FUN_08004300(100,&dataValue,7);\n  return;\n}\n\n",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004348",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "configure_memory_08004348"
        },
        "FUN_08002324": {
            "renaming": {
                "FUN_08002324": "update_registers_08002324",
                "param_1": "registerBase",
                "param_2": "inputValues",
                "uVar1": "tempValue",
                "iVar2": "firstInput",
                "iVar3": "thirdInput",
                "iVar4": "conditionalValue"
            },
            "code": "\nvoid updateRegisters_08002324(int registerBase,int *inputValues)\n\n{\n  uint tempValue;\n  int firstInput;\n  int thirdInput;\n  int conditionalValue;\n  \n  *(uint *)(registerBase + 0x20) = *(uint *)(registerBase + 0x20) & 0xffffefff;\n  tempValue = *(uint *)(registerBase + 4);\n  firstInput = *inputValues;\n  thirdInput = inputValues[2];\n  conditionalValue = DAT_08002364;\n  if (registerBase == DAT_08002364) {\n    conditionalValue = inputValues[5];\n    tempValue = tempValue & 0xffffbfff;\n  }\n  if (registerBase == DAT_08002364) {\n    tempValue = tempValue | conditionalValue << 6;\n  }\n  *(uint *)(registerBase + 4) = tempValue;\n  *(uint *)(registerBase + 0x1c) = *(uint *)(registerBase + 0x1c) & 0xffff8cff | firstInput << 8;\n  *(int *)(registerBase + 0x40) = inputValues[1];\n  *(uint *)(registerBase + 0x20) = *(uint *)(registerBase + 0x20) & 0xffffdfff | thirdInput << 0xc;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002324",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "update_registers_08002324"
        },
        "FUN_08001078": {
            "renaming": {
                "FUN_08001078": "calculate_result_08001078",
                "param_1": "input_value",
                "uVar1": "temp_var1",
                "uVar2": "temp_var2"
            },
            "code": "\nuint calculate_result_08001078(uint input_value)\n\n{\n  uint temp_var1;\n  uint temp_var2;\n  \n  if (input_value << 1 < 0x7f000000) {\n    return 0;\n  }\n  temp_var1 = (input_value << 1) >> 0x18;\n  temp_var2 = 0x9e - temp_var1;\n  if (temp_var1 < 0x9f && temp_var2 != 0) {\n    temp_var1 = (input_value << 8 | 0x80000000) >> (temp_var2 & 0xff);\n    if ((input_value & 0x80000000) != 0) {\n      temp_var1 = -temp_var1;\n    }\n    return temp_var1;\n  }\n  if ((temp_var2 == 0xffffff9f) && ((input_value & 0x7fffff) != 0)) {\n    return 0;\n  }\n  input_value = input_value & 0x80000000;\n  if (input_value == 0) {\n    input_value = 0x7fffffff;\n  }\n  return input_value;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001078",
            "calling": [
                "FUN_08002f28",
                "FUN_0800426c",
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "calculate_result_08001078"
        },
        "FUN_08002564": {
            "renaming": {
                "FUN_08002564": "update_status_08002564",
                "param_1": "status_ptr",
                "param_2": "flags_array",
                "uVar1": "result"
            },
            "code": "\nundefined4 update_status_08002564(int *status_ptr,uint *flags_array)\n\n{\n  undefined4 result;\n  \n  result = 2;\n  if (*(char *)(status_ptr + 0xe) != '\\x01') {\n    *(undefined *)((int)status_ptr + 0x39) = 2;\n    *(uint *)(*status_ptr + 0x44) =\n         *flags_array | flags_array[1] | flags_array[2] | flags_array[3] | flags_array[4] | flags_array[5] | flags_array[6];\n    *(undefined *)((int)status_ptr + 0x39) = 1;\n    result = 0;\n    *(undefined *)(status_ptr + 0xe) = 0;\n  }\n  return result;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002564",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "update_status_08002564"
        },
        "FUN_08001754": {
            "renaming": {
                "FUN_08001754": "process_data_08001754",
                "param_1": "data",
                "uVar1": "tempVar1",
                "uVar2": "tempVar2",
                "puVar3": "threshold",
                "puVar4": "dataElem",
                "puVar5": "dataElem2",
                "uVar6": "calculatedValue",
                "uVar7": "combinedValue"
            },
            "code": "\nundefined4 processData_08001754(uint **data)\n\n{\n  uint tempVar1;\n  uint tempVar2;\n  uint *threshold;\n  uint *dataElem;\n  uint *dataElem2;\n  uint calculatedValue;\n  undefined8 combinedValue;\n  \n  if (data == (uint **)0x0) {\n    return 1;\n  }\n  if (*(char *)((int)data + 0x35) == '\\0') {\n    *(undefined *)(data + 0xd) = 0;\n    FUN_08004d48();\n  }\n  *(undefined *)((int)data + 0x35) = 0x24;\n  threshold = DAT_08001820;\n  **data = **data & 0xfffffffe;\n  combinedValue = FUN_08002220();\n  tempVar2 = (uint)((ulonglong)combinedValue >> 0x20);\n  tempVar1 = (uint)combinedValue;\n  dataElem2 = data[1];\n  calculatedValue = tempVar1 / DAT_08001824;\n  if (threshold < dataElem2) {\n    tempVar2 = 300;\n  }\n  dataElem = *data;\n  if (threshold < dataElem2) {\n    tempVar2 = calculatedValue * tempVar2;\n  }\n  dataElem[1] = calculatedValue;\n  if (threshold < dataElem2) {\n    calculatedValue = tempVar2 / 1000;\n  }\n  dataElem[8] = calculatedValue + 1;\n  if (threshold < dataElem2) {\n    if (data[2] == (uint *)0x0) {\n      tempVar1 = tempVar1 / (uint)((int)dataElem2 * 3) | 0x8000;\n    }\n    else {\n      tempVar1 = tempVar1 / (uint)((int)dataElem2 * 0x19) | 0xc000;\n    }\n    if ((tempVar1 & 0xfff) == 0) {\n      tempVar1 = 1;\n    }\n  }\n  else {\n    tempVar1 = tempVar1 / (uint)((int)dataElem2 << 1);\n    if ((tempVar1 & 0xfff) < 4) {\n      tempVar1 = 4;\n    }\n  }\n  threshold = data[8];\n  dataElem2 = data[7];\n  dataElem[7] = tempVar1;\n  *dataElem = (uint)dataElem2 | (uint)threshold;\n  dataElem[2] = (uint)data[4] | (uint)data[3];\n  dataElem[3] = (uint)data[5] | (uint)data[6];\n  *dataElem = *dataElem | 1;\n  data[0xe] = (uint *)0x0;\n  *(undefined *)((int)data + 0x35) = 0x20;\n  *(undefined *)((int)data + 0x36) = 0;\n  return 0;\n}\n\n",
            "called": [
                "FUN_08004d48",
                "FUN_08002220"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001754",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "process_data_08001754"
        },
        "FUN_08000ad8": {
            "renaming": {
                "FUN_08000ad8": "floating_point_addition_08000ad8",
                "param_1": "number1",
                "param_2": "number2",
                "param_3": "unused_param",
                "param_4": "tempParam",
                "iVar1": "tempInt1",
                "uVar2": "tempUint1",
                "uVar3": "tempUint2",
                "uVar4": "tempUint3",
                "uVar5": "tempUint4",
                "uVar6": "tempUint5",
                "iVar7": "tempInt2",
                "bVar8": "tempBool"
            },
            "code": "\nuint floatingPointAddition_08000ad8(uint number1,uint number2,undefined4 unused_param,uint tempParam)\n\n{\n  int tempInt1;\n  uint tempUint1;\n  uint tempUint2;\n  uint tempUint3;\n  uint tempUint4;\n  uint tempUint5;\n  int tempInt2;\n  bool tempBool;\n  \n  tempUint1 = number2 ^ 0x80000000;\n  tempUint3 = number1 << 1;\n  tempBool = tempUint3 == 0;\n  if (!tempBool) {\n    tempParam = number2 << 1;\n    tempBool = tempParam == 0;\n  }\n  if (!tempBool) {\n    tempBool = tempUint3 == tempParam;\n  }\n  tempInt2 = (int)tempUint3 >> 0x18;\n  if (!tempBool) {\n    tempBool = tempInt2 == -1;\n  }\n  if (!tempBool) {\n    tempBool = (int)tempParam >> 0x18 == -1;\n  }\n  if (tempBool) {\n    tempInt1 = (int)(number2 << 1) >> 0x18;\n    if (tempInt2 == -1 || tempInt1 == -1) {\n      tempUint3 = tempUint1;\n      if (tempInt2 == -1) {\n        tempUint3 = number1;\n      }\n      if (tempInt2 != -1 || tempInt1 != -1) {\n        tempUint1 = tempUint3;\n      }\n      tempBool = (tempUint3 & 0x7fffff) == 0;\n      if (tempBool) {\n        tempBool = (tempUint1 & 0x7fffff) == 0;\n      }\n      if (tempBool) {\n        tempBool = tempUint3 == tempUint1;\n      }\n      if (!tempBool) {\n        tempUint3 = tempUint3 | 0x400000;\n      }\n      return tempUint3;\n    }\n    if (((number1 ^ tempUint1) & 0x7fffffff) != 0) {\n      if (tempUint3 == 0) {\n        number1 = tempUint1;\n      }\n      return number1;\n    }\n    if (number1 != tempUint1) {\n      return 0;\n    }\n    if ((tempUint3 & 0xff000000) == 0) {\n      tempUint1 = number1 << 1;\n      if ((number1 & 0x80000000) != 0) {\n        tempUint1 = tempUint1 | 0x80000000;\n      }\n      return tempUint1;\n    }\n    if (tempUint3 < 0xfe000000) {\n      return number1 + 0x800000;\n    }\n    number1 = number1 & 0x80000000;\nLAB_08000c12:\n    return number1 | 0x7f800000;\n  }\n  tempUint3 = tempUint3 >> 0x18;\n  tempParam = tempParam >> 0x18;\n  tempUint5 = tempParam - tempUint3;\n  tempBool = tempUint5 != 0;\n  tempUint4 = tempUint3;\n  if (tempBool && tempUint3 <= tempParam) {\n    tempUint4 = tempUint3 + tempUint5;\n  }\n  if (tempBool && tempUint3 <= tempParam) {\n    tempUint1 = tempUint1 ^ number1;\n  }\n  if (tempBool && tempUint3 <= tempParam) {\n    number1 = number1 ^ tempUint1;\n  }\n  if (tempBool && tempUint3 <= tempParam) {\n    tempUint1 = tempUint1 ^ number1;\n  }\n  if (tempParam < tempUint3) {\n    tempUint5 = -tempUint5;\n  }\n  if (0x19 < tempUint5) {\n    return number1;\n  }\n  tempUint3 = number1 & 0xffffff | 0x800000;\n  if ((number1 & 0x80000000) != 0) {\n    tempUint3 = -tempUint3;\n  }\n  tempUint2 = tempUint1 & 0xffffff | 0x800000;\n  if ((tempUint1 & 0x80000000) != 0) {\n    tempUint2 = -tempUint2;\n  }\n  if (tempUint4 == tempUint5) {\n    tempUint2 = tempUint2 ^ 0x800000;\n    if (tempUint4 == 0) {\n      tempUint3 = tempUint3 ^ 0x800000;\n      tempUint4 = 1;\n    }\n    else {\n      tempUint5 = tempUint5 - 1;\n    }\n  }\n  tempUint3 = tempUint3 + ((int)tempUint2 >> (tempUint5 & 0xff));\n  tempUint2 = tempUint2 << (0x20 - tempUint5 & 0xff);\n  number1 = tempUint3 & 0x80000000;\n  if ((int)tempUint3 < 0) {\n    tempBool = tempUint2 != 0;\n    tempUint2 = -tempUint2;\n    tempUint3 = -tempUint3 - (uint)tempBool;\n  }\n  if (tempUint3 < 0x800000) {\n    tempUint1 = tempUint2 & 0x80000000;\n    tempUint2 = tempUint2 << 1;\n    tempUint3 = tempUint3 * 2 + (uint)(tempUint1 != 0);\n    tempUint1 = tempUint4 - 2;\n    if ((tempUint3 & 0x800000) == 0) {\n      tempInt2 = count_leading_zeroes(tempUint3);\n      tempUint5 = tempInt2 - 8;\n      tempUint3 = tempUint3 << (tempUint5 & 0xff);\n      if ((int)tempUint1 < (int)tempUint5) {\n        tempUint3 = tempUint3 >> (-(tempUint1 - tempUint5) & 0xff);\n      }\n      else {\n        tempUint3 = tempUint3 + (tempUint1 - tempUint5) * 0x800000;\n      }\n      return tempUint3 | number1;\n    }\n  }\n  else {\n    tempUint1 = tempUint4 - 1;\n    if (0xffffff < tempUint3) {\n      tempUint1 = tempUint3 & 1;\n      tempUint3 = tempUint3 >> 1;\n      tempUint2 = (uint)(tempUint1 != 0) << 0x1f | tempUint2 >> 1;\n      tempUint1 = tempUint4;\n      if (0xfd < tempUint4) goto LAB_08000c12;\n    }\n  }\n  tempUint3 = tempUint3 + tempUint1 * 0x800000 + (uint)(0x7fffffff < tempUint2);\n  if (tempUint2 == 0x80000000) {\n    tempUint3 = tempUint3 & 0xfffffffe;\n  }\n  return tempUint3 | number1;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000ad8",
            "calling": [
                "FUN_08002ee8",
                "FUN_0800426c",
                "FUN_0800483c",
                "FUN_08002d88",
                "FUN_08002ec0",
                "FUN_08003330",
                "FUN_08002bf0"
            ],
            "imported": false,
            "current_name": "floating_point_addition_08000ad8"
        },
        "FUN_08003ec8": {
            "renaming": {
                "FUN_08003ec8": "update_buffer_08003ec8",
                "param_1": "buffer_base",
                "param_2": "new_value"
            },
            "code": "\nundefined4 updateBuffer_08003ec8(int buffer_base,undefined new_value)\n\n{\n  *(short *)(buffer_base + 0x804) = *(short *)(buffer_base + 0x804) + 1;\n  *(undefined *)(buffer_base + (uint)*(ushort *)(buffer_base + 0x802)) = new_value;\n  *(ushort *)(buffer_base + 0x802) = *(short *)(buffer_base + 0x802) + 1U & 0x7ff;\n  return 1;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003ec8",
            "calling": [
                "FUN_08004c30"
            ],
            "imported": false,
            "current_name": "update_buffer_08003ec8"
        },
        "FUN_08002724": {
            "renaming": {
                "FUN_08002724": "update_config_08002724",
                "param_1": "config_ptr",
                "iVar1": "config_value"
            },
            "code": "\nundefined4 updateConfig_08002724(int *config_ptr)\n\n{\n  int config_value;\n  \n  if (config_ptr != (int *)0x0) {\n    if (*(char *)((int)config_ptr + 0x39) == '\\0') {\n      *(undefined *)(config_ptr + 0xe) = 0;\n      FUN_08004e7c();\n    }\n    *(undefined *)((int)config_ptr + 0x39) = 2;\n    *(uint *)(*config_ptr + 0xc) = *(uint *)(*config_ptr + 0xc) & 0xffffdfff;\n    FUN_080025e8(config_ptr);\n    config_value = *config_ptr;\n    *(uint *)(config_value + 0x10) = *(uint *)(config_value + 0x10) & 0xffffb7ff;\n    *(uint *)(config_value + 0x14) = *(uint *)(config_value + 0x14) & 0xffffffd5;\n    *(uint *)(config_value + 0xc) = *(uint *)(config_value + 0xc) | 0x2000;\n    config_ptr[0xf] = 0;\n    *(undefined *)((int)config_ptr + 0x39) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "called": [
                "FUN_080025e8",
                "FUN_08004e7c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002724",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "update_config_08002724"
        },
        "FUN_08003fe8": {
            "renaming": {
                "FUN_08003fe8": "update_data_08003fe8",
                "param_1": "newData"
            },
            "code": "\nvoid updateData_08003fe8(undefined4 newData)\n\n{\n  *(undefined4 *)(*(int *)PTR_DAT_08003ff0 + 0x3c) = newData;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fe8",
            "calling": [
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "imported": false,
            "current_name": "update_data_08003fe8"
        },
        "FUN_08005714": {
            "renaming": {
                "FUN_08005714": "allocate_memory_08005714",
                "param_1": "size_ptr",
                "param_2": "requested_size",
                "puVar1": "memory_ptr",
                "uVar2": "allocated_memory",
                "puVar3": "current_block",
                "iVar4": "block_difference",
                "puVar5": "next_block",
                "uVar6": "remaining_size",
                "puVar7": "previous_block",
                "uVar8": "aligned_size"
            },
            "code": "\nuint allocate_memory_08005714(undefined4 *size_ptr,uint requested_size)\n\n{\n  undefined *memory_ptr;\n  undefined4 allocated_memory;\n  uint *current_block;\n  int block_difference;\n  uint *next_block;\n  uint remaining_size;\n  uint *previous_block;\n  uint aligned_size;\n  \n  aligned_size = (requested_size + 3 & 0xfffffffc) + 8;\n  if (aligned_size < 0xc) {\n    aligned_size = 0xc;\n  }\n  if (((int)aligned_size < 0) || (aligned_size < requested_size)) {\n    *size_ptr = 0xc;\n  }\n  else {\n    do_nothing_0800583c();\n    memory_ptr = PTR_DAT_080057cc;\n    current_block = *(uint **)PTR_DAT_080057c8;\n    previous_block = *(uint **)PTR_DAT_080057c8;\n    while (next_block = current_block, next_block != (uint *)0x0) {\n      remaining_size = *next_block - aligned_size;\n      if (-1 < (int)remaining_size) {\n        if (remaining_size < 0xc) {\n          if (previous_block == next_block) {\n            aligned_size = previous_block[1];\n            *(uint *)PTR_DAT_080057c8 = aligned_size;\n          }\n          else {\n            aligned_size = next_block[1];\n          }\n          if (previous_block != next_block) {\n            previous_block[1] = aligned_size;\n            previous_block = next_block;\n          }\n        }\n        else {\n          *next_block = remaining_size;\n          *(uint *)((int)next_block + remaining_size) = aligned_size;\n          previous_block = (uint *)((int)next_block + remaining_size);\n        }\n        goto LAB_08005778;\n      }\n      previous_block = next_block;\n      current_block = (uint *)next_block[1];\n    }\n    if (*(int *)PTR_DAT_080057cc == 0) {\n      allocated_memory = FUN_0800581c(size_ptr);\n      *(undefined4 *)memory_ptr = allocated_memory;\n    }\n    current_block = (uint *)FUN_0800581c(size_ptr,aligned_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((previous_block = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == previous_block ||\n        (block_difference = FUN_0800581c(size_ptr,(int)previous_block - (int)current_block), block_difference != -1)))) {\n      *previous_block = aligned_size;\nLAB_08005778:\n      do_nothing_0800583e(size_ptr);\n      aligned_size = (int)previous_block + 0xbU & 0xfffffff8;\n      block_difference = aligned_size - (int)(previous_block + 1);\n      if (block_difference != 0) {\n        *(int *)((int)previous_block + block_difference) = -block_difference;\n        return aligned_size;\n      }\n      return aligned_size;\n    }\n    *size_ptr = 0xc;\n    do_nothing_0800583e(size_ptr);\n  }\n  return 0;\n}\n\n",
            "called": [
                "FUN_0800583e",
                "FUN_0800581c",
                "FUN_0800583c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005714",
            "calling": [
                "FUN_08005044",
                "FUN_080057d0",
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "allocate_memory_08005714"
        },
        "FUN_08004fb4": {
            "renaming": {
                "FUN_08004fb4": "execute_code_sequences_08004fb4",
                "puVar1": "code_sequence_ptr",
                "iVar2": "sequence_length",
                "iVar3": "index"
            },
            "code": "\nvoid execute_code_sequences_08004fb4(void)\n\n{\n  undefined *code_sequence_ptr;\n  int sequence_length;\n  int index;\n  \n  code_sequence_ptr = PTR_DAT_08004fec;\n  sequence_length = (int)PTR_DAT_08004ff0 - (int)PTR_DAT_08004fec;\n  for (index = 0; index != sequence_length >> 2; index = index + 1) {\n    (**(code **)(code_sequence_ptr + index * 4))();\n  }\n  do_nothing_080072d4();\n  code_sequence_ptr = PTR_DAT_08004ff4;\n  sequence_length = (int)PTR_DAT_08004ff8 - (int)PTR_DAT_08004ff4;\n  for (index = 0; index != sequence_length >> 2; index = index + 1) {\n    (**(code **)(code_sequence_ptr + index * 4))();\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_080072d4",
                "FUN_08000134"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004fb4",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": false,
            "current_name": "execute_code_sequences_08004fb4"
        },
        "FUN_080043f0": {
            "renaming": {
                "FUN_080043f0": "process_data_080043f0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "local_10": "firstValue",
                "uStack_c": "secondValue",
                "auStack_8": "inputArray"
            },
            "code": "\nvoid processData_080043f0(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  undefined4 firstValue;\n  undefined4 secondValue;\n  undefined4 inputArray [2];\n  \n  firstValue = *(undefined4 *)PTR_DAT_0800440c;\n  secondValue = *(undefined4 *)(PTR_DAT_0800440c + 4);\n  inputArray[0] = input3;\n  FUN_08004300(0x68,&firstValue,8,inputArray);\n  return;\n}\n\n",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080043f0",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "process_data_080043f0"
        },
        "FUN_08000428": {
            "renaming": {
                "FUN_08000428": "calculate_result_08000428",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "temp_var1",
                "uVar2": "temp_var2",
                "uVar3": "temp_var3",
                "uVar4": "temp_var4",
                "uVar5": "temp_var5",
                "iVar6": "leading_zeroes",
                "uVar7": "adjusted_zeroes",
                "in_r12": "shift_amount",
                "bVar8": "condition1",
                "bVar9": "condition2",
                "bVar10": "condition3"
            },
            "code": "\nulonglong calculate_result_08000428(uint input_1,undefined4 input_2,undefined4 input_3,uint input_4)\n\n{\n  uint temp_var1;\n  uint temp_var2;\n  uint temp_var3;\n  uint temp_var4;\n  uint temp_var5;\n  int leading_zeroes;\n  uint adjusted_zeroes;\n  uint shift_amount;\n  bool condition1;\n  bool condition2;\n  bool condition3;\n  \n  temp_var5 = input_1 << 1;\n  condition2 = temp_var5 == 0;\n  temp_var1 = (uint)((input_1 & 0x80000000) != 0) << 0x1f;\n  temp_var4 = (uint)((int)temp_var5 >> 3) >> 1;\n  temp_var3 = temp_var1 | temp_var4;\n  input_1 = input_1 << 0x1d;\n  if (!condition2) {\n    input_4 = temp_var5 & 0xff000000;\n    condition2 = input_4 == 0;\n  }\n  if (!condition2) {\n    condition2 = input_4 == 0xff000000;\n  }\n  if (!condition2) {\n    return CONCAT44(temp_var3,input_1) ^ 0x3800000000000000;\n  }\n  if (temp_var5 == 0 || input_4 == 0xff000000) {\n    return CONCAT44(temp_var3,input_1);\n  }\n  temp_var2 = input_1;\n  temp_var5 = temp_var4;\n  if (temp_var4 == 0) {\n    temp_var2 = 0;\n    temp_var5 = input_1;\n  }\n  leading_zeroes = count_leading_zeroes(temp_var5);\n  if (temp_var4 == 0) {\n    leading_zeroes = leading_zeroes + 0x20;\n  }\n  adjusted_zeroes = leading_zeroes - 0xb;\n  condition3 = SBORROW4(adjusted_zeroes,0x20);\n  temp_var4 = leading_zeroes - 0x2b;\n  condition2 = (int)temp_var4 < 0;\n  condition1 = temp_var4 == 0;\n  if ((int)adjusted_zeroes < 0x20) {\n    condition3 = SCARRY4(temp_var4,0xc);\n    leading_zeroes = leading_zeroes + -0x1f;\n    condition2 = leading_zeroes < 0;\n    condition1 = leading_zeroes == 0;\n    temp_var4 = adjusted_zeroes;\n    if (!condition1 && condition2 == condition3) {\n      temp_var2 = temp_var5 << (adjusted_zeroes & 0xff);\n      temp_var5 = temp_var5 >> (0xcU - leading_zeroes & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (condition1 || condition2 != condition3) {\n    shift_amount = 0x20 - temp_var4;\n  }\n  temp_var5 = temp_var5 << (temp_var4 & 0xff);\n  if (condition1 || condition2 != condition3) {\n    temp_var5 = temp_var5 | temp_var2 >> (shift_amount & 0xff);\n  }\n  if (condition1 || condition2 != condition3) {\n    temp_var2 = temp_var2 << (temp_var4 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)adjusted_zeroes < 0x381) {\n    return CONCAT44(temp_var5 + (0x380 - adjusted_zeroes) * 0x100000 | temp_var1,temp_var2);\n  }\n  temp_var4 = ~(0x380 - adjusted_zeroes);\n  if ((int)temp_var4 < 0x1f) {\n    leading_zeroes = temp_var4 - 0x13;\n    if (leading_zeroes != 0 && leading_zeroes < 0 == SCARRY4(temp_var4 - 0x1f,0xc)) {\n      return CONCAT44(temp_var3,temp_var2 >> (0x20 - (0xcU - leading_zeroes) & 0xff) | temp_var5 << (0xcU - leading_zeroes & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp_var4 = temp_var4 + 1;\n    return CONCAT44(temp_var1 | temp_var5 >> (temp_var4 & 0xff),\n                    temp_var2 >> (temp_var4 & 0xff) | temp_var5 << (0x20 - temp_var4 & 0xff));\n  }\n  return CONCAT44(temp_var3,temp_var5 >> (temp_var4 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000428",
            "calling": [
                "FUN_08003330",
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "calculate_result_08000428"
        },
        "FUN_08004ccc": {
            "renaming": {
                "FUN_08004ccc": "update_and_execute_08004ccc",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "iVar1": "dataIndex",
                "uVar2": "updatedValue",
                "uVar3": "bitwiseResult"
            },
            "code": "\nvoid updateAndExecute_08004ccc(undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3)\n\n{\n  int dataIndex;\n  uint updatedValue;\n  uint bitwiseResult;\n  \n  dataIndex = DAT_08004d44;\n  updatedValue = *(uint *)(DAT_08004d44 + 0x18) | 1;\n  *(uint *)(DAT_08004d44 + 0x18) = updatedValue;\n  bitwiseResult = *(uint *)(dataIndex + 0x18) & 1;\n  FUN_08001170(3,inputParam2,updatedValue,bitwiseResult,inputParam1,bitwiseResult,inputParam3);\n  FUN_08001194(0xfffffff4,0);\n  FUN_08001194(0xfffffff5,0);\n  FUN_08001194(0xfffffff6,0);\n  FUN_08001194(0xfffffffb,0);\n  FUN_08001194(0xfffffffc,0);\n  FUN_08001194(0xfffffffe,0);\n  FUN_08001194(0xffffffff,0);\n  return;\n}\n\n",
            "called": [
                "FUN_08001170",
                "FUN_08001194"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ccc",
            "calling": [
                "FUN_08001128"
            ],
            "imported": false,
            "current_name": "update_and_execute_08004ccc"
        },
        "FUN_08000a30": {
            "renaming": {
                "FUN_08000a30": "calculate_result_08000a30",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "uVar1": "result",
                "uVar2": "modifiedParam2",
                "uVar3": "intermediateVar",
                "in_r12": "tempVar",
                "bVar4": "isZero",
                "bVar5": "isLessThanThreshold"
            },
            "code": "\nuint calculateResult_08000a30(uint inputParam1,uint inputParam2)\n\n{\n  uint result;\n  uint modifiedParam2;\n  uint intermediateVar;\n  uint tempVar;\n  bool isZero;\n  bool isLessThanThreshold;\n  \n  modifiedParam2 = inputParam2 * 2;\n  isLessThanThreshold = modifiedParam2 < 0x70000000;\n  intermediateVar = modifiedParam2 + 0x90000000;\n  result = intermediateVar;\n  if (!isLessThanThreshold) {\n    tempVar = modifiedParam2 + 0x8fe00000;\n    result = tempVar;\n  }\n  isZero = result == 0;\n  if (!isLessThanThreshold && intermediateVar >= 0x200000) {\n    isZero = tempVar == 0x1fc00000;\n  }\n  if (((isLessThanThreshold || intermediateVar < 0x200000) || 0x1fc00000 < tempVar) || isZero) {\n    if ((inputParam2 & 0x40000000) != 0) {\n      if (((int)modifiedParam2 >> 0x15 == -1) && ((inputParam1 | inputParam2 << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return inputParam2 & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(modifiedParam2 + 0x92e00000) < 0 != SCARRY4(intermediateVar,0x2e00000)) {\n      return inputParam2 & 0x80000000;\n    }\n    modifiedParam2 = 0x18 - (modifiedParam2 + 0x92e00000 >> 0x15);\n    result = inputParam1 >> (modifiedParam2 & 0xff);\n    if (inputParam1 << (0x20 - modifiedParam2 & 0xff) != 0) {\n      result = result | 1;\n    }\n    intermediateVar = inputParam2 & 0x1fffff | 0x100000;\n    inputParam1 = result | intermediateVar << (0x20 - modifiedParam2 & 0xff);\n    intermediateVar = (intermediateVar >> (modifiedParam2 & 0xff)) << 1;\n  }\n  result = (inputParam2 & 0x80000000 | inputParam1 >> 0x1d) + intermediateVar * 4 + (uint)(0x7fffffff < inputParam1 * 8);\n  if (inputParam1 * 8 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000a30",
            "calling": [
                "FUN_08003330",
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "calculate_result_08000a30"
        },
        "FUN_080023d0": {
            "renaming": {
                "FUN_080023d0": "process_array_080023d0",
                "param_1": "arrayPtr",
                "undefined4": "uint32_t"
            },
            "code": "\nuint32_t processArray_080023d0(uint32_t *arrayPtr)\n\n{\n  if (arrayPtr != (uint32_t *)0x0) {\n    if (*(char *)((int)arrayPtr + 0x39) == '\\0') {\n      *(undefined *)(arrayPtr + 0xe) = 0;\n      FUN_08004d8c();\n    }\n    *(undefined *)((int)arrayPtr + 0x39) = 2;\n    FUN_08002368(*arrayPtr,arrayPtr + 1);\n    *(undefined *)((int)arrayPtr + 0x39) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "called": [
                "FUN_08004d8c",
                "FUN_08002368"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080023d0",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "process_array_080023d0"
        },
        "FUN_08004c30": {
            "renaming": {
                "FUN_08004c30": "process_data_08004c30",
                "param_1": "inputParam",
                "puVar1": "dataPointer",
                "puVar2": "controlPointer",
                "uVar3": "controlValue",
                "uVar4": "flagValue",
                "iVar5": "tempVar"
            },
            "code": "\nint * processData_08004c30(int *inputParam)\n\n{\n  undefined *dataPointer;\n  undefined *controlPointer;\n  undefined controlValue;\n  uint flagValue;\n  int tempVar;\n  \n  dataPointer = PTR_DAT_08004c58;\n  if (*inputParam != DAT_08004c54) {\n    return inputParam;\n  }\n  FUN_08003ec8(PTR_DAT_08004c5c,*PTR_DAT_08004c58);\n  controlPointer = PTR_DAT_08004c60;\n  if ((PTR_DAT_08004c60[0x39] == '\\x01') || (PTR_DAT_08004c60[0x39] == '\\x12')) {\n    if (dataPointer == (undefined *)0x0) {\n      return (int *)0x1;\n    }\n    if (PTR_DAT_08004c60[0x38] != '\\x01') {\n      PTR_DAT_08004c60[0x38] = 1;\n      *(undefined4 *)(controlPointer + 0x3c) = 0;\n      *(undefined2 *)(controlPointer + 0x2c) = 1;\n      *(undefined2 *)(controlPointer + 0x2e) = 1;\n      controlPointer[0x38] = 0;\n      if (controlPointer[0x39] == '\\x12') {\n        controlValue = 0x32;\n      }\n      else {\n        controlValue = 0x22;\n      }\n      tempVar = *(int *)controlPointer;\n      controlPointer[0x39] = controlValue;\n      flagValue = *(uint *)(tempVar + 0xc);\n      *(undefined **)(controlPointer + 0x28) = dataPointer;\n      *(uint *)(tempVar + 0xc) = flagValue | 0x100;\n      *(uint *)(tempVar + 0x14) = *(uint *)(tempVar + 0x14) | 1;\n      *(uint *)(tempVar + 0xc) = *(uint *)(tempVar + 0xc) | 0x20;\n      return (int *)0x0;\n    }\n  }\n  return (int *)0x2;\n}\n\n",
            "called": [
                "FUN_08003ec8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c30",
            "calling": [
                "FUN_0800290c"
            ],
            "imported": false,
            "current_name": "process_data_08004c30"
        },
        "FUN_080004d0": {
            "renaming": {
                "FUN_080004d0": "calculate_result_080004d0",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "temp_var1",
                "lVar2": "temp_var2",
                "uVar3": "temp_var3",
                "uVar4": "temp_var4",
                "iVar5": "temp_var5",
                "uVar6": "temp_var6",
                "unaff_r5": "temp_r5",
                "uVar7": "temp_var7",
                "uVar8": "temp_var8",
                "bVar9": "flag1",
                "bVar10": "flag2",
                "bVar11": "flag3",
                "uVar12": "temp_var12"
            },
            "code": "\nulonglong calculate_result_080004d0(undefined4 input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  ulonglong temp_var1;\n  longlong temp_var2;\n  uint temp_var3;\n  uint temp_var4;\n  int temp_var5;\n  uint temp_var6;\n  uint temp_r5;\n  uint temp_var7;\n  uint temp_var8;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  ulonglong temp_var12;\n  \n  temp_var12 = CONCAT44(input_2,input_1);\n  temp_var7 = 0x7ff;\n  temp_var4 = input_2 >> 0x14 & 0x7ff;\n  flag1 = temp_var4 == 0;\n  if (!flag1) {\n    temp_r5 = input_4 >> 0x14 & 0x7ff;\n    flag1 = temp_r5 == 0;\n  }\n  if (!flag1) {\n    flag1 = temp_var4 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = temp_r5 == 0x7ff;\n  }\n  if (flag1) {\n    temp_var12 = FUN_080006ac();\n  }\n  temp_var3 = (uint)(temp_var12 >> 0x20);\n  temp_var5 = temp_var4 + temp_r5;\n  temp_var4 = temp_var3 ^ input_4;\n  temp_var3 = temp_var3 & ~(temp_var7 << 0x15);\n  input_4 = input_4 & ~(temp_var7 << 0x15);\n  flag1 = ((uint)temp_var12 | temp_var3 << 0xc) == 0;\n  if (!flag1) {\n    flag1 = (input_3 | input_4 << 0xc) == 0;\n  }\n  temp_var3 = temp_var3 | 0x100000;\n  input_4 = input_4 | 0x100000;\n  if (flag1) {\n    input_3 = (uint)temp_var12 | input_3;\n    input_4 = (temp_var4 & 0x80000000 | temp_var3) ^ input_4;\n    temp_var4 = temp_var7 >> 1;\n    flag3 = SBORROW4(temp_var5,temp_var4);\n    temp_var6 = temp_var5 - temp_var4;\n    flag1 = temp_var6 == 0;\n    temp_var3 = temp_var6;\n    if (!flag1 && (int)temp_var4 <= temp_var5) {\n      flag3 = SBORROW4(temp_var7,temp_var6);\n      temp_var3 = temp_var7 - temp_var6;\n      flag1 = temp_var7 == temp_var6;\n    }\n    if (!flag1 && (int)temp_var3 < 0 == flag3) {\n      input_4 = input_4 | temp_var6 * 0x100000;\n    }\n    if (!flag1 && (int)temp_var3 < 0 == flag3) {\n      return CONCAT44(input_4,input_3);\n    }\n    input_4 = input_4 | 0x100000;\n    temp_var7 = 0;\n    flag3 = SBORROW4(temp_var6,1);\n    temp_var6 = temp_var6 - 1;\n    flag1 = temp_var6 == 0;\n    temp_var4 = temp_var6;\n  }\n  else {\n    temp_var1 = (temp_var12 & 0xffffffff) * (ulonglong)input_3;\n    temp_var12 = (temp_var12 & 0xffffffff) * (ulonglong)input_4 +\n             (ulonglong)temp_var3 * (ulonglong)input_3 + (temp_var1 >> 0x20);\n    temp_var8 = (uint)temp_var12;\n    temp_var2 = (ulonglong)temp_var3 * (ulonglong)input_4 + (temp_var12 >> 0x20);\n    temp_var7 = (uint)temp_var2;\n    temp_var3 = (uint)((ulonglong)temp_var2 >> 0x20);\n    if ((int)temp_var1 != 0) {\n      temp_var8 = temp_var8 | 1;\n    }\n    temp_var6 = (temp_var5 + -0x3ff) - (uint)(temp_var3 < 0x200);\n    if (temp_var3 < 0x200) {\n      flag1 = (temp_var8 & 0x80000000) != 0;\n      temp_var8 = temp_var8 << 1;\n      temp_var2 = CONCAT44(temp_var3 * 2 + (uint)(CARRY4(temp_var7,temp_var7) || CARRY4(temp_var7 * 2,(uint)flag1)),\n                       temp_var7 * 2 + (uint)flag1);\n    }\n    input_4 = temp_var4 & 0x80000000 | (int)((ulonglong)temp_var2 >> 0x20) << 0xb | (uint)temp_var2 >> 0x15;\n    input_3 = (uint)temp_var2 << 0xb | temp_var8 >> 0x15;\n    temp_var7 = temp_var8 * 0x800;\n    flag2 = 0xfc < temp_var6;\n    flag3 = SBORROW4(temp_var6,0xfd);\n    temp_var3 = temp_var6 - 0xfd;\n    flag1 = temp_var3 == 0;\n    temp_var4 = temp_var3;\n    if (flag2 && !flag1) {\n      flag2 = 0x6ff < temp_var3;\n      flag3 = SBORROW4(temp_var3,0x700);\n      temp_var4 = temp_var6 - 0x7fd;\n      flag1 = temp_var3 == 0x700;\n    }\n    if (!flag2 || flag1) {\n      flag1 = 0x7fffffff < temp_var7;\n      if (temp_var7 == 0x80000000) {\n        flag1 = (temp_var8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(input_4 + temp_var6 * 0x100000 + (uint)CARRY4(input_3,(uint)flag1),input_3 + flag1\n                     );\n    }\n  }\n  if (!flag1 && (int)temp_var4 < 0 == flag3) {\n    return (ulonglong)(input_4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag2 = SCARRY4(temp_var6,0x36);\n  flag1 = (int)(temp_var6 + 0x36) < 0;\n  flag3 = temp_var6 == 0xffffffca;\n  if (flag3 || flag1 != flag2) {\n    input_3 = 0;\n  }\n  if (flag3 || flag1 != flag2) {\n    input_4 = input_4 & 0x80000000;\n  }\n  if (flag3 || flag1 != flag2) {\n    return CONCAT44(input_4,input_3);\n  }\n  temp_var4 = -temp_var6;\n  temp_var3 = temp_var4 - 0x20;\n  if (0x1f < (int)temp_var4) {\n    temp_var6 = input_3 >> (temp_var3 & 0xff) | input_4 << (0x20 - temp_var3 & 0xff);\n    temp_var4 = (input_4 >> (temp_var3 & 0xff) & ~((input_4 & 0x80000000) >> (temp_var3 & 0xff))) -\n            ((int)temp_var6 >> 0x1f);\n    if ((temp_var7 | input_3 << (0x20 - temp_var3 & 0xff) | temp_var6 << 1) == 0) {\n      temp_var4 = temp_var4 & ~(temp_var6 >> 0x1f);\n    }\n    return CONCAT44(input_4,temp_var4) & 0x80000000ffffffff;\n  }\n  temp_var5 = temp_var4 - 0x14;\n  if (temp_var5 == 0 || temp_var5 < 0 != SCARRY4(temp_var3,0xc)) {\n    temp_var8 = input_3 << (temp_var6 + 0x20 & 0xff);\n    temp_var3 = input_3 >> (temp_var4 & 0xff) | input_4 << (temp_var6 + 0x20 & 0xff);\n    temp_var6 = temp_var3 + -((int)temp_var8 >> 0x1f);\n    if ((temp_var7 | temp_var8 << 1) == 0) {\n      temp_var6 = temp_var6 & ~(temp_var8 >> 0x1f);\n    }\n    return CONCAT44((input_4 & 0x80000000) +\n                    ((input_4 & 0x7fffffff) >> (temp_var4 & 0xff)) +\n                    (uint)CARRY4(temp_var3,-((int)temp_var8 >> 0x1f)),temp_var6);\n  }\n  temp_var4 = 0xc - temp_var5;\n  temp_var6 = input_3 << (temp_var4 & 0xff);\n  temp_var4 = input_3 >> (0x20 - temp_var4 & 0xff) | input_4 << (temp_var4 & 0xff);\n  temp_var3 = temp_var4 + -((int)temp_var6 >> 0x1f);\n  if ((temp_var7 | temp_var6 << 1) == 0) {\n    temp_var3 = temp_var3 & ~(temp_var6 >> 0x1f);\n  }\n  return CONCAT44((input_4 & 0x80000000) + (uint)CARRY4(temp_var4,-((int)temp_var6 >> 0x1f)),temp_var3);\n}\n\n",
            "called": [
                "FUN_080006ac"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080004d0",
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08006228",
                "FUN_08005900",
                "FUN_080071c0",
                "FUN_08006c0c",
                "FUN_08003330",
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "calculate_result_080004d0"
        },
        "FUN_08003fdc": {
            "renaming": {
                "FUN_08003fdc": "update_data_08003fdc",
                "param_1": "inputData"
            },
            "code": "\nvoid updateData_08003fdc(undefined4 inputData)\n\n{\n  *(undefined4 *)(*(int *)PTR_DAT_08003fe4 + 0x38) = inputData;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fdc",
            "calling": [
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "imported": false,
            "current_name": "update_data_08003fdc"
        },
        "FUN_080009f0": {
            "renaming": {
                "FUN_080009f0": "check_status_080009f0",
                "in_CY": "statusFlag"
            },
            "code": "\nbool checkStatus_080009f0(void)\n\n{\n  char statusFlag;\n  \n  FUN_08000980();\n  return statusFlag == '\\0';\n}\n\n",
            "called": [
                "FUN_08000980"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009f0",
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08006228",
                "FUN_08005854"
            ],
            "imported": false,
            "current_name": "check_status_080009f0"
        },
        "FUN_08004f10": {
            "renaming": {
                "FUN_08004f10": "configure_registers_08004f10",
                "puVar1": "registerArray"
            },
            "code": "\nvoid configureRegisters_08004f10(void)\n\n{\n  uint *registerArray;\n  \n  registerArray = DAT_08004f50;\n  *DAT_08004f50 = *DAT_08004f50 | 1;\n  registerArray[1] = DAT_08004f54 & registerArray[1];\n  *registerArray = *registerArray & 0xfef6ffff;\n  *registerArray = *registerArray & 0xfffbffff;\n  registerArray[1] = registerArray[1] & 0xff80ffff;\n  registerArray[2] = 0x9f0000;\n  *(undefined4 *)(DAT_08004f58 + 8) = 0x8000000;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f10",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": false,
            "current_name": "configure_registers_08004f10"
        },
        "FUN_08005044": {
            "renaming": {
                "FUN_08005044": "buffer_management_08005044",
                "param_1": "error_code",
                "param_2": "buffer_info",
                "param_3": "input_data",
                "param_4": "data_length",
                "iVar1": "temp_buffer",
                "uVar2": "new_buffer_size",
                "uVar3": "available_space",
                "iVar4": "data_offset"
            },
            "code": "\nundefined4 buffer_management_08005044(undefined4 *error_code,int *buffer_info,undefined4 input_data,uint data_length)\n\n{\n  int temp_buffer;\n  uint new_buffer_size;\n  uint available_space;\n  int data_offset;\n  \n  available_space = buffer_info[2];\n  if ((available_space <= data_length) && ((*(ushort *)(buffer_info + 3) & 0x480) != 0)) {\n    data_offset = *buffer_info - buffer_info[4];\n    available_space = (uint)(buffer_info[5] * 3) / 2;\n    new_buffer_size = data_length + 1 + data_offset;\n    if (available_space < new_buffer_size) {\n      available_space = new_buffer_size;\n    }\n    if ((int)((uint)*(ushort *)(buffer_info + 3) << 0x15) < 0) {\n      temp_buffer = FUN_08005714(error_code,available_space);\n      if (temp_buffer == 0) {\nLAB_0800508a:\n        *error_code = 0xc;\n        *(ushort *)(buffer_info + 3) = *(ushort *)(buffer_info + 3) | 0x40;\n        return 0xffffffff;\n      }\n      FUN_08005630(temp_buffer,buffer_info[4],data_offset);\n      *(ushort *)(buffer_info + 3) = *(ushort *)(buffer_info + 3) & 0xfb7f | 0x80;\n    }\n    else {\n      temp_buffer = FUN_080057d0(error_code,buffer_info[4],available_space);\n      if (temp_buffer == 0) {\n        FUN_0800567c(error_code,buffer_info[4]);\n        goto LAB_0800508a;\n      }\n    }\n    buffer_info[4] = temp_buffer;\n    *buffer_info = temp_buffer + data_offset;\n    buffer_info[5] = available_space;\n    buffer_info[2] = available_space - data_offset;\n    available_space = data_length;\n  }\n  if (data_length <= available_space) {\n    available_space = data_length;\n  }\n  FUN_08005646(*buffer_info,input_data,available_space);\n  buffer_info[2] = buffer_info[2] - available_space;\n  *buffer_info = available_space + *buffer_info;\n  return 0;\n}\n\n",
            "called": [
                "FUN_08005630",
                "FUN_08005714",
                "FUN_0800567c",
                "FUN_080057d0",
                "FUN_08005646"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005044",
            "calling": [
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "buffer_management_08005044"
        },
        "FUN_08004194": {
            "renaming": {
                "FUN_08004194": "initialize_data_structures_08004194",
                "puVar1": "dataStructure1",
                "puVar2": "dataStructure2",
                "puVar3": "dataStructure3",
                "puVar4": "dataStructure4",
                "uVar5": "tempVar1",
                "uVar6": "tempVar2",
                "uVar7": "tempVar3",
                "uVar8": "tempVar4"
            },
            "code": "\nvoid initializeDataStructures_08004194(void)\n\n{\n  undefined *dataStructure1;\n  undefined *dataStructure2;\n  undefined *dataStructure3;\n  undefined *dataStructure4;\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  undefined4 tempVar3;\n  undefined4 tempVar4;\n  \n  FUN_08004028();\n  FUN_08004c70();\n  FUN_08002ea0();\n  FUN_08003298();\n  dataStructure3 = PTR_DAT_080049f0;\n  dataStructure2 = PTR_DAT_080049ec;\n  dataStructure1 = PTR_DAT_080049e8;\n  *(undefined4 *)(PTR_DAT_080049ec + 0x4c) = 1;\n  *(undefined4 *)(dataStructure1 + 0x4c) = 1;\n  *(undefined4 *)(dataStructure3 + 0x4c) = 0xffffffff;\n  tempVar1 = DAT_080049f8;\n  dataStructure4 = PTR_DAT_080049f4;\n  *(undefined4 *)(PTR_DAT_080049f4 + 0x4c) = 1;\n  tempVar2 = DAT_08004a00;\n  *(undefined4 *)(dataStructure2 + 0x20) = DAT_080049fc;\n  tempVar3 = DAT_08004a08;\n  *(undefined4 *)(dataStructure1 + 0x20) = DAT_08004a04;\n  *(undefined4 *)(dataStructure3 + 0x20) = DAT_08004a0c;\n  *(undefined4 *)(dataStructure4 + 0x20) = 0;\n  *(undefined4 *)(dataStructure2 + 4) = tempVar1;\n  tempVar1 = DAT_08004a10;\n  *(undefined4 *)(dataStructure2 + 8) = DAT_08004a10;\n  *(undefined4 *)(dataStructure2 + 0xc) = tempVar2;\n  *(undefined4 *)(dataStructure2 + 0x10) = tempVar3;\n  tempVar3 = DAT_08004a14;\n  *(undefined4 *)(dataStructure2 + 0x14) = tempVar1;\n  *(undefined4 *)(dataStructure2 + 0x18) = tempVar3;\n  tempVar4 = DAT_08004a1c;\n  tempVar3 = DAT_08004a18;\n  *(undefined4 *)(dataStructure1 + 4) = DAT_08004a18;\n  *(undefined4 *)(dataStructure1 + 8) = tempVar1;\n  *(undefined4 *)(dataStructure1 + 0xc) = tempVar4;\n  *(undefined4 *)(dataStructure1 + 0x10) = tempVar3;\n  tempVar3 = DAT_08004a20;\n  *(undefined4 *)(dataStructure1 + 0x14) = tempVar1;\n  *(undefined4 *)(dataStructure1 + 0x18) = tempVar3;\n  *(undefined4 *)(dataStructure3 + 4) = DAT_08004a24;\n  *(undefined4 *)(dataStructure3 + 8) = DAT_08004a28;\n  *(undefined4 *)(dataStructure3 + 0xc) = tempVar2;\n  *(undefined4 *)(dataStructure3 + 0x10) = 0;\n  *(undefined4 *)(dataStructure3 + 0x14) = 0;\n  *(undefined4 *)(dataStructure3 + 0x18) = 0;\n  *(undefined4 *)(dataStructure4 + 4) = DAT_08004a2c;\n  *(undefined4 *)(dataStructure4 + 8) = 0;\n  *(undefined4 *)(dataStructure4 + 0xc) = 0;\n  *(undefined4 *)(dataStructure4 + 0x10) = 0;\n  *(undefined4 *)(dataStructure4 + 0x14) = 0;\n  *(undefined4 *)(dataStructure4 + 0x18) = 0;\n  return;\n}\n\n",
            "called": [
                "FUN_08003298",
                "FUN_08004028",
                "FUN_08004c70",
                "FUN_08002ea0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004194",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "initialize_data_structures_08004194"
        },
        "FUN_08001240": {
            "renaming": {
                "FUN_08001240": "update_flag_08001240",
                "param_1": "flagValue",
                "uVar1": "updatedFlag"
            },
            "code": "\nvoid updateFlag_08001240(int flagValue)\n\n{\n  uint updatedFlag;\n  \n  if (flagValue == 4) {\n    updatedFlag = *DAT_08001254 | 4;\n  }\n  else {\n    updatedFlag = *DAT_08001254 & 0xfffffffb;\n  }\n  *DAT_08001254 = updatedFlag;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001240",
            "calling": [
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "update_flag_08001240"
        },
        "FUN_08005840": {
            "renaming": {
                "FUN_08005840": "calculate_offset_08005840",
                "param_1": "input_value",
                "param_2": "input_array",
                "iVar1": "offset"
            },
            "code": "\nint calculate_offset_08005840(undefined4 input_value,int input_array)\n\n{\n  int offset;\n  \n  offset = *(int *)(input_array + -4) + -4;\n  if (*(int *)(input_array + -4) < 0) {\n    offset = offset + *(int *)(input_array + offset);\n  }\n  return offset;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005840",
            "calling": [
                "FUN_080057d0"
            ],
            "imported": false,
            "current_name": "calculate_offset_08005840"
        },
        "FUN_08000150": {
            "renaming": {
                "FUN_08000150": "calculate_string_length_08000150",
                "param_1": "input_string",
                "cVar1": "current_char",
                "pcVar2": "next_char_ptr",
                "pcVar3": "current_char_ptr"
            },
            "code": "\nchar * calculate_string_length_08000150(char *input_string)\n\n{\n  char current_char;\n  char *next_char_ptr;\n  char *current_char_ptr;\n  \n  current_char_ptr = input_string;\n  do {\n    next_char_ptr = current_char_ptr + 1;\n    current_char = *current_char_ptr;\n    current_char_ptr = next_char_ptr;\n  } while (current_char != '\\0');\n  return next_char_ptr + (-1 - (int)input_string);\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000150",
            "calling": [
                "FUN_08004c8c"
            ],
            "imported": false,
            "current_name": "calculate_string_length_08000150"
        },
        "FUN_08003f3c": {
            "renaming": {
                "FUN_08003f3c": "process_parameters_08003f3c",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "uVar1": "tempVar",
                "uVar2": "leadingZeroesCount"
            },
            "code": "\nvoid processParameters_08003f3c(undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3)\n\n{\n  undefined4 tempVar;\n  uint leadingZeroesCount;\n  \n  tempVar = DAT_08003f78;\n  leadingZeroesCount = count_leading_zeroes(inputParam1);\n  FUN_08001424(DAT_08003f78,0x8000,leadingZeroesCount >> 5);\n  leadingZeroesCount = count_leading_zeroes(inputParam2);\n  FUN_08001424(tempVar,0x4000,leadingZeroesCount >> 5);\n  leadingZeroesCount = count_leading_zeroes(inputParam3);\n  FUN_08001424(tempVar,0x2000,leadingZeroesCount >> 5);\n  return;\n}\n\n",
            "called": [
                "FUN_08001424"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f3c",
            "calling": [
                "FUN_08004028",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "process_parameters_08003f3c"
        },
        "FUN_08002214": {
            "renaming": {
                "FUN_08002214": "get_data_from_ptr_08002214",
                "undefined4": "uint32_t"
            },
            "code": "\nuint32_t get_data_from_ptr_08002214(void)\n\n{\n  return *(uint32_t *)PTR_DAT_0800221c;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002214",
            "calling": [
                "FUN_08004514",
                "FUN_08001104"
            ],
            "imported": false,
            "current_name": "get_data_from_ptr_08002214"
        },
        "FUN_0800729c": {
            "renaming": {
                "FUN_0800729c": "do_nothing_0800729c"
            },
            "code": "\nvoid do_nothing_0800729c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800729c",
            "calling": [
                "FUN_080071c0"
            ],
            "imported": false,
            "current_name": "do_nothing_0800729c"
        },
        "FUN_08001004": {
            "renaming": {
                "FUN_08001004": "swap_and_concatenate_08001004",
                "param_1": "input1",
                "param_2": "input2"
            },
            "code": "\nundefined8 swap_and_concatenate_08001004(undefined4 input1,undefined4 input2)\n\n{\n  FUN_08000f9c();\n  return CONCAT44(input2,input1);\n}\n\n",
            "called": [
                "FUN_08000f9c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001004",
            "calling": [
                "FUN_08000ffc",
                "FUN_08001014",
                "FUN_08001028"
            ],
            "imported": false,
            "current_name": "swap_and_concatenate_08001004"
        },
        "FUN_08003ff4": {
            "renaming": {
                "FUN_08003ff4": "process_data_08003ff4",
                "puVar1": "dataPointer"
            },
            "code": "\nvoid processData_08003ff4(void)\n\n{\n  undefined *dataPointer;\n  \n  dataPointer = PTR_DAT_0800401c;\n  FUN_08002538(PTR_DAT_08004020,4);\n  FUN_08002538(PTR_DAT_08004024,8);\n  FUN_08002538(dataPointer,8);\n  FUN_08002538(dataPointer,0xc);\n  return;\n}\n\n",
            "called": [
                "FUN_08002538"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003ff4",
            "calling": [
                "FUN_08004028"
            ],
            "imported": false,
            "current_name": "process_data_08003ff4"
        },
        "FUN_080041ae": {
            "renaming": {
                "FUN_080041ae": "main_loop_080041ae"
            },
            "code": "\nvoid mainLoop_080041ae(void)\n\n{\n  FUN_08003eb0(0);\n  FUN_08004194();\n  do {\n    FUN_0800114c();\n    FUN_0800411c();\n  } while( true );\n}\n\n",
            "called": [
                "FUN_08003eb0",
                "FUN_08004194",
                "FUN_0800114c",
                "FUN_0800411c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041ae",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": false,
            "current_name": "main_loop_080041ae"
        },
        "FUN_08001128": {
            "renaming": {
                "FUN_08001128": "initialize_hardware_08001128"
            },
            "code": "\nundefined4 initializeHardware_08001128(void)\n\n{\n  *DAT_08001148 = *DAT_08001148 | 0x10;\n  FUN_08001170(3);\n  FUN_08001104(0);\n  FUN_08004ccc();\n  return 0;\n}\n\n",
            "called": [
                "FUN_08001170",
                "FUN_08004ccc",
                "FUN_08001104"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001128",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "initialize_hardware_08001128"
        },
        "FUN_08004514": {
            "renaming": {
                "FUN_08004514": "initialize_system_08004514",
                "iVar1": "result1",
                "uVar2": "systemTime",
                "uVar3": "peripheralId",
                "iVar4": "configStatus",
                "local_44": "numPeripherals",
                "local_40": "currentStatus",
                "local_3c": "peripheralResult",
                "local_38": "systemMemory",
                "local_34": "peripheralConfig",
                "local_30": "configArray",
                "local_20": "configElement1",
                "local_1c": "configElement2",
                "local_14": "configElement3",
                "local_10": "configElement4",
                "local_c": "configElement5"
            },
            "code": "\nvoid initializeSystem_08004514(void)\n\n{\n  int result1;\n  uint systemTime;\n  undefined4 peripheralId;\n  int configStatus;\n  undefined4 numPeripherals;\n  int currentStatus;\n  int peripheralResult;\n  undefined4 systemMemory;\n  int peripheralConfig;\n  undefined4 configArray [4];\n  undefined4 configElement1;\n  undefined4 configElement2;\n  undefined4 configElement3;\n  undefined4 configElement4;\n  undefined4 configElement5;\n  \n  configElement1 = 1;\n  configElement2 = 0x10;\n  configStatus = 2;\n  configElement4 = 0;\n  configArray[0] = 2;\n  configElement3 = 2;\n  configElement5 = 0x380000;\n  result1 = FUN_08001b58(configArray);\n  if (result1 == 0) goto LAB_08004540;\n  peripheralId = 0x3c;\n  while( true ) {\n    result1 = FUN_08004490(PTR_s____Src_peripherals_c_08004588,peripheralId);\nLAB_08004540:\n    numPeripherals = 0xf;\n    systemMemory = 0x400;\n    currentStatus = configStatus;\n    peripheralResult = result1;\n    peripheralConfig = result1;\n    configStatus = FUN_0800209c(&numPeripherals,configStatus);\n    if (configStatus == 0) break;\n    peripheralId = 0x49;\n  }\n  systemTime = FUN_08002214();\n  FUN_08001214(systemTime / 1000);\n  FUN_08001240(4);\n  FUN_08001194(0xffffffff,0,0);\n  return;\n}\n\n",
            "called": [
                "FUN_08002214",
                "FUN_08001240",
                "FUN_08001194",
                "FUN_0800209c",
                "FUN_08004490",
                "FUN_08001214",
                "FUN_08001b58"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004514",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "initialize_system_08004514"
        },
        "FUN_08004a84": {
            "renaming": {
                "FUN_08004a84": "process_data_08004a84",
                "puVar1": "dataPointerA",
                "puVar2": "dataPointerB",
                "puVar3": "dataPointerC",
                "puVar4": "dataPointerD",
                "puVar5": "dataPointerE",
                "uVar6": "result",
                "uVar7": "tempVar",
                "iVar8": "checkResult"
            },
            "code": "\nvoid processData_08004a84(void)\n\n{\n  undefined *dataPointerA;\n  undefined *dataPointerB;\n  undefined *dataPointerC;\n  undefined *dataPointerD;\n  undefined *dataPointerE;\n  undefined result;\n  undefined4 tempVar;\n  int checkResult;\n  \n  tempVar = FUN_08002ec0();\n  dataPointerB = PTR_DAT_08004bf4;\n  dataPointerA = PTR_DAT_08004bf0;\n  *(undefined4 *)(PTR_DAT_08004bf0 + 0x30) = tempVar;\n  tempVar = FUN_08002ed4();\n  *(undefined4 *)(dataPointerB + 0x30) = tempVar;\n  tempVar = FUN_08002ee8();\n  dataPointerC = PTR_DAT_08004bf8;\n  *(undefined4 *)(PTR_DAT_08004bf8 + 0x30) = tempVar;\n  FUN_08004a30();\n  checkResult = FUN_08001064(*(undefined4 *)(dataPointerA + 0x30),0);\n  if (checkResult == 0) {\n    checkResult = FUN_08001028(*(undefined4 *)(dataPointerA + 0x30),DAT_08004c00);\n  }\n  else {\n    checkResult = FUN_08001064(*(undefined4 *)(dataPointerA + 0x30),DAT_08004bfc);\n  }\n  if (checkResult == 0) {\n    checkResult = FUN_08001064(*(undefined4 *)(dataPointerB + 0x30),0);\n    if (checkResult == 0) {\n      checkResult = FUN_08001028(*(undefined4 *)(dataPointerB + 0x30),DAT_08004c00);\n    }\n    else {\n      checkResult = FUN_08001064(*(undefined4 *)(dataPointerB + 0x30),DAT_08004bfc);\n    }\n    if (checkResult == 0) {\n      FUN_08003f3c(1,1);\n      FUN_0800483c(PTR_DAT_08004bf0);\n      dataPointerD = PTR_DAT_08004c04;\n      FUN_0800483c(PTR_DAT_08004bf4);\n      FUN_0800483c(PTR_DAT_08004bf8);\n      dataPointerE = PTR_DAT_08004c08;\n      if (dataPointerD[1] != '\\0') {\n        FUN_0800483c(PTR_DAT_08004c08);\n        tempVar = FUN_08000adc(*(undefined4 *)(dataPointerE + 0x48),DAT_08004c0c);\n        *(undefined4 *)(dataPointerE + 0x48) = tempVar;\n      }\n      *(undefined4 *)(dataPointerE + 0x48) = *(undefined4 *)(dataPointerD + 4);\n      if (*dataPointerD == '\\0') {\n        FUN_080041c4();\n      }\n      else {\n        FUN_0800426c(*(undefined4 *)(dataPointerE + 0x48),*(undefined4 *)(dataPointerA + 0x48),\n                     *(undefined4 *)(dataPointerB + 0x48),*(undefined4 *)(dataPointerC + 0x48));\n      }\n      FUN_08000cec(*(undefined4 *)(dataPointerA + 4),DAT_08004c10);\n      result = FUN_080010c4();\n      dataPointerD = PTR_DAT_08004c14;\n      tempVar = DAT_08004c10;\n      PTR_DAT_08004c14[3] = result;\n      FUN_08000cec(*(undefined4 *)(dataPointerA + 8),tempVar);\n      result = FUN_080010c4();\n      tempVar = DAT_08004c10;\n      dataPointerD[4] = result;\n      FUN_08000cec(*(undefined4 *)(dataPointerB + 4),tempVar);\n      result = FUN_080010c4();\n      tempVar = DAT_08004c10;\n      *dataPointerD = result;\n      FUN_08000cec(*(undefined4 *)(dataPointerB + 8),tempVar);\n      result = FUN_080010c4();\n      tempVar = DAT_08004c10;\n      dataPointerD[1] = result;\n      FUN_08000cec(*(undefined4 *)(dataPointerB + 0xc),tempVar);\n      result = FUN_080010c4();\n      tempVar = DAT_08004c10;\n      dataPointerD[2] = result;\n      FUN_08000cec(*(undefined4 *)(dataPointerC + 4),tempVar);\n      result = FUN_080010c4();\n      tempVar = DAT_08004c10;\n      dataPointerD[6] = result;\n      FUN_08000cec(*(undefined4 *)(dataPointerC + 8),tempVar);\n      result = FUN_080010c4();\n      tempVar = DAT_08004c10;\n      dataPointerD[7] = result;\n      FUN_08000cec(*(undefined4 *)(dataPointerC + 0xc),tempVar);\n      result = FUN_080010c4();\n      tempVar = DAT_08004c10;\n      dataPointerD[8] = result;\n      FUN_08000cec(*(undefined4 *)(dataPointerE + 4),tempVar);\n      result = FUN_080010c4();\n      tempVar = DAT_08004c10;\n      dataPointerD[9] = result;\n      FUN_08000cec(*(undefined4 *)(dataPointerE + 8),tempVar);\n      result = FUN_080010c4();\n      tempVar = DAT_08004c10;\n      dataPointerD[10] = result;\n      FUN_08000cec(*(undefined4 *)(dataPointerE + 0xc),tempVar);\n      result = FUN_080010c4();\n      dataPointerD[0xb] = result;\n      return;\n    }\n  }\n  FUN_080041c4();\n  FUN_08003f3c(0,1);\n  return;\n}\n\n",
            "called": [
                "FUN_080041c4",
                "FUN_0800426c",
                "FUN_08004a30",
                "FUN_08003f3c",
                "FUN_08001064",
                "FUN_08000adc",
                "FUN_08002ee8",
                "FUN_08000cec",
                "FUN_0800483c",
                "FUN_080010c4",
                "FUN_08002ed4",
                "FUN_08002ec0",
                "FUN_08001028"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a84",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "process_data_08004a84"
        },
        "FUN_080041c4": {
            "renaming": {
                "FUN_080041c4": "initialize_components_080041c4",
                "param_1": "component1",
                "param_2": "component2",
                "param_3": "component3",
                "param_4": "component4",
                "extraout_r1": "result"
            },
            "code": "\nvoid initializeComponents_080041c4(undefined4 component1,undefined4 component2,undefined4 component3,undefined4 component4)\n\n{\n  undefined4 result;\n  \n  FUN_08003fc4(0);\n  FUN_08003fd0(0);\n  FUN_08003fdc(0);\n  FUN_08003fe8(0,result,component3,component4);\n  return;\n}\n\n",
            "called": [
                "FUN_08003fc4",
                "FUN_08003fdc",
                "FUN_08003fd0",
                "FUN_08003fe8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041c4",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "initialize_components_080041c4"
        },
        "FUN_080053d4": {
            "renaming": {
                "FUN_080053d4": "formatted_print_080053d4",
                "param_1": "output_buffer",
                "param_2": "format_options",
                "param_3": "input_buffer",
                "param_4": "write_callback",
                "param_5": "arg_list",
                "bVar1": "format_char",
                "iVar2": "index",
                "puVar3": "current_arg",
                "iVar4": "write_result",
                "puVar5": "number_chars",
                "uVar6": "base",
                "ppuVar7": "arg_pointer",
                "uVar8": "value",
                "uVar9": "quotient",
                "puVar10": "digit_position",
                "puVar11": "output_position",
                "local_24": "written_bytes"
            },
            "code": "\nuint formatted_print_080053d4(undefined4 output_buffer,uint *format_options,undefined4 input_buffer,code *write_callback,uint **arg_list)\n\n{\n  byte format_char;\n  int index;\n  uint *current_arg;\n  int write_result;\n  undefined *number_chars;\n  uint base;\n  uint **arg_pointer;\n  uint value;\n  uint quotient;\n  undefined *digit_position;\n  undefined *output_position;\n  uint written_bytes [2];\n  \n  format_char = *(byte *)(format_options + 6);\n  output_position = (undefined *)((int)format_options + 0x43);\n  if (format_char != 0x6e) {\n    if (format_char < 0x6f) {\n      if (format_char != 99) {\n        if (format_char < 100) {\n          if (format_char == 0) goto LAB_0800558e;\n          if (format_char != 0x58) goto LAB_08005404;\n          *(undefined *)((int)format_options + 0x45) = 0x58;\n          number_chars = PTR_s_0123456789ABCDEF_08005610;\nLAB_0800551e:\n          base = *format_options;\n          current_arg = *arg_list;\n          *arg_list = current_arg + 1;\n          if (((base & 0x80) == 0) && ((int)(base << 0x19) < 0)) {\n            value = (uint)*(ushort *)current_arg;\n          }\n          else {\n            value = *current_arg;\n          }\n          if ((int)(base << 0x1f) < 0) {\n            *format_options = base | 0x20;\n          }\n          if (value == 0) {\n            *format_options = *format_options & 0xffffffdf;\n          }\n          base = 0x10;\nLAB_080054b4:\n          *(undefined *)((int)format_options + 0x43) = 0;\n        }\n        else {\n          if ((format_char != 100) && (format_char != 0x69)) goto LAB_08005404;\n          value = *format_options;\n          current_arg = *arg_list;\n          if ((value & 0x80) == 0) {\n            *arg_list = current_arg + 1;\n            if ((value & 0x40) == 0) goto LAB_08005424;\n            value = (uint)(short)*(ushort *)current_arg;\n          }\n          else {\n            *arg_list = current_arg + 1;\nLAB_08005424:\n            value = *current_arg;\n          }\n          if ((int)value < 0) {\n            value = -value;\n            *(undefined *)((int)format_options + 0x43) = 0x2d;\n          }\n          base = 10;\n          number_chars = PTR_s_0123456789ABCDEF_08005610;\n        }\n        quotient = format_options[1];\n        format_options[2] = quotient;\n        digit_position = output_position;\n        if ((int)quotient < 0) {\n          if (value != 0) goto LAB_08005552;\nLAB_08005600:\n          *(undefined *)((int)format_options + 0x42) = *number_chars;\n          digit_position = (undefined *)((int)format_options + 0x42);\n        }\n        else {\n          *format_options = *format_options & 0xfffffffb;\n          if (value == 0) {\n            if (quotient != 0) goto LAB_08005600;\n          }\n          else {\nLAB_08005552:\n            do {\n              quotient = value / base;\n              digit_position = digit_position + -1;\n              *digit_position = number_chars[value - base * quotient];\n              value = quotient;\n            } while (quotient != 0);\n          }\n        }\n        if (((base == 8) && ((int)(*format_options << 0x1f) < 0)) && ((int)format_options[1] <= (int)format_options[4]))\n        {\n          digit_position[-1] = 0x30;\n          digit_position = digit_position + -1;\n        }\n        format_options[4] = (int)output_position - (int)digit_position;\n        output_position = digit_position;\n        goto LAB_080054fa;\n      }\n      current_arg = *arg_list;\n      *arg_list = current_arg + 1;\n      *(char *)((int)format_options + 0x42) = (char)*current_arg;\nLAB_08005464:\n      output_position = (undefined *)((int)format_options + 0x42);\n      value = 1;\n    }\n    else {\n      if (format_char != 0x73) {\n        if (format_char < 0x74) {\n          if (format_char == 0x6f) {\nLAB_0800548a:\n            value = *format_options;\n            current_arg = *arg_list;\n            if ((value & 0x80) == 0) {\n              *arg_list = current_arg + 1;\n              if ((value & 0x40) == 0) goto LAB_08005498;\n              value = (uint)*(ushort *)current_arg;\n            }\n            else {\n              *arg_list = current_arg + 1;\nLAB_08005498:\n              value = *current_arg;\n            }\n            number_chars = PTR_s_0123456789ABCDEF_08005610;\n            if (format_char == 0x6f) {\n              base = 8;\n            }\n            else {\n              base = 10;\n            }\n            goto LAB_080054b4;\n          }\n          if (format_char == 0x70) {\n            *format_options = *format_options | 0x20;\nLAB_0800544a:\n            number_chars = PTR_s_0123456789abcdef_0800560c;\n            *(undefined *)((int)format_options + 0x45) = 0x78;\n            goto LAB_0800551e;\n          }\n        }\n        else {\n          if (format_char == 0x75) goto LAB_0800548a;\n          if (format_char == 0x78) goto LAB_0800544a;\n        }\nLAB_08005404:\n        *(byte *)((int)format_options + 0x42) = format_char;\n        goto LAB_08005464;\n      }\n      current_arg = *arg_list;\n      *arg_list = current_arg + 1;\n      output_position = (undefined *)*current_arg;\n      index = FUN_08005614(output_position,0,format_options[1]);\n      if (index != 0) {\n        format_options[1] = index - (int)output_position;\n      }\n      value = format_options[1];\n    }\n    format_options[4] = value;\n    *(undefined *)((int)format_options + 0x43) = 0;\n    goto LAB_080054fa;\n  }\n  value = *format_options;\n  arg_pointer = (uint **)*arg_list;\n  base = format_options[5];\n  if ((value & 0x80) == 0) {\n    *arg_list = (uint *)(arg_pointer + 1);\n    current_arg = *arg_pointer;\n    if ((value & 0x40) == 0) goto LAB_0800557a;\n    *(short *)current_arg = (short)base;\n  }\n  else {\n    *arg_list = (uint *)(arg_pointer + 1);\n    current_arg = *arg_pointer;\nLAB_0800557a:\n    *current_arg = base;\n  }\nLAB_0800558e:\n  format_options[4] = 0;\nLAB_080054fa:\n  index = FUN_080052e4(output_buffer,format_options,written_bytes,input_buffer,write_callback);\n  if ((index == -1) || (index = (*write_callback)(output_buffer,input_buffer,output_position,format_options[4]), index == -1)) {\nLAB_0800550e:\n    value = 0xffffffff;\n  }\n  else {\n    if ((int)(*format_options << 0x1e) < 0) {\n      for (index = 0; index < (int)(format_options[3] - written_bytes[0]); index = index + 1) {\n        write_result = (*write_callback)(output_buffer,input_buffer,(int)format_options + 0x19,1);\n        if (write_result == -1) goto LAB_0800550e;\n      }\n    }\n    value = format_options[3];\n    if ((int)format_options[3] < (int)written_bytes[0]) {\n      value = written_bytes[0];\n    }\n  }\n  return value;\n}\n\n",
            "called": [
                "FUN_080052e4",
                "FUN_08005614"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080053d4",
            "calling": [
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "formatted_print_080053d4"
        },
        "FUN_080057d0": {
            "renaming": {
                "FUN_080057d0": "process_data_080057d0",
                "param_1": "input_data",
                "param_2": "data_size",
                "param_3": "buffer_size",
                "param_4": "extra_data",
                "uVar1": "result",
                "uVar2": "available_space"
            },
            "code": "\nuint process_data_080057d0(undefined4 input_data,uint data_size,uint buffer_size,undefined4 extra_data)\n\n{\n  uint result;\n  uint available_space;\n  \n  if (data_size != 0) {\n    if (buffer_size == 0) {\n      FUN_0800567c();\n      result = buffer_size;\n    }\n    else {\n      available_space = FUN_08005840();\n      result = data_size;\n      if ((available_space < buffer_size) && (result = FUN_08005714(input_data,buffer_size), result != 0)) {\n        FUN_08005630(result,data_size,buffer_size);\n        FUN_0800567c(input_data,data_size);\n      }\n    }\n    return result;\n  }\n  result = FUN_08005714(input_data,buffer_size,buffer_size,extra_data);\n  return result;\n}\n\n",
            "called": [
                "FUN_08005630",
                "FUN_08005840",
                "FUN_08005714",
                "FUN_0800567c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080057d0",
            "calling": [
                "FUN_08005044"
            ],
            "imported": false,
            "current_name": "process_data_080057d0"
        },
        "FUN_0800567c": {
            "renaming": {
                "FUN_0800567c": "merge_free_blocks_0800567c",
                "param_1": "error_code",
                "param_2": "block_size",
                "param_3": "unused_param_3",
                "param_4": "unused_param_4",
                "puVar1": "memory_pointer",
                "extraout_r1": "temp_pointer_1",
                "ppiVar2": "temp_pointer_2",
                "ppiVar3": "temp_pointer_3",
                "piVar4": "temp_pointer_4",
                "ppiVar5": "current_block",
                "ppiVar6": "previous_block",
                "ppiVar7": "new_block"
            },
            "code": "\nvoid merge_free_blocks_0800567c(undefined4 *error_code,int block_size,undefined4 unused_param_3,undefined4 unused_param_4)\n\n{\n  undefined *memory_pointer;\n  int **temp_pointer_1;\n  int **temp_pointer_2;\n  int **temp_pointer_3;\n  int *temp_pointer_4;\n  int **current_block;\n  int **previous_block;\n  int **new_block;\n  \n  if (block_size == 0) {\n    return;\n  }\n  new_block = (int **)(block_size + -4);\n  if (*(int *)(block_size + -4) < 0) {\n    new_block = (int **)((int)new_block + *(int *)(block_size + -4));\n  }\n  do_nothing_0800583c();\n  memory_pointer = PTR_DAT_08005710;\n  current_block = *(int ***)PTR_DAT_08005710;\n  if (current_block == (int **)0x0) {\n    new_block[1] = (int *)0x0;\n    *(int ***)memory_pointer = new_block;\n    temp_pointer_2 = temp_pointer_1;\n    temp_pointer_3 = (int **)memory_pointer;\n  }\n  else if (new_block < current_block) {\n    temp_pointer_2 = (int **)*new_block;\n    temp_pointer_3 = (int **)((int)new_block + (int)temp_pointer_2);\n    if (current_block == temp_pointer_3) {\n      temp_pointer_4 = *current_block;\n      current_block = (int **)current_block[1];\n      temp_pointer_3 = (int **)((int)temp_pointer_4 + (int)temp_pointer_2);\n      *new_block = (int *)temp_pointer_3;\n    }\n    new_block[1] = (int *)current_block;\n    *(int ***)memory_pointer = new_block;\n  }\n  else {\n    do {\n      previous_block = current_block;\n      temp_pointer_3 = (int **)previous_block[1];\n      if (temp_pointer_3 == (int **)0x0) break;\n      current_block = temp_pointer_3;\n    } while (temp_pointer_3 <= new_block);\n    temp_pointer_2 = (int **)*previous_block;\n    if ((int **)((int)previous_block + (int)temp_pointer_2) == new_block) {\n      temp_pointer_2 = (int **)((int)temp_pointer_2 + (int)*new_block);\n      *previous_block = (int *)temp_pointer_2;\n      if (temp_pointer_3 == (int **)((int)previous_block + (int)temp_pointer_2)) {\n        temp_pointer_4 = *temp_pointer_3;\n        temp_pointer_3 = (int **)temp_pointer_3[1];\n        temp_pointer_2 = (int **)((int)temp_pointer_2 + (int)temp_pointer_4);\n        *previous_block = (int *)temp_pointer_2;\n        previous_block[1] = (int *)temp_pointer_3;\n      }\n    }\n    else if (new_block < (int **)((int)previous_block + (int)temp_pointer_2)) {\n      *error_code = 0xc;\n    }\n    else {\n      temp_pointer_2 = (int **)((int)new_block + (int)*new_block);\n      if (temp_pointer_3 == temp_pointer_2) {\n        temp_pointer_4 = *temp_pointer_3;\n        temp_pointer_3 = (int **)temp_pointer_3[1];\n        temp_pointer_2 = (int **)((int)temp_pointer_4 + (int)*new_block);\n        *new_block = (int *)temp_pointer_2;\n      }\n      new_block[1] = (int *)temp_pointer_3;\n      previous_block[1] = (int *)new_block;\n    }\n  }\n  do_nothing_0800583e(error_code,temp_pointer_2,temp_pointer_3,unused_param_4);\n  return;\n}\n\n",
            "called": [
                "FUN_0800583e",
                "FUN_0800583c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800567c",
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "imported": false,
            "current_name": "merge_free_blocks_0800567c"
        },
        "FUN_0800458c": {
            "renaming": {
                "FUN_0800458c": "initialize_system_0800458c",
                "uVar1": "tempVar1",
                "puVar2": "tempPtr",
                "iVar3": "status",
                "uVar4": "tempVar2",
                "iVar5": "counter",
                "local_58": "adcValue1",
                "local_54": "adcValue2",
                "local_50": "adcChannel1",
                "local_4c": "adcChannel2",
                "local_48": "adcChannel3",
                "local_40": "adcChannel4",
                "local_3c": "adcChannel5",
                "local_38": "adcChannel6",
                "local_34": "interruptID",
                "local_30": "priority",
                "local_2c": "pwmChannel1",
                "local_28": "pwmChannel2",
                "local_24": "pwmChannel3",
                "local_20": "pwmFrequency",
                "local_1c": "pwmChannel4"
            },
            "code": "\nvoid initializeSystem_0800458c(void)\n\n{\n  undefined4 tempVar1;\n  undefined *tempPtr;\n  int status;\n  undefined4 tempVar2;\n  int counter;\n  int adcValue1;\n  int adcValue2;\n  int adcChannel1;\n  int adcChannel2;\n  int adcChannel3;\n  int adcChannel4;\n  int adcChannel5;\n  int adcChannel6;\n  int interruptID;\n  int priority;\n  int pwmChannel1;\n  int pwmChannel2;\n  int pwmChannel3;\n  undefined4 pwmFrequency;\n  int pwmChannel4;\n  \n  FUN_08001128();\n  FUN_08004514();\n  tempVar2 = DAT_08004800;\n  status = DAT_080047fc;\n  *(uint *)(DAT_080047fc + 0x18) = *(uint *)(DAT_080047fc + 0x18) | 0x10;\n  counter = 2;\n  *(uint *)(status + 0x18) = *(uint *)(status + 0x18) | 4;\n  tempVar1 = DAT_08004804;\n  *(uint *)(status + 0x18) = *(uint *)(status + 0x18) | 8;\n  FUN_08001424(tempVar2,0xe000,0,*(uint *)(status + 0x18) & 8);\n  FUN_08001424(DAT_08004808,0x20,0);\n  interruptID = 0xe000;\n  priority = 1;\n  pwmChannel2 = 2;\n  FUN_08001264(DAT_08004800,&interruptID);\n  interruptID = 0x20;\n  priority = 1;\n  pwmChannel2 = 2;\n  FUN_08001264(DAT_08004808,&interruptID);\n  tempPtr = PTR_DAT_0800480c;\n  *(undefined4 *)PTR_DAT_0800480c = DAT_08004810;\n  *(undefined4 *)(tempPtr + 4) = tempVar1;\n  *(undefined4 *)(tempPtr + 0x10) = 0x4000;\n  *(undefined4 *)(tempPtr + 8) = 0;\n  *(undefined4 *)(tempPtr + 0xc) = 0;\n  *(undefined4 *)(tempPtr + 0x14) = 0;\n  *(undefined4 *)(tempPtr + 0x18) = 0;\n  *(undefined4 *)(tempPtr + 0x1c) = 0;\n  *(undefined4 *)(tempPtr + 0x20) = 0;\n  status = FUN_08001754();\n  if (status == 0) goto LAB_0800463a;\n  tempVar2 = 0x6b;\n  while( true ) {\n    while( true ) {\n      while( true ) {\n        while( true ) {\n          while( true ) {\n            while( true ) {\n              while( true ) {\n                while( true ) {\n                  while( true ) {\n                    while( true ) {\n                      while( true ) {\n                        while( true ) {\n                          while( true ) {\n                            while( true ) {\n                              while( true ) {\n                                while( true ) {\n                                  status = FUN_08004490(PTR_s____Src_peripherals_c_08004814,tempVar2);\nLAB_0800463a:\n                                  tempVar2 = DAT_0800481c;\n                                  tempPtr = PTR_DAT_08004818;\n                                  *(int *)(PTR_DAT_08004818 + 8) = status;\n                                  *(int *)(tempPtr + 0xc) = status;\n                                  *(int *)(tempPtr + 0x10) = status;\n                                  *(int *)(tempPtr + 0x18) = status;\n                                  *(int *)(tempPtr + 0x1c) = status;\n                                  *(undefined4 *)tempPtr = tempVar2;\n                                  *(undefined4 *)(tempPtr + 4) = 0x1c200;\n                                  *(undefined4 *)(tempPtr + 0x14) = 0xc;\n                                  status = FUN_08002724(tempPtr);\n                                  tempVar2 = DAT_08004824;\n                                  tempPtr = PTR_DAT_08004820;\n                                  if (status == 0) break;\n                                  tempVar2 = 0x151;\n                                }\n                                *(undefined4 *)(PTR_DAT_08004820 + 8) = 0;\n                                *(undefined4 *)(tempPtr + 0x10) = 0;\n                                *(undefined4 *)(tempPtr + 0x14) = 0;\n                                *(undefined4 *)tempPtr = tempVar2;\n                                *(int *)(tempPtr + 4) = counter;\n                                *(undefined4 *)(tempPtr + 0xc) = 1000;\n                                status = FUN_080023d0(tempPtr);\n                                if (status == 0) break;\n                                tempVar2 = 0x88;\n                              }\n                              adcValue1 = status;\n                              adcValue2 = status;\n                              status = FUN_080025a4(tempPtr,&adcValue1);\n                              if (status == 0) break;\n                              tempVar2 = 0x8f;\n                            }\n                            adcChannel1 = 0x60;\n                            adcChannel2 = status;\n                            adcChannel3 = status;\n                            adcChannel4 = status;\n                            adcChannel5 = status;\n                            adcChannel6 = status;\n                            status = FUN_0800245c(tempPtr,&adcChannel1,0xc);\n                            if (status == 0) break;\n                            tempVar2 = 0x9a;\n                          }\n                          pwmFrequency = 0x2000;\n                          interruptID = status;\n                          priority = status;\n                          pwmChannel1 = status;\n                          pwmChannel2 = status;\n                          pwmChannel3 = status;\n                          pwmChannel4 = status;\n                          status = FUN_08002564(tempPtr,&interruptID);\n                          if (status == 0) break;\n                          tempVar2 = 0xa6;\n                        }\n                        FUN_08004e14(tempPtr);\n                        tempPtr = PTR_DAT_08004828;\n                        *(undefined4 *)PTR_DAT_08004828 = 0x40000000;\n                        *(int *)(tempPtr + 4) = counter;\n                        *(undefined4 *)(tempPtr + 8) = 0;\n                        *(undefined4 *)(tempPtr + 0xc) = 1000;\n                        *(undefined4 *)(tempPtr + 0x10) = 0;\n                        status = FUN_080023d0(tempPtr);\n                        if (status == 0) break;\n                        tempVar2 = 0xc3;\n                      }\n                      adcChannel1 = status;\n                      adcChannel2 = status;\n                      status = FUN_080025a4(tempPtr,&adcChannel1);\n                      if (status == 0) break;\n                      tempVar2 = 0xca;\n                    }\n                    interruptID = 0x60;\n                    priority = status;\n                    pwmChannel1 = status;\n                    pwmChannel3 = status;\n                    status = FUN_0800245c(tempPtr,&interruptID,4);\n                    if (status == 0) break;\n                    tempVar2 = 0xd3;\n                  }\n                  FUN_08004e14(tempPtr);\n                  tempVar2 = DAT_08004830;\n                  tempPtr = PTR_DAT_0800482c;\n                  *(undefined4 *)(PTR_DAT_0800482c + 0xc) = 1000;\n                  *(undefined4 *)tempPtr = tempVar2;\n                  *(int *)(tempPtr + 4) = counter;\n                  *(undefined4 *)(tempPtr + 8) = 0;\n                  *(undefined4 *)(tempPtr + 0x10) = 0;\n                  status = FUN_080023d0();\n                  if (status == 0) break;\n                  tempVar2 = 0xf0;\n                }\n                adcChannel1 = 0;\n                adcChannel2 = 0;\n                status = FUN_080025a4(PTR_DAT_0800482c,&adcChannel1);\n                if (status == 0) break;\n                tempVar2 = 0xf7;\n              }\n              interruptID = 0x60;\n              priority = status;\n              pwmChannel1 = status;\n              pwmChannel3 = status;\n              status = FUN_0800245c(PTR_DAT_0800482c,&interruptID,8);\n              if (status == 0) break;\n              tempVar2 = 0x100;\n            }\n            counter = FUN_0800245c(PTR_DAT_0800482c,&interruptID,0xc);\n            if (counter == 0) break;\n            tempVar2 = 0x105;\n          }\n          FUN_08004e14(PTR_DAT_0800482c);\n          tempPtr = PTR_DAT_08004834;\n          *(undefined4 *)PTR_DAT_08004834 = DAT_08004838;\n          *(undefined4 *)(tempPtr + 4) = 2;\n          *(undefined4 *)(tempPtr + 8) = 0;\n          *(undefined4 *)(tempPtr + 0xc) = 1000;\n          *(undefined4 *)(tempPtr + 0x10) = 0;\n          status = FUN_080023d0(tempPtr);\n          if (status == 0) break;\n          tempVar2 = 0x122;\n        }\n        adcChannel1 = status;\n        adcChannel2 = status;\n        status = FUN_080025a4(tempPtr,&adcChannel1);\n        if (status == 0) break;\n        tempVar2 = 0x129;\n      }\n      interruptID = 0x60;\n      priority = status;\n      pwmChannel1 = status;\n      pwmChannel3 = status;\n      status = FUN_0800245c(tempPtr,&interruptID,8);\n      if (status == 0) break;\n      tempVar2 = 0x132;\n    }\n    status = FUN_0800245c(tempPtr,&interruptID,0xc);\n    if (status == 0) break;\n    tempVar2 = 0x137;\n  }\n  FUN_08004e14(tempPtr);\n  return;\n}\n\n",
            "called": [
                "FUN_08002724",
                "FUN_080023d0",
                "FUN_08004e14",
                "FUN_08004514",
                "FUN_08001264",
                "FUN_0800245c",
                "FUN_08001128",
                "FUN_08001424",
                "FUN_08001754",
                "FUN_08002564",
                "FUN_080025a4",
                "FUN_08004490"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800458c",
            "calling": [
                "FUN_08004028"
            ],
            "imported": false,
            "current_name": "initialize_system_0800458c"
        },
        "FUN_080072d4": {
            "renaming": {
                "FUN_080072d4": "do_nothing_080072d4"
            },
            "code": "\nvoid do_nothing_080072d4(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072d4",
            "calling": [
                "FUN_08000110",
                "FUN_08004fb4",
                "FUN_08000134"
            ],
            "imported": false,
            "current_name": "do_nothing_080072d4"
        },
        "FUN_0800583c": {
            "renaming": {
                "FUN_0800583c": "do_nothing_0800583c"
            },
            "code": "\nvoid do_nothing_0800583c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583c",
            "calling": [
                "FUN_08005714",
                "FUN_0800567c"
            ],
            "imported": false,
            "current_name": "do_nothing_0800583c"
        },
        "FUN_08000adc": {
            "renaming": {
                "FUN_08000adc": "calculate_result_08000adc",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "unused_param",
                "param_4": "temp_param",
                "iVar1": "temp_var1",
                "uVar2": "temp_uint2",
                "uVar3": "temp_uint3",
                "uVar4": "temp_uint4",
                "uVar5": "temp_uint5",
                "iVar6": "temp_var6",
                "bVar7": "condition"
            },
            "code": "\nuint calculate_result_08000adc(uint input_1,uint input_2,undefined4 unused_param,uint temp_param)\n\n{\n  int temp_var1;\n  uint temp_uint2;\n  uint temp_uint3;\n  uint temp_uint4;\n  uint temp_uint5;\n  int temp_var6;\n  bool condition;\n  \n  temp_uint3 = input_1 << 1;\n  condition = temp_uint3 == 0;\n  if (!condition) {\n    temp_param = input_2 << 1;\n    condition = temp_param == 0;\n  }\n  if (!condition) {\n    condition = temp_uint3 == temp_param;\n  }\n  temp_var6 = (int)temp_uint3 >> 0x18;\n  if (!condition) {\n    condition = temp_var6 == -1;\n  }\n  if (!condition) {\n    condition = (int)temp_param >> 0x18 == -1;\n  }\n  if (condition) {\n    temp_var1 = (int)(input_2 << 1) >> 0x18;\n    if (temp_var6 == -1 || temp_var1 == -1) {\n      temp_uint3 = input_2;\n      if (temp_var6 == -1) {\n        temp_uint3 = input_1;\n      }\n      if (temp_var6 != -1 || temp_var1 != -1) {\n        input_2 = temp_uint3;\n      }\n      condition = (temp_uint3 & 0x7fffff) == 0;\n      if (condition) {\n        condition = (input_2 & 0x7fffff) == 0;\n      }\n      if (condition) {\n        condition = temp_uint3 == input_2;\n      }\n      if (!condition) {\n        temp_uint3 = temp_uint3 | 0x400000;\n      }\n      return temp_uint3;\n    }\n    if (((input_1 ^ input_2) & 0x7fffffff) != 0) {\n      if (temp_uint3 == 0) {\n        input_1 = input_2;\n      }\n      return input_1;\n    }\n    if (input_1 != input_2) {\n      return 0;\n    }\n    if ((temp_uint3 & 0xff000000) == 0) {\n      temp_uint3 = input_1 << 1;\n      if ((input_1 & 0x80000000) != 0) {\n        temp_uint3 = temp_uint3 | 0x80000000;\n      }\n      return temp_uint3;\n    }\n    if (temp_uint3 < 0xfe000000) {\n      return input_1 + 0x800000;\n    }\n    input_1 = input_1 & 0x80000000;\nLAB_08000c12:\n    return input_1 | 0x7f800000;\n  }\n  temp_uint3 = temp_uint3 >> 0x18;\n  temp_param = temp_param >> 0x18;\n  temp_uint5 = temp_param - temp_uint3;\n  condition = temp_uint5 != 0;\n  temp_uint4 = temp_uint3;\n  if (condition && temp_uint3 <= temp_param) {\n    temp_uint4 = temp_uint3 + temp_uint5;\n  }\n  if (condition && temp_uint3 <= temp_param) {\n    input_2 = input_2 ^ input_1;\n  }\n  if (condition && temp_uint3 <= temp_param) {\n    input_1 = input_1 ^ input_2;\n  }\n  if (condition && temp_uint3 <= temp_param) {\n    input_2 = input_2 ^ input_1;\n  }\n  if (temp_param < temp_uint3) {\n    temp_uint5 = -temp_uint5;\n  }\n  if (0x19 < temp_uint5) {\n    return input_1;\n  }\n  temp_uint3 = input_1 & 0xffffff | 0x800000;\n  if ((input_1 & 0x80000000) != 0) {\n    temp_uint3 = -temp_uint3;\n  }\n  temp_uint2 = input_2 & 0xffffff | 0x800000;\n  if ((input_2 & 0x80000000) != 0) {\n    temp_uint2 = -temp_uint2;\n  }\n  if (temp_uint4 == temp_uint5) {\n    temp_uint2 = temp_uint2 ^ 0x800000;\n    if (temp_uint4 == 0) {\n      temp_uint3 = temp_uint3 ^ 0x800000;\n      temp_uint4 = 1;\n    }\n    else {\n      temp_uint5 = temp_uint5 - 1;\n    }\n  }\n  temp_uint3 = temp_uint3 + ((int)temp_uint2 >> (temp_uint5 & 0xff));\n  temp_uint2 = temp_uint2 << (0x20 - temp_uint5 & 0xff);\n  input_1 = temp_uint3 & 0x80000000;\n  if ((int)temp_uint3 < 0) {\n    condition = temp_uint2 != 0;\n    temp_uint2 = -temp_uint2;\n    temp_uint3 = -temp_uint3 - (uint)condition;\n  }\n  if (temp_uint3 < 0x800000) {\n    temp_uint5 = temp_uint2 & 0x80000000;\n    temp_uint2 = temp_uint2 << 1;\n    temp_uint3 = temp_uint3 * 2 + (uint)(temp_uint5 != 0);\n    temp_uint5 = temp_uint4 - 2;\n    if ((temp_uint3 & 0x800000) == 0) {\n      temp_var6 = count_leading_zeroes(temp_uint3);\n      temp_uint4 = temp_var6 - 8;\n      temp_uint3 = temp_uint3 << (temp_uint4 & 0xff);\n      if ((int)temp_uint5 < (int)temp_uint4) {\n        temp_uint3 = temp_uint3 >> (-(temp_uint5 - temp_uint4) & 0xff);\n      }\n      else {\n        temp_uint3 = temp_uint3 + (temp_uint5 - temp_uint4) * 0x800000;\n      }\n      return temp_uint3 | input_1;\n    }\n  }\n  else {\n    temp_uint5 = temp_uint4 - 1;\n    if (0xffffff < temp_uint3) {\n      temp_uint5 = temp_uint3 & 1;\n      temp_uint3 = temp_uint3 >> 1;\n      temp_uint2 = (uint)(temp_uint5 != 0) << 0x1f | temp_uint2 >> 1;\n      temp_uint5 = temp_uint4;\n      if (0xfd < temp_uint4) goto LAB_08000c12;\n    }\n  }\n  temp_uint3 = temp_uint3 + temp_uint5 * 0x800000 + (uint)(0x7fffffff < temp_uint2);\n  if (temp_uint2 == 0x80000000) {\n    temp_uint3 = temp_uint3 & 0xfffffffe;\n  }\n  return temp_uint3 | input_1;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000adc",
            "calling": [
                "FUN_08002ee8",
                "FUN_0800426c",
                "FUN_0800483c",
                "FUN_08002cb0",
                "FUN_08004a84",
                "FUN_08002ec0",
                "FUN_08003330",
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "calculate_result_08000adc"
        },
        "FUN_08000ffc": {
            "renaming": {
                "FUN_08000ffc": "swap_parameters_08000ffc",
                "param_1": "first_param",
                "param_2": "second_param"
            },
            "code": "\nvoid swap_parameters_08000ffc(undefined4 first_param,undefined4 second_param)\n\n{\n  FUN_08001004(second_param,first_param);\n  return;\n}\n\n",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000ffc",
            "calling": [
                "FUN_08001064",
                "FUN_08001050"
            ],
            "imported": false,
            "current_name": "swap_parameters_08000ffc"
        },
        "FUN_080016f4": {
            "renaming": {
                "FUN_080016f4": "check_and_update_flags_080016f4",
                "param_1": "flags_ptr",
                "param_2": "threshold",
                "iVar1": "initialTime",
                "iVar2": "currentTime"
            },
            "code": "\nundefined4 checkAndUpdateFlags_080016f4(int *flags_ptr,uint threshold)\n\n{\n  int initialTime;\n  int currentTime;\n  \n  initialTime = FUN_0800115c();\n  while( true ) {\n    currentTime = *flags_ptr;\n    if ((*(uint *)(currentTime + 0x14) & 0x40) != 0) {\n      return 0;\n    }\n    if (*(int *)(currentTime + 0x14) << 0x1b < 0) break;\n    if ((threshold == 0) || (currentTime = FUN_0800115c(), threshold < (uint)(currentTime - initialTime))) {\n      flags_ptr[0xe] = flags_ptr[0xe] | 0x20;\n      *(undefined *)((int)flags_ptr + 0x35) = 0x20;\n      *(undefined *)(flags_ptr + 0xd) = 0;\n      return 3;\n    }\n  }\n  *(uint *)(currentTime + 0x14) = *(uint *)(currentTime + 0x14) & 0xffffffef;\n  flags_ptr[0xe] = 0;\n  *(undefined *)(flags_ptr + 0xd) = 0;\n  *(undefined *)((int)flags_ptr + 0x35) = 0x20;\n  return 1;\n}\n\n",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080016f4",
            "calling": [
                "FUN_08001938"
            ],
            "imported": false,
            "current_name": "check_and_update_flags_080016f4"
        },
        "FUN_080025a4": {
            "renaming": {
                "FUN_080025a4": "update_register_values_080025a4",
                "param_1": "registerArray",
                "param_2": "inputValues",
                "uVar1": "inputValue2",
                "uVar2": "result",
                "iVar3": "registerBase",
                "uVar4": "inputValue1"
            },
            "code": "\nundefined4 updateRegisterValues_080025a4(int *registerArray,uint *inputValues)\n\n{\n  uint inputValue2;\n  undefined4 result;\n  int registerBase;\n  uint inputValue1;\n  \n  result = 2;\n  if (*(char *)(registerArray + 0xe) != '\\x01') {\n    *(undefined *)((int)registerArray + 0x39) = 2;\n    registerBase = *registerArray;\n    inputValue1 = *inputValues;\n    inputValue2 = inputValues[1];\n    *(uint *)(registerBase + 4) = *(uint *)(registerBase + 4) & 0xffffff8f;\n    *(uint *)(registerBase + 4) = *(uint *)(registerBase + 4) | inputValue1;\n    *(uint *)(registerBase + 8) = *(uint *)(registerBase + 8) & 0xffffff7f;\n    *(uint *)(registerBase + 8) = *(uint *)(registerBase + 8) | inputValue2;\n    *(undefined *)((int)registerArray + 0x39) = 1;\n    result = 0;\n    *(undefined *)(registerArray + 0xe) = 0;\n  }\n  return result;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025a4",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "update_register_values_080025a4"
        },
        "FUN_0800583e": {
            "renaming": {
                "FUN_0800583e": "do_nothing_0800583e"
            },
            "code": "\nvoid do_nothing_0800583e(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583e",
            "calling": [
                "FUN_08005714",
                "FUN_0800567c"
            ],
            "imported": false,
            "current_name": "do_nothing_0800583e"
        },
        "FUN_08002220": {
            "renaming": {
                "FUN_08002220": "calculate_shifted_value_08002220",
                "uVar1": "leading_zeroes_count"
            },
            "code": "\nuint calculate_shifted_value_08002220(void)\n\n{\n  uint leading_zeroes_count;\n  \n  leading_zeroes_count = count_leading_zeroes(0xe00000);\n  return *(uint *)PTR_DAT_0800224c >>\n         PTR_DAT_08002248[(*(uint *)(DAT_08002244 + 4) & 0x700) >> (leading_zeroes_count & 0xff)];\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002220",
            "calling": [
                "FUN_080025e8",
                "FUN_08001754"
            ],
            "imported": false,
            "current_name": "calculate_shifted_value_08002220"
        },
        "FUN_08003034": {
            "renaming": {
                "FUN_08003034": "process_data_08003034",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "local_c": "processed_value"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nuint process_data_08003034(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 processed_value;\n  \n  processed_value = input4;\n  FUN_080040b8(0xee,0,&processed_value,3,PTR_s____Src_MS5611_c_08003064,0x8c,input3);\n  return (uint)CONCAT12((undefined)processed_value,CONCAT11(processed_value._1_1_,processed_value._2_1_));\n}\n\n",
            "called": [
                "FUN_080040b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003034",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "process_data_08003034"
        },
        "FUN_08004e7c": {
            "renaming": {
                "FUN_08004e7c": "configure_hardware_08004e7c",
                "param_1": "hardwareConfig",
                "local_18": "configValue",
                "local_14": "configOption1",
                "local_10": "configOption2",
                "local_c": "configOption3"
            },
            "code": "\nvoid configureHardware_08004e7c(int *hardwareConfig)\n\n{\n  undefined4 configValue;\n  undefined4 configOption1;\n  undefined4 configOption2;\n  undefined4 configOption3;\n  \n  if (*hardwareConfig == DAT_08004edc) {\n    *(uint *)(DAT_08004edc + 0xd818) = *(uint *)(DAT_08004edc + 0xd818) | 0x4000;\n    configValue = 0x200;\n    configOption1 = 2;\n    configOption3 = 3;\n    FUN_08001264(DAT_08004ee0,&configValue);\n    configValue = 0x400;\n    configOption1 = 0;\n    configOption2 = 0;\n    FUN_08001264(DAT_08004ee0,&configValue);\n    FUN_08001194(0x25,0,0);\n    FUN_080011fc(0x25);\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08001264",
                "FUN_080011fc",
                "FUN_08001194"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e7c",
            "calling": [
                "FUN_08002724"
            ],
            "imported": false,
            "current_name": "configure_hardware_08004e7c"
        },
        "FUN_08001530": {
            "renaming": {
                "FUN_08001530": "process_data_08001530",
                "param_1": "data_ptr",
                "param_2": "input_1",
                "param_3": "input_2",
                "param_4": "flag",
                "param_5": "threshold",
                "iVar1": "result_1",
                "iVar2": "result_2",
                "puVar3": "current_data",
                "ppuVar4": "temp_data_ptr",
                "uVar5": "temp_input_1",
                "uVar6": "temp_input_2"
            },
            "code": "\nint processData_08001530(uint **data_ptr,uint input_1,uint input_2,int flag,uint threshold)\n\n{\n  int result_1;\n  int result_2;\n  uint *current_data;\n  uint **temp_data_ptr;\n  uint temp_input_1;\n  uint temp_input_2;\n  \n  **data_ptr = **data_ptr | 0x100;\n  temp_data_ptr = data_ptr;\n  temp_input_1 = input_1;\n  temp_input_2 = input_2;\n  result_1 = FUN_0800115c();\n  do {\n    current_data = *data_ptr;\n    do {\n      if ((int)(current_data[5] << 0x1f) < 0) {\n        current_data[4] = input_1 & 0xfe;\n        result_1 = FUN_08001460(data_ptr,DAT_080015e4,threshold,current_data,temp_data_ptr,temp_input_1,temp_input_2);\n        if (result_1 == 0) {\n          result_1 = FUN_080014e2(data_ptr,threshold,(*data_ptr)[5],(*data_ptr)[6]);\n          if (result_1 == 0) {\n            current_data = *data_ptr;\n            if (flag == 1) {\nLAB_080015ca:\n              current_data[4] = input_2 & 0xff;\n              return result_1;\n            }\n            current_data[4] = input_2 >> 8;\n            result_1 = FUN_080014e2(data_ptr,threshold);\n            if (result_1 == 0) {\n              current_data = *data_ptr;\n              goto LAB_080015ca;\n            }\n          }\n          if (data_ptr[0xe] != (uint *)0x4) {\n            return 3;\n          }\n          **data_ptr = **data_ptr | 0x200;\n        }\n        else if (data_ptr[0xe] != (uint *)0x4) {\n          return 3;\n        }\n        return 1;\n      }\n    } while (threshold == 0xffffffff);\n    if ((threshold == 0) || (result_2 = FUN_0800115c(), threshold < (uint)(result_2 - result_1))) {\n      *(undefined *)((int)data_ptr + 0x35) = 0x20;\n      *(undefined *)(data_ptr + 0xd) = 0;\n      return 3;\n    }\n  } while( true );\n}\n\n",
            "called": [
                "FUN_080014e2",
                "FUN_08001460",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001530",
            "calling": [
                "FUN_08001828"
            ],
            "imported": false,
            "current_name": "process_data_08001530"
        },
        "FUN_08003314": {
            "renaming": {
                "FUN_08003314": "update_global_value_08003314",
                "param_1": "new_value"
            },
            "code": "\nvoid updateGlobalValue_08003314(undefined4 new_value)\n\n{\n  *(undefined4 *)PTR_DAT_0800331c = new_value;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003314",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": false,
            "current_name": "update_global_value_08003314"
        },
        "FUN_08005854": {
            "renaming": {
                "FUN_08005854": "process_data_08005854",
                "param_1": "input_1",
                "param_2": "input_2",
                "puVar1": "ptr_var1",
                "iVar2": "int_var2",
                "puVar3": "ptr_var3",
                "piVar4": "ptr_int_var4",
                "uVar5": "result_1",
                "uVar6": "result_2",
                "local_48": "flag",
                "local_44": "ptr_data",
                "local_40": "local_input_1",
                "uStack_3c": "local_input_2",
                "local_38": "local_input_3",
                "uStack_34": "local_input_4",
                "local_30": "final_result",
                "local_28": "conditional_result"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nundefined8 process_data_08005854(undefined4 input_1,undefined4 input_2)\n\n{\n  undefined *ptr_var1;\n  int int_var2;\n  undefined4 *ptr_var3;\n  int *ptr_int_var4;\n  undefined8 result_1;\n  undefined8 result_2;\n  undefined4 flag;\n  undefined *ptr_data;\n  undefined4 local_input_1;\n  undefined4 local_input_2;\n  undefined4 local_input_3;\n  undefined4 local_input_4;\n  undefined8 final_result;\n  int conditional_result;\n  \n  result_1 = FUN_08005c70();\n  ptr_var1 = PTR_DAT_080058f8;\n  if (*PTR_DAT_080058f8 == -1) {\n    return result_1;\n  }\n  conditional_result = FUN_08000a04(input_1,input_2,input_1,input_2);\n  if (conditional_result != 0) {\n    return result_1;\n  }\n  result_2 = do_nothing_0800708c(input_1,input_2);\n  int_var2 = FUN_080009f0((int)result_2,(int)((ulonglong)result_2 >> 0x20),0,DAT_080058ec);\n  if (int_var2 == 0) {\n    return result_1;\n  }\n  flag = 1;\n  ptr_data = PTR_DAT_080058f0;\n  local_input_1 = input_1;\n  local_input_2 = input_2;\n  local_input_3 = input_1;\n  local_input_4 = input_2;\n  final_result = FUN_080070a4(PTR_DAT_080058f4);\n  if (*ptr_var1 != '\\x02') {\n    int_var2 = FUN_0800709e(&flag);\n    if (int_var2 != 0) goto LAB_080058d0;\n  }\n  ptr_var3 = (undefined4 *)FUN_080072ac();\n  *ptr_var3 = 0x21;\nLAB_080058d0:\n  if (conditional_result != 0) {\n    ptr_int_var4 = (int *)FUN_080072ac();\n    *ptr_int_var4 = conditional_result;\n  }\n  return final_result;\n}\n\n",
            "called": [
                "FUN_080070a4",
                "FUN_080072ac",
                "FUN_080009f0",
                "FUN_0800708c",
                "FUN_08005c70",
                "FUN_08000a04",
                "FUN_0800709e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005854",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "process_data_08005854"
        },
        "FUN_08000168": {
            "renaming": {
                "FUN_08000168": "floating_point_multiplication_08000168",
                "param_1": "mantissa1",
                "param_2": "exponent1",
                "param_3": "mantissa2",
                "param_4": "exponent2",
                "iVar1": "shiftedExponent2",
                "bVar2": "carryBit",
                "uVar3": "tempSum1",
                "uVar4": "tempExponent1",
                "uVar5": "tempSum2",
                "uVar6": "adjustedExponent2",
                "uVar7": "adjustedMantissa2",
                "uVar9": "adjustedExponent1",
                "uVar10": "tempMantissa1",
                "uVar11": "exponentDifference",
                "uVar12": "shiftAmount",
                "iVar8": "shiftedExponent1",
                "bVar13": "isEqualExpMant",
                "bVar14": "isSpecialCase",
                "bVar15": "isShiftWithinLimit"
            },
            "code": "\nulonglong floating_point_multiplication_08000168(uint mantissa1,uint exponent1,uint mantissa2,uint exponent2)\n\n{\n  int shiftedExponent2;\n  byte carryBit;\n  uint tempSum1;\n  uint tempExponent1;\n  uint tempSum2;\n  uint adjustedExponent2;\n  uint adjustedMantissa2;\n  int shiftedExponent1;\n  uint adjustedExponent1;\n  uint tempMantissa1;\n  uint exponentDifference;\n  uint shiftAmount;\n  bool isEqualExpMant;\n  bool isSpecialCase;\n  bool isShiftWithinLimit;\n  \n  adjustedExponent2 = exponent2 ^ 0x80000000;\n  adjustedExponent1 = exponent1 << 1;\n  exponent2 = exponent2 << 1;\n  isEqualExpMant = ((exponent1 ^ adjustedExponent2) & 0x7fffffff) == 0;\n  isSpecialCase = isEqualExpMant && mantissa1 == mantissa2;\n  if (!isEqualExpMant || mantissa1 != mantissa2) {\n    isSpecialCase = (adjustedExponent1 | mantissa1) == 0;\n  }\n  if (!isSpecialCase) {\n    isSpecialCase = (exponent2 | mantissa2) == 0;\n  }\n  shiftedExponent1 = (int)adjustedExponent1 >> 0x15;\n  if (!isSpecialCase) {\n    isSpecialCase = shiftedExponent1 == -1;\n  }\n  shiftedExponent2 = (int)exponent2 >> 0x15;\n  if (!isSpecialCase) {\n    isSpecialCase = shiftedExponent2 == -1;\n  }\n  if (isSpecialCase) {\n    if (shiftedExponent1 == -1 || shiftedExponent2 == -1) {\n      adjustedExponent1 = adjustedExponent2;\n      exponentDifference = mantissa2;\n      if (shiftedExponent1 == -1) {\n        adjustedExponent1 = exponent1;\n        exponentDifference = mantissa1;\n      }\n      if (shiftedExponent1 != -1 || shiftedExponent2 != -1) {\n        mantissa2 = exponentDifference;\n        adjustedExponent2 = adjustedExponent1;\n      }\n      isSpecialCase = (exponentDifference | adjustedExponent1 << 0xc) == 0;\n      if (isSpecialCase) {\n        isSpecialCase = (mantissa2 | adjustedExponent2 << 0xc) == 0;\n      }\n      if (isSpecialCase) {\n        isSpecialCase = adjustedExponent1 == adjustedExponent2;\n      }\n      if (!isSpecialCase) {\n        adjustedExponent1 = adjustedExponent1 | 0x80000;\n      }\n      return CONCAT44(adjustedExponent1,exponentDifference);\n    }\n    if (((exponent1 ^ adjustedExponent2) & 0x7fffffff) != 0 || mantissa1 != mantissa2) {\n      if ((adjustedExponent1 | mantissa1) == 0) {\n        mantissa1 = mantissa2;\n        exponent1 = adjustedExponent2;\n      }\n      return CONCAT44(exponent1,mantissa1);\n    }\n    if (exponent1 != adjustedExponent2) {\n      return 0;\n    }\n    if (adjustedExponent1 >> 0x15 == 0) {\n      isSpecialCase = (mantissa1 & 0x80000000) != 0;\n      adjustedExponent2 = exponent1 * 2 + (uint)isSpecialCase;\n      if (CARRY4(exponent1,exponent1) || CARRY4(exponent1 * 2,(uint)isSpecialCase)) {\n        adjustedExponent2 = adjustedExponent2 | 0x80000000;\n      }\n      return CONCAT44(adjustedExponent2,mantissa1 << 1);\n    }\n    if (adjustedExponent1 < 0xffc00000) {\n      return CONCAT44(exponent1 + 0x100000,mantissa1);\n    }\n    exponent1 = exponent1 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(exponent1 | 0x7ff00000) << 0x20;\n  }\n  adjustedExponent1 = adjustedExponent1 >> 0x15;\n  exponent2 = exponent2 >> 0x15;\n  exponentDifference = exponent2 - adjustedExponent1;\n  isSpecialCase = exponentDifference != 0;\n  if (exponent2 < adjustedExponent1) {\n    exponentDifference = -exponentDifference;\n  }\n  tempMantissa1 = mantissa1;\n  adjustedMantissa2 = exponent1;\n  if (isSpecialCase && adjustedExponent1 <= exponent2) {\n    adjustedExponent1 = adjustedExponent1 + exponentDifference;\n    tempMantissa1 = mantissa2;\n    adjustedMantissa2 = adjustedExponent2;\n    mantissa2 = mantissa1;\n    adjustedExponent2 = exponent1;\n  }\n  if (0x36 < exponentDifference) {\n    return CONCAT44(adjustedMantissa2,tempMantissa1);\n  }\n  tempExponent1 = adjustedMantissa2 & 0xfffff | 0x100000;\n  if ((adjustedMantissa2 & 0x80000000) != 0) {\n    isSpecialCase = tempMantissa1 != 0;\n    tempMantissa1 = -tempMantissa1;\n    tempExponent1 = -tempExponent1 - (uint)isSpecialCase;\n  }\n  adjustedMantissa2 = adjustedExponent2 & 0xfffff | 0x100000;\n  if ((adjustedExponent2 & 0x80000000) != 0) {\n    isSpecialCase = mantissa2 != 0;\n    mantissa2 = -mantissa2;\n    adjustedMantissa2 = -adjustedMantissa2 - (uint)isSpecialCase;\n  }\n  if (adjustedExponent1 == exponentDifference) {\n    adjustedMantissa2 = adjustedMantissa2 ^ 0x100000;\n    if (adjustedExponent1 == 0) {\n      tempExponent1 = tempExponent1 ^ 0x100000;\n      adjustedExponent1 = 1;\n    }\n    else {\n      exponentDifference = exponentDifference - 1;\n    }\n  }\n  adjustedExponent2 = -exponentDifference + 0x20;\n  if ((int)exponentDifference < 0x21) {\n    shiftAmount = mantissa2 << (adjustedExponent2 & 0xff);\n    mantissa2 = mantissa2 >> (exponentDifference & 0xff);\n    tempSum1 = tempMantissa1 + mantissa2;\n    tempSum2 = adjustedMantissa2 << (adjustedExponent2 & 0xff);\n    adjustedExponent2 = tempSum1 + tempSum2;\n    tempExponent1 = tempExponent1 + CARRY4(tempMantissa1,mantissa2) + ((int)adjustedMantissa2 >> (exponentDifference & 0xff)) +\n            (uint)CARRY4(tempSum1,tempSum2);\n  }\n  else {\n    shiftAmount = adjustedMantissa2 << (-exponentDifference + 0x40 & 0xff);\n    if (mantissa2 != 0) {\n      shiftAmount = shiftAmount | 2;\n    }\n    adjustedMantissa2 = (int)adjustedMantissa2 >> (exponentDifference - 0x20 & 0xff);\n    adjustedExponent2 = tempMantissa1 + adjustedMantissa2;\n    tempExponent1 = tempExponent1 + ((int)adjustedMantissa2 >> 0x1f) + (uint)CARRY4(tempMantissa1,adjustedMantissa2);\n  }\n  exponent1 = tempExponent1 & 0x80000000;\n  exponentDifference = tempExponent1;\n  if ((int)tempExponent1 < 0) {\n    isSpecialCase = shiftAmount == 0;\n    shiftAmount = -shiftAmount;\n    exponentDifference = -adjustedExponent2;\n    adjustedExponent2 = -(uint)!isSpecialCase - adjustedExponent2;\n    exponentDifference = -(uint)(isSpecialCase <= exponentDifference) - tempExponent1;\n  }\n  if (0xfffff < exponentDifference) {\n    tempMantissa1 = adjustedExponent1 - 1;\n    if (0x1fffff < exponentDifference) {\n      tempMantissa1 = exponentDifference & 1;\n      exponentDifference = exponentDifference >> 1;\n      carryBit = (byte)adjustedExponent2;\n      adjustedExponent2 = (uint)(tempMantissa1 != 0) << 0x1f | adjustedExponent2 >> 1;\n      shiftAmount = (uint)(carryBit & 1) << 0x1f | shiftAmount >> 1;\n      tempMantissa1 = adjustedExponent1;\n      if (0xffbfffff < adjustedExponent1 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    isSpecialCase = 0x7fffffff < shiftAmount;\n    if (shiftAmount == 0x80000000) {\n      isSpecialCase = (adjustedExponent2 & 1) != 0;\n    }\n    return CONCAT44(exponentDifference + tempMantissa1 * 0x100000 + (uint)CARRY4(adjustedExponent2,(uint)isSpecialCase) | exponent1,\n                    adjustedExponent2 + isSpecialCase);\n  }\n  isEqualExpMant = (shiftAmount & 0x80000000) != 0;\n  shiftAmount = shiftAmount << 1;\n  tempMantissa1 = adjustedExponent2 * 2;\n  isSpecialCase = CARRY4(adjustedExponent2,adjustedExponent2);\n  adjustedExponent2 = adjustedExponent2 * 2 + (uint)isEqualExpMant;\n  exponentDifference = exponentDifference * 2 + (uint)(isSpecialCase || CARRY4(tempMantissa1,(uint)isEqualExpMant));\n  tempMantissa1 = adjustedExponent1 - 2;\n  if ((exponentDifference & 0x100000) != 0) goto LAB_08000278;\n  adjustedMantissa2 = adjustedExponent2;\n  adjustedExponent1 = exponentDifference;\n  if (exponentDifference == 0) {\n    adjustedMantissa2 = 0;\n    adjustedExponent1 = adjustedExponent2;\n  }\n  shiftedExponent1 = count_leading_zeroes(adjustedExponent1);\n  if (exponentDifference == 0) {\n    shiftedExponent1 = shiftedExponent1 + 0x20;\n  }\n  exponentDifference = shiftedExponent1 - 0xb;\n  isShiftWithinLimit = SBORROW4(exponentDifference,0x20);\n  adjustedExponent2 = shiftedExponent1 - 0x2b;\n  isSpecialCase = (int)adjustedExponent2 < 0;\n  isEqualExpMant = adjustedExponent2 == 0;\n  if ((int)exponentDifference < 0x20) {\n    isShiftWithinLimit = SCARRY4(adjustedExponent2,0xc);\n    shiftedExponent1 = shiftedExponent1 + -0x1f;\n    isSpecialCase = shiftedExponent1 < 0;\n    isEqualExpMant = shiftedExponent1 == 0;\n    adjustedExponent2 = exponentDifference;\n    if (!isEqualExpMant && isSpecialCase == isShiftWithinLimit) {\n      adjustedMantissa2 = adjustedExponent1 << (exponentDifference & 0xff);\n      adjustedExponent1 = adjustedExponent1 >> (0xcU - shiftedExponent1 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (isEqualExpMant || isSpecialCase != isShiftWithinLimit) {\n    shiftAmount = 0x20 - adjustedExponent2;\n  }\n  adjustedExponent1 = adjustedExponent1 << (adjustedExponent2 & 0xff);\n  if (isEqualExpMant || isSpecialCase != isShiftWithinLimit) {\n    adjustedExponent1 = adjustedExponent1 | adjustedMantissa2 >> (shiftAmount & 0xff);\n  }\n  if (isEqualExpMant || isSpecialCase != isShiftWithinLimit) {\n    adjustedMantissa2 = adjustedMantissa2 << (adjustedExponent2 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)exponentDifference <= (int)tempMantissa1) {\n    return CONCAT44(adjustedExponent1 + (tempMantissa1 - exponentDifference) * 0x100000 | exponent1,adjustedMantissa2);\n  }\n  adjustedExponent2 = ~(tempMantissa1 - exponentDifference);\n  if ((int)adjustedExponent2 < 0x1f) {\n    shiftedExponent1 = adjustedExponent2 - 0x13;\n    if (shiftedExponent1 != 0 && shiftedExponent1 < 0 == SCARRY4(adjustedExponent2 - 0x1f,0xc)) {\n      return CONCAT44(tempExponent1,adjustedMantissa2 >> (0x20 - (0xcU - shiftedExponent1) & 0xff) | adjustedExponent1 << (0xcU - shiftedExponent1 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    adjustedExponent2 = adjustedExponent2 + 1;\n    return CONCAT44(exponent1 | adjustedExponent1 >> (adjustedExponent2 & 0xff),\n                    adjustedMantissa2 >> (adjustedExponent2 & 0xff) | adjustedExponent1 << (0x20 - adjustedExponent2 & 0xff));\n  }\n  return CONCAT44(tempExponent1,adjustedExponent1 >> (adjustedExponent2 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000168",
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08006228",
                "FUN_080070b0",
                "FUN_08006c0c",
                "FUN_0800411c",
                "FUN_08006070"
            ],
            "imported": false,
            "current_name": "floating_point_multiplication_08000168"
        },
        "FUN_080072e0": {
            "renaming": {
                "FUN_080072e0": "do_nothing_080072e0"
            },
            "code": "\nvoid do_nothing_080072e0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072e0",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_080072e0"
        },
        "FUN_08001014": {
            "renaming": {
                "FUN_08001014": "check_non_zero_result_08001014",
                "in_ZR": "inputChar"
            },
            "code": "\nbool checkNonZeroResult_08001014(void)\n\n{\n  char inputChar;\n  \n  FUN_08001004();\n  return inputChar != '\\0';\n}\n\n",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001014",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "check_non_zero_result_08001014"
        },
        "FUN_080071c0": {
            "renaming": {
                "FUN_080071c0": "calculate_result_080071c0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "exponent",
                "param_4": "undefined_param",
                "uVar1": "shifted_input2",
                "iVar2": "updated_exponent",
                "uVar3": "temp_var1",
                "uVar4": "temp_var2",
                "uVar5": "upper_input",
                "uVar6": "result"
            },
            "code": "\nulonglong calculate_result_080071c0(uint input1,uint input2,int exponent,undefined4 undefined_param)\n\n{\n  uint shifted_input2;\n  int updated_exponent;\n  undefined4 temp_var1;\n  undefined4 temp_var2;\n  uint upper_input;\n  ulonglong result;\n  \n  result = CONCAT44(input2,input1);\n  shifted_input2 = (input2 << 1) >> 0x15;\n  if (shifted_input2 == 0) {\n    if ((input2 & 0x7fffffff | input1) == 0) {\n      return result;\n    }\n    result = FUN_080004d0(input1,input2,0,DAT_08007290);\n    temp_var1 = DAT_08007280;\n    temp_var2 = DAT_08007284;\n    if (exponent < DAT_08007294) goto LAB_0800722e;\n    shifted_input2 = ((uint)((int)(result >> 0x20) << 1) >> 0x15) - 0x36;\n  }\n  else if (shifted_input2 == 0x7ff) {\n    result = FUN_0800016c(input1,input2,input1,input2,undefined_param);\n    return result;\n  }\n  upper_input = (uint)(result >> 0x20);\n  updated_exponent = shifted_input2 + exponent;\n  if (updated_exponent < 0x7ff) {\n    if (0 < updated_exponent) {\n      return result & 0xffffffff | (ulonglong)(upper_input & 0x800fffff | updated_exponent * 0x100000) << 0x20;\n    }\n    if (updated_exponent + 0x35 < 0 == SCARRY4(updated_exponent,0x35)) {\n      result = result & 0xffffffff |\n              (ulonglong)(upper_input & 0x800fffff | (updated_exponent + 0x36) * 0x100000) << 0x20;\n      temp_var1 = 0;\n      temp_var2 = DAT_08007298;\n      goto LAB_0800722e;\n    }\n    if (exponent < 0xc351) {\n      result = do_nothing_0800729c(DAT_08007280,DAT_08007284,(int)result,upper_input);\n      temp_var1 = DAT_08007280;\n      temp_var2 = DAT_08007284;\n      goto LAB_0800722e;\n    }\n  }\n  result = do_nothing_0800729c(DAT_08007288,DAT_0800728c,(int)result,upper_input);\n  temp_var1 = DAT_08007288;\n  temp_var2 = DAT_0800728c;\nLAB_0800722e:\n  result = FUN_080004d0((int)result,(int)(result >> 0x20),temp_var1,temp_var2);\n  return result;\n}\n\n",
            "called": [
                "FUN_080004d0",
                "FUN_0800729c",
                "FUN_0800016c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080071c0",
            "calling": [
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "calculate_result_080071c0"
        },
        "FUN_08001258": {
            "renaming": {
                "FUN_08001258": "do_nothing_08001258"
            },
            "code": "\nvoid do_nothing_08001258(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001258",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_08001258"
        },
        "FUN_08005614": {
            "renaming": {
                "FUN_08005614": "find_char_in_range_08005614",
                "param_1": "string",
                "param_2": "target_char",
                "param_3": "range_length",
                "pcVar1": "current_char_ptr",
                "pcVar2": "temp_char_ptr"
            },
            "code": "\nchar * find_char_in_range_08005614(char *string,char target_char,int range_length)\n\n{\n  char *current_char_ptr;\n  char *temp_char_ptr;\n  \n  current_char_ptr = string;\n  do {\n    temp_char_ptr = current_char_ptr;\n    if (temp_char_ptr == string + range_length) {\n      return (char *)0x0;\n    }\n    current_char_ptr = temp_char_ptr + 1;\n  } while (*temp_char_ptr != target_char);\n  return temp_char_ptr;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005614",
            "calling": [
                "FUN_080053d4",
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "find_char_in_range_08005614"
        },
        "FUN_08000724": {
            "renaming": {
                "FUN_08000724": "multiply_doubles_08000724",
                "param_1": "double1_low",
                "param_2": "double1_high",
                "param_3": "double2_low",
                "param_4": "double2_high",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "result_high",
                "uVar9": "result_low",
                "uVar10": "temp10",
                "uVar11": "temp11",
                "uVar12": "temp12",
                "uVar13": "temp13",
                "uVar17": "double_product",
                "unaff_r5": "double2_exponent",
                "iVar8": "exponent_diff",
                "bVar14": "flag1",
                "bVar15": "flag2",
                "bVar16": "flag3"
            },
            "code": "\nulonglong multiply_doubles_08000724(undefined4 double1_low,uint double1_high,uint double2_low,uint double2_high)\n\n{\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint result_high;\n  int exponent_diff;\n  uint result_low;\n  uint double2_exponent;\n  uint temp10;\n  uint temp11;\n  uint temp12;\n  uint temp13;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  ulonglong double_product;\n  \n  double_product = CONCAT44(double1_high,double1_low);\n  temp13 = 0x7ff;\n  result_high = double1_high >> 0x14 & 0x7ff;\n  flag1 = result_high == 0;\n  if (!flag1) {\n    double2_exponent = double2_high >> 0x14 & 0x7ff;\n    flag1 = double2_exponent == 0;\n  }\n  if (!flag1) {\n    flag1 = result_high == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = double2_exponent == 0x7ff;\n  }\n  if (flag1) {\n    double_product = FUN_08000892();\n  }\n  result_low = (uint)(double_product >> 0x20);\n  temp11 = (uint)double_product;\n  exponent_diff = result_high - double2_exponent;\n  if ((double2_low | double2_high << 0xc) == 0) {\n    result_high = (result_low ^ double2_high) & 0x80000000 | result_low & 0xfffff;\n    flag3 = SCARRY4(exponent_diff,temp13 >> 1);\n    result_low = exponent_diff + (temp13 >> 1);\n    flag1 = (int)result_low < 0;\n    flag2 = result_low == 0;\n    if (!flag2 && flag1 == flag3) {\n      flag3 = SBORROW4(temp13,result_low);\n      flag1 = (int)(temp13 - result_low) < 0;\n      flag2 = temp13 == result_low;\n    }\n    if (!flag2 && flag1 == flag3) {\n      result_high = result_high | result_low * 0x100000;\n    }\n    if (!flag2 && flag1 == flag3) {\n      return double_product & 0xffffffff | (ulonglong)result_high << 0x20;\n    }\n    result_high = result_high | 0x100000;\n    temp13 = 0;\n    flag2 = SBORROW4(result_low,1);\n    result_low = result_low - 1;\n    flag1 = result_low == 0;\n    temp3 = result_low;\n  }\n  else {\n    temp3 = (double2_high << 0xc) >> 4 | 0x10000000 | double2_low >> 0x18;\n    temp13 = double2_low << 8;\n    temp10 = (result_low << 0xc) >> 4 | 0x10000000 | temp11 >> 0x18;\n    temp11 = temp11 * 0x100;\n    result_high = (result_low ^ double2_high) & 0x80000000;\n    flag1 = temp3 <= temp10;\n    if (temp10 == temp3) {\n      flag1 = temp13 <= temp11;\n    }\n    exponent_diff = exponent_diff + (uint)flag1;\n    result_low = exponent_diff + 0x3fd;\n    if (flag1 == false) {\n      temp3 = temp3 >> 1;\n      temp13 = (uint)((double2_low >> 0x18 & 1) != 0) << 0x1f | temp13 >> 1;\n    }\n    temp12 = temp11 - temp13;\n    temp10 = (temp10 - temp3) - (uint)(temp11 < temp13);\n    temp4 = temp3 >> 1;\n    temp1 = (uint)((temp3 & 1) != 0) << 0x1f | temp13 >> 1;\n    temp11 = 0x100000;\n    temp3 = 0x80000;\n    while( true ) {\n      flag1 = temp1 <= temp12;\n      if (temp4 < temp10 || temp10 - temp4 < (uint)flag1) {\n        temp12 = temp12 - temp1;\n        temp11 = temp11 | temp3;\n        temp10 = (temp10 - temp4) - (uint)!flag1;\n      }\n      temp5 = temp4 >> 1;\n      temp1 = (uint)((temp4 & 1) != 0) << 0x1f | temp1 >> 1;\n      flag2 = temp1 <= temp12;\n      flag1 = temp10 - temp5 < (uint)flag2;\n      temp13 = temp10;\n      if (temp5 < temp10 || flag1) {\n        temp12 = temp12 - temp1;\n        temp13 = (temp10 - temp5) - (uint)!flag2;\n      }\n      if (temp5 < temp10 || flag1) {\n        temp11 = temp11 | temp3 >> 1;\n      }\n      temp10 = temp4 >> 2;\n      temp2 = (uint)((temp5 & 1) != 0) << 0x1f | temp1 >> 1;\n      flag2 = temp2 <= temp12;\n      flag1 = temp13 - temp10 < (uint)flag2;\n      temp5 = temp13;\n      if (temp10 < temp13 || flag1) {\n        temp12 = temp12 - temp2;\n        temp5 = (temp13 - temp10) - (uint)!flag2;\n      }\n      if (temp10 < temp13 || flag1) {\n        temp11 = temp11 | temp3 >> 2;\n      }\n      temp6 = temp4 >> 3;\n      temp1 = (uint)((temp10 & 1) != 0) << 0x1f | temp2 >> 1;\n      flag2 = temp1 <= temp12;\n      flag1 = temp5 - temp6 < (uint)flag2;\n      temp10 = temp5;\n      if (temp6 < temp5 || flag1) {\n        temp12 = temp12 - temp1;\n        temp10 = (temp5 - temp6) - (uint)!flag2;\n      }\n      if (temp6 < temp5 || flag1) {\n        temp11 = temp11 | temp3 >> 3;\n      }\n      temp13 = temp10 | temp12;\n      if (temp13 == 0) break;\n      temp10 = temp10 << 4 | temp12 >> 0x1c;\n      temp12 = temp12 << 4;\n      temp4 = temp4 & 0xfffffff8 | temp1 >> 0x1d;\n      temp1 = (temp2 >> 1) << 3;\n      temp3 = temp3 >> 4;\n      if (temp3 == 0) {\n        temp6 = temp4;\n        if ((result_high & 0x100000) != 0) goto LAB_08000842;\n        result_high = result_high | temp11;\n        temp11 = 0;\n        temp3 = 0x80000000;\n      }\n    }\n    if ((result_high & 0x100000) == 0) {\n      result_high = result_high | temp11;\n      temp11 = 0;\n    }\nLAB_08000842:\n    flag3 = 0xfc < result_low;\n    flag2 = SBORROW4(result_low,0xfd);\n    temp4 = exponent_diff + 0x300;\n    flag1 = temp4 == 0;\n    temp3 = temp4;\n    if (flag3 && !flag1) {\n      flag3 = 0x6ff < temp4;\n      flag2 = SBORROW4(temp4,0x700);\n      temp3 = exponent_diff - 0x400;\n      flag1 = temp4 == 0x700;\n    }\n    if (!flag3 || flag1) {\n      flag1 = temp6 <= temp10;\n      if (temp10 == temp6) {\n        flag1 = temp1 <= temp12;\n      }\n      if (temp10 == temp6 && temp12 == temp1) {\n        flag1 = (temp11 & 1) != 0;\n      }\n      return CONCAT44(result_high + result_low * 0x100000 + (uint)CARRY4(temp11,(uint)flag1),temp11 + flag1);\n    }\n  }\n  if (!flag1 && (int)temp3 < 0 == flag2) {\n    return (ulonglong)(result_high & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag3 = SCARRY4(result_low,0x36);\n  flag1 = (int)(result_low + 0x36) < 0;\n  flag2 = result_low == 0xffffffca;\n  if (flag2 || flag1 != flag3) {\n    temp11 = 0;\n  }\n  if (flag2 || flag1 != flag3) {\n    result_high = result_high & 0x80000000;\n  }\n  if (flag2 || flag1 != flag3) {\n    return CONCAT44(result_high,temp11);\n  }\n  temp3 = -result_low;\n  temp10 = temp3 - 0x20;\n  if (0x1f < (int)temp3) {\n    temp3 = temp11 >> (temp10 & 0xff) | result_high << (0x20 - temp10 & 0xff);\n    result_low = (result_high >> (temp10 & 0xff) & ~((result_high & 0x80000000) >> (temp10 & 0xff))) -\n            ((int)temp3 >> 0x1f);\n    if ((temp13 | temp11 << (0x20 - temp10 & 0xff) | temp3 << 1) == 0) {\n      result_low = result_low & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44(result_high,result_low) & 0x80000000ffffffff;\n  }\n  exponent_diff = temp3 - 0x14;\n  if (exponent_diff != 0 && exponent_diff < 0 == SCARRY4(temp10,0xc)) {\n    result_low = 0xc - exponent_diff;\n    temp3 = temp11 << (result_low & 0xff);\n    temp11 = temp11 >> (0x20 - result_low & 0xff) | result_high << (result_low & 0xff);\n    result_low = temp11 + -((int)temp3 >> 0x1f);\n    if ((temp13 | temp3 << 1) == 0) {\n      result_low = result_low & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44((result_high & 0x80000000) + (uint)CARRY4(temp11,-((int)temp3 >> 0x1f)),result_low);\n  }\n  temp10 = temp11 << (result_low + 0x20 & 0xff);\n  temp11 = temp11 >> (temp3 & 0xff) | result_high << (result_low + 0x20 & 0xff);\n  result_low = temp11 + -((int)temp10 >> 0x1f);\n  if ((temp13 | temp10 << 1) == 0) {\n    result_low = result_low & ~(temp10 >> 0x1f);\n  }\n  return CONCAT44((result_high & 0x80000000) +\n                  ((result_high & 0x7fffffff) >> (temp3 & 0xff)) +\n                  (uint)CARRY4(temp11,-((int)temp10 >> 0x1f)),result_low);\n}\n\n",
            "called": [
                "FUN_08000892"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000724",
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08006228",
                "FUN_08005900",
                "FUN_08006c0c",
                "FUN_08003330",
                "FUN_08005bc8",
                "FUN_08006070"
            ],
            "imported": false,
            "current_name": "multiply_doubles_08000724"
        },
        "FUN_080070a4": {
            "renaming": {
                "FUN_080070a4": "shift_dat_value_080070a4"
            },
            "code": "\nlonglong shift_dat_value_080070a4(void)\n\n{\n  return (ulonglong)DAT_080070ac << 0x20;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080070a4",
            "calling": [
                "FUN_08006228",
                "FUN_08005854"
            ],
            "imported": false,
            "current_name": "shift_dat_value_080070a4"
        },
        "FUN_0800407c": {
            "renaming": {
                "FUN_0800407c": "process_data_0800407c",
                "param_1": "inputData1",
                "param_2": "inputData2",
                "param_3": "outputData1",
                "param_4": "outputData2",
                "iVar1": "result",
                "local_14": "processedData"
            },
            "code": "\nundefined processData_0800407c(undefined4 inputData1,undefined4 inputData2,undefined4 outputData1,undefined4 outputData2)\n\n{\n  int result;\n  undefined processedData [8];\n  \n  processedData[0] = 0;\n  result = FUN_08001938(PTR_DAT_080040b4,inputData1,inputData2,1,processedData,1,200);\n  if (result != 0) {\n    FUN_08004490(outputData1,outputData2);\n  }\n  return processedData[0];\n}\n\n",
            "called": [
                "FUN_08001938",
                "FUN_08004490"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800407c",
            "calling": [
                "FUN_080040e8",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_08002ad0"
            ],
            "imported": false,
            "current_name": "process_data_0800407c"
        },
        "FUN_08001938": {
            "renaming": {
                "FUN_08001938": "improved_communication_08001938",
                "param_1": "device",
                "param_2": "config1",
                "param_3": "config2",
                "param_4": "config3",
                "param_5": "buffer",
                "param_6": "bufferSize",
                "param_7": "timeout",
                "puVar1": "tempBuffer",
                "iVar2": "startTime",
                "iVar3": "currentTime",
                "puVar4": "deviceRegister",
                "uVar5": "registerValue",
                "puVar6": "nextBuffer",
                "bVar7": "isDoubleByte"
            },
            "code": "\nundefined4\nimprovedCommunication_08001938(uint **device,undefined4 config1,undefined4 config2,undefined4 config3,\n            undefined *buffer,ushort bufferSize,uint timeout)\n\n{\n  undefined *tempBuffer;\n  int startTime;\n  int currentTime;\n  uint *deviceRegister;\n  uint registerValue;\n  undefined *nextBuffer;\n  bool isDoubleByte;\n  \n  if (*(char *)((int)device + 0x35) != ' ') {\n    return 2;\n  }\n  if (buffer == (undefined *)0x0) {\n    return 1;\n  }\n  if (bufferSize == 0) {\n    return 1;\n  }\n  startTime = FUN_0800115c();\n  while (deviceRegister = *device, (~deviceRegister[6] & 2) == 0) {\n    currentTime = FUN_0800115c();\n    if (10000 < (uint)(currentTime - startTime)) {\n      *(undefined *)(device + 0xd) = 0;\n      *(undefined *)((int)device + 0x35) = 0x20;\n      return 2;\n    }\n  }\n  if (*(char *)(device + 0xd) == '\\x01') {\n    return 2;\n  }\n  registerValue = *deviceRegister;\n  *(undefined *)(device + 0xd) = 1;\n  *deviceRegister = registerValue & 0xfffff7ff;\n  *(undefined *)((int)device + 0x35) = 0x22;\n  *(undefined *)((int)device + 0x36) = 0x40;\n  device[0xe] = (uint *)0x0;\n  startTime = FUN_080015e8(device,config1,config2,config3,timeout);\n  if (startTime != 0) {\n    *(undefined *)(device + 0xd) = 0;\n    if (device[0xe] == (uint *)0x4) {\n      return 1;\n    }\n    return 3;\n  }\n  deviceRegister = *device;\n  registerValue = *deviceRegister;\n  if (bufferSize == 1) {\n    *deviceRegister = registerValue & 0xfffffbff;\n    disableIRQinterrupts();\n    **device = **device | 0x200;\n    enableIRQinterrupts();\n    startTime = FUN_080016f4(device,timeout);\n    if (startTime == 0) {\n      *buffer = (char)(*device)[4];\nLAB_08001ab8:\n      *(undefined *)((int)device + 0x35) = 0x20;\n      *(undefined *)((int)device + 0x36) = 0;\n      *(undefined *)(device + 0xd) = 0;\n      return 0;\n    }\nLAB_08001a18:\n    if (device[0xe] != (uint *)0x20) {\n      return 1;\n    }\n    return 3;\n  }\n  if (bufferSize == 2) {\n    *deviceRegister = registerValue | 0x800;\n    disableIRQinterrupts();\n    **device = **device & 0xfffffbff;\n    enableIRQinterrupts();\n  }\n  else {\n    *deviceRegister = registerValue | 0x400;\n    while (3 < bufferSize) {\n      startTime = FUN_080016f4(device,timeout);\n      if (startTime != 0) goto LAB_08001a18;\n      *buffer = (char)(*device)[4];\n      deviceRegister = *device;\n      isDoubleByte = (int)(deviceRegister[5] << 0x1d) < 0;\n      if (isDoubleByte) {\n        deviceRegister = (uint *)deviceRegister[4];\n        nextBuffer = buffer + 2;\n        bufferSize = bufferSize - 2;\n      }\n      else {\n        nextBuffer = buffer + 1;\n        bufferSize = bufferSize - 1;\n      }\n      tempBuffer = buffer + 1;\n      buffer = nextBuffer;\n      if (isDoubleByte) {\n        *tempBuffer = (char)deviceRegister;\n      }\n    }\n    if (bufferSize != 2) {\n      startTime = FUN_0800115c();\n      do {\n        deviceRegister = *device;\n        do {\n          if ((int)(deviceRegister[5] << 0x1d) < 0) {\n            *deviceRegister = *deviceRegister & 0xfffffbff;\n            disableIRQinterrupts();\n            *buffer = (char)(*device)[4];\n            startTime = FUN_0800115c();\n            goto LAB_08001b3a;\n          }\n        } while (timeout == 0xffffffff);\n      } while ((timeout != 0) && (currentTime = FUN_0800115c(), (uint)(currentTime - startTime) <= timeout));\n      goto LAB_08001afa;\n    }\n  }\n  startTime = FUN_0800115c();\n  do {\n    do {\n      if ((int)((*device)[5] << 0x1d) < 0) {\n        disableIRQinterrupts();\n        deviceRegister = *device;\n        *deviceRegister = *deviceRegister | 0x200;\n        *buffer = (char)deviceRegister[4];\n        enableIRQinterrupts();\n        buffer[1] = (char)(*device)[4];\n        goto LAB_08001ab8;\n      }\n    } while (timeout == 0xffffffff);\n  } while ((timeout != 0) && (currentTime = FUN_0800115c(), (uint)(currentTime - startTime) <= timeout));\nLAB_08001afa:\n  *(undefined *)((int)device + 0x35) = 0x20;\n  *(undefined *)(device + 0xd) = 0;\n  return 3;\nLAB_08001b3a:\n  do {\n    deviceRegister = *device;\n    do {\n      if ((int)(deviceRegister[5] << 0x1d) < 0) {\n        *deviceRegister = *deviceRegister | 0x200;\n        buffer[1] = (char)deviceRegister[4];\n        enableIRQinterrupts();\n        buffer[2] = (char)(*device)[4];\n        goto LAB_08001ab8;\n      }\n    } while (timeout == 0xffffffff);\n  } while ((timeout != 0) && (currentTime = FUN_0800115c(), (uint)(currentTime - startTime) <= timeout));\n  goto LAB_08001afa;\n}\n\n",
            "called": [
                "FUN_080015e8",
                "FUN_080016f4",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001938",
            "calling": [
                "FUN_0800407c",
                "FUN_080040b8"
            ],
            "imported": false,
            "current_name": "improved_communication_08001938"
        },
        "FUN_0800411c": {
            "renaming": {
                "FUN_0800411c": "main_process_0800411c",
                "puVar1": "tempPtr1",
                "bVar2": "byteVar",
                "lVar3": "longVar",
                "uVar4": "uintVar1",
                "puVar5": "ptrVar1",
                "puVar6": "ptrVar2",
                "puVar7": "ptrVar3",
                "uVar8": "uintVar2",
                "uVar9": "uintVar3",
                "uVar10": "uintVar4",
                "uVar11": "uintVar5",
                "iVar12": "intVar1",
                "uVar13": "uintVar6",
                "uVar14": "uintVar7",
                "uVar15": "uintVar8",
                "uVar16": "uintVar9",
                "uVar17": "uintVar10",
                "puVar18": "tempPtr2",
                "unaff_r4": "unaffectedReg",
                "iVar19": "intVar2",
                "iVar20": "intVar3",
                "bVar21": "boolVar",
                "uVar22": "ulongVar"
            },
            "code": "\nvoid mainProcess_0800411c(void)\n\n{\n  undefined4 *tempPtr1;\n  byte byteVar;\n  longlong longVar;\n  uint uintVar1;\n  undefined *ptrVar1;\n  undefined *ptrVar2;\n  undefined *ptrVar3;\n  uint uintVar2;\n  uint uintVar3;\n  undefined4 uintVar4;\n  undefined4 uintVar5;\n  int intVar1;\n  undefined4 uintVar6;\n  uint uintVar7;\n  uint uintVar8;\n  uint uintVar9;\n  uint uintVar10;\n  undefined4 *tempPtr2;\n  undefined4 unaffectedReg;\n  int intVar2;\n  int intVar3;\n  bool boolVar;\n  undefined8 ulongVar;\n  \n  intVar1 = thunk_FUN_0800115c();\n  ptrVar1 = PTR_DAT_08004188;\n  if (1 < (uint)(intVar1 - *(int *)PTR_DAT_08004188)) {\n    uintVar6 = thunk_FUN_0800115c();\n    *(undefined4 *)ptrVar1 = uintVar6;\n    FUN_08002f28();\n  }\n  intVar1 = thunk_FUN_0800115c();\n  ptrVar1 = PTR_DAT_0800418c;\n  if (2 < (uint)(intVar1 - *(int *)PTR_DAT_0800418c)) {\n    uintVar6 = thunk_FUN_0800115c();\n    *(undefined4 *)ptrVar1 = uintVar6;\n    FUN_08004a84();\n  }\n  intVar1 = thunk_FUN_0800115c();\n  ptrVar1 = PTR_DAT_08004190;\n  if (3 < (uint)(intVar1 - *(int *)PTR_DAT_08004190)) {\n    uintVar6 = thunk_FUN_0800115c();\n    *(undefined4 *)ptrVar1 = uintVar6;\n    FUN_08004348();\n    FUN_08004384();\n    FUN_080043f0();\n    FUN_08004410();\n    FUN_08004434();\n    FUN_080043bc();\n    FUN_08004458();\n  }\n  ptrVar2 = PTR_DAT_08003254;\n  ptrVar1 = PTR_DAT_08003250;\n  if ((*PTR_DAT_08003250 != '\\0') && (*PTR_DAT_08003254 != '\\0')) {\n    intVar3 = *(int *)PTR_DAT_0800325c + (uint)*(ushort *)(PTR_DAT_08003258 + 10) * -0x100;\n    uintVar7 = (uint)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 0xc) * (longlong)intVar3) >>\n             0x17 | (int)((ulonglong)\n                          ((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 0xc) *\n                          (longlong)intVar3) >> 0x20) << 9;\n    uintVar8 = (uint)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 8) * (longlong)intVar3 >> 7);\n    uintVar9 = uintVar8 + (uint)*(ushort *)(PTR_DAT_08003258 + 4) * 0x10000;\n    uintVar2 = (uint)((ulonglong)\n                   ((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 6) * (longlong)intVar3) >> 8)\n    ;\n    intVar1 = uintVar7 + 2000;\n    uintVar3 = uintVar2 + (uint)*(ushort *)(PTR_DAT_08003258 + 2) * 0x8000;\n    boolVar = (int)uintVar7 < 0;\n    if (1999 < intVar1) {\n      uintVar7 = 0;\n    }\n    uintVar1 = uintVar7;\n    if (boolVar != SBORROW4(intVar1,2000)) {\n      intVar2 = uintVar7 * uintVar7 * 5;\n      uintVar7 = intVar2 >> 2;\n      uintVar1 = intVar2 >> 1;\n    }\n    uintVar10 = uintVar9 - uintVar1;\n    longVar = (ulonglong)(uintVar3 - uintVar7) * (ulonglong)*(uint *)PTR_DAT_08003260;\n    intVar2 = *(uint *)PTR_DAT_08003260 *\n             ((((int)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 6) * (longlong)intVar3 >>\n                     0x28) + (uint)CARRY4(uintVar2,(uint)*(ushort *)(PTR_DAT_08003258 + 2) * 0x8000)) -\n              ((int)uintVar7 >> 0x1f)) - (uint)(uintVar3 < uintVar7)) + (int)((ulonglong)longVar >> 0x20);\n    uintVar2 = (uint)longVar >> 0x15 | intVar2 * 0x800;\n    uintVar6 = FUN_08000c44(uintVar2 - uintVar10 >> 0xf |\n                          (((intVar2 >> 0x15) -\n                           ((((int)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 8) *\n                                    (longlong)intVar3 >> 0x27) +\n                             (uint)CARRY4(uintVar8,(uint)*(ushort *)(PTR_DAT_08003258 + 4) * 0x10000))\n                            - ((int)uintVar1 >> 0x1f)) - (uint)(uintVar9 < uintVar1))) -\n                          (uint)(uintVar2 < uintVar10)) * 0x20000);\n    uintVar4 = FUN_08000e54(uintVar6,DAT_08003264);\n    *(undefined4 *)PTR_DAT_08003268 = uintVar4;\n    uintVar6 = FUN_08000c44(intVar1);\n    uintVar5 = FUN_08000e54(uintVar6,DAT_08003264);\n    uintVar6 = DAT_08003270;\n    *(undefined4 *)PTR_DAT_0800326c = uintVar5;\n    FUN_08000e54(uintVar4,uintVar6);\n    ulongVar = FUN_08000428();\n    ulongVar = FUN_08005900((int)ulongVar,(int)((ulonglong)ulongVar >> 0x20),DAT_08003240,DAT_08003244);\n    ulongVar = FUN_08000168(0,DAT_08003274,(int)ulongVar,(int)((ulonglong)ulongVar >> 0x20));\n    FUN_080004d0((int)ulongVar,(int)((ulonglong)ulongVar >> 0x20),DAT_08003248,DAT_0800324c);\n    uintVar6 = FUN_08000a30();\n    ptrVar3 = PTR_DAT_08003278;\n    *(undefined4 *)PTR_DAT_0800327c = uintVar6;\n    uintVar4 = 0;\n    tempPtr2 = (undefined4 *)ptrVar3;\n    do {\n      tempPtr1 = tempPtr2 + 1;\n      *tempPtr2 = *tempPtr1;\n      uintVar4 = FUN_08000adc(uintVar4);\n      tempPtr2 = tempPtr1;\n    } while ((undefined4 *)(ptrVar3 + 0x4c) != tempPtr1);\n    *(undefined4 *)(ptrVar3 + 0x4c) = uintVar6;\n    uintVar6 = FUN_08000adc(uintVar4,uintVar6);\n    uintVar6 = FUN_08000e54(uintVar6,DAT_08003280);\n    *(undefined4 *)PTR_DAT_08003284 = uintVar6;\n    intVar1 = FUN_08001078();\n    ptrVar3 = PTR_DAT_0800328c;\n    *(int *)PTR_DAT_08003288 = intVar1 * 100;\n    byteVar = *ptrVar3;\n    *ptrVar1 = 0;\n    *ptrVar2 = 0;\n    FUN_0800403c(0xee,byteVar + 0x50,1);\n    uintVar6 = thunk_FUN_0800115c();\n    *(undefined4 *)PTR_DAT_08003290 = uintVar6;\n  }\n  intVar1 = thunk_FUN_0800115c();\n  ptrVar2 = PTR_DAT_08003294;\n  if (((10 < (uint)(intVar1 - *(int *)PTR_DAT_08003290)) && (*ptrVar1 == '\\0')) &&\n     (*PTR_DAT_08003254 == '\\0')) {\n    uintVar6 = FUN_08003034();\n    ptrVar3 = PTR_DAT_0800325c;\n    *ptrVar1 = 1;\n    *(undefined4 *)ptrVar3 = uintVar6;\n    FUN_0800403c(0xee,(byte)*PTR_DAT_0800328c + 0x40,1,0,unaffectedReg);\n    uintVar6 = thunk_FUN_0800115c();\n    *(undefined4 *)ptrVar2 = uintVar6;\n  }\n  intVar1 = thunk_FUN_0800115c();\n  ptrVar3 = PTR_DAT_08003254;\n  if (((10 < (uint)(intVar1 - *(int *)ptrVar2)) && (*ptrVar1 != '\\0')) && (*PTR_DAT_08003254 == '\\0'))\n  {\n    uintVar6 = FUN_08003034();\n    *(undefined4 *)PTR_DAT_08003260 = uintVar6;\n    *ptrVar3 = 1;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08000428",
                "FUN_08002f28",
                "FUN_08004410",
                "FUN_08004384",
                "FUN_080043f0",
                "FUN_080004d0",
                "FUN_08000168",
                "FUN_08000e54",
                "FUN_08005900",
                "FUN_08004434",
                "FUN_08000a30",
                "FUN_08001078",
                "FUN_08003034",
                "thunk_FUN_0800115c",
                "FUN_08004458",
                "FUN_08000adc",
                "FUN_08000c44",
                "FUN_080043bc",
                "FUN_08004a84",
                "FUN_0800403c",
                "FUN_08004348"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800411c",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "main_process_0800411c"
        },
        "FUN_080022d0": {
            "renaming": {
                "FUN_080022d0": "update_registers_080022d0",
                "param_1": "registerBase",
                "param_2": "inputValues",
                "uVar1": "registerValue",
                "uVar2": "secondRegisterValue",
                "uVar3": "firstInputValue"
            },
            "code": "\nvoid updateRegisters_080022d0(int registerBase,uint *inputValues)\n\n{\n  uint registerValue;\n  uint secondRegisterValue;\n  uint firstInputValue;\n  \n  *(uint *)(registerBase + 0x20) = *(uint *)(registerBase + 0x20) & 0xfffffeff;\n  secondRegisterValue = *(uint *)(registerBase + 4);\n  firstInputValue = *inputValues;\n  registerValue = *(uint *)(registerBase + 0x20) & 0xfffffdff | inputValues[2] << 8;\n  if (registerBase == DAT_08002320) {\n    registerValue = (registerValue & 0xfffff7ff | inputValues[3] << 8) & 0xfffffbff;\n    secondRegisterValue = secondRegisterValue & 0xffffcfff | (inputValues[5] | inputValues[6]) << 4;\n  }\n  *(uint *)(registerBase + 4) = secondRegisterValue;\n  *(uint *)(registerBase + 0x1c) = *(uint *)(registerBase + 0x1c) & 0xffffff8c | firstInputValue;\n  *(uint *)(registerBase + 0x3c) = inputValues[1];\n  *(uint *)(registerBase + 0x20) = registerValue;\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080022d0",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "update_registers_080022d0"
        },
        "FUN_080010c4": {
            "renaming": {
                "FUN_080010c4": "calculate_special_value_080010c4",
                "param_1": "input_value",
                "uVar1": "shift_amount"
            },
            "code": "\nuint calculate_special_value_080010c4(uint input_value)\n\n{\n  uint shift_amount;\n  \n  if (((input_value & 0x80000000) != 0) || (input_value << 1 < 0x7f000000)) {\n    return 0;\n  }\n  shift_amount = 0x9e - ((input_value << 1) >> 0x18);\n  if (-1 < (int)shift_amount) {\n    return (input_value << 8 | 0x80000000) >> (shift_amount & 0xff);\n  }\n  if ((shift_amount == 0xffffff9f) && ((input_value & 0x7fffff) != 0)) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080010c4",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "calculate_special_value_080010c4"
        },
        "FUN_080040b8": {
            "renaming": {
                "FUN_080040b8": "process_data_080040b8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "param_6": "input6",
                "iVar1": "result"
            },
            "code": "\nvoid processData_080040b8(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 undefined4 input5,undefined4 input6)\n\n{\n  int result;\n  \n  result = FUN_08001938(PTR_DAT_080040e4,input1,input2,1,input3,input4,200,input4);\n  if (result != 0) {\n    FUN_08004490(input5,input6);\n    return;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08001938",
                "FUN_08004490"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080040b8",
            "calling": [
                "FUN_08003034"
            ],
            "imported": false,
            "current_name": "process_data_080040b8"
        },
        "FUN_0800245c": {
            "renaming": {
                "FUN_0800245c": "update_register_values_0800245c",
                "param_1": "registerPointer",
                "param_2": "unusedParam2",
                "param_3": "operationCode",
                "extraout_r1": "output1",
                "extraout_r1_00": "output1_00",
                "extraout_r1_01": "output1_01",
                "extraout_r1_02": "output1_02",
                "iVar1": "tempVar1",
                "uVar2": "updatedValue",
                "iVar3": "registerValue"
            },
            "code": "\nvoid updateRegisterValues_0800245c(int *registerPointer,undefined4 unusedParam2,undefined4 operationCode)\n\n{\n  int output1;\n  int output1_00;\n  int output1_01;\n  int output1_02;\n  int tempVar1;\n  uint updatedValue;\n  int registerValue;\n  \n  if (*(char *)(registerPointer + 0xe) == '\\x01') {\n    return;\n  }\n  *(undefined *)((int)registerPointer + 0x39) = 2;\n  *(undefined *)(registerPointer + 0xe) = 1;\n  switch(operationCode) {\n  case 0:\n    FUN_08002280(*registerPointer);\n    registerValue = *registerPointer;\n    updatedValue = *(uint *)(output1 + 0x10);\n    *(uint *)(registerValue + 0x18) = *(uint *)(registerValue + 0x18) | 8;\n    *(uint *)(registerValue + 0x18) = *(uint *)(registerValue + 0x18) & 0xfffffffb;\n    updatedValue = *(uint *)(registerValue + 0x18) | updatedValue;\n    break;\n  default:\n    goto switchD_0800247a_caseD_1;\n  case 4:\n    FUN_08002404(*registerPointer);\n    registerValue = *registerPointer;\n    tempVar1 = *(int *)(output1_00 + 0x10);\n    *(uint *)(registerValue + 0x18) = *(uint *)(registerValue + 0x18) | 0x800;\n    *(uint *)(registerValue + 0x18) = *(uint *)(registerValue + 0x18) & 0xfffffbff;\n    updatedValue = *(uint *)(registerValue + 0x18) | tempVar1 << 8;\n    break;\n  case 8:\n    FUN_080022d0(*registerPointer);\n    registerValue = *registerPointer;\n    updatedValue = *(uint *)(output1_01 + 0x10);\n    *(uint *)(registerValue + 0x1c) = *(uint *)(registerValue + 0x1c) | 8;\n    *(uint *)(registerValue + 0x1c) = *(uint *)(registerValue + 0x1c) & 0xfffffffb;\n    updatedValue = *(uint *)(registerValue + 0x1c) | updatedValue;\n    goto LAB_080024fa;\n  case 0xc:\n    FUN_08002324(*registerPointer);\n    registerValue = *registerPointer;\n    tempVar1 = *(int *)(output1_02 + 0x10);\n    *(uint *)(registerValue + 0x1c) = *(uint *)(registerValue + 0x1c) | 0x800;\n    *(uint *)(registerValue + 0x1c) = *(uint *)(registerValue + 0x1c) & 0xfffffbff;\n    updatedValue = *(uint *)(registerValue + 0x1c) | tempVar1 << 8;\nLAB_080024fa:\n    *(uint *)(registerValue + 0x1c) = updatedValue;\n    goto switchD_0800247a_caseD_1;\n  }\n  *(uint *)(registerValue + 0x18) = updatedValue;\nswitchD_0800247a_caseD_1:\n  *(undefined *)((int)registerPointer + 0x39) = 1;\n  *(undefined *)(registerPointer + 0xe) = 0;\n  return;\n}\n\n",
            "called": [
                "FUN_08002324",
                "FUN_08002280",
                "FUN_08002404",
                "FUN_080022d0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800245c",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "update_register_values_0800245c"
        },
        "FUN_08004490": {
            "renaming": {
                "FUN_08004490": "print_error_messages_08004490",
                "param_1": "errorMessage",
                "param_2": "lineNumber",
                "uVar1": "data",
                "puVar2": "atLineString",
                "puVar3": "errorWithString"
            },
            "code": "\nvoid printErrorMessages_08004490(undefined4 errorMessage,undefined4 lineNumber)\n\n{\n  undefined4 data;\n  undefined *atLineString;\n  undefined *errorWithString;\n  \n  FUN_08001424(DAT_08004508,0x4000,1);\n  FUN_08001424(DAT_08004508,0x8000,0);\n  FUN_08001424(DAT_08004508,0x2000,0);\n  errorWithString = PTR_s_Error_with_08004510;\n  atLineString = PTR_s__at_line__0800450c;\n  data = DAT_08004508;\n  do {\n    FUN_0800142e(data,0x4000);\n    FUN_0800142e(data,0x8000);\n    FUN_0800142e(data,0x2000);\n    FUN_08004c8c(errorWithString);\n    FUN_08004c8c(errorMessage);\n    FUN_08004c8c(atLineString);\n    FUN_08004cac(lineNumber);\n    FUN_08004c18(10);\n    thunk_do_nothing_08001168(500);\n  } while( true );\n}\n\n",
            "called": [
                "thunk_FUN_08001168",
                "FUN_08001424",
                "FUN_0800142e",
                "FUN_08004c18",
                "FUN_08004c8c",
                "FUN_08004cac"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004490",
            "calling": [
                "FUN_08004514",
                "FUN_0800407c",
                "FUN_0800458c",
                "FUN_080040b8",
                "FUN_0800403c"
            ],
            "imported": false,
            "current_name": "print_error_messages_08004490"
        },
        "FUN_08000e54": {
            "renaming": {
                "FUN_08000e54": "floating_point_division_08000e54",
                "param_1": "numerator",
                "param_2": "denominator",
                "param_3": "unusedParam",
                "param_4": "numeratorExponent",
                "uVar1": "denominatorMantissa",
                "uVar2": "numeratorExponent",
                "iVar3": "exponentDifference",
                "uVar4": "tempVar1",
                "iVar5": "tempVar2",
                "uVar6": "tempVar3",
                "bVar7": "isZeroOrMax",
                "bVar8": "isEqual",
                "bVar9": "isCarry"
            },
            "code": "\nuint floatingPointDivision_08000e54(uint numerator,uint denominator,undefined4 unusedParam,uint numeratorExponent)\n\n{\n  uint denominatorMantissa;\n  uint numeratorExponent;\n  int exponentDifference;\n  uint tempVar1;\n  int tempVar2;\n  uint tempVar3;\n  bool isZeroOrMax;\n  bool isEqual;\n  bool isCarry;\n  \n  numeratorExponent = numerator >> 0x17 & 0xff;\n  isZeroOrMax = numeratorExponent == 0;\n  if (!isZeroOrMax) {\n    numeratorExponent = denominator >> 0x17 & 0xff;\n    isZeroOrMax = numeratorExponent == 0;\n  }\n  if (!isZeroOrMax) {\n    isZeroOrMax = numeratorExponent == 0xff;\n  }\n  if (!isZeroOrMax) {\n    isZeroOrMax = numeratorExponent == 0xff;\n  }\n  if (isZeroOrMax) {\n    numeratorExponent = denominator >> 0x17 & 0xff;\n    tempVar3 = numerator;\n    if (numeratorExponent == 0xff) {\n      if (((numerator & 0x7fffff) != 0) || (tempVar3 = denominator, numeratorExponent == 0xff)) {\nLAB_08000e4a:\n        return tempVar3 | 0x7fc00000;\n      }\n    }\n    else {\n      if (numeratorExponent == 0xff) {\n        tempVar3 = denominator;\n        if ((denominator & 0x7fffff) == 0) {\nLAB_08000e00:\n          return (numerator ^ denominator) & 0x80000000;\n        }\n        goto LAB_08000e4a;\n      }\n      isZeroOrMax = (numerator & 0x7fffffff) == 0;\n      if (!isZeroOrMax) {\n        isZeroOrMax = (denominator & 0x7fffffff) == 0;\n      }\n      if (!isZeroOrMax) {\n        isZeroOrMax = numeratorExponent == 0;\n        tempVar3 = numerator & 0x80000000;\n        while( true ) {\n          if (isZeroOrMax) {\n            numerator = numerator << 1;\n            isZeroOrMax = (numerator & 0x800000) == 0;\n          }\n          if (!isZeroOrMax) break;\n          numeratorExponent = numeratorExponent - 1;\n        }\n        numerator = numerator | tempVar3;\n        isZeroOrMax = numeratorExponent == 0;\n        tempVar3 = denominator & 0x80000000;\n        while( true ) {\n          if (isZeroOrMax) {\n            denominator = denominator << 1;\n            isZeroOrMax = (denominator & 0x800000) == 0;\n          }\n          if (!isZeroOrMax) break;\n          numeratorExponent = numeratorExponent - 1;\n        }\n        denominator = denominator | tempVar3;\n        goto LAB_08000e6c;\n      }\n      if ((numerator & 0x7fffffff) == 0) {\n        if ((denominator & 0x7fffffff) != 0) goto LAB_08000e00;\n        goto LAB_08000e4a;\n      }\n    }\n    numerator = numerator ^ denominator;\n  }\n  else {\nLAB_08000e6c:\n    exponentDifference = numeratorExponent - numeratorExponent;\n    if (denominator << 9 == 0) {\n      numerator = (numerator ^ denominator) & 0x80000000 | numerator & 0x7fffff;\n      isCarry = SCARRY4(exponentDifference,0x7f);\n      tempVar2 = exponentDifference + 0x7f;\n      isZeroOrMax = tempVar2 < 0;\n      isEqual = tempVar2 == 0;\n      if (!isEqual && isZeroOrMax == isCarry) {\n        isCarry = SBORROW4(0xff,tempVar2);\n        isZeroOrMax = 0xff - tempVar2 < 0;\n        isEqual = tempVar2 == 0xff;\n      }\n      if (!isEqual && isZeroOrMax == isCarry) {\n        numerator = numerator | tempVar2 * 0x800000;\n      }\n      if (!isEqual && isZeroOrMax == isCarry) {\n        return numerator;\n      }\n      numerator = numerator | 0x800000;\n      numeratorExponent = 0;\n      isEqual = SBORROW4(tempVar2,1);\n      tempVar1 = exponentDifference + 0x7e;\n      isZeroOrMax = tempVar1 == 0;\n      tempVar3 = tempVar1;\n    }\n    else {\n      denominatorMantissa = (denominator << 9) >> 4 | 0x10000000;\n      numeratorExponent = (numerator << 9) >> 4 | 0x10000000;\n      numerator = (numerator ^ denominator) & 0x80000000;\n      isZeroOrMax = denominatorMantissa <= numeratorExponent;\n      if (!isZeroOrMax) {\n        numeratorExponent = numeratorExponent << 1;\n      }\n      tempVar1 = exponentDifference + 0x7d + (uint)isZeroOrMax;\n      tempVar3 = 0x800000;\n      do {\n        if (denominatorMantissa <= numeratorExponent) {\n          numeratorExponent = numeratorExponent - denominatorMantissa;\n          numerator = numerator | tempVar3;\n        }\n        isZeroOrMax = denominatorMantissa >> 1 <= numeratorExponent;\n        if (isZeroOrMax) {\n          numeratorExponent = numeratorExponent - (denominatorMantissa >> 1);\n        }\n        if (isZeroOrMax) {\n          numerator = numerator | tempVar3 >> 1;\n        }\n        isZeroOrMax = denominatorMantissa >> 2 <= numeratorExponent;\n        if (isZeroOrMax) {\n          numeratorExponent = numeratorExponent - (denominatorMantissa >> 2);\n        }\n        if (isZeroOrMax) {\n          numerator = numerator | tempVar3 >> 2;\n        }\n        isZeroOrMax = denominatorMantissa >> 3 <= numeratorExponent;\n        if (isZeroOrMax) {\n          numeratorExponent = numeratorExponent - (denominatorMantissa >> 3);\n        }\n        if (isZeroOrMax) {\n          numerator = numerator | tempVar3 >> 3;\n        }\n        numeratorExponent = numeratorExponent * 0x10;\n        isZeroOrMax = numeratorExponent == 0;\n        if (!isZeroOrMax) {\n          tempVar3 = tempVar3 >> 4;\n          isZeroOrMax = tempVar3 == 0;\n        }\n      } while (!isZeroOrMax);\n      isEqual = SBORROW4(tempVar1,0xfd);\n      isZeroOrMax = tempVar1 == 0xfd;\n      tempVar3 = tempVar1 - 0xfd;\n      if (tempVar1 < 0xfe) {\n        numerator = numerator + tempVar1 * 0x800000 + (uint)(denominatorMantissa <= numeratorExponent);\n        if (numeratorExponent - denominatorMantissa == 0) {\n          numerator = numerator & 0xfffffffe;\n        }\n        return numerator;\n      }\n    }\n    if (isZeroOrMax || (int)tempVar3 < 0 != isEqual) {\n      isZeroOrMax = (int)(tempVar1 + 0x19) < 0;\n      if (tempVar1 == 0xffffffe7 || isZeroOrMax != SCARRY4(tempVar1,0x19)) {\n        numerator = numerator & 0x80000000;\n      }\n      if (tempVar1 == 0xffffffe7 || isZeroOrMax != SCARRY4(tempVar1,0x19)) {\n        return numerator;\n      }\n      tempVar3 = (numerator << 1) >> (-tempVar1 & 0xff);\n      tempVar1 = numerator << (tempVar1 + 0x20 & 0xff);\n      tempVar3 = ((uint)((numerator & 0x80000000) != 0) << 0x1f | tempVar3 >> 1) + (uint)((byte)tempVar3 & 1);\n      if ((numeratorExponent | tempVar1 << 1) == 0) {\n        tempVar3 = tempVar3 & ~(tempVar1 >> 0x1f);\n      }\n      return tempVar3;\n    }\n  }\n  return numerator & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000e54",
            "calling": [
                "FUN_08002f28",
                "FUN_0800483c",
                "FUN_08003330",
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "floating_point_division_08000e54"
        },
        "FUN_080015e8": {
            "renaming": {
                "FUN_080015e8": "process_data_080015e8",
                "param_1": "data_ptr",
                "param_2": "input_1",
                "param_3": "input_2",
                "param_4": "control_flag",
                "param_5": "timeout",
                "iVar1": "result_1",
                "iVar2": "result_2",
                "puVar3": "current_ptr",
                "ppuVar4": "temp_ptr",
                "uVar5": "temp_input_1",
                "uVar6": "temp_input_2"
            },
            "code": "\nundefined4 process_data_080015e8(uint **data_ptr,uint input_1,uint input_2,int control_flag,uint timeout)\n\n{\n  int result_1;\n  int result_2;\n  uint *current_ptr;\n  uint **temp_ptr;\n  uint temp_input_1;\n  uint temp_input_2;\n  \n  current_ptr = *data_ptr;\n  *current_ptr = *current_ptr | 0x400;\n  *current_ptr = *current_ptr | 0x100;\n  temp_ptr = data_ptr;\n  temp_input_1 = input_1;\n  temp_input_2 = input_2;\n  result_1 = FUN_0800115c();\nLAB_0800160e:\n  current_ptr = *data_ptr;\n  while (-1 < (int)(current_ptr[5] << 0x1f)) {\n    if (timeout != 0xffffffff) goto code_r0x08001658;\n  }\n  current_ptr[4] = input_1 & 0xfe;\n  result_1 = FUN_08001460(data_ptr,DAT_080016f0,timeout,current_ptr,temp_ptr,temp_input_1,temp_input_2);\n  if (result_1 != 0) goto LAB_080016ba;\n  result_1 = FUN_080014e2(data_ptr,timeout,(*data_ptr)[5],(*data_ptr)[6]);\n  if (result_1 == 0) {\n    current_ptr = *data_ptr;\n    if (control_flag != 1) {\n      current_ptr[4] = input_2 >> 8;\n      result_1 = FUN_080014e2(data_ptr,timeout);\n      if (result_1 != 0) goto LAB_08001642;\n      current_ptr = *data_ptr;\n    }\n    current_ptr[4] = input_2 & 0xff;\n    result_1 = FUN_080014e2(data_ptr,timeout);\n    if (result_1 == 0) {\n      **data_ptr = **data_ptr | 0x100;\n      result_1 = FUN_0800115c();\n      do {\n        do {\n          if ((int)((*data_ptr)[5] << 0x1f) < 0) {\n            (*data_ptr)[4] = input_1 & 0xff | 1;\n            result_1 = FUN_08001460(data_ptr,DAT_080016f0,timeout);\n            if (result_1 == 0) {\n              return 0;\n            }\nLAB_080016ba:\n            if (data_ptr[0xe] != (uint *)0x4) {\n              return 3;\n            }\n            return 1;\n          }\n        } while (timeout == 0xffffffff);\n      } while ((timeout != 0) && (result_2 = FUN_0800115c(), (uint)(result_2 - result_1) <= timeout));\nLAB_0800165a:\n      *(undefined *)((int)data_ptr + 0x35) = 0x20;\n      *(undefined *)(data_ptr + 0xd) = 0;\n      return 3;\n    }\n  }\nLAB_08001642:\n  if (data_ptr[0xe] == (uint *)0x4) {\n    **data_ptr = **data_ptr | 0x200;\n    return 1;\n  }\n  return 3;\ncode_r0x08001658:\n  if ((timeout == 0) || (result_2 = FUN_0800115c(), timeout < (uint)(result_2 - result_1)))\n  goto LAB_0800165a;\n  goto LAB_0800160e;\n}\n\n",
            "called": [
                "FUN_080014e2",
                "FUN_08001460",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080015e8",
            "calling": [
                "FUN_08001938"
            ],
            "imported": false,
            "current_name": "process_data_080015e8"
        },
        "FUN_08004e14": {
            "renaming": {
                "FUN_08004e14": "process_values_08004e14",
                "param_1": "inputValue",
                "param_2": "unusedParam1",
                "param_3": "param3",
                "iVar2": "inputValueContent",
                "uVar1": "dataToProcess",
                "local_18": "result",
                "local_14": "unusedVar1",
                "uStack_10": "param3Passed",
                "local_c": "unusedVar2"
            },
            "code": "\nvoid processValues_08004e14(int *inputValue,undefined4 unusedParam1,undefined4 param3)\n\n{\n  undefined4 dataToProcess;\n  int inputValueContent;\n  undefined4 result;\n  undefined4 unusedVar1;\n  undefined4 param3Passed;\n  undefined4 unusedVar2;\n  \n  inputValueContent = *inputValue;\n  dataToProcess = DAT_08004e6c;\n  if (inputValueContent == DAT_08004e68) {\n    result = 0x800;\n  }\n  else if (inputValueContent == 0x40000000) {\n    result = 2;\n  }\n  else {\n    dataToProcess = DAT_08004e74;\n    if (inputValueContent == DAT_08004e70) {\n      result = 3;\n    }\n    else {\n      if (inputValueContent != DAT_08004e78) {\n        return;\n      }\n      result = 0x300;\n    }\n  }\n  unusedVar2 = 2;\n  unusedVar1 = 2;\n  param3Passed = param3;\n  FUN_08001264(dataToProcess,&result);\n  return;\n}\n\n",
            "called": [
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e14",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "process_values_08004e14"
        }
    },
    "used_tokens": 136776,
    "layers": [
        [
            "FUN_080050fc",
            "FUN_08003320",
            "FUN_08004410",
            "FUN_08001264",
            "FUN_08002ea0",
            "FUN_080070b0",
            "FUN_08001424",
            "FUN_08001028",
            "FUN_08005900",
            "FUN_080006ac",
            "FUN_08001828",
            "FUN_08004c64",
            "FUN_0800016c",
            "FUN_08001b58",
            "FUN_08007092",
            "FUN_0800290c",
            "FUN_08002f28",
            "FUN_08004384",
            "FUN_080009a0",
            "FUN_08003298",
            "FUN_08004300",
            "FUN_08005630",
            "FUN_08003330",
            "FUN_08000980",
            "FUN_08004028",
            "FUN_08002368",
            "FUN_08002520",
            "FUN_08002008",
            "FUN_08002404",
            "FUN_08005bc8",
            "FUN_08001436",
            "FUN_08004a30",
            "FUN_08004c70",
            "FUN_08000904",
            "FUN_0800299a",
            "FUN_0800114c",
            "FUN_080052e4",
            "FUN_080014e2",
            "FUN_0800142e",
            "FUN_08004d8c",
            "FUN_08002250",
            "FUN_080009b4",
            "FUN_080011fc",
            "FUN_08003068",
            "FUN_08005646",
            "FUN_08000990",
            "FUN_08000110",
            "FUN_0800709e",
            "FUN_08002ec0",
            "FUN_08004434",
            "FUN_08006c0c",
            "FUN_0800426c",
            "FUN_08002538",
            "FUN_080040e8",
            "FUN_08004ffc",
            "FUN_0800115c",
            "FUN_08002d88",
            "FUN_08000c44",
            "FUN_08000a04",
            "FUN_080025e8",
            "FUN_08002b48",
            "FUN_08004f68",
            "FUN_08001170",
            "FUN_08002bf0",
            "FUN_08002ad0",
            "FUN_08001050",
            "FUN_080009c8",
            "FUN_08002ed4",
            "FUN_08000f9c",
            "FUN_08000c3c",
            "FUN_080043bc",
            "FUN_08001214",
            "FUN_08003fc4",
            "FUN_08000404",
            "FUN_0800209c",
            "FUN_0800403c",
            "FUN_08000cec",
            "FUN_08006070",
            "thunk_FUN_08006070",
            "FUN_08004cac",
            "FUN_08004c18",
            "FUN_0800483c",
            "FUN_08004c8c",
            "FUN_08001460",
            "FUN_08001064",
            "FUN_08003fd0",
            "FUN_08000892",
            "FUN_08004458",
            "FUN_08000134",
            "FUN_08003eb0",
            "FUN_08005c70",
            "FUN_08002ee8",
            "FUN_08001104",
            "thunk_FUN_0800115c",
            "FUN_08006d68",
            "FUN_080072b8",
            "FUN_0800581c",
            "FUN_08004d48",
            "FUN_080072ac",
            "FUN_08002280",
            "FUN_08001194",
            "FUN_08002cb0",
            "FUN_08004348",
            "FUN_08002324",
            "FUN_08001078",
            "FUN_08002564",
            "FUN_08001754",
            "FUN_08000ad8",
            "FUN_08003ec8",
            "FUN_08002724",
            "FUN_08003fe8",
            "FUN_08005714",
            "FUN_08004fb4",
            "FUN_080043f0",
            "FUN_08000428",
            "FUN_08004ccc",
            "FUN_08000a30",
            "FUN_080023d0",
            "FUN_08004c30",
            "FUN_080004d0",
            "FUN_08003fdc",
            "FUN_080009f0",
            "FUN_08004f10",
            "FUN_08005044",
            "FUN_08004194",
            "FUN_08001240",
            "FUN_08005840",
            "FUN_08000150",
            "FUN_08003f3c",
            "FUN_08002214",
            "FUN_08001004",
            "FUN_08003ff4",
            "FUN_080041ae",
            "FUN_08001128",
            "FUN_08004514",
            "FUN_08004a84",
            "FUN_080041c4",
            "FUN_080053d4",
            "FUN_080057d0",
            "FUN_0800567c",
            "FUN_0800458c",
            "FUN_08000adc",
            "FUN_08000ffc",
            "FUN_080016f4",
            "FUN_080025a4",
            "FUN_08002220",
            "FUN_08003034",
            "FUN_08004e7c",
            "FUN_08001530",
            "FUN_08003314",
            "FUN_08005854",
            "FUN_08000168",
            "FUN_08001014",
            "FUN_080071c0",
            "FUN_08005614",
            "FUN_08000724",
            "FUN_080070a4",
            "FUN_0800407c",
            "FUN_08001938",
            "FUN_0800411c",
            "FUN_080022d0",
            "FUN_080010c4",
            "FUN_080040b8",
            "FUN_0800245c",
            "FUN_08004490",
            "FUN_08000e54",
            "FUN_080015e8",
            "FUN_08004e14"
        ]
    ],
    "locked_functions": []
}