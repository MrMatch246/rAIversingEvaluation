{
    "functions": {
        "FUN_08000188": {
            "additional_data": {
                "DAT_2000044c": {
                    "flag": 15,
                    "flag_variable": 3
                },
                "FUN_08000188": {
                    "initialize_data": 1,
                    "initialize_flag": 25,
                    "initialize_flag_if_zero": 1,
                    "initialize_if_not_set": 1,
                    "set_flag_if_not_set": 1,
                    "update_flag": 2
                },
                "param_1": {
                    "input": 10,
                    "input_data": 1,
                    "input_param": 1,
                    "input_parameter": 2,
                    "input_value": 12,
                    "value": 5
                }
            },
            "called": [
                "FUN_0800b5b0"
            ],
            "calling": [],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000194) */\n\nundefined4 initialize_flag_if_zero_08000188(undefined4 input_value)\n\n{\n  if ((char)DAT_2000044c == '\\0') {\n    DAT_2000044c._0_1_ = '\\x01';\n  }\n  return input_value;\n}\n\n",
            "current_name": "initialize_flag_if_zero_08000188",
            "entrypoint": "0x08000188",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000188": "initialize_flag_if_zero_08000188",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080001ac": {
            "additional_data": {
                "FUN_080001ac": {
                    "combine_integers": 1,
                    "concatenate_and_convert": 1,
                    "concatenate_integers": 2,
                    "concatenate_ints_to_long": 1,
                    "concatenate_numbers": 1,
                    "concatenate_param": 1,
                    "concatenate_param1and_param2": 1,
                    "concatenate_parameters": 6,
                    "concatenate_params": 6,
                    "concatenate_to_int64": 1,
                    "concatenate_values": 9,
                    "concatenatevalues": 1
                },
                "param_1": {
                    "first_int": 1,
                    "first_integer": 2,
                    "first_number": 1,
                    "first_param": 3,
                    "first_parameter": 4,
                    "first_value": 1,
                    "input1": 4,
                    "input_param1": 1,
                    "input_param_1": 1,
                    "integer1": 1,
                    "integer_1": 1,
                    "merged_param1": 1,
                    "param_1_value": 1,
                    "parameter1": 1,
                    "value1": 6,
                    "value_1": 2
                },
                "param_2": {
                    "input2": 4,
                    "input_param2": 1,
                    "input_param_2": 1,
                    "integer2": 1,
                    "integer_2": 1,
                    "merged_param2": 1,
                    "param_2_value": 1,
                    "parameter2": 1,
                    "second_int": 1,
                    "second_integer": 2,
                    "second_number": 1,
                    "second_param": 3,
                    "second_parameter": 4,
                    "second_value": 1,
                    "value2": 6,
                    "value_2": 2
                }
            },
            "called": [
                "FUN_0800b5b0"
            ],
            "calling": [
                "FUN_0800b3e8"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080001b2) */\n\nundefined8 concatenate_values_080001ac(undefined4 value1,undefined4 value2)\n\n{\n  return CONCAT44(value2,value1);\n}\n\n",
            "current_name": "concatenate_values_080001ac",
            "entrypoint": "0x080001ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080001ac": "concatenate_values_080001ac",
                "param_1": "value1",
                "param_2": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080001c8": {
            "called": [],
            "calling": [
                "FUN_08000220"
            ],
            "code": "\nvoid FUNC_080001c8(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080001c8",
            "entrypoint": "0x080001c8",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080001c8": "FUNC_080001c8"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080001d4": {
            "called": [],
            "calling": [
                "FUN_08000210"
            ],
            "code": "\nvoid FUNC_080001d4(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080001d4",
            "entrypoint": "0x080001d4",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080001d4": "FUNC_080001d4"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080001e0": {
            "called": [],
            "calling": [
                "FUN_08000220"
            ],
            "code": "\nvoid FUNC_080001e0(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080001e0",
            "entrypoint": "0x080001e0",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080001e0": "FUNC_080001e0"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080001ec": {
            "called": [],
            "calling": [
                "FUN_08000210"
            ],
            "code": "\nvoid FUNC_080001ec(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080001ec",
            "entrypoint": "0x080001ec",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080001ec": "FUNC_080001ec"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080001f8": {
            "additional_data": {
                "FUNKY_FUNCTION": {
                    "initialize_data": 1
                },
                "FUN_080001f8": {
                    "initialize_and_call_cleaning_function": 1,
                    "initialize_app": 1,
                    "initialize_data": 27,
                    "initialize_function": 1
                },
                "FUN_08000210": {
                    "call_sub_function": 1,
                    "configure_settings": 1,
                    "do_processing": 1,
                    "do_something": 2,
                    "execute_process": 1,
                    "execute_subroutine": 1,
                    "perform_action": 3,
                    "perform_initialization": 10,
                    "perform_operation": 2,
                    "perform_task": 3,
                    "process_data": 4
                }
            },
            "called": [
                "FUN_08000210"
            ],
            "calling": [
                "FUN_08001ddc"
            ],
            "code": "\nvoid initialize_data_080001f8(void)\n\n{\n  DAT_20000468 = 0;\n  FUN_08000210();\n  return;\n}\n\n",
            "current_name": "initialize_data_080001f8",
            "entrypoint": "0x080001f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080001f8": "initialize_data_080001f8"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000210": {
            "additional_data": {
                "FUNC_080001d4": {
                    "call_function_2": 1,
                    "configure_device": 1,
                    "configure_devices": 1,
                    "configure_settings": 1,
                    "configure_system": 1,
                    "execute_function_2": 1,
                    "execute_instructions": 1,
                    "execute_second_function": 3,
                    "execute_second_subfunction": 1,
                    "execute_second_task": 1,
                    "execute_startup_tasks": 1,
                    "function2": 1,
                    "function_2": 1,
                    "initialize_data": 1,
                    "initialize_function2": 3,
                    "initialize_module2": 1,
                    "initialize_part2": 1,
                    "initialize_second_function": 1,
                    "initialize_sub2": 1,
                    "initialize_subsystem2": 1,
                    "perform_operations": 1,
                    "perform_second_action": 1,
                    "perform_task": 2,
                    "perform_task2": 1,
                    "process_data": 1,
                    "setup_configuration": 1
                },
                "FUNC_080001ec": {
                    "call_function_1": 1,
                    "do_initialization": 1,
                    "execute_first_function": 3,
                    "execute_first_subfunction": 1,
                    "execute_first_task": 1,
                    "execute_function_1": 1,
                    "function1": 1,
                    "function_1": 1,
                    "initialize_data": 3,
                    "initialize_first_function": 1,
                    "initialize_function1": 3,
                    "initialize_module": 1,
                    "initialize_module1": 1,
                    "initialize_network": 1,
                    "initialize_part1": 1,
                    "initialize_sub1": 1,
                    "initialize_subsystem1": 1,
                    "initialize_system": 2,
                    "load_data": 1,
                    "perform_first_action": 1,
                    "perform_initialization": 1,
                    "perform_setup": 1,
                    "perform_task1": 1,
                    "setup_function": 1
                },
                "FUN_08000210": {
                    "execute_functions": 2,
                    "execute_initialization": 5,
                    "execute_main_function": 1,
                    "execute_main_functions": 1,
                    "execute_other_functions": 1,
                    "execute_program": 1,
                    "execute_startup_functions": 2,
                    "execute_subfunctions": 1,
                    "initialize": 9,
                    "initialize_components": 2,
                    "initialize_program": 3,
                    "initialize_system": 3
                }
            },
            "called": [
                "FUN_080001ec",
                "FUN_080001d4"
            ],
            "calling": [
                "FUN_080025e8",
                "FUN_080001f8",
                "FUN_08000220"
            ],
            "code": "\nvoid initialize_system_08000210(void)\n\n{\n  FUNC_080001ec();\n  FUNC_080001d4();\n  return;\n}\n\n",
            "current_name": "initialize_system_08000210",
            "entrypoint": "0x08000210",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000210": "initialize_system_08000210"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000220": {
            "additional_data": {
                "FUNC_080001c8": {
                    "execute_third_operation": 1,
                    "handle_case1": 2,
                    "handle_input_one": 2,
                    "handle_param1": 2,
                    "handle_param_one": 1,
                    "handle_parameter_one": 1,
                    "handle_status1": 1,
                    "handle_status_one": 1,
                    "initialize_for_state1": 1,
                    "initialize_value": 2,
                    "perform_action1": 3,
                    "perform_action2": 1,
                    "perform_action3": 1,
                    "perform_action_one": 2,
                    "perform_operation1": 1,
                    "perform_update_type1": 1,
                    "process_first": 1,
                    "process_option1": 1,
                    "update_data_1": 1,
                    "update_function_1": 1,
                    "update_if_param1_is1": 1,
                    "update_type1": 1
                },
                "FUNC_080001e0": {
                    "execute_second_operation": 1,
                    "handle_case2": 2,
                    "handle_input_two": 2,
                    "handle_param2": 2,
                    "handle_param_two": 1,
                    "handle_parameter_two": 1,
                    "handle_status2": 1,
                    "handle_status_two": 1,
                    "initialize_for_state2": 1,
                    "perform_action2": 4,
                    "perform_action3": 1,
                    "perform_action_two": 2,
                    "perform_update_type2": 1,
                    "process_option2": 1,
                    "process_second": 1,
                    "set_value": 1,
                    "update_data_2": 1,
                    "update_function_2": 1,
                    "update_if_param1_is2": 1,
                    "update_type2": 1,
                    "update_value": 1
                },
                "FUN_080001e0": {
                    "perform_operation2": 1
                },
                "FUN_08000210": {
                    "execute_fourth_operation": 1,
                    "handle_default_case": 1,
                    "handle_default_status": 1,
                    "handle_other_case": 1,
                    "handle_other_cases": 1,
                    "handle_other_input": 2,
                    "handle_other_parameters": 1,
                    "handle_other_params": 3,
                    "handle_other_status": 1,
                    "initialize_for_other_states": 1,
                    "perform_action3": 2,
                    "perform_action4": 1,
                    "perform_action_default": 1,
                    "perform_default_action": 3,
                    "perform_default_operation": 1,
                    "perform_update": 1,
                    "process_default": 2,
                    "reset_data": 1,
                    "update_data_default": 1,
                    "update_function_3": 1,
                    "update_if_param1_is_other": 1,
                    "update_type_default": 1
                },
                "FUN_08000220": {
                    "handle_param": 2,
                    "process_input": 3,
                    "process_param": 1,
                    "process_parameter": 2,
                    "update_data": 7,
                    "update_param": 4,
                    "update_param_value": 1,
                    "update_parameter": 2,
                    "update_parameter_value": 2,
                    "update_state": 1,
                    "update_status": 3,
                    "update_value": 2,
                    "update_variable": 1
                },
                "FUN_08002fd4": {
                    "cleanup": 1,
                    "do_something": 2,
                    "execute_first_operation": 1,
                    "execute_update": 1,
                    "handle_invalid_status": 1,
                    "handle_mismatched_parameter": 1,
                    "perform_action": 2,
                    "perform_action1": 2,
                    "perform_reset": 1,
                    "reset": 1,
                    "reset_data": 1,
                    "reset_function": 1,
                    "reset_param": 1,
                    "reset_update": 1,
                    "reset_value": 1
                },
                "param_1": {
                    "current_value": 1,
                    "input": 4,
                    "input_param": 3,
                    "input_value": 1,
                    "new_data": 2,
                    "new_param": 3,
                    "new_parameter": 1,
                    "new_state": 1,
                    "new_status": 1,
                    "new_value": 9,
                    "param": 1,
                    "parameter": 2,
                    "status": 2
                }
            },
            "called": [
                "FUN_08002fd4",
                "FUN_080001e0",
                "FUN_080001c8",
                "FUN_08000210"
            ],
            "calling": [
                "FUN_080005b4"
            ],
            "code": "\nvoid update_parameter_value_08000220(char new_value)\n\n{\n  if (new_value != DAT_20000468) {\n    FUN_08002fd4();\n    if (new_value == '\\x01') {\n      FUNC_080001c8();\n      DAT_20000468 = new_value;\n    }\n    else if (new_value == '\\x02') {\n      FUNC_080001e0();\n      DAT_20000468 = new_value;\n    }\n    else {\n      FUN_08000210();\n      DAT_20000468 = new_value;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "update_parameter_value_08000220",
            "entrypoint": "0x08000220",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000220": "update_parameter_value_08000220",
                "param_1": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000268": {
            "additional_data": {
                "FUN_08000268": {
                    "calculate_adjusted_time": 1,
                    "calculate_adjusted_value": 12,
                    "calculate_delay": 6,
                    "calculate_elapsed_time": 1,
                    "calculate_modified_result": 1,
                    "calculate_modified_value": 1,
                    "calculate_result": 3,
                    "calculate_time": 1,
                    "calculate_time_difference": 4,
                    "calculate_time_offset": 1
                },
                "FUN_08005a84": {
                    "get_additional_value": 1,
                    "get_current_time": 4,
                    "get_function_result": 1,
                    "get_initial_value": 3,
                    "get_input_value": 1,
                    "get_multiplier": 1,
                    "get_original_value": 2,
                    "get_time_value": 2,
                    "get_value": 4,
                    "get_value_from_memory": 1,
                    "get_value_from_subfunction": 1
                },
                "_DAT_e000e018": {
                    "constant_offset": 1,
                    "constant_value": 5,
                    "data_offset": 1,
                    "data_value": 3,
                    "elapsed_time": 1,
                    "input_val": 1,
                    "input_value": 1,
                    "memory_value": 1,
                    "some_value": 2,
                    "system_time": 1,
                    "time_constant": 2
                },
                "iVar1": {
                    "adjusted_value": 1,
                    "current_time": 2,
                    "elapsed_time": 2,
                    "result": 18,
                    "time_difference": 1,
                    "time_value": 1,
                    "value_from_subfunc": 1,
                    "value_from_subfunction": 1
                }
            },
            "called": [
                "FUN_08005a84"
            ],
            "calling": [
                "FUN_080002b6"
            ],
            "code": "\n\n\nint calculate_adjusted_value_08000268(void)\n\n{\n  int result;\n  \n  result = FUN_08005a84();\n  return (result + 1) * 1000 - _DAT_e000e018 / 0xa8;\n}\n\n",
            "current_name": "calculate_adjusted_value_08000268",
            "entrypoint": "0x08000268",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000268": "calculate_adjusted_value_08000268",
                "iVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080002a0": {
            "additional_data": {
                "FUN_080002a0": {
                    "call_fun_with_param": 1,
                    "execute_and_return": 1,
                    "execute_code": 1,
                    "execute_extraction": 1,
                    "execute_first_function": 1,
                    "execute_function": 9,
                    "execute_main_function": 3,
                    "execute_preprocessing": 1,
                    "initialize": 3,
                    "initialize_application": 1,
                    "initialize_program": 3,
                    "initialize_system": 3,
                    "process_data": 3
                },
                "FUN_08005a98": {
                    "execute_function": 1,
                    "execute_program": 1,
                    "execute_second_function": 1,
                    "execute_sub_function": 2,
                    "initialize_submodule": 1,
                    "perform_operation": 1,
                    "perform_preprocessing": 1,
                    "perform_sub_function": 1,
                    "perform_task": 2,
                    "process_configuration": 1,
                    "process_data": 6,
                    "process_input": 4,
                    "reverse_binary": 1,
                    "reverse_data": 4,
                    "reverse_integer": 3
                },
                "param_1": {
                    "arg": 1,
                    "config_data": 1,
                    "data": 3,
                    "data_to_process": 1,
                    "extracted_data": 1,
                    "function_parameter": 1,
                    "input": 7,
                    "input_data": 2,
                    "input_param": 3,
                    "input_parameter": 2,
                    "input_value": 1,
                    "number": 1,
                    "param": 3,
                    "param_1": 1,
                    "program_data": 1,
                    "program_parameter": 1,
                    "submodule_id": 1
                }
            },
            "called": [
                "FUN_08005a98"
            ],
            "calling": [
                "FUN_08002408"
            ],
            "code": "\nvoid execute_main_function_080002a0(undefined4 input)\n\n{\n  FUN_08005a98(input);\n  return;\n}\n\n",
            "current_name": "execute_main_function_080002a0",
            "entrypoint": "0x080002a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080002a0": "execute_main_function_080002a0",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080002b6": {
            "additional_data": {
                "FUN_080002b6": {
                    "check_if_greater_or_equal": 1,
                    "check_if_greater_than": 1,
                    "check_param": 1,
                    "check_parameters": 1,
                    "find_closest_value": 1,
                    "find_equal_or_closest_value": 1,
                    "find_first_greater": 1,
                    "find_first_matching_value": 1,
                    "find_higher_value": 1,
                    "find_matching_value": 5,
                    "find_matching_values": 2,
                    "find_smallest_greater_number": 1,
                    "find_smallest_number": 1,
                    "find_smallest_value": 2,
                    "wait_for_match": 1
                },
                "bVar3": {
                    "check": 1,
                    "comparison_result": 3,
                    "condition": 1,
                    "condition_met": 1,
                    "is_condition_met": 2,
                    "is_greater": 4,
                    "is_greater_or_equal": 1,
                    "is_higher": 1,
                    "is_less_or_equal": 1,
                    "is_less_than_or_equal": 2,
                    "is_match": 7,
                    "is_matched": 1,
                    "is_matching_value": 1,
                    "is_result2_greater": 1,
                    "is_smaller": 1,
                    "is_smallest_greater_number": 1,
                    "is_sum_greater": 1,
                    "is_valid": 1
                },
                "lVar4": {
                    "current_time": 3,
                    "extracted_number": 1,
                    "extracted_sum": 1,
                    "function_result": 7,
                    "initial_result": 2,
                    "initial_value": 1,
                    "random_value": 7,
                    "result": 4,
                    "result1": 1,
                    "result_of_function": 1,
                    "result_of_subfunction": 1,
                    "time_value": 1,
                    "timestamp": 1
                },
                "param_1": {
                    "input": 10,
                    "input_data": 1,
                    "input_number": 1,
                    "input_parameter": 1,
                    "input_value": 11,
                    "match_value": 1,
                    "number": 1,
                    "param": 1,
                    "value": 2,
                    "value_to_match": 2
                },
                "uVar1": {
                    "extracted_high_bits": 1,
                    "extracted_higher_bits": 1,
                    "extracted_value": 2,
                    "first_value": 1,
                    "high_bits": 1,
                    "high_bits1": 1,
                    "high_bits_of_value": 1,
                    "result": 1,
                    "result1": 6,
                    "result2": 1,
                    "result_1": 1,
                    "result_high": 1,
                    "temp1": 1,
                    "upper_bit_value": 1,
                    "upper_bits": 2,
                    "upper_bits1": 1,
                    "upper_bits_of_input": 1,
                    "upper_param": 1,
                    "upper_part_result": 1,
                    "upper_value": 2,
                    "upper_value_1": 1,
                    "value1": 1,
                    "value_temp": 1
                },
                "uVar2": {
                    "calculated_value": 1,
                    "comparison_value": 1,
                    "computed_value": 1,
                    "expected_high_bits": 1,
                    "high_bits2": 1,
                    "high_bits_of_result": 1,
                    "l_var4_higher_bits": 1,
                    "result": 1,
                    "result2": 6,
                    "result3": 1,
                    "result_2": 1,
                    "result_low": 1,
                    "second_value": 1,
                    "shifted_bits": 1,
                    "shifted_sum": 1,
                    "sum_of_upper_bits": 1,
                    "sum_value": 1,
                    "sum_with_high_bits": 1,
                    "sum_with_match": 1,
                    "target_value": 1,
                    "temp2": 1,
                    "upper_bits2": 1,
                    "upper_part_sum": 1,
                    "upper_value_2": 1,
                    "value2": 1,
                    "value_sum": 1
                },
                "uVar5": {
                    "extracted_value": 1,
                    "extracted_value_2": 1,
                    "function_value": 1,
                    "generated_number": 1,
                    "new_random_value": 1,
                    "next_extracted_value": 1,
                    "next_time_value": 1,
                    "next_value": 2,
                    "random_value": 5,
                    "random_value2": 2,
                    "random_value_2": 1,
                    "result4": 1,
                    "result_of_another_subfunction": 1,
                    "return_value": 3,
                    "sub_function_result": 2,
                    "temp3": 1,
                    "temp_result": 3,
                    "temp_value": 3
                }
            },
            "called": [
                "FUN_08000268"
            ],
            "calling": [],
            "code": "\nvoid find_first_matching_value_080002b6(uint input_value)\n\n{\n  uint result1;\n  uint result2;\n  bool is_match;\n  longlong function_result;\n  undefined8 random_value;\n  \n  function_result = FUN_08000268();\n  result2 = (uint)(function_result + (ulonglong)input_value >> 0x20);\n  do {\n    random_value = FUN_08000268();\n    result1 = (uint)((ulonglong)random_value >> 0x20);\n    is_match = result2 <= result1;\n    if (result1 == result2) {\n      is_match = (uint)(function_result + (ulonglong)input_value) <= (uint)random_value;\n    }\n  } while (!is_match);\n  return;\n}\n\n",
            "current_name": "find_first_matching_value_080002b6",
            "entrypoint": "0x080002b6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080002b6": "find_first_matching_value_080002b6",
                "bVar3": "is_match",
                "lVar4": "function_result",
                "param_1": "input_value",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar5": "random_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080002f0": {
            "additional_data": {
                "DAT_2000046c": {
                    "flag": 7,
                    "is_initialized": 1,
                    "status": 1
                },
                "DAT_20000470": {
                    "data": 1,
                    "memory_block": 1
                },
                "FUN_080002f0": {
                    "initialize_data": 30,
                    "set_initial_data": 1
                },
                "FUN_0800b430": {
                    "fill_buffer": 1,
                    "fill_memory": 1,
                    "initialize_memory": 1,
                    "populate_data_array": 1,
                    "set_data": 1,
                    "set_memory": 2,
                    "set_memory_block": 1,
                    "set_memory_range": 1,
                    "write_data": 2
                },
                "data": {
                    "data": 1
                },
                "dataPointer": {
                    "data": 1
                },
                "param_1": {
                    "buffer": 2,
                    "data": 2,
                    "data_array": 4,
                    "data_pointer": 21,
                    "memory_block": 1,
                    "memory_pointer": 1
                },
                "param_2": {
                    "constant": 1,
                    "initial_value": 3,
                    "value": 26,
                    "value_to_fill": 1
                },
                "param_3": {
                    "count": 1,
                    "length": 7,
                    "num_bytes": 1,
                    "size": 22
                },
                "value": {
                    "initial_value": 2
                }
            },
            "called": [
                "FUN_0800b430"
            ],
            "calling": [
                "FUN_08000374",
                "FUN_08000310",
                "FUN_08000340",
                "FUN_080003ec"
            ],
            "code": "\nvoid initialize_data_080002f0(void)\n\n{\n  FUN_0800b430(&DAT_20000470,0xff,4);\n  DAT_2000046c = 1;\n  return;\n}\n\n",
            "current_name": "initialize_data_080002f0",
            "entrypoint": "0x080002f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080002f0": "initialize_data_080002f0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000310": {
            "additional_data": {
                "0x3ff": {
                    "array_size": 1,
                    "index_mask": 1,
                    "mask": 1
                },
                "DAT_2000046c": {
                    "array_initialized": 3,
                    "data_initialized": 2,
                    "flag": 1,
                    "initialization_flag": 1,
                    "initialized": 7,
                    "initialized_flag": 1,
                    "is_data_initialized": 1,
                    "is_initialized": 10,
                    "table_initialized": 1
                },
                "DAT_20000470": {
                    "array": 1,
                    "array_values": 1,
                    "data_array": 3,
                    "lookup_table": 1,
                    "value_table": 1
                },
                "FUN_080002f0": {
                    "initialize": 2,
                    "initialize_array": 4,
                    "initialize_data": 19,
                    "initialize_table": 1
                },
                "FUN_08000310": {
                    "get_data": 1,
                    "get_data_at_index": 4,
                    "get_data_by_index": 3,
                    "get_data_element": 1,
                    "get_data_entry": 4,
                    "get_data_from_array": 3,
                    "get_data_from_index": 1,
                    "get_data_value": 1,
                    "get_element_at_index": 1,
                    "get_element_from_array": 1,
                    "get_indexed_data": 1,
                    "get_indexed_value": 1,
                    "get_value_at_index": 2,
                    "get_value_from_array": 1,
                    "get_value_from_data": 1,
                    "get_value_from_table": 3,
                    "lookup_value": 2
                },
                "param_1": {
                    "element_index": 1,
                    "entry_index": 2,
                    "index": 22,
                    "input": 2,
                    "input_index": 1,
                    "input_value": 2,
                    "value": 1
                }
            },
            "called": [
                "FUN_080002f0"
            ],
            "calling": [
                "FUN_08004dd2",
                "FUN_080003ec"
            ],
            "code": "\nundefined get_data_at_index_08000310(uint index)\n\n{\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n  }\n  return (&DAT_20000470)[index & 0x3ff];\n}\n\n",
            "current_name": "get_data_at_index_08000310",
            "entrypoint": "0x08000310",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000310": "get_data_at_index_08000310",
                "param_1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000340": {
            "additional_data": {
                "DAT_2000046c": {
                    "is_initialized": 1
                },
                "DAT_20000470": {
                    "data_entries": 1
                },
                "FUN_080002f0": {
                    "initialize_data": 3
                },
                "FUN_08000340": {
                    "set_param_value": 1,
                    "store_data": 13,
                    "store_parameter": 5,
                    "store_parameter_value": 3,
                    "store_value": 1,
                    "store_value_in_array": 2,
                    "update_data": 2,
                    "update_data_at_location": 1,
                    "update_data_entry": 1,
                    "update_data_memory": 1,
                    "update_data_value": 1
                },
                "param_1": {
                    "address": 1,
                    "data_index": 3,
                    "entry_index": 1,
                    "index": 23,
                    "parameter_index": 3
                },
                "param_2": {
                    "data": 7,
                    "data_value": 2,
                    "new_value": 1,
                    "parameter_value": 1,
                    "value": 20
                }
            },
            "called": [
                "FUN_080002f0"
            ],
            "calling": [
                "FUN_08000374",
                "FUN_08004c2a"
            ],
            "code": "\nvoid store_data_08000340(uint index,undefined value)\n\n{\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n  }\n  (&DAT_20000470)[index & 0x3ff] = value;\n  return;\n}\n\n",
            "current_name": "store_data_08000340",
            "entrypoint": "0x08000340",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000340": "store_data_08000340",
                "param_1": "index",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000374": {
            "additional_data": {
                "FUN_080002f0": {
                    "initialize_checksum": 2,
                    "initialize_if_necessary": 1
                },
                "FUN_08000340": {
                    "update_checksum": 3
                },
                "FUN_08000374": {
                    "calculate_check_sum": 1,
                    "calculate_checksum": 19,
                    "compute_checksum": 1,
                    "process_data": 9,
                    "update_and_hash": 1
                },
                "local_14": {
                    "counter": 1,
                    "current_addr": 1,
                    "current_index": 20,
                    "current_offset": 2,
                    "index": 2,
                    "offset": 1,
                    "output_length": 1,
                    "output_size": 1,
                    "output_value": 1,
                    "temp_count": 1
                },
                "local_18": {
                    "current_byte": 4,
                    "current_char": 7,
                    "current_char_ptr": 2,
                    "current_character": 2,
                    "current_data": 6,
                    "current_element": 4,
                    "data": 1,
                    "data_ptr": 2,
                    "pointer": 1,
                    "temp_data": 1
                },
                "local_1c": {
                    "count": 2,
                    "length": 5,
                    "length_counter": 3,
                    "remaining_elements": 1,
                    "remaining_iterations": 2,
                    "remaining_length": 12,
                    "remaining_size": 4,
                    "temp_length": 1,
                    "updated_num_bytes": 1
                },
                "local_9": {
                    "check_sum": 1,
                    "checksum": 23,
                    "checksum_value": 1,
                    "result": 2,
                    "sum": 3,
                    "sum_of_elements": 1
                },
                "param_1": {
                    "count": 2,
                    "data_length": 1,
                    "data_size": 3,
                    "initial_value": 2,
                    "input_length": 4,
                    "input_param": 1,
                    "input_size": 7,
                    "input_value": 1,
                    "length_of_data": 1,
                    "num_iterations": 1,
                    "param1": 1,
                    "start_index": 4,
                    "start_value": 1,
                    "starting_index": 2
                },
                "param_2": {
                    "data": 8,
                    "data_array": 4,
                    "input_array": 3,
                    "input_buffer": 1,
                    "input_data": 8,
                    "input_string": 5,
                    "param2": 1,
                    "string": 1
                },
                "param_3": {
                    "array_length": 4,
                    "buffer_length": 1,
                    "byte_count": 1,
                    "data_length": 2,
                    "data_size": 3,
                    "input_length": 2,
                    "input_size": 1,
                    "iteration_count": 1,
                    "length": 7,
                    "num_bytes": 1,
                    "num_elements": 1,
                    "num_iterations": 1,
                    "param3": 1,
                    "string_length": 5
                }
            },
            "called": [
                "FUN_080002f0",
                "FUN_08000340"
            ],
            "calling": [
                "FUN_08004bc0",
                "FUN_08004bf4",
                "FUN_08004c2a"
            ],
            "code": "\nvoid calculate_checksum_08000374(int input_size,char *input_data,int length)\n\n{\n  int remaining_length;\n  char *current_char;\n  int current_index;\n  char checksum;\n  \n  checksum = '\\0';\n  remaining_length = length;\n  current_char = input_data;\n  current_index = input_size;\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n    current_char = input_data;\n    current_index = input_size;\n  }\n  for (; remaining_length != 0; remaining_length = remaining_length + -1) {\n    checksum = (checksum != '\\0') + *current_char;\n    FUN_08000340(current_index,*current_char);\n    current_char = current_char + 1;\n    current_index = current_index + 1;\n  }\n  FUN_08000340(current_index,checksum);\n  return;\n}\n\n",
            "current_name": "calculate_checksum_08000374",
            "entrypoint": "0x08000374",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000374": "calculate_checksum_08000374",
                "local_14": "current_index",
                "local_18": "current_char",
                "local_1c": "remaining_length",
                "local_9": "checksum",
                "param_1": "input_size",
                "param_2": "input_data",
                "param_3": "length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080003ec": {
            "additional_data": {
                "FUN_080002f0": {
                    "initialize": 2,
                    "initialize_checksum": 2,
                    "initialize_data": 3,
                    "initialize_globals": 1
                },
                "FUN_08000310": {
                    "get_char": 2,
                    "get_character": 3,
                    "get_checksum_byte": 1,
                    "get_next_char": 1,
                    "get_next_character": 1
                },
                "FUN_080003ec": {
                    "check_character_sequence": 1,
                    "check_characters_match": 1,
                    "check_equal_sum": 1,
                    "check_equality": 16,
                    "check_matching_chars": 1,
                    "is_checksum_valid": 2,
                    "is_input_equal_to_result": 1,
                    "is_sum_equal_to_input": 1,
                    "validate_and_count_chars": 1,
                    "validate_string": 1,
                    "verify_equality": 2,
                    "verify_string": 3
                },
                "cVar1": {
                    "char_value": 1,
                    "current_char": 7,
                    "current_character": 1
                },
                "local_14": {
                    "current_address": 1,
                    "current_char": 5,
                    "current_char_pointer": 1,
                    "current_char_ptr": 5,
                    "current_character": 1,
                    "current_pointer": 1,
                    "current_position": 1,
                    "current_ptr": 1,
                    "output": 2,
                    "output_string": 12,
                    "temp_input_string": 1
                },
                "local_18": {
                    "current_index": 27,
                    "current_pos": 2,
                    "current_position": 1,
                    "temp_input_length": 1
                },
                "local_1c": {
                    "remaining_chars": 1,
                    "remaining_length": 29,
                    "temp_result_length": 1
                },
                "local_9": {
                    "byte_value": 1,
                    "char_count": 10,
                    "char_sum": 6,
                    "character_sum": 2,
                    "checksum": 2,
                    "count": 3,
                    "counter": 3,
                    "match_count": 1,
                    "sum": 2,
                    "sum_result": 1
                },
                "param_1": {
                    "buffer": 1,
                    "data": 2,
                    "input": 2,
                    "input_string": 19,
                    "string": 6,
                    "string1": 1
                },
                "param_2": {
                    "input_length": 1,
                    "start": 2,
                    "start_idx": 1,
                    "start_index": 26,
                    "start_position": 1
                },
                "param_3": {
                    "length": 30,
                    "result_length": 1
                },
                "uVar2": {
                    "expected_char": 4,
                    "expected_value": 2,
                    "result": 1,
                    "sum_expected": 1
                }
            },
            "called": [
                "FUN_08000310",
                "FUN_080002f0"
            ],
            "calling": [
                "FUN_08004d2c",
                "FUN_08004dd2",
                "FUN_08004d7c"
            ],
            "code": "\nbool check_equality_080003ec(char *input_string,int start_index,int length)\n\n{\n  char current_char;\n  uint expected_char;\n  int remaining_length;\n  int current_index;\n  char *output_string;\n  byte char_count;\n  \n  char_count = 0;\n  remaining_length = length;\n  current_index = start_index;\n  output_string = input_string;\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n    current_index = start_index;\n    output_string = input_string;\n  }\n  for (; remaining_length != 0; remaining_length = remaining_length + -1) {\n    current_char = FUN_08000310(current_index);\n    char_count = current_char + (char_count != 0);\n    *output_string = current_char;\n    current_index = current_index + 1;\n    output_string = output_string + 1;\n  }\n  expected_char = FUN_08000310(current_index);\n  return char_count == expected_char;\n}\n\n",
            "current_name": "check_equality_080003ec",
            "entrypoint": "0x080003ec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080003ec": "check_equality_080003ec",
                "cVar1": "current_char",
                "local_14": "output_string",
                "local_18": "current_index",
                "local_1c": "remaining_length",
                "local_9": "char_count",
                "param_1": "input_string",
                "param_2": "start_index",
                "param_3": "length",
                "uVar2": "expected_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000478": {
            "additional_data": {
                "FUN_08000478": {
                    "initialize": 1,
                    "initialize_data": 1,
                    "initialize_parameters": 14,
                    "initialize_params": 8,
                    "initialize_variables": 4,
                    "set_parameters": 2,
                    "set_params": 1
                },
                "param_1": {
                    "data1": 1,
                    "data_1": 1,
                    "initial_value1": 1,
                    "input_1": 2,
                    "input_param1": 2,
                    "input_param_1": 1,
                    "input_parameter1": 1,
                    "new_param1": 1,
                    "param1": 7,
                    "parameter1": 7,
                    "parameter_1": 1,
                    "value1": 4,
                    "variable1": 1
                },
                "param_2": {
                    "data2": 1,
                    "data_2": 1,
                    "initial_value2": 1,
                    "input_2": 2,
                    "input_param2": 2,
                    "input_param_2": 1,
                    "input_parameter2": 1,
                    "new_param2": 1,
                    "param2": 7,
                    "parameter2": 7,
                    "parameter_2": 1,
                    "value2": 4,
                    "variable2": 1
                },
                "param_3": {
                    "data3": 1,
                    "data_3": 1,
                    "initial_value3": 1,
                    "input_3": 2,
                    "input_param3": 2,
                    "input_param_3": 1,
                    "input_parameter3": 1,
                    "new_param3": 1,
                    "param3": 7,
                    "parameter3": 7,
                    "parameter_3": 1,
                    "value3": 4,
                    "variable3": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080005b4",
                "FUN_080004ac"
            ],
            "code": "\nvoid initialize_parameters_08000478(undefined param1,undefined param2,undefined parameter3)\n\n{\n  DAT_20000e89 = param1;\n  DAT_20000e8a = param2;\n  DAT_20000e8b = parameter3;\n  return;\n}\n\n",
            "current_name": "initialize_parameters_08000478",
            "entrypoint": "0x08000478",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000478": "initialize_parameters_08000478",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "parameter3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080004ac": {
            "additional_data": {
                "DAT_20000e70": {
                    "data": 2
                },
                "DAT_20000e74": {
                    "flag": 4,
                    "flag_value": 1,
                    "status": 1
                },
                "DAT_20000e78": {
                    "copied_data": 1,
                    "data_address": 1,
                    "data_value": 1,
                    "global_data": 1,
                    "source": 1
                },
                "DAT_20000e8c": {
                    "byte_value": 2,
                    "input_byte": 1,
                    "param1": 1
                },
                "DAT_20000e90": {
                    "input_value": 1,
                    "param2": 1,
                    "param_value": 1,
                    "value_address": 1
                },
                "F0": {
                    "index": 1
                },
                "F1": {
                    "param1": 1
                },
                "F10": {
                    "output": 1
                },
                "F11": {
                    "status": 1
                },
                "F12": {
                    "result": 1
                },
                "F2": {
                    "param2": 1
                },
                "F3": {
                    "param3": 1
                },
                "F4": {
                    "param4": 1
                },
                "F5": {
                    "param5": 1
                },
                "F6": {
                    "param6": 1
                },
                "F7": {
                    "param7": 1
                },
                "F8": {
                    "param8": 1
                },
                "F9": {
                    "param9": 1
                },
                "FUN_08000478": {
                    "configure_options": 1,
                    "initialize_parameters": 1,
                    "perform_actions": 1,
                    "perform_initial_setup": 1,
                    "perform_initialization": 1,
                    "perform_operation": 3,
                    "perform_operations": 2,
                    "perform_setup": 1,
                    "print_info": 1,
                    "print_values": 1,
                    "process_data": 4,
                    "set_configuration": 2,
                    "set_flags": 4,
                    "set_parameters": 2,
                    "set_values": 2
                },
                "FUN_080004ac": {
                    "initialize": 3,
                    "initialize_application": 2,
                    "initialize_data": 21,
                    "initialize_process": 1,
                    "initiate_process": 1,
                    "process_data": 2
                },
                "FUN_08004030": {
                    "display_error": 5,
                    "display_error_message": 4,
                    "display_status": 1,
                    "execute_action": 1,
                    "execute_task": 1,
                    "handle_error": 2,
                    "log_error": 2,
                    "print_error": 2,
                    "print_error_message": 6,
                    "print_message": 2,
                    "process_error": 1
                },
                "FUN_08004d7c": {
                    "check_condition": 1,
                    "check_credentials": 1,
                    "check_data": 10,
                    "check_data_validity": 4,
                    "check_if_valid": 1,
                    "check_input": 1,
                    "check_result": 1,
                    "check_status": 4,
                    "check_validity": 3,
                    "validate_input": 1
                },
                "FUN_0800b430": {
                    "clear_memory": 8,
                    "copy_memory": 2,
                    "init_memory": 1,
                    "initialize_buffer": 4,
                    "initialize_data": 1,
                    "initialize_memory": 8,
                    "initialize_memory_block": 1,
                    "set_memory": 1
                },
                "VAR_1": {
                    "i_var1": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "result": 13,
                    "return_value": 1
                },
                "param_1": {
                    "data": 2,
                    "data_buffer": 4,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "error_code": 4,
                    "input": 1,
                    "memory_pointer": 1
                },
                "param_2": {
                    "flag": 4,
                    "op2": 1,
                    "param": 1,
                    "param2": 3,
                    "param_flag": 1,
                    "parameters": 1,
                    "start_value": 1,
                    "value": 3
                },
                "param_3": {
                    "buffer_size": 3,
                    "length": 2,
                    "num_bytes": 1,
                    "op3": 1,
                    "param3": 1,
                    "param_size": 1,
                    "size": 5,
                    "value3": 1
                }
            },
            "called": [
                "FUN_0800b430",
                "FUN_08004030",
                "FUN_08004d7c",
                "FUN_08000478"
            ],
            "calling": [
                "FUN_08001ddc"
            ],
            "code": "\nvoid initialize_data_080004ac(void)\n\n{\n  int result;\n  \n  FUN_0800b430(&DAT_20000e70,0,0x38);\n  DAT_20000e78 = DAT_20000ecc;\n  FUN_08000478(0,1,2);\n  DAT_20000e74 = 1;\n  result = FUN_08004d7c(DAT_20000e8c,&DAT_20000e90);\n  if (result == 0) {\n    FUN_08004030(10);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_080004ac",
            "entrypoint": "0x080004ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080004ac": "initialize_data_080004ac",
                "iVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080004fc": {
            "additional_data": {
                "DAT_20000e7c": {
                    "data1": 7,
                    "processed_data1": 2,
                    "transformed_value_1": 1
                },
                "DAT_20000e80": {
                    "data2": 6,
                    "data3": 1,
                    "processed_data2": 2,
                    "transformed_value_2": 1
                },
                "DAT_20000e84": {
                    "data3": 6,
                    "data5": 1,
                    "processed_data3": 2,
                    "transformed_value_3": 1
                },
                "DAT_20000ebc": {
                    "additional_data1": 1,
                    "constant1": 3,
                    "constant_1": 1,
                    "data2": 1,
                    "input_data1": 1,
                    "param1": 1,
                    "parameter1": 1
                },
                "DAT_20000ec0": {
                    "additional_data2": 1,
                    "constant2": 3,
                    "constant_2": 1,
                    "data4": 1,
                    "input_data2": 1,
                    "param2": 1,
                    "parameter2": 1
                },
                "DAT_20000ec4": {
                    "additional_data3": 1,
                    "constant3": 3,
                    "constant_3": 1,
                    "data6": 1,
                    "input_data3": 1,
                    "param3": 1,
                    "parameter3": 1
                },
                "FUN_080004fc": {
                    "decompile_and_improve": 1,
                    "initialize_data": 29,
                    "load_and_assign_values": 1
                },
                "FUN_08008e44": {
                    "compute_value": 1,
                    "convert_to_u_int": 1,
                    "convert_to_uint": 2,
                    "convert_to_unsigned_int": 1,
                    "get_processed_data": 1,
                    "get_processed_value": 2,
                    "get_transformed_value": 1,
                    "get_value": 2,
                    "perform_transformation": 1,
                    "process_data": 3,
                    "process_input": 7,
                    "process_value": 2,
                    "retrieve_data": 1,
                    "retrieve_value": 1,
                    "reverse_bits": 1
                },
                "FUN_08009054": {
                    "apply_transformation": 1,
                    "assign_data": 1,
                    "assign_processed_value": 1,
                    "assign_transformed_value": 1,
                    "calculate_result": 1,
                    "process_data": 6,
                    "set_data": 1,
                    "set_initialized_value": 1,
                    "update_data": 14
                },
                "param_1": {
                    "data1": 4,
                    "data_1": 1,
                    "input1": 10,
                    "input_1": 2,
                    "input_param1": 1,
                    "input_value1": 1,
                    "param1": 1,
                    "value1": 10,
                    "value_1": 1
                },
                "param_2": {
                    "data2": 4,
                    "data_2": 1,
                    "input2": 10,
                    "input_2": 2,
                    "input_param2": 1,
                    "input_value2": 1,
                    "param2": 1,
                    "value2": 10,
                    "value_2": 1
                },
                "param_3": {
                    "data3": 4,
                    "data_3": 1,
                    "input3": 10,
                    "input_3": 2,
                    "input_param3": 1,
                    "input_value3": 1,
                    "param3": 1,
                    "value3": 10,
                    "value_3": 1
                },
                "param_4": {
                    "extra_param": 1
                },
                "uVar1": {
                    "converted_value": 3,
                    "processed_data": 1,
                    "processed_input": 2,
                    "processed_value": 2,
                    "result": 3,
                    "result1": 11,
                    "result_1": 2,
                    "returned_value": 1
                }
            },
            "called": [
                "FUN_08008e44",
                "FUN_08009054"
            ],
            "calling": [
                "FUN_0800283a"
            ],
            "code": "\nvoid initialize_data_080004fc(undefined4 value1,undefined4 value2,undefined4 input3)\n\n{\n  undefined4 result1;\n  \n  result1 = FUN_08008e44(value1);\n  DAT_20000e7c = FUN_08009054(result1,DAT_20000ebc);\n  result1 = FUN_08008e44(value2);\n  DAT_20000e80 = FUN_08009054(result1,DAT_20000ec0);\n  result1 = FUN_08008e44(input3);\n  DAT_20000e84 = FUN_08009054(result1,DAT_20000ec4);\n  return;\n}\n\n",
            "current_name": "initialize_data_080004fc",
            "entrypoint": "0x080004fc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080004fc": "initialize_data_080004fc",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "input3",
                "uVar1": "result1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800056c": {
            "additional_data": {
                "DAT_20000e73": {
                    "flag": 1
                },
                "FUN_0800056c": {
                    "extract_and_improve": 1,
                    "extract_data": 1,
                    "perform_some_action": 1,
                    "process_data": 18
                },
                "FUN_08008590": {
                    "calculate_a": 2,
                    "calculate_first": 3,
                    "calculate_first_value": 7,
                    "calculate_hash": 2,
                    "calculate_something": 1,
                    "calculate_step_one": 1,
                    "calculate_value": 1,
                    "calculate_value1": 6,
                    "first_step": 1,
                    "process_step1": 1,
                    "reverse_bits": 1
                },
                "FUN_08008640": {
                    "calculate_b": 2,
                    "calculate_second": 3,
                    "calculate_second_value": 7,
                    "calculate_step_two": 1,
                    "calculate_value2": 6,
                    "combine_values": 1,
                    "perform_transformation": 2,
                    "process_result": 1,
                    "process_step2": 1,
                    "second_step": 1,
                    "transform_value": 1
                },
                "FUN_08008c30": {
                    "apply_operation": 1,
                    "apply_transform": 1,
                    "calculate_c": 2,
                    "calculate_checksum": 1,
                    "calculate_final_result": 1,
                    "calculate_final_value": 3,
                    "calculate_step_three": 1,
                    "calculate_third": 3,
                    "calculate_third_value": 1,
                    "calculate_value3": 6,
                    "perform_final_calculation": 1,
                    "process_result": 3,
                    "process_step3": 1,
                    "third_step": 1
                },
                "PTR_20000e73": {
                    "special_value": 1
                },
                "param_1": {
                    "data": 3,
                    "input": 4,
                    "input1": 1,
                    "input_data": 10,
                    "input_param": 3,
                    "input_value": 3,
                    "param1": 2,
                    "param1_reverse_func3": 1,
                    "result1": 1,
                    "second_result": 1,
                    "value1": 1
                },
                "param_2": {
                    "input2": 1,
                    "param1": 3,
                    "param2": 5,
                    "param2_reverse_func3": 1,
                    "param_1": 1,
                    "param_a": 1,
                    "result2": 1,
                    "value1": 1,
                    "value2": 1
                },
                "param_3": {
                    "param2": 3,
                    "param3": 4,
                    "param3_reverse_func2": 1,
                    "param_2": 1,
                    "param_b": 1,
                    "shift2": 1,
                    "unused_param2": 1,
                    "value2": 1,
                    "value3": 2
                },
                "param_4": {
                    "param3": 3,
                    "param4": 4,
                    "param4_reverse_func2": 1,
                    "param_3": 1,
                    "param_c": 1,
                    "unused_param3": 1,
                    "value3": 1,
                    "value4": 3
                },
                "uVar1": {
                    "output": 1,
                    "result": 27,
                    "result_val": 1,
                    "var1": 1
                },
                "ulonglong": {
                    "unsigned_64bit": 1
                }
            },
            "called": [
                "FUN_08008590",
                "FUN_08008640",
                "FUN_08008c30"
            ],
            "calling": [
                "FUN_080005b4"
            ],
            "code": "\nundefined4 process_data_0800056c(undefined4 input_data)\n\n{\n  undefined8 result;\n  \n  if (DAT_20000e73 != '\\0') {\n    result = FUN_08008590(input_data);\n    result = FUN_08008640((int)result,(int)((unsigned_64bit)result >> 0x20),0x66666666,0x40396666);\n    input_data = FUN_08008c30((int)result,(int)((unsigned_64bit)result >> 0x20));\n  }\n  return input_data;\n}\n\n",
            "current_name": "process_data_0800056c",
            "entrypoint": "0x0800056c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800056c": "process_data_0800056c",
                "param_1": "input_data",
                "uVar1": "result",
                "ulonglong": "unsigned_64bit"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080005b4": {
            "additional_data": {
                "DAT_20000e70": {
                    "error_code": 1,
                    "status_var1": 1
                },
                "DAT_20000e71": {
                    "status_var2": 1
                },
                "DAT_20000e72": {
                    "status_var3": 1
                },
                "DAT_20000e73": {
                    "status_var4": 1
                },
                "DAT_20000e74": {
                    "status_var5": 1
                },
                "DAT_20000e75": {
                    "status_var6": 1
                },
                "DAT_20000e76": {
                    "status_var7": 1
                },
                "DAT_20000e77": {
                    "status_var8": 1
                },
                "DAT_20000e78": {
                    "status_var9": 1
                },
                "DAT_20000e7c": {
                    "status_var10": 1
                },
                "DAT_20000e80": {
                    "status_var11": 1
                },
                "DAT_20000e84": {
                    "status_var12": 1
                },
                "DAT_20000e88": {
                    "status_var13": 1
                },
                "DAT_20000e89": {
                    "status_var16": 1
                },
                "DAT_20000e8a": {
                    "status_var17": 1
                },
                "DAT_20000e8b": {
                    "status_var14": 1
                },
                "DAT_20000e8c": {
                    "status_var15": 1
                },
                "DAT_20000e90": {
                    "status_var18": 1
                },
                "DAT_20000e94": {
                    "status_var19": 1
                },
                "DAT_20000e98": {
                    "status_var20": 1
                },
                "DAT_20000e9c": {
                    "status_var21": 1
                },
                "DAT_20000ea9": {
                    "char_var1": 1,
                    "flag": 1
                },
                "DAT_20000eb8": {
                    "status_var22": 1
                },
                "DAT_20000ed0": {
                    "status_var23": 1
                },
                "FUN_08000220": {
                    "print_message": 1,
                    "print_output": 1,
                    "set_mode": 1
                },
                "FUN_08000478": {
                    "perform_swap": 1,
                    "reverse_values": 1,
                    "swap_values": 1
                },
                "FUN_0800056c": {
                    "get_value": 2,
                    "get_variable_value": 1
                },
                "FUN_080005b4": {
                    "analyze_function": 1,
                    "analyze_input": 1,
                    "parse_and_process_commands": 1,
                    "parse_configuration": 1,
                    "parse_input": 1,
                    "process_data": 5,
                    "process_input": 1
                },
                "FUN_0800184c": {
                    "read_data": 1,
                    "read_input": 1,
                    "read_value": 1
                },
                "FUN_08001e98": {
                    "apply_operations": 1,
                    "perform_computation": 1,
                    "print_result": 1
                },
                "FUN_08001f00": {
                    "perform_complex_operation": 1,
                    "perform_operation_with_condition": 1,
                    "process_data": 1
                },
                "FUN_08002408": {
                    "execute_code": 1,
                    "print_result": 1,
                    "print_value": 1
                },
                "FUN_080025e8": {
                    "clear_memory": 1,
                    "display_message": 1,
                    "initialize_data": 1
                },
                "FUN_08002fd4": {
                    "cleanup": 1,
                    "reset_values": 1
                },
                "FUN_08004bf4": {
                    "store_value": 1,
                    "update_value": 2
                },
                "FUN_08004d7c": {
                    "check_condition": 1,
                    "check_validity": 1,
                    "perform_database_operation": 1
                },
                "FUN_0800525c": {
                    "handle_error": 1,
                    "perform_modulo": 1
                },
                "FUN_08008590": {
                    "calculate_checksum": 1,
                    "calculate_sum": 1,
                    "calculate_value": 1
                },
                "FUN_08008894": {
                    "calculate_hash": 1,
                    "perform_operation": 2
                },
                "FUN_08008ba0": {
                    "perform_comparison": 1,
                    "perform_division": 1,
                    "select_option": 1
                },
                "FUN_08008bf0": {
                    "convert_to_decimal": 1,
                    "convert_to_hex": 1,
                    "convert_to_hex_string": 1
                },
                "FUN_08008c30": {
                    "bitwise_operation": 1,
                    "calculate_square": 1,
                    "perform_xor": 1
                },
                "FUN_08008cd8": {
                    "calculate_hash": 1,
                    "perform_calculation": 1,
                    "perform_operation": 1
                },
                "FUN_08008cdc": {
                    "combine_values": 1,
                    "perform_arithmetic": 1,
                    "perform_subtraction": 1
                },
                "FUN_08008eec": {
                    "fetch_value": 1,
                    "get_constant_value": 1,
                    "perform_multiplication": 1
                },
                "FUN_08009214": {
                    "check_limit": 1,
                    "check_values": 1,
                    "is_valid_number": 1
                },
                "FUN_08009228": {
                    "check_validity": 1,
                    "is_valid_memory": 1
                },
                "FUN_0800923c": {
                    "check_condition": 2,
                    "is_valid_code": 1
                },
                "FUN_0800981c": {
                    "perform_comparison": 1,
                    "perform_math_operation": 1,
                    "perform_operation_with_overflow": 1
                },
                "FUN_080098d0": {
                    "perform_bitwise_operation": 1,
                    "perform_logical_operation": 1,
                    "perform_negation": 1
                },
                "FUN_0800b430": {
                    "initialize_array": 3
                },
                "auStack_70": {
                    "array1": 1,
                    "array2": 11,
                    "array7": 1,
                    "array_2": 1,
                    "array_var_2": 1,
                    "param_array": 1,
                    "parameters": 1,
                    "stack_array1": 2,
                    "stack_array2": 1,
                    "temp_array": 1,
                    "temp_array2": 5
                },
                "cVar3": {
                    "char_variable": 1,
                    "error": 1,
                    "error_code": 1,
                    "output_var": 1,
                    "result": 10,
                    "result_char": 1,
                    "return_value": 5,
                    "status": 5
                },
                "iVar1": {
                    "counter": 1,
                    "index": 3,
                    "index_var": 2,
                    "integer_variable": 1,
                    "iteration_counter": 1,
                    "loop_counter": 3,
                    "result": 9,
                    "return_val": 1,
                    "return_value": 1,
                    "temp_var1": 3
                },
                "local_24": {
                    "case_number": 1,
                    "local_var17": 1,
                    "local_var_18": 1,
                    "local_var_21": 1,
                    "local_variable24": 1,
                    "temp_u_int2": 1,
                    "temp_value": 1,
                    "temp_var12": 1,
                    "temp_var17": 1,
                    "temp_var27": 1,
                    "temp_var29": 1,
                    "temp_var31": 2,
                    "temp_var32": 2,
                    "temp_var33": 2,
                    "value19": 1,
                    "var13": 1,
                    "var17": 1,
                    "var21": 1,
                    "var22": 1,
                    "var26": 1,
                    "var7": 1,
                    "var_9": 1,
                    "variable14": 1,
                    "variable22": 1
                },
                "local_26": {
                    "case_switch": 1,
                    "config_data": 1,
                    "local_var16": 1,
                    "local_var_17": 1,
                    "local_var_20": 1,
                    "local_variable23": 1,
                    "short1": 1,
                    "temp_u_short": 1,
                    "temp_value": 1,
                    "temp_var11": 1,
                    "temp_var28": 1,
                    "temp_var30": 2,
                    "temp_var31": 2,
                    "temp_var32": 2,
                    "temp_var33": 1,
                    "ushort1": 1,
                    "value18": 1,
                    "var16": 1,
                    "var19": 1,
                    "var20": 1,
                    "var21": 1,
                    "var25": 1,
                    "var_2": 1,
                    "variable21": 1
                },
                "local_27": {
                    "bit_flag": 1,
                    "byte6": 1,
                    "byte9": 1,
                    "case_flags": 1,
                    "flag3": 1,
                    "flag4": 1,
                    "local_var15": 1,
                    "local_var_16": 1,
                    "local_var_19": 1,
                    "local_variable22": 1,
                    "temp_byte5": 1,
                    "temp_flag1": 1,
                    "temp_value": 1,
                    "temp_var29": 2,
                    "temp_var30": 2,
                    "temp_var31": 2,
                    "temp_var32": 1,
                    "var15": 1,
                    "var18": 1,
                    "var19": 1,
                    "var20": 1,
                    "var24": 1,
                    "var_3": 1,
                    "variable20": 1
                },
                "local_2c": {
                    "float_value": 1,
                    "local_var14": 1,
                    "local_var_15": 1,
                    "local_var_18": 1,
                    "local_variable21": 1,
                    "temp_value": 1,
                    "temp_var10": 1,
                    "temp_var16": 1,
                    "temp_var27": 1,
                    "temp_var28": 2,
                    "temp_var29": 2,
                    "temp_var30": 2,
                    "temp_var31": 1,
                    "temp_var9": 1,
                    "value17": 1,
                    "var14": 1,
                    "var17": 1,
                    "var18": 1,
                    "var19": 1,
                    "var23": 1,
                    "var6": 1,
                    "var_4": 1,
                    "variable13": 1,
                    "variable19": 1
                },
                "local_2d": {
                    "char1": 1,
                    "char3": 2,
                    "character2": 1,
                    "local_var13": 1,
                    "local_var_14": 1,
                    "local_var_17": 1,
                    "local_variable20": 1,
                    "switch_case2": 1,
                    "switch_case_num": 1,
                    "temp_char2": 1,
                    "temp_char6": 1,
                    "temp_var26": 1,
                    "temp_var27": 2,
                    "temp_var28": 2,
                    "temp_var29": 2,
                    "temp_var30": 1,
                    "var13": 1,
                    "var16": 1,
                    "var17": 1,
                    "var18": 1,
                    "var22": 1,
                    "var_14": 1,
                    "variable18": 1
                },
                "local_2e": {
                    "char2": 3,
                    "character1": 1,
                    "local_var12": 1,
                    "local_var_13": 1,
                    "local_var_16": 1,
                    "local_variable19": 1,
                    "switch_case1": 1,
                    "switch_case_num": 1,
                    "temp_char1": 1,
                    "temp_char5": 1,
                    "temp_var25": 1,
                    "temp_var26": 2,
                    "temp_var27": 2,
                    "temp_var28": 2,
                    "temp_var29": 1,
                    "var12": 1,
                    "var15": 1,
                    "var16": 1,
                    "var17": 1,
                    "var21": 1,
                    "var_6": 1,
                    "variable17": 1
                },
                "local_2f": {
                    "char3": 1,
                    "flag3": 1,
                    "local_var11": 1,
                    "local_var_12": 1,
                    "local_var_15": 1,
                    "local_variable18": 1,
                    "switch_case_num": 1,
                    "switch_flag": 1,
                    "temp_s_byte": 1,
                    "temp_var24": 1,
                    "temp_var25": 2,
                    "temp_var26": 2,
                    "temp_var27": 2,
                    "temp_var28": 1,
                    "temp_var9": 1,
                    "var11": 1,
                    "var14": 1,
                    "var15": 1,
                    "var16": 1,
                    "var20": 1,
                    "var5": 1,
                    "var_7": 1,
                    "variable12": 1,
                    "variable16": 1
                },
                "local_34": {
                    "local_var10": 1,
                    "local_var_11": 1,
                    "local_var_14": 1,
                    "local_variable17": 1,
                    "pointer1": 1,
                    "temp_value": 1,
                    "temp_var15": 1,
                    "temp_var21": 1,
                    "temp_var23": 1,
                    "temp_var24": 2,
                    "temp_var25": 2,
                    "temp_var26": 2,
                    "temp_var8": 2,
                    "value16": 1,
                    "var10": 2,
                    "var14": 1,
                    "var15": 1,
                    "var19": 1,
                    "var4": 1,
                    "var_19": 1,
                    "variable11": 1,
                    "variable15": 1
                },
                "local_38": {
                    "local_var9": 1,
                    "local_var_10": 1,
                    "local_var_13": 1,
                    "local_variable16": 1,
                    "pointer2": 1,
                    "temp_u_int1": 1,
                    "temp_value": 1,
                    "temp_var14": 1,
                    "temp_var20": 1,
                    "temp_var22": 1,
                    "temp_var23": 2,
                    "temp_var24": 2,
                    "temp_var25": 2,
                    "temp_var7": 1,
                    "value15": 1,
                    "var13": 1,
                    "var14": 1,
                    "var18": 1,
                    "var3": 1,
                    "var9": 2,
                    "var_11": 1,
                    "variable10": 1,
                    "variable14": 1
                },
                "local_39": {
                    "char1": 2,
                    "char5": 1,
                    "char6": 1,
                    "config_flag": 1,
                    "local_var8": 1,
                    "local_var_12": 1,
                    "local_var_9": 1,
                    "local_variable15": 1,
                    "switch_case_num": 1,
                    "temp_char": 1,
                    "temp_char4": 1,
                    "temp_var19": 1,
                    "temp_var21": 1,
                    "temp_var22": 2,
                    "temp_var23": 2,
                    "temp_var24": 2,
                    "value14": 1,
                    "var12": 1,
                    "var13": 1,
                    "var17": 1,
                    "var8": 1,
                    "var_13": 1,
                    "variable13": 1
                },
                "local_3a": {
                    "byte5": 1,
                    "byte8": 1,
                    "char5": 1,
                    "flag4": 1,
                    "local_variable14": 1,
                    "temp_char3": 1,
                    "temp_value": 1,
                    "temp_var20": 1,
                    "temp_var21": 2,
                    "temp_var22": 2,
                    "temp_var23": 2,
                    "temp_var26": 1,
                    "value13": 1,
                    "var11": 1,
                    "var16": 1,
                    "var_18": 1
                },
                "local_3b": {
                    "byte4": 1,
                    "byte7": 1,
                    "char4": 1,
                    "flag3": 1,
                    "local_variable13": 1,
                    "temp_char2": 1,
                    "temp_value": 1,
                    "temp_var19": 1,
                    "temp_var20": 2,
                    "temp_var21": 2,
                    "temp_var22": 2,
                    "temp_var25": 1,
                    "value12": 1,
                    "var10": 1,
                    "var15": 1,
                    "var_17": 1
                },
                "local_3c": {
                    "byte3": 1,
                    "byte6": 1,
                    "char3": 1,
                    "flag2": 1,
                    "local_variable12": 1,
                    "temp_byte4": 1,
                    "temp_char1": 1,
                    "temp_value": 1,
                    "temp_var18": 1,
                    "temp_var19": 2,
                    "temp_var20": 2,
                    "temp_var21": 2,
                    "temp_var24": 1,
                    "value11": 1,
                    "var14": 1,
                    "var9": 1,
                    "var_16": 1
                },
                "local_3d": {
                    "byte2": 1,
                    "byte5": 1,
                    "char2": 1,
                    "flag1": 1,
                    "local_variable11": 1,
                    "temp_byte3": 1,
                    "temp_index": 1,
                    "temp_value": 1,
                    "temp_var17": 1,
                    "temp_var18": 2,
                    "temp_var19": 2,
                    "temp_var20": 2,
                    "temp_var23": 1,
                    "value10": 1,
                    "var13": 1,
                    "var8": 1,
                    "var_15": 1
                },
                "local_44": {
                    "int_value": 1,
                    "local_var7": 1,
                    "local_var_11": 1,
                    "local_var_8": 1,
                    "local_variable10": 1,
                    "result_flag": 1,
                    "temp_u_int": 1,
                    "temp_value": 2,
                    "temp_var16": 1,
                    "temp_var17": 2,
                    "temp_var18": 3,
                    "temp_var19": 2,
                    "value9": 1,
                    "var12": 2,
                    "var2": 1,
                    "var7": 2,
                    "var8": 1,
                    "var_12": 1,
                    "variable12": 1,
                    "variable9": 1
                },
                "local_45": {
                    "bool1": 1,
                    "boolean1": 1,
                    "flag1": 2,
                    "flag2": 3,
                    "is_flag": 1,
                    "is_flag_true": 1,
                    "is_true": 1,
                    "local_var6": 1,
                    "local_var_10": 1,
                    "local_variable9": 1,
                    "temp_byte2": 1,
                    "temp_flag": 1,
                    "temp_var16": 1,
                    "temp_var17": 2,
                    "temp_var18": 2,
                    "var11": 2,
                    "var6": 2,
                    "var_20": 1,
                    "variable11": 1
                },
                "local_4c": {
                    "byte4": 1,
                    "calculation_result": 1,
                    "local_var5": 1,
                    "local_var_9": 1,
                    "local_variable8": 1,
                    "temp_var13": 1,
                    "temp_var15": 2,
                    "temp_var16": 3,
                    "temp_var17": 3,
                    "temp_var6": 1,
                    "temp_var7": 1,
                    "value1": 1,
                    "value8": 1,
                    "var10": 2,
                    "var5": 2,
                    "var7": 1,
                    "var_21": 1,
                    "variable10": 1,
                    "variable8": 1
                },
                "local_50": {
                    "byte3": 1,
                    "command_param1": 1,
                    "local_var4": 1,
                    "local_var_8": 1,
                    "local_variable7": 1,
                    "temp_var12": 1,
                    "temp_var14": 2,
                    "temp_var15": 3,
                    "temp_var16": 3,
                    "temp_var5": 1,
                    "temp_var6": 1,
                    "value2": 1,
                    "value7": 1,
                    "var4": 2,
                    "var6": 1,
                    "var9": 2,
                    "var_22": 1,
                    "variable7": 1,
                    "variable9": 1
                },
                "local_51": {
                    "byte2": 1,
                    "flag": 3,
                    "flag1": 2,
                    "flags": 1,
                    "is_true2": 1,
                    "local_var3": 1,
                    "local_var_7": 1,
                    "local_variable6": 1,
                    "temp_byte1": 1,
                    "temp_var13": 1,
                    "temp_var14": 3,
                    "temp_var15": 3,
                    "var3": 2,
                    "var8": 2,
                    "var_1": 1,
                    "variable8": 1
                },
                "local_52": {
                    "byte1": 2,
                    "byte_val": 1,
                    "byte_value": 1,
                    "char1": 1,
                    "character": 1,
                    "command_type": 1,
                    "config_type": 1,
                    "local_var2": 1,
                    "local_var_7": 1,
                    "local_variable5": 1,
                    "loop_counter_2": 1,
                    "temp_byte": 1,
                    "temp_char": 1,
                    "temp_var12": 1,
                    "temp_var13": 4,
                    "temp_var14": 3,
                    "var2": 2,
                    "var7": 2,
                    "variable7": 1
                },
                "local_58": {
                    "input2": 1,
                    "integer_value": 1,
                    "local_var1": 1,
                    "local_var_6": 2,
                    "local_variable4": 1,
                    "received_command": 1,
                    "temp_var11": 2,
                    "temp_var12": 4,
                    "temp_var13": 3,
                    "temp_var4": 1,
                    "temp_var5": 1,
                    "value6": 1,
                    "var1": 3,
                    "var6": 2,
                    "var_8": 1,
                    "variable6": 2
                },
                "local_7c": {
                    "array4": 2,
                    "local_var_3": 2,
                    "local_variable3": 1,
                    "temp_array_value": 1,
                    "temp_var10": 3,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "temp_var8": 2,
                    "temp_var9": 5,
                    "value3": 2,
                    "value5": 1,
                    "var3": 3,
                    "variable3": 2
                },
                "local_80": {
                    "array3": 2,
                    "local_var_2": 2,
                    "local_variable2": 1,
                    "temp_array_value": 1,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temp_var7": 2,
                    "temp_var8": 5,
                    "temp_var9": 3,
                    "value2": 2,
                    "value4": 1,
                    "var2": 3,
                    "var_23": 1,
                    "variable2": 2
                },
                "local_84": {
                    "array2": 2,
                    "local_var_1": 2,
                    "local_variable1": 1,
                    "temp_array_value": 1,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "temp_var6": 2,
                    "temp_var7": 5,
                    "temp_var8": 3,
                    "value1": 2,
                    "value3": 1,
                    "var1": 3,
                    "var_24": 1,
                    "variable1": 2
                },
                "local_94": {
                    "array1": 14,
                    "array_1": 1,
                    "array_var_1": 1,
                    "buffer_array": 1,
                    "calculation_parameters_array": 1,
                    "local_array1": 1,
                    "pointer_array": 1,
                    "stack_array1": 1,
                    "temp_array1": 5,
                    "var_25": 1
                },
                "param_1": {
                    "arg1": 1,
                    "config_param": 1,
                    "input": 7,
                    "input_data": 3,
                    "input_param": 9,
                    "input_parameter": 2,
                    "param": 3
                },
                "uStack_74": {
                    "array6": 1,
                    "local_var_5": 2,
                    "stack_var2": 1,
                    "stack_variable2": 1,
                    "temp5": 1,
                    "temp_array_value": 1,
                    "temp_stack_var2": 1,
                    "temp_var10": 2,
                    "temp_var11": 5,
                    "temp_var12": 3,
                    "value5": 1,
                    "value7": 1,
                    "var5": 3,
                    "variable5": 2
                },
                "uStack_78": {
                    "array5": 1,
                    "local_var_4": 2,
                    "stack_var1": 1,
                    "stack_variable1": 1,
                    "temp4": 1,
                    "temp_array_value": 1,
                    "temp_stack_var1": 1,
                    "temp_var10": 5,
                    "temp_var11": 3,
                    "temp_var9": 2,
                    "value4": 1,
                    "value6": 1,
                    "var4": 3,
                    "variable4": 2
                },
                "uVar2": {
                    "result": 2,
                    "temp": 4,
                    "temp_value": 2,
                    "temp_var": 3,
                    "temp_var1": 7,
                    "temp_var2": 3,
                    "temp_var_1": 2,
                    "temporary_var": 1,
                    "unsigned_variable": 1
                },
                "uVar4": {
                    "flag": 1,
                    "index": 1,
                    "switch_case_num": 1,
                    "temp": 1,
                    "temp1": 2,
                    "temp2": 1,
                    "temp_flag": 1,
                    "temp_var1": 2,
                    "temp_var2": 7,
                    "temp_var3": 3,
                    "temp_var_2": 3,
                    "unsigned_variable2": 1
                },
                "uVar5": {
                    "switch_case_value": 1,
                    "temp": 1,
                    "temp2": 3,
                    "temp3": 1,
                    "temp_var2": 3,
                    "temp_var3": 7,
                    "temp_var4": 3,
                    "temp_var_3": 3,
                    "unsigned_variable3": 1,
                    "value": 1
                },
                "uVar6": {
                    "calculation_result_temp": 1,
                    "temp1": 2,
                    "temp3": 2,
                    "temp4": 1,
                    "temp_var3": 3,
                    "temp_var4": 7,
                    "temp_var5": 3,
                    "temp_var_4": 3,
                    "unsigned_var6": 1,
                    "value1": 1
                },
                "uVar7": {
                    "calculation_result_temp2": 1,
                    "temp2": 2,
                    "temp4": 2,
                    "temp5": 1,
                    "temp_var4": 3,
                    "temp_var5": 7,
                    "temp_var6": 3,
                    "temp_var_5": 3,
                    "unsigned_var7": 1,
                    "value2": 1
                },
                "uVar8": {
                    "calculation_result": 1,
                    "temp3": 2,
                    "temp5": 2,
                    "temp6": 1,
                    "temp_var5": 3,
                    "temp_var6": 7,
                    "temp_var7": 3,
                    "temp_var_6": 3,
                    "unsigned_var8": 1,
                    "value3": 1
                }
            },
            "called": [
                "FUN_08008590",
                "FUN_0800923c",
                "FUN_08008cd8",
                "FUN_08002408",
                "FUN_08008894",
                "FUN_08008bf0",
                "FUN_08008cdc",
                "FUN_08009214",
                "FUN_08008eec",
                "FUN_08001f00",
                "FUN_0800b430",
                "FUN_0800056c",
                "FUN_08008c30",
                "FUN_080025e8",
                "FUN_0800981c",
                "FUN_08004bf4",
                "FUN_0800184c",
                "FUN_080098d0",
                "FUN_08002fd4",
                "FUN_0800525c",
                "FUN_08009798",
                "FUN_08004d7c",
                "FUN_08008ba0",
                "FUN_08001e98",
                "FUN_08009228",
                "FUN_08000478",
                "FUN_08000220"
            ],
            "calling": [
                "FUN_080039bc",
                "FUN_08003b98"
            ],
            "code": "\nchar process_data_080005b4(undefined4 input_param)\n\n{\n  int result;\n  undefined4 temp_var1;\n  char result;\n  uint temp_var2;\n  undefined4 temp_var3;\n  undefined8 temp_var4;\n  undefined8 temp_var5;\n  undefined8 temp_var6;\n  undefined4 array1 [4];\n  undefined4 temp_var7;\n  undefined4 temp_var8;\n  undefined4 temp_var9;\n  undefined4 temp_var10;\n  undefined4 temp_var11;\n  undefined4 array2 [6];\n  undefined4 temp_var12;\n  byte temp_var13;\n  undefined temp_var14;\n  undefined4 temp_var15;\n  undefined4 temp_var16;\n  undefined flag2;\n  uint temp_var18;\n  byte temp_var19;\n  byte temp_var19;\n  byte temp_var20;\n  byte temp_var23;\n  char temp_var22;\n  uint var9;\n  undefined4 temp_var26;\n  sbyte temp_var26;\n  char char2;\n  char temp_var29;\n  undefined4 temp_var29;\n  byte temp_var29;\n  ushort temp_var30;\n  uint temp_var33;\n  \n  if (DAT_20000ea9 == '\\x06') {\n    result = '\\f';\n  }\n  else {\n    temp_var14 = 0;\n    temp_var30 = 0;\n    temp_var29 = 0;\n    temp_var29 = 0xbf800000;\n    temp_var29 = '\\0';\n    char2 = '\\0';\n    FUN_0800b430(array2 + 3,0,0xc);\n    FUN_0800b430(array2,0,0xc);\n    DAT_20000e70 = '\\0';\n    temp_var26 = 0;\n    while (result = FUN_0800184c(&temp_var13,array2 + 6,input_param,&temp_var14), result != 0) {\n      temp_var4 = FUN_08008590(temp_var12);\n      temp_var4 = FUN_08009798((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n      temp_var33 = FUN_08008ba0((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n      if (temp_var13 == 0x47) {\n        switch(temp_var33) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 0x50:\n          temp_var26 = 2;\n          break;\n        case 4:\n        case 10:\n        case 0x1c:\n        case 0x1e:\n        case 0x35:\n        case 0x5c:\n          temp_var26 = 1;\n          break;\n        case 0x11:\n        case 0x12:\n        case 0x13:\n          temp_var26 = 3;\n          break;\n        case 0x14:\n        case 0x15:\n          temp_var26 = 7;\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          temp_var26 = 9;\n          break;\n        case 0x5a:\n        case 0x5b:\n          temp_var26 = 4;\n          break;\n        case 0x5d:\n        case 0x5e:\n          temp_var26 = 6;\n        }\n        switch(temp_var33) {\n        case 0:\n          DAT_20000e71 = '\\0';\n          break;\n        case 1:\n          DAT_20000e71 = '\\x01';\n          break;\n        case 2:\n          DAT_20000e71 = '\\x02';\n          break;\n        case 3:\n          DAT_20000e71 = '\\x03';\n          break;\n        case 4:\n          char2 = '\\x01';\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 10:\n          char2 = '\\x02';\n          break;\n        case 0x11:\n          FUN_08000478(0,1,2);\n          break;\n        case 0x12:\n          FUN_08000478(2,0,1);\n          break;\n        case 0x13:\n          FUN_08000478(1,2,0);\n          break;\n        case 0x14:\n          DAT_20000e73 = 1;\n          break;\n        case 0x15:\n          DAT_20000e73 = 0;\n          break;\n        case 0x1c:\n        case 0x1e:\n          temp_var1 = FUN_08008eec(temp_var12,0x41200000);\n          temp_var4 = FUN_08008590(temp_var1);\n          temp_var4 = FUN_08009798((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          temp_var33 = FUN_08008ba0((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          switch(temp_var33) {\n          case 0x118:\n            char2 = '\\x03';\n            break;\n          case 0x119:\n            char2 = '\\x04';\n            break;\n          default:\n            DAT_20000e70 = '\\x03';\n            break;\n          case 300:\n            char2 = '\\x05';\n            break;\n          case 0x12d:\n            char2 = '\\x06';\n          }\n          break;\n        case 0x35:\n          temp_var29 = '\\x01';\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          DAT_20000e8c = (char)temp_var33 - 0x36;\n          break;\n        case 0x50:\n          DAT_20000e71 = '\\x04';\n          break;\n        case 0x5a:\n          DAT_20000e74 = '\\x01';\n          break;\n        case 0x5b:\n          DAT_20000e74 = '\\0';\n          break;\n        case 0x5c:\n          temp_var1 = FUN_08008eec(temp_var12,0x41200000);\n          temp_var4 = FUN_08008590(temp_var1);\n          temp_var4 = FUN_08009798((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          temp_var33 = FUN_08008ba0((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          if (temp_var33 == 0x398) {\n            char2 = '\\a';\n          }\n          else if (temp_var33 == 0x399) {\n            char2 = '\\b';\n          }\n          else {\n            DAT_20000e70 = '\\x03';\n          }\n          break;\n        case 0x5d:\n          DAT_20000e72 = '\\x01';\n          break;\n        case 0x5e:\n          DAT_20000e72 = '\\0';\n        }\n      }\n      else if (temp_var13 == 0x4d) {\n        if (temp_var33 == 0x1e) {\nLAB_08000b96:\n          temp_var26 = 5;\n        }\n        else if ((int)temp_var33 < 0x1f) {\n          if ((int)temp_var33 < 3) {\n            if (-1 < (int)temp_var33) goto LAB_08000b96;\n          }\n          else if (temp_var33 - 3 < 3) {\n            temp_var26 = 8;\n          }\n        }\n        switch(temp_var33) {\n        case 0:\n          DAT_20000e75 = '\\x01';\n          break;\n        case 1:\n          break;\n        case 2:\n        case 0x1e:\n          DAT_20000e75 = '\\x02';\n          break;\n        case 3:\n          DAT_20000e76 = '\\x01';\n          break;\n        case 4:\n          DAT_20000e76 = -1;\n          break;\n        case 5:\n          DAT_20000e76 = '\\0';\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 7:\n          DAT_20000e77 = 2;\n          break;\n        case 8:\n          DAT_20000e77 = 1;\n          break;\n        case 9:\n          DAT_20000e77 = 0;\n        }\n      }\n      if (temp_var26 != 0) {\n        if (((int)(uint)temp_var30 >> temp_var26 & 1U) == 0) {\n          temp_var30 = temp_var30 | (ushort)(1 << temp_var26);\n        }\n        else {\n          DAT_20000e70 = '\\x05';\n        }\n        temp_var26 = 0;\n      }\n    }\n    result = DAT_20000e70;\n    if (DAT_20000e70 == '\\0') {\n      temp_var26 = 0;\n      var9 = 0;\n      temp_var22 = '\\0';\n      temp_var14 = 0;\nswitchD_08000d18_caseD_47:\n      result = FUN_0800184c(&temp_var13,array2 + 6,input_param,&temp_var14);\n      if (result != 0) {\n        switch(temp_var13) {\n        case 0x46:\n          result = FUN_0800923c(temp_var12,0);\n          if (result != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (DAT_20000e72 == '\\0') {\n            DAT_20000e78 = FUN_0800056c(temp_var12);\n          }\n          else {\n            temp_var29 = FUN_0800056c(temp_var12);\n          }\n          break;\n        case 0x47:\n        case 0x4d:\n        case 0x4e:\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n          temp_var2 = (uint)temp_var13;\n          temp_var1 = FUN_0800056c(temp_var12);\n          array2[temp_var2 - 0x49] = temp_var1;\n          break;\n        case 0x4c:\n          temp_var4 = FUN_08008590(temp_var12);\n          temp_var4 = FUN_08009798((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          temp_var22 = FUN_08008bf0((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          break;\n        case 0x50:\n          temp_var26 = temp_var12;\n          break;\n        case 0x52:\n          var9 = FUN_0800056c(temp_var12);\n          break;\n        case 0x53:\n          result = FUN_08009228(temp_var12,0);\n          if (result != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          break;\n        case 0x54:\n          result = FUN_08009228(temp_var12,0);\n          if (result != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          temp_var4 = FUN_08008590(temp_var12);\n          temp_var4 = FUN_08009798((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          DAT_20000e88 = FUN_08008bf0((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          break;\n        case 0x58:\n          array2[3] = FUN_0800056c(temp_var12);\n          temp_var29 = temp_var29 | 1;\n          break;\n        case 0x59:\n          array2[4] = FUN_0800056c(temp_var12);\n          temp_var29 = temp_var29 | 2;\n          break;\n        case 0x5a:\n          array2[5] = FUN_0800056c(temp_var12);\n          temp_var29 = temp_var29 | 4;\n        }\n        goto switchD_08000d18_caseD_47;\n      }\n      result = DAT_20000e70;\n      if (DAT_20000e70 == '\\0') {\n        if (DAT_20000ea9 != '\\a') {\n          FUN_0800525c((int)DAT_20000e76);\n          FUN_08000220(DAT_20000e77);\n        }\n        if ((temp_var30 & 0x200) != 0) {\n          result = FUN_08004d7c(DAT_20000e8c,&temp_var9);\n          if (result == 0) {\n            return '\\n';\n          }\n          DAT_20000e90 = temp_var9;\n          DAT_20000e94 = temp_var10;\n          DAT_20000e98 = temp_var11;\n        }\n        switch(char2) {\n        case '\\x01':\n          result = FUN_08009228(temp_var26,0);\n          if (result == 0) {\n            if (DAT_20000ea9 != '\\a') {\n              FUN_08002408(temp_var26);\n            }\n          }\n          else {\n            DAT_20000e70 = '\\x06';\n          }\n          break;\n        case '\\x02':\n          temp_var4 = FUN_08008590(temp_var26);\n          temp_var4 = FUN_08009798((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          temp_var33 = FUN_08008ba0((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          if ((((temp_var22 == '\\x02') || (temp_var22 == '\\x14')) && (-1 < (int)temp_var33)) &&\n             ((int)temp_var33 < 7)) {\n            if ((temp_var29 == 0) && (temp_var22 == '\\x02')) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              if ((int)temp_var33 < 1) {\n                temp_var33 = (uint)DAT_20000e8c;\n              }\n              else {\n                temp_var33 = temp_var33 - 1;\n              }\n              result = FUN_08004d7c(temp_var33 & 0xff,array1);\n              if (result == 0) {\n                return '\\n';\n              }\n              for (temp_var23 = 0; temp_var23 < 3; temp_var23 = temp_var23 + 1) {\n                if (((int)(uint)temp_var29 >> temp_var23 & 1U) != 0) {\n                  if (temp_var22 == '\\x14') {\n                    temp_var2 = (uint)temp_var23;\n                    temp_var1 = FUN_08008cd8(*(undefined4 *)(&DAT_20000e74 + (temp_var23 + 2) * 4),\n                                         array2[temp_var23 + 3]);\n                    array1[temp_var2] = temp_var1;\n                  }\n                  else {\n                    array1[temp_var23] = array2[temp_var23 + 3];\n                  }\n                }\n              }\n              FUN_08004bf4(temp_var33 & 0xff,array1);\n              if (temp_var33 == DAT_20000e8c) {\n                DAT_20000e90 = array1[0];\n                DAT_20000e94 = array1[1];\n                DAT_20000e98 = array1[2];\n              }\n            }\n          }\n          else {\n            DAT_20000e70 = '\\x03';\n          }\n          temp_var29 = 0;\n          break;\n        case '\\x03':\n        case '\\x05':\n          if (temp_var29 != 0) {\n            for (temp_var20 = 0; temp_var20 < 3; temp_var20 = temp_var20 + 1) {\n              if (((int)(uint)temp_var29 >> temp_var20 & 1U) == 0) {\n                array2[temp_var20 + 3] = *(undefined4 *)(&DAT_20000e74 + (temp_var20 + 2) * 4);\n              }\n              else if (DAT_20000e74 == '\\0') {\n                temp_var2 = (uint)temp_var20;\n                temp_var1 = FUN_08008cdc(array2[temp_var20 + 3],\n                                     *(undefined4 *)(&DAT_20000e74 + (temp_var20 + 2) * 4));\n                array2[temp_var2 + 3] = temp_var1;\n              }\n              else {\n                temp_var3 = array2[temp_var20 + 3];\n                temp_var1 = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (temp_var20 + 8) * 4),\n                                     *(undefined4 *)(&DAT_20000e74 + (temp_var20 + 10) * 4));\n                temp_var2 = (uint)temp_var20;\n                temp_var1 = FUN_08008cdc(temp_var3,temp_var1);\n                array2[temp_var2 + 3] = temp_var1;\n              }\n            }\n            FUN_08001e98(array2[3],array2[4],array2[5],DAT_20000ed0,0);\n          }\n          if (char2 == '\\x05') {\n            result = FUN_08004d7c(7,array1 + 3);\n            if (result == 0) {\n              return '\\n';\n            }\n          }\n          else {\n            result = FUN_08004d7c(6,array1 + 3);\n            if (result == 0) {\n              return '\\n';\n            }\n          }\n          FUN_08001e98(array1[3],temp_var7,temp_var8,DAT_20000ed0,0);\n          DAT_20000e7c = array1[3];\n          DAT_20000e80 = temp_var7;\n          DAT_20000e84 = temp_var8;\n          temp_var29 = 0;\n          break;\n        case '\\x04':\n        case '\\x06':\n          if (char2 == '\\x06') {\n            FUN_08004bf4(7,&DAT_20000e7c);\n          }\n          else {\n            FUN_08004bf4(6,&DAT_20000e7c);\n          }\n          break;\n        case '\\a':\n          if (temp_var29 == 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          else {\n            for (temp_var19 = 0; temp_var19 < 3; temp_var19 = temp_var19 + 1) {\n              if (((int)(uint)temp_var29 >> temp_var19 & 1U) != 0) {\n                temp_var1 = FUN_08008cd8(*(undefined4 *)(&DAT_20000e74 + (temp_var19 + 2) * 4),\n                                     *(undefined4 *)(&DAT_20000e70 + (temp_var19 + 8) * 4));\n                temp_var2 = (uint)temp_var19;\n                temp_var1 = FUN_08008cd8(temp_var1,array2[temp_var19 + 3]);\n                *(undefined4 *)(&DAT_20000e74 + (temp_var2 + 10) * 4) = temp_var1;\n              }\n            }\n          }\n          temp_var29 = 0;\n          break;\n        case '\\b':\n          FUN_0800b430(&DAT_20000e9c,0,0xc);\n        }\n        if (((temp_var30 & 4) != 0) || (temp_var29 != 0)) {\n          if ((DAT_20000e72 != '\\0') &&\n             ((result = FUN_08009228(temp_var29,0), result != 0 && (DAT_20000e71 != '\\x04')))) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (((temp_var29 != '\\0') && (DAT_20000e71 != '\\0')) && (DAT_20000e71 != '\\x01')) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (DAT_20000e70 != '\\0') {\n            return DAT_20000e70;\n          }\n          for (temp_var19 = 0; temp_var19 < 3; temp_var19 = temp_var19 + 1) {\n            if (((int)(uint)temp_var29 >> temp_var19 & 1U) == 0) {\n              array2[temp_var19 + 3] = *(undefined4 *)(&DAT_20000e74 + (temp_var19 + 2) * 4);\n            }\n            else if (temp_var29 == '\\0') {\n              if (DAT_20000e74 == '\\0') {\n                temp_var2 = (uint)temp_var19;\n                temp_var1 = FUN_08008cdc(array2[temp_var19 + 3],\n                                     *(undefined4 *)(&DAT_20000e74 + (temp_var19 + 2) * 4));\n                array2[temp_var2 + 3] = temp_var1;\n              }\n              else {\n                temp_var3 = array2[temp_var19 + 3];\n                temp_var1 = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (temp_var19 + 8) * 4),\n                                     *(undefined4 *)(&DAT_20000e74 + (temp_var19 + 10) * 4));\n                temp_var2 = (uint)temp_var19;\n                temp_var1 = FUN_08008cdc(temp_var3,temp_var1);\n                array2[temp_var2 + 3] = temp_var1;\n              }\n            }\n          }\n          switch(DAT_20000e71) {\n          case '\\0':\n            if (temp_var29 == 0) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              FUN_08001e98(array2[3],array2[4],array2[5],DAT_20000ed0,0);\n            }\n            break;\n          case '\\x01':\n            if (temp_var29 == 0) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              temp_var1 = temp_var29;\n              if (DAT_20000e72 == '\\0') {\n                temp_var1 = DAT_20000e78;\n              }\n              FUN_08001e98(array2[3],array2[4],array2[5],temp_var1,DAT_20000e72);\n            }\n            break;\n          case '\\x02':\n          case '\\x03':\n            temp_var29 = temp_var29 & ~(byte)(1 << DAT_20000e8b);\n            if ((temp_var29 == 0) ||\n               (((result = FUN_08009214(var9,0), result != 0 &&\n                 (result = FUN_08009214(array2[DAT_20000e89],0), result != 0)) &&\n                (result = FUN_08009214(array2[DAT_20000e8a],0), result != 0)))) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              result = FUN_08009214(var9,0);\n              if (result == 0) {\n                temp_var16 = FUN_08008cd8(array2[DAT_20000e89 + 3],\n                                        *(undefined4 *)(&DAT_20000e74 + (DAT_20000e89 + 2) * 4));\n                temp_var15 = FUN_08008cd8(array2[DAT_20000e8a + 3],\n                                        *(undefined4 *)(&DAT_20000e74 + (DAT_20000e8a + 2) * 4));\n                FUN_0800b430(array2,0,0xc);\n                temp_var1 = FUN_08008eec(var9,0x40800000);\n                temp_var1 = FUN_08008eec(temp_var1,var9);\n                temp_var3 = FUN_08008eec(temp_var16,temp_var16);\n                temp_var1 = FUN_08008cd8(temp_var1,temp_var3);\n                temp_var3 = FUN_08008eec(temp_var15,temp_var15);\n                temp_var18 = FUN_08008cd8(temp_var1,temp_var3);\n                result = FUN_08009228(temp_var18,0);\n                if (result != 0) {\n                  DAT_20000e70 = 4;\n                  return '\\x04';\n                }\n                temp_var4 = FUN_08008590(temp_var18);\n                temp_var4 = FUN_080098d0((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n                temp_var5 = FUN_08008590(temp_var16);\n                temp_var6 = FUN_08008590(temp_var15);\n                temp_var5 = FUN_0800981c((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20),(int)temp_var6,\n                                     (int)((ulonglong)temp_var6 >> 0x20));\n                temp_var4 = FUN_08008894((int)temp_var4,(uint)((ulonglong)temp_var4 >> 0x20) ^ 0x80000000,\n                                     (int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n                temp_var18 = FUN_08008c30((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n                if (DAT_20000e71 == '\\x03') {\n                  temp_var18 = temp_var18 ^ 0x80000000;\n                }\n                result = FUN_08009228(var9,0);\n                if (result != 0) {\n                  temp_var18 = temp_var18 ^ 0x80000000;\n                  var9 = var9 ^ 0x80000000;\n                }\n                temp_var1 = FUN_08008eec(temp_var15,temp_var18);\n                temp_var1 = FUN_08008cd8(temp_var16,temp_var1);\n                temp_var2 = (uint)DAT_20000e89;\n                temp_var1 = FUN_08008eec(temp_var1,0x3f000000);\n                array2[temp_var2] = temp_var1;\n                temp_var1 = FUN_08008eec(temp_var16,temp_var18);\n                temp_var1 = FUN_08008cdc(temp_var1,temp_var15);\n                temp_var2 = (uint)DAT_20000e8a;\n                temp_var1 = FUN_08008eec(temp_var1,0x3f000000);\n                array2[temp_var2] = temp_var1;\n              }\n              else {\n                temp_var4 = FUN_08008590(array2[DAT_20000e89]);\n                temp_var5 = FUN_08008590(array2[DAT_20000e8a]);\n                temp_var4 = FUN_0800981c((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20),(int)temp_var5,\n                                     (int)((ulonglong)temp_var5 >> 0x20));\n                var9 = FUN_08008c30((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n              }\n              flag2 = DAT_20000e71 == '\\x02';\n              temp_var1 = temp_var29;\n              if (DAT_20000e72 == '\\0') {\n                temp_var1 = DAT_20000e78;\n              }\n              FUN_08001f00(&DAT_20000e7c,array2 + 3,array2,DAT_20000e89,DAT_20000e8a,\n                           DAT_20000e8b,temp_var1,DAT_20000e72,var9,flag2);\n            }\n            break;\n          case '\\x04':\n            if (temp_var29 != 0) {\n              DAT_20000e70 = '\\x06';\n            }\n          }\n          if (DAT_20000e70 != '\\0') {\n            return DAT_20000e70;\n          }\n          DAT_20000e7c = array2[3];\n          DAT_20000e80 = array2[4];\n          DAT_20000e84 = array2[5];\n        }\n        result = DAT_20000e70;\n        if (DAT_20000e75 != '\\0') {\n          FUN_08002fd4();\n          DAT_20000eb8 = 0;\n          if (DAT_20000e75 == '\\x02') {\n            FUN_080025e8();\n            result = DAT_20000e70;\n          }\n          else {\n            DAT_20000e75 = '\\0';\n            result = DAT_20000e70;\n          }\n        }\n      }\n    }\n  }\n  return result;\n}\n\n",
            "current_name": "process_data_080005b4",
            "entrypoint": "0x080005b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080005b4": "process_data_080005b4",
                "auStack_70": "array2",
                "cVar3": "result",
                "iVar1": "result",
                "local_24": "temp_var33",
                "local_26": "temp_var30",
                "local_27": "temp_var29",
                "local_2c": "temp_var29",
                "local_2d": "temp_var29",
                "local_2e": "char2",
                "local_2f": "temp_var26",
                "local_34": "temp_var26",
                "local_38": "var9",
                "local_39": "temp_var22",
                "local_3a": "temp_var23",
                "local_3b": "temp_var20",
                "local_3c": "temp_var19",
                "local_3d": "temp_var19",
                "local_44": "temp_var18",
                "local_45": "flag2",
                "local_4c": "temp_var16",
                "local_50": "temp_var15",
                "local_51": "temp_var14",
                "local_52": "temp_var13",
                "local_58": "temp_var12",
                "local_7c": "temp_var9",
                "local_80": "temp_var8",
                "local_84": "temp_var7",
                "local_94": "array1",
                "param_1": "input_param",
                "uStack_74": "temp_var11",
                "uStack_78": "temp_var10",
                "uVar2": "temp_var1",
                "uVar4": "temp_var2",
                "uVar5": "temp_var3",
                "uVar6": "temp_var4",
                "uVar7": "temp_var5",
                "uVar8": "temp_var6"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800184c": {
            "additional_data": {
                "DAT_20000e70": {
                    "error_code": 1,
                    "error_flag": 1
                },
                "FUN_0800184c": {
                    "check_and_process_char": 1,
                    "check_and_process_character": 1,
                    "check_and_update_char": 1,
                    "check_and_update_character": 2,
                    "check_character": 1,
                    "check_character_validity": 1,
                    "check_valid_character": 1,
                    "copy_and_validate_character": 1,
                    "decode_and_check_char": 2,
                    "decode_and_validate_character": 2,
                    "decode_character": 2,
                    "decode_letter": 1,
                    "extract_and_check_character": 1,
                    "extract_character": 2,
                    "extract_character_from_binary": 1,
                    "extract_valid_byte": 1,
                    "find_character": 1,
                    "parse_character": 1,
                    "process_byte": 2,
                    "process_character": 2,
                    "validate_and_increment": 1,
                    "validate_and_update": 1,
                    "validate_and_update_character": 1
                },
                "FUN_08002638": {
                    "decode_and_validate_string": 1
                },
                "iVar1": {
                    "function_result": 1,
                    "result": 19,
                    "return_code": 1,
                    "return_value": 2,
                    "sub_function_result": 2,
                    "subfunction_result": 1,
                    "subroutine_result": 1,
                    "validation_result": 1
                },
                "param_1": {
                    "decoded_char": 1,
                    "decoded_character": 2,
                    "dest": 1,
                    "output": 7,
                    "output_buffer": 9,
                    "output_byte": 3,
                    "output_char": 2,
                    "output_character": 3,
                    "output_ptr": 2,
                    "result": 1
                },
                "param_2": {
                    "config": 1,
                    "flag": 1,
                    "input": 1,
                    "input_buffer": 1,
                    "input_data": 3,
                    "input_int": 1,
                    "input_param": 1,
                    "input_size": 1,
                    "input_value": 1,
                    "input_variable": 1,
                    "key": 1,
                    "param": 5,
                    "param2": 3,
                    "param_2": 2,
                    "param_value": 1,
                    "parameter": 1,
                    "size_param": 1,
                    "some_flag": 1,
                    "some_parameter": 1,
                    "some_value": 1,
                    "validation_parameter": 1
                },
                "param_3": {
                    "array": 1,
                    "base_address": 15,
                    "buffer_size": 1,
                    "character_map": 1,
                    "data": 1,
                    "data_buffer": 1,
                    "data_offset": 4,
                    "data_start": 1,
                    "input": 1,
                    "lookup_table": 1,
                    "memory": 1,
                    "start_address": 1,
                    "start_offset": 1,
                    "string_int_offset": 1
                },
                "param_4": {
                    "character": 1,
                    "character_offset": 1,
                    "character_ptr": 1,
                    "counter": 1,
                    "current_byte": 2,
                    "current_character": 1,
                    "current_index": 5,
                    "encoded_buffer": 1,
                    "encoded_character": 1,
                    "increment_address": 1,
                    "index": 3,
                    "index_ptr": 1,
                    "input": 3,
                    "input_buffer": 4,
                    "input_byte_address": 1,
                    "input_data": 1,
                    "position": 1,
                    "search_ptr": 1,
                    "string_offset": 1
                },
                "uVar2": {
                    "is_character_valid": 1,
                    "is_parsed": 1,
                    "is_success": 1,
                    "is_valid": 2,
                    "is_valid_byte": 1,
                    "is_valid_character": 2,
                    "output_result": 1,
                    "result": 1,
                    "return_value": 7,
                    "status": 1,
                    "success": 3,
                    "success_flag": 3,
                    "success_indicator": 1
                }
            },
            "called": [
                "FUN_08002638"
            ],
            "calling": [
                "FUN_080005b4"
            ],
            "code": "\nundefined4 check_and_update_char_0800184c(byte *output_buffer,undefined4 param,int base_address,byte *current_index)\n\n{\n  int result;\n  undefined4 return_value;\n  \n  if (*(char *)(base_address + (uint)*current_index) == '\\0') {\n    return_value = 0;\n  }\n  else {\n    *output_buffer = *(byte *)(base_address + (uint)*current_index);\n    if ((*output_buffer < 0x41) || (0x5a < *output_buffer)) {\n      DAT_20000e70 = 2;\n      return_value = 0;\n    }\n    else {\n      *current_index = *current_index + 1;\n      result = FUN_08002638(base_address,current_index,param);\n      if (result == 0) {\n        DAT_20000e70 = 1;\n        return_value = 0;\n      }\n      else {\n        return_value = 1;\n      }\n    }\n  }\n  return return_value;\n}\n\n",
            "current_name": "check_and_update_char_0800184c",
            "entrypoint": "0x0800184c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800184c": "check_and_update_char_0800184c",
                "iVar1": "result",
                "param_1": "output_buffer",
                "param_2": "param",
                "param_3": "base_address",
                "param_4": "current_index",
                "uVar2": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080018cc": {
            "additional_data": {
                "0xfffffaaf": {
                    "bit_mask": 1,
                    "mask": 1
                },
                "FUN_080018cc": {
                    "merge_and_set_bits": 1,
                    "modify_data": 1,
                    "set_bits_in_register": 2,
                    "set_bitwise_or": 1,
                    "set_flag_bits": 1,
                    "set_param": 1,
                    "set_param_and_mask": 1,
                    "set_param_bitmask": 1,
                    "set_permission_flags": 1,
                    "update_data": 5,
                    "update_data_and_mask": 1,
                    "update_data_flag": 1,
                    "update_data_in_register": 1,
                    "update_data_with_param": 2,
                    "update_flag_value": 1,
                    "update_flags": 2,
                    "update_global_value": 1,
                    "update_parameter": 1,
                    "update_parameter_with_flags": 1,
                    "update_register_value": 1,
                    "update_registry_value": 1,
                    "update_special_bits": 1,
                    "update_status": 1,
                    "update_value": 1
                },
                "_DAT_40021014": {
                    "current_value": 1,
                    "data": 1,
                    "data_register": 1,
                    "data_to_be_updated": 1,
                    "data_value": 2,
                    "data_variable": 2,
                    "existing_data": 7,
                    "existing_value": 2,
                    "flag_register": 1,
                    "flags": 1,
                    "flags_register": 1,
                    "global_value": 1,
                    "permission_flags": 1,
                    "register_data": 1,
                    "register_value": 3,
                    "registry_value": 1,
                    "updated_data_register": 1,
                    "updated_value": 1
                },
                "param_1": {
                    "data": 1,
                    "flag": 1,
                    "flags": 2,
                    "input_value": 3,
                    "new_data": 6,
                    "new_flag_value": 1,
                    "new_param": 3,
                    "new_param_value": 1,
                    "new_parameter": 1,
                    "new_value": 9,
                    "parameter": 1,
                    "value": 2
                },
                "param_2": {
                    "new_param2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001994"
            ],
            "code": "\n\n\nvoid update_data_with_param_080018cc(uint new_value)\n\n{\n  _DAT_40021014 = new_value | _DAT_40021014 & 0xfffffaaf;\n  return;\n}\n\n",
            "current_name": "update_data_with_param_080018cc",
            "entrypoint": "0x080018cc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080018cc": "update_data_with_param_080018cc",
                "param_1": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080018fc": {
            "additional_data": {
                "0xfffff55f": {
                    "mask": 1
                },
                "FUN_080018fc": {
                    "set_bitmask_value": 1,
                    "set_bits_in_global_variable": 1,
                    "set_bits_in_register": 1,
                    "update_data": 1,
                    "update_data_flag": 1,
                    "update_data_mask": 1,
                    "update_data_register": 1,
                    "update_data_with_mask": 1,
                    "update_flag_bits": 1,
                    "update_flag_value": 1,
                    "update_flags": 4,
                    "update_global_value": 1,
                    "update_memory": 2,
                    "update_memory_value": 3,
                    "update_param": 1,
                    "update_param_with_mask": 1,
                    "update_permissions": 1,
                    "update_permissions_bitwise": 1,
                    "update_register": 1,
                    "update_register_value": 3,
                    "update_status": 1,
                    "update_value_in_memory": 1
                },
                "_DAT_40021014": {
                    "bitmask_register": 1,
                    "current_value": 1,
                    "data_with_mask": 1,
                    "existing_data": 2,
                    "existing_value": 3,
                    "flags": 1,
                    "global_value": 1,
                    "global_variable": 1,
                    "memory_value": 3,
                    "original_data": 1,
                    "original_permissions": 1,
                    "original_value": 1,
                    "permissions_registry": 1,
                    "previous_value": 1,
                    "register_value": 6,
                    "status_register": 1
                },
                "param_1": {
                    "bitmask_value": 1,
                    "bits_to_set": 2,
                    "flags": 1,
                    "input_value": 4,
                    "mask": 1,
                    "new_data": 5,
                    "new_flag_value": 2,
                    "new_param": 2,
                    "new_permissions": 1,
                    "new_value": 11,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001994"
            ],
            "code": "\n\n\nvoid update_value_in_memory_080018fc(uint new_value)\n\n{\n  _DAT_40021014 = new_value | _DAT_40021014 & 0xfffff55f;\n  return;\n}\n\n",
            "current_name": "update_value_in_memory_080018fc",
            "entrypoint": "0x080018fc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080018fc": "update_value_in_memory_080018fc",
                "param_1": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800192c": {
            "additional_data": {
                "20000e4c": {
                    "bit_result": 1
                },
                "20000ee4": {
                    "input_value": 1
                },
                "DAT_20000e4c": {
                    "bit_flag": 1,
                    "bit_result": 1,
                    "bit_value": 2,
                    "converted_flag": 1,
                    "data_flag": 1,
                    "extracted_bit": 1,
                    "extracted_data_flag": 1,
                    "extracted_flag": 2,
                    "flag": 1,
                    "flag_extracted": 1,
                    "flag_status": 1,
                    "flag_value": 1,
                    "flag_variable": 1,
                    "is_bit_set": 1,
                    "is_bit_set_flag": 1,
                    "is_flag_bit_set": 1,
                    "is_flag_set": 5,
                    "is_third_bit_set": 1,
                    "output_flag": 2,
                    "setting_flag": 1,
                    "updated_flag": 1
                },
                "DAT_20000ee4": {
                    "binary_data": 1,
                    "binary_data_flag": 1,
                    "bit_variable": 1,
                    "data": 1,
                    "flag": 4,
                    "flag_data": 1,
                    "flag_register": 1,
                    "flags": 1,
                    "input_data": 4,
                    "input_flag": 5,
                    "input_flag_value": 1,
                    "input_flags": 1,
                    "input_value": 5,
                    "original_flag": 1,
                    "original_value": 1,
                    "register_value": 1
                },
                "FUN_0800192c": {
                    "check_bit_and_set": 1,
                    "check_bit_and_store": 1,
                    "check_flag": 1,
                    "check_flag_and_assign": 1,
                    "check_flag_bit": 1,
                    "check_flag_status": 2,
                    "convert_flag_to_uint": 1,
                    "detect_setting_flag": 1,
                    "determine_data_flag": 1,
                    "determine_flag_value": 1,
                    "extract_bit_from_flag": 1,
                    "extract_bit_from_flags": 2,
                    "extract_bit_from_value": 1,
                    "extract_bit_from_variable": 1,
                    "extract_bit_value": 1,
                    "extract_data_flag": 1,
                    "extract_flag_bits": 1,
                    "extract_flag_from_binary": 3,
                    "extract_flag_from_data": 1,
                    "extract_flag_from_register": 1,
                    "initialize_flag": 1,
                    "initialize_flag_variable": 2,
                    "set_flag_based_on_condition": 1,
                    "set_is_third_bit_set": 1,
                    "update_bit_flag": 1,
                    "update_flag_based_on_bitwise_and": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001ddc",
                "FUN_08004e30"
            ],
            "code": "\nvoid extract_bit_from_variable_0800192c(void)\n\n{\n  DAT_20000e4c = (uint)((DAT_20000ee4 & 8) != 0);\n  return;\n}\n\n",
            "current_name": "extract_bit_from_variable_0800192c",
            "entrypoint": "0x0800192c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800192c": "extract_bit_from_variable_0800192c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800195c": {
            "additional_data": {
                "FUN_0800195c": {
                    "check_and_execute": 1,
                    "check_and_execute_function": 1,
                    "check_and_set_flag": 2,
                    "check_and_update_configuration": 1,
                    "check_and_update_data": 4,
                    "check_and_update_flag": 2,
                    "check_and_update_flags": 1,
                    "check_and_update_power_state": 1,
                    "check_and_update_settings": 1,
                    "check_and_update_status": 1,
                    "check_flag_and_set_bit": 1,
                    "execute_function_if_condition_met": 1,
                    "initialize_flag_and_call_function": 1,
                    "process_data": 2,
                    "update_data": 4,
                    "update_data_and_flags": 1,
                    "update_data_if_needed": 1,
                    "update_data_if_not_already": 1,
                    "update_data_if_not_six_and_not_fifth_bit_set": 1,
                    "update_flag_if_not_six": 1,
                    "update_status": 2
                },
                "FUN_080025e8": {
                    "do_something": 1,
                    "execute_action": 1,
                    "execute_data_processing": 2,
                    "execute_post_condition_function": 1,
                    "execute_sub_function": 1,
                    "execute_update": 1,
                    "execute_update_logic": 1,
                    "initialize_process": 1,
                    "perform_action": 2,
                    "perform_clean_up": 1,
                    "perform_cleanup": 1,
                    "perform_data_update": 3,
                    "perform_initialization": 1,
                    "perform_power_state_update": 1,
                    "perform_task": 3,
                    "perform_update": 5,
                    "update_configuration": 1,
                    "update_data": 2,
                    "update_settings": 1,
                    "update_status": 1
                }
            },
            "called": [
                "FUN_080025e8"
            ],
            "calling": [
                "FUN_080074c8"
            ],
            "code": "\nvoid check_and_update_data_0800195c(void)\n\n{\n  if ((DAT_20000ea9 != '\\x06') && ((DAT_20000eaa & 0x20) == 0)) {\n    FUN_080025e8();\n    DAT_20000eaa = DAT_20000eaa | 0x40;\n  }\n  return;\n}\n\n",
            "current_name": "check_and_update_data_0800195c",
            "entrypoint": "0x0800195c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800195c": "check_and_update_data_0800195c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001994": {
            "additional_data": {
                "FUN_08001994": {
                    "perform_analysis": 1,
                    "process_data": 10,
                    "process_function": 1
                },
                "local_11": {
                    "char_var1": 1,
                    "count": 1,
                    "count_flag": 1,
                    "counter": 4,
                    "counter_flag": 1,
                    "flag_sum": 2,
                    "local_char": 1,
                    "local_flag": 3,
                    "local_flag2": 1,
                    "local_flag_2": 1,
                    "local_variable11": 1,
                    "new_value": 1,
                    "option_flag": 1,
                    "temp2": 1,
                    "temp_char": 3,
                    "temp_flag": 2,
                    "temp_flag2": 1,
                    "temp_var20": 1,
                    "value19": 1,
                    "value21": 1,
                    "var19": 1,
                    "var_19": 1
                },
                "local_18": {
                    "int_value6": 1,
                    "limit": 3,
                    "limit_value": 1,
                    "local_limit": 1,
                    "local_threshold_2": 1,
                    "local_val16": 1,
                    "local_var15": 1,
                    "local_var7": 1,
                    "maximum_value": 1,
                    "min_value": 3,
                    "minimum_value": 1,
                    "temp_var19": 1,
                    "threshold": 1,
                    "uint_var9": 1,
                    "value12": 1,
                    "value15": 2,
                    "value18": 4,
                    "value20": 1,
                    "value_18": 1,
                    "value_o": 1,
                    "var18": 2,
                    "var_18": 1
                },
                "local_1a": {
                    "constant2": 1,
                    "constant3": 3,
                    "constant5": 2,
                    "constant_4": 1,
                    "constant_c": 1,
                    "data13": 1,
                    "key": 1,
                    "local_short3": 1,
                    "local_temp_data": 1,
                    "local_val15": 1,
                    "local_var": 1,
                    "local_var6": 1,
                    "local_var_5": 1,
                    "local_variable10": 1,
                    "temp_data5": 1,
                    "temp_value_d": 1,
                    "temp_var18": 1,
                    "ushort_val3": 1,
                    "ushort_var3": 1,
                    "value17": 4,
                    "value19": 1,
                    "value_17": 1,
                    "var17": 2,
                    "var_17": 1
                },
                "local_20": {
                    "data12": 1,
                    "index3": 1,
                    "int_value5": 1,
                    "int_var5": 1,
                    "local_diff4": 1,
                    "local_index_2": 1,
                    "local_val14": 1,
                    "local_var14": 1,
                    "local_variable9": 1,
                    "offset4": 1,
                    "starting_value2": 1,
                    "temp_offset3": 1,
                    "temp_value2": 1,
                    "temp_value6": 1,
                    "temp_value7": 1,
                    "temp_value_c": 1,
                    "temp_var17": 1,
                    "value11": 1,
                    "value14": 2,
                    "value16": 4,
                    "value18": 1,
                    "value2": 1,
                    "value_16": 1,
                    "value_n": 1,
                    "var16": 2,
                    "var_16": 1
                },
                "local_24": {
                    "current_value": 1,
                    "data11": 1,
                    "index2": 1,
                    "int_value4": 1,
                    "int_var4": 1,
                    "local_diff3": 1,
                    "local_index_1": 1,
                    "local_val13": 1,
                    "local_var13": 1,
                    "local_variable8": 1,
                    "offset3": 1,
                    "starting_value1": 1,
                    "temp_offset2": 1,
                    "temp_value5": 1,
                    "temp_value6": 1,
                    "temp_value_b": 1,
                    "temp_var16": 1,
                    "value1": 1,
                    "value10": 1,
                    "value13": 2,
                    "value15": 4,
                    "value17": 1,
                    "value_15": 1,
                    "value_m": 1,
                    "var15": 2,
                    "var_15": 1
                },
                "local_28": {
                    "data10": 1,
                    "difference2": 2,
                    "index1": 1,
                    "int_value3": 1,
                    "int_var3": 1,
                    "local_counter_3": 1,
                    "local_diff2": 1,
                    "local_val12": 1,
                    "local_var12": 1,
                    "local_variable7": 1,
                    "negative_value": 1,
                    "offset2": 1,
                    "temp_offset1": 1,
                    "temp_value4": 1,
                    "temp_value5": 1,
                    "temp_value_a": 1,
                    "temp_var15": 1,
                    "value12": 2,
                    "value14": 4,
                    "value16": 1,
                    "value9": 1,
                    "value_14": 1,
                    "value_l": 1,
                    "var14": 2,
                    "var_14": 1
                },
                "local_2c": {
                    "data9": 1,
                    "diff": 1,
                    "difference": 2,
                    "difference1": 2,
                    "int_value2": 1,
                    "int_var2": 1,
                    "local_counter_2": 1,
                    "local_diff1": 1,
                    "local_val11": 1,
                    "local_var11": 1,
                    "local_variable6": 1,
                    "offset1": 1,
                    "offset_value": 1,
                    "result_5": 1,
                    "temp_value4": 1,
                    "temp_var14": 1,
                    "value11": 2,
                    "value13": 4,
                    "value15": 1,
                    "value8": 1,
                    "value_13": 1,
                    "value_k": 1,
                    "var13": 2,
                    "var_13": 1
                },
                "local_30": {
                    "constant4": 1,
                    "counter": 4,
                    "data8": 1,
                    "local_count": 1,
                    "local_counter_1": 1,
                    "local_val10": 1,
                    "local_var10": 1,
                    "sum": 1,
                    "temp_var13": 1,
                    "total": 1,
                    "total_value": 2,
                    "uint_val3": 1,
                    "uint_var8": 1,
                    "value10": 2,
                    "value12": 4,
                    "value14": 1,
                    "value7": 1,
                    "value9": 1,
                    "value_12": 1,
                    "value_j": 1,
                    "var12": 2,
                    "var_12": 1
                },
                "local_34": {
                    "constant3": 1,
                    "constant4": 1,
                    "constant_3": 1,
                    "count": 1,
                    "counter": 1,
                    "data7": 1,
                    "increment": 1,
                    "limit": 1,
                    "local_sum": 1,
                    "local_threshold": 1,
                    "local_val9": 1,
                    "local_var9": 1,
                    "result3": 1,
                    "temp_var12": 1,
                    "temp_var2": 1,
                    "uint_val2": 1,
                    "uint_var7": 1,
                    "value11": 4,
                    "value13": 1,
                    "value6": 1,
                    "value8": 1,
                    "value9": 2,
                    "value_11": 1,
                    "value_i": 1,
                    "var11": 2,
                    "var_11": 1
                },
                "local_36": {
                    "constant2": 4,
                    "constant3": 1,
                    "constant_2": 1,
                    "constant_b": 1,
                    "data2": 1,
                    "data6": 1,
                    "local_short2": 1,
                    "local_temp": 2,
                    "local_val8": 1,
                    "local_var5": 1,
                    "local_variable5": 1,
                    "result2": 1,
                    "temp_value": 1,
                    "temp_value4": 1,
                    "temp_var1": 1,
                    "temp_var11": 1,
                    "ushort_val2": 1,
                    "ushort_var2": 1,
                    "value10": 4,
                    "value12": 1,
                    "value_10": 1,
                    "var10": 2,
                    "var_10": 1
                },
                "local_3c": {
                    "control_var": 1,
                    "data5": 1,
                    "input": 1,
                    "local_data3": 1,
                    "local_result": 1,
                    "local_val7": 1,
                    "local_var8": 1,
                    "random_value": 2,
                    "result1": 1,
                    "result2": 1,
                    "result3": 1,
                    "result_4": 1,
                    "temp_value3": 1,
                    "temp_var10": 1,
                    "uint_val1": 1,
                    "uint_var6": 1,
                    "value11": 1,
                    "value5": 1,
                    "value7": 1,
                    "value8": 2,
                    "value9": 4,
                    "value_9": 1,
                    "value_h": 1,
                    "var9": 2,
                    "var_9": 1
                },
                "local_40": {
                    "current_value": 1,
                    "largest_value": 1,
                    "local_max": 2,
                    "local_max_value": 1,
                    "local_var7": 1,
                    "max_value": 2,
                    "max_value1": 1,
                    "max_var": 1,
                    "min_value": 1,
                    "result3": 1,
                    "temp_value": 1,
                    "temp_var9": 1,
                    "uint_var5": 1,
                    "value1": 1,
                    "value10": 1,
                    "value4": 1,
                    "value5": 1,
                    "value6": 1,
                    "value7": 2,
                    "value8": 4,
                    "value_8": 1,
                    "value_g": 1,
                    "var8": 2,
                    "var_8": 1
                },
                "local_44": {
                    "constant2": 1,
                    "data4": 1,
                    "local_result": 1,
                    "local_value4": 1,
                    "local_var4": 1,
                    "local_var6": 1,
                    "local_var_4": 1,
                    "local_variable4": 1,
                    "result2": 1,
                    "result4": 1,
                    "result_3": 1,
                    "temp4": 1,
                    "temp_data4": 1,
                    "temp_result": 1,
                    "temp_value3": 1,
                    "temp_var8": 1,
                    "undefined4_var1": 1,
                    "value6": 2,
                    "value7": 4,
                    "value9": 1,
                    "value_7": 1,
                    "value_f": 2,
                    "var7": 3,
                    "var_7": 1
                },
                "local_48": {
                    "calc_value": 1,
                    "data3": 1,
                    "int_value1": 1,
                    "int_var1": 1,
                    "local_result": 1,
                    "local_val6": 1,
                    "local_var3": 1,
                    "local_var5": 1,
                    "local_var_3": 1,
                    "local_variable3": 1,
                    "output": 1,
                    "result1": 1,
                    "result2": 1,
                    "result_2": 1,
                    "result_value2": 1,
                    "temp_data3": 1,
                    "temp_var7": 1,
                    "value5": 2,
                    "value6": 4,
                    "value8": 1,
                    "value_6": 1,
                    "value_e": 2,
                    "var6": 3,
                    "var_6": 1
                },
                "local_4c": {
                    "data2": 1,
                    "local_data2": 1,
                    "local_val5": 1,
                    "local_var2": 1,
                    "local_var4": 1,
                    "local_var_2": 1,
                    "max_value2": 2,
                    "min_value": 1,
                    "minimum_value": 1,
                    "result_value1": 1,
                    "temp_data2": 1,
                    "temp_var6": 1,
                    "uint_var4": 1,
                    "value4": 4,
                    "value5": 4,
                    "value7": 1,
                    "value_4": 1,
                    "value_5": 1,
                    "value_d": 2,
                    "var5": 3,
                    "var_5": 1
                },
                "local_4e": {
                    "constant1": 6,
                    "constant_1": 1,
                    "constant_a": 1,
                    "data1": 2,
                    "initial_value": 1,
                    "local_data1": 1,
                    "local_short1": 1,
                    "local_val4": 1,
                    "local_var1": 1,
                    "local_var_1": 1,
                    "local_variable2": 1,
                    "temp_data1": 1,
                    "temp_var5": 1,
                    "ushort_val1": 1,
                    "ushort_var1": 1,
                    "value4": 4,
                    "value6": 1,
                    "value_4": 1,
                    "var4": 3,
                    "var_4": 1
                },
                "local_54": {
                    "local_val3": 1,
                    "local_value3": 1,
                    "local_value_3": 1,
                    "local_var3": 1,
                    "max_value3": 1,
                    "temp_value3": 1,
                    "temp_var4": 1,
                    "uint_var3": 1,
                    "value3": 13,
                    "value5": 2,
                    "value_3": 2,
                    "value_c": 2,
                    "var3": 3,
                    "var_3": 1
                },
                "local_58": {
                    "local_val2": 1,
                    "local_value2": 1,
                    "local_value_2": 1,
                    "local_var2": 1,
                    "max_value2": 1,
                    "temp_value2": 1,
                    "temp_var3": 1,
                    "uint_var2": 1,
                    "value2": 13,
                    "value4": 2,
                    "value_2": 2,
                    "value_b": 2,
                    "var2": 3,
                    "var_2": 1
                },
                "local_5c": {
                    "local_val1": 1,
                    "local_value1": 1,
                    "local_value_1": 1,
                    "local_var1": 1,
                    "max_value1": 1,
                    "temp_value1": 1,
                    "temp_var2": 1,
                    "uint_var1": 1,
                    "value1": 13,
                    "value3": 2,
                    "value_1": 2,
                    "value_a": 2,
                    "var1": 3,
                    "var_1": 1
                },
                "local_61": {
                    "byte_value": 1,
                    "counter": 1,
                    "flag": 2,
                    "flag1": 1,
                    "local_byte": 1,
                    "local_flag": 8,
                    "local_variable1": 1,
                    "option_flags": 1,
                    "param1_temp_result": 1,
                    "result_flags": 1,
                    "temp1": 1,
                    "temp3": 1,
                    "temp_byte": 5,
                    "temp_flag": 3,
                    "temp_var1": 1,
                    "temp_var3": 1,
                    "var19": 1
                },
                "param_1": {
                    "byte_flag": 1,
                    "byte_param": 1,
                    "flag": 11,
                    "flag1": 1,
                    "flag_1": 1,
                    "flags": 15,
                    "input_flags": 1
                },
                "param_2": {
                    "bool_flag": 1,
                    "bool_param1": 1,
                    "char_flag1": 1,
                    "char_param1": 1,
                    "condition1": 3,
                    "condition_1": 1,
                    "condition_flag": 1,
                    "enable_feature1": 2,
                    "enable_flag1": 1,
                    "enable_option1": 1,
                    "enable_param2": 1,
                    "flag1": 2,
                    "flag2": 1,
                    "flag_2": 1,
                    "flag_param_1": 1,
                    "is_condition1_enabled": 1,
                    "is_inverted": 1,
                    "is_param2_enabled": 1,
                    "is_true": 1,
                    "option1": 2,
                    "param2": 3,
                    "param_2": 2,
                    "param_a": 1
                },
                "param_3": {
                    "bool_param2": 1,
                    "char_flag2": 1,
                    "char_param2": 1,
                    "condition2": 3,
                    "condition_2": 1,
                    "enable_feature2": 2,
                    "enable_flag2": 1,
                    "enable_option2": 1,
                    "enable_param3": 1,
                    "encryption_flag": 1,
                    "flag2": 2,
                    "flag3": 1,
                    "flag_3": 1,
                    "flag_param_2": 1,
                    "is_condition2_enabled": 1,
                    "is_false": 1,
                    "is_param3_enabled": 1,
                    "is_reversed": 1,
                    "option2": 2,
                    "param3": 3,
                    "param_3": 2,
                    "param_b": 1,
                    "use_xor": 1
                },
                "param_4": {
                    "address_param": 1,
                    "config": 1,
                    "data": 13,
                    "data_ptr": 1,
                    "input_param": 1,
                    "param": 2,
                    "param4": 4,
                    "param_4": 2,
                    "param_c": 1,
                    "some_data": 1,
                    "some_param": 1,
                    "undefined4_param": 1,
                    "unknown_param": 1,
                    "value": 1
                },
                "uVar1": {
                    "result": 15,
                    "result1": 8,
                    "result_1": 1,
                    "result_var1": 1,
                    "return_value": 1,
                    "temp1": 1
                },
                "uVar2": {
                    "max_value": 19,
                    "maximum_value": 1,
                    "result2": 4,
                    "result_var2": 1,
                    "temp": 1,
                    "temp2": 1
                },
                "uVar3": {
                    "result1": 1,
                    "result2": 3,
                    "result3": 3,
                    "result_var3": 1,
                    "temp1": 5,
                    "temp3": 1,
                    "temp_result": 2,
                    "temp_result1": 1,
                    "temp_value": 1,
                    "temp_value1": 4,
                    "temp_var1": 1,
                    "temp_var_1": 1,
                    "value1": 3
                },
                "uVar4": {
                    "result2": 1,
                    "result3": 3,
                    "result4": 3,
                    "result_var4": 1,
                    "temp2": 5,
                    "temp4": 1,
                    "temp_result2": 2,
                    "temp_value": 1,
                    "temp_value2": 5,
                    "temp_var2": 1,
                    "temp_var_2": 1,
                    "value2": 3
                }
            },
            "called": [
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_08002828",
                "FUN_08008894",
                "FUN_08008bf0",
                "FUN_08008eec",
                "FUN_080018fc",
                "FUN_08009054",
                "FUN_080095b8",
                "FUN_0800854c",
                "FUN_0800b430",
                "FUN_080078f4",
                "FUN_08009318",
                "FUN_08008640",
                "FUN_080018cc",
                "FUN_08008c30"
            ],
            "calling": [
                "FUN_08001d4c"
            ],
            "code": "\nvoid process_data_08001994(byte flags,char param2,char param3,undefined4 data)\n\n{\n  undefined4 result;\n  uint max_value;\n  undefined8 temp1;\n  undefined8 temp_value2;\n  byte local_flag;\n  uint value1;\n  uint value2;\n  uint value3;\n  ushort constant1;\n  uint value5;\n  int value6;\n  undefined4 value7;\n  uint value8;\n  uint value9;\n  ushort value10;\n  uint value11;\n  uint value12;\n  int value13;\n  int value14;\n  int value15;\n  int value16;\n  ushort value17;\n  uint value18;\n  char counter;\n  \n  counter = '\\0';\n  FUN_0800b430(&value1,0,0xc);\n  if ((flags & 1) != 0) {\n    counter = counter + '\\x01';\n    temp1 = FUN_08008590(DAT_20000ebc);\n    value1 = FUN_080095b8((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  }\n  if ((flags & 2) != 0) {\n    counter = counter + '\\x01';\n    temp1 = FUN_08008590(DAT_20000ec0);\n    value2 = FUN_080095b8((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  }\n  if ((flags & 4) != 0) {\n    counter = counter + '\\x01';\n    temp1 = FUN_08008590(DAT_20000ec4);\n    value3 = FUN_080095b8((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  }\n  max_value = value3;\n  if (value3 < value2) {\n    max_value = value2;\n  }\n  value8 = value1;\n  if (value1 < max_value) {\n    value8 = max_value;\n  }\n  temp1 = FUN_0800854c(value8);\n  temp_value2 = FUN_0800854c(counter);\n  temp_value2 = FUN_080098d0((int)temp_value2,(int)((ulonglong)temp_value2 >> 0x20));\n  temp1 = FUN_08008894((int)temp1,(int)((ulonglong)temp1 >> 0x20),(int)temp_value2,\n                       (int)((ulonglong)temp_value2 >> 0x20));\n  value7 = FUN_08008c30((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  result = FUN_08008eec(DAT_20000edc,value7);\n  result = FUN_08009054(result,0x453b8000);\n  temp1 = FUN_08008590(result);\n  temp1 = FUN_08009318((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  value6 = FUN_08008bf0((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  temp1 = FUN_0800854c(counter);\n  temp1 = FUN_080098d0((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  temp_value2 = FUN_08008590(data);\n  temp1 = FUN_08008640((int)temp1,(int)((ulonglong)temp1 >> 0x20),(int)temp_value2,\n                       (int)((ulonglong)temp_value2 >> 0x20));\n  result = FUN_08008c30((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  result = FUN_08008eec(value7,result);\n  result = FUN_08009054(0x4c64e1c0,result);\n  temp1 = FUN_08008590(result);\n  value5 = FUN_080095b8((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  value18 = 75000;\n  if (value5 < 75000) {\n    value18 = value5;\n  }\n  constant1 = DAT_20000ed4;\n  value17 = DAT_20000ed6 ^ DAT_20000ee6 & 0xaa0;\n  if (param2 == '\\0') {\n    value17 = value17 ^ 0xaa0;\n  }\n  FUN_080018fc(value17);\n  FUN_080018cc(constant1);\n  value14 = -(value8 >> 1);\n  value13 = value18 - DAT_20000ec9;\n  value12 = 0;\n  value11 = 10000;\n  local_flag = flags;\n  value15 = value14;\n  value16 = value14;\n  while( true ) {\n    value10 = constant1;\n    value9 = FUN_080078f4();\n    if (param3 == '\\0') {\n      value9 = value9 ^ 0x1e;\n    }\n    if (((local_flag & 1) != 0) && (value16 = value16 + value1, 0 < value16)) {\n      if ((value9 & 0x10) == 0) {\n        local_flag = local_flag & 0xfe;\n      }\n      else {\n        value10 = value10 ^ 0x10;\n      }\n      value16 = value16 - value8;\n    }\n    if (((local_flag & 2) != 0) && (value15 = value15 + value2, 0 < value15)) {\n      if ((value9 & 8) == 0) {\n        local_flag = local_flag & 0xfd;\n      }\n      else {\n        value10 = value10 ^ 0x440;\n      }\n      value15 = value15 - value8;\n    }\n    if (((local_flag & 4) != 0) && (value14 = value14 + value3, 0 < value14)) {\n      if ((value9 & 4) == 0) {\n        local_flag = local_flag & 0xfb;\n      }\n      else {\n        value10 = value10 ^ 0x100;\n      }\n      value14 = value14 - value8;\n    }\n    if ((local_flag == 0) || ((DAT_20000eaa & 0x10) != 0)) break;\n    FUN_080018cc(value10);\n    FUNC_08002828(DAT_20000ec9);\n    FUN_080018cc(constant1);\n    FUNC_08002828(value13);\n    if ((value5 < value18) && (value11 = value18 + value11, 20000 < value11)) {\n      value11 = value11 - 20000;\n      value12 = value6 + value12;\n      value18 = 60000000 / value12;\n      if (value18 < value5) {\n        value18 = value5;\n      }\n      value13 = value18 - DAT_20000ec9;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08001994",
            "entrypoint": "0x08001994",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001994": "process_data_08001994",
                "local_11": "counter",
                "local_18": "value18",
                "local_1a": "value17",
                "local_20": "value16",
                "local_24": "value15",
                "local_28": "value14",
                "local_2c": "value13",
                "local_30": "value12",
                "local_34": "value11",
                "local_36": "value10",
                "local_3c": "value9",
                "local_40": "value8",
                "local_44": "value7",
                "local_48": "value6",
                "local_4c": "value5",
                "local_4e": "constant1",
                "local_54": "value3",
                "local_58": "value2",
                "local_5c": "value1",
                "local_61": "local_flag",
                "param_1": "flags",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "data",
                "uVar1": "result",
                "uVar2": "max_value",
                "uVar3": "temp1",
                "uVar4": "temp_value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001d4c": {
            "additional_data": {
                "0": {
                    "flag_1": 1
                },
                "1": {
                    "operation_2": 1
                },
                "3": {
                    "operation_3": 1
                },
                "4": {
                    "operation_1": 1
                },
                "7": {
                    "operation_4": 1
                },
                "DAT_20000ee8": {
                    "data_3": 3,
                    "data_4": 1
                },
                "DAT_20000eec": {
                    "data1": 1,
                    "data_1": 3,
                    "data_2": 1
                },
                "DAT_20000ef0": {
                    "data2": 1,
                    "data_2": 3,
                    "data_3": 1
                },
                "FUNC_08002814": {
                    "handle_data": 1,
                    "perform_action": 1,
                    "perform_operation": 1,
                    "process": 1,
                    "process_data": 12,
                    "reverse_string": 1,
                    "update_data": 1,
                    "update_functionality": 1
                },
                "FUN_08001994": {
                    "configure": 1,
                    "execute_operation": 1,
                    "execute_task": 1,
                    "handle_data": 1,
                    "modify_data": 2,
                    "perform_operation": 3,
                    "perform_operation_on_data": 1,
                    "process_data": 3,
                    "send_data": 3,
                    "send_message": 1,
                    "update_data": 1,
                    "update_status": 1
                },
                "FUN_08001d4c": {
                    "execute_program": 1,
                    "execute_task": 1,
                    "extract_and_process_data": 1,
                    "initialize_and_process": 2,
                    "initialize_and_process_data": 16,
                    "initialize_application": 1,
                    "initialize_function": 1,
                    "perform_data_processing": 1,
                    "perform_operation": 1,
                    "process_data": 2,
                    "reverse_func": 1
                },
                "FUN_08005790": {
                    "initialize": 5,
                    "initialize_components": 1,
                    "initialize_important_components": 1,
                    "initialize_system": 5,
                    "perform_initial_setup": 1,
                    "perform_initialization": 4,
                    "perform_preprocessing": 1,
                    "pre_process_data": 1
                },
                "FUN_080057e4": {
                    "cleanup": 13,
                    "cleanup_and_finalize": 1,
                    "cleanup_application": 1,
                    "cleanup_operations": 1,
                    "cleanup_resources": 1,
                    "finalize_process": 1,
                    "finalize_processing": 1
                },
                "byte": {
                    "param_1": 1
                },
                "cVar1": {
                    "char_val": 1,
                    "decrement": 1,
                    "decremented_counter": 2,
                    "modified_loop_counter": 1,
                    "new_counter": 1,
                    "previous_countdown": 1,
                    "temp": 2,
                    "temp_char": 5,
                    "temp_count": 1,
                    "temp_counter": 3,
                    "updated_counter_value": 1
                },
                "char": {
                    "param_2": 1
                },
                "local_9": {
                    "count": 3,
                    "countdown": 1,
                    "counter": 8,
                    "loop_count": 1,
                    "loop_counter": 12
                },
                "param_1": {
                    "byte": 2,
                    "byte_count": 1,
                    "component_1": 1,
                    "config_type": 1,
                    "operation_code": 1,
                    "operation_type": 4,
                    "param_byte": 1,
                    "status_byte": 1,
                    "task_type": 1,
                    "type": 1
                },
                "param_2": {
                    "component_2": 1,
                    "flag1": 1,
                    "flag_1": 6,
                    "is_enabled": 1,
                    "is_true": 1,
                    "param1": 1,
                    "param2": 1,
                    "param_2": 2
                },
                "param_3": {
                    "component_3": 1,
                    "flag2": 1,
                    "flag_2": 6,
                    "is_false": 1,
                    "is_flag_set": 1,
                    "param2": 1,
                    "param3": 1,
                    "param_3": 2
                },
                "param_4": {
                    "data": 6,
                    "data_1": 1,
                    "data_address": 5,
                    "data_buffer": 1,
                    "data_ptr": 1
                },
                "undefined4": {
                    "param_4": 1
                }
            },
            "called": [
                "FUN_080057e4",
                "FUN_08005790",
                "FUN_08002814",
                "FUN_08001994"
            ],
            "calling": [
                "FUN_080024c4"
            ],
            "code": "\nvoid initialize_and_process_data_08001d4c(void)\n\n{\n  param_2 temp_char;\n  param_2 loop_counter;\n  \n  FUN_08005790();\n  FUN_08001994(4,1,0,DAT_20000eec);\n  FUN_08001994(3,1,0,DAT_20000eec);\n  FUNC_08002814(DAT_20000ef0);\n  loop_counter = '\\x02';\n  while( true ) {\n    temp_char = loop_counter + -1;\n    if (loop_counter == '\\0') break;\n    FUN_08001994(7,0,1,DAT_20000ee8);\n    FUNC_08002814(DAT_20000ef0);\n    loop_counter = temp_char;\n    if ('\\0' < temp_char) {\n      FUN_08001994(7,1,0,DAT_20000ee8);\n      FUNC_08002814(DAT_20000ef0);\n    }\n  }\n  FUN_080057e4();\n  return;\n}\n\n",
            "current_name": "initialize_and_process_data_08001d4c",
            "entrypoint": "0x08001d4c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001d4c": "initialize_and_process_data_08001d4c",
                "cVar1": "temp_char",
                "char": "param_2",
                "local_9": "loop_counter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001ddc": {
            "additional_data": {
                "DAT_20000ea8": {
                    "data_flag": 1,
                    "data_flag1": 1,
                    "data_flag_a": 1,
                    "flag1": 3,
                    "is_first_run": 1,
                    "is_flag_set": 1
                },
                "DAT_20000ea9": {
                    "data_flag2": 1,
                    "data_flag_b": 1,
                    "data_state": 1,
                    "flag2": 3,
                    "is_status_set": 1,
                    "state": 1
                },
                "DAT_20000eaa": {
                    "counter": 2,
                    "data_counter": 1,
                    "data_flag_e": 1,
                    "data_variable": 1,
                    "status": 1,
                    "variable3": 1
                },
                "DAT_20000eb8": {
                    "data_flag4": 1,
                    "data_flag_d": 1,
                    "data_value": 1,
                    "flag": 1,
                    "flag3": 1,
                    "is_flag_enabled": 1,
                    "special_flag": 1,
                    "variable2": 1
                },
                "DAT_20000ee4": {
                    "data": 2,
                    "data_config": 1,
                    "data_flag": 1,
                    "data_flag3": 1,
                    "data_flag_c": 1,
                    "flags": 1,
                    "variable": 1
                },
                "FUNC_08008244": {
                    "call_first_function": 1,
                    "call_function1": 1,
                    "do_something1": 1,
                    "execute_function1": 2,
                    "execute_function_a": 1,
                    "execute_initialization": 2,
                    "function1": 3,
                    "initialization_step1": 1,
                    "initialize_component1": 2,
                    "initialize_data": 1,
                    "initialize_function1": 2,
                    "initialize_hardware": 1,
                    "initialize_subsystem_a": 1,
                    "initialize_system": 2,
                    "perform_initial_setup": 1,
                    "perform_initialization": 2,
                    "reset_memory": 1
                },
                "FUNC_080082ba": {
                    "configure_subsystem1": 1,
                    "execute_cleanup": 1,
                    "execute_function_n": 1,
                    "execute_task3": 1,
                    "function4": 1,
                    "function_a": 1,
                    "initialize_function3": 1,
                    "initialize_library": 1,
                    "process_data": 1,
                    "process_input": 1,
                    "reverse_data": 1,
                    "reverse_operation": 1,
                    "update_status": 1
                },
                "FUN_080001f8": {
                    "analyze_data": 1,
                    "check_conditions": 1,
                    "configure_subsystem6": 1,
                    "do_something9": 1,
                    "execute_function5": 1,
                    "execute_function9": 1,
                    "execute_process": 1,
                    "execute_task5": 1,
                    "execute_task6": 1,
                    "execute_task7": 1,
                    "execute_task_6": 1,
                    "function9": 2,
                    "function_9": 1,
                    "function_f": 1,
                    "handle_events": 1,
                    "handle_input": 1,
                    "initialize_input": 1,
                    "initialize_variable": 1,
                    "perform_operation": 1,
                    "perform_operation6": 1,
                    "perform_operation_f": 1,
                    "perform_task7": 1,
                    "perform_task_b": 1,
                    "process_data": 1,
                    "process_data3": 1,
                    "process_data_d": 1,
                    "process_input": 1,
                    "reversal_operation6": 1,
                    "update_component6": 1
                },
                "FUN_080004ac": {
                    "apply_modifications": 1,
                    "configure_subsystem3": 1,
                    "do_something6": 1,
                    "execute_action": 1,
                    "execute_function2": 1,
                    "execute_function6": 1,
                    "execute_function_m": 1,
                    "execute_task2": 1,
                    "execute_task3": 1,
                    "execute_task5": 1,
                    "execute_task_3": 1,
                    "function6": 2,
                    "function_6": 1,
                    "function_c": 1,
                    "initialize_clock": 1,
                    "log_event": 1,
                    "perform_action": 1,
                    "perform_operation": 1,
                    "perform_operation3": 1,
                    "perform_operation_c": 1,
                    "perform_task4": 1,
                    "perform_validation": 1,
                    "process_data": 1,
                    "process_data1": 1,
                    "process_data_a": 1,
                    "process_input": 1,
                    "reversal_operation3": 1,
                    "update_component3": 1,
                    "update_screen": 1,
                    "validate_data": 1
                },
                "FUN_0800192c": {
                    "configure_subsystem7": 1,
                    "display_data": 1,
                    "do_something10": 1,
                    "execute_function10": 1,
                    "execute_function6": 1,
                    "execute_function_f": 1,
                    "execute_task6": 1,
                    "execute_task7": 1,
                    "execute_task8": 1,
                    "execute_task_7": 1,
                    "function10": 2,
                    "function_10": 1,
                    "function_g": 1,
                    "generate_report": 1,
                    "initialize_storage": 1,
                    "perform_operation7": 1,
                    "perform_operation_g": 1,
                    "perform_task8": 1,
                    "perform_task_c": 1,
                    "process_data4": 1,
                    "process_data_e": 1,
                    "process_input": 1,
                    "process_inputs": 1,
                    "process_variable": 1,
                    "reversal_operation7": 1,
                    "setup_environment": 1,
                    "update_component7": 1,
                    "update_configuration": 1,
                    "update_display": 1,
                    "validate_data": 1
                },
                "FUN_08001ddc": {
                    "execute_main_loop": 1,
                    "initialize": 2,
                    "initialize_and_execute": 1,
                    "initialize_and_run": 1,
                    "initialize_application": 6,
                    "initialize_module": 1,
                    "initialize_program": 5,
                    "initialize_system": 11,
                    "perform_operations": 1,
                    "run_application": 1
                },
                "FUN_0800283a": {
                    "configure_subsystem9": 1,
                    "do_something12": 1,
                    "execute_code": 1,
                    "execute_function12": 1,
                    "execute_function7": 1,
                    "execute_function_h": 1,
                    "execute_logic": 1,
                    "execute_operation": 1,
                    "execute_task6": 1,
                    "execute_task8": 1,
                    "execute_task9": 1,
                    "execute_task_9": 1,
                    "function12": 2,
                    "function_12": 1,
                    "function_i": 1,
                    "initialize_communication": 1,
                    "initialize_component5": 1,
                    "optimize_performance": 1,
                    "perform_action": 1,
                    "perform_operation9": 1,
                    "perform_operation_i": 1,
                    "perform_task": 1,
                    "perform_task10": 1,
                    "perform_task_e": 1,
                    "process_data": 1,
                    "process_data_g": 1,
                    "process_variables": 1,
                    "reversal_operation9": 1,
                    "update_component9": 1,
                    "update_configuration": 1
                },
                "FUN_08002f24": {
                    "analyze_data": 2,
                    "calculate_checksum": 1,
                    "configure_subsystem2": 1,
                    "do_something5": 1,
                    "execute_function1": 1,
                    "execute_function5": 1,
                    "execute_function_o": 1,
                    "execute_operation": 1,
                    "execute_task1": 1,
                    "execute_task2": 1,
                    "execute_task4": 1,
                    "execute_task_2": 1,
                    "execute_task_a": 1,
                    "function5": 2,
                    "function_5": 1,
                    "function_b": 1,
                    "initialize_config": 1,
                    "load_data": 2,
                    "perform_operation": 1,
                    "perform_operation2": 1,
                    "perform_operation_b": 1,
                    "perform_task3": 1,
                    "process_input": 1,
                    "reversal_operation2": 1,
                    "reverse_data2": 1,
                    "update_component2": 1,
                    "update_state": 1,
                    "update_subsystem_b": 1
                },
                "FUN_080039a0": {
                    "calculate_values": 1,
                    "check_condition_a": 1,
                    "check_conditions": 1,
                    "check_input": 1,
                    "configure_subsystem4": 1,
                    "do_something7": 1,
                    "execute_function7": 1,
                    "execute_function_d": 1,
                    "execute_task1": 1,
                    "execute_task3": 1,
                    "execute_task4": 1,
                    "execute_task_4": 1,
                    "function7": 2,
                    "function_7": 1,
                    "function_d": 1,
                    "handle_events": 1,
                    "initialize_display": 1,
                    "initialize_security": 1,
                    "perform_operation": 1,
                    "perform_operation4": 1,
                    "perform_operation_d": 1,
                    "perform_task2": 1,
                    "perform_task5": 1,
                    "process_data1": 1,
                    "process_data2": 1,
                    "process_data_b": 1,
                    "reversal_operation4": 1,
                    "update_component4": 1,
                    "validate_data": 2
                },
                "FUN_080039bc": {
                    "do_something13": 1,
                    "execute_default_action": 1,
                    "execute_function_k": 1,
                    "execute_task10": 1,
                    "execute_task9": 1,
                    "execute_task_10": 1,
                    "function14": 1,
                    "function_13": 1,
                    "function_k": 1,
                    "handle_error": 3,
                    "handle_errors": 1,
                    "handle_invalid_data": 1,
                    "initialize_devices": 1,
                    "normal_action": 1,
                    "perform_task11": 1,
                    "perform_task3": 1,
                    "perform_task_f": 1,
                    "process_data2": 1,
                    "process_data5": 1,
                    "process_data_h": 1,
                    "reset_state": 2,
                    "reversal_operation10": 1
                },
                "FUN_08003a74": {
                    "check_condition": 1,
                    "check_status": 1,
                    "cleanup_resources": 1,
                    "do_something14": 1,
                    "execute_function14": 1,
                    "execute_function_i": 1,
                    "execute_task1": 1,
                    "execute_task10": 1,
                    "execute_task11": 1,
                    "execute_task2": 1,
                    "execute_task_12": 1,
                    "function14": 1,
                    "function15": 1,
                    "function_14": 1,
                    "function_l": 1,
                    "perform_action1": 1,
                    "perform_action_b": 1,
                    "perform_operation11": 1,
                    "perform_operation_k": 1,
                    "perform_task": 1,
                    "perform_task1": 1,
                    "perform_task12": 1,
                    "perform_task4": 1,
                    "perform_task_g": 1,
                    "process_action1": 1,
                    "process_data": 1,
                    "process_data6": 1,
                    "process_data_batch": 1,
                    "process_queue": 1,
                    "process_request": 1,
                    "reversal_operation11": 1
                },
                "FUN_08003f34": {
                    "check_connection": 1,
                    "cleanup": 1,
                    "do_something15": 1,
                    "execute_function15": 1,
                    "execute_function_j": 1,
                    "execute_task10": 1,
                    "execute_task11": 1,
                    "execute_task12": 1,
                    "execute_task2": 1,
                    "execute_task_13": 1,
                    "function15": 1,
                    "function16": 1,
                    "function_15": 1,
                    "function_m": 1,
                    "handle_event": 1,
                    "initialize_component6": 1,
                    "monitor_system": 1,
                    "perform_action": 1,
                    "perform_action2": 1,
                    "perform_action_c": 1,
                    "perform_cleanup": 1,
                    "perform_operation12": 1,
                    "perform_operation_l": 1,
                    "perform_task13": 1,
                    "perform_task2": 1,
                    "perform_task5": 1,
                    "perform_task_h": 1,
                    "process_action2": 1,
                    "process_data_types": 1,
                    "reversal_operation12": 1,
                    "update_display": 1
                },
                "FUN_080041a0": {
                    "condition_check": 1,
                    "execute_action": 2,
                    "execute_function13": 1,
                    "execute_function3": 1,
                    "execute_function_l": 1,
                    "execute_logic": 1,
                    "execute_task_11": 1,
                    "function13": 2,
                    "function_j": 1,
                    "handle_error": 2,
                    "handle_exception": 1,
                    "perform_action": 2,
                    "perform_action_a": 1,
                    "perform_operation": 1,
                    "perform_operation10": 1,
                    "perform_operation_j": 1,
                    "perform_task": 1,
                    "reverse_action": 2,
                    "reverse_operation": 3,
                    "reverse_variable": 1
                },
                "FUN_080051b4": {
                    "call_function2": 1,
                    "call_second_function": 1,
                    "configure_hardware": 1,
                    "configure_settings": 3,
                    "do_something2": 1,
                    "execute_function2": 1,
                    "execute_function_b": 1,
                    "execute_process": 1,
                    "function2": 3,
                    "function_2": 1,
                    "initialize_component2": 2,
                    "initialize_components": 1,
                    "initialize_display": 1,
                    "initialize_function2": 2,
                    "initialize_function_2": 1,
                    "initialize_network": 1,
                    "initialize_subsystem2": 1,
                    "initialize_subsystem_b": 1,
                    "initialize_system": 1,
                    "load_configuration": 1,
                    "perform_setup": 2,
                    "perform_task1": 1,
                    "prepare_data": 1,
                    "process_data": 1
                },
                "FUN_08005238": {
                    "configure_subsystem5": 1,
                    "display_output": 1,
                    "do_something8": 1,
                    "execute_function4": 1,
                    "execute_function8": 1,
                    "execute_function_e": 1,
                    "execute_task": 1,
                    "execute_task4": 1,
                    "execute_task5": 1,
                    "execute_task_5": 1,
                    "execute_task_b": 1,
                    "finalize_process": 1,
                    "function8": 2,
                    "function_8": 1,
                    "function_e": 1,
                    "generate_output": 1,
                    "handle_interrupt": 1,
                    "initialize_display": 1,
                    "perform_action": 2,
                    "perform_actions": 1,
                    "perform_operation5": 1,
                    "perform_operation_e": 1,
                    "perform_task6": 1,
                    "process_data_c": 1,
                    "reversal_operation5": 1,
                    "reverse_data3": 1,
                    "reverse_input": 1,
                    "update_component5": 1,
                    "validate_data": 1
                },
                "FUN_08005814": {
                    "check_status": 1,
                    "cleanup": 1,
                    "configure_subsystem8": 1,
                    "do_something11": 1,
                    "execute_function11": 1,
                    "execute_function_g": 1,
                    "execute_task7": 1,
                    "execute_task8": 1,
                    "execute_task9": 1,
                    "execute_task_8": 1,
                    "function11": 2,
                    "function_11": 1,
                    "function_h": 1,
                    "initialize_component4": 1,
                    "initialize_variables": 1,
                    "perform_action": 1,
                    "perform_cleanup": 1,
                    "perform_operation8": 1,
                    "perform_operation_h": 1,
                    "perform_task1": 1,
                    "perform_task9": 1,
                    "perform_task_d": 1,
                    "perform_tasks": 1,
                    "process_data": 2,
                    "process_data_f": 1,
                    "reversal_operation8": 1,
                    "update_component8": 1
                },
                "FUN_0800583c": {
                    "call_function3": 1,
                    "call_third_function": 1,
                    "configure_device": 1,
                    "configure_settings": 1,
                    "do_something3": 1,
                    "execute_function3": 1,
                    "execute_function_c": 1,
                    "execute_tasks": 1,
                    "function3": 3,
                    "function_3": 1,
                    "initialize_component3": 2,
                    "initialize_components": 3,
                    "initialize_data": 1,
                    "initialize_data_structures": 1,
                    "initialize_function2": 1,
                    "initialize_function3": 2,
                    "initialize_function_3": 1,
                    "initialize_peripherals": 1,
                    "initialize_subsystem3": 1,
                    "initialize_subsystem_c": 1,
                    "initialize_system": 1,
                    "load_data": 2,
                    "perform_additional_setup": 1,
                    "perform_task2": 1
                },
                "FUN_08008244": {
                    "function_1": 1,
                    "initialize_function1": 1,
                    "initialize_function_1": 1,
                    "initialize_hardware": 1,
                    "initialize_subsystem1": 1,
                    "perform_preprocessing": 1
                },
                "FUN_080082ba": {
                    "check_condition": 1,
                    "configure_hardware": 1,
                    "do_something4": 1,
                    "execute_function2": 1,
                    "execute_function4": 1,
                    "execute_task1": 1,
                    "execute_task_1": 1,
                    "function4": 1,
                    "function_4": 1,
                    "handle_event": 1,
                    "perform_operation1": 1,
                    "perform_operation_a": 1,
                    "perform_task_a": 1,
                    "process_data": 1,
                    "reconfigure_subsystem_a": 1,
                    "reversal_operation1": 1,
                    "update_component1": 1
                },
                "FUN_0800b430": {
                    "initialize_data": 17,
                    "initialize_data_block": 1,
                    "initialize_data_buffer": 1,
                    "initialize_memory": 4,
                    "reset_data": 1,
                    "reset_data_buffer": 1,
                    "set_data": 1,
                    "set_initial_data": 1,
                    "set_initial_values": 1,
                    "set_memory": 1,
                    "set_memory_to_zero": 1,
                    "write_to_memory": 1
                },
                "configure_subsystem1": {
                    "configure_subsystem1": 1
                },
                "configure_subsystem2": {
                    "configure_subsystem2": 1
                },
                "configure_subsystem3": {
                    "configure_subsystem3": 1
                },
                "configure_subsystem4": {
                    "configure_subsystem4": 1
                },
                "configure_subsystem5": {
                    "configure_subsystem5": 1
                },
                "configure_subsystem6": {
                    "configure_subsystem6": 1
                },
                "configure_subsystem7": {
                    "configure_subsystem7": 1
                },
                "configure_subsystem8": {
                    "configure_subsystem8": 1
                },
                "configure_subsystem9": {
                    "configure_subsystem9": 1
                },
                "execute_action": {
                    "execute_action": 1
                },
                "execute_default_action": {
                    "execute_default_action": 1
                },
                "initialize_program": {
                    "initialize_program": 1
                },
                "initialize_subsystem1": {
                    "initialize_subsystem1": 1
                },
                "initialize_subsystem2": {
                    "initialize_subsystem2": 1
                },
                "initialize_subsystem3": {
                    "initialize_subsystem3": 1
                },
                "process_action1": {
                    "process_action1": 1
                },
                "process_action2": {
                    "process_action2": 1
                },
                "set_initial_data": {
                    "set_initial_data": 1
                }
            },
            "called": [
                "FUN_08005814",
                "FUN_08003f34",
                "FUN_080039a0",
                "FUN_080039bc",
                "FUN_08003a74",
                "FUN_080082ba",
                "FUN_08002f24",
                "FUN_0800283a",
                "FUN_0800583c",
                "FUN_080001f8",
                "FUN_080051b4",
                "FUN_0800b430",
                "FUN_0800192c",
                "FUN_080041a0",
                "FUN_08005238",
                "FUN_080004ac",
                "FUN_08008244"
            ],
            "calling": [
                "FUN_08007540"
            ],
            "code": "\nvoid initialize_system_08001ddc(void)\n\n{\n  FUNC_08008244();\n  FUNC_080051b4();\n  FUN_0800583c();\n  FUN_0800b430(&DAT_20000ea8,0,0x14);\n  DAT_20000ea8 = '\\x01';\n  DAT_20000ea9 = '\\x01';\n  do {\n    if (DAT_20000ea8 != '\\0') {\n      FUNC_080082ba();\n      FUN_08002f24();\n      FUN_080004ac();\n      FUN_080039a0();\n      FUN_08005238();\n      FUN_080001f8();\n      FUN_0800192c();\n      FUN_08005814();\n      FUN_0800283a();\n      DAT_20000ea8 = '\\0';\n      DAT_20000eaa = 0;\n      if ((DAT_20000ee4 & 2) != 0) {\n        DAT_20000eb8 = 1;\n      }\n      if ((DAT_20000ea9 == '\\x01') && ((DAT_20000ee4 & 0x10) != 0)) {\n        DAT_20000ea9 = '\\x06';\n      }\n      if (DAT_20000ea9 == '\\x06') {\n        FUN_080041a0(2);\n      }\n      else {\n        DAT_20000ea9 = '\\0';\n        FUN_080039bc();\n      }\n    }\n    FUN_08003a74();\n    FUN_08003f34();\n  } while( true );\n}\n\n",
            "current_name": "initialize_system_08001ddc",
            "entrypoint": "0x08001ddc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001ddc": "initialize_system_08001ddc"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001e98": {
            "additional_data": {
                "DAT_20000ea8": {
                    "check_flag": 1,
                    "data_flag2": 1,
                    "stop_flag": 1
                },
                "DAT_20000ea9": {
                    "data_flag": 1,
                    "data_flag1": 1,
                    "process_flag": 1
                },
                "DAT_20000eb8": {
                    "additional_flag": 2,
                    "data_flag3": 1
                },
                "FUN_08001e98": {
                    "check_and_execute": 7,
                    "check_and_execute_function": 1,
                    "check_and_execute_process": 2,
                    "check_and_execute_task": 1,
                    "check_and_process_data": 5,
                    "check_and_update_status": 2,
                    "check_status_and_process": 1,
                    "execute_code": 1,
                    "execute_function": 1,
                    "perform_operation": 1,
                    "process_data": 9
                },
                "FUN_08002fac": {
                    "check_condition": 9,
                    "check_data": 1,
                    "check_data_condition": 1,
                    "check_flag_status": 1,
                    "check_function": 1,
                    "check_if_zero": 1,
                    "check_process_status": 1,
                    "check_result": 1,
                    "check_return_value": 1,
                    "check_status": 1,
                    "is_condition_met": 1,
                    "is_data_valid": 1
                },
                "FUN_08003004": {
                    "execute_action": 1,
                    "execute_callback": 1,
                    "execute_function": 1,
                    "execute_if_flag_set": 1,
                    "execute_process": 2,
                    "handle_data": 1,
                    "handle_data_processing": 1,
                    "perform_action": 4,
                    "proces_data_helper": 1,
                    "process_arguments": 1,
                    "process_data": 3,
                    "process_data_helper": 1,
                    "process_data_internal": 1,
                    "process_valid_data": 1
                },
                "FUN_08003a74": {
                    "execute_action": 1,
                    "execute_preparation": 1,
                    "execute_sub_process": 2,
                    "execute_subfunction": 1,
                    "fetch_data": 3,
                    "initialize": 3,
                    "initialize_flag": 1,
                    "initialize_resources": 1,
                    "perform_action": 1,
                    "perform_operation": 1,
                    "perform_task": 1,
                    "pre_process_data": 1,
                    "process_data": 1,
                    "retrieve_data": 1,
                    "update_data": 1
                },
                "FUN_0800585c": {
                    "execute_additional_function": 1,
                    "execute_additional_process": 1,
                    "execute_task": 2,
                    "extra_processing": 1,
                    "handle_case": 1,
                    "handle_error": 1,
                    "handle_exception": 1,
                    "perform_action": 3,
                    "perform_additional_action": 1,
                    "perform_additional_actions": 1,
                    "perform_additional_tasks": 1,
                    "perform_cleanup": 3,
                    "process_data": 2,
                    "reverse_data": 1
                },
                "iVar1": {
                    "iteration_count": 1,
                    "loop_count": 1,
                    "loop_counter": 1,
                    "result": 14,
                    "return_value": 7,
                    "status": 1
                },
                "param_1": {
                    "arg1": 15,
                    "argument1": 1,
                    "data1": 2,
                    "input1": 6,
                    "input_1": 1,
                    "input_arg1": 1,
                    "input_param1": 3,
                    "param1": 1,
                    "value1": 1
                },
                "param_2": {
                    "arg2": 15,
                    "argument2": 1,
                    "data2": 2,
                    "input2": 6,
                    "input_2": 1,
                    "input_arg2": 1,
                    "input_param2": 3,
                    "param2": 1,
                    "value2": 1
                },
                "param_3": {
                    "arg3": 15,
                    "argument3": 1,
                    "data3": 2,
                    "input3": 6,
                    "input_3": 1,
                    "input_arg3": 1,
                    "input_param3": 3,
                    "param3": 1,
                    "value3": 1
                },
                "param_4": {
                    "arg4": 15,
                    "argument4": 1,
                    "data4": 2,
                    "input4": 6,
                    "input_4": 1,
                    "input_arg4": 1,
                    "input_param4": 3,
                    "param4": 1,
                    "value4": 1
                },
                "param_5": {
                    "arg5": 14,
                    "argument5": 1,
                    "flag": 10,
                    "input5": 1,
                    "input_param5": 3,
                    "param5": 1,
                    "status": 1
                }
            },
            "called": [
                "FUN_08003004",
                "FUN_08002fac",
                "FUN_0800585c",
                "FUN_08003a74"
            ],
            "calling": [
                "FUN_08001f00",
                "FUN_080005b4",
                "FUN_080024c4"
            ],
            "code": "\nvoid check_and_process_data_08001e98(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4,\n                 undefined arg5)\n\n{\n  int result;\n  \n  if (DAT_20000ea9 != '\\a') {\n    do {\n      FUN_08003a74();\n      if (DAT_20000ea8 != '\\0') {\n        return;\n      }\n      result = FUN_08002fac();\n    } while (result != 0);\n    FUN_08003004(arg1,arg2,arg3,arg4,arg5);\n    if (DAT_20000ea9 == '\\0') {\n      DAT_20000ea9 = '\\x02';\n    }\n    if (DAT_20000eb8 != '\\0') {\n      FUN_0800585c();\n    }\n  }\n  return;\n}\n\n",
            "current_name": "check_and_process_data_08001e98",
            "entrypoint": "0x08001e98",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001e98": "check_and_process_data_08001e98",
                "iVar1": "result",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "param_5": "arg5"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001f00": {
            "additional_data": {
                "FUN_08001e98": {
                    "process_data": 1
                },
                "FUN_08001f00": {
                    "decrypt_data": 1,
                    "process_data": 2
                },
                "FUN_080082d0": {
                    "calculate_82d0": 1
                },
                "FUN_080082d4": {
                    "calculate_82d4": 1
                },
                "FUN_08008590": {
                    "calculate_590": 1
                },
                "FUN_08008640": {
                    "calculate_8640": 1
                },
                "FUN_08008bf0": {
                    "calculate_bf0": 1
                },
                "FUN_08008c30": {
                    "calculate_c30": 1
                },
                "FUN_08008cd8": {
                    "calculate_cd8": 1
                },
                "FUN_08008cdc": {
                    "calculate_cdc": 1
                },
                "FUN_08008e44": {
                    "calculate_e44": 1
                },
                "FUN_08008eec": {
                    "calculate_eec": 1
                },
                "FUN_08009054": {
                    "calculate_9054": 1
                },
                "FUN_08009214": {
                    "check_condition_3": 1
                },
                "FUN_0800923c": {
                    "check_condition_1": 1
                },
                "FUN_08009250": {
                    "check_condition_2": 1
                },
                "FUN_08009410": {
                    "calculate_9410": 1
                },
                "FUN_080094c0": {
                    "calculate_94c0": 1
                },
                "FUN_080096e8": {
                    "calculate_96e8": 1
                },
                "FUN_0800981c": {
                    "calculate_981c": 1
                },
                "iVar3": {
                    "index": 1,
                    "result": 2,
                    "result_3": 1,
                    "status": 1,
                    "temp3": 6,
                    "temp_3": 2,
                    "temp_index": 1,
                    "temp_int": 1,
                    "temp_var": 5,
                    "temp_var1": 1,
                    "temp_var3": 5,
                    "temp_var_1": 1,
                    "temp_var_3": 1,
                    "var1": 1,
                    "var3": 2
                },
                "local_1c": {
                    "local18": 1,
                    "local_1c": 1,
                    "local_output18": 1,
                    "local_result_3": 1,
                    "local_var16": 2,
                    "local_var17": 1,
                    "local_var18": 5,
                    "local_var_18": 1,
                    "local_var_1c": 1,
                    "local_var_i": 1,
                    "temp20": 1,
                    "temp21": 1,
                    "temp23": 1,
                    "temp24": 2,
                    "temp_1c": 1,
                    "temp_uint2": 1,
                    "temp_var16": 2,
                    "temp_var17": 1,
                    "temp_var20": 1,
                    "temp_var21": 1,
                    "temp_var6": 1,
                    "temp_var_17": 1,
                    "temp_var_21": 1,
                    "temp_var_23": 1
                },
                "local_20": {
                    "final_result2": 1,
                    "local17": 1,
                    "local_20": 1,
                    "local_output17": 1,
                    "local_result_2": 1,
                    "local_var15": 2,
                    "local_var16": 1,
                    "local_var17": 5,
                    "local_var_17": 1,
                    "local_var_20": 1,
                    "local_var_h": 1,
                    "temp19": 1,
                    "temp20": 1,
                    "temp22": 1,
                    "temp23": 2,
                    "temp_20": 1,
                    "temp_var15": 2,
                    "temp_var16": 1,
                    "temp_var19": 1,
                    "temp_var20": 1,
                    "temp_var5": 1,
                    "temp_var_16": 1,
                    "temp_var_20": 1,
                    "temp_var_22": 1
                },
                "local_24": {
                    "final_result": 1,
                    "local16": 1,
                    "local_24": 1,
                    "local_output16": 1,
                    "local_result": 1,
                    "local_var14": 2,
                    "local_var15": 1,
                    "local_var16": 5,
                    "local_var_16": 1,
                    "local_var_24": 1,
                    "local_var_g": 1,
                    "temp18": 1,
                    "temp19": 1,
                    "temp21": 1,
                    "temp22": 2,
                    "temp_24": 1,
                    "temp_var14": 2,
                    "temp_var15": 1,
                    "temp_var18": 1,
                    "temp_var19": 1,
                    "temp_var4": 1,
                    "temp_var_15": 1,
                    "temp_var_19": 1,
                    "temp_var_21": 1
                },
                "local_26": {
                    "counter": 1,
                    "index": 2,
                    "local15": 1,
                    "local_26": 1,
                    "local_counter": 1,
                    "local_index": 1,
                    "local_iter": 1,
                    "local_output15": 1,
                    "local_var14": 1,
                    "local_var15": 5,
                    "local_var_15": 1,
                    "local_var_26": 1,
                    "local_var_f": 1,
                    "temp20": 1,
                    "temp21": 2,
                    "temp_26": 1,
                    "temp_index2": 1,
                    "temp_var_18": 1,
                    "temp_var_20": 1,
                    "ushort_temp": 1,
                    "ushort_var1": 1,
                    "ushort_var2": 3,
                    "ushort_var_2": 1
                },
                "local_27": {
                    "char_temp": 1,
                    "char_var": 1,
                    "char_var1": 2,
                    "char_var3": 1,
                    "char_var_1": 1,
                    "counter": 2,
                    "flag3": 1,
                    "local14": 1,
                    "local_27": 1,
                    "local_char1": 1,
                    "local_flag": 3,
                    "local_output14": 1,
                    "local_var14": 5,
                    "local_var_14": 1,
                    "local_var_27": 1,
                    "local_var_e": 1,
                    "temp19": 1,
                    "temp20": 2,
                    "temp_27": 1,
                    "temp_char": 1,
                    "temp_var_17": 1,
                    "temp_var_19": 1
                },
                "local_2c": {
                    "local13": 1,
                    "local_2c": 1,
                    "local_output13": 1,
                    "local_var13": 8,
                    "local_var_13": 2,
                    "local_var_2c": 1,
                    "local_var_d": 1,
                    "temp17": 1,
                    "temp18": 2,
                    "temp19": 2,
                    "temp_2c": 1,
                    "temp_var11": 1,
                    "temp_var13": 2,
                    "temp_var14": 1,
                    "temp_var17": 1,
                    "temp_var18": 1,
                    "temp_var3": 1,
                    "temp_var_14": 1,
                    "temp_var_16": 1
                },
                "local_30": {
                    "local12": 1,
                    "local_30": 1,
                    "local_output12": 1,
                    "local_var12": 8,
                    "local_var_12": 2,
                    "local_var_30": 1,
                    "local_var_c": 1,
                    "temp16": 1,
                    "temp17": 2,
                    "temp18": 2,
                    "temp_30": 1,
                    "temp_var10": 1,
                    "temp_var12": 2,
                    "temp_var13": 1,
                    "temp_var16": 1,
                    "temp_var17": 1,
                    "temp_var2": 1,
                    "temp_var_13": 1,
                    "temp_var_15": 1,
                    "temp_var_18": 1
                },
                "local_34": {
                    "local11": 1,
                    "local_34": 1,
                    "local_output11": 1,
                    "local_var11": 8,
                    "local_var_11": 2,
                    "local_var_34": 1,
                    "local_var_b": 1,
                    "temp15": 1,
                    "temp16": 2,
                    "temp17": 2,
                    "temp_34": 1,
                    "temp_uint1": 1,
                    "temp_var1": 1,
                    "temp_var11": 2,
                    "temp_var12": 1,
                    "temp_var15": 1,
                    "temp_var16": 1,
                    "temp_var_12": 1,
                    "temp_var_14": 1,
                    "temp_var_17": 1
                },
                "local_38": {
                    "local10": 1,
                    "local_38": 1,
                    "local_output10": 1,
                    "local_var10": 8,
                    "local_var_10": 2,
                    "local_var_38": 1,
                    "local_var_a": 1,
                    "temp14": 1,
                    "temp15": 2,
                    "temp16": 2,
                    "temp_38": 1,
                    "temp_array9": 1,
                    "temp_var10": 2,
                    "temp_var11": 1,
                    "temp_var14": 1,
                    "temp_var15": 1,
                    "temp_var9": 1,
                    "temp_var_11": 1,
                    "temp_var_13": 1,
                    "temp_var_16": 1
                },
                "local_3c": {
                    "local9": 1,
                    "local_3c": 1,
                    "local_output9": 1,
                    "local_var9": 9,
                    "local_var_3c": 1,
                    "local_var_9": 2,
                    "temp13": 1,
                    "temp14": 2,
                    "temp15": 2,
                    "temp_3c": 1,
                    "temp_array8": 1,
                    "temp_var10": 1,
                    "temp_var13": 1,
                    "temp_var14": 1,
                    "temp_var8": 1,
                    "temp_var9": 2,
                    "temp_var_10": 1,
                    "temp_var_12": 1,
                    "temp_var_15": 1
                },
                "local_40": {
                    "local8": 1,
                    "local_40": 1,
                    "local_output8": 1,
                    "local_var8": 9,
                    "local_var_40": 1,
                    "local_var_8": 2,
                    "temp12": 1,
                    "temp13": 2,
                    "temp14": 2,
                    "temp_40": 1,
                    "temp_array7": 1,
                    "temp_var12": 1,
                    "temp_var13": 1,
                    "temp_var7": 1,
                    "temp_var8": 2,
                    "temp_var9": 1,
                    "temp_var_11": 1,
                    "temp_var_14": 1,
                    "temp_var_9": 1
                },
                "local_42": {
                    "local7": 1,
                    "local_42": 1,
                    "local_output7": 1,
                    "local_var7": 9,
                    "local_var_42": 1,
                    "local_var_7": 2,
                    "temp11": 1,
                    "temp12": 2,
                    "temp13": 2,
                    "temp_42": 1,
                    "temp_u_short": 1,
                    "temp_var7": 2,
                    "temp_var8": 1,
                    "temp_var_10": 1,
                    "temp_var_13": 1,
                    "ushort_var": 4
                },
                "local_48": {
                    "local6": 1,
                    "local_48": 1,
                    "local_output6": 1,
                    "local_var6": 9,
                    "local_var_48": 1,
                    "local_var_6": 2,
                    "temp10": 1,
                    "temp11": 2,
                    "temp12": 2,
                    "temp_array6": 1,
                    "temp_var12": 1,
                    "temp_var6": 3,
                    "temp_var7": 1,
                    "temp_var_12": 1,
                    "temp_var_8": 1,
                    "temp_var_9": 1
                },
                "local_4c": {
                    "local5": 1,
                    "local_4c": 1,
                    "local_output5": 1,
                    "local_var5": 9,
                    "local_var_4c": 1,
                    "local_var_5": 2,
                    "temp10": 2,
                    "temp11": 2,
                    "temp9": 1,
                    "temp_4c": 1,
                    "temp_array5": 1,
                    "temp_var11": 2,
                    "temp_var5": 3,
                    "temp_var6": 1,
                    "temp_var_11": 1,
                    "temp_var_7": 1,
                    "temp_var_8": 1
                },
                "local_50": {
                    "local4": 1,
                    "local_50": 1,
                    "local_output4": 1,
                    "local_var4": 9,
                    "local_var_4": 2,
                    "local_var_50": 1,
                    "temp10": 2,
                    "temp8": 1,
                    "temp9": 2,
                    "temp_50": 1,
                    "temp_array4": 1,
                    "temp_var10": 2,
                    "temp_var4": 3,
                    "temp_var5": 1,
                    "temp_var_10": 1,
                    "temp_var_6": 1,
                    "temp_var_7": 1
                },
                "local_54": {
                    "local3": 1,
                    "local_54": 1,
                    "local_output3": 1,
                    "local_var3": 9,
                    "local_var_3": 2,
                    "local_var_54": 1,
                    "temp7": 1,
                    "temp8": 2,
                    "temp9": 2,
                    "temp_54": 1,
                    "temp_array3": 1,
                    "temp_var3": 3,
                    "temp_var4": 1,
                    "temp_var9": 2,
                    "temp_var_5": 1,
                    "temp_var_6": 1,
                    "temp_var_9": 1
                },
                "local_58": {
                    "local2": 1,
                    "local_58": 1,
                    "local_output2": 1,
                    "local_var2": 9,
                    "local_var_2": 2,
                    "local_var_58": 1,
                    "temp6": 1,
                    "temp7": 2,
                    "temp8": 2,
                    "temp_58": 1,
                    "temp_array2": 1,
                    "temp_var2": 3,
                    "temp_var3": 1,
                    "temp_var8": 2,
                    "temp_var_4": 1,
                    "temp_var_5": 1,
                    "temp_var_8": 1
                },
                "local_5c": {
                    "local1": 1,
                    "local_5c": 1,
                    "local_output1": 1,
                    "local_var1": 9,
                    "local_var_1": 2,
                    "local_var_5c": 1,
                    "temp5": 1,
                    "temp6": 2,
                    "temp7": 2,
                    "temp_5c": 1,
                    "temp_array1": 1,
                    "temp_var1": 3,
                    "temp_var2": 1,
                    "temp_var7": 2,
                    "temp_var_3": 1,
                    "temp_var_4": 1,
                    "temp_var_7": 1
                },
                "local_6c": {
                    "data_array": 1,
                    "local_array": 3,
                    "local_array1": 4,
                    "local_array_1": 2,
                    "output_array": 2,
                    "result": 1,
                    "result_array": 4,
                    "temp_arr": 3,
                    "temp_array": 9,
                    "temp_array1": 1,
                    "uint_array": 1
                },
                "param_1": {
                    "arg1": 5,
                    "data_pointer1": 1,
                    "inp1": 1,
                    "input1": 15,
                    "input_1": 7,
                    "input_param_1": 1,
                    "input_value_1": 1
                },
                "param_10": {
                    "arg10": 3,
                    "bool2": 1,
                    "bool_param2": 1,
                    "boolean_param2": 1,
                    "char_2": 1,
                    "char_arg2": 1,
                    "char_param2": 5,
                    "char_param4": 1,
                    "char_param_2": 1,
                    "char_value_2": 1,
                    "char_var2": 1,
                    "condition_2": 1,
                    "flag": 1,
                    "flag2": 2,
                    "flag_param2": 1,
                    "input_10": 1,
                    "input_param_4": 1,
                    "param4": 3,
                    "param_10": 3,
                    "param_d": 1
                },
                "param_2": {
                    "arg2": 5,
                    "data_pointer2": 1,
                    "inp_array": 1,
                    "input2": 5,
                    "input_2": 4,
                    "input_array": 14,
                    "input_param_2": 1
                },
                "param_3": {
                    "arg3": 5,
                    "data_pointer3": 1,
                    "inp2": 1,
                    "input2": 7,
                    "input3": 6,
                    "input_2": 2,
                    "input_3": 5,
                    "input_param_3": 1,
                    "input_size": 1,
                    "input_value_2": 1,
                    "param3": 1
                },
                "param_4": {
                    "arg4": 3,
                    "byte1": 10,
                    "byte_1": 3,
                    "byte_param1": 6,
                    "byte_param_1": 2,
                    "byte_val1": 1,
                    "byte_value_1": 2,
                    "byte_var1": 1,
                    "index1": 1,
                    "input_4": 1,
                    "offset_1": 1
                },
                "param_5": {
                    "arg5": 3,
                    "byte2": 10,
                    "byte_2": 3,
                    "byte_param2": 6,
                    "byte_param_2": 2,
                    "byte_val2": 1,
                    "byte_value_2": 2,
                    "byte_var2": 1,
                    "index2": 1,
                    "input_5": 1,
                    "offset_2": 1
                },
                "param_6": {
                    "arg6": 3,
                    "byte3": 9,
                    "byte_3": 3,
                    "byte_index": 1,
                    "byte_param3": 6,
                    "byte_param_3": 2,
                    "byte_val3": 1,
                    "byte_value_3": 2,
                    "byte_var3": 1,
                    "index3": 1,
                    "input_6": 1,
                    "offset_3": 1
                },
                "param_7": {
                    "arg4": 2,
                    "arg7": 3,
                    "char_param1": 1,
                    "input4": 2,
                    "input_4": 2,
                    "input_7": 1,
                    "input_param_1": 1,
                    "input_value_3": 1,
                    "param1": 3,
                    "param7": 1,
                    "param_7": 3,
                    "param_a": 1,
                    "undefined_arg1": 1,
                    "undefined_param": 1,
                    "undefined_param1": 2,
                    "undefined_param_1": 1,
                    "undefined_var1": 1,
                    "unk1": 1,
                    "unknown1": 1,
                    "unknown_param1": 2
                },
                "param_8": {
                    "arg8": 3,
                    "bool1": 1,
                    "bool_param1": 1,
                    "boolean_param1": 1,
                    "char_1": 1,
                    "char_arg": 1,
                    "char_param1": 5,
                    "char_param2": 1,
                    "char_param_1": 1,
                    "char_value_1": 1,
                    "char_var1": 1,
                    "condition_1": 1,
                    "flag1": 2,
                    "flag_param": 1,
                    "input_8": 1,
                    "input_param_2": 1,
                    "param2": 3,
                    "param_8": 3,
                    "param_b": 1,
                    "unknown2": 1
                },
                "param_9": {
                    "arg5": 2,
                    "arg9": 3,
                    "char_param3": 1,
                    "input5": 2,
                    "input_5": 2,
                    "input_9": 1,
                    "input_param_3": 1,
                    "input_value_4": 1,
                    "param3": 3,
                    "param9": 1,
                    "param_9": 3,
                    "param_c": 1,
                    "undefined_arg2": 1,
                    "undefined_param2": 3,
                    "undefined_param_2": 1,
                    "undefined_var2": 1,
                    "unk2": 1,
                    "unknown3": 1,
                    "unknown_param2": 2
                },
                "thunk_FUN_08009990": {
                    "thunk_9990": 1
                },
                "uVar1": {
                    "result1": 8,
                    "result_1": 4,
                    "temp1": 9,
                    "temp_1": 2,
                    "temp_var1": 5,
                    "temp_var_1": 1,
                    "var1": 2
                },
                "uVar2": {
                    "result2": 8,
                    "result_2": 4,
                    "temp2": 9,
                    "temp_2": 2,
                    "temp_var2": 5,
                    "temp_var_2": 1,
                    "var2": 2
                },
                "uVar4": {
                    "result3": 2,
                    "result_4": 1,
                    "temp": 1,
                    "temp3": 2,
                    "temp4": 6,
                    "temp_4": 2,
                    "temp_result": 2,
                    "temp_uint": 1,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "temp_var4": 5,
                    "temp_var_1": 1,
                    "temp_var_2": 2,
                    "temp_var_4": 1,
                    "var2": 1,
                    "var4": 2
                },
                "uVar5": {
                    "result1": 2,
                    "result3": 2,
                    "result4": 2,
                    "result_3": 1,
                    "result_5": 1,
                    "temp3": 1,
                    "temp4": 2,
                    "temp5": 4,
                    "temp_5": 2,
                    "temp_ulong1": 1,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temp_var5": 5,
                    "temp_var_2": 1,
                    "temp_var_3": 1,
                    "temp_var_5": 1,
                    "var3": 1,
                    "var5": 2
                },
                "uVar6": {
                    "result2": 2,
                    "result4": 2,
                    "result5": 2,
                    "result_4": 1,
                    "result_6": 1,
                    "temp4": 1,
                    "temp5": 2,
                    "temp6": 4,
                    "temp_6": 2,
                    "temp_ulong2": 1,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "temp_var6": 5,
                    "temp_var_3": 1,
                    "temp_var_4": 1,
                    "temp_var_6": 1,
                    "var4": 1,
                    "var6": 2
                }
            },
            "called": [
                "FUN_08008590",
                "FUN_0800981c",
                "FUN_08009410",
                "FUN_08008e44",
                "FUN_0800923c",
                "FUN_08008cd8",
                "FUN_08008bf0",
                "FUN_08008cdc",
                "thunk_FUN_08009990",
                "FUN_08009214",
                "FUN_08008eec",
                "FUN_080096e8",
                "FUN_08009054",
                "FUN_08001e98",
                "FUN_08009250",
                "FUN_080082d4",
                "FUN_08008640",
                "FUN_080082d0",
                "FUN_08008c30",
                "FUN_080094c0"
            ],
            "calling": [
                "FUN_080005b4"
            ],
            "code": "\nvoid process_data_08001f00(int input1,undefined4 *input_array,int input2,byte byte1,byte byte2,byte byte3\n                 ,undefined4 arg7,char char_param1,undefined4 undefined_param2,char char_param2)\n\n{\n  undefined4 temp1;\n  undefined4 temp2;\n  int temp3;\n  uint temp4;\n  undefined8 temp_var5;\n  undefined8 temp_var6;\n  uint temp_array [4];\n  undefined4 local_var1;\n  undefined4 local_var2;\n  undefined4 local_var3;\n  undefined4 local_var4;\n  undefined4 local_var5;\n  undefined4 local_var6;\n  ushort local_var7;\n  undefined4 local_var8;\n  undefined4 local_var9;\n  undefined4 local_var10;\n  uint local_var11;\n  undefined4 local_var12;\n  undefined4 local_var13;\n  char local_var14;\n  ushort local_var15;\n  undefined4 local_var16;\n  uint local_var17;\n  uint local_var18;\n  \n  local_var13 = FUN_08008cdc(*(undefined4 *)((uint)byte1 * 4 + input1),\n                          *(undefined4 *)((uint)byte1 * 4 + input2));\n  local_var12 = FUN_08008cdc(*(undefined4 *)((uint)byte2 * 4 + input1),\n                          *(undefined4 *)((uint)byte2 * 4 + input2));\n  local_var11 = FUN_08008cd8(input_array[byte3],*(undefined4 *)((uint)byte3 * 4 + input1));\n  local_var18 = *(uint *)((uint)byte1 * 4 + input2) ^ 0x80000000;\n  local_var17 = *(uint *)((uint)byte2 * 4 + input2) ^ 0x80000000;\n  local_var10 = FUN_08008cd8(input_array[byte1],local_var13);\n  local_var9 = FUN_08008cd8(input_array[byte2],local_var12);\n  temp1 = FUN_08008eec(local_var18,local_var9);\n  temp2 = FUN_08008eec(local_var17,local_var10);\n  temp1 = FUN_08008cd8(temp1,temp2);\n  temp_var5 = FUN_08008590(temp1);\n  temp1 = FUN_08008eec(local_var18,local_var10);\n  temp2 = FUN_08008eec(local_var17,local_var9);\n  temp1 = FUN_08008cdc(temp1,temp2);\n  temp_var6 = FUN_08008590(temp1);\n  temp_var5 = thunk_FUN_08009990((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20),(int)temp_var6,\n                             (int)((ulonglong)temp_var6 >> 0x20));\n  local_var16 = FUN_08008c30((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n  if (char_param2 == '\\0') {\n    temp3 = FUN_0800923c(local_var16,0);\n    if (temp3 != 0) {\n      temp_var5 = FUN_08008590(local_var16);\n      temp_var5 = FUN_080082d4((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20),0x54442d18,0x401921fb);\n      local_var16 = FUN_08008c30((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n    }\n  }\n  else {\n    temp3 = FUN_08009250(local_var16,0);\n    if (temp3 != 0) {\n      temp_var5 = FUN_08008590(local_var16);\n      temp_var5 = FUN_080082d0((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20),0x54442d18,0x401921fb);\n      local_var16 = FUN_08008c30((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n    }\n  }\n  temp1 = FUN_08008eec(local_var16,undefined_param2);\n  temp_var5 = FUN_08008590(temp1);\n  temp_var6 = FUN_08008590(local_var11 & 0x7fffffff);\n  temp_var5 = FUN_0800981c((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20),(int)temp_var6,\n                       (int)((ulonglong)temp_var6 >> 0x20));\n  local_var8 = FUN_08008c30((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n  temp3 = FUN_08009214(local_var8,0);\n  if (temp3 == 0) {\n    temp1 = FUN_08009054(local_var8,DAT_20000ed8);\n    temp_var5 = FUN_08008590(temp1);\n    temp_var5 = FUN_080094c0((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n    local_var7 = FUN_08008bf0((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n    if (char_param1 != '\\0') {\n      temp1 = FUN_08008e44(local_var7);\n      arg7 = FUN_08008eec(arg7,temp1);\n    }\n    temp1 = FUN_08008e44(local_var7);\n    local_var6 = FUN_08009054(local_var16,temp1);\n    temp1 = FUN_08008e44(local_var7);\n    local_var5 = FUN_08009054(local_var11,temp1);\n    temp_var5 = FUN_08008590(local_var6);\n    temp_var5 = FUN_08008640((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20),0,0x3fe00000);\n    temp_var6 = FUN_08008590(local_var6);\n    temp_var5 = FUN_08008640((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20),(int)temp_var6,\n                         (int)((ulonglong)temp_var6 >> 0x20));\n    temp_var5 = FUN_080082d0(0,0x3ff00000,(int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n    local_var4 = FUN_08008c30((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n    local_var3 = local_var6;\n    local_var14 = '\\0';\n    temp_array[byte3] = *(uint *)(input1 + (uint)byte3 * 4);\n    for (local_var15 = 1; local_var15 < local_var7; local_var15 = local_var15 + 1) {\n      if ((int)local_var14 < (int)(uint)DAT_20000efa) {\n        temp1 = FUN_08008eec(local_var18,local_var3);\n        temp2 = FUN_08008eec(local_var17,local_var4);\n        temp_array[3] = FUN_08008cdc(temp1,temp2);\n        temp1 = FUN_08008eec(local_var18,local_var4);\n        temp2 = FUN_08008eec(local_var17,local_var3);\n        local_var18 = FUN_08008cd8(temp1,temp2);\n        local_var17 = temp_array[3];\n        local_var14 = local_var14 + '\\x01';\n      }\n      else {\n        temp1 = FUN_08008e44(local_var15);\n        temp1 = FUN_08008eec(temp1,local_var6);\n        temp_var5 = FUN_08008590(temp1);\n        temp_var5 = FUN_08009410((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n        local_var2 = FUN_08008c30((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n        temp1 = FUN_08008e44(local_var15);\n        temp1 = FUN_08008eec(temp1,local_var6);\n        temp_var5 = FUN_08008590(temp1);\n        temp_var5 = FUN_080096e8((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n        local_var1 = FUN_08008c30((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n        temp1 = FUN_08008eec(*(uint *)((uint)byte1 * 4 + input2) ^ 0x80000000,local_var2);\n        temp2 = FUN_08008eec(*(undefined4 *)((uint)byte2 * 4 + input2),local_var1);\n        local_var18 = FUN_08008cdc(temp1,temp2);\n        temp1 = FUN_08008eec(*(uint *)((uint)byte1 * 4 + input2) ^ 0x80000000,local_var1);\n        temp2 = FUN_08008eec(*(undefined4 *)((uint)byte2 * 4 + input2),local_var2);\n        local_var17 = FUN_08008cd8(temp1,temp2);\n        local_var14 = '\\0';\n      }\n      temp4 = FUN_08008cdc(local_var13,local_var18);\n      temp_array[byte1] = temp4;\n      temp4 = FUN_08008cdc(local_var12,local_var17);\n      temp_array[byte2] = temp4;\n      temp4 = FUN_08008cdc(temp_array[byte3],local_var5);\n      temp_array[byte3] = temp4;\n      FUN_08001e98(temp_array[0],temp_array[1],temp_array[2],arg7,char_param1);\n      if (DAT_20000ea8 != '\\0') {\n        return;\n      }\n    }\n    FUN_08001e98(*input_array,input_array[1],input_array[2],arg7,char_param1);\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08001f00",
            "entrypoint": "0x08001f00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001f00": "process_data_08001f00",
                "iVar3": "temp3",
                "local_1c": "local_var18",
                "local_20": "local_var17",
                "local_24": "local_var16",
                "local_26": "local_var15",
                "local_27": "local_var14",
                "local_2c": "local_var13",
                "local_30": "local_var12",
                "local_34": "local_var11",
                "local_38": "local_var10",
                "local_3c": "local_var9",
                "local_40": "local_var8",
                "local_42": "local_var7",
                "local_48": "local_var6",
                "local_4c": "local_var5",
                "local_50": "local_var4",
                "local_54": "local_var3",
                "local_58": "local_var2",
                "local_5c": "local_var1",
                "local_6c": "temp_array",
                "param_1": "input1",
                "param_10": "char_param2",
                "param_2": "input_array",
                "param_3": "input2",
                "param_4": "byte1",
                "param_5": "byte2",
                "param_6": "byte3",
                "param_7": "arg7",
                "param_8": "char_param1",
                "param_9": "undefined_param2",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar4": "temp4",
                "uVar5": "temp_var5",
                "uVar6": "temp_var6"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002408": {
            "additional_data": {
                "0x20": {
                    "shift": 1
                },
                "0x32": {
                    "constant3": 1
                },
                "0x41a00000": {
                    "constant1": 1
                },
                "0x447a0000": {
                    "constant2": 1
                },
                "FUNC_08002814": {
                    "execute_operation1": 1,
                    "output_result": 1,
                    "perform_action": 3,
                    "print": 1
                },
                "FUN_080002a0": {
                    "do_something": 2,
                    "execute_operation3": 1,
                    "perform_operation": 1,
                    "print_value": 2
                },
                "FUN_080003a074": {
                    "another_check": 1
                },
                "FUN_08002408": {
                    "execute_task": 1,
                    "process_data": 24
                },
                "FUN_08002fd4": {
                    "execute_operation2": 1,
                    "initialize": 4,
                    "initialize_values": 1
                },
                "FUN_08003a74": {
                    "check_condition": 4,
                    "check_condition1": 1,
                    "check_finished": 1
                },
                "FUN_08008590": {
                    "calculate2": 1,
                    "calculate_first_value": 1,
                    "compute_value": 1,
                    "convert_value": 1,
                    "process_result3": 1,
                    "process_value": 1
                },
                "FUN_08008bf0": {
                    "calculate4": 1,
                    "calculate_average": 1,
                    "calculate_third_value": 1,
                    "modify_value": 1,
                    "process_value": 2
                },
                "FUN_08008cd8": {
                    "calculate": 1,
                    "calculate6": 1,
                    "calculate_fourth_value": 1,
                    "combine_values": 3
                },
                "FUN_08008e44": {
                    "calculate5": 1,
                    "calculate_fifth_value": 1,
                    "calculate_value": 1,
                    "compute2": 1,
                    "multiply_value": 2
                },
                "FUN_08008eec": {
                    "calculate1": 1,
                    "calculate_value": 2,
                    "compute3": 1,
                    "get_first_value": 1,
                    "get_value": 1
                },
                "FUN_080094c0": {
                    "calculate3": 1,
                    "calculate_second_value": 1,
                    "calculate_sum": 1,
                    "modify_value": 1,
                    "process_result2": 1,
                    "transform_value": 1
                },
                "int": {
                    "integer": 1
                },
                "local_12": {
                    "count": 8,
                    "counter": 22,
                    "loop_count": 1
                },
                "param_1": {
                    "data": 3,
                    "input": 13,
                    "input_data": 10,
                    "input_param": 2,
                    "input_parameter": 3
                },
                "uVar1": {
                    "calculated_value1": 1,
                    "result": 17,
                    "result1": 7,
                    "result_1": 1,
                    "value": 1
                },
                "uVar2": {
                    "calculated_value2": 1,
                    "result1": 5,
                    "result2": 6,
                    "temp1": 9,
                    "temp_1": 1,
                    "temp_var1": 3,
                    "value": 1,
                    "value1": 2,
                    "value_1": 1,
                    "var1": 2
                },
                "uVar3": {
                    "calculated_value3": 1,
                    "calculation": 1,
                    "result2": 4,
                    "result3": 6,
                    "temp2": 9,
                    "temp_2": 1,
                    "temp_var2": 3,
                    "value2": 2,
                    "value_2": 1,
                    "var2": 2
                },
                "uVar4": {
                    "calculated_value4": 1,
                    "processed_data": 1,
                    "result2": 3,
                    "result3": 4,
                    "result4": 6,
                    "result64": 1,
                    "result_2": 1,
                    "result_value": 1,
                    "temp3": 8,
                    "temp_var3": 3,
                    "var3": 2
                },
                "uint": {
                    "unsignedint": 1
                },
                "ulonglong": {
                    "ulonglong": 1
                }
            },
            "called": [
                "FUN_08008590",
                "FUN_08008e44",
                "FUN_080002a0",
                "FUN_08003a74",
                "FUN_08002fd4",
                "FUN_08008cd8",
                "FUN_08008bf0",
                "FUN_08002814",
                "FUN_08008eec",
                "FUN_080094c0"
            ],
            "calling": [
                "FUN_080005b4"
            ],
            "code": "\nvoid process_data_08002408(undefined4 input)\n\n{\n  undefined2 result;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined8 temp3;\n  ushort counter;\n  \n  temp1 = FUN_08008eec(input,0x41a00000);\n  temp3 = FUN_08008590(temp1);\n  temp3 = FUN_080094c0((integer)temp3,(integer)((ulonglong)temp3 >> 0x20));\n  counter = FUN_08008bf0((integer)temp3,(integer)((ulonglong)temp3 >> 0x20));\n  FUN_08002fd4();\n  temp1 = FUN_08008eec(input,0x447a0000);\n  temp2 = FUN_08008e44((unsignedint)counter * 0x32);\n  temp1 = FUN_08008cd8(temp1,temp2);\n  temp3 = FUN_08008590(temp1);\n  temp3 = FUN_080094c0((integer)temp3,(integer)((ulonglong)temp3 >> 0x20));\n  result = FUN_08008bf0((integer)temp3,(integer)((ulonglong)temp3 >> 0x20));\n  FUNC_08002814(result);\n  while ((counter != 0 && (FUN_08003a74(), DAT_20000ea8 == '\\0'))) {\n    FUN_080002a0(0x32);\n    counter = counter - 1;\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08002408",
            "entrypoint": "0x08002408",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002408": "process_data_08002408",
                "int": "integer",
                "local_12": "counter",
                "param_1": "input",
                "uVar1": "result",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "uVar4": "temp3",
                "uint": "unsignedint"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080024c4": {
            "additional_data": {
                "DAT_20000e4c": {
                    "data2": 2,
                    "flag": 1,
                    "flag_value": 1,
                    "is_error": 1,
                    "is_flag8_set": 1,
                    "result": 2
                },
                "DAT_20000ea8": {
                    "condition": 1,
                    "data3": 1,
                    "flag": 2,
                    "is_flag0_set": 1,
                    "is_flag9_set": 1,
                    "option_flag": 1
                },
                "DAT_20000ea9": {
                    "count": 1,
                    "data1": 2,
                    "data_size": 3,
                    "error_code": 1,
                    "num_iterations": 1
                },
                "DAT_20000eac": {
                    "buffer": 1,
                    "memory_address": 1
                },
                "DAT_20000ee4": {
                    "another_flag": 1,
                    "data5": 1,
                    "data7": 1,
                    "flag_settings": 1,
                    "flags": 1,
                    "flags2": 1,
                    "options2": 1,
                    "variable3": 1
                },
                "DAT_20000ee6": {
                    "data1": 1,
                    "data4": 1,
                    "flag_values": 1,
                    "flags": 1,
                    "flags2": 1,
                    "option_bitmask_flag": 1,
                    "options": 1,
                    "variable2": 1
                },
                "DAT_20000eea": {
                    "variable1": 1
                },
                "DAT_20000eec": {
                    "data2": 1,
                    "data3": 1,
                    "data4": 1,
                    "data6": 1,
                    "display_settings": 1,
                    "operation_size": 1,
                    "result": 1,
                    "variable4": 1
                },
                "DAT_20000ef4": {
                    "data": 1,
                    "data1": 1,
                    "data3": 1,
                    "data5": 1,
                    "result_value": 1,
                    "value": 1
                },
                "DAT_20000efa": {
                    "data2": 1
                },
                "FUN_08001d4c": {
                    "configure": 1,
                    "do_something": 1,
                    "execute_function1": 1,
                    "function1": 1,
                    "initialize": 2,
                    "initialize_components": 1,
                    "initialize_data": 1,
                    "initialize_data_2": 1,
                    "initialize_first_functions": 1,
                    "initialize_flags": 1,
                    "initialize_function1": 2,
                    "initialize_helper": 1,
                    "initialize_memory": 1,
                    "initialize_resources": 1,
                    "initialize_something": 1,
                    "perform_action5": 1,
                    "perform_initialization": 2,
                    "perform_task": 1,
                    "perform_task1": 1,
                    "perform_task_a": 1,
                    "pre_process_data": 1,
                    "prepare_data": 2,
                    "setup": 1,
                    "setup_data": 1
                },
                "FUN_08001e98": {
                    "display_result": 1,
                    "do_operation": 1,
                    "execute_command": 1,
                    "execute_instructions": 1,
                    "execute_operation": 1,
                    "execute_step2": 1,
                    "execute_sub_function2": 1,
                    "output_result": 1,
                    "perform_action": 1,
                    "perform_action2": 1,
                    "perform_action3": 1,
                    "perform_operation": 3,
                    "perform_operation2": 1,
                    "perform_task3": 1,
                    "print_result": 1,
                    "process_data": 8,
                    "send_data": 1,
                    "send_data_to_server": 1,
                    "update_data": 1,
                    "update_values": 1
                },
                "FUN_08001e98_param_1": {
                    "flag1": 1
                },
                "FUN_08001e98_param_2": {
                    "flag2": 1
                },
                "FUN_08001e98_param_3": {
                    "flag3": 1
                },
                "FUN_08001e98_param_4": {
                    "data": 1
                },
                "FUN_080024c4": {
                    "initialize": 3,
                    "initialize_application": 2,
                    "initialize_data": 19,
                    "initialize_function": 3,
                    "initialize_game_data": 1,
                    "initialize_program": 2,
                    "initialize_variables": 1
                },
                "FUN_0800283a": {
                    "cleanup": 1,
                    "do_something": 2,
                    "do_something_2": 1,
                    "execute_step1": 1,
                    "execute_sub_function1": 1,
                    "function3": 2,
                    "initialize_again": 1,
                    "initialize_hardware_components": 1,
                    "perform_action": 1,
                    "perform_action1": 2,
                    "perform_initialization": 3,
                    "perform_operation1": 1,
                    "perform_setup": 3,
                    "print_info": 1,
                    "reset_data": 2,
                    "reset_variables": 2,
                    "update_data1": 1,
                    "update_display": 1,
                    "update_state": 1
                },
                "FUN_08002fd4": {
                    "clean_up": 2,
                    "cleanup": 4,
                    "cleanup2": 1,
                    "cleanup_function": 1,
                    "execute_finalize": 1,
                    "execute_function4": 1,
                    "execute_step3": 1,
                    "finalize": 2,
                    "finalize_application": 1,
                    "finalize_operation": 1,
                    "finalize_process": 2,
                    "finalize_processing": 2,
                    "function5": 2,
                    "perform_action4": 1,
                    "perform_action5": 1,
                    "perform_additional_task": 1,
                    "perform_finalization_tasks": 1,
                    "perform_operation_3": 1,
                    "perform_task5": 1,
                    "perform_task_c": 1,
                    "process_data": 1
                },
                "FUN_08003a74": {
                    "calculate_values": 1,
                    "configure_system": 1,
                    "do_something": 4,
                    "execute_function2": 1,
                    "function2": 1,
                    "initialize": 1,
                    "initialize_environment": 1,
                    "initialize_function2": 2,
                    "initialize_second_functions": 1,
                    "initialize_secondary_data": 1,
                    "initialize_something_else": 1,
                    "initialize_subsystem": 1,
                    "initialize_system": 1,
                    "perform_additional_task": 1,
                    "perform_initialization_checks": 1,
                    "perform_operation": 1,
                    "perform_preprocessing": 1,
                    "perform_setup_tasks": 1,
                    "perform_task2": 1,
                    "perform_task_b": 1,
                    "prepare_data": 1,
                    "reverse_bits": 1,
                    "validate_data": 2
                },
                "FUN_0800585c": {
                    "clean_up": 1,
                    "cleanup": 1,
                    "cleanup1": 1,
                    "cleanup_resources": 1,
                    "display_message": 1,
                    "do_something_else": 1,
                    "execute_data_processing": 1,
                    "execute_function3": 1,
                    "execute_sub_function3": 1,
                    "execute_task": 1,
                    "finalize": 1,
                    "finalize_operation": 2,
                    "function4": 2,
                    "perform_action": 2,
                    "perform_action3": 1,
                    "perform_action4": 1,
                    "perform_additional_action": 1,
                    "perform_operation": 2,
                    "perform_operation_2": 1,
                    "perform_task4": 1,
                    "update_display": 3,
                    "update_ui": 1
                },
                "FUN_08008e44": {
                    "calculate_flag_value": 1,
                    "calculate_something": 1,
                    "calculate_value": 3,
                    "convert_flag_to_value": 2,
                    "flag_to_value": 1,
                    "get_flag_value": 5,
                    "get_modified_value": 1,
                    "get_option_value": 1,
                    "get_processed_value": 1,
                    "get_updated_value": 1,
                    "get_value": 1,
                    "get_value_from_flag": 1,
                    "manipulate_data": 1,
                    "manipulate_flag": 1,
                    "modify_flag": 1,
                    "operation1": 2,
                    "process_flag": 3,
                    "reverse_process": 1,
                    "transform_value": 1
                },
                "FUN_08008e44_param_1": {
                    "flag": 1
                },
                "FUN_08008eec": {
                    "apply_flag_verbosely": 1,
                    "calculate_data_value": 1,
                    "calculate_flag_value": 1,
                    "calculate_new_value": 1,
                    "calculate_result": 1,
                    "calculate_value": 7,
                    "calculate_value_with_params": 1,
                    "manipulate_data": 1,
                    "manipulate_data2": 1,
                    "manipulate_flag_2": 1,
                    "modify_value": 1,
                    "operation2": 2,
                    "perform_action": 1,
                    "perform_action2": 1,
                    "perform_conversion_operation": 1,
                    "perform_operation": 1,
                    "perform_operation_on_value": 1,
                    "process_flag": 1,
                    "process_flag_value": 1,
                    "reverse_operation": 1,
                    "transform_value_with_params": 1,
                    "update_data2": 1
                },
                "FUN_08008eec_param_1": {
                    "flag_value": 1
                },
                "FUN_08008eec_param_2": {
                    "data_value": 1
                },
                "FUN_08008eec_param_3": {
                    "flag_mask": 1
                },
                "FUN_08008eec_param_4": {
                    "data_mask": 1
                },
                "FUN_0800b430": {
                    "allocate_memory": 1,
                    "clear_data": 2,
                    "clear_memory": 7,
                    "fill_memory": 1,
                    "initialize_array": 2,
                    "initialize_buffer": 1,
                    "initialize_function3": 1,
                    "initialize_memory": 6,
                    "initialize_memory_block": 1,
                    "initialize_memory_chunk": 1,
                    "memset_array": 1,
                    "reset_data": 1,
                    "reset_memory": 2,
                    "set_initial_values": 1
                },
                "FUN_0800b430_param_1": {
                    "data": 1
                },
                "initializeData_DAT_20000e4c": {
                    "condition_check": 1
                },
                "initializeData_DAT_20000ea9": {
                    "flag_count": 1
                },
                "initializeData_local_11": {
                    "flag_one_value": 1
                },
                "initializeData_local_12": {
                    "flag_two_value": 1
                },
                "initializeData_local_13": {
                    "flag_three_value": 1
                },
                "initializeData_uVar1": {
                    "processed_flag_one_value": 1
                },
                "initializeData_uVar2": {
                    "processed_flag_two_value": 1
                },
                "initializeData_uVar3": {
                    "processed_flag_three_value": 1
                },
                "local_11": {
                    "enable_first_feature": 1,
                    "flag1": 5,
                    "flag3": 5,
                    "is_condition1_set": 1,
                    "is_enabled_flag": 1,
                    "is_first_flag_set": 1,
                    "is_flag1_set": 3,
                    "is_flag3_set": 1,
                    "is_flag_one_set": 1,
                    "is_flag_set1": 4,
                    "is_option_three": 1,
                    "toggle1": 1,
                    "value3": 1
                },
                "local_12": {
                    "enable_second_feature": 1,
                    "flag2": 10,
                    "is_allowed_flag": 1,
                    "is_condition2_set": 1,
                    "is_flag2_set": 4,
                    "is_flag_set2": 4,
                    "is_flag_two_set": 1,
                    "is_option_two": 1,
                    "is_second_flag_set": 1,
                    "toggle2": 1,
                    "value2": 1
                },
                "local_13": {
                    "enable_third_feature": 1,
                    "flag1": 5,
                    "flag3": 5,
                    "is_condition3_set": 1,
                    "is_enabled_and_allowed_flag": 1,
                    "is_flag1_set": 1,
                    "is_flag3_set": 3,
                    "is_flag_set3": 4,
                    "is_flag_three_set": 1,
                    "is_option_one": 1,
                    "is_third_flag_set": 1,
                    "toggle3": 1,
                    "value1": 1
                },
                "uVar1": {
                    "flag1": 1,
                    "result1": 2
                },
                "uVar2": {
                    "flag2": 1,
                    "result2": 2
                },
                "uVar3": {
                    "flag3": 1,
                    "result3": 2
                }
            },
            "called": [
                "FUN_0800283a",
                "FUN_08008e44",
                "FUN_0800585c",
                "FUN_08001e98",
                "FUN_08002fd4",
                "FUN_08003a74",
                "FUN_0800b430",
                "FUN_08008eec",
                "FUN_08001d4c"
            ],
            "calling": [
                "FUN_08003b98"
            ],
            "code": "\nvoid initialize_game_data_080024c4(void)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined4 result3;\n  char flag1;\n  char flag2;\n  char flag1;\n  \n  DAT_20000ea9 = 5;\n  DAT_20000e4c = 0;\n  FUN_08001d4c();\n  FUN_08003a74();\n  if (DAT_20000ea8 == '\\0') {\n    FUN_0800b430(&DAT_20000eac,0,0xc);\n    FUN_0800283a();\n    DAT_20000ea9 = 0;\n    if ((DAT_20000ee6 & 0x20) == 0) {\n      flag1 = -1;\n    }\n    else {\n      flag1 = '\\x01';\n    }\n    if ((DAT_20000ee6 & 0x80) == 0) {\n      flag2 = -1;\n    }\n    else {\n      flag2 = '\\x01';\n    }\n    if ((DAT_20000ee6 & 0x200) == 0) {\n      flag1 = -1;\n    }\n    else {\n      flag1 = '\\x01';\n    }\n    result1 = FUN_08008e44((int)flag1);\n    result1 = FUN_08008eec(result1,DAT_20000ef4);\n    result2 = FUN_08008e44((int)flag2);\n    result2 = FUN_08008eec(result2,DAT_20000ef4);\n    result3 = FUN_08008e44((int)flag1);\n    result3 = FUN_08008eec(result3,DAT_20000ef4);\n    FUN_08001e98(result1,result2,result3,DAT_20000eec,0);\n    FUN_0800585c();\n    FUN_08002fd4();\n    FUN_0800283a();\n    if ((DAT_20000ee4 & 8) != 0) {\n      DAT_20000e4c = 1;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "initialize_game_data_080024c4",
            "entrypoint": "0x080024c4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080024c4": "initialize_game_data_080024c4",
                "local_11": "flag1",
                "local_12": "flag2",
                "local_13": "flag1",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080025e8": {
            "additional_data": {
                "DAT_20000ea9": {
                    "threshold": 1
                },
                "DAT_20000eaa": {
                    "flags": 1
                },
                "FUN_08000210": {
                    "call_function1": 1,
                    "do_something": 1,
                    "execute_first_action": 1,
                    "execute_pre_process": 1,
                    "initialize": 1,
                    "initialize_components": 1,
                    "initialize_data": 6,
                    "initialize_subsystem": 1,
                    "initialize_system": 1,
                    "perform_action1": 2,
                    "perform_action_a": 1,
                    "perform_first_action": 1,
                    "perform_first_operation": 3,
                    "perform_first_task": 1,
                    "perform_first_update": 1,
                    "perform_initial_setup": 2,
                    "perform_initial_steps": 1,
                    "perform_initialization": 3,
                    "perform_task_one": 1,
                    "setup_configuration": 1
                },
                "FUN_080025e8": {
                    "collect_data": 1,
                    "enable_feature": 1,
                    "initialize_and_check_flag": 2,
                    "initialize_and_check_flags": 3,
                    "initialize_application": 2,
                    "initialize_data": 5,
                    "initialize_function": 1,
                    "initialize_system": 2,
                    "initiate_process": 1,
                    "process_data": 2,
                    "toggle_feature": 1,
                    "update_and_reverse_process": 1,
                    "update_control_flags": 1,
                    "update_data": 2,
                    "update_data_if_needed": 2,
                    "update_flag_and_call_functions": 1,
                    "update_register_flags": 1,
                    "update_status": 2
                },
                "FUN_08005250": {
                    "call_function2": 1,
                    "execute_data_processing": 1,
                    "execute_function": 3,
                    "execute_initialization": 1,
                    "execute_main_process": 1,
                    "execute_pre_update": 1,
                    "execute_procedure": 1,
                    "execute_process": 1,
                    "execute_second_action": 1,
                    "execute_task": 6,
                    "perform_action": 3,
                    "perform_action2": 2,
                    "perform_action_b": 1,
                    "perform_second_action": 1,
                    "perform_second_operation": 3,
                    "perform_second_task": 1,
                    "perform_second_update": 1,
                    "perform_task_two": 1,
                    "process_data": 1
                },
                "FUN_080057e4": {
                    "check_threshold": 2,
                    "execute_post_update": 1,
                    "handle_data_error": 1,
                    "handle_data_overflow": 1,
                    "handle_error": 3,
                    "handle_invalid_condition": 2,
                    "handle_invalid_state": 1,
                    "handle_low_memory": 1,
                    "handle_low_memory_condition": 1,
                    "handle_out_of_range": 1,
                    "perform_action": 2,
                    "perform_additional_processing": 1,
                    "perform_additional_steps": 1,
                    "perform_additional_tasks": 1,
                    "perform_additional_updates": 1,
                    "perform_check": 1,
                    "perform_cleanup": 1,
                    "perform_error_handling": 1,
                    "perform_extra_action": 1,
                    "perform_final_task": 1,
                    "perform_secondary_operation": 1,
                    "perform_third_operation": 1,
                    "print_error_message": 1,
                    "process_data": 2,
                    "reverse_data": 1
                }
            },
            "called": [
                "FUN_080057e4",
                "FUN_08000210",
                "FUN_08005250"
            ],
            "calling": [
                "FUN_080005b4",
                "FUN_08005900",
                "FUN_08003a18",
                "FUN_0800195c",
                "FUN_08003b98"
            ],
            "code": "\nvoid initialize_data_080025e8(void)\n\n{\n  if ((DAT_20000eaa & 0x10) == 0) {\n    DAT_20000eaa = DAT_20000eaa | 0x10;\n    FUN_08005250();\n    FUN_08000210();\n    if (DAT_20000ea9 - 3 < 3) {\n      DAT_20000eaa = DAT_20000eaa | 0x20;\n      FUN_080057e4();\n    }\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_080025e8",
            "entrypoint": "0x080025e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080025e8": "initialize_data_080025e8"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002638": {
            "additional_data": {
                "FUN_08002638": {
                    "extract_integer_from_byte_array": 1,
                    "parse_and_calculate_integer": 1,
                    "parse_int_from_hex": 1,
                    "parse_integer": 24,
                    "parse_integer_and_store": 1,
                    "parse_integer_from_binary": 1,
                    "parse_number": 1,
                    "parse_numeric_string": 1
                },
                "bVar1": {
                    "char_to_digit": 1,
                    "current_digit": 1,
                    "digit": 26,
                    "digit_value": 1,
                    "is_digit": 1
                },
                "bVar2": {
                    "is_negative": 23,
                    "negative": 5,
                    "negative_flag": 2
                },
                "bVar3": {
                    "additional_digits": 1,
                    "decimals": 1,
                    "exponent": 1,
                    "exponent_flag": 3,
                    "flag": 1,
                    "floating_point": 1,
                    "found_first_zero": 1,
                    "has_decimal": 2,
                    "has_fractional": 1,
                    "is_decimal": 2,
                    "is_exp": 1,
                    "is_exp_negative": 2,
                    "is_exponent": 1,
                    "is_exponential": 1,
                    "is_fe": 1,
                    "is_floating_point": 3,
                    "is_fraction": 1,
                    "is_hex": 3,
                    "is_special_case": 1,
                    "multiplier": 1,
                    "need_conversion": 1
                },
                "iVar4": {
                    "check_result": 2,
                    "comparison_result": 2,
                    "conversion_result": 1,
                    "error": 1,
                    "error_code": 5,
                    "hex_result": 1,
                    "result": 8,
                    "result_code": 2,
                    "return_value": 1,
                    "status": 5,
                    "temp_int": 1,
                    "temp_var": 1
                },
                "local_14": {
                    "accumulated_value": 1,
                    "decimal_multiplier": 1,
                    "decimal_result": 1,
                    "final_result": 1,
                    "int_value": 4,
                    "integer": 2,
                    "integer_part": 3,
                    "integer_result": 3,
                    "integer_value": 1,
                    "parsed_integer": 1,
                    "parsed_value": 2,
                    "result": 4,
                    "result_value": 2,
                    "total_value": 1,
                    "value": 4
                },
                "local_15": {
                    "decimal_count": 3,
                    "decimal_places": 3,
                    "decimal_position": 1,
                    "exp": 1,
                    "exp_count": 1,
                    "exponent": 12,
                    "exponent_count": 1,
                    "exponent_digit_count": 1,
                    "exponent_value": 2,
                    "fraction_count": 1,
                    "fractional_count": 1,
                    "left_padding": 1,
                    "num_additional_digits": 1,
                    "num_decimals": 1,
                    "shift_count": 1
                },
                "local_16": {
                    "digit_count": 29,
                    "num_digits": 2
                },
                "local_1c": {
                    "decimal": 1,
                    "decimal_value": 3,
                    "exponent": 1,
                    "power_of_ten": 1,
                    "temp": 5,
                    "temp1": 6,
                    "temp_result": 4,
                    "temp_uint": 3,
                    "temp_value": 2,
                    "temp_value1": 1,
                    "temp_var1": 3,
                    "temporary": 1
                },
                "local_c": {
                    "current_offset": 1,
                    "current_pos": 4,
                    "current_position": 5,
                    "current_ptr": 3,
                    "next": 1,
                    "next_char": 6,
                    "next_char_address": 1,
                    "next_char_pointer": 1,
                    "next_char_ptr": 2,
                    "next_digit": 3,
                    "next_ptr": 1,
                    "next_token": 1,
                    "num_str": 1,
                    "str_ptr": 1
                },
                "local_d": {
                    "current": 1,
                    "current_char": 7,
                    "current_character": 1,
                    "current_digit": 8,
                    "current_sign": 1,
                    "current_sign_char": 1,
                    "current_token": 1,
                    "current_value": 1,
                    "first_char": 6,
                    "sign_char": 3,
                    "symbol": 1
                },
                "param_1": {
                    "base": 3,
                    "base_addr": 2,
                    "base_address": 9,
                    "input_address": 1,
                    "input_base": 2,
                    "input_offset": 1,
                    "input_ptr": 1,
                    "offset": 4,
                    "start_addr": 1,
                    "start_address": 4,
                    "start_index": 2,
                    "start_pos": 1
                },
                "param_2": {
                    "binary_data": 1,
                    "buffer": 3,
                    "byte_array": 3,
                    "data": 1,
                    "digits": 1,
                    "hex_string": 1,
                    "input": 3,
                    "input_data": 2,
                    "input_str": 3,
                    "input_string": 8,
                    "str": 1,
                    "string": 1,
                    "string_pointer": 1,
                    "string_ptr": 2
                },
                "param_3": {
                    "output": 7,
                    "output_integer": 2,
                    "output_number": 1,
                    "output_value": 4,
                    "parsed_integer": 1,
                    "result": 13,
                    "result_pointer": 1,
                    "result_ptr": 2
                },
                "pcVar5": {
                    "current_char": 21,
                    "current_char_pointer": 1,
                    "current_char_ptr": 2,
                    "current_character": 1,
                    "current_pos": 1,
                    "current_ptr": 1,
                    "next_char": 1,
                    "next_char_ptr": 1,
                    "ptr1": 1
                },
                "pcVar6": {
                    "current_char": 1,
                    "current_char_ptr": 1,
                    "next_char": 21,
                    "next_char_pointer": 1,
                    "next_char_ptr": 2,
                    "next_character": 1,
                    "next_pos": 1,
                    "ptr2": 1,
                    "start_ptr": 1
                },
                "uVar7": {
                    "result": 2,
                    "return_val": 1,
                    "return_value": 21,
                    "status": 2,
                    "success": 3
                },
                "uVar8": {
                    "converted_value": 1,
                    "temp": 3,
                    "temp_result": 4,
                    "temp_value": 16,
                    "temp_var": 3,
                    "tmp_var": 2
                }
            },
            "called": [
                "FUN_08008590",
                "FUN_08008e3c",
                "FUN_08008640",
                "FUN_08009214",
                "FUN_08008eec",
                "FUN_08008c30"
            ],
            "calling": [
                "FUN_0800184c",
                "FUN_08003b98"
            ],
            "code": "\nundefined4 parse_integer_and_store_08002638(int base_address,byte *input_string,uint *result)\n\n{\n  byte digit;\n  bool is_negative;\n  bool is_hex;\n  int result;\n  char *current_char;\n  char *next_char;\n  undefined4 return_value;\n  undefined8 temp_value;\n  uint temp1;\n  byte digit_count;\n  char exponent;\n  int int_value;\n  char current_digit;\n  char *next_char;\n  \n  next_char = (char *)(base_address + (uint)*input_string);\n  current_char = next_char + 1;\n  current_digit = *next_char;\n  is_negative = false;\n  if (current_digit == '-') {\n    is_negative = true;\n    current_digit = *current_char;\n    next_char = next_char + 2;\n  }\n  else {\n    next_char = current_char;\n    if (current_digit == '+') {\n      next_char = next_char + 2;\n      current_digit = *current_char;\n    }\n  }\n  int_value = 0;\n  exponent = '\\0';\n  digit_count = 0;\n  is_hex = false;\n  do {\n    digit = current_digit - 0x30;\n    if (digit < 10) {\n      digit_count = digit_count + 1;\n      if (digit_count < 9) {\n        if (is_hex) {\n          exponent = exponent + -1;\n        }\n        int_value = (uint)digit + int_value * 10;\n      }\n      else if (!is_hex) {\n        exponent = exponent + '\\x01';\n      }\n    }\n    else {\n      if ((digit != 0xfe) || (is_hex)) {\n        if (digit_count == 0) {\n          return_value = 0;\n        }\n        else {\n          temp1 = FUN_08008e3c(int_value);\n          result = FUN_08009214(temp1,0);\n          if (result == 0) {\n            for (; exponent < -1; exponent = exponent + '\\x02') {\n              temp_value = FUN_08008590(temp1);\n              temp_value = FUN_08008640((int)temp_value,(int)((ulonglong)temp_value >> 0x20),0x47ae147b,0x3f847ae1)\n              ;\n              temp1 = FUN_08008c30((int)temp_value,(int)((ulonglong)temp_value >> 0x20));\n            }\n            if (exponent < '\\0') {\n              temp_value = FUN_08008590(temp1);\n              temp_value = FUN_08008640((int)temp_value,(int)((ulonglong)temp_value >> 0x20),0x9999999a,0x3fb99999)\n              ;\n              temp1 = FUN_08008c30((int)temp_value,(int)((ulonglong)temp_value >> 0x20));\n            }\n            else {\n              for (; '\\0' < exponent; exponent = exponent + -1) {\n                temp1 = FUN_08008eec(temp1,0x41200000);\n              }\n            }\n          }\n          if (is_negative) {\n            *result = temp1 ^ 0x80000000;\n          }\n          else {\n            *result = temp1;\n          }\n          *input_string = ((char)next_char - (char)base_address) - 1;\n          return_value = 1;\n        }\n        return return_value;\n      }\n      is_hex = true;\n    }\n    current_digit = *next_char;\n    next_char = next_char + 1;\n  } while( true );\n}\n\n",
            "current_name": "parse_integer_and_store_08002638",
            "entrypoint": "0x08002638",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002638": "parse_integer_and_store_08002638",
                "bVar1": "digit",
                "bVar2": "is_negative",
                "bVar3": "is_hex",
                "iVar4": "result",
                "local_14": "int_value",
                "local_15": "exponent",
                "local_16": "digit_count",
                "local_1c": "temp1",
                "local_c": "next_char",
                "local_d": "current_digit",
                "param_1": "base_address",
                "param_2": "input_string",
                "param_3": "result",
                "pcVar5": "current_char",
                "pcVar6": "next_char",
                "uVar7": "return_value",
                "uVar8": "temp_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002814": {
            "called": [],
            "calling": [
                "FUN_08002408",
                "FUN_08004148",
                "FUN_08001d4c"
            ],
            "code": "\nvoid FUNC_08002814(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002814",
            "entrypoint": "0x08002814",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002814": "FUNC_08002814"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002828": {
            "called": [],
            "calling": [
                "FUN_08001994"
            ],
            "code": "\nvoid FUNC_08002828(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002828",
            "entrypoint": "0x08002828",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002828": "FUNC_08002828"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800283a": {
            "additional_data": {
                "FUN_080004fc": {
                    "display_data": 1,
                    "execute_operation": 1,
                    "execute_task2": 1,
                    "perform_additional_task": 1,
                    "perform_checks": 1,
                    "perform_function_b": 1,
                    "print_data": 2,
                    "process_data": 2,
                    "process_data2": 5,
                    "process_data_2": 1
                },
                "FUN_0800283a": {
                    "do_something": 1,
                    "execute_binary_code": 1,
                    "execute_data_processing": 1,
                    "execute_initial_functions": 1,
                    "execute_main_function": 1,
                    "execute_operations": 1,
                    "execute_tasks": 1,
                    "initialize": 1,
                    "initialize_application": 1,
                    "initialize_components": 2,
                    "initialize_data": 8,
                    "initialize_dependencies": 1,
                    "initialize_subsystem": 1,
                    "initialize_system": 2,
                    "perform_data_processing": 1,
                    "perform_operations": 2,
                    "process_data": 4
                },
                "FUN_080035ec": {
                    "execute_task": 1,
                    "execute_task1": 1,
                    "initialize_components": 1,
                    "initialize_data": 2,
                    "perform_function_a": 1,
                    "process_data": 4,
                    "process_data1": 5,
                    "process_data_1": 1
                },
                "param_1": {
                    "arg1": 1,
                    "config": 1,
                    "config_value1": 1,
                    "data1": 11,
                    "data_1": 3,
                    "dependency_1": 1,
                    "first_parameter": 1,
                    "input1": 3,
                    "input_param1": 1,
                    "param1": 1,
                    "value1": 1,
                    "var1": 1
                },
                "param_2": {
                    "arg2": 1,
                    "config_value2": 1,
                    "data": 1,
                    "data2": 11,
                    "data_2": 3,
                    "dependency_2": 1,
                    "input2": 3,
                    "input_param2": 1,
                    "param2": 1,
                    "second_parameter": 1,
                    "value2": 1,
                    "var2": 1
                },
                "param_3": {
                    "arg3": 1,
                    "config_value3": 1,
                    "data3": 11,
                    "data_3": 3,
                    "dependency_3": 1,
                    "input3": 3,
                    "input_param3": 1,
                    "param3": 1,
                    "settings": 1,
                    "third_parameter": 1,
                    "value3": 1,
                    "var3": 1
                }
            },
            "called": [
                "FUN_080035ec",
                "FUN_080004fc"
            ],
            "calling": [
                "FUN_08001ddc",
                "FUN_080024c4"
            ],
            "code": "\nvoid initialize_data_0800283a(void)\n\n{\n  FUN_080035ec(DAT_20000eac,DAT_20000eb0,DAT_20000eb4);\n  FUN_080004fc(DAT_20000eac,DAT_20000eb0,DAT_20000eb4);\n  return;\n}\n\n",
            "current_name": "initialize_data_0800283a",
            "entrypoint": "0x0800283a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800283a": "initialize_data_0800283a"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002870": {
            "additional_data": {
                "FUN_08002870": {
                    "increment_and_check": 11,
                    "increment_and_check_boundary": 1,
                    "increment_and_check_limit": 6,
                    "increment_and_check_value": 1,
                    "increment_and_limit": 4,
                    "increment_and_limit_value": 1,
                    "increment_and_reset": 1,
                    "increment_and_reset_if_equal": 1,
                    "increment_and_wrap": 4,
                    "increment_char_and_limit": 1
                },
                "local_9": {
                    "incremented_value": 2,
                    "result": 26,
                    "result_char": 2,
                    "result_value": 1
                },
                "param_1": {
                    "input": 14,
                    "input_char": 6,
                    "input_value": 7,
                    "original_value": 1,
                    "value": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08002f40",
                "FUN_08003004",
                "FUN_08002ef0",
                "FUN_08002ba8",
                "FUN_08002e08"
            ],
            "code": "\nchar increment_and_check_limit_08002870(char input)\n\n{\n  char result;\n  \n  result = input + '\\x01';\n  if (result == '\\x12') {\n    result = '\\0';\n  }\n  return result;\n}\n\n",
            "current_name": "increment_and_check_limit_08002870",
            "entrypoint": "0x08002870",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002870": "increment_and_check_limit_08002870",
                "local_9": "result",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002896": {
            "additional_data": {
                "FUN_08002896": {
                    "adjust_value": 1,
                    "calculate_new_value": 1,
                    "convert_char": 1,
                    "convert_char_to_byte": 1,
                    "convert_char_to_hex": 1,
                    "decrement_and_check_zero": 1,
                    "decrement_and_default": 4,
                    "decrement_and_default_to18": 1,
                    "decrement_and_default_value": 1,
                    "decrement_and_set_default": 6,
                    "decrement_and_update_byte": 1,
                    "decrement_char": 2,
                    "decrement_value": 1,
                    "decrement_value_by_one": 1,
                    "decrypt_char": 1,
                    "get_updated_char": 1,
                    "increment_and_shift": 1,
                    "make_char_positive": 1,
                    "process_char": 1,
                    "process_character": 1,
                    "subtract_one_from_char": 1
                },
                "local_9": {
                    "converted_byte": 1,
                    "converted_char": 2,
                    "decrypted_char": 1,
                    "modified_value": 1,
                    "new_char": 1,
                    "new_value": 1,
                    "output": 2,
                    "processed_character": 1,
                    "result": 11,
                    "result_byte": 1,
                    "result_char": 7,
                    "updated_char": 2
                },
                "param_1": {
                    "encrypted_char": 1,
                    "input": 7,
                    "input_byte": 1,
                    "input_char": 12,
                    "input_character": 2,
                    "input_value": 5,
                    "original_input": 1,
                    "value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08002a94"
            ],
            "code": "\nchar decrement_and_set_default_08002896(char input_char)\n\n{\n  char result;\n  \n  result = input_char;\n  if (input_char == '\\0') {\n    result = '\\x12';\n  }\n  return result + -1;\n}\n\n",
            "current_name": "decrement_and_set_default_08002896",
            "entrypoint": "0x08002896",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002896": "decrement_and_set_default_08002896",
                "local_9": "result",
                "param_1": "input_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080028bc": {
            "additional_data": {
                "FUN_080028bc": {
                    "calculate_result": 12,
                    "combine_functions": 1,
                    "compute_result": 2,
                    "extract_and_combine_data": 1,
                    "optimize_function": 1,
                    "perform_operation": 1,
                    "perform_operations": 1,
                    "process_data": 2
                },
                "FUN_08008cd8": {
                    "calculate2": 1,
                    "combine_results_1": 1,
                    "compute_value2": 1,
                    "reverse_operation2": 1
                },
                "FUN_08008cdc": {
                    "calculate3": 1,
                    "combine_results_2": 1,
                    "compute_value3": 1,
                    "reverse_operation3": 1
                },
                "FUN_08008eec": {
                    "calculate1": 1,
                    "calculate_result_1": 1,
                    "compute_value1": 1,
                    "reverse_operation1": 1
                },
                "FUN_08009054": {
                    "calculate4": 1,
                    "calculate_result_2": 1,
                    "compute_value4": 1,
                    "reverse_operation4": 1
                },
                "param_1": {
                    "input1": 14,
                    "input_1": 14,
                    "input_a": 1,
                    "input_param1": 1,
                    "input_val1": 1
                },
                "param_2": {
                    "input2": 14,
                    "input_2": 14,
                    "input_b": 1,
                    "input_param2": 1,
                    "input_val2": 1
                },
                "param_3": {
                    "input3": 14,
                    "input_3": 14,
                    "input_c": 1,
                    "input_param3": 1,
                    "input_val3": 1
                },
                "uVar1": {
                    "output1": 1,
                    "result1": 16,
                    "result_1": 13,
                    "temp_result1": 1
                },
                "uVar2": {
                    "output2": 1,
                    "result2": 16,
                    "result_2": 13,
                    "temp_result2": 1
                }
            },
            "called": [
                "FUN_08009054",
                "FUN_08008cd8",
                "FUN_08008cdc",
                "FUN_08008eec"
            ],
            "calling": [
                "FUN_08002c18"
            ],
            "code": "\nundefined4 calculate_result_080028bc(undefined4 input_1,undefined4 input_2,undefined4 input3)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  \n  result1 = FUN_08008eec(input_2,input_2);\n  result2 = FUN_08008eec(input_1,input_1);\n  result1 = FUN_08008cd8(result1,result2);\n  result2 = FUN_08008cdc(input3,input3);\n  result1 = FUN_08009054(result1,result2);\n  return result1;\n}\n\n",
            "current_name": "calculate_result_080028bc",
            "entrypoint": "0x080028bc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080028bc": "calculate_result_080028bc",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input3",
                "uVar1": "result1",
                "uVar2": "result2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002908": {
            "additional_data": {
                "FUN_08002908": {
                    "calculate_result": 25,
                    "calculate_results": 1,
                    "compute_result": 1,
                    "perform_calculation": 1
                },
                "param_1": {
                    "input1": 12,
                    "input_1": 10,
                    "input_param_1": 1,
                    "input_value_1": 2,
                    "value1": 3,
                    "value_1": 2,
                    "x": 1
                },
                "param_2": {
                    "input2": 12,
                    "input_2": 10,
                    "input_param_2": 1,
                    "input_value_2": 2,
                    "value2": 3,
                    "value_2": 2,
                    "y": 1
                },
                "param_3": {
                    "input3": 12,
                    "input_3": 10,
                    "input_param_3": 1,
                    "input_value_3": 2,
                    "value3": 3,
                    "value_3": 2,
                    "z": 1
                },
                "param_4": {
                    "input4": 12,
                    "input_4": 10,
                    "input_param_4": 1,
                    "input_value_4": 2,
                    "value4": 3,
                    "value_4": 2,
                    "w": 1
                },
                "uVar1": {
                    "intermediate_result1": 1,
                    "intermediate_result_1": 1,
                    "result": 2,
                    "result1": 11,
                    "result_1": 13,
                    "temp1": 1,
                    "temp_1": 1,
                    "temp_var_1": 1
                },
                "uVar2": {
                    "intermediate_result2": 1,
                    "intermediate_result_2": 1,
                    "result2": 11,
                    "result_2": 13,
                    "temp": 2,
                    "temp2": 1,
                    "temp_2": 1,
                    "temp_var_2": 1
                }
            },
            "called": [
                "FUN_08009054",
                "FUN_08008cd8",
                "FUN_08008cdc",
                "FUN_08008eec"
            ],
            "calling": [
                "FUN_08002c18"
            ],
            "code": "\nundefined4 calculate_result_08002908(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 result_1;\n  undefined4 result_2;\n  \n  result_1 = FUN_08008cdc(input3,input3);\n  result_1 = FUN_08008eec(result_1,input4);\n  result_2 = FUN_08008eec(input1,input1);\n  result_1 = FUN_08008cd8(result_1,result_2);\n  result_2 = FUN_08008eec(input2,input2);\n  result_1 = FUN_08008cdc(result_1,result_2);\n  result_2 = FUN_08008eec(input3,0x40800000);\n  result_1 = FUN_08009054(result_1,result_2);\n  return result_1;\n}\n\n",
            "current_name": "calculate_result_08002908",
            "entrypoint": "0x08002908",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002908": "calculate_result_08002908",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result_1",
                "uVar2": "result_2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002978": {
            "additional_data": {
                "FUN_08002978": {
                    "calculate": 1,
                    "calculate_result": 15,
                    "perform_calculations": 1,
                    "process_data": 3
                },
                "param_1": {
                    "input1": 17,
                    "input_1": 6,
                    "input_param": 2,
                    "input_param1": 2,
                    "input_param_1": 2,
                    "input_parameter_1": 1,
                    "value_a": 1
                },
                "param_2": {
                    "input2": 17,
                    "input_2": 6,
                    "input_param2": 2,
                    "input_param_2": 2,
                    "input_parameter_2": 1,
                    "param_2": 1,
                    "sec_param": 1,
                    "value_b": 1
                },
                "param_3": {
                    "input3": 17,
                    "input_3": 6,
                    "input_param3": 2,
                    "input_param_3": 2,
                    "input_parameter_3": 1,
                    "param_3": 1,
                    "third_param": 1,
                    "value_c": 1
                },
                "uVar1": {
                    "calculated_result1": 1,
                    "result1": 17,
                    "result_1": 10,
                    "result_var_1": 1,
                    "var1": 1
                },
                "uVar2": {
                    "calculated_result2": 1,
                    "result2": 17,
                    "result_2": 10,
                    "result_var_2": 1,
                    "var2": 1
                },
                "uVar3": {
                    "final_result": 10,
                    "result3": 11,
                    "result_3": 7,
                    "result_var_3": 1,
                    "var3": 1
                }
            },
            "called": [
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_08008cd8",
                "FUN_08008cdc",
                "FUN_08008eec",
                "FUN_08008c30"
            ],
            "calling": [
                "FUN_080029d8",
                "FUN_08002afc",
                "FUN_08003004"
            ],
            "code": "\nundefined4 calculate_result_08002978(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined8 result3;\n  \n  result1 = FUN_08008eec(input2,input2);\n  result2 = FUN_08008cdc(input1,input1);\n  result2 = FUN_08008eec(result2,input3);\n  result1 = FUN_08008cd8(result1,result2);\n  result3 = FUN_08008590(result1);\n  result3 = FUN_080098d0((int)result3,(int)((ulonglong)result3 >> 0x20));\n  result1 = FUN_08008c30((int)result3,(int)((ulonglong)result3 >> 0x20));\n  return result1;\n}\n\n",
            "current_name": "calculate_result_08002978",
            "entrypoint": "0x08002978",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002978": "calculate_result_08002978",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080029d8": {
            "additional_data": {
                "DAT_20000edc": {
                    "constant": 2,
                    "constant_value": 1,
                    "magic_number": 1,
                    "scrambler_const": 1,
                    "some_constant": 1
                },
                "FUNC_08002978": {
                    "calculate_result": 1
                },
                "FUNC_08009214": {
                    "check_parameter1": 1
                },
                "FUNC_08009228": {
                    "check_result": 1
                },
                "FUNC_08009264": {
                    "check_parameter2": 1
                },
                "FUNK_08009214": {
                    "check_value": 1
                },
                "FUN_08002978": {
                    "calculate_new_param": 1,
                    "calculate_new_value": 2,
                    "calculate_value": 1,
                    "calculate_var": 1,
                    "generate_new_value": 1,
                    "modify_params": 1,
                    "update_source_value": 1,
                    "update_values": 1
                },
                "FUN_080029d8": {
                    "initialize_parameters": 1,
                    "initialize_process": 1,
                    "process_data": 2,
                    "process_parameters": 1,
                    "process_params": 4,
                    "update_data": 4,
                    "update_flag": 1,
                    "update_param": 2,
                    "update_param_and_flag": 1,
                    "update_parameter": 1,
                    "update_parameters": 4,
                    "update_params": 1,
                    "update_params_and_flags": 2,
                    "update_status": 1
                },
                "FUN_08009214": {
                    "check_condition": 1,
                    "check_if_valid_ptr": 1,
                    "check_param1": 1,
                    "check_param2_param3_condition": 1,
                    "check_source_validity": 1,
                    "check_validity": 1,
                    "is_function_zero": 1,
                    "is_result_zero": 1
                },
                "FUN_08009228": {
                    "check_final_condition": 1,
                    "check_if_valid": 1,
                    "check_modified_param": 1,
                    "check_result": 1,
                    "check_value": 1,
                    "is_result_non_zero": 1,
                    "is_var_zero": 1,
                    "update_source_value_if_not_valid": 1,
                    "update_value": 1
                },
                "FUN_08009264": {
                    "check_another_condition": 1,
                    "check_condition": 1,
                    "check_condition_and_update": 1,
                    "check_if_condition_meets": 1,
                    "check_param2": 1,
                    "check_param2_condition": 1,
                    "check_target_validity": 1,
                    "is_char_zero": 2
                },
                "iVar1": {
                    "is_valid": 1,
                    "result": 26,
                    "return_value": 1
                },
                "param_1": {
                    "arg1": 7,
                    "data_ptr": 1,
                    "input1": 2,
                    "param1": 13,
                    "param_1": 2,
                    "param_ptr": 1,
                    "undefined_param": 1,
                    "undefined_param1": 1,
                    "unknown": 1,
                    "unknown_parameter": 1,
                    "unused_parameter": 1
                },
                "param_2": {
                    "arg2": 1,
                    "data1": 2,
                    "data_address": 1,
                    "data_ptr": 1,
                    "data_ptr1": 1,
                    "int_param1": 1,
                    "obj1": 1,
                    "object1": 1,
                    "param1": 5,
                    "param2": 6,
                    "param_ptr1": 1,
                    "param_with_offset": 1,
                    "parameter1": 1,
                    "process": 1,
                    "source_param": 1,
                    "source_value": 1,
                    "src_param": 1,
                    "struct1": 1,
                    "struct_addr": 1,
                    "struct_ptr": 1,
                    "struct_ptr1": 1
                },
                "param_3": {
                    "additional_data_address": 1,
                    "arg3": 1,
                    "data": 1,
                    "data2": 2,
                    "data_ptr2": 1,
                    "dest_param": 1,
                    "destination_value": 1,
                    "info_ptr": 1,
                    "int_param2": 1,
                    "obj2": 1,
                    "object2": 1,
                    "param2": 5,
                    "param3": 6,
                    "param_ptr2": 1,
                    "param_with_offset2": 1,
                    "parameter2": 1,
                    "struct2": 1,
                    "struct2_ptr": 1,
                    "struct_param": 1,
                    "struct_ptr2": 1,
                    "target_param": 1
                },
                "uVar2": {
                    "computed_value1": 1,
                    "modified_param": 1,
                    "modified_value1": 1,
                    "new_data": 1,
                    "new_param": 2,
                    "new_param1": 1,
                    "new_struct": 1,
                    "new_value": 4,
                    "new_value1": 1,
                    "temp1": 4,
                    "temp_var2": 1,
                    "updated_param": 1,
                    "updated_value": 6,
                    "updated_value1": 2,
                    "updated_var1": 1
                },
                "uVar3": {
                    "current_struct": 1,
                    "data": 1,
                    "modified_value2": 1,
                    "new_value": 1,
                    "new_value2": 1,
                    "old_value": 1,
                    "original_value": 3,
                    "param2_value": 1,
                    "ptr_value": 2,
                    "temp2": 4,
                    "temp_data": 1,
                    "temp_param": 4,
                    "temp_value": 2,
                    "temp_var1": 1,
                    "updated_param2": 1,
                    "updated_value2": 2,
                    "updated_var2": 1
                }
            },
            "called": [
                "FUN_08009264",
                "FUN_08002978",
                "FUN_08009228",
                "FUN_08009214"
            ],
            "calling": [
                "FUN_08002a94"
            ],
            "code": "\nvoid update_param_and_flag_080029d8(undefined4 param1,int param2,int param3)\n\n{\n  int result;\n  undefined4 updated_value;\n  undefined4 temp_param;\n  \n  if (((param2 != 0) && (param3 != 0)) &&\n     (result = FUN_08009214(*(undefined4 *)(param2 + 0x18),*(undefined4 *)(param2 + 0x1c)),\n     result == 0)) {\n    if ((*(char *)(param2 + 0x25) == '\\0') &&\n       (result = FUN_08009264(*(undefined4 *)(param2 + 0x1c),*(undefined4 *)(param3 + 0x18)),\n       result != 0)) {\n      temp_param = *(undefined4 *)(param2 + 0x1c);\n      updated_value = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(param3 + 0x18),\n                           *(undefined4 *)(param2 + 0x20));\n      result = FUN_08009228(temp_param,updated_value);\n      if (result == 0) {\n        updated_value = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(param3 + 0x18),\n                             *(undefined4 *)(param2 + 0x20));\n      }\n      else {\n        updated_value = *(undefined4 *)(param2 + 0x1c);\n      }\n      *(undefined4 *)(param2 + 0x18) = updated_value;\n    }\n    else {\n      *(undefined4 *)(param2 + 0x18) = *(undefined4 *)(param2 + 0x1c);\n    }\n    *(undefined *)(param2 + 0x24) = 1;\n  }\n  return;\n}\n\n",
            "current_name": "update_param_and_flag_080029d8",
            "entrypoint": "0x080029d8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080029d8": "update_param_and_flag_080029d8",
                "iVar1": "result",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "uVar2": "updated_value",
                "uVar3": "temp_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002a94": {
            "additional_data": {
                "FUN_08002896": {
                    "get_next_byte": 3,
                    "get_next_value": 1,
                    "process_byte": 2,
                    "process_data_byte": 1,
                    "reverse_byte": 1,
                    "update_byte": 1,
                    "update_byte_value": 1
                },
                "FUN_080029d8": {
                    "copy_data": 6,
                    "copy_data_to_buffer": 1,
                    "copy_data_to_output": 1,
                    "copy_to_address": 1,
                    "process_data": 1
                },
                "FUN_08002a94": {
                    "decode_and_process_data": 1,
                    "decode_and_store_data": 1,
                    "decode_data": 2,
                    "extract_data_from_binary": 1,
                    "iterate_through_data": 2,
                    "process_data": 20
                },
                "local_14": {
                    "curr_addr": 1,
                    "curr_ptr": 1,
                    "current_address": 2,
                    "current_buffer": 1,
                    "current_data": 2,
                    "current_data_pointer": 1,
                    "current_ptr": 4,
                    "dest_ptr": 1,
                    "destination": 1,
                    "destination_ptr": 2,
                    "input_ptr": 1,
                    "prev_output_ptr": 1,
                    "previous_address": 2,
                    "previous_data": 3,
                    "previous_data_ptr": 1,
                    "previous_pointer": 1,
                    "previous_ptr": 1,
                    "source": 1,
                    "temp_data": 2,
                    "temp_pointer": 1,
                    "temp_ptr": 1
                },
                "local_18": {
                    "current_address": 2,
                    "current_data": 3,
                    "current_data_ptr": 1,
                    "current_pointer": 1,
                    "current_ptr": 1,
                    "destination": 1,
                    "output_ptr": 2,
                    "prev_addr": 1,
                    "prev_ptr": 2,
                    "previous_address": 2,
                    "previous_buffer": 1,
                    "previous_data": 5,
                    "previous_data_pointer": 1,
                    "previous_pointer": 1,
                    "previous_ptr": 3,
                    "source": 1,
                    "source_ptr": 3
                },
                "local_9": {
                    "byte_from_data": 1,
                    "byte_val": 1,
                    "byte_value": 2,
                    "current_byte": 18,
                    "current_value": 1,
                    "data": 1,
                    "data_byte": 3,
                    "initial_byte": 1,
                    "input_byte": 1,
                    "start_byte": 1,
                    "stop_condition": 1
                },
                "param_1": {
                    "current_byte": 1,
                    "input": 1,
                    "input_byte": 10,
                    "input_data": 1
                },
                "puVar1": {
                    "current_pointer": 1
                }
            },
            "called": [
                "FUN_08002896",
                "FUN_080029d8"
            ],
            "calling": [
                "FUN_08002edc"
            ],
            "code": "\nvoid decode_and_process_data_08002a94(void)\n\n{\n  undefined *current_pointer;\n  undefined *previous_data;\n  undefined *current_ptr;\n  byte current_byte;\n  \n  current_byte = DAT_20000cf0;\n  previous_data = (undefined *)0x0;\n  current_ptr = (undefined *)0x0;\n  while (current_pointer = current_ptr, current_byte != DAT_20000cf1) {\n    current_byte = FUN_08002896(current_byte);\n    current_ptr = previous_data;\n    FUN_080029d8(&DAT_20000870 + (uint)current_byte * 0x40,previous_data,current_pointer);\n    previous_data = &DAT_20000870 + (uint)current_byte * 0x40;\n  }\n  return;\n}\n\n",
            "current_name": "decode_and_process_data_08002a94",
            "entrypoint": "0x08002a94",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002a94": "decode_and_process_data_08002a94",
                "local_14": "current_ptr",
                "local_18": "previous_data",
                "local_9": "current_byte",
                "puVar1": "current_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002afc": {
            "additional_data": {
                "DAT_20000edc": {
                    "constant": 1
                },
                "FUN_08002978": {
                    "calculate_value1": 1,
                    "transform_func1": 1
                },
                "FUN_08002afc": {
                    "check_and_modify": 1,
                    "check_and_set_params": 1,
                    "check_and_update_parameters": 4,
                    "check_and_update_params": 2,
                    "process_data": 2,
                    "process_parameters": 1,
                    "process_params": 2,
                    "update_param": 1,
                    "update_param_if_needed": 1,
                    "update_parameter": 1,
                    "update_parameters": 1,
                    "update_parameters_if_needed": 1,
                    "update_params": 3,
                    "update_params_and_flag": 1,
                    "update_params_if_valid": 1,
                    "update_values": 1,
                    "update_variable_if_condition_met": 1,
                    "validate_and_modify_params": 1
                },
                "FUN_08009214": {
                    "check_condition2": 1,
                    "check_function2": 1
                },
                "FUN_08009228": {
                    "check_condition1": 1,
                    "check_function1": 1
                },
                "iVar1": {
                    "result": 25,
                    "result1": 2,
                    "result_variable": 1,
                    "return_value": 2,
                    "return_value1": 1
                },
                "param_1": {
                    "arg1": 1,
                    "data1": 1,
                    "first_param": 1,
                    "first_parameter": 1,
                    "input1": 2,
                    "input_data": 2,
                    "input_param": 1,
                    "input_param1": 5,
                    "input_param_1": 2,
                    "input_pointer": 1,
                    "obj1": 1,
                    "param1": 3,
                    "param_a": 2,
                    "parameter1": 1,
                    "parameter_1": 2,
                    "source_data": 1,
                    "source_param": 3,
                    "value1": 1
                },
                "param_2": {
                    "arg2": 1,
                    "data2": 1,
                    "destination_param": 1,
                    "input2": 2,
                    "input_param2": 5,
                    "input_param_2": 2,
                    "obj2": 1,
                    "output_data": 2,
                    "output_param": 1,
                    "output_pointer": 1,
                    "param2": 3,
                    "param_b": 2,
                    "parameter2": 1,
                    "parameter_2": 2,
                    "second_param": 1,
                    "second_parameter": 1,
                    "target_data": 1,
                    "target_param": 2,
                    "value2": 1
                },
                "uVar2": {
                    "encrypted_data": 1,
                    "encryption_key": 1,
                    "modified_param": 2,
                    "modified_param2": 1,
                    "modified_value1": 2,
                    "modified_var1": 1,
                    "new_param": 1,
                    "new_value1": 1,
                    "processed_data": 1,
                    "temp_var1": 3,
                    "temp_var_1": 2,
                    "transformed_param": 1,
                    "updated_param": 3,
                    "updated_value": 8,
                    "updated_value1": 1,
                    "var1": 2
                },
                "uVar3": {
                    "backup_value": 1,
                    "modified_value2": 2,
                    "modified_var2": 1,
                    "new_value2": 1,
                    "original_param2": 1,
                    "original_value": 2,
                    "other_updated_param": 1,
                    "param2_value": 1,
                    "param_bcopy": 1,
                    "parameter_2_copy": 1,
                    "second_updated_param": 1,
                    "source_modified_param": 1,
                    "target_value": 1,
                    "temp_data": 2,
                    "temp_param": 2,
                    "temp_value": 2,
                    "temp_var2": 3,
                    "temp_var_2": 2,
                    "temp_variable": 1,
                    "temporary_param": 1,
                    "updated_value2": 1,
                    "var2": 2
                }
            },
            "called": [
                "FUN_08002978",
                "FUN_08009228",
                "FUN_08009214"
            ],
            "calling": [
                "FUN_08002ba8"
            ],
            "code": "\nvoid check_and_update_parameters_08002afc(int input_param1,int input_param2)\n\n{\n  int result;\n  undefined4 updated_value;\n  undefined4 temp_var2;\n  \n  if (((input_param1 != 0) && (*(char *)(input_param1 + 0x25) == '\\0')) &&\n     (result = FUN_08009228(*(undefined4 *)(input_param1 + 0x18),*(undefined4 *)(input_param2 + 0x18)),\n     result != 0)) {\n    temp_var2 = *(undefined4 *)(input_param2 + 0x18);\n    updated_value = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(input_param1 + 0x18),\n                         *(undefined4 *)(input_param1 + 0x20));\n    result = FUN_08009228(temp_var2,updated_value);\n    if (result == 0) {\n      updated_value = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(input_param1 + 0x18),\n                           *(undefined4 *)(input_param1 + 0x20));\n    }\n    else {\n      updated_value = *(undefined4 *)(input_param2 + 0x18);\n    }\n    result = FUN_08009214(updated_value,*(undefined4 *)(input_param2 + 0x18));\n    if (result == 0) {\n      *(undefined4 *)(input_param2 + 0x18) = updated_value;\n      *(undefined *)(input_param2 + 0x24) = 1;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "check_and_update_parameters_08002afc",
            "entrypoint": "0x08002afc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002afc": "check_and_update_parameters_08002afc",
                "iVar1": "result",
                "param_1": "input_param1",
                "param_2": "input_param2",
                "uVar2": "updated_value",
                "uVar3": "temp_var2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ba8": {
            "additional_data": {
                "DAT_20000cf0": {
                    "end_byte": 1
                },
                "DAT_20000cf1": {
                    "target_byte": 1
                },
                "FUN_08002870": {
                    "bitwise_operation": 1,
                    "byte_processing_func": 1,
                    "convert_byte": 1,
                    "get_next_value": 1,
                    "modify_byte": 1,
                    "modify_character": 1,
                    "update_byte": 1,
                    "update_byte_value": 1,
                    "update_value": 3
                },
                "FUN_08002afc": {
                    "apply_function": 1,
                    "copy_data": 2,
                    "perform_operation": 1,
                    "process_data": 2,
                    "process_segment": 1,
                    "process_sub_function": 1,
                    "process_subdata": 1,
                    "reverse_helper_func": 1
                },
                "FUN_08002ba8": {
                    "extract_and_apply_operations": 1,
                    "initialize_and_process_data": 1,
                    "initialize_data": 1,
                    "process_data": 16
                },
                "local_10": {
                    "curr_ptr": 1,
                    "current_address": 1,
                    "current_data": 6,
                    "current_element": 1,
                    "current_operation": 1,
                    "current_output": 1,
                    "current_pointer": 4,
                    "current_ptr": 10,
                    "current_segment": 1,
                    "current_value": 1,
                    "next_ptr": 1,
                    "target_data_ptr": 1,
                    "temp_ptr2": 2
                },
                "local_14": {
                    "current_ptr": 1,
                    "prev_ptr": 2,
                    "previous_address": 1,
                    "previous_data": 6,
                    "previous_element": 1,
                    "previous_operation": 1,
                    "previous_output": 1,
                    "previous_pointer": 4,
                    "previous_ptr": 9,
                    "previous_segment": 1,
                    "previous_value": 1,
                    "temp_data_ptr": 1,
                    "temp_ptr": 1,
                    "temp_ptr1": 1
                },
                "local_14_temp": {
                    "previous_ptr_temp_2": 1
                },
                "local_9": {
                    "byte_data": 1,
                    "byte_val": 1,
                    "byte_value": 9,
                    "counter": 1,
                    "current_byte": 14,
                    "current_character": 1,
                    "current_data": 1,
                    "current_value": 2,
                    "data": 1
                },
                "param_1": {
                    "byte_value": 1,
                    "character": 1,
                    "current_element": 1,
                    "input": 2,
                    "input_param1": 1,
                    "input_ptr1": 1,
                    "old_parameter": 1,
                    "previous_data": 1,
                    "previous_val": 1
                },
                "param_2": {
                    "current_data": 1,
                    "current_val": 1,
                    "data2": 1,
                    "input_param2": 2,
                    "input_ptr2": 1,
                    "new_parameter": 1,
                    "next_element": 1,
                    "output": 2
                },
                "param_3": {
                    "byte_value": 1,
                    "data_pointer": 1
                },
                "puVar2": {
                    "current_data_ptr": 1,
                    "current_ptr": 1,
                    "prev_ptr": 1,
                    "prev_ptr_temp_2": 1,
                    "previous_data_copy": 1,
                    "previous_operation_ptr": 1,
                    "previous_ptr": 1,
                    "previous_ptr_3": 1,
                    "previous_segment_ptr": 1,
                    "temp_pointer": 1
                },
                "puVar3": {
                    "current_ptr": 1,
                    "prev_addr_ptr": 1,
                    "prev_ptr_previous": 1,
                    "prev_ptr_temp": 1,
                    "previous_byte_ptr": 1,
                    "previous_data": 1,
                    "previous_data_copy": 3,
                    "previous_data_ptr": 1,
                    "previous_element2": 1,
                    "previous_operation_ptr_copy": 1,
                    "previous_pointer_copy": 1,
                    "previous_pointer_temp": 1,
                    "previous_ptr": 2,
                    "previous_ptr2": 1,
                    "previous_ptr_2": 2,
                    "previous_ptr_copy": 4,
                    "previous_ptr_temp": 1,
                    "previous_segment_ptr": 1,
                    "previous_temp_pointer": 1
                },
                "uVar1": {
                    "byte_conversion": 1,
                    "byte_val_copy": 1,
                    "byte_value_casted": 1,
                    "converted_data": 1,
                    "current_byte_as_uint": 2,
                    "current_byte_converted": 1,
                    "current_byte_int": 1,
                    "current_byte_value": 1,
                    "current_data": 1,
                    "current_index": 1,
                    "current_value": 3,
                    "index": 1,
                    "int_value": 3,
                    "unsigned_value": 2
                }
            },
            "called": [
                "FUN_08002afc",
                "FUN_08002870"
            ],
            "calling": [
                "FUN_08002edc"
            ],
            "code": "\nvoid initialize_and_process_data_08002ba8(void)\n\n{\n  uint int_value;\n  undefined *previous_data_copy;\n  undefined *previous_ptr_copy;\n  undefined *previous_ptr;\n  undefined *current_ptr;\n  byte current_byte;\n  \n  previous_ptr = (undefined *)0x0;\n  current_ptr = (undefined *)0x0;\n  current_byte = DAT_20000cf1;\n  previous_ptr_copy = (undefined *)0x0;\n  while (previous_data_copy = previous_ptr, current_byte != DAT_20000cf0) {\n    previous_ptr = current_ptr;\n    int_value = (uint)current_byte;\n    FUN_08002afc(previous_data_copy,current_ptr,&DAT_20000870 + int_value * 0x40);\n    current_byte = FUN_08002870(current_byte);\n    previous_ptr_copy = previous_data_copy;\n    current_ptr = &DAT_20000870 + int_value * 0x40;\n  }\n  FUN_08002afc(previous_ptr,current_ptr,0,previous_ptr,previous_ptr_copy);\n  return;\n}\n\n",
            "current_name": "initialize_and_process_data_08002ba8",
            "entrypoint": "0x08002ba8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ba8": "initialize_and_process_data_08002ba8",
                "local_10": "current_ptr",
                "local_14": "previous_ptr",
                "local_9": "current_byte",
                "puVar2": "previous_data_copy",
                "puVar3": "previous_ptr_copy",
                "uVar1": "int_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002c18": {
            "additional_data": {
                "FUN_080028bc": {
                    "combine_values": 1
                },
                "FUN_08002908": {
                    "manipulate_values": 1
                },
                "FUN_08002c18": {
                    "calculate_allocation_size": 2,
                    "calculate_and_set_memory": 1,
                    "calculate_and_update_parameters": 1,
                    "calculate_bounds": 2,
                    "calculate_checksum": 1,
                    "calculate_data_bounds": 1,
                    "calculate_data_offsets": 1,
                    "calculate_data_size": 2,
                    "calculate_memory_layout": 1,
                    "calculate_memory_offsets": 1,
                    "calculate_memory_range": 1,
                    "calculate_offsets": 2,
                    "calculate_params": 1,
                    "calculate_range": 1,
                    "calculate_result": 1,
                    "calculate_size": 1,
                    "calculate_sizes": 1,
                    "calculate_threshold": 1,
                    "calculate_total_length": 1,
                    "calculate_total_size": 1,
                    "calculate_values_and_store": 1,
                    "extract_and_calculate_sizes": 1,
                    "extract_data_range": 1,
                    "process_data": 1,
                    "recompute_statistics": 1
                },
                "FUN_0800856c": {
                    "calculate_offset": 1
                },
                "FUN_08008590": {
                    "calculate_hash": 1
                },
                "FUN_08008640": {
                    "perform_calculation": 1
                },
                "FUN_08008ba0": {
                    "calculate_result": 1
                },
                "FUN_08008bf0": {
                    "calculate_value": 1
                },
                "FUN_08008e3c": {
                    "get_checksum": 1
                },
                "FUN_08008e44": {
                    "negate_value": 1
                },
                "FUN_08008eec": {
                    "process_data": 1
                },
                "FUN_08009318": {
                    "modify_hash": 1
                },
                "iVar2": {
                    "i_var1": 1,
                    "result2": 15,
                    "result_2": 3,
                    "size2": 1,
                    "temp": 2,
                    "temp_var": 4,
                    "temp_var1": 2,
                    "temp_var_a": 1,
                    "var1": 1,
                    "var2": 1
                },
                "local_1C": {
                    "local_variable2": 1
                },
                "local_1c": {
                    "allocation_size2": 1,
                    "calculated_size2": 1,
                    "calculation_result2": 1,
                    "final_result2": 1,
                    "first_size": 1,
                    "length1": 1,
                    "limited_size": 1,
                    "local_offset2": 1,
                    "local_var2": 5,
                    "local_variable2": 1,
                    "max_range": 1,
                    "min_value": 1,
                    "minimum": 1,
                    "new_size": 1,
                    "offset": 1,
                    "offset2": 1,
                    "param1_result": 1,
                    "range1": 1,
                    "range_value2": 1,
                    "result4": 1,
                    "result9": 1,
                    "size": 1,
                    "size2": 2,
                    "start": 1,
                    "upper_bound": 1
                },
                "local_20": {
                    "allocation_size1": 1,
                    "calculated_size1": 1,
                    "calculation_result1": 1,
                    "difference": 4,
                    "difference1": 1,
                    "final_result1": 1,
                    "local_offset1": 1,
                    "local_var1": 5,
                    "local_variable1": 2,
                    "lower_bound": 2,
                    "offset": 2,
                    "offset1": 1,
                    "range_value1": 1,
                    "remaining_size": 3,
                    "result3": 1,
                    "result8": 1,
                    "size1": 2,
                    "total_range": 1
                },
                "offset_1": {
                    "offset1": 1
                },
                "offset_2": {
                    "offset2": 1
                },
                "offset_3": {
                    "offset3": 1
                },
                "offset_4": {
                    "offset4": 1
                },
                "param_1": {
                    "arg1": 1,
                    "base_address": 2,
                    "binary_address": 3,
                    "checksum_data": 1,
                    "data": 3,
                    "data_buffer": 1,
                    "data_ptr": 2,
                    "data_struct": 1,
                    "input": 6,
                    "input_address": 1,
                    "input_param": 1,
                    "input_pointer": 1,
                    "input_ptr": 3,
                    "input_struct": 1,
                    "memory_address": 2,
                    "memory_block": 1,
                    "offsets": 1
                },
                "param_2": {
                    "arg2": 1,
                    "param1": 7,
                    "param2": 11,
                    "param_2": 2,
                    "param_a": 2,
                    "param_address_1": 1,
                    "param_offset1": 1,
                    "param_ptr1": 1,
                    "param_value_1": 1,
                    "parameter2": 1,
                    "value1": 1,
                    "value2": 1,
                    "value_1": 1
                },
                "param_3": {
                    "arg3": 1,
                    "param2": 7,
                    "param3": 11,
                    "param_3": 2,
                    "param_address_2": 1,
                    "param_b": 2,
                    "param_offset2": 1,
                    "param_ptr2": 1,
                    "param_value_2": 1,
                    "parameter3": 1,
                    "value2": 1,
                    "value3": 1,
                    "value_2": 1
                },
                "uVar1": {
                    "result1": 25,
                    "result_1": 4,
                    "result_a": 1,
                    "size1": 1
                },
                "uVar3": {
                    "result2": 10,
                    "result3": 14,
                    "result_2": 1,
                    "result_3": 3,
                    "result_b": 1,
                    "size3": 1,
                    "temp1": 1
                },
                "uVar4": {
                    "result3": 10,
                    "result4": 14,
                    "result_3": 1,
                    "result_4": 3,
                    "result_c": 1,
                    "size4": 1,
                    "temp2": 1
                },
                "uVar5": {
                    "result4": 10,
                    "result5": 14,
                    "result_4": 1,
                    "result_5": 3,
                    "result_d": 1,
                    "size5": 1,
                    "temp3": 1
                },
                "uVar6": {
                    "result5": 7,
                    "result6": 12,
                    "result_6": 3,
                    "result_e": 1,
                    "size6": 1,
                    "temp": 1,
                    "temp1": 2,
                    "temp2": 1,
                    "temp4": 1,
                    "temp_var2": 1,
                    "threshold": 1
                },
                "uVar7": {
                    "combined_result": 1,
                    "result": 1,
                    "result5": 3,
                    "result6": 7,
                    "result7": 11,
                    "result_5": 1,
                    "result_7": 3,
                    "result_f": 1,
                    "temp2": 2,
                    "temp5": 1
                }
            },
            "called": [
                "FUN_08008590",
                "FUN_080028bc",
                "FUN_08008e44",
                "FUN_08008ba0",
                "FUN_08002908",
                "FUN_08008e3c",
                "FUN_08008bf0",
                "FUN_08009318",
                "FUN_08008640",
                "FUN_08008eec",
                "FUN_0800856c",
                "FUN_080094c0"
            ],
            "calling": [
                "FUN_08002e08"
            ],
            "code": "\nvoid calculate_total_length_08002c18(int input,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 result1;\n  int result2;\n  undefined4 result3;\n  undefined4 result4;\n  undefined4 result5;\n  uint result6;\n  undefined8 result7;\n  int local_var1;\n  uint local_var2;\n  \n  result1 = FUN_08008e3c(*(undefined4 *)(input + 0x3c));\n  result1 = FUN_08008eec(result1,param2);\n  result7 = FUN_08008590(result1);\n  result7 = FUN_08009318((int)result7,(int)((ulonglong)result7 >> 0x20));\n  result1 = FUN_08008bf0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  *(undefined4 *)(input + 0x28) = result1;\n  result1 = FUN_08008e3c(*(undefined4 *)(input + 0x3c));\n  result1 = FUN_08008eec(result1,param3);\n  result7 = FUN_08008590(result1);\n  result7 = FUN_08009318((int)result7,(int)((ulonglong)result7 >> 0x20));\n  result1 = FUN_08008bf0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  *(undefined4 *)(input + 0x2c) = result1;\n  result7 = FUN_0800856c(*(int *)(input + 0x30) * 0x32);\n  result7 = FUN_08008640((int)result7,(int)((ulonglong)result7 >> 0x20),0,0x404e0000);\n  result2 = FUN_08008ba0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  result1 = FUN_08008e3c(*(undefined4 *)(input + 0x28));\n  result3 = FUN_08008e3c(*(undefined4 *)(input + 0x3c));\n  result4 = FUN_08008e44(result2);\n  result1 = FUN_080028bc(result1,result3,result4);\n  result7 = FUN_08008590(result1);\n  result7 = FUN_08009318((int)result7,(int)((ulonglong)result7 >> 0x20));\n  local_var2 = FUN_08008ba0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  result1 = FUN_08008e3c(*(undefined4 *)(input + 0x3c));\n  result3 = FUN_08008e3c(*(undefined4 *)(input + 0x2c));\n  result4 = FUN_08008e44(-result2);\n  result1 = FUN_080028bc(result1,result3,result4);\n  result7 = FUN_08008590(result1);\n  result7 = FUN_080094c0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  local_var1 = FUN_08008ba0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  local_var1 = (*(int *)(input + 0x10) - local_var2) - local_var1;\n  if (local_var1 < 0) {\n    result1 = FUN_08008e3c(*(undefined4 *)(input + 0x28));\n    result3 = FUN_08008e3c(*(undefined4 *)(input + 0x2c));\n    result4 = FUN_08008e44(result2);\n    result5 = FUN_08008e44(*(undefined4 *)(input + 0x10));\n    result1 = FUN_08002908(result1,result3,result4,result5);\n    result7 = FUN_08008590(result1);\n    result7 = FUN_08009318((int)result7,(int)((ulonglong)result7 >> 0x20));\n    result6 = FUN_08008ba0((int)result7,(int)((ulonglong)result7 >> 0x20));\n    result6 = result6 & ~((int)result6 >> 0x1f);\n    local_var2 = *(uint *)(input + 0x10);\n    if ((int)result6 <= (int)*(uint *)(input + 0x10)) {\n      local_var2 = result6;\n    }\n    local_var1 = 0;\n  }\n  *(uint *)(input + 0x34) = local_var2;\n  *(uint *)(input + 0x38) = local_var1 + local_var2;\n  return;\n}\n\n",
            "current_name": "calculate_total_length_08002c18",
            "entrypoint": "0x08002c18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002c18": "calculate_total_length_08002c18",
                "iVar2": "result2",
                "local_1c": "local_var2",
                "local_20": "local_var1",
                "param_1": "input",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "result1",
                "uVar3": "result3",
                "uVar4": "result4",
                "uVar5": "result5",
                "uVar6": "result6",
                "uVar7": "result7"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002e08": {
            "additional_data": {
                "DAT_20000cf0": {
                    "end_byte": 1,
                    "ending_byte": 1
                },
                "DAT_20000cf1": {
                    "start_byte": 1,
                    "target_byte": 1
                },
                "FUN_08002870": {
                    "get_next_byte": 4,
                    "get_next_value": 1
                },
                "FUN_08002c18": {
                    "process_data": 1,
                    "process_entry": 1,
                    "update_data": 3
                },
                "FUN_08002e08": {
                    "initialize_process": 1,
                    "process_data": 28,
                    "process_entries": 1,
                    "update_data": 1
                },
                "FUN_08009054": {
                    "calculate_checksum": 1,
                    "calculate_hash": 1,
                    "calculate_result": 1,
                    "calculate_value": 2
                },
                "iVar3": {
                    "array_index": 2,
                    "index": 15,
                    "multiplication_result": 1,
                    "offset": 4
                },
                "local_11": {
                    "byte_val": 1,
                    "byte_value": 7,
                    "condition_byte": 1,
                    "counter": 1,
                    "current_byte": 16,
                    "index": 1,
                    "target": 1
                },
                "local_18": {
                    "current_data": 10,
                    "current_data_pointer": 1,
                    "current_entry": 1,
                    "current_pointer": 1,
                    "data_pointer": 6,
                    "data_ptr": 7,
                    "p_data": 1,
                    "ptr_data": 1
                },
                "param_1": {
                    "data_array": 1
                },
                "param_2": {
                    "data_size": 1
                },
                "param_3": {
                    "param_3": 1
                },
                "param_4": {
                    "param_4": 1
                },
                "uVar1": {
                    "param1": 1,
                    "result1": 20,
                    "result_1": 1
                },
                "uVar2": {
                    "param2": 1,
                    "result2": 20,
                    "result_2": 1
                }
            },
            "called": [
                "FUN_08009054",
                "FUN_08002870",
                "FUN_08002c18"
            ],
            "calling": [
                "FUN_08002edc"
            ],
            "code": "\nvoid process_data_08002e08(void)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int index;\n  undefined *current_data;\n  byte current_byte;\n  \n  current_data = (undefined *)0x0;\n  current_byte = DAT_20000cf1;\n  while (current_byte != DAT_20000cf0) {\n    index = (uint)current_byte * 0x40;\n    if ((current_data != (undefined *)0x0) &&\n       ((current_data[0x24] != '\\0' || ((&DAT_20000894)[index] != '\\0')))) {\n      result1 = FUN_08009054(*(undefined4 *)(current_data + 0x18),*(undefined4 *)(current_data + 0x14));\n      result2 = FUN_08009054(*(undefined4 *)(&DAT_20000888 + index),*(undefined4 *)(current_data + 0x14));\n      FUN_08002c18(current_data,result1,result2);\n      current_data[0x24] = 0;\n    }\n    current_byte = FUN_08002870(current_byte);\n    current_data = &DAT_20000870 + index;\n  }\n  result1 = FUN_08009054(*(undefined4 *)(current_data + 0x18),*(undefined4 *)(current_data + 0x14));\n  result2 = FUN_08009054(0,*(undefined4 *)(current_data + 0x14));\n  FUN_08002c18(current_data,result1,result2);\n  current_data[0x24] = 0;\n  return;\n}\n\n",
            "current_name": "process_data_08002e08",
            "entrypoint": "0x08002e08",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002e08": "process_data_08002e08",
                "iVar3": "index",
                "local_11": "current_byte",
                "local_18": "current_data",
                "uVar1": "result1",
                "uVar2": "result2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002edc": {
            "additional_data": {
                "FUN_08002a94": {
                    "configure_hardware": 1,
                    "initialize_component1": 1,
                    "initialize_component_a": 1,
                    "initialize_dependency_a": 1,
                    "initialize_first_component": 2,
                    "initialize_function1": 1,
                    "initialize_module_1": 2,
                    "initialize_network": 1,
                    "initialize_parameters": 1,
                    "initialize_sensors": 1,
                    "initialize_something": 1,
                    "initialize_step_1": 1,
                    "initialize_subfunction1": 1,
                    "initialize_subsystem1": 1,
                    "initialize_subsystem_1": 1,
                    "initialize_system": 3,
                    "load_data": 2,
                    "perform_first_task": 2,
                    "perform_initialization": 2,
                    "perform_preparation": 1,
                    "setup_logging": 1,
                    "setup_network": 1,
                    "setup_process": 1,
                    "setup_security": 1
                },
                "FUN_08002ba8": {
                    "configure_components": 2,
                    "configure_settings": 4,
                    "connect_devices": 1,
                    "initialize_component2": 1,
                    "initialize_component_b": 1,
                    "initialize_database": 1,
                    "initialize_dependency_b": 1,
                    "initialize_devices": 1,
                    "initialize_function2": 1,
                    "initialize_module_2": 2,
                    "initialize_network": 1,
                    "initialize_second_component": 2,
                    "initialize_step_2": 1,
                    "initialize_subfunction2": 1,
                    "initialize_subsystem2": 1,
                    "initialize_subsystem_2": 1,
                    "load_configuration": 1,
                    "load_data": 2,
                    "load_data_files": 1,
                    "perform_configuration": 1,
                    "perform_operations": 1,
                    "perform_second_task": 2,
                    "setup_environment": 1
                },
                "FUN_08002e08": {
                    "check_system_status": 1,
                    "execute": 1,
                    "initialize_component3": 1,
                    "initialize_component_c": 1,
                    "initialize_dependency_c": 1,
                    "initialize_function3": 1,
                    "initialize_graphics": 1,
                    "initialize_module_3": 2,
                    "initialize_step_3": 1,
                    "initialize_subfunction3": 1,
                    "initialize_subsystem3": 1,
                    "initialize_subsystem_3": 1,
                    "initialize_third_component": 2,
                    "load_config": 1,
                    "load_configuration": 2,
                    "load_data": 1,
                    "perform_initialization": 1,
                    "perform_operations": 1,
                    "perform_third_task": 2,
                    "run_program": 1,
                    "setup_environment": 1,
                    "start_execution": 4,
                    "start_processing": 1
                },
                "FUN_08002edc": {
                    "execute_initial_setup": 1,
                    "execute_initial_tasks": 1,
                    "execute_initialization": 1,
                    "execute_main_function": 1,
                    "execute_main_functions": 1,
                    "initialize": 3,
                    "initialize_app": 2,
                    "initialize_application": 4,
                    "initialize_components": 5,
                    "initialize_program": 5,
                    "initialize_system": 5
                }
            },
            "called": [
                "FUN_08002a94",
                "FUN_08002ba8",
                "FUN_08002e08"
            ],
            "calling": [
                "FUN_08003004",
                "FUN_08003618"
            ],
            "code": "\nvoid initialize_system_08002edc(void)\n\n{\n  FUN_08002a94();\n  FUN_08002ba8();\n  FUN_08002e08();\n  return;\n}\n\n",
            "current_name": "initialize_system_08002edc",
            "entrypoint": "0x08002edc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002edc": "initialize_system_08002edc"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ef0": {
            "additional_data": {
                "DAT_20000cf0": {
                    "previous_character": 1,
                    "user_data": 1
                },
                "DAT_20000cf1": {
                    "current_character": 1,
                    "initialized_data": 1,
                    "previous_data": 2
                },
                "DAT_20000cf2": {
                    "new_data": 1,
                    "processed_character": 1,
                    "processed_data": 2
                },
                "FUN_08002870": {
                    "calculate_checksum": 1,
                    "get_char": 2,
                    "get_char_value": 1,
                    "get_updated_char": 1,
                    "get_updated_value": 2,
                    "perform_operation": 1,
                    "process_character": 4,
                    "process_data": 13,
                    "process_input": 5,
                    "process_input_data": 1
                },
                "FUN_08002ef0": {
                    "copy_and_update_data": 1,
                    "copy_data": 2,
                    "initialize_data": 22,
                    "initialize_variables": 1,
                    "initiate_data_transfer": 1,
                    "update_data": 3,
                    "update_variables": 1
                },
                "param_1": {
                    "character": 2,
                    "data": 1,
                    "input": 2,
                    "input_char": 5,
                    "input_character": 1,
                    "input_data": 15,
                    "input_value": 1
                }
            },
            "called": [
                "FUN_08002870"
            ],
            "calling": [
                "FUN_08002f24"
            ],
            "code": "\nvoid initialize_data_08002ef0(void)\n\n{\n  DAT_20000cf1 = DAT_20000cf0;\n  DAT_20000cf2 = FUN_08002870(DAT_20000cf0);\n  return;\n}\n\n",
            "current_name": "initialize_data_08002ef0",
            "entrypoint": "0x08002ef0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ef0": "initialize_data_08002ef0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f24": {
            "additional_data": {
                "FUN_08002ef0": {
                    "execute_initial_setup": 1,
                    "execute_initialization": 1,
                    "execute_task": 1,
                    "initialize_buffer": 1,
                    "initialize_components": 2,
                    "initialize_subsystem": 1,
                    "initialize_subsystems": 1,
                    "perform_additional_tasks": 1,
                    "perform_initialization": 13,
                    "perform_pre_initialization": 1,
                    "perform_preparation": 1,
                    "perform_preprocessing": 2,
                    "perform_setup": 1,
                    "perform_startup_tasks": 1,
                    "pre_initialization": 1,
                    "pre_process_data": 1,
                    "preliminary_setup": 1
                },
                "FUN_08002f24": {
                    "execute_initialization": 1,
                    "execute_main_function": 1,
                    "initialize": 1,
                    "initialize_application": 3,
                    "initialize_data": 19,
                    "initialize_data_structure": 1,
                    "initialize_game_data": 1,
                    "initialize_program": 2,
                    "initialize_system": 1,
                    "initiate_data_processing": 1
                },
                "FUN_0800b430": {
                    "clear_data": 1,
                    "clear_memory": 4,
                    "copy_data": 6,
                    "copy_data_buffer": 1,
                    "copy_memory": 2,
                    "copy_memory_block": 1,
                    "create_data_block": 1,
                    "fill_data": 2,
                    "fill_memory": 1,
                    "initialize_array": 1,
                    "initialize_data": 2,
                    "initialize_data_array": 1,
                    "initialize_data_block": 1,
                    "initialize_memory": 5,
                    "set_initial_buffer": 1,
                    "set_memory_block": 1
                },
                "param_1": {
                    "data": 1,
                    "data_array": 2,
                    "data_ptr": 2,
                    "destination": 1
                },
                "param_2": {
                    "initial_value": 1,
                    "param": 1,
                    "param2": 1,
                    "param_2": 1,
                    "subsystem_param": 1,
                    "value": 1
                },
                "param_3": {
                    "data_length": 1,
                    "data_size": 1,
                    "length": 2,
                    "size": 2
                }
            },
            "called": [
                "FUN_0800b430",
                "FUN_08002ef0"
            ],
            "calling": [
                "FUN_08001ddc"
            ],
            "code": "\nvoid initialize_data_structure_08002f24(void)\n\n{\n  FUN_08002ef0();\n  FUN_0800b430(&DAT_20000cf4,0,0x1c);\n  return;\n}\n\n",
            "current_name": "initialize_data_structure_08002f24",
            "entrypoint": "0x08002f24",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f24": "initialize_data_structure_08002f24"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f40": {
            "additional_data": {
                "DAT_20000cf0": {
                    "current_cf0": 1,
                    "current_data": 5,
                    "current_data_value": 1,
                    "data_prev_value": 1,
                    "old_dat_variable": 1,
                    "original_data": 2,
                    "previous_value": 1
                },
                "DAT_20000cf1": {
                    "current_cf1": 1,
                    "current_value": 1,
                    "data_new_value": 1,
                    "new_dat_variable": 1,
                    "new_data": 1,
                    "previous_data": 3,
                    "updated_data": 4,
                    "updated_data_value": 1
                },
                "FUN_08002870": {
                    "fetch_updated_data": 1,
                    "process_dat_variable": 1,
                    "process_data": 3,
                    "process_input_char": 1,
                    "reverse_byte": 2,
                    "reverse_byte_sequence": 1,
                    "reverse_char": 3,
                    "reverse_character": 2,
                    "reverse_data": 10,
                    "reverse_string": 4,
                    "update_value": 1
                },
                "FUN_08002f40": {
                    "check_and_update_data": 6,
                    "update_cf1_if_cf0_different": 1,
                    "update_dat_variable_if_different": 1,
                    "update_dat_variable_if_not_equal": 1,
                    "update_data": 1,
                    "update_data_if_changed": 1,
                    "update_data_if_different": 3,
                    "update_data_if_mismatch": 2,
                    "update_data_if_needed": 7,
                    "update_data_if_not_equal": 2,
                    "update_if_different": 3,
                    "update_if_different_values": 1,
                    "update_value_if_needed": 1,
                    "validate_data": 1
                },
                "char": {
                    "byte": 1
                },
                "param_1": {
                    "character": 1,
                    "data": 8,
                    "data_to_reverse": 1,
                    "data_to_update": 1,
                    "input_byte": 2,
                    "input_char": 4,
                    "input_data": 5,
                    "input_string": 4,
                    "input_variable": 1,
                    "value_to_update": 1
                }
            },
            "called": [
                "FUN_08002870"
            ],
            "calling": [
                "FUN_080053a0"
            ],
            "code": "\nvoid update_data_if_needed_08002f40(void)\n\n{\n  if (DAT_20000cf0 != DAT_20000cf1) {\n    DAT_20000cf1 = FUN_08002870(DAT_20000cf1);\n  }\n  return;\n}\n\n",
            "current_name": "update_data_if_needed_08002f40",
            "entrypoint": "0x08002f40",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f40": "update_data_if_needed_08002f40"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f74": {
            "additional_data": {
                "0x40": {
                    "data_block_size": 1
                },
                "DAT_20000cf0": {
                    "current_data_count": 1,
                    "current_index": 1,
                    "data_count_limit": 1,
                    "data_start_index": 2,
                    "start_block_index": 1,
                    "start_index": 3,
                    "total_memory_blocks": 1
                },
                "DAT_20000cf1": {
                    "active_memory_block_index": 1,
                    "current_data_index": 1,
                    "current_index": 1,
                    "data_end_index": 1,
                    "end_block_index": 1,
                    "end_index": 3,
                    "max_data_count": 1,
                    "total_entries": 1
                },
                "FUN_08002f74": {
                    "get_active_data": 1,
                    "get_active_data_block": 1,
                    "get_active_data_pointer": 1,
                    "get_active_memory_block": 2,
                    "get_current_data_address": 1,
                    "get_current_data_block": 2,
                    "get_current_data_pointer": 2,
                    "get_current_item": 1,
                    "get_current_pointer": 1,
                    "get_currently_selected_data": 1,
                    "get_data_address": 1,
                    "get_data_pointer": 7,
                    "get_last_data_block_pointer": 1,
                    "get_memory_block": 1,
                    "get_next_available_entry": 1,
                    "get_next_data_block": 5,
                    "get_next_undefined": 1,
                    "get_valid_pointer": 1
                },
                "puVar1": {
                    "active_block_address": 1,
                    "active_data_block": 1,
                    "active_data_pointer": 2,
                    "active_memory_block": 1,
                    "current_block_ptr": 1,
                    "current_data_address": 1,
                    "current_data_block": 1,
                    "current_data_pointer": 2,
                    "current_item": 1,
                    "current_pointer": 1,
                    "data_address": 1,
                    "data_pointer": 6,
                    "last_data_block_pointer": 1,
                    "memory_block": 1,
                    "next_data_block": 1,
                    "next_data_block_ptr": 4,
                    "next_entry": 1,
                    "next_undefined_ptr": 1,
                    "result": 1,
                    "selected_data_ptr": 1,
                    "valid_pointer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080053a0",
                "FUN_08002fd4"
            ],
            "code": "\nundefined * get_current_data_pointer_08002f74(void)\n\n{\n  undefined *data_pointer;\n  \n  if (DAT_20000cf0 == DAT_20000cf1) {\n    data_pointer = (undefined *)0x0;\n  }\n  else {\n    data_pointer = &DAT_20000870 + (uint)DAT_20000cf1 * 0x40;\n  }\n  return data_pointer;\n}\n\n",
            "current_name": "get_current_data_pointer_08002f74",
            "entrypoint": "0x08002f74",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f74": "get_current_data_pointer_08002f74",
                "puVar1": "data_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002fac": {
            "additional_data": {
                "": {
                    "": 1
                },
                "DAT_20000cf1": {
                    "data1": 9,
                    "data_1": 1,
                    "data_array1": 1,
                    "first_data": 1,
                    "first_data_address": 1,
                    "first_value": 2,
                    "pointer1": 1,
                    "value1": 6,
                    "variable1": 1
                },
                "DAT_20000cf2": {
                    "data2": 9,
                    "data_2": 1,
                    "data_array2": 1,
                    "pointer2": 1,
                    "second_data": 1,
                    "second_data_address": 1,
                    "second_value": 2,
                    "value2": 6,
                    "variable2": 1
                },
                "FUN_08002fac": {
                    "are_data_addresses_equal": 1,
                    "are_data_arrays_equal": 1,
                    "are_data_equal": 6,
                    "are_data_pointers_equal": 2,
                    "are_data_values_equal": 2,
                    "are_equal": 1,
                    "are_pointers_equal": 2,
                    "are_variables_equal": 2,
                    "check_data_equality": 1,
                    "check_equality": 9,
                    "check_if_equal": 1,
                    "compare_data": 2,
                    "compare_values": 1
                },
                "cf1": {
                    "first_data": 1
                },
                "cf2": {
                    "second_data": 1
                },
                "return": {
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001e98"
            ],
            "code": "\nbool are_data_pointers_equal_08002fac(void)\n\n{\n  result DAT_20000cf1 == DAT_20000cf2;\n}\n\n",
            "current_name": "are_data_pointers_equal_08002fac",
            "entrypoint": "0x08002fac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002fac": "are_data_pointers_equal_08002fac",
                "return": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002fd4": {
            "additional_data": {
                "DAT_20000ea8": {
                    "done": 1,
                    "exit_condition": 1,
                    "exit_flag": 8,
                    "flag": 1,
                    "flag2": 1,
                    "is_break_needed": 1,
                    "is_finished": 1,
                    "is_task_completed": 1
                },
                "DAT_20000ea9": {
                    "condition": 1,
                    "condition_flag": 2,
                    "current_state": 1,
                    "end_flag": 1,
                    "exit_code": 1,
                    "flag": 3,
                    "flag1": 1,
                    "flag_condition": 1,
                    "is_flag_set": 1,
                    "loop_condition": 1,
                    "special_condition": 1,
                    "status": 1,
                    "termination_condition": 1
                },
                "FUN_08002f74": {
                    "fetch_data": 4,
                    "get_data": 4,
                    "get_input": 3,
                    "get_next_data": 1,
                    "get_next_result": 1,
                    "get_next_value": 6,
                    "get_pointer": 1,
                    "get_random_value": 1,
                    "get_result": 1,
                    "get_return_value": 2,
                    "get_status": 1,
                    "get_status_code": 1,
                    "get_sub_function_result": 1,
                    "get_value": 1,
                    "retrieve_data": 3
                },
                "FUN_08002fd4": {
                    "check_conditions": 1,
                    "check_exit_condition": 1,
                    "check_for_exit_condition": 1,
                    "check_state_and_execute": 1,
                    "check_status": 1,
                    "process_data": 24
                },
                "FUN_08003a74": {
                    "do_processing": 1,
                    "do_something": 2,
                    "execute_action": 1,
                    "execute_operation": 1,
                    "execute_process": 1,
                    "execute_task": 2,
                    "handle_event": 1,
                    "perform_action": 11,
                    "perform_operation": 4,
                    "perform_task": 2,
                    "process_data": 1,
                    "process_data2": 1,
                    "process_data_step": 1,
                    "process_next_data": 1,
                    "process_next_item": 1
                },
                "iVar1": {
                    "next_value": 1,
                    "result": 13,
                    "return_value": 1,
                    "status": 1
                }
            },
            "called": [
                "FUN_08002f74",
                "FUN_08003a74"
            ],
            "calling": [
                "FUN_080005b4",
                "FUN_08002408",
                "FUN_0800525c",
                "FUN_080024c4",
                "FUN_08000220"
            ],
            "code": "\nvoid process_data_08002fd4(void)\n\n{\n  int result;\n  \n  while ((result = FUN_08002f74(), result != 0 || (DAT_20000ea9 == '\\x03'))) {\n    FUN_08003a74();\n    if (DAT_20000ea8 != '\\0') {\n      return;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08002fd4",
            "entrypoint": "0x08002fd4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002fd4": "process_data_08002fd4",
                "iVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003004": {
            "additional_data": {
                "FUN_08003004": {
                    "calculate_data": 2,
                    "calculate_error": 1,
                    "calculate_function": 1,
                    "calculate_function_result": 1,
                    "calculate_metrics": 5,
                    "calculate_quality_score": 1,
                    "calculate_quality_scores": 1,
                    "calculate_result": 3,
                    "calculate_score": 1,
                    "calculate_score_and_update_values": 1,
                    "calculate_scores": 1,
                    "calculate_status": 3,
                    "calculate_threshold": 1,
                    "check_and_calculate_statistics": 1
                },
                "FUN_08008590": {
                    "calculate_checksum": 1
                },
                "FUN_08008eec": {
                    "find_value": 1
                },
                "FUN_080095b8": {
                    "compare_values": 1
                },
                "iVar10": {
                    "index": 14,
                    "offset": 8,
                    "offset_index": 1,
                    "result10": 2,
                    "result_10": 1,
                    "temp2": 1,
                    "value5": 1,
                    "variable5": 1
                },
                "iVar12": {
                    "abs_diff": 1,
                    "abs_difference": 1,
                    "abs_error": 1,
                    "abs_value": 1,
                    "absolute_diff": 1,
                    "absolute_difference": 3,
                    "diff": 5,
                    "difference": 9,
                    "metric_diff": 1,
                    "result12": 1,
                    "result_length": 1,
                    "temp3": 1,
                    "temp_value": 1,
                    "temp_var7": 1,
                    "temp_var_1": 1,
                    "variable6": 1
                },
                "iVar2": {
                    "calculated_score_a": 1,
                    "error1": 1,
                    "index1": 1,
                    "int_val1": 1,
                    "metric1": 1,
                    "output2": 1,
                    "result1": 1,
                    "result1_int": 1,
                    "result2": 13,
                    "result_2": 2,
                    "score1": 2,
                    "temp_value2": 1,
                    "value1": 2,
                    "var1": 1,
                    "variable1": 1
                },
                "iVar3": {
                    "calculated_score_b": 1,
                    "error2": 1,
                    "index2": 1,
                    "int_val2": 1,
                    "metric2": 1,
                    "output3": 1,
                    "result2": 1,
                    "result2_int": 1,
                    "result3": 13,
                    "result_3": 2,
                    "score2": 2,
                    "temp_value3": 1,
                    "value2": 2,
                    "var2": 1,
                    "variable2": 1
                },
                "iVar4": {
                    "calculated_score_c": 1,
                    "error3": 1,
                    "index3": 1,
                    "int_val3": 1,
                    "metric3": 1,
                    "output4": 1,
                    "result3": 1,
                    "result3_int": 1,
                    "result4": 13,
                    "result_4": 2,
                    "score3": 2,
                    "temp_value4": 1,
                    "value3": 2,
                    "var3": 1,
                    "variable3": 1
                },
                "local_1c": {
                    "adjusted_value": 1,
                    "another_value": 1,
                    "local_result2": 1,
                    "local_value2": 1,
                    "local_var2": 6,
                    "local_var_2": 1,
                    "local_variable2": 3,
                    "local_variable_2": 1,
                    "result10": 2,
                    "result_14": 1,
                    "result_j": 1,
                    "score_diff2": 1,
                    "temp2": 1,
                    "temp9": 1,
                    "temp_local_var2": 1,
                    "temp_result": 2,
                    "temp_result2": 1,
                    "temp_var2": 1,
                    "value2": 1,
                    "var2": 2
                },
                "local_20": {
                    "final_result": 1,
                    "local_result1": 1,
                    "local_value1": 1,
                    "local_var1": 6,
                    "local_var_1": 1,
                    "local_variable1": 3,
                    "local_variable_1": 1,
                    "result9": 2,
                    "result_13": 1,
                    "result_i": 1,
                    "score_diff1": 1,
                    "some_value": 1,
                    "temp1": 1,
                    "temp8": 1,
                    "temp_flag": 1,
                    "temp_local_var": 1,
                    "temp_result1": 1,
                    "temp_var1": 1,
                    "threshold": 1,
                    "value1": 1,
                    "var1": 2
                },
                "param_1": {
                    "default_value": 1,
                    "input1": 8,
                    "input_param1": 1,
                    "input_param_1": 1,
                    "input_value1": 2,
                    "param1": 6,
                    "param_1": 2,
                    "score_a": 1,
                    "value1": 6,
                    "value_1": 1,
                    "var_1": 1,
                    "width": 1
                },
                "param_2": {
                    "default_value": 1,
                    "height": 1,
                    "input2": 8,
                    "input_param2": 1,
                    "input_param_2": 1,
                    "input_value2": 2,
                    "param2": 6,
                    "param_2": 2,
                    "score_b": 1,
                    "value2": 6,
                    "value_2": 1,
                    "var_2": 1
                },
                "param_3": {
                    "default_value": 1,
                    "depth": 1,
                    "input3": 8,
                    "input_param3": 1,
                    "input_param_3": 1,
                    "input_value3": 2,
                    "param3": 6,
                    "param_3": 2,
                    "score_c": 1,
                    "value3": 6,
                    "value_3": 1,
                    "var_3": 1
                },
                "param_4": {
                    "default_value": 1,
                    "input4": 8,
                    "input_param4": 1,
                    "input_param_4": 1,
                    "input_value4": 1,
                    "param4": 6,
                    "param_4": 2,
                    "param_d": 1,
                    "reference_value": 1,
                    "size": 1,
                    "value4": 6,
                    "value_4": 1,
                    "var_4": 1
                },
                "param_5": {
                    "condition": 1,
                    "flag": 17,
                    "input_param_5": 1,
                    "is_comparison_required": 1,
                    "is_flag_set": 1,
                    "is_input_param5_true": 1,
                    "is_param5_true": 1,
                    "param5": 4,
                    "param_5": 3,
                    "param_e": 1
                },
                "puVar11": {
                    "data": 1,
                    "data_array": 1,
                    "data_pointer": 3,
                    "pointer": 9,
                    "pointer1": 2,
                    "pointer_array": 1,
                    "pointer_value": 1,
                    "pointer_var": 2,
                    "ptr": 3,
                    "ptr_data": 1,
                    "ptr_to_score": 1,
                    "ptr_to_update": 1,
                    "result_array": 1,
                    "score_array": 1,
                    "status_ptr": 2
                },
                "uVar1": {
                    "output1": 1,
                    "result1": 23,
                    "result_1": 2,
                    "result_a": 1,
                    "temp_value1": 1,
                    "temp_var1": 1
                },
                "uVar13": {
                    "diff2": 1,
                    "max_abs_error": 1,
                    "max_diff": 2,
                    "max_difference": 1,
                    "max_score": 1,
                    "max_val": 1,
                    "max_value": 5,
                    "metric_max2": 1,
                    "min_score": 1,
                    "min_value": 3,
                    "result13": 3,
                    "result_max_length": 1,
                    "temp4": 1,
                    "temp_max_val": 1,
                    "temp_score": 1,
                    "temp_value": 1,
                    "temp_var8": 1,
                    "temp_var_2": 1,
                    "tmp_value": 1,
                    "value6": 1,
                    "variable7": 1
                },
                "uVar14": {
                    "calculated_value": 1,
                    "calculation1": 1,
                    "result1": 1,
                    "result14": 3,
                    "result2": 1,
                    "result6": 6,
                    "result_10": 1,
                    "result_f": 1,
                    "result_value1": 1,
                    "temp1": 2,
                    "temp5": 1,
                    "temp_result": 1,
                    "temp_result1": 3,
                    "temp_value1": 2,
                    "temp_var9": 1,
                    "temp_var_3": 1,
                    "temporary_result1": 1,
                    "tmp_result1": 1
                },
                "uVar15": {
                    "calculation2": 1,
                    "result15": 3,
                    "result2": 1,
                    "result3": 1,
                    "result7": 6,
                    "result_11": 1,
                    "result_g": 1,
                    "result_value2": 1,
                    "temp2": 2,
                    "temp6": 2,
                    "temp_result2": 4,
                    "temp_value2": 2,
                    "temp_var10": 1,
                    "temp_var_4": 1,
                    "temporary_result2": 1,
                    "tmp_result2": 1
                },
                "uVar16": {
                    "calculation3": 1,
                    "result16": 3,
                    "result3": 1,
                    "result4": 1,
                    "result8": 6,
                    "result_12": 1,
                    "result_h": 1,
                    "result_value3": 1,
                    "temp3": 2,
                    "temp7": 2,
                    "temp_result3": 4,
                    "temp_value3": 2,
                    "temp_var11": 1,
                    "temp_var_5": 1,
                    "temporary_result3": 1,
                    "tmp_result3": 1
                },
                "uVar5": {
                    "output5": 1,
                    "result2": 9,
                    "result5": 12,
                    "result_5": 2,
                    "result_b": 1,
                    "temp1": 2,
                    "temp_value5": 1,
                    "temp_var2": 1
                },
                "uVar6": {
                    "output6": 1,
                    "result3": 9,
                    "result6": 12,
                    "result_6": 2,
                    "result_c": 1,
                    "temp2": 2,
                    "temp_value6": 1,
                    "temp_var3": 1
                },
                "uVar7": {
                    "combined1": 1,
                    "output7": 1,
                    "result4": 8,
                    "result7": 12,
                    "result_7": 2,
                    "result_d": 1,
                    "temp3": 2,
                    "temp_value7": 1,
                    "temp_var4": 1
                },
                "uVar8": {
                    "combined2": 1,
                    "output8": 1,
                    "result5": 8,
                    "result8": 12,
                    "result_8": 2,
                    "result_e": 1,
                    "temp4": 2,
                    "temp_value8": 1,
                    "temp_var5": 1
                },
                "uVar9": {
                    "max_difference": 1,
                    "max_error": 1,
                    "max_score": 2,
                    "max_value": 8,
                    "metric_max1": 1,
                    "min_score": 1,
                    "min_val": 1,
                    "min_value": 4,
                    "result9": 4,
                    "result_9": 2,
                    "temp1": 1,
                    "temp5": 1,
                    "temp_var6": 1,
                    "value4": 1,
                    "variable4": 1
                }
            },
            "called": [
                "FUN_08008590",
                "FUN_08009264",
                "FUN_080098d0",
                "FUN_08008e44",
                "FUN_08008cd8",
                "FUN_08008894",
                "FUN_08008bf0",
                "FUN_08002870",
                "FUN_08008cdc",
                "FUN_08008eec",
                "FUN_08002edc",
                "FUN_08008b24",
                "FUN_08002978",
                "FUN_08008ba0",
                "FUN_08009054",
                "FUN_08009228",
                "FUN_080095b8",
                "FUN_08009250",
                "FUN_08008b60",
                "FUN_08008640",
                "FUN_08009318",
                "FUN_080082d0",
                "FUN_08008c30"
            ],
            "calling": [
                "FUN_08001e98"
            ],
            "code": "\nvoid calculate_function_result_08003004(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 char flag)\n\n{\n  undefined4 result1;\n  int result2;\n  int result3;\n  int result4;\n  undefined4 result5;\n  undefined4 result6;\n  undefined4 result7;\n  undefined4 result8;\n  uint max_value;\n  int index;\n  ushort *pointer;\n  int difference;\n  uint max_value;\n  undefined8 result6;\n  undefined8 result7;\n  undefined8 result8;\n  undefined4 local_var1;\n  undefined4 local_var2;\n  \n  index = (uint)DAT_20000cf0 * 0x40;\n  pointer = (ushort *)(&DAT_20000870 + index);\n  result1 = FUN_08008eec(DAT_20000ebc,input1);\n  result6 = FUN_08008590(result1);\n  result2 = FUN_080095b8((int)result6,(int)((ulonglong)result6 >> 0x20));\n  result1 = FUN_08008eec(DAT_20000ec0,input2);\n  result6 = FUN_08008590(result1);\n  result3 = FUN_080095b8((int)result6,(int)((ulonglong)result6 >> 0x20));\n  result1 = FUN_08008eec(DAT_20000ec4,input3);\n  result6 = FUN_08008590(result1);\n  result4 = FUN_080095b8((int)result6,(int)((ulonglong)result6 >> 0x20));\n  *pointer = 0;\n  if (result2 < DAT_20000cf4) {\n    *pointer = *pointer | 0x20;\n  }\n  if (result3 < DAT_20000cf8) {\n    *pointer = *pointer | 0x880;\n  }\n  if (result4 < DAT_20000cfc) {\n    *pointer = *pointer | 0x200;\n  }\n  difference = result2 - DAT_20000cf4;\n  if (difference < 0) {\n    difference = -difference;\n  }\n  *(int *)(&DAT_20000874 + index) = difference;\n  difference = result3 - DAT_20000cf8;\n  if (difference < 0) {\n    difference = -difference;\n  }\n  *(int *)(&DAT_20000878 + index) = difference;\n  difference = result4 - DAT_20000cfc;\n  if (difference < 0) {\n    difference = -difference;\n  }\n  *(int *)(&DAT_2000087c + index) = difference;\n  max_value = *(uint *)(&DAT_2000087c + index);\n  if (*(uint *)(&DAT_2000087c + index) < *(uint *)(&DAT_20000878 + index)) {\n    max_value = *(uint *)(&DAT_20000878 + index);\n  }\n  max_value = *(uint *)(&DAT_20000874 + index);\n  if (*(uint *)(&DAT_20000874 + index) < max_value) {\n    max_value = max_value;\n  }\n  *(uint *)(&DAT_20000880 + index) = max_value;\n  if (*(int *)(&DAT_20000880 + index) != 0) {\n    result1 = FUN_08008e44(result2 - DAT_20000cf4);\n    result1 = FUN_08009054(result1,DAT_20000ebc);\n    result5 = FUN_08008e44(result3 - DAT_20000cf8);\n    result5 = FUN_08009054(result5,DAT_20000ec0);\n    result6 = FUN_08008e44(result4 - DAT_20000cfc);\n    result6 = FUN_08009054(result6,DAT_20000ec4);\n    result7 = FUN_08008eec(result1,result1);\n    result8 = FUN_08008eec(result5,result5);\n    result7 = FUN_08008cdc(result7,result8);\n    result8 = FUN_08008eec(result6,result6);\n    result7 = FUN_08008cdc(result7,result8);\n    result6 = FUN_08008590(result7);\n    result6 = FUN_080098d0((int)result6,(int)((ulonglong)result6 >> 0x20));\n    result7 = FUN_08008c30((int)result6,(int)((ulonglong)result6 >> 0x20));\n    *(undefined4 *)(&DAT_20000890 + index) = result7;\n    result7 = FUN_08009054(0x3f800000,*(undefined4 *)(&DAT_20000890 + index));\n    if (flag == '\\0') {\n      local_var2 = FUN_08008eec(input4,result7);\n    }\n    else {\n      local_var2 = FUN_08009054(0x3f800000,input4);\n    }\n    result8 = FUN_08008eec(*(undefined4 *)(&DAT_20000890 + index),local_var2);\n    *(undefined4 *)(&DAT_20000884 + index) = result8;\n    result8 = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + index));\n    result8 = FUN_08008eec(result8,local_var2);\n    result6 = FUN_08008590(result8);\n    result6 = FUN_08009318((int)result6,(int)((ulonglong)result6 >> 0x20));\n    result8 = FUN_08008bf0((int)result6,(int)((ulonglong)result6 >> 0x20));\n    *(undefined4 *)(&DAT_200008ac + index) = result8;\n    result8 = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + index));\n    result8 = FUN_08008eec(result8,result7);\n    result8 = FUN_08008eec(result8,DAT_20000edc);\n    result8 = FUN_08009054(result8,0x453b8000);\n    result6 = FUN_08008590(result8);\n    result6 = FUN_08009318((int)result6,(int)((ulonglong)result6 >> 0x20));\n    result8 = FUN_08008ba0((int)result6,(int)((ulonglong)result6 >> 0x20));\n    *(undefined4 *)(&DAT_200008a0 + index) = result8;\n    max_value = FUN_08008eec(result1,result7);\n    result1 = FUN_08008eec(result5,result7);\n    result5 = FUN_08008eec(result6,result7);\n    local_var1 = 0;\n    if ((DAT_20000cf0 != DAT_20000cf1) && (difference = FUN_08009264(DAT_20000d0c,0), difference != 0)) {\n      result6 = FUN_08008eec(DAT_20000d00 ^ 0x80000000,max_value);\n      result7 = FUN_08008eec(DAT_20000d04,result1);\n      result6 = FUN_08008cd8(result6,result7);\n      result7 = FUN_08008eec(DAT_20000d08,result5);\n      result6 = FUN_08008cd8(result6,result7);\n      result6 = FUN_08008590(result6);\n      difference = FUN_08008b24((int)result6,(int)((ulonglong)result6 >> 0x20),0x66666666,0x3fee6666);\n      if (difference != 0) {\n        difference = FUN_08009228(DAT_20000d0c,*(undefined4 *)(&DAT_20000884 + index));\n        local_var1 = DAT_20000d0c;\n        if (difference == 0) {\n          local_var1 = *(undefined4 *)(&DAT_20000884 + index);\n        }\n        result6 = FUN_08008590(result6);\n        difference = FUN_08008b60((int)result6,(int)((ulonglong)result6 >> 0x20),0x66666666,0xbfee6666);\n        if (difference != 0) {\n          result6 = FUN_08008590(result6);\n          result6 = FUN_080082d0(0,0x3ff00000,(int)result6,(int)((ulonglong)result6 >> 0x20));\n          result6 = FUN_08008640((int)result6,(int)((ulonglong)result6 >> 0x20),0,0x3fe00000);\n          result6 = FUN_080098d0((int)result6,(int)((ulonglong)result6 >> 0x20));\n          result6 = FUN_08008c30((int)result6,(int)((ulonglong)result6 >> 0x20));\n          result6 = FUN_08008590(local_var1);\n          result7 = FUN_08008eec(DAT_20000edc,DAT_20000ee0);\n          result7 = FUN_08008eec(result7,result6);\n          result7 = FUN_08008590(result7);\n          result8 = FUN_08008590(result6);\n          result8 = FUN_080082d0(0,0x3ff00000,(int)result8,(int)((ulonglong)result8 >> 0x20));\n          result7 = FUN_08008894((int)result7,(int)((ulonglong)result7 >> 0x20),(int)result8,\n                                (int)((ulonglong)result8 >> 0x20));\n          result7 = FUN_080098d0((int)result7,(int)((ulonglong)result7 >> 0x20));\n          difference = FUN_08008b24((int)result6,(int)((ulonglong)result6 >> 0x20),(int)result7,\n                                (int)((ulonglong)result7 >> 0x20));\n          if (difference == 0) {\n            result7 = FUN_08008eec(DAT_20000edc,DAT_20000ee0);\n            result7 = FUN_08008eec(result7,result6);\n            result6 = FUN_08008590(result7);\n            result7 = FUN_08008590(result6);\n            result7 = FUN_080082d0(0,0x3ff00000,(int)result7,(int)((ulonglong)result7 >> 0x20));\n            result6 = FUN_08008894((int)result6,(int)((ulonglong)result6 >> 0x20),(int)result7,\n                                  (int)((ulonglong)result7 >> 0x20));\n            result6 = FUN_080098d0((int)result6,(int)((ulonglong)result6 >> 0x20));\n            local_var1 = FUN_08008c30((int)result6,(int)((ulonglong)result6 >> 0x20));\n          }\n        }\n      }\n    }\n    *(undefined4 *)(&DAT_2000088c + index) = local_var1;\n    result7 = FUN_08002978(DAT_20000edc ^ 0x80000000,0,*(undefined4 *)(&DAT_20000890 + index));\n    difference = FUN_08009228(local_var1,result7);\n    result6 = result7;\n    if (difference != 0) {\n      result6 = local_var1;\n    }\n    *(undefined4 *)(&DAT_20000888 + index) = result6;\n    difference = FUN_08009250(result7,*(undefined4 *)(&DAT_20000884 + index));\n    if (difference == 0) {\n      (&DAT_20000895)[index] = 0;\n    }\n    else {\n      (&DAT_20000895)[index] = 1;\n    }\n    (&DAT_20000894)[index] = 1;\n    DAT_20000d0c = *(undefined4 *)(&DAT_20000884 + index);\n    DAT_20000cf0 = DAT_20000cf2;\n    DAT_20000d00 = max_value;\n    DAT_20000d04 = result1;\n    DAT_20000d08 = result5;\n    DAT_20000cf2 = FUN_08002870(DAT_20000cf2);\n    DAT_20000cf4 = result2;\n    DAT_20000cf8 = result3;\n    DAT_20000cfc = result4;\n    FUN_08002edc();\n  }\n  return;\n}\n\n",
            "current_name": "calculate_function_result_08003004",
            "entrypoint": "0x08003004",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003004": "calculate_function_result_08003004",
                "iVar10": "index",
                "iVar12": "difference",
                "iVar2": "result2",
                "iVar3": "result3",
                "iVar4": "result4",
                "local_1c": "local_var2",
                "local_20": "local_var1",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "flag",
                "puVar11": "pointer",
                "uVar1": "result1",
                "uVar13": "max_value",
                "uVar14": "result6",
                "uVar15": "result7",
                "uVar16": "result8",
                "uVar5": "result5",
                "uVar6": "result6",
                "uVar7": "result7",
                "uVar8": "result8",
                "uVar9": "max_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080035ec": {
            "additional_data": {
                "FUN_080035ec": {
                    "initialize_data": 3,
                    "initialize_function": 1,
                    "initialize_parameters": 13,
                    "initialize_params": 4,
                    "initialize_variables": 5,
                    "set_data_to_globals": 1,
                    "set_parameters": 4
                },
                "param_1": {
                    "data1": 3,
                    "first_parameter": 1,
                    "input1": 5,
                    "input_1": 2,
                    "input_param1": 2,
                    "new_param1": 1,
                    "param1": 4,
                    "parameter1": 5,
                    "parameter_1": 1,
                    "val1": 1,
                    "value1": 6
                },
                "param_2": {
                    "data2": 3,
                    "input2": 5,
                    "input_2": 2,
                    "input_param2": 2,
                    "new_param2": 1,
                    "param2": 4,
                    "parameter2": 5,
                    "parameter_2": 1,
                    "second_parameter": 1,
                    "val2": 1,
                    "value2": 6
                },
                "param_3": {
                    "data3": 3,
                    "input3": 5,
                    "input_3": 2,
                    "input_param3": 2,
                    "new_param3": 1,
                    "param3": 4,
                    "parameter3": 5,
                    "parameter_3": 1,
                    "third_parameter": 1,
                    "val3": 1,
                    "value3": 6
                }
            },
            "called": [],
            "calling": [
                "FUN_0800283a"
            ],
            "code": "\nvoid initialize_parameters_080035ec(undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  DAT_20000cf4 = value1;\n  DAT_20000cf8 = value2;\n  DAT_20000cfc = value3;\n  return;\n}\n\n",
            "current_name": "initialize_parameters_080035ec",
            "entrypoint": "0x080035ec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080035ec": "initialize_parameters_080035ec",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003618": {
            "additional_data": {
                "DAT_20000880": {
                    "data_arra2": 1
                },
                "DAT_20000888": {
                    "unknown_data1": 1
                },
                "DAT_2000088c": {
                    "unknown_data2": 1
                },
                "DAT_20000890": {
                    "data_array1": 1
                },
                "DAT_20000894": {
                    "value_flag": 1
                },
                "DAT_20000895": {
                    "flag": 1
                },
                "DAT_20000cf1": {
                    "index": 1
                },
                "FUN_08002edc": {
                    "cleanup": 1,
                    "execute_function": 1,
                    "finalize": 1,
                    "finalize_data": 1,
                    "finalize_update": 9,
                    "perform_action": 3,
                    "perform_final_action": 1,
                    "perform_task": 1
                },
                "FUN_08003618": {
                    "initialize_data": 1,
                    "update_data": 30
                },
                "FUN_08008e44": {
                    "calculate1": 1,
                    "calculate_hash": 2,
                    "calculate_value": 4,
                    "calculate_value1": 2,
                    "compute_first_value": 1,
                    "get_data": 1,
                    "process_data": 4,
                    "process_data1": 2,
                    "process_input": 3,
                    "process_input1": 1,
                    "transform_data": 1
                },
                "FUN_08008eec": {
                    "calculate2": 1,
                    "calculate_value2": 2,
                    "combine_data": 7,
                    "combine_values": 1,
                    "compute_second_value": 1,
                    "initialize_data": 1,
                    "merge_data": 1,
                    "perform_operation": 1,
                    "process_data": 1,
                    "process_data2": 2,
                    "process_input2": 1,
                    "update_value": 3
                },
                "FUN_08009054": {
                    "calculate3": 1,
                    "calculate_data": 1,
                    "calculate_result": 2,
                    "calculate_value": 1,
                    "calculate_value3": 1,
                    "combine_data": 1,
                    "combine_values": 2,
                    "perform_operation": 2,
                    "process_data": 2,
                    "process_data3": 2,
                    "process_values": 1,
                    "update_data": 1,
                    "update_result": 3,
                    "update_values": 2
                },
                "iVar2": {
                    "index": 27,
                    "offset": 4
                },
                "param_1": {
                    "data": 11,
                    "data_to_update": 1,
                    "input": 4,
                    "input_data": 8,
                    "input_param": 1,
                    "input_value": 2,
                    "new_data": 1,
                    "new_value": 1,
                    "value": 2
                },
                "param_4": {
                    "data2": 1
                },
                "uVar1": {
                    "output1": 1,
                    "result": 10,
                    "result1": 18,
                    "result_1": 1,
                    "result_var1": 1
                },
                "uVar3": {
                    "data": 6,
                    "data1": 2,
                    "data_value": 2,
                    "old_value": 1,
                    "previous_value": 1,
                    "result2": 5,
                    "result_2": 1,
                    "stored_value": 1,
                    "temp": 1,
                    "temp1": 1,
                    "temp_data": 4,
                    "temp_var": 1,
                    "value": 4,
                    "value1": 1
                }
            },
            "called": [
                "FUN_08008e44",
                "FUN_08009054",
                "FUN_08008eec",
                "FUN_08002edc"
            ],
            "calling": [
                "FUN_080058a0"
            ],
            "code": "\nvoid update_data_08003618(undefined4 data)\n\n{\n  undefined4 result1;\n  int index;\n  undefined4 data;\n  \n  index = (uint)DAT_20000cf1 * 0x40;\n  data = *(undefined4 *)(&DAT_20000890 + index);\n  result1 = FUN_08008e44(data);\n  result1 = FUN_08008eec(data,result1);\n  data = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + index));\n  result1 = FUN_08009054(result1,data);\n  *(undefined4 *)(&DAT_20000890 + index) = result1;\n  *(undefined4 *)(&DAT_20000880 + index) = data;\n  *(undefined4 *)(&DAT_20000888 + index) = 0;\n  *(undefined4 *)(&DAT_2000088c + index) = 0;\n  (&DAT_20000895)[index] = 0;\n  (&DAT_20000894)[index] = 1;\n  FUN_08002edc();\n  return;\n}\n\n",
            "current_name": "update_data_08003618",
            "entrypoint": "0x08003618",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003618": "update_data_08003618",
                "iVar2": "index",
                "param_1": "data",
                "uVar1": "result1",
                "uVar3": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800369c": {
            "additional_data": {
                "FUN_0800369c": {
                    "convert_string": 1,
                    "iterate_and_call_function": 1,
                    "print_string": 7,
                    "process_string": 20,
                    "reverse_string": 1,
                    "string_processor": 1
                },
                "local_c": {
                    "current_char": 28,
                    "current_character": 3
                },
                "param_1": {
                    "input_string": 24,
                    "str": 1,
                    "string": 3,
                    "string_to_print": 2
                }
            },
            "called": [
                "FUN_08008250"
            ],
            "calling": [
                "FUN_080039bc",
                "FUN_08004900"
            ],
            "code": "\nvoid process_string_0800369c(char *input_string)\n\n{\n  char *current_char;\n  \n  current_char = input_string;\n  while (*current_char != '\\0') {\n    FUN_08008250(*current_char);\n    current_char = current_char + 1;\n  }\n  return;\n}\n\n",
            "current_name": "process_string_0800369c",
            "entrypoint": "0x0800369c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800369c": "process_string_0800369c",
                "local_c": "current_char",
                "param_1": "input_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080036c6": {
            "additional_data": {
                "FUB_080036c6": {
                    "print_string": 1
                },
                "FUN_080036c6": {
                    "print_characters": 1,
                    "print_message": 1,
                    "print_string": 9,
                    "process_input_string": 1,
                    "process_string": 18
                },
                "local_c": {
                    "current_char": 27,
                    "current_character": 4
                },
                "param_1": {
                    "input": 1,
                    "input_string": 23,
                    "message": 1,
                    "string": 6
                }
            },
            "called": [
                "FUN_08008250"
            ],
            "calling": [
                "FUN_080046d0",
                "FUN_0800423c",
                "FUN_08004250",
                "FUN_08004228",
                "FUN_08004940",
                "FUN_080041a0",
                "FUN_08004030",
                "FUN_08004148",
                "FUN_080044e8",
                "FUN_08004900"
            ],
            "code": "\nvoid process_input_string_080036c6(char *input_string)\n\n{\n  char *current_char;\n  \n  current_char = input_string;\n  while (*current_char != '\\0') {\n    FUN_08008250(*current_char);\n    current_char = current_char + 1;\n  }\n  return;\n}\n\n",
            "current_name": "process_input_string_080036c6",
            "entrypoint": "0x080036c6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080036c6": "process_input_string_080036c6",
                "local_c": "current_char",
                "param_1": "input_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080036f0": {
            "additional_data": {
                "FUN_080036f0": {
                    "binary_to_ascii": 1,
                    "print_binary": 13,
                    "print_binary_bits": 1,
                    "print_binary_digits": 3,
                    "print_binary_numbers": 1,
                    "print_binary_representation": 6,
                    "print_binary_string": 1,
                    "print_bits": 5
                },
                "FUN_08008250": {
                    "print_character_but_dont_change": 1
                },
                "local_10": {
                    "bit_index": 19,
                    "bit_position": 3,
                    "count": 1,
                    "counter": 1,
                    "current_bit": 3,
                    "digit_index": 1,
                    "i": 2,
                    "iteration": 1
                },
                "local_c": {
                    "bit_mask": 19,
                    "flag": 1,
                    "mask": 11
                },
                "param_1": {
                    "binary_input": 1,
                    "input_num": 1,
                    "input_number": 5,
                    "input_val": 1,
                    "num": 1,
                    "number": 22
                },
                "param_2": {
                    "bit_count": 11,
                    "bit_length": 5,
                    "bits": 4,
                    "num_bits": 10,
                    "num_digits": 1
                },
                "uVar1": {
                    "ascii_value": 1,
                    "binary_char": 1,
                    "binary_digit": 5,
                    "bit_value": 15,
                    "character": 1,
                    "output_bit": 1,
                    "output_character": 1
                }
            },
            "called": [
                "FUN_08008250"
            ],
            "calling": [
                "FUN_0800375c",
                "FUN_08003740"
            ],
            "code": "\nvoid print_binary_representation_080036f0(uint number,int bit_count)\n\n{\n  undefined4 bit_value;\n  int bit_index;\n  uint bit_mask;\n  \n  bit_mask = 1 << (bit_count - 1U & 0xff);\n  for (bit_index = 0; bit_index < bit_count; bit_index = bit_index + 1) {\n    if ((bit_mask & number) == 0) {\n      bit_value = 0x30;\n    }\n    else {\n      bit_value = 0x31;\n    }\n    FUN_08008250(bit_value);\n    bit_mask = bit_mask >> 1;\n  }\n  return;\n}\n\n",
            "current_name": "print_binary_representation_080036f0",
            "entrypoint": "0x080036f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080036f0": "print_binary_representation_080036f0",
                "local_10": "bit_index",
                "local_c": "bit_mask",
                "param_1": "number",
                "param_2": "bit_count",
                "uVar1": "bit_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003740": {
            "additional_data": {
                "FUN_080036f0": {
                    "calculate_value": 1,
                    "call_function": 1,
                    "fill_memory": 1,
                    "initialize_data_with_size": 1,
                    "initialize_sub_function": 1,
                    "initialize_values": 1,
                    "initialize_with_param": 1,
                    "perform_action": 2,
                    "set_data": 3,
                    "set_data_length": 1,
                    "set_data_values": 1,
                    "set_default_value": 7,
                    "set_flag": 1,
                    "set_initial_value": 3,
                    "set_initial_values": 2,
                    "set_memory_data": 1,
                    "set_parameters": 1,
                    "set_values": 2
                },
                "FUN_08003740": {
                    "initialize": 5,
                    "initialize_data": 18,
                    "initialize_function": 4,
                    "initialize_memory": 1,
                    "initialize_param": 1,
                    "initialize_param_and_call_subfunction": 1,
                    "initialize_parameters": 1
                },
                "param_1": {
                    "data": 18,
                    "data_buffer": 1,
                    "data_pointer": 3,
                    "input": 2,
                    "input_data": 1,
                    "memory_address": 1,
                    "param": 3,
                    "parameter": 1,
                    "uint_param": 1
                },
                "param_2": {
                    "action_code": 1,
                    "count": 2,
                    "default_value": 1,
                    "flag_value": 1,
                    "int_param": 1,
                    "length": 4,
                    "memory_size": 1,
                    "num_bytes": 1,
                    "num_values": 1,
                    "parameter_count": 1,
                    "size": 5,
                    "value": 12
                }
            },
            "called": [
                "FUN_080036f0"
            ],
            "calling": [],
            "code": "\nvoid initialize_data_08003740(undefined data)\n\n{\n  FUN_080036f0(data,8);\n  return;\n}\n\n",
            "current_name": "initialize_data_08003740",
            "entrypoint": "0x08003740",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003740": "initialize_data_08003740",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800375c": {
            "additional_data": {
                "FUN_080036f0": {
                    "allocate_memory": 2,
                    "clear_memory": 1,
                    "copy_data_to_memory": 2,
                    "copy_to_memory": 1,
                    "fill_buffer": 1,
                    "init_data_buffer": 1,
                    "initialize": 1,
                    "initialize_buffer": 2,
                    "initialize_data_range": 1,
                    "initialize_memory_block": 1,
                    "initialize_sub_function": 1,
                    "process_data_helper": 1,
                    "set_buffer_size": 2,
                    "set_data": 2,
                    "set_initial_value": 1,
                    "set_memory": 5,
                    "set_memory_block_value": 1,
                    "set_parameter_values": 1,
                    "set_something": 1,
                    "write_data_to_memory": 1
                },
                "FUN_0800375c": {
                    "initialize_buffer": 2,
                    "initialize_data": 5,
                    "initialize_memory": 17,
                    "initialize_memory_block": 1,
                    "initialize_parameter": 1,
                    "initialize_parameters": 1,
                    "initialize_process": 1,
                    "initialize_something": 1,
                    "initiate_process": 1,
                    "process_data": 1
                },
                "param_1": {
                    "buffer": 4,
                    "buffer_size": 1,
                    "data": 8,
                    "data_buffer": 2,
                    "data_pointer": 3,
                    "initial_value": 1,
                    "input": 1,
                    "input_data": 3,
                    "memory_address": 1,
                    "memory_block": 1,
                    "memory_location": 1,
                    "memory_param": 1,
                    "memory_pointer": 1,
                    "param": 1,
                    "start_address": 1,
                    "value": 1
                },
                "param_2": {
                    "block_size": 1,
                    "block_value": 1,
                    "buffer_size": 4,
                    "data_size": 1,
                    "fill_value": 1,
                    "length": 2,
                    "memory_size": 1,
                    "size": 11,
                    "sub_function_parameter": 1,
                    "value": 2
                }
            },
            "called": [
                "FUN_080036f0"
            ],
            "calling": [
                "FUN_08004250"
            ],
            "code": "\nvoid initialize_memory_block_0800375c(undefined2 data)\n\n{\n  FUN_080036f0(data,0x10);\n  return;\n}\n\n",
            "current_name": "initialize_memory_block_0800375c",
            "entrypoint": "0x0800375c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800375c": "initialize_memory_block_0800375c",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003778": {
            "additional_data": {
                "FUN_08003778": {
                    "convert_and_print_number": 7,
                    "convert_and_print_u_int": 1,
                    "convert_decimal_to_ascii": 1,
                    "convert_integer_to_string": 1,
                    "convert_number_to_string": 9,
                    "convert_to_ascii": 2,
                    "convert_to_digits": 1,
                    "convert_uint_to_string": 1,
                    "convert_unsigned_int_to_string": 1,
                    "print_digits": 1,
                    "print_number": 4,
                    "print_uint": 1,
                    "reverse_and_print_number": 1
                },
                "FUN_08008250": {
                    "print_character": 2
                },
                "acStack_15": {
                    "ascii_array": 1,
                    "char_stack": 1,
                    "converted_digits": 1,
                    "digit_array": 3,
                    "digit_buffer": 4,
                    "digit_stack": 2,
                    "digits": 10,
                    "number_as_string": 2,
                    "number_string": 4,
                    "result": 1,
                    "result_string": 1,
                    "string_buffer": 1
                },
                "local_1c": {
                    "dividend": 5,
                    "num_copy": 1,
                    "original_number": 1,
                    "remainder": 12,
                    "remaining": 1,
                    "remaining_number": 8,
                    "temp": 1,
                    "temp_number": 2
                },
                "local_9": {
                    "count": 1,
                    "digit": 5,
                    "digit_count": 16,
                    "digit_counter": 1,
                    "index": 1,
                    "num_digits": 6,
                    "stack_index": 1
                },
                "param_1": {
                    "decimal_number": 1,
                    "input_number": 2,
                    "num": 1,
                    "number": 27
                },
                "uVar1": {
                    "count": 1,
                    "counter": 4,
                    "digit_index": 1,
                    "i": 1,
                    "index": 6,
                    "previous_digit": 1,
                    "previous_digit_index": 1,
                    "temp": 7,
                    "temp1": 1,
                    "temp_var": 5,
                    "temp_var1": 3
                }
            },
            "called": [
                "FUN_08008250"
            ],
            "calling": [
                "FUN_080037fc"
            ],
            "code": "\nvoid convert_and_print_number_08003778(uint number)\n\n{\n  uint temp;\n  uint remainder;\n  char digits [12];\n  byte digit_count;\n  \n  digit_count = 0;\n  remainder = number;\n  if (number == 0) {\n    FUN_08008250(0x30);\n  }\n  else {\n    for (; remainder != 0; remainder = remainder / 10) {\n      temp = (uint)digit_count;\n      digit_count = digit_count + 1;\n      digits[temp + 1] = (char)(remainder % 10) + '0';\n    }\n    for (; digit_count != 0; digit_count = digit_count - 1) {\n      FUN_08008250(digits[digit_count]);\n    }\n  }\n  return;\n}\n\n",
            "current_name": "convert_and_print_number_08003778",
            "entrypoint": "0x08003778",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003778": "convert_and_print_number_08003778",
                "acStack_15": "digits",
                "local_1c": "remainder",
                "local_9": "digit_count",
                "param_1": "number",
                "uVar1": "temp"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080037fc": {
            "additional_data": {
                "FUN_08003778": {
                    "print_number": 2,
                    "print_value": 2
                },
                "FUN_080037fc": {
                    "absolute_value": 1,
                    "convert_and_display_integer": 1,
                    "convert_and_print_absolute_value": 1,
                    "display_absolute_value": 3,
                    "print_abs_value": 3,
                    "print_absolute_value": 22
                },
                "FUN_08008250": {
                    "print_char": 1,
                    "print_character": 3
                },
                "local_c": {
                    "abs_number": 1,
                    "abs_value": 5,
                    "absolute_num": 1,
                    "absolute_number": 1,
                    "absolute_value": 23
                },
                "param_1": {
                    "input_number": 4,
                    "input_value": 2,
                    "num": 2,
                    "number": 13,
                    "value": 10
                }
            },
            "called": [
                "FUN_08008250",
                "FUN_08003778"
            ],
            "calling": [
                "FUN_080046d0",
                "FUN_08004250",
                "FUN_08004900"
            ],
            "code": "\nvoid convert_and_print_absolute_value_080037fc(int number)\n\n{\n  int absolute_value;\n  \n  absolute_value = number;\n  if (number < 0) {\n    FUN_08008250(0x2d);\n    absolute_value = -number;\n  }\n  FUN_08003778(absolute_value);\n  return;\n}\n\n",
            "current_name": "convert_and_print_absolute_value_080037fc",
            "entrypoint": "0x080037fc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080037fc": "convert_and_print_absolute_value_080037fc",
                "local_c": "absolute_value",
                "param_1": "number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003826": {
            "additional_data": {
                "FUN_08003826": {
                    "calculate_decimal": 1,
                    "convert_and_print_number": 1,
                    "convert_and_print_unsigned_int": 1,
                    "convert_integer_to_ascii": 1,
                    "convert_integer_to_decimal_string": 1,
                    "convert_number_to_ascii": 2,
                    "convert_number_to_decimal_string": 1,
                    "convert_number_to_string": 2,
                    "convert_to_decimal": 1,
                    "extract_decompiled_code": 1,
                    "extract_digits": 1,
                    "format_and_print_number": 1,
                    "format_number_print": 1,
                    "generate_decimal_string": 1,
                    "generate_number_string": 1,
                    "print_unsigned_int": 1,
                    "print_unsigned_integer": 1,
                    "process_number": 2,
                    "reverse_and_print_number": 5,
                    "reverse_encoded_number": 1,
                    "reverse_number": 1,
                    "reverse_string": 1
                },
                "acStack_1d": {
                    "ascii_array": 2,
                    "ascii_string": 1,
                    "buffer": 2,
                    "char_array": 2,
                    "converted_char_array": 1,
                    "decimal_string": 5,
                    "encoded_number": 1,
                    "formatted_number": 1,
                    "formatted_string": 2,
                    "number_as_string": 1,
                    "number_char_array": 1,
                    "number_stack": 1,
                    "number_string": 6,
                    "output_array": 1,
                    "output_string": 1,
                    "result_array": 1,
                    "reversed_string": 1,
                    "string_representation": 1
                },
                "bVar3": {
                    "byte_value": 2,
                    "digit": 10,
                    "temp": 2,
                    "temp_byte": 16,
                    "unused_byte": 1
                },
                "iVar1": {
                    "check_result": 1,
                    "conversion_result": 1,
                    "is_negative": 1,
                    "result": 27,
                    "return_value": 1
                },
                "local_10": {
                    "digit": 1,
                    "digit_count": 2,
                    "divided_num": 1,
                    "divided_number": 5,
                    "divided_value": 1,
                    "division_result": 4,
                    "length": 1,
                    "quotient": 4,
                    "remainder": 4,
                    "temp": 1,
                    "temp_division": 1,
                    "temp_u_int2": 2,
                    "temp_uint2": 1,
                    "temp_value": 2,
                    "temp_var": 1
                },
                "local_24": {
                    "converted_number": 2,
                    "modified_input": 1,
                    "modified_number": 7,
                    "modified_parameter": 1,
                    "modified_string": 1,
                    "modified_value": 2,
                    "number": 10,
                    "number_copy": 3,
                    "temp3": 1,
                    "temp_num": 1,
                    "temp_uint1": 1,
                    "value": 1
                },
                "local_9": {
                    "condition": 1,
                    "count": 1,
                    "length": 1,
                    "limit": 2,
                    "loop_count": 5,
                    "loop_counter": 9,
                    "loop_limit": 1,
                    "loop_variable": 4,
                    "num_digits": 2,
                    "remainder": 1,
                    "temp_byte2": 2
                },
                "local_a": {
                    "counter": 5,
                    "current_digit": 1,
                    "current_index": 6,
                    "digit_count": 1,
                    "digit_counter": 1,
                    "index": 16,
                    "loop_counter": 1
                },
                "param_1": {
                    "input": 4,
                    "input_num": 1,
                    "input_number": 14,
                    "input_parameter": 1,
                    "input_string": 1,
                    "input_value": 2,
                    "number": 8
                },
                "uVar2": {
                    "calculated_value": 1,
                    "converted": 2,
                    "converted_number": 9,
                    "converted_value": 7,
                    "decimal": 1,
                    "decimal_number": 1,
                    "divided_number": 1,
                    "formatted_number": 3,
                    "modified_number": 4,
                    "num": 1,
                    "temp_result": 1
                },
                "uVar4": {
                    "index": 5,
                    "temp": 6,
                    "temp2": 1,
                    "temp_number": 6,
                    "temp_u_int": 3,
                    "temp_uint": 5,
                    "temp_value": 3,
                    "temp_var": 2
                }
            },
            "called": [
                "FUN_08008250",
                "FUN_08009228",
                "FUN_08009278",
                "FUN_08008cdc",
                "FUN_08008eec"
            ],
            "calling": [
                "FUN_080046d0",
                "FUN_08004250",
                "FUN_08004940",
                "FUN_080044e8"
            ],
            "code": "\nvoid reverse_and_print_number_08003826(uint input_number)\n\n{\n  int result;\n  undefined4 converted_number;\n  byte temp_byte;\n  uint temp_number;\n  uint number;\n  char number_string [13];\n  uint divided_number;\n  byte index;\n  byte loop_counter;\n  \n  result = FUN_08009228(input_number,0);\n  number = input_number;\n  if (result != 0) {\n    FUN_08008250(0x2d);\n    number = input_number ^ 0x80000000;\n  }\n  for (loop_counter = DAT_20000ef9; 1 < loop_counter; loop_counter = loop_counter - 2) {\n    number = FUN_08008eec(number,0x42c80000);\n  }\n  if (loop_counter != 0) {\n    number = FUN_08008eec(number,0x41200000);\n  }\n  converted_number = FUN_08008cdc(number,0x3f000000);\n  index = 0;\n  divided_number = FUN_08009278(converted_number);\n  number_string[DAT_20000ef9 + 1] = '.';\n  for (; divided_number != 0; divided_number = divided_number / 10) {\n    if (index == DAT_20000ef9) {\n      index = index + 1;\n    }\n    temp_number = (uint)index;\n    index = index + 1;\n    number_string[temp_number + 1] = (char)(divided_number % 10) + '0';\n  }\n  while (index < DAT_20000ef9) {\n    temp_number = (uint)index;\n    index = index + 1;\n    number_string[temp_number + 1] = '0';\n  }\n  if (index == DAT_20000ef9) {\n    temp_byte = index + 1;\n    index = index + 2;\n    number_string[temp_byte + 1] = '0';\n  }\n  for (; index != 0; index = index - 1) {\n    FUN_08008250(number_string[index]);\n  }\n  return;\n}\n\n",
            "current_name": "reverse_and_print_number_08003826",
            "entrypoint": "0x08003826",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003826": "reverse_and_print_number_08003826",
                "acStack_1d": "number_string",
                "bVar3": "temp_byte",
                "iVar1": "result",
                "local_10": "divided_number",
                "local_24": "number",
                "local_9": "loop_counter",
                "local_a": "index",
                "param_1": "input_number",
                "uVar2": "converted_number",
                "uVar4": "temp_number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003980": {
            "additional_data": {
                "": {
                    "": 4
                },
                "DAT_20000e10": {
                    "count": 1,
                    "count_variable": 1,
                    "counter": 8,
                    "counter1": 2,
                    "data_count": 3,
                    "data_counter": 4,
                    "data_flag1": 2,
                    "data_initialized": 1,
                    "data_size": 1,
                    "data_value1": 1,
                    "data_variable1": 2,
                    "num1": 1
                },
                "DAT_20000e11": {
                    "counter2": 2,
                    "data_flag": 4,
                    "data_flag2": 2,
                    "data_status": 1,
                    "data_value": 2,
                    "data_value2": 1,
                    "data_variable2": 2,
                    "flag": 8,
                    "flag_variable": 1,
                    "num2": 1,
                    "status": 1,
                    "unused_variable": 2
                },
                "FUN_08003980": {
                    "initialize_data": 30,
                    "reset_data": 1
                },
                "return": {
                    "void": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003f34",
                "FUN_080039a0"
            ],
            "code": "\nvoid initialize_data_08003980(void)\n\n{\n  DAT_20000e10 = 0;\n  DAT_20000e11 = 0;\n  void;\n}\n\n",
            "current_name": "initialize_data_08003980",
            "entrypoint": "0x08003980",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003980": "initialize_data_08003980",
                "return": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080039a0": {
            "additional_data": {
                "FUN_08003980": {
                    "check_input": 1,
                    "execute_initialization": 1,
                    "initialize": 1,
                    "initialize_component1": 1,
                    "initialize_component_a": 1,
                    "initialize_function_one": 1,
                    "perform_action1": 1,
                    "perform_first_action": 2,
                    "perform_first_operation": 2,
                    "perform_first_task": 3,
                    "perform_initialization": 8,
                    "perform_operation1": 1,
                    "perform_pre_initialization": 1,
                    "perform_preparation": 2,
                    "perform_preparation_tasks": 1,
                    "perform_preprocessing": 1,
                    "perform_task1": 2,
                    "pre_initialization": 1
                },
                "FUN_080039a0": {
                    "execute_initialization": 1,
                    "initialize": 2,
                    "initialize_and_run": 1,
                    "initialize_and_set_flag": 1,
                    "initialize_app": 2,
                    "initialize_application": 6,
                    "initialize_data": 1,
                    "initialize_program": 15,
                    "initialize_system": 2
                },
                "FUN_08004228": {
                    "configure_settings": 1,
                    "execute_configurations": 1,
                    "execute_main_algorithm": 1,
                    "execute_main_logic": 1,
                    "execute_module": 1,
                    "execute_second_task": 1,
                    "execute_startup_procedure": 1,
                    "execute_startup_routine": 1,
                    "execute_task": 1,
                    "initialize_component2": 1,
                    "initialize_component_b": 1,
                    "initialize_function_two": 1,
                    "perform_action2": 1,
                    "perform_additional_setup": 1,
                    "perform_operation2": 1,
                    "perform_post_initialization": 1,
                    "perform_second_action": 2,
                    "perform_second_operation": 2,
                    "perform_second_task": 3,
                    "perform_setup": 1,
                    "perform_task": 1,
                    "perform_task2": 2,
                    "post_initialization": 1,
                    "setup_configuration": 1,
                    "update_data": 2
                }
            },
            "called": [
                "FUN_08003980",
                "FUN_08004228"
            ],
            "calling": [
                "FUN_08001ddc"
            ],
            "code": "\nvoid initialize_program_080039a0(void)\n\n{\n  FUN_08003980();\n  FUN_08004228();\n  DAT_20000e50 = 1;\n  return;\n}\n\n",
            "current_name": "initialize_program_080039a0",
            "entrypoint": "0x080039a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080039a0": "initialize_program_080039a0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080039bc": {
            "additional_data": {
                "DAT_20000d10": {
                    "data": 2
                },
                "FUN_080005b4": {
                    "calculate_result": 1,
                    "calculate_value": 1,
                    "get_value": 1,
                    "modify_data": 1,
                    "process_data": 1,
                    "process_data_result": 1,
                    "process_data_value": 2
                },
                "FUN_0800369c": {
                    "cleanup_data": 1,
                    "clear_buffer": 1,
                    "free_data": 1,
                    "process_data": 2,
                    "process_data_error": 1,
                    "process_data_ptr": 1,
                    "process_error": 1,
                    "update_data": 1
                },
                "FUN_080039bc": {
                    "analyze_data": 1,
                    "check_and_execute_functions": 2,
                    "check_and_execute_operations": 1,
                    "check_and_process_data": 4,
                    "check_and_update_data": 1,
                    "check_function_with_byte_param": 1,
                    "execute_function": 2,
                    "process_data": 18,
                    "process_data_bytes": 1
                },
                "FUN_08004030": {
                    "display_message": 1,
                    "handle_error": 2,
                    "handle_result": 1,
                    "perform_action": 1,
                    "print_error": 1,
                    "print_message": 2,
                    "print_result": 1
                },
                "FUN_08004d2c": {
                    "check_condition": 1,
                    "check_data": 5,
                    "check_data_validity": 2,
                    "check_validity": 1
                },
                "iVar1": {
                    "function_result": 1,
                    "is_success": 1,
                    "result": 25,
                    "return_code": 1
                },
                "local_9": {
                    "byte_value": 1,
                    "count": 3,
                    "counter": 6,
                    "index": 3,
                    "iteration": 6,
                    "iteration_count": 6,
                    "iteration_index": 2,
                    "loop_counter": 4
                },
                "param_1": {
                    "buffer": 1,
                    "byte": 1,
                    "byte_index": 1,
                    "count": 1,
                    "current_byte": 1,
                    "data": 1,
                    "index": 4,
                    "input_byte": 2,
                    "input_index": 1,
                    "local_index": 1,
                    "loop_counter": 1
                },
                "param_2": {
                    "buffer": 1,
                    "data": 4,
                    "data_array": 1,
                    "data_buffer": 1,
                    "data_ptr": 6,
                    "param2": 1
                },
                "uVar2": {
                    "converted_value": 2,
                    "data_value": 1,
                    "error_code": 1,
                    "function_result": 1,
                    "modified_data": 1,
                    "output_value": 2,
                    "processed_data": 6,
                    "processed_value": 3,
                    "result": 2,
                    "return_value": 3,
                    "status_code": 1,
                    "value": 5
                }
            },
            "called": [
                "FUN_08004d2c",
                "FUN_080005b4",
                "FUN_08004030",
                "FUN_0800369c"
            ],
            "calling": [
                "FUN_08001ddc",
                "FUN_08003b98"
            ],
            "code": "\nvoid check_and_process_data_080039bc(void)\n\n{\n  int result;\n  undefined4 processed_data;\n  byte counter;\n  \n  for (counter = 0; counter < 2; counter = counter + 1) {\n    result = FUN_08004d2c(counter,&DAT_20000d10);\n    if (result == 0) {\n      FUN_08004030(10);\n    }\n    else if (DAT_20000d10 != '\\0') {\n      FUN_0800369c(&DAT_20000d10);\n      processed_data = FUN_080005b4(&DAT_20000d10);\n      FUN_08004030(processed_data);\n    }\n  }\n  return;\n}\n\n",
            "current_name": "check_and_process_data_080039bc",
            "entrypoint": "0x080039bc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080039bc": "check_and_process_data_080039bc",
                "iVar1": "result",
                "local_9": "counter",
                "uVar2": "processed_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003a18": {
            "additional_data": {
                "0x20": {
                    "bit_mask_other": 1,
                    "flag_c": 1
                },
                "0x40": {
                    "bit_mask_bus_access": 1,
                    "flag_b": 1
                },
                "0x80": {
                    "bit_mask_interrupt": 1,
                    "flag_a": 1
                },
                "2": {
                    "flag_enable_interrupt": 1
                },
                "8": {
                    "flag_enable_bus_access": 1
                },
                "DAT_20000eaa": {
                    "control_register": 1,
                    "data_flag": 5,
                    "data_variable": 1,
                    "flag_data": 1,
                    "flag_register": 1,
                    "flag_value": 1,
                    "flags": 4,
                    "flags_variable": 1,
                    "special_data": 1,
                    "status": 2,
                    "status_flag": 1,
                    "status_flags": 2
                },
                "FUN_080025e8": {
                    "execute_action": 1,
                    "execute_additional_logic": 1,
                    "execute_callback": 1,
                    "execute_reversal": 1,
                    "execute_sub_function": 1,
                    "handle_error": 3,
                    "handle_flag_a": 1,
                    "handle_flag_error": 1,
                    "handle_flag_set": 2,
                    "handle_special_case": 1,
                    "perform_action": 2,
                    "perform_cleanup": 2,
                    "perform_recovery": 1,
                    "process_interrupt": 1,
                    "reset_flags": 1,
                    "reset_function": 1
                },
                "FUN_08003a18": {
                    "check_and_set_flags": 1,
                    "parse_param_flags": 1,
                    "process_flags": 3,
                    "process_param": 10,
                    "process_parameter": 3,
                    "update_control_register": 1,
                    "update_flags": 3,
                    "update_flags_based_on_param": 4,
                    "update_param_flags": 1,
                    "update_parameters": 1,
                    "update_status": 3
                },
                "param_1": {
                    "control_value": 1,
                    "flag": 1,
                    "flags": 8,
                    "input": 6,
                    "input_param": 3,
                    "input_value": 5,
                    "param": 4,
                    "parameter": 1,
                    "status": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_080025e8"
            ],
            "calling": [
                "FUN_080074c8"
            ],
            "code": "\nvoid process_param_08003a18(uint flags)\n\n{\n  if ((flags & 0x80) == 0) {\n    if ((flags & 0x40) == 0) {\n      if ((flags & 0x20) != 0) {\n        DAT_20000eaa = DAT_20000eaa | 2;\n      }\n    }\n    else {\n      DAT_20000eaa = DAT_20000eaa | 8;\n    }\n  }\n  else {\n    FUN_080025e8();\n  }\n  return;\n}\n\n",
            "current_name": "process_param_08003a18",
            "entrypoint": "0x08003a18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003a18": "process_param_08003a18",
                "param_1": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003a74": {
            "additional_data": {
                "DAT_20000ea8": {
                    "another_flag": 1,
                    "decryption_flag": 1,
                    "flag1": 1,
                    "flag_variable2": 1
                },
                "DAT_20000ea9": {
                    "action_code": 1,
                    "error_code": 4,
                    "flag6": 2
                },
                "DAT_20000eaa": {
                    "data_flag": 1,
                    "flag_value": 1,
                    "flags": 1,
                    "input_byte": 1,
                    "input_data": 2,
                    "settings_byte": 1
                },
                "DAT_20000eb8": {
                    "condition_flag": 1,
                    "data_flag": 1,
                    "flag_status": 1,
                    "flag_update": 1,
                    "flag_variable": 1,
                    "is_flag_set": 1,
                    "reversed_flag": 1
                },
                "DAT_20000ee4": {
                    "config_data": 1,
                    "data_value": 1,
                    "flag": 1,
                    "flag2": 1,
                    "flag_check": 1,
                    "status": 1,
                    "task_flags": 1
                },
                "DAT_20000eea": {
                    "flag": 1
                },
                "FNU_08003a74": {
                    "optimize_function": 1
                },
                "FUN_08003a74": {
                    "check_and_execute_actions": 1,
                    "execute_main_function": 1,
                    "handle_data": 1,
                    "handle_data_processing": 1,
                    "initialize": 1,
                    "initialize_hardware": 1,
                    "process_data": 18,
                    "process_event": 1,
                    "process_flags": 1,
                    "process_input": 1,
                    "update_configuration": 1,
                    "update_configurations": 1,
                    "update_settings": 1
                },
                "FUN_08004148": {
                    "activate_flag": 1,
                    "execute_action_e": 1,
                    "execute_function4": 1,
                    "handle_event_e": 1,
                    "log_error": 1,
                    "perform_action_b": 2,
                    "print_error": 1,
                    "print_message": 1,
                    "send_message": 1,
                    "set_error_code": 1,
                    "set_flag": 3,
                    "set_flag_value": 1
                },
                "FUN_080041a0": {
                    "configure_parameter": 1,
                    "execute_action_c": 1,
                    "execute_function2": 1,
                    "handle_event_c": 1,
                    "handle_flag_change": 1,
                    "initialize": 3,
                    "initialize_flag": 1,
                    "process_flag": 1,
                    "set_flag": 4,
                    "set_mode": 1
                },
                "FUN_08004940": {
                    "clear_bit1": 1,
                    "execute_action_b": 1,
                    "execute_function1": 1,
                    "execute_task": 1,
                    "function_a": 1,
                    "handle_condition_b": 1,
                    "handle_event_b": 1,
                    "handle_flag1": 1,
                    "handle_flag_update": 1,
                    "perform_action1": 1,
                    "perform_initialization": 1,
                    "perform_task": 1,
                    "reverse_data": 1,
                    "reverse_flag1": 1,
                    "reverse_string": 1
                },
                "FUN_0800585c": {
                    "enable_interrupts": 1,
                    "execute_action_a": 1,
                    "execute_task3": 1,
                    "function_d": 1,
                    "handle_condition_a": 1,
                    "handle_data": 1,
                    "handle_data_processing_2": 1,
                    "handle_event_a": 1,
                    "handle_flag2": 1,
                    "perform_action_d": 1,
                    "reverse_data": 1,
                    "update_flag2": 1,
                    "update_status": 1,
                    "update_time": 1
                },
                "FUN_0800587c": {
                    "clear_bit3": 1,
                    "decrypt_data": 1,
                    "execute_action_f": 1,
                    "execute_function5": 1,
                    "execute_task1": 1,
                    "function_b": 1,
                    "handle_condition_d": 1,
                    "handle_event_f": 1,
                    "handle_flag3": 1,
                    "perform_action3": 1,
                    "perform_action_c": 2,
                    "process_event": 1,
                    "reverse_flag3": 1,
                    "update_configuration": 1
                },
                "FUN_080058a0": {
                    "clear_bit4": 1,
                    "configure_peripheral": 1,
                    "execute_action_d": 1,
                    "execute_function3": 1,
                    "execute_task2": 1,
                    "function_c": 1,
                    "handle_condition_c": 1,
                    "handle_event_d": 1,
                    "handle_flag4": 1,
                    "modify_data": 1,
                    "perform_action2": 1,
                    "perform_action_a": 2,
                    "reverse_flag2": 1,
                    "sort_data": 1
                },
                "PTR_08003ad2": {
                    "unreachable_block": 1
                },
                "bVar1": {
                    "byte_flag": 1,
                    "byte_val": 1,
                    "byte_value": 5,
                    "byte_var": 1,
                    "current_flag": 1,
                    "current_value": 1,
                    "data_byte": 4,
                    "event_flags": 1,
                    "flag": 1,
                    "initial_byte": 1,
                    "input_byte": 3,
                    "temp_byte": 1
                }
            },
            "called": [
                "FUN_0800585c",
                "FUN_08004940",
                "FUN_080041a0",
                "FUN_080058a0",
                "FUN_08004148",
                "FUN_0800587c"
            ],
            "calling": [
                "FUN_08001ddc",
                "FUN_08003f34",
                "FUN_08001e98",
                "FUN_08002fd4",
                "FUN_08002408",
                "FUN_080024c4"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08003ad2) */\n\nvoid process_data_08003a74(void)\n\n{\n  byte byte_value;\n  \n  byte_value = DAT_20000eaa;\n  if (DAT_20000eaa != 0) {\n    if ((DAT_20000eaa & 0x60) != 0) {\n      DAT_20000ea9 = 6;\n      if ((DAT_20000eaa & 0x40) != 0) {\n        FUN_08004148(0xffffffff);\n        FUN_080041a0(1);\n        do {\n        } while( true );\n      }\n      FUN_08004148(0xfffffffe);\n      DAT_20000eaa = DAT_20000eaa & 0x9f;\n    }\n    if ((byte_value & 0x10) == 0) {\n      if ((byte_value & 1) != 0) {\n        FUN_08004940();\n        DAT_20000eaa = DAT_20000eaa & 0xfe;\n      }\n      if ((byte_value & 8) != 0) {\n        FUN_0800587c();\n        DAT_20000eaa = DAT_20000eaa & 0xf7;\n      }\n      if ((byte_value & 4) != 0) {\n        FUN_080058a0();\n        DAT_20000eaa = DAT_20000eaa & 0xfb;\n      }\n      if ((byte_value & 2) != 0) {\n        FUN_0800585c();\n        if ((DAT_20000ee4 & 2) != 0) {\n          DAT_20000eb8 = 1;\n        }\n        DAT_20000eaa = DAT_20000eaa & 0xfd;\n      }\n    }\n    else {\n      DAT_20000ea8 = 1;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08003a74",
            "entrypoint": "0x08003a74",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003a74": "process_data_08003a74",
                "bVar1": "byte_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003b98": {
            "additional_data": {
                "DAT_20000ea8": {
                    "command_flag2": 1,
                    "data2": 1,
                    "data3": 1,
                    "data_flag_3": 1,
                    "flag": 1,
                    "flag3": 3,
                    "flag_2": 1,
                    "flag_c": 1,
                    "global_variable2": 2,
                    "has_done_something": 1,
                    "variable_b": 1
                },
                "DAT_20000ea9": {
                    "command_flag": 1,
                    "command_flag1": 1,
                    "command_type": 1,
                    "data1": 1,
                    "data_flag": 1,
                    "flag": 1,
                    "flag1": 1,
                    "flag2": 1,
                    "flag_1": 1,
                    "flag_a": 1,
                    "global_flag": 3,
                    "global_variable1": 2,
                    "some_flag": 1,
                    "state": 1,
                    "variable_a": 1
                },
                "DAT_20000ee4": {
                    "command_flag3": 1,
                    "data1": 1,
                    "data2": 1,
                    "data_flag_2": 1,
                    "flag2": 4,
                    "flag_3": 1,
                    "flag_b": 1,
                    "flags": 1,
                    "global_variable": 1,
                    "mask": 1,
                    "variable_c": 1
                },
                "FUNK_08003b98": {
                    "process_command": 1
                },
                "FUN_080005b4": {
                    "check_validity": 1,
                    "function12": 1,
                    "function_l": 1,
                    "get_char_type": 1,
                    "is_valid_command": 2,
                    "parse_command": 1,
                    "parse_number": 1,
                    "parse_value": 1,
                    "process_command": 1,
                    "validate_char": 1,
                    "validate_command": 4,
                    "validate_input": 1,
                    "validate_param": 1,
                    "verify_command_char": 1
                },
                "FUN_080008bf0": {
                    "calculate_sum": 1,
                    "function_j": 1
                },
                "FUN_080024c4": {
                    "check_command_type_h": 1,
                    "do_something": 1,
                    "enable_feature": 2,
                    "execute_case_0x48_1": 1,
                    "execute_non_flagged_command": 1,
                    "func3": 1,
                    "function3": 1,
                    "function_6": 1,
                    "function_c": 1,
                    "function_e": 1,
                    "handle_command3": 1,
                    "handle_command4": 1,
                    "handle_command_48": 1,
                    "handle_command_type3": 1,
                    "handle_h_command": 1,
                    "initialize_system": 1,
                    "perform_action": 1
                },
                "FUN_080025e8": {
                    "execute_case_0x43_1": 1,
                    "execute_command2": 1,
                    "execute_command_type_a": 1,
                    "func1": 1,
                    "function1": 2,
                    "function_1": 1,
                    "function_a": 2,
                    "handle_c_command": 1,
                    "handle_command2": 1,
                    "handle_command_3": 1,
                    "handle_option3": 1,
                    "handle_type3_command": 1,
                    "operation3": 1,
                    "perform_action_type1": 1,
                    "process_flag": 1,
                    "process_flag_a_on": 1
                },
                "FUN_08002638": {
                    "extract_parameter": 1,
                    "func5": 1,
                    "get_parameter": 2,
                    "parse_argument": 1,
                    "parse_command": 2,
                    "parse_param": 1,
                    "parse_param_with_offset": 1,
                    "parse_parameter": 1,
                    "parse_substring": 1,
                    "parse_value": 5,
                    "parse_value_and_length": 1,
                    "split_command": 1
                },
                "FUN_080039bc": {
                    "cleanup_after_conversion": 1,
                    "cleanup_operation": 1,
                    "do_action": 1,
                    "execute_case_0x48_2": 1,
                    "execute_command": 1,
                    "execute_flagged_command": 1,
                    "func4": 1,
                    "function3": 1,
                    "function4": 1,
                    "function_5": 1,
                    "function_d": 1,
                    "function_f": 1,
                    "handle_command3": 1,
                    "handle_false_flag": 1,
                    "handle_flag_c": 1,
                    "handle_n_command": 1,
                    "initialize_system": 1,
                    "perform_operation": 1
                },
                "FUN_08003b98": {
                    "check_and_execute_command": 1,
                    "check_valid_input": 1,
                    "parse_command": 18,
                    "process_command": 8,
                    "validate_command": 2
                },
                "FUN_08004030": {
                    "display_error": 1,
                    "execute_case_0x4e_1": 1,
                    "func8": 1,
                    "function9": 1,
                    "function_10": 1,
                    "function_g": 1,
                    "function_i": 1,
                    "handle_error": 3,
                    "log_error": 3,
                    "output_message": 1,
                    "print_error": 2,
                    "print_status_code": 1
                },
                "FUN_080041a0": {
                    "do_something": 1,
                    "execute_case_0x43_2": 1,
                    "func16": 1,
                    "function11": 1,
                    "function2": 1,
                    "function_14": 1,
                    "function_n": 2,
                    "handle_x_command": 1,
                    "log_message": 1,
                    "perform_operation5": 1,
                    "print_command_type_a": 1,
                    "print_error": 1,
                    "print_message": 1,
                    "print_status": 1,
                    "print_success_or_failure": 1,
                    "set_flag": 1,
                    "update_flag_a": 1
                },
                "FUN_0800423c": {
                    "handle_empty_command": 3,
                    "handle_error": 3,
                    "handle_invalid_command": 10,
                    "handle_invalid_input": 1,
                    "handle_invalid_option": 1
                },
                "FUN_08004250": {
                    "execute_case_0x24": 1,
                    "execute_operation2": 1,
                    "handle$_command": 1,
                    "handle_case24": 1,
                    "handle_case_0x24": 1,
                    "handle_command2": 1,
                    "handle_command_0x24": 1,
                    "handle_command_2": 1,
                    "handle_command_24": 1,
                    "handle_command_type2": 1,
                    "handle_command_with_dollar": 1,
                    "handle_d_command": 1,
                    "handle_dollar_command": 1,
                    "handle_option2": 1,
                    "handle_type2_command": 1
                },
                "FUN_080044e8": {
                    "execute_case_0x23": 1,
                    "execute_command1": 1,
                    "execute_operation1": 1,
                    "function_c": 1,
                    "handle_case23": 1,
                    "handle_case_0x23": 1,
                    "handle_command1": 2,
                    "handle_command_0x23": 1,
                    "handle_command_1": 1,
                    "handle_command_23": 1,
                    "handle_command_type1": 2,
                    "handle_command_with_hash": 1,
                    "handle_hash_command": 2,
                    "handle_option1": 1,
                    "handle_type1_command": 1
                },
                "FUN_080046d0": {
                    "execute_case_0x47": 1,
                    "execute_command3": 1,
                    "execute_operation3": 1,
                    "func15": 1,
                    "function10": 1,
                    "function_8": 1,
                    "function_d": 1,
                    "function_o": 1,
                    "handle_command4": 1,
                    "handle_command5": 1,
                    "handle_command_4": 1,
                    "handle_command_47": 1,
                    "handle_command_type2": 1,
                    "handle_command_type4": 1,
                    "handle_g_command": 1,
                    "handle_option4": 1,
                    "handle_type5_command": 1
                },
                "FUN_08004900": {
                    "execute_case_0x4e_2": 1,
                    "execute_operation5": 1,
                    "func17": 1,
                    "function12": 1,
                    "function_l": 1,
                    "function_o": 1,
                    "handle_command_result": 1,
                    "handle_option5": 1,
                    "handle_success": 1,
                    "handle_type2_command": 1,
                    "handle_valid_parameter": 1,
                    "perform_operation6": 1
                },
                "FUN_08004bc0": {
                    "execute_something_unique": 1,
                    "func11": 1,
                    "function9": 1,
                    "function_12": 1,
                    "function_k": 1,
                    "handle_calculation": 1,
                    "log_data": 1,
                    "perform_operation4": 1,
                    "save_result": 1,
                    "set_result": 1,
                    "store_result": 2
                },
                "FUN_08004d2c": {
                    "check_something": 1,
                    "func13": 1,
                    "function10": 1,
                    "function11": 1,
                    "function_7": 1,
                    "function_m": 1,
                    "is_valid": 2,
                    "is_valid_parameter": 2,
                    "process_command": 1,
                    "process_value": 1,
                    "validate_input": 3,
                    "verify_parameter": 1
                },
                "FUN_08004e30": {
                    "calculate": 3,
                    "calculate_function_b": 1,
                    "calculate_result": 2,
                    "convert_longlong_to_unsigned": 1,
                    "execute_something_else": 1,
                    "func7": 1,
                    "function5": 2,
                    "function_4": 1,
                    "function_f": 1,
                    "function_m": 1,
                    "perform_calculation": 1,
                    "perform_operation": 1,
                    "process_unsigned_integer": 1,
                    "process_value2": 1
                },
                "FUN_08008590": {
                    "calculate_function_d": 1,
                    "calculate_hash": 1,
                    "calculate_value": 1,
                    "convert_to_long": 1,
                    "convert_to_long_long": 1,
                    "convert_to_unsigned": 1,
                    "execute_case_0x58": 1,
                    "func18": 1,
                    "function6": 1,
                    "function7": 1,
                    "function_13": 1,
                    "get_value": 1,
                    "perform_operation3": 1,
                    "perform_operation4": 1,
                    "process_value3": 1
                },
                "FUN_08008bf0": {
                    "calculate_function_e": 1,
                    "calculate_hash": 1,
                    "calculate_result": 1,
                    "func10": 1,
                    "function8": 2,
                    "function_9": 1,
                    "function_h": 1,
                    "perform_operation": 1
                },
                "FUN_080090bf0": {
                    "convert_to_value": 1
                },
                "FUN_08009278": {
                    "calculate_function_a": 1,
                    "convert_int_to_longlong": 1,
                    "convert_number": 1,
                    "convert_to_lower_case": 1,
                    "convert_to_uint": 2,
                    "convert_to_unsigned": 1,
                    "convert_to_unsigned_integer": 1,
                    "convert_value": 1,
                    "execute_something": 1,
                    "func6": 1,
                    "function4": 1,
                    "function_3": 1,
                    "function_e": 1,
                    "function_g": 1,
                    "process_value1": 1,
                    "transform_value": 2
                },
                "FUN_08009798": {
                    "calculate_checksum": 1,
                    "calculate_function_c": 1,
                    "calculate_product": 1,
                    "calculate_result": 1,
                    "combine_values": 1,
                    "execute_something_different": 1,
                    "func9": 1,
                    "function6": 1,
                    "function7": 1,
                    "function_11": 1,
                    "function_h": 1,
                    "function_j": 1,
                    "operation5": 1,
                    "perform_action_type2": 1,
                    "perform_operation2": 1,
                    "process_value4": 1,
                    "transform_values": 1
                },
                "bVar1": {
                    "char": 1,
                    "char_1": 2,
                    "command_char": 4,
                    "command_code": 1,
                    "current_char": 2,
                    "first_byte": 1,
                    "first_char": 18
                },
                "iVar2": {
                    "check_result": 1,
                    "error_code": 1,
                    "index": 2,
                    "result": 5,
                    "return_value": 1,
                    "status": 2
                },
                "local_10": {
                    "arg2": 1,
                    "end_index": 1,
                    "first_operand": 1,
                    "index": 2,
                    "param2_value": 1,
                    "param3": 5,
                    "param_3_value": 1,
                    "param_id": 1,
                    "param_key": 1,
                    "param_key_length": 1,
                    "param_name_index": 1,
                    "param_value": 1,
                    "param_value2": 1,
                    "param_value_2": 1,
                    "parameter_value2": 1,
                    "parse_index": 1,
                    "second_char": 1,
                    "second_value": 1,
                    "temp": 1,
                    "value2": 1,
                    "value_length": 1
                },
                "local_12": {
                    "temp": 1
                },
                "local_14": {
                    "arg1": 1,
                    "first_value": 1,
                    "param1_value": 1,
                    "param2": 5,
                    "param_2_value": 1,
                    "param_val": 1,
                    "param_value": 3,
                    "param_value1": 1,
                    "param_value_1": 1,
                    "parameter_value1": 1,
                    "second_operand": 1,
                    "value": 7,
                    "value1": 1
                },
                "local_9": {
                    "flag": 15,
                    "flag2": 1,
                    "flag_2": 1,
                    "flag_b": 1,
                    "has_params": 1,
                    "has_value": 1,
                    "index2": 1,
                    "index_2": 2,
                    "is_single_param": 1,
                    "multiple_parameters": 1,
                    "param1": 1,
                    "param_key_only": 1,
                    "position_2": 1,
                    "second_flag": 1
                },
                "local_a": {
                    "command_length": 2,
                    "command_type": 1,
                    "current_index": 1,
                    "flag": 1,
                    "flag1": 1,
                    "flag_1": 1,
                    "flag_a": 1,
                    "index": 10,
                    "index1": 1,
                    "index_1": 2,
                    "offset": 1,
                    "option": 1,
                    "param_key_index": 1,
                    "param_offset": 1,
                    "pos": 1,
                    "position_1": 1,
                    "start_index": 1,
                    "switch_case": 1
                },
                "param_1": {
                    "command": 21,
                    "command_buffer": 1,
                    "command_str": 2,
                    "command_string": 5,
                    "input": 1,
                    "input_string": 1
                },
                "switchD_08003bdc_caseD_25": {
                    "default_case": 1
                },
                "uVar3": {
                    "conversion_result": 1,
                    "converted_value": 4,
                    "func_result": 1,
                    "return_value": 1,
                    "temp_result": 1,
                    "temp_var": 1,
                    "value": 1,
                    "var1": 1
                },
                "uVar4": {
                    "error_code": 1,
                    "result": 21,
                    "return_value": 4,
                    "status": 1,
                    "var2": 1
                },
                "uVar5": {
                    "combined_value": 1,
                    "func_result2": 1,
                    "hash": 1,
                    "processed_result": 1,
                    "processed_value": 2,
                    "result_value": 1,
                    "temp": 1,
                    "temp_64bit": 1,
                    "temp_result": 2,
                    "temp_result2": 1,
                    "var3": 1
                }
            },
            "called": [
                "FUN_080025e8",
                "FUN_08008590",
                "FUN_08004bc0",
                "FUN_080039bc",
                "FUN_08002638",
                "FUN_08009278",
                "FUN_08008bf0",
                "FUN_08004030",
                "FUN_08009798",
                "FUN_080024c4",
                "FUN_080044e8",
                "FUN_08004d2c",
                "FUN_080046d0",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_0800423c",
                "FUN_08004250",
                "FUN_080041a0",
                "FUN_08004900"
            ],
            "calling": [
                "FUN_08003f34"
            ],
            "code": "\nuint parse_command_08003b98(char *command)\n\n{\n  byte first_char;\n  int result;\n  undefined4 converted_value;\n  uint result;\n  undefined8 temp_result;\n  undefined4 value;\n  undefined4 param3;\n  byte index;\n  byte flag;\n  \n  if (*command != '$') {\n    result = FUN_080005b4(command);\n    return result;\n  }\n  index = 1;\n  flag = '\\0';\n  first_char = command[1];\n  if (first_char == 0) {\n    FUN_0800423c();\n    return 0;\n  }\n  if ((0x58 < first_char) || (first_char < 0x23)) goto default_case;\n  switch(first_char) {\n  case 0x23:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    FUN_080044e8();\n    break;\n  case 0x24:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    FUN_08004250();\n    break;\n  case 0x43:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    if (DAT_20000ea9 == '\\a') {\n      FUN_080025e8();\n      FUN_080041a0(5);\n    }\n    else {\n      if (DAT_20000ea9 != '\\0') {\n        return 0xb;\n      }\n      DAT_20000ea9 = '\\a';\n      FUN_080041a0(4);\n    }\n    break;\n  case 0x47:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    FUN_080046d0();\n    break;\n  case 0x48:\n    if ((DAT_20000ee4 & 0x10) == 0) {\n      return 7;\n    }\n    if ((DAT_20000ea9 != '\\0') && (DAT_20000ea9 != '\\x06')) {\n      return 0xb;\n    }\n    FUN_080024c4();\n    if (DAT_20000ea8 == '\\0') {\n      FUN_080039bc();\n    }\n    break;\n  case 0x4e:\n    index = 2;\n    if (command[2] == '\\0') {\n      for (flag = 0; flag < 2; flag = flag + 1) {\n        result = FUN_08004d2c(flag,command);\n        if (result == 0) {\n          FUN_08004030(10);\n        }\n        else {\n          FUN_08004900(flag,command);\n        }\n      }\n      return 0;\n    }\n    flag = '\\x01';\n  default:\ndefault_case:\n    result = FUN_08002638(command,&index,&param3);\n    if (result == 0) {\n      return 1;\n    }\n    first_char = index + 1;\n    if (command[index] != '=') {\n      return 3;\n    }\n    index = first_char;\n    if (flag == '\\0') {\n      result = FUN_08002638(command,&index,&value);\n      if (result == 0) {\n        return 1;\n      }\n      if (command[index] == '\\0') {\n        converted_value = FUN_08009278(param3);\n        result = FUN_08004e30(converted_value,value);\n        return result;\n      }\n      return 3;\n    }\n    do {\n      command[(uint)index - (uint)first_char] = command[index];\n      result = (uint)index;\n      index = index + 1;\n    } while (command[result] != '\\0');\n    flag = first_char;\n    flag = FUN_080005b4(command);\n    if (flag != 0) {\n      return (uint)flag;\n    }\n    temp_result = FUN_08008590(param3);\n    temp_result = FUN_08009798((int)temp_result,(int)((ulonglong)temp_result >> 0x20));\n    flag = FUN_08008bf0((int)temp_result,(int)((ulonglong)temp_result >> 0x20));\n    FUN_08004bc0(flag,command);\n    break;\n  case 0x58:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    if (DAT_20000ea9 == '\\x06') {\n      FUN_080041a0(3);\n      DAT_20000ea9 = '\\0';\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "parse_command_08003b98",
            "entrypoint": "0x08003b98",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003b98": "parse_command_08003b98",
                "bVar1": "first_char",
                "iVar2": "result",
                "local_10": "param3",
                "local_14": "value",
                "local_9": "flag",
                "local_a": "index",
                "param_1": "command",
                "switchD_08003bdc_caseD_25": "default_case",
                "uVar3": "converted_value",
                "uVar4": "result",
                "uVar5": "temp_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f34": {
            "additional_data": {
                "DAT_20000d10": {
                    "buffer": 1,
                    "character_buffer": 1,
                    "input_array": 1,
                    "input_buffer": 2
                },
                "DAT_20000e10": {
                    "current_index": 5,
                    "data_index": 1,
                    "index": 1,
                    "index_count": 1,
                    "input_index": 4,
                    "input_length": 1,
                    "string_length": 1
                },
                "DAT_20000e11": {
                    "in_parenthesis": 2,
                    "inside_brackets": 1,
                    "inside_parentheses": 6,
                    "inside_parenthesis": 1,
                    "is_bracket_open": 1,
                    "is_parentheses_open": 1,
                    "is_parenthesis_open": 1,
                    "parentheses_flag": 1
                },
                "DAT_20000ea8": {
                    "end_flag": 2,
                    "end_of_input": 1,
                    "exit_condition": 1,
                    "exit_flag": 1,
                    "finished_processing_input": 1,
                    "is_break_loop": 1,
                    "is_end_of_file": 1
                },
                "FUN_08003980": {
                    "clear_buffer": 3,
                    "initialize": 1,
                    "initialize_buffer": 2,
                    "output_message": 1,
                    "print_buffer": 1,
                    "print_error": 1,
                    "print_message": 1,
                    "print_new_line": 1,
                    "print_output": 6,
                    "print_prompt": 1,
                    "print_string": 1,
                    "reset_buffer": 4,
                    "reset_input_buffer": 1,
                    "reset_state": 1
                },
                "FUN_08003a74": {
                    "execute": 1,
                    "execute_function": 1,
                    "perform_action": 1,
                    "perform_operation": 1,
                    "process_buffer": 8,
                    "process_data": 4,
                    "process_input": 8,
                    "process_output": 1
                },
                "FUN_08003b98": {
                    "calculate_checksum": 15,
                    "calculate_hash": 2,
                    "calculate_input_value": 1,
                    "calculate_output_value": 1,
                    "calculate_result": 1,
                    "calculate_value": 2,
                    "compute_checksum": 1,
                    "compute_result": 1,
                    "get_string_length": 1
                },
                "FUN_08003f34": {
                    "extract_input": 1,
                    "extract_input_string": 1,
                    "parse_input": 11,
                    "process_input": 18
                },
                "FUN_08004030": {
                    "add_to_output_buffer": 1,
                    "output_character": 1,
                    "output_result": 1,
                    "output_value": 1,
                    "print_character": 6,
                    "print_message": 1,
                    "print_output": 3,
                    "print_result": 3,
                    "process_character": 1,
                    "send_byte": 1,
                    "send_data": 2,
                    "send_message": 1,
                    "send_output": 2,
                    "send_to_server": 1
                },
                "FUN_08008286": {
                    "get_byte_value": 1,
                    "get_input_byte": 1,
                    "get_input_char": 1,
                    "get_next_byte": 1,
                    "read_byte": 17,
                    "read_byte_from_input": 1,
                    "read_input": 1,
                    "read_input_byte": 2
                },
                "bVar1": {
                    "byte_read": 3,
                    "byte_val": 1,
                    "byte_value": 5,
                    "current_byte": 2,
                    "current_char": 2,
                    "input_byte": 8,
                    "input_char": 1
                },
                "uVar2": {
                    "checksum": 7,
                    "checksum_value": 1,
                    "hash": 1,
                    "output_value": 1,
                    "result": 8,
                    "return_code": 1,
                    "return_val": 1,
                    "return_value": 2
                },
                "uVar3": {
                    "buffer_index": 1,
                    "current_index": 1,
                    "index": 19,
                    "value": 1
                }
            },
            "called": [
                "FUN_08003980",
                "FUN_08008286",
                "FUN_08003a74",
                "FUN_08003b98",
                "FUN_08004030"
            ],
            "calling": [
                "FUN_08001ddc"
            ],
            "code": "\nvoid process_input_08003f34(void)\n\n{\n  byte input_byte;\n  undefined4 result;\n  uint index;\n  \n  while( true ) {\n    while( true ) {\n      input_byte = FUN_08008286();\n      if (input_byte == 0xff) {\n        return;\n      }\n      if ((input_byte == 10) || (input_byte == 0xd)) break;\n      if (DAT_20000e11 == '\\0') {\n        if ((0x20 < input_byte) && (input_byte != 0x2f)) {\n          if (input_byte == 0x28) {\n            DAT_20000e11 = '\\x01';\n          }\n          else if (DAT_20000e10 == 0xff) {\n            FUN_08004030(0xd);\n            FUN_08003980();\n          }\n          else if ((input_byte < 0x61) || (0x7a < input_byte)) {\n            index = (uint)DAT_20000e10;\n            DAT_20000e10 = DAT_20000e10 + 1;\n            (&DAT_20000d10)[index] = input_byte;\n          }\n          else {\n            index = (uint)DAT_20000e10;\n            DAT_20000e10 = DAT_20000e10 + 1;\n            (&DAT_20000d10)[index] = input_byte - 0x20;\n          }\n        }\n      }\n      else if (input_byte == 0x29) {\n        DAT_20000e11 = '\\0';\n      }\n    }\n    FUN_08003a74();\n    if (DAT_20000ea8 != '\\0') break;\n    if (DAT_20000e10 == 0) {\n      FUN_08004030(0);\n    }\n    else {\n      (&DAT_20000d10)[DAT_20000e10] = 0;\n      result = FUN_08003b98(&DAT_20000d10);\n      FUN_08004030(result);\n    }\n    FUN_08003980();\n  }\n  return;\n}\n\n",
            "current_name": "process_input_08003f34",
            "entrypoint": "0x08003f34",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003f34": "process_input_08003f34",
                "bVar1": "input_byte",
                "uVar2": "result",
                "uVar3": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004030": {
            "additional_data": {
                "DAT_0800b5c8": {
                    "blank_message": 1,
                    "default_error_message": 3,
                    "default_message": 1,
                    "error_message1": 1,
                    "error_msg1": 1,
                    "no_error_message": 1,
                    "no_error_msg": 1
                },
                "DAT_0800b6d8": {
                    "end_error_msg": 1,
                    "end_message": 2,
                    "end_of_error_message": 3,
                    "error_message2": 1,
                    "error_msg2": 1,
                    "error_suffix": 1
                },
                "FUN_080036c6": {
                    "display_message": 1,
                    "print_error": 1,
                    "print_error_message": 9,
                    "print_message": 9,
                    "print_string": 3
                },
                "FUN_08004030": {
                    "display_error_message": 9,
                    "handle_error": 11,
                    "handle_error_message": 2,
                    "print_error_message": 7,
                    "process_error_message": 1
                },
                "errorMessage1": {
                    "error_message1": 1
                },
                "errorMessage2": {
                    "error_message2": 1
                },
                "errorMsg1": {
                    "error_message1": 1
                },
                "errorMsg2": {
                    "error_message2": 1
                },
                "param_1": {
                    "error_code": 28,
                    "error_type": 1,
                    "message": 1
                }
            },
            "called": [
                "FUN_080036c6"
            ],
            "calling": [
                "FUN_08003f34",
                "FUN_080051b4",
                "FUN_080039bc",
                "FUN_08003b98",
                "FUN_080004ac",
                "FUN_080044e8"
            ],
            "code": "\nvoid handle_error_message_08004030(char error_code)\n\n{\n  if (error_code == '\\0') {\n    FUN_080036c6(&DAT_0800b5c8);\n  }\n  else {\n    FUN_080036c6(\"error: \");\n    switch(error_code) {\n    case '\\x01':\n      FUN_080036c6(\"Bad number format\");\n      break;\n    case '\\x02':\n      FUN_080036c6(\"Expected command letter\");\n      break;\n    case '\\x03':\n      FUN_080036c6(\"Unsupported statement\");\n      break;\n    case '\\x04':\n      FUN_080036c6(\"Invalid radius\");\n      break;\n    case '\\x05':\n      FUN_080036c6(\"Modal group violation\");\n      break;\n    case '\\x06':\n      FUN_080036c6(\"Invalid statement\");\n      break;\n    case '\\a':\n      FUN_080036c6(\"Setting disabled\");\n      break;\n    case '\\b':\n      FUN_080036c6(\"Value < 0.0\");\n      break;\n    case '\\t':\n      FUN_080036c6(\"Value < 3 usec\");\n      break;\n    case '\\n':\n      FUN_080036c6(\"EEPROM read fail. Using defaults\");\n      break;\n    case '\\v':\n      FUN_080036c6(\"Busy or queued\");\n      break;\n    case '\\f':\n      FUN_080036c6(\"Alarm lock\");\n      break;\n    case '\\r':\n      FUN_080036c6(\"Line overflow\");\n    }\n    FUN_080036c6(&DAT_0800b6d8);\n  }\n  return;\n}\n\n",
            "current_name": "handle_error_message_08004030",
            "entrypoint": "0x08004030",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004030": "handle_error_message_08004030",
                "param_1": "error_code"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004148": {
            "additional_data": {
                "500": {
                    "delay_period": 1
                },
                "FUNC_08002814": {
                    "delay": 11,
                    "delay_execution": 1,
                    "wait_delay": 1
                },
                "FUN_08002814": {
                    "delay": 9,
                    "delay_execution": 2,
                    "wait": 1
                },
                "FUN_080036c6": {
                    "display": 1,
                    "print": 1,
                    "print_message": 17,
                    "print_string": 5,
                    "print_text": 1
                },
                "FUN_080036c6@1": {
                    "print_abort_message": 1
                },
                "FUN_080036c6@2": {
                    "print_hard_limit_message": 1
                },
                "FUN_08004148": {
                    "display_alarm_message": 10,
                    "handle_alarm": 2,
                    "print_alarm_message": 14,
                    "print_alarm_msg": 1,
                    "print_alarm_status": 1,
                    "show_alarm_message": 2,
                    "show_error_message": 1
                },
                "char": {
                    "char": 1
                },
                "param_1": {
                    "alarm_code": 2,
                    "alarm_type": 1,
                    "error_code": 25,
                    "message": 3
                },
                "param_2": {
                    "message": 1
                }
            },
            "called": [
                "FUN_080036c6",
                "FUN_08002814"
            ],
            "calling": [
                "FUN_08003a74"
            ],
            "code": "\nvoid print_alarm_message_08004148(char error_code)\n\n{\n  FUN_080036c6(\"ALARM: \");\n  if (error_code == -2) {\n    FUN_080036c6(\"Abort during cycle\");\n  }\n  else if (error_code == -1) {\n    FUN_080036c6(\"Hard limit\");\n  }\n  FUN_080036c6(\". MPos?\\r\\n\");\n  FUNC_08002814(500);\n  return;\n}\n\n",
            "current_name": "print_alarm_message_08004148",
            "entrypoint": "0x08004148",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004148": "print_alarm_message_08004148",
                "param_1": "error_code"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080041a0": {
            "additional_data": {
                "1": {
                    "reset_message": 1
                },
                "2": {
                    "unlock_message": 1
                },
                "3": {
                    "caution_message": 1
                },
                "4": {
                    "enabled_message": 1
                },
                "5": {
                    "disabled_message": 1
                },
                "DAT_0800b710": {
                    "header_message": 1,
                    "reset_message": 7,
                    "reset_prompt": 3,
                    "welcome_message": 2
                },
                "DAT_0800b764": {
                    "additional_message": 1,
                    "completion_message": 1,
                    "end_message": 7,
                    "ending_message": 1,
                    "footer_message": 2,
                    "goodbye_message": 1
                },
                "FUN_080036c6": {
                    "display_message": 1,
                    "display_text": 1,
                    "print_message": 26
                },
                "FUN_080041a0": {
                    "display_message": 22,
                    "display_status_message": 9
                },
                "param_1": {
                    "message": 1,
                    "message_type": 22,
                    "status": 5,
                    "status_code": 3
                }
            },
            "called": [
                "FUN_080036c6"
            ],
            "calling": [
                "FUN_08001ddc",
                "FUN_08003a74",
                "FUN_08003b98"
            ],
            "code": "\nvoid display_status_message_080041a0(undefined message_type)\n\n{\n  FUN_080036c6(&DAT_0800b710);\n  switch(message_type) {\n  case 1:\n    FUN_080036c6(\"Reset to continue\");\n    break;\n  case 2:\n    FUN_080036c6(\"\\'$H\\'|\\'$X\\' to unlock\");\n    break;\n  case 3:\n    FUN_080036c6(\"Caution: Unlocked\");\n    break;\n  case 4:\n    FUN_080036c6(\"Enabled\");\n    break;\n  case 5:\n    FUN_080036c6(\"Disabled\");\n  }\n  FUN_080036c6(&DAT_0800b764);\n  return;\n}\n\n",
            "current_name": "display_status_message_080041a0",
            "entrypoint": "0x080041a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080041a0": "display_status_message_080041a0",
                "param_1": "message_type"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004228": {
            "additional_data": {
                "FUN_080036c6": {
                    "display_message": 1,
                    "print_message": 22,
                    "print_string": 5
                },
                "FUN_08004228": {
                    "print_grbl_info": 1,
                    "print_grbl_version": 25,
                    "print_greeting": 1,
                    "print_startup_message": 1,
                    "print_welcome_message": 3
                },
                "param_1": {
                    "message": 29,
                    "str": 1
                }
            },
            "called": [
                "FUN_080036c6"
            ],
            "calling": [
                "FUN_080039a0"
            ],
            "code": "\nvoid print_grbl_version_08004228(void)\n\n{\n  FUN_080036c6(\"\\r\\nGrbl 0.8c [\\'$\\' for help]\\r\\n\");\n  return;\n}\n\n",
            "current_name": "print_grbl_version_08004228",
            "entrypoint": "0x08004228",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004228": "print_grbl_version_08004228"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800423c": {
            "additional_data": {
                "FUN_080036c6": {
                    "display_menu_options": 1,
                    "display_message": 1,
                    "display_text": 1,
                    "print_message": 13,
                    "print_string": 12,
                    "print_text": 2,
                    "send_serial_data": 1
                },
                "FUN_0800423c": {
                    "display_control_menu": 1,
                    "display_grbl_commands": 1,
                    "display_grbl_menu": 1,
                    "display_grbl_options": 2,
                    "display_menu": 1,
                    "display_menu_options": 1,
                    "print_command_menu": 1,
                    "print_grbl_commands": 7,
                    "print_grbl_menu": 5,
                    "print_help_menu": 1,
                    "print_menu": 2,
                    "print_menu_options": 6,
                    "print_supported_commands": 1,
                    "view_grbl_settings": 1
                },
                "param_1": {
                    "menu_options": 1,
                    "message": 14,
                    "str_commands": 1,
                    "string_to_print": 1,
                    "text": 1
                }
            },
            "called": [
                "FUN_080036c6"
            ],
            "calling": [
                "FUN_08003b98"
            ],
            "code": "\nvoid print_menu_options_0800423c(void)\n\n{\n  FUN_080036c6(\n              \"$$ (view Grbl settings)\\r\\n$# (view # parameters)\\r\\n$G (view parser state)\\r\\n$N (view startup blocks)\\r\\n$x=value (save Grbl setting)\\r\\n$Nx=line (save startup block)\\r\\n$C (check gcode mode)\\r\\n$X (kill alarm lock)\\r\\n$H (run homing cycle)\\r\\n~ (cycle start)\\r\\n! (feed hold)\\r\\n? (current status)\\r\\nctrl-x (reset Grbl)\\r\\n\"\n              );\n  return;\n}\n\n",
            "current_name": "print_menu_options_0800423c",
            "entrypoint": "0x0800423c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800423c": "print_menu_options_0800423c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004250": {
            "additional_data": {
                "DAT_0800b8b8": {
                    "x_step_per_millimeter": 1
                },
                "DAT_0800bb94": {
                    "end_string": 1
                },
                "DAT_20000ebc": {
                    "y_step_per_millimeter": 1
                },
                "DAT_20000ec0": {
                    "z_step_per_millimeter": 1
                },
                "DAT_20000ec4": {
                    "step_pulse": 1
                },
                "DAT_20000ec9": {
                    "default_feed": 1
                },
                "DAT_20000ecc": {
                    "default_seek": 1
                },
                "DAT_20000ed0": {
                    "step_port_invert_mask": 1
                },
                "DAT_20000ed4": {
                    "step_idle_delay": 1
                },
                "DAT_20000ed6": {
                    "dir_port_invert_mask": 1
                },
                "DAT_20000ed8": {
                    "arc_segment": 1
                },
                "DAT_20000ee0": {
                    "junction_deviation": 1
                },
                "DAT_20000ee4": {
                    "report_inches_auto_start_invert_enable_hard_limits": 1
                },
                "DAT_20000ee6": {
                    "homing_cycle_homing_dir_invert_mask": 1
                },
                "DAT_20000ee8": {
                    "homing_feed": 1
                },
                "DAT_20000eec": {
                    "homing_seek": 1
                },
                "DAT_20000ef0": {
                    "homing_debounce": 1
                },
                "DAT_20000ef4": {
                    "homing_pull_off": 1
                },
                "DAT_20000ef8": {
                    "acceleration": 1
                },
                "DAT_20000ef9": {
                    "decimal_places": 1
                },
                "DAT_20000efa": {
                    "n_arc_correction": 1
                },
                "FUN_080036c6": {
                    "print_message": 8,
                    "print_string": 21,
                    "print_text": 2
                },
                "FUN_0800375c": {
                    "print_bitmask": 1,
                    "print_hex": 8,
                    "print_hex_value": 4,
                    "print_int": 1,
                    "print_int_value": 2,
                    "print_integer": 6,
                    "print_integer_value": 1,
                    "print_inverted_mask": 1,
                    "print_mask": 3,
                    "print_port_invert_mask": 1
                },
                "FUN_080037fc": {
                    "print_bool": 4,
                    "print_bool_value": 4,
                    "print_boolean": 20,
                    "print_boolean_value": 2,
                    "print_flag": 1
                },
                "FUN_08003826": {
                    "print_number": 4,
                    "print_parameter": 1,
                    "print_parameter_value": 2,
                    "print_value": 24
                },
                "FUN_08004250": {
                    "print_all_settings": 1,
                    "print_configuration": 9,
                    "print_configuration_settings": 4,
                    "print_configurations": 2,
                    "print_settings": 14,
                    "print_settings_menu": 1
                },
                "FUN_08009054": {
                    "acceleration_calculation": 1,
                    "acceleration_conversion": 1,
                    "acceleration_to_uint": 1,
                    "calculate_accel": 1,
                    "calculate_acceleration": 25,
                    "calculate_accleration": 1,
                    "compute_acceleration": 1
                },
                "param_1": {
                    "value": 3
                },
                "param_2": {
                    "constant": 1,
                    "mask": 1
                },
                "param_3": {
                    "param_3": 1,
                    "undefined": 1
                },
                "param_4": {
                    "number": 1,
                    "param_4": 1
                },
                "uVar1": {
                    "acceleration": 5,
                    "acceleration_value": 4,
                    "calculated_acceleration": 1,
                    "converted_acceleration": 1
                }
            },
            "called": [
                "FUN_08009054",
                "FUN_08003826",
                "FUN_080036c6",
                "FUN_0800375c",
                "FUN_080037fc"
            ],
            "calling": [
                "FUN_080051b4",
                "FUN_08003b98"
            ],
            "code": "\nvoid print_configuration_settings_08004250(void)\n\n{\n  undefined4 acceleration;\n  \n  FUN_080036c6(&DAT_0800b8b8);\n  FUN_08003826(DAT_20000ebc);\n  FUN_080036c6(\" (x, step/mm)\\r\\n$1=\");\n  FUN_08003826(DAT_20000ec0);\n  FUN_080036c6(\" (y, step/mm)\\r\\n$2=\");\n  FUN_08003826(DAT_20000ec4);\n  FUN_080036c6(\" (z, step/mm)\\r\\n$3=\");\n  FUN_080037fc(DAT_20000ec9);\n  FUN_080036c6(\" (step pulse, usec)\\r\\n$4=\");\n  FUN_08003826(DAT_20000ecc);\n  FUN_080036c6(\" (default feed, mm/min)\\r\\n$5=\");\n  FUN_08003826(DAT_20000ed0);\n  FUN_080036c6(\" (default seek, mm/min)\\r\\n$6=\");\n  FUN_080037fc(DAT_20000ed4);\n  FUN_080036c6(\" (step port invert mask, int:\");\n  FUN_0800375c(DAT_20000ed4);\n  FUN_080036c6(\")\\r\\n$7=\");\n  FUN_080037fc(DAT_20000ef8);\n  FUN_080036c6(\" (step idle delay, msec)\\r\\n$8=\");\n  acceleration = FUN_08009054(DAT_20000edc,0x45610000);\n  FUN_08003826(acceleration);\n  FUN_080036c6(\" (acceleration, mm/sec^2)\\r\\n$9=\");\n  FUN_08003826(DAT_20000ee0);\n  FUN_080036c6(\" (junction deviation, mm)\\r\\n$10=\");\n  FUN_08003826(DAT_20000ed8);\n  FUN_080036c6(\" (arc, mm/segment)\\r\\n$11=\");\n  FUN_080037fc(DAT_20000efa);\n  FUN_080036c6(\" (n-arc correction, int)\\r\\n$12=\");\n  FUN_080037fc(DAT_20000ef9);\n  FUN_080036c6(\" (n-decimals, int)\\r\\n$13=\");\n  FUN_080037fc((DAT_20000ee4 & 1) != 0);\n  FUN_080036c6(\" (report inches, bool)\\r\\n$14=\");\n  FUN_080037fc((DAT_20000ee4 & 2) != 0);\n  FUN_080036c6(\" (auto start, bool)\\r\\n$15=\");\n  FUN_080037fc((DAT_20000ee4 & 4) != 0);\n  FUN_080036c6(\" (invert step enable, bool)\\r\\n$16=\");\n  FUN_080037fc((DAT_20000ee4 & 8) != 0);\n  FUN_080036c6(\" (hard limits, bool)\\r\\n$17=\");\n  FUN_080037fc((DAT_20000ee4 & 0x10) != 0);\n  FUN_080036c6(\" (homing cycle, bool)\\r\\n$18=\");\n  FUN_080037fc(DAT_20000ee6);\n  FUN_080036c6(\" (homing dir invert mask, int:\");\n  FUN_0800375c(DAT_20000ee6);\n  FUN_080036c6(\")\\r\\n$19=\");\n  FUN_08003826(DAT_20000ee8);\n  FUN_080036c6(\" (homing feed, mm/min)\\r\\n$20=\");\n  FUN_08003826(DAT_20000eec);\n  FUN_080036c6(\" (homing seek, mm/min)\\r\\n$21=\");\n  FUN_080037fc(DAT_20000ef0);\n  FUN_080036c6(\" (homing debounce, msec)\\r\\n$22=\");\n  FUN_08003826(DAT_20000ef4);\n  FUN_080036c6(\" (homing pull-off, mm)\\r\\n$23=\");\n  FUN_080037fc(DAT_20000ed6);\n  FUN_080036c6(\" (dir port invert mask, int:\");\n  FUN_0800375c(DAT_20000ed6);\n  FUN_080036c6(&DAT_0800bb94);\n  return;\n}\n\n",
            "current_name": "print_configuration_settings_08004250",
            "entrypoint": "0x08004250",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004250": "print_configuration_settings_08004250",
                "uVar1": "acceleration"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080044e8": {
            "additional_data": {
                "DAT_0800b764": {
                    "message2": 1
                },
                "DAT_0800bb98": {
                    "message3": 1
                },
                "DAT_0800bb9c": {
                    "message4": 1
                },
                "DAT_0800bba0": {
                    "message5": 1
                },
                "DAT_0800bba4": {
                    "message6": 1
                },
                "DAT_0800bba8": {
                    "message7": 1
                },
                "DAT_0800bbac": {
                    "message8": 1
                },
                "DAT_0800bbb0": {
                    "message9": 1
                },
                "DAT_0800bbb4": {
                    "message10": 1
                },
                "DAT_0800bbb8": {
                    "message11": 1
                },
                "DAT_0800bbbc": {
                    "message1": 1
                },
                "DAT_20000ee4": {
                    "data_flag": 1,
                    "flag": 1
                },
                "FUN_080036c6": {
                    "print_message": 9,
                    "print_string": 1
                },
                "FUN_08003826": {
                    "print_value": 2,
                    "process_data_item": 1,
                    "process_value": 6,
                    "send_data": 1
                },
                "FUN_08004030": {
                    "cleanup_resources": 1,
                    "execute_task": 2,
                    "initialize_data": 1,
                    "perform_action": 1,
                    "reset_and_exit": 1,
                    "reset_counter": 1,
                    "reset_data": 1,
                    "reset_value": 2
                },
                "FUN_080044e8": {
                    "execute_operations": 1,
                    "handle_data_processing": 1,
                    "process_and_print_data": 1,
                    "process_data": 23,
                    "reverse_and_process_data": 1
                },
                "FUN_08004d7c": {
                    "check_condition": 7,
                    "check_data": 1,
                    "is_valid": 1,
                    "validate_data": 1
                },
                "FUN_08008590": {
                    "calculate_checksum": 2,
                    "calculate_hash": 3,
                    "compute_hash": 1,
                    "convert_value": 1,
                    "reverse_data": 1,
                    "reverse_value": 1,
                    "transform_data": 1
                },
                "FUN_08008640": {
                    "calculate_hash": 1,
                    "combine_values": 1,
                    "encrypt_data": 1,
                    "manipulate_data": 1,
                    "manipulate_value": 2,
                    "perform_operation": 1,
                    "perform_operations": 1,
                    "transform_data": 1,
                    "transform_hash": 1
                },
                "FUN_08008c30": {
                    "calculate_checksum": 3,
                    "calculate_result": 2,
                    "calculate_value": 2,
                    "perform_operation": 2,
                    "update_value": 1
                },
                "auStack_18": {
                    "array_stack": 1,
                    "data_array": 3,
                    "data_stack": 2,
                    "input_array": 1,
                    "input_data": 1,
                    "parameters": 3,
                    "processed_values": 1,
                    "stack_array": 4,
                    "stack_data": 3,
                    "stack_values": 3,
                    "temp_array": 1,
                    "values": 4
                },
                "iVar1": {
                    "operation_result": 1,
                    "result": 16,
                    "return_value": 3
                },
                "local_9": {
                    "count": 6,
                    "counter": 16,
                    "iteration": 2,
                    "loop_index": 1,
                    "loop_index_9": 1,
                    "outer_index": 1,
                    "outer_loop_counter": 1,
                    "outer_loop_index": 1
                },
                "local_a": {
                    "i": 1,
                    "index": 21,
                    "inner_index": 1,
                    "inner_loop_counter": 1,
                    "inner_loop_index": 1,
                    "iterator": 1,
                    "loop_index": 1,
                    "loop_index_a": 1,
                    "loop_variable": 1
                },
                "uVar2": {
                    "converted_value": 6,
                    "processed_data": 5,
                    "processed_value": 5,
                    "result": 4,
                    "result1": 1,
                    "temp_var": 1,
                    "updated_value": 1
                },
                "uVar3": {
                    "calculated_value": 1,
                    "converted_data": 1,
                    "converted_value": 1,
                    "modified_value": 2,
                    "processed_data": 1,
                    "processed_value": 4,
                    "result": 1,
                    "result2": 1,
                    "temp": 2,
                    "temp_val": 1,
                    "temp_value": 1,
                    "transformed_data": 4,
                    "transformed_value": 3
                }
            },
            "called": [
                "FUN_08008590",
                "FUN_08003826",
                "FUN_080036c6",
                "FUN_08004030",
                "FUN_08008640",
                "FUN_08004d7c",
                "FUN_08008c30"
            ],
            "calling": [
                "FUN_08003b98"
            ],
            "code": "\nvoid reverse_and_process_data_080044e8(void)\n\n{\n  int result;\n  undefined4 converted_value;\n  undefined8 transformed_data;\n  undefined4 values [3];\n  byte index;\n  byte counter;\n  \n  counter = 0;\n  while( true ) {\n    if (7 < counter) {\n      FUN_080036c6(\"[G92:\");\n      for (index = 0; index < 3; index = index + 1) {\n        if ((DAT_20000ee4 & 1) == 0) {\n          FUN_08003826(*(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n        }\n        else {\n          transformed_data = FUN_08008590(*(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n          transformed_data = FUN_08008640((int)transformed_data,(int)((ulonglong)transformed_data >> 0x20),0x57e16865,0x3fa42851);\n          converted_value = FUN_08008c30((int)transformed_data,(int)((ulonglong)transformed_data >> 0x20));\n          FUN_08003826(converted_value);\n        }\n        if (index < 2) {\n          FUN_080036c6(&DAT_0800bbbc);\n        }\n        else {\n          FUN_080036c6(&DAT_0800b764);\n        }\n      }\n      return;\n    }\n    result = FUN_08004d7c(counter,values);\n    if (result == 0) break;\n    FUN_080036c6(&DAT_0800bb98);\n    switch(counter) {\n    case 0:\n      FUN_080036c6(&DAT_0800bb9c);\n      break;\n    case 1:\n      FUN_080036c6(&DAT_0800bba0);\n      break;\n    case 2:\n      FUN_080036c6(&DAT_0800bba4);\n      break;\n    case 3:\n      FUN_080036c6(&DAT_0800bba8);\n      break;\n    case 4:\n      FUN_080036c6(&DAT_0800bbac);\n      break;\n    case 5:\n      FUN_080036c6(&DAT_0800bbb0);\n      break;\n    case 6:\n      FUN_080036c6(&DAT_0800bbb4);\n      break;\n    case 7:\n      FUN_080036c6(&DAT_0800bbb8);\n    }\n    for (index = 0; index < 3; index = index + 1) {\n      if ((DAT_20000ee4 & 1) == 0) {\n        FUN_08003826(values[index]);\n      }\n      else {\n        transformed_data = FUN_08008590(values[index]);\n        transformed_data = FUN_08008640((int)transformed_data,(int)((ulonglong)transformed_data >> 0x20),0x57e16865,0x3fa42851);\n        converted_value = FUN_08008c30((int)transformed_data,(int)((ulonglong)transformed_data >> 0x20));\n        FUN_08003826(converted_value);\n      }\n      if (index < 2) {\n        FUN_080036c6(&DAT_0800bbbc);\n      }\n      else {\n        FUN_080036c6(&DAT_0800b764);\n      }\n    }\n    counter = counter + 1;\n  }\n  FUN_08004030(10);\n  return;\n}\n\n",
            "current_name": "reverse_and_process_data_080044e8",
            "entrypoint": "0x080044e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080044e8": "reverse_and_process_data_080044e8",
                "auStack_18": "values",
                "iVar1": "result",
                "local_9": "counter",
                "local_a": "index",
                "uVar2": "converted_value",
                "uVar3": "transformed_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080046d0": {
            "additional_data": {
                "DAT_0800b764": {
                    "data28": 1,
                    "message27": 1
                },
                "DAT_0800bbc8": {
                    "config1": 1,
                    "configuration0": 1,
                    "data2": 1,
                    "message1": 1
                },
                "DAT_0800bbcc": {
                    "config2": 1,
                    "configuration1": 1,
                    "data3": 1,
                    "message2": 1
                },
                "DAT_0800bbd0": {
                    "config3": 1,
                    "configuration2": 1,
                    "data4": 1,
                    "message3": 1
                },
                "DAT_0800bbd4": {
                    "config4": 1,
                    "configuration3": 1,
                    "data5": 1,
                    "message4": 1
                },
                "DAT_0800bbd8": {
                    "config5": 1,
                    "configuration4": 1,
                    "data6": 1,
                    "message5": 1
                },
                "DAT_0800bbe0": {
                    "config6": 1,
                    "data7": 1,
                    "message6": 1
                },
                "DAT_0800bbe4": {
                    "config7": 1,
                    "data8": 1,
                    "message7": 1,
                    "option_configuration1": 1
                },
                "DAT_0800bbec": {
                    "config8": 1,
                    "data9": 1,
                    "message8": 1,
                    "option_configuration2": 1
                },
                "DAT_0800bbf4": {
                    "config9": 1,
                    "data10": 1,
                    "message9": 1,
                    "option_configuration3": 1
                },
                "DAT_0800bbfc": {
                    "config11": 1,
                    "data12": 1,
                    "feature_configuration2": 1,
                    "message11": 1
                },
                "DAT_0800bc04": {
                    "config10": 1,
                    "data11": 1,
                    "feature_configuration1": 1,
                    "message10": 1
                },
                "DAT_0800bc0c": {
                    "config13": 1,
                    "data14": 1,
                    "message13": 1,
                    "setting_configuration2": 1
                },
                "DAT_0800bc14": {
                    "config12": 1,
                    "data13": 1,
                    "message12": 1,
                    "setting_configuration1": 1
                },
                "DAT_0800bc1c": {
                    "adjustment_configuration2": 1,
                    "config15": 1,
                    "data16": 1,
                    "message15": 1
                },
                "DAT_0800bc24": {
                    "adjustment_configuration1": 1,
                    "config14": 1,
                    "data15": 1,
                    "message14": 1
                },
                "DAT_0800bc2c": {
                    "adjustment_configuration0": 1,
                    "config17": 1,
                    "data18": 1,
                    "message17": 1
                },
                "DAT_0800bc30": {
                    "adjustment_configuration1": 1,
                    "config18": 1,
                    "data19": 1,
                    "message18": 1
                },
                "DAT_0800bc34": {
                    "adjustment_configuration3": 1,
                    "config16": 1,
                    "data17": 1,
                    "message16": 1
                },
                "DAT_0800bc38": {
                    "brightness_configuration1": 1,
                    "config19": 1,
                    "data20": 1,
                    "message19": 1
                },
                "DAT_0800bc3c": {
                    "brightness_configuration_minus1": 1,
                    "config20": 1,
                    "data21": 1,
                    "message20": 1
                },
                "DAT_0800bc40": {
                    "brightness_configuration0": 1,
                    "config21": 1,
                    "data22": 1,
                    "message21": 1
                },
                "DAT_0800bc44": {
                    "config23": 1,
                    "contrast_configuration0": 1,
                    "data24": 1,
                    "message23": 1
                },
                "DAT_0800bc48": {
                    "config24": 1,
                    "contrast_configuration1": 1,
                    "data25": 1,
                    "message24": 1
                },
                "DAT_0800bc4c": {
                    "config22": 1,
                    "contrast_configuration3": 1,
                    "data23": 1,
                    "message22": 1
                },
                "DAT_0800bc50": {
                    "config25": 1,
                    "data26": 1,
                    "default_configuration": 1,
                    "message25": 1
                },
                "DAT_0800bc54": {
                    "config26": 1,
                    "data27": 1,
                    "message26": 1,
                    "warning_configuration": 1
                },
                "DAT_20000e71": {
                    "config_index": 1,
                    "data1": 1,
                    "selection": 1,
                    "setting1": 3,
                    "switch_value": 1
                },
                "DAT_20000e72": {
                    "flag3": 1,
                    "flag5": 3,
                    "is_adjustment_enabled": 1,
                    "is_setting7_enabled": 1,
                    "setting5_enabled": 1,
                    "use_setting_e": 1
                },
                "DAT_20000e73": {
                    "flag1": 1,
                    "flag3": 3,
                    "is_feature_enabled": 1,
                    "is_setting5_enabled": 1,
                    "setting1_enabled": 1,
                    "use_setting_c": 1
                },
                "DAT_20000e74": {
                    "flag2": 1,
                    "flag4": 3,
                    "is_setting6_enabled": 1,
                    "is_setting_enabled": 1,
                    "setting4_enabled": 1,
                    "use_setting_d": 1
                },
                "DAT_20000e75": {
                    "adjustment_level": 1,
                    "choice_a": 1,
                    "code1": 1,
                    "setting6_option": 1,
                    "setting8": 1,
                    "value1": 2,
                    "value2": 1
                },
                "DAT_20000e76": {
                    "brightness_level": 1,
                    "choice_b": 1,
                    "code2": 1,
                    "flag4": 1,
                    "setting7_option": 1,
                    "setting9": 1,
                    "value2": 2
                },
                "DAT_20000e77": {
                    "choice_c": 1,
                    "code3": 1,
                    "contrast_level": 1,
                    "setting10": 1,
                    "setting8_option": 1,
                    "value3": 3
                },
                "DAT_20000e78": {
                    "param": 1,
                    "param1": 1,
                    "setting12": 1,
                    "setting4": 1,
                    "setting9_option": 1,
                    "value": 1,
                    "value5": 1,
                    "warning_level": 1
                },
                "DAT_20000e88": {
                    "constant": 1,
                    "default_offset": 1,
                    "offset2": 2,
                    "setting11": 1,
                    "setting3": 1,
                    "setting9_value2": 1,
                    "value4": 1
                },
                "DAT_20000e89": {
                    "flag1": 3,
                    "is_option_enabled": 1,
                    "is_setting3_enabled": 1,
                    "setting2_enabled": 1,
                    "use_setting_a": 1
                },
                "DAT_20000e8a": {
                    "flag2": 3,
                    "option_index": 1,
                    "setting2_option": 1,
                    "setting4": 1,
                    "use_setting_b": 1
                },
                "DAT_20000e8c": {
                    "offset": 3,
                    "offset1": 1,
                    "setting2": 2,
                    "value1": 1
                },
                "FUN_080036c6": {
                    "display_message": 2,
                    "load_data": 5,
                    "perform_operation": 1,
                    "print_configuration": 1,
                    "print_data": 8,
                    "print_message": 7,
                    "print_setting": 1,
                    "process_string": 2,
                    "set_configuration": 2,
                    "set_game_option": 1
                },
                "FUN_080037fc": {
                    "calculate_checksum": 5,
                    "calculate_offset": 2,
                    "display_message": 1,
                    "do_something": 1,
                    "execute_command": 1,
                    "execute_operation": 1,
                    "initialize_player_score": 1,
                    "initialize_value": 1,
                    "perform_action": 2,
                    "perform_calculation": 1,
                    "perform_operation": 5,
                    "perform_operation4": 1,
                    "print_data": 1,
                    "print_value": 1,
                    "process_data": 3,
                    "update_counter": 1
                },
                "FUN_08003826": {
                    "apply_settings": 1,
                    "display_message": 2,
                    "display_result": 2,
                    "display_score": 2,
                    "execute_action": 1,
                    "execute_function": 1,
                    "execute_initialization": 1,
                    "execute_operation": 1,
                    "finalize_process": 1,
                    "handle_result": 1,
                    "output_result": 1,
                    "perform_operation2": 1,
                    "print_result": 3,
                    "print_value": 2,
                    "process_data": 1,
                    "process_data_b": 2,
                    "process_hash": 1,
                    "process_result": 1,
                    "process_setting": 1,
                    "process_value": 1,
                    "update_configuration": 1
                },
                "FUN_080046d0": {
                    "execute_configurations": 1,
                    "execute_operations": 1,
                    "extract_and_improve": 1,
                    "initialize": 1,
                    "initialize_application": 2,
                    "initialize_function": 1,
                    "initialize_game_data": 2,
                    "initialize_game_options": 1,
                    "initialize_program": 3,
                    "initialize_settings": 4,
                    "initialize_system": 1,
                    "process_data": 9
                },
                "FUN_08008590": {
                    "calculate_checksum": 8,
                    "calculate_hash": 4,
                    "calculate_score": 1,
                    "calculate_value": 3,
                    "calculate_value1": 1,
                    "generate_hash": 1,
                    "get_hash": 1,
                    "hash_data": 1,
                    "perform_hash": 1,
                    "perform_operation1": 1,
                    "process_data": 1,
                    "process_data1": 1,
                    "process_data_a": 2,
                    "reverse_bytes": 1,
                    "transform_data": 1
                },
                "FUN_08008640": {
                    "calculate_checksum": 1,
                    "calculate_hash": 1,
                    "calculate_value2": 1,
                    "combine_values": 1,
                    "compute_result": 1,
                    "convert_data": 1,
                    "encrypt_data": 8,
                    "generate_hash": 1,
                    "generate_random_number": 1,
                    "perform_calculation": 1,
                    "perform_operation": 4,
                    "perform_operation3": 1,
                    "process_data2": 1,
                    "process_data_c": 1,
                    "transform_data": 2,
                    "transform_hash": 1,
                    "transform_value": 1
                },
                "FUN_08008c30": {
                    "apply_algorithm": 1,
                    "apply_logic": 1,
                    "calculate_checksum": 1,
                    "calculate_hash": 1,
                    "calculate_sum": 2,
                    "calculate_value": 2,
                    "calculate_value3": 1,
                    "decrypt_data": 1,
                    "generate_hash": 1,
                    "get_checksum": 1,
                    "get_final_score": 1,
                    "manipulate_data": 1,
                    "perform_computation": 1,
                    "perform_operation": 4,
                    "perform_operation2": 1,
                    "perform_operation5": 1,
                    "process_data3": 1,
                    "process_data_d": 1,
                    "reverse_data": 1,
                    "reverse_hash": 1,
                    "reverse_value": 1,
                    "update_value": 2
                },
                "FUN_0800b764": {
                    "finalize_setup": 1,
                    "message27": 1
                },
                "FUN_0800bbc8": {
                    "message1": 1
                },
                "FUN_0800bbcc": {
                    "message2": 1
                },
                "FUN_0800bbd0": {
                    "message3": 1
                },
                "FUN_0800bbd4": {
                    "message4": 1
                },
                "FUN_0800bbd8": {
                    "message5": 1
                },
                "FUN_0800bbe0": {
                    "message6": 1
                },
                "FUN_0800bbe4": {
                    "message7": 1
                },
                "FUN_0800bbec": {
                    "message8": 1
                },
                "FUN_0800bbf4": {
                    "message9": 1
                },
                "FUN_0800bbfc": {
                    "message11": 1
                },
                "FUN_0800bc04": {
                    "message10": 1
                },
                "FUN_0800bc0c": {
                    "message13": 1
                },
                "FUN_0800bc14": {
                    "message12": 1
                },
                "FUN_0800bc1c": {
                    "message15": 1
                },
                "FUN_0800bc24": {
                    "message14": 1
                },
                "FUN_0800bc2c": {
                    "message17": 1
                },
                "FUN_0800bc30": {
                    "message18": 1
                },
                "FUN_0800bc34": {
                    "message16": 1
                },
                "FUN_0800bc38": {
                    "message19": 1
                },
                "FUN_0800bc3c": {
                    "message20": 1
                },
                "FUN_0800bc40": {
                    "message21": 1
                },
                "FUN_0800bc44": {
                    "message23": 1
                },
                "FUN_0800bc48": {
                    "message24": 1
                },
                "FUN_0800bc4c": {
                    "message22": 1
                },
                "FUN_0800bc50": {
                    "message25": 1
                },
                "FUN_0800bc54": {
                    "message26": 1
                },
                "param_1": {
                    "param1": 1
                },
                "param_2": {
                    "param2": 1
                },
                "param_3": {
                    "param3": 1
                },
                "param_4": {
                    "param4": 1
                },
                "uVar1": {
                    "result": 5,
                    "result1": 3,
                    "return_value": 2
                },
                "uVar2": {
                    "hash": 1,
                    "result": 2,
                    "result2": 2,
                    "result3": 1,
                    "temp": 3,
                    "temp_result": 1
                }
            },
            "called": [
                "FUN_08008590",
                "FUN_08003826",
                "FUN_080036c6",
                "FUN_08008640",
                "FUN_080037fc",
                "FUN_08008c30"
            ],
            "calling": [
                "FUN_08003b98"
            ],
            "code": "\nvoid process_data_080046d0(void)\n\n{\n  undefined4 result;\n  undefined8 temp;\n  \n  switch(DAT_20000e71) {\n  case 0:\n    FUN_080036c6(&DAT_0800bbc8);\n    break;\n  case 1:\n    FUN_080036c6(&DAT_0800bbcc);\n    break;\n  case 2:\n    FUN_080036c6(&DAT_0800bbd0);\n    break;\n  case 3:\n    FUN_080036c6(&DAT_0800bbd4);\n    break;\n  case 4:\n    FUN_080036c6(&DAT_0800bbd8);\n  }\n  FUN_080036c6(&DAT_0800bbe0);\n  FUN_080037fc(DAT_20000e8c + 0x36);\n  if (DAT_20000e89 == '\\0') {\n    if (DAT_20000e8a == '\\x01') {\n      FUN_080036c6(&DAT_0800bbe4);\n    }\n    else {\n      FUN_080036c6(&DAT_0800bbec);\n    }\n  }\n  else {\n    FUN_080036c6(&DAT_0800bbf4);\n  }\n  if (DAT_20000e73 == '\\0') {\n    FUN_080036c6(&DAT_0800bc04);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bbfc);\n  }\n  if (DAT_20000e74 == '\\0') {\n    FUN_080036c6(&DAT_0800bc14);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bc0c);\n  }\n  if (DAT_20000e72 == '\\0') {\n    FUN_080036c6(&DAT_0800bc24);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bc1c);\n  }\n  if (DAT_20000e75 == 2) {\n    FUN_080036c6(&DAT_0800bc34);\n  }\n  else if (DAT_20000e75 < 3) {\n    if (DAT_20000e75 == 0) {\n      FUN_080036c6(&DAT_0800bc2c);\n    }\n    else if (DAT_20000e75 == 1) {\n      FUN_080036c6(&DAT_0800bc30);\n    }\n  }\n  if (DAT_20000e76 == '\\x01') {\n    FUN_080036c6(&DAT_0800bc38);\n  }\n  else if (DAT_20000e76 < '\\x02') {\n    if (DAT_20000e76 == -1) {\n      FUN_080036c6(&DAT_0800bc3c);\n    }\n    else if (DAT_20000e76 == '\\0') {\n      FUN_080036c6(&DAT_0800bc40);\n    }\n  }\n  if (DAT_20000e77 == 2) {\n    FUN_080036c6(&DAT_0800bc4c);\n  }\n  else if (DAT_20000e77 < 3) {\n    if (DAT_20000e77 == 0) {\n      FUN_080036c6(&DAT_0800bc44);\n    }\n    else if (DAT_20000e77 == 1) {\n      FUN_080036c6(&DAT_0800bc48);\n    }\n  }\n  FUN_080036c6(&DAT_0800bc50);\n  FUN_080037fc(DAT_20000e88);\n  FUN_080036c6(&DAT_0800bc54);\n  if (DAT_20000e73 == '\\0') {\n    FUN_08003826(DAT_20000e78);\n  }\n  else {\n    temp = FUN_08008590(DAT_20000e78);\n    temp = FUN_08008640((int)temp,(int)((ulonglong)temp >> 0x20),0x57e16865,0x3fa42851);\n    result = FUN_08008c30((int)temp,(int)((ulonglong)temp >> 0x20));\n    FUN_08003826(result);\n  }\n  FUN_080036c6(&DAT_0800b764);\n  return;\n}\n\n",
            "current_name": "process_data_080046d0",
            "entrypoint": "0x080046d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080046d0": "process_data_080046d0",
                "uVar1": "result",
                "uVar2": "temp"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004900": {
            "additional_data": {
                "FUN_0800369c": {
                    "configure_settings": 1,
                    "copy_value": 1,
                    "initialize_and_process": 1,
                    "initialize_buffer": 1,
                    "initialize_data2": 4,
                    "initialize_data_structure2": 1,
                    "initialize_param2": 1,
                    "initialize_param_2": 1,
                    "initialize_parameter": 1,
                    "initialize_parameters": 1,
                    "initialize_resource2": 1,
                    "initialize_settings": 1,
                    "initialize_string": 1,
                    "initialize_value": 7,
                    "initialize_variable": 1,
                    "set_param_value": 1,
                    "set_value": 1,
                    "update_configuration": 1
                },
                "FUN_080036c6": {
                    "copy_data": 1,
                    "initialize_buffer": 1,
                    "initialize_connection": 1,
                    "initialize_data": 8,
                    "initialize_data1": 4,
                    "initialize_data_structure": 3,
                    "initialize_data_structure1": 1,
                    "initialize_memory": 1,
                    "initialize_pointer": 1,
                    "initialize_resource": 1,
                    "initialize_variable": 2,
                    "load_data": 2,
                    "set_initial_data": 1
                },
                "FUN_080037fc": {
                    "configure_param": 1,
                    "perform_operation": 1,
                    "process_data": 16,
                    "process_data1": 3,
                    "process_input": 1,
                    "process_message": 1,
                    "process_param1": 1,
                    "process_param_1": 1,
                    "process_resource1": 1,
                    "process_undefined": 1
                },
                "FUN_08004900": {
                    "execute_function": 1,
                    "initialize": 8,
                    "initialize_and_call_functions": 1,
                    "initialize_and_process_data": 3,
                    "initialize_and_set_values": 1,
                    "initialize_application": 3,
                    "initialize_binary": 2,
                    "initialize_binary_function": 1,
                    "initialize_data": 2,
                    "initialize_program": 6,
                    "initialize_resources": 1,
                    "initialize_system": 1
                },
                "FUN_0800b6d8": {
                    "data_location3": 1
                },
                "FUN_0800bc58": {
                    "data_location1": 1
                },
                "FUN_0800bc5c": {
                    "data_location2": 1
                },
                "param_1": {
                    "data": 7,
                    "data2_param": 1,
                    "data_pointer": 2,
                    "data_to_process": 1,
                    "input_1": 1,
                    "message_buffer": 1,
                    "param1": 2,
                    "param_1": 1,
                    "resource1": 1,
                    "undefined_data": 1,
                    "undefined_param": 6,
                    "undefined_param_1": 2,
                    "undefined_parameter1": 2,
                    "undefined_value": 1,
                    "value_param": 1,
                    "variable_parameter": 1
                },
                "param_2": {
                    "configuration": 1,
                    "data_length": 1,
                    "data_value": 1,
                    "input_2": 1,
                    "int_value": 2,
                    "integer_parameter": 1,
                    "param2": 2,
                    "param_2": 2,
                    "param_value": 3,
                    "parameter2": 1,
                    "resource2": 1,
                    "undefined4_param": 4,
                    "undefined_param_2": 1,
                    "undefined_parameter2": 1,
                    "value": 8,
                    "value_param": 1
                }
            },
            "called": [
                "FUN_080036c6",
                "FUN_080037fc",
                "FUN_0800369c"
            ],
            "calling": [
                "FUN_08003b98"
            ],
            "code": "\nvoid initialize_program_08004900(undefined data,undefined4 value)\n\n{\n  FUN_080036c6(&DAT_0800bc58);\n  FUN_080037fc(data);\n  FUN_080036c6(&DAT_0800bc5c);\n  FUN_0800369c(value);\n  FUN_080036c6(&DAT_0800b6d8);\n  return;\n}\n\n",
            "current_name": "initialize_program_08004900",
            "entrypoint": "0x08004900",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004900": "initialize_program_08004900",
                "param_1": "data",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004940": {
            "additional_data": {
                "DAT_0800bbbc": {
                    "comma_str": 1,
                    "constant_text": 1,
                    "separator_string": 1
                },
                "DAT_0800bc70": {
                    "idle_string": 1,
                    "unknown_str": 1
                },
                "DAT_0800bca8": {
                    "end_str": 1,
                    "end_string": 1,
                    "end_text": 1
                },
                "DAT_20000e70": {
                    "w_pos_param1": 1,
                    "w_pos_x": 1
                },
                "DAT_20000e74": {
                    "w_pos_param2": 1,
                    "w_pos_y": 1
                },
                "DAT_20000ea9": {
                    "status": 2
                },
                "DAT_20000eac": {
                    "idle_str": 1,
                    "stack_value1": 1
                },
                "DAT_20000eb0": {
                    "queue_str": 1,
                    "stack_value2": 1
                },
                "DAT_20000eb4": {
                    "hold_str": 1,
                    "stack_value3": 1
                },
                "DAT_20000ebc": {
                    "constant_value": 1,
                    "m_pos": 1,
                    "m_pos_prefix": 1
                },
                "DAT_20000ee4": {
                    "flag": 3
                },
                "FUN_080036c6": {
                    "print_message": 1,
                    "print_string": 1,
                    "print_text": 2
                },
                "FUN_08003826": {
                    "display_position": 1,
                    "print_pos": 1,
                    "print_position": 1,
                    "print_value": 1
                },
                "FUN_08004940": {
                    "display_status_information": 1,
                    "print_machine_status": 1,
                    "print_state_information": 1,
                    "print_status": 26,
                    "print_status_info": 1,
                    "print_status_information": 1
                },
                "FUN_080082d0": {
                    "combine_pos": 1,
                    "combine_positions": 1,
                    "combine_values": 1
                },
                "FUN_08008590": {
                    "calculate_checksum": 1,
                    "calculate_hash": 1,
                    "encrypt_pos": 1,
                    "process_value2": 1
                },
                "FUN_08008640": {
                    "calculate_value": 1,
                    "combine_hashes": 1,
                    "encrypt_data": 1,
                    "process_pos": 1
                },
                "FUN_08008c30": {
                    "convert_to_decimal": 1,
                    "convert_to_signed": 1,
                    "truncate_pos": 1,
                    "truncate_position": 1
                },
                "FUN_08008cd8": {
                    "calculate_position": 2,
                    "calculate_value3": 1,
                    "format_w_pos": 1
                },
                "FUN_08008cdc": {
                    "calculate_position_with_hash": 1,
                    "calculate_value2": 1,
                    "decrypt_pos": 1,
                    "get_position": 1
                },
                "FUN_08008e44": {
                    "convert_to_hex": 1,
                    "convert_to_unsigned": 1,
                    "get_formatted_pos": 1,
                    "get_formatted_string": 1
                },
                "FUN_08009054": {
                    "calculate_offset": 1,
                    "format_pos": 1,
                    "format_value": 1,
                    "process_value": 1
                },
                "auStack_2c": {
                    "data": 1,
                    "data_stack": 1,
                    "formatted_pos": 1,
                    "machine_status": 1,
                    "position_array": 1,
                    "results": 1,
                    "stack_vars": 1,
                    "status": 2,
                    "status_arr": 1,
                    "status_array": 14,
                    "status_values": 1,
                    "values": 3,
                    "values_array": 1
                },
                "local_11": {
                    "i": 15,
                    "index": 13,
                    "iter": 1
                },
                "param_1": {
                    "status": 1
                },
                "uVar1": {
                    "converted_value": 1,
                    "processed_value": 1,
                    "result": 6,
                    "result1": 4,
                    "status": 4,
                    "status_code": 1,
                    "status_value": 1,
                    "temp1": 4,
                    "temp_var1": 3,
                    "updated_value": 1,
                    "val1": 1
                },
                "uVar2": {
                    "counter": 1,
                    "index": 13,
                    "index_uint": 1,
                    "result2": 2,
                    "temp": 2,
                    "temp2": 3,
                    "temp_value": 1,
                    "temp_var2": 3,
                    "val2": 1
                },
                "uVar3": {
                    "calculated_value": 1,
                    "new_parameter_value": 1,
                    "position": 1,
                    "result": 2,
                    "result2": 2,
                    "result3": 2,
                    "status_value": 1,
                    "temp": 3,
                    "temp1": 1,
                    "temp2": 2,
                    "temp3": 3,
                    "temp_result": 1,
                    "temp_var3": 3,
                    "val3": 1,
                    "wpos": 2
                },
                "uVar4": {
                    "calculated_value1": 1,
                    "converted_pos": 1,
                    "processed_value": 1,
                    "result": 1,
                    "result1": 3,
                    "result4": 1,
                    "temp1": 4,
                    "temp2": 1,
                    "temp3": 2,
                    "temp4": 3,
                    "temp_result1": 1,
                    "temp_value1": 1,
                    "temp_var1": 2,
                    "temp_var4": 3,
                    "value": 1,
                    "value1": 1
                },
                "uVar5": {
                    "calculated_value2": 1,
                    "converted_pos2": 1,
                    "processed_value": 1,
                    "processed_value2": 1,
                    "result2": 3,
                    "result5": 1,
                    "temp2": 4,
                    "temp3": 1,
                    "temp4": 2,
                    "temp5": 3,
                    "temp_result": 1,
                    "temp_result2": 1,
                    "temp_value2": 1,
                    "temp_var2": 2,
                    "temp_var5": 3,
                    "value2": 1
                }
            },
            "called": [
                "FUN_08008590",
                "FUN_08008e44",
                "FUN_08009054",
                "FUN_08008cd8",
                "FUN_08003826",
                "FUN_080036c6",
                "FUN_08008640",
                "FUN_08008cdc",
                "FUN_080082d0",
                "FUN_08008c30"
            ],
            "calling": [
                "FUN_08003a74"
            ],
            "code": "\nvoid print_status_info_08004940(void)\n\n{\n  undefined4 result;\n  uint index;\n  undefined4 temp3;\n  undefined8 temp1;\n  undefined8 temp2;\n  undefined4 status_array [6];\n  byte i;\n  \n  status_array[3] = DAT_20000eac;\n  status_array[4] = DAT_20000eb0;\n  status_array[5] = DAT_20000eb4;\n  switch(DAT_20000ea9) {\n  case 0:\n    FUN_080036c6(\"<Idle\");\n    break;\n  case 2:\n    FUN_080036c6(\"<Queue\");\n    break;\n  case 3:\n    FUN_080036c6(&DAT_0800bc70);\n    break;\n  case 4:\n    FUN_080036c6(\"<Hold\");\n    break;\n  case 5:\n    FUN_080036c6(\"<Home\");\n    break;\n  case 6:\n    FUN_080036c6(\"<Alarm\");\n    break;\n  case 7:\n    FUN_080036c6(\"<Check\");\n  }\n  FUN_080036c6(\",MPos:\");\n  for (i = 0; i < 3; i = i + 1) {\n    result = FUN_08008e44(status_array[i + 3]);\n    index = (uint)i;\n    result = FUN_08009054(result,(&DAT_20000ebc)[i]);\n    status_array[index] = result;\n    if ((DAT_20000ee4 & 1) != 0) {\n      temp1 = FUN_08008590(status_array[i]);\n      temp1 = FUN_08008640((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x57e16865,0x3fa42851);\n      index = (uint)i;\n      result = FUN_08008c30((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n      status_array[index] = result;\n    }\n    FUN_08003826(status_array[i]);\n    FUN_080036c6(&DAT_0800bbbc);\n  }\n  FUN_080036c6(\"WPos:\");\n  for (i = 0; i < 3; i = i + 1) {\n    if ((DAT_20000ee4 & 1) == 0) {\n      temp3 = status_array[i];\n      result = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (i + 8) * 4),\n                           *(undefined4 *)(&DAT_20000e74 + (i + 10) * 4));\n      index = (uint)i;\n      result = FUN_08008cd8(temp3,result);\n      status_array[index] = result;\n    }\n    else {\n      temp1 = FUN_08008590(status_array[i]);\n      result = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (i + 8) * 4),\n                           *(undefined4 *)(&DAT_20000e74 + (i + 10) * 4));\n      temp2 = FUN_08008590(result);\n      temp2 = FUN_08008640((int)temp2,(int)((ulonglong)temp2 >> 0x20),0x57e16865,0x3fa42851);\n      temp1 = FUN_080082d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),(int)temp2,\n                           (int)((ulonglong)temp2 >> 0x20));\n      index = (uint)i;\n      result = FUN_08008c30((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n      status_array[index] = result;\n    }\n    FUN_08003826(status_array[i]);\n    if (i < 2) {\n      FUN_080036c6(&DAT_0800bbbc);\n    }\n  }\n  FUN_080036c6(&DAT_0800bca8);\n  return;\n}\n\n",
            "current_name": "print_status_info_08004940",
            "entrypoint": "0x08004940",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004940": "print_status_info_08004940",
                "auStack_2c": "status_array",
                "local_11": "i",
                "uVar1": "result",
                "uVar2": "index",
                "uVar3": "temp3",
                "uVar4": "temp1",
                "uVar5": "temp2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004bc0": {
            "additional_data": {
                "FUN_08000374": {
                    "copy_data": 6,
                    "copy_data_from_source": 1,
                    "copy_data_to_address": 2,
                    "copy_data_to_memory": 1,
                    "copy_memory": 2,
                    "copy_to_buffer": 1,
                    "decode_data": 1,
                    "initialize_memory": 1,
                    "perform_operation": 1,
                    "process_data": 10,
                    "process_data_sub": 1,
                    "process_subfunction": 1,
                    "secondary_function": 1,
                    "sub_function": 1
                },
                "FUN_08004bc0": {
                    "byte_to_address_conversion": 1,
                    "calculate_checksum": 1,
                    "calculate_updated_address": 1,
                    "convert_byte_to_address": 4,
                    "convert_byte_to_int": 1,
                    "convert_byte_to_pointer": 1,
                    "decode_and_process_data": 4,
                    "decode_byte": 3,
                    "decode_data": 1,
                    "decompiled_function": 2,
                    "initialize_data": 1,
                    "initialize_memory": 1,
                    "process_byte": 3,
                    "process_byte_data": 1,
                    "process_data": 4,
                    "process_input": 1
                },
                "param_1": {
                    "byte_value": 2,
                    "data_address": 5,
                    "input_byte": 3,
                    "input_param1": 1,
                    "input_value": 1,
                    "operation_param1": 1,
                    "param_1": 1,
                    "parameter_1": 1,
                    "source": 3,
                    "source_address": 5,
                    "src_address": 3,
                    "start_address": 1,
                    "sub_param1": 1,
                    "subfunction_param1": 1,
                    "val": 1,
                    "value": 1
                },
                "param_1_param_2": {
                    "memory_block": 1
                },
                "param_2": {
                    "buffer": 1,
                    "data": 3,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "dest_address": 2,
                    "destination": 4,
                    "destination_address": 4,
                    "destination_buffer": 1,
                    "dst_address": 1,
                    "input": 1,
                    "input_array": 1,
                    "input_data": 2,
                    "input_param2": 1,
                    "input_value": 1,
                    "operation_param2": 1,
                    "param_2": 1,
                    "param_value": 1,
                    "parameter_2": 1,
                    "pointer": 1,
                    "sub_param2": 1,
                    "subfunction_param2": 1
                },
                "param_3": {
                    "array_size": 1,
                    "block_size": 1,
                    "buffer_length": 1,
                    "buffer_size": 2,
                    "data_length": 2,
                    "data_size": 3,
                    "input_param3": 1,
                    "length": 6,
                    "operation_param3": 1,
                    "param_3": 1,
                    "parameter_3": 1,
                    "size": 7,
                    "sub_param3": 1,
                    "subfunction_param3": 1
                }
            },
            "called": [
                "FUN_08000374"
            ],
            "calling": [
                "FUN_08004d2c",
                "FUN_08003b98"
            ],
            "code": "\nvoid decode_and_process_data_08004bc0(byte source_address,undefined4 destination_address)\n\n{\n  FUN_08000374((ushort)source_address * 0x101 + 0x300,destination_address,0x100);\n  return;\n}\n\n",
            "current_name": "decode_and_process_data_08004bc0",
            "entrypoint": "0x08004bc0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004bc0": "decode_and_process_data_08004bc0",
                "param_1": "source_address",
                "param_2": "destination_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004bf4": {
            "additional_data": {
                "FUN_08000374": {
                    "apply_transformation": 1,
                    "calculate_value": 1,
                    "call_subfunction": 1,
                    "call_subfunction_with_params": 1,
                    "compute_result": 1,
                    "copy_data": 4,
                    "copy_data_to_address": 1,
                    "handle_data_processing": 1,
                    "initialize_data": 1,
                    "perform_action": 1,
                    "perform_computation": 1,
                    "perform_operation": 5,
                    "perform_subfunction": 1,
                    "process_data": 10,
                    "write_memory": 1
                },
                "FUN_08004bf4": {
                    "calculate_address_and_call_function": 1,
                    "calculate_adjusted_offset": 1,
                    "calculate_checksum": 1,
                    "calculate_final_value": 1,
                    "calculate_memory_address": 1,
                    "calculate_new_address": 2,
                    "calculate_offset": 15,
                    "calculate_offset_and_call_function": 1,
                    "calculate_offset_and_call_subfunction": 1,
                    "calculate_offset_and_pass": 1,
                    "calculate_storage_address": 1,
                    "calculate_value": 3,
                    "multiply_and_add_offset": 1
                },
                "param_1": {
                    "address": 2,
                    "computation_param_1": 1,
                    "data": 1,
                    "data_address": 1,
                    "data_length": 1,
                    "data_offset": 1,
                    "data_param": 1,
                    "input_byte": 5,
                    "input_param": 1,
                    "input_value": 2,
                    "int_param": 1,
                    "offset": 6,
                    "offset_value": 2,
                    "operation_param_1": 1,
                    "param_1": 1,
                    "source_address": 3,
                    "value": 1
                },
                "param_2": {
                    "buffer": 7,
                    "buffer_param": 1,
                    "char_param": 1,
                    "computation_param_2": 1,
                    "data": 5,
                    "data_ptr": 2,
                    "destination_address": 2,
                    "destination_ptr": 1,
                    "input_data": 3,
                    "memory_address": 1,
                    "operation_param_2": 1,
                    "output_buffer": 1,
                    "output_param": 1,
                    "param_2": 2,
                    "param_value": 1,
                    "string_value": 1
                },
                "param_3": {
                    "buffer_size": 1,
                    "computation_param_3": 1,
                    "data_length": 3,
                    "data_size": 2,
                    "length": 11,
                    "operation_param_3": 1,
                    "param_3": 2,
                    "size": 5,
                    "size_param": 1,
                    "subfunction_param": 2
                }
            },
            "called": [
                "FUN_08000374"
            ],
            "calling": [
                "FUN_080005b4",
                "FUN_08004d7c"
            ],
            "code": "\nvoid calculate_offset_and_pass_08004bf4(byte offset,undefined4 buffer)\n\n{\n  FUN_08000374((ushort)offset * 0xd + 0x200,buffer,0xc);\n  return;\n}\n\n",
            "current_name": "calculate_offset_and_pass_08004bf4",
            "entrypoint": "0x08004bf4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004bf4": "calculate_offset_and_pass_08004bf4",
                "param_1": "offset",
                "param_2": "buffer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c2a": {
            "additional_data": {
                "FUN_08000340": {
                    "clear_data": 1,
                    "initialize_data": 1,
                    "perform_action": 1,
                    "perform_initialization": 1,
                    "reset_value": 1,
                    "set_configuration": 1,
                    "set_initial_value": 1,
                    "set_initial_values": 5,
                    "set_mode": 1,
                    "set_parameters": 4,
                    "set_params": 1,
                    "set_value_of_data": 1,
                    "set_zero": 1
                },
                "FUN_08000374": {
                    "copy_data": 6,
                    "copy_data_to_buffer": 3,
                    "copy_data_to_memory": 2,
                    "initialize_data": 2,
                    "initialize_memory": 1,
                    "load_data_into_memory": 1,
                    "set_data": 3,
                    "set_memory_block": 1,
                    "write_to_memory": 1
                },
                "FUN_080004c2a": {
                    "initialize": 1
                },
                "FUN_08004c2a": {
                    "execute_initial_setup": 2,
                    "execute_main_function": 1,
                    "initialize": 5,
                    "initialize_application": 7,
                    "initialize_components": 3,
                    "initialize_data": 3,
                    "initialize_process": 2,
                    "initialize_program": 1,
                    "initialize_system": 5,
                    "initiate_process": 1
                },
                "param_1": {
                    "action_type": 1,
                    "arg1": 1,
                    "component_id": 1,
                    "count": 2,
                    "flag": 1,
                    "flags": 1,
                    "initial_value": 1,
                    "mode_value": 1,
                    "option": 2,
                    "param1": 1,
                    "process_id": 1,
                    "some_value": 1,
                    "start_value": 1,
                    "value": 4,
                    "value1": 2
                },
                "param_2": {
                    "arg2": 1,
                    "buffer": 1,
                    "component_data": 1,
                    "data": 11,
                    "data_buffer": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "param2": 1,
                    "undefined_param": 1,
                    "unknown": 1
                },
                "param_3": {
                    "arg3": 1,
                    "buffer_size": 1,
                    "data_length": 5,
                    "data_size": 2,
                    "length": 5,
                    "param3": 1,
                    "size": 6
                }
            },
            "called": [
                "FUN_08000374",
                "FUN_08000340"
            ],
            "calling": [
                "FUN_08004e30",
                "FUN_08004c48"
            ],
            "code": "\nvoid initialize_application_08004c2a(void)\n\n{\n  FUN_08000340(0,5);\n  FUN_08000374(1,&DAT_20000ebc,0x40);\n  return;\n}\n\n",
            "current_name": "initialize_application_08004c2a",
            "entrypoint": "0x08004c2a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c2a": "initialize_application_08004c2a"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004c48": {
            "additional_data": {
                "DAT_20000ebc": {
                    "constant1": 2,
                    "data1": 2,
                    "data_value1": 1,
                    "magic_number1": 1,
                    "var1": 1,
                    "variable1": 1
                },
                "DAT_20000ec0": {
                    "constant2": 2,
                    "data2": 2,
                    "data_value2": 1,
                    "magic_number2": 1,
                    "var2": 1,
                    "variable2": 1
                },
                "DAT_20000ec4": {
                    "constant3": 2,
                    "data3": 2,
                    "data_value3": 1,
                    "magic_number3": 1,
                    "var3": 1,
                    "variable3": 1
                },
                "DAT_20000ec9": {
                    "constant4": 2,
                    "constant_value": 1,
                    "count": 1,
                    "counter": 1,
                    "data_value4": 1,
                    "size": 1,
                    "var4": 1
                },
                "DAT_20000ecc": {
                    "constant5": 2,
                    "data_value5": 1,
                    "floating_value1": 1,
                    "pointer1": 1,
                    "value1": 2,
                    "var5": 1
                },
                "DAT_20000ed0": {
                    "constant6": 2,
                    "data_value6": 1,
                    "floating_value2": 1,
                    "pointer2": 1,
                    "value2": 2,
                    "var6": 1
                },
                "DAT_20000ed4": {
                    "constant9": 1,
                    "counter": 1,
                    "data_value9": 1,
                    "integer_value": 1,
                    "var9": 1
                },
                "DAT_20000ed6": {
                    "constant10": 2,
                    "data_value10": 1,
                    "hex_value": 1,
                    "value1": 1,
                    "value5": 2,
                    "var10": 1
                },
                "DAT_20000ed8": {
                    "constant1": 1,
                    "constant8": 2,
                    "data_value8": 1,
                    "floating_value4": 1,
                    "value4": 2,
                    "var8": 1
                },
                "DAT_20000edc": {
                    "constant7": 2,
                    "data_value7": 1,
                    "floating_value3": 1,
                    "pointer3": 1,
                    "value3": 2,
                    "var7": 1
                },
                "DAT_20000edd": {
                    "constant9": 1
                },
                "DAT_20000ee0": {
                    "constant11": 2,
                    "data_value11": 1,
                    "floating_value5": 1,
                    "value2": 1,
                    "value6": 2,
                    "var11": 1
                },
                "DAT_20000ee4": {
                    "const_value1": 1,
                    "constant1": 2,
                    "constant12": 2,
                    "constant2": 1,
                    "constant_value2": 1,
                    "var12": 1
                },
                "DAT_20000ee6": {
                    "const_value2": 1,
                    "constant13": 2,
                    "constant2": 1,
                    "constant3": 1,
                    "integer_value2": 1,
                    "var13": 1
                },
                "DAT_20000ee8": {
                    "const_value3": 1,
                    "constant14": 2,
                    "constant3": 2,
                    "floating_value6": 1,
                    "value3": 1,
                    "var14": 1
                },
                "DAT_20000eea": {
                    "constant2": 1
                },
                "DAT_20000eec": {
                    "const_value4": 1,
                    "constant15": 2,
                    "constant4": 2,
                    "floating_value7": 1,
                    "pointer4": 1,
                    "var15": 1
                },
                "DAT_20000ef0": {
                    "const_value5": 1,
                    "constant16": 2,
                    "constant5": 2,
                    "constant_value3": 1,
                    "number": 1,
                    "var16": 1
                },
                "DAT_20000ef4": {
                    "const_value6": 1,
                    "constant17": 2,
                    "constant6": 2,
                    "floating_value8": 1,
                    "value4": 1,
                    "var17": 1
                },
                "DAT_20000ef8": {
                    "const_value7": 1,
                    "constant18": 2,
                    "constant4": 1,
                    "constant7": 2,
                    "integer_value3": 1,
                    "var18": 1
                },
                "DAT_20000ef9": {
                    "const_value8": 1,
                    "constant19": 2,
                    "constant5": 1,
                    "constant8": 2,
                    "integer_value4": 1,
                    "var19": 1
                },
                "DAT_20000efa": {
                    "const_value9": 1,
                    "constant20": 2,
                    "constant6": 1,
                    "constant9": 2,
                    "integer_value5": 1,
                    "var20": 1
                },
                "FUN_08004c2a": {
                    "call_sub_function": 1,
                    "do_something": 1,
                    "execute_additional_function": 1,
                    "execute_additional_logic": 1,
                    "execute_process": 1,
                    "execute_some_action": 1,
                    "execute_sub_function": 1,
                    "execute_sub_functions": 1,
                    "execute_subfunction": 1,
                    "initialize_subsystem": 1,
                    "perform_action": 1,
                    "perform_calculations": 2,
                    "perform_computation": 1,
                    "perform_operation": 6,
                    "perform_operations": 1,
                    "perform_some_action": 1,
                    "perform_task": 2,
                    "process_data": 5
                },
                "FUN_08004c48": {
                    "initialize_data": 25,
                    "initialize_parameters": 2,
                    "initialize_params": 1,
                    "initialize_variables": 3
                },
                "param_1": {
                    "flag": 6,
                    "input": 4,
                    "input_char": 4,
                    "input_flag": 6,
                    "input_param": 5,
                    "input_parameter": 1,
                    "input_value": 2,
                    "is_param_valid": 1,
                    "param": 1,
                    "status": 1
                }
            },
            "called": [
                "FUN_08004c2a"
            ],
            "calling": [
                "FUN_08004dd2",
                "FUN_080051b4"
            ],
            "code": "\nvoid initialize_data_08004c48(char input_flag)\n\n{\n  if (input_flag != '\\0') {\n    DAT_20000ebc = 0x431d7af6;\n    DAT_20000ec0 = 0x431d7af6;\n    DAT_20000ec4 = 0x431d7af6;\n    DAT_20000ec9 = 10;\n    DAT_20000ecc = 0x437a0000;\n    DAT_20000ed0 = 0x43fa0000;\n    DAT_20000edc = 0x470ca000;\n    DAT_20000ed8 = 0x3dcccccd;\n    DAT_20000ed4 = 0;\n    DAT_20000ed6 = 0xa80;\n    DAT_20000ee0 = 0x3d4ccccd;\n  }\n  DAT_20000ee4 = 0x12;\n  DAT_20000ee6 = 0;\n  DAT_20000ee8 = 0x41c80000;\n  DAT_20000eec = 0x437a0000;\n  DAT_20000ef0 = 100;\n  DAT_20000ef4 = 0x3f800000;\n  DAT_20000ef8 = 0x19;\n  DAT_20000ef9 = 3;\n  DAT_20000efa = 0x19;\n  FUN_08004c2a();\n  return;\n}\n\n",
            "current_name": "initialize_data_08004c48",
            "entrypoint": "0x08004c48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004c48": "initialize_data_08004c48",
                "param_1": "input_flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d2c": {
            "additional_data": {
                "FUN_080003ec": {
                    "copy_bytes": 1,
                    "copy_data": 5,
                    "copy_data_and_calculate": 1,
                    "copy_into_buffer": 1,
                    "copy_memory": 1,
                    "copy_to_buffer": 1,
                    "initialize_data": 1,
                    "read_data_function": 1
                },
                "FUN_080004ec": {
                    "initialize_buffer": 1
                },
                "FUN_08004bc0": {
                    "clear_buffer_and_call": 1,
                    "handle_error": 1,
                    "initialize_buffer": 1,
                    "initialize_memory_block": 1,
                    "process_data": 3,
                    "reset_data": 1,
                    "set_buffer_value": 1,
                    "set_defaults_and_reverse": 1,
                    "set_zero_and_reverse": 1
                },
                "FUN_08004d2c": {
                    "check_and_execute_function": 2,
                    "check_and_initialize": 2,
                    "check_and_initialize_buffer": 3,
                    "check_and_initialize_data": 2,
                    "check_and_initialize_memory": 1,
                    "check_and_modify_data": 1,
                    "check_and_process_data": 5,
                    "check_and_update_buffer": 1,
                    "check_if_string_is_valid": 1,
                    "check_memory_access": 1,
                    "reverse_byte": 1,
                    "reverse_check": 1,
                    "reverse_code": 1,
                    "validate_and_execute_function": 1,
                    "validate_and_initialize": 1,
                    "validate_and_process_data": 1,
                    "validate_and_reverse": 1,
                    "validate_data": 1,
                    "verify_checksum": 1
                },
                "FUn_08004bc0": {
                    "process_data_function": 1
                },
                "iVar1": {
                    "copy_result": 1,
                    "result": 27,
                    "return_value": 1
                },
                "param_1": {
                    "byte": 1,
                    "byte_param": 1,
                    "byte_value": 8,
                    "character": 1,
                    "checksum_byte": 1,
                    "data": 1,
                    "destination_buffer": 1,
                    "entry_byte": 1,
                    "input_byte": 14,
                    "source": 2
                },
                "param_2": {
                    "buffer": 7,
                    "buffer_ptr": 1,
                    "data_array": 2,
                    "data_buffer": 2,
                    "data_pointer": 2,
                    "data_ptr": 2,
                    "destination": 2,
                    "dst_ptr": 1,
                    "memory_pointer": 1,
                    "output_array": 1,
                    "output_buffer": 4,
                    "output_data": 3,
                    "source_buffer": 1,
                    "status_flag": 1,
                    "undefined_param": 1
                },
                "param_3": {
                    "buffer_size": 1,
                    "length": 2,
                    "num_bytes": 1,
                    "size": 3
                }
            },
            "called": [
                "FUN_08004bc0",
                "FUN_080003ec"
            ],
            "calling": [
                "FUN_080039bc",
                "FUN_08003b98"
            ],
            "code": "\nbool check_and_initialize_memory_08004d2c(byte input_byte,undefined *buffer)\n\n{\n  int result;\n  \n  result = FUN_080003ec(buffer,(ushort)input_byte * 0x101 + 0x300,0x100);\n  if (result == 0) {\n    *buffer = 0;\n    FUN_08004bc0(input_byte,buffer);\n  }\n  return result != 0;\n}\n\n",
            "current_name": "check_and_initialize_memory_08004d2c",
            "entrypoint": "0x08004d2c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d2c": "check_and_initialize_memory_08004d2c",
                "iVar1": "result",
                "param_1": "input_byte",
                "param_2": "buffer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d7c": {
            "additional_data": {
                "0x200": {
                    "offset": 2
                },
                "0xc": {
                    "data_size": 2,
                    "length": 3,
                    "size": 1
                },
                "0xd": {
                    "multiplier": 2
                },
                "FUNG_080003ec": {
                    "read_data_from_memory": 1
                },
                "FUN_080003ec": {
                    "check_data": 2,
                    "check_data_validity": 1,
                    "check_memory": 2,
                    "check_memory_contents": 1,
                    "check_memory_range": 2,
                    "check_memory_value": 1,
                    "check_range": 1,
                    "execute_function": 1,
                    "fetch_data_from_memory": 1,
                    "is_valid_range": 1,
                    "perform_action": 1,
                    "perform_operation": 1,
                    "validate_data": 4,
                    "verify_data": 3
                },
                "FUN_08004bf4": {
                    "execute_action": 1,
                    "execute_function": 1,
                    "execute_operation": 2,
                    "process_command": 2,
                    "process_data": 9,
                    "process_input": 3,
                    "process_input_byte": 2,
                    "process_parameter": 1,
                    "rearrange_bytes": 1,
                    "update_function": 1
                },
                "FUN_08004d7c": {
                    "check_and_execute": 2,
                    "check_and_execute_action": 1,
                    "check_and_execute_command": 1,
                    "check_and_execute_function": 3,
                    "check_and_execute_operation": 1,
                    "check_and_handle_error": 1,
                    "check_and_initialize": 1,
                    "check_and_process_data": 12,
                    "check_function": 1,
                    "is_parameter_valid": 1,
                    "validate_and_process_data": 2,
                    "validate_and_process_input": 1,
                    "verify_and_execute_command": 1,
                    "verify_and_execute_function": 1,
                    "verify_and_initialize": 1,
                    "verify_condition": 1
                },
                "FUN_0800b430": {
                    "clear_data": 2,
                    "clear_data_buffer": 1,
                    "clear_memory": 2,
                    "clear_memory_range": 1,
                    "initialize_buffer": 1,
                    "initialize_data": 2,
                    "initialize_memory": 3,
                    "reset_data": 6,
                    "reset_data_segment": 1,
                    "reset_memory": 3,
                    "zero_memory": 1
                },
                "FUn_080004ec": {
                    "validate_data": 1
                },
                "iVar1": {
                    "result": 28,
                    "return_value": 3
                },
                "param_1": {
                    "byte_data": 1,
                    "byte_value": 7,
                    "command_byte": 2,
                    "data": 1,
                    "data_array": 1,
                    "data_byte": 1,
                    "data_ptr": 1,
                    "input_byte": 17
                },
                "param_2": {
                    "address": 1,
                    "data": 1,
                    "data_buffer": 2,
                    "data_pointer": 5,
                    "data_ptr": 3,
                    "function_parameter": 1,
                    "initial_value": 1,
                    "input_data": 4,
                    "input_param": 1,
                    "input_value": 1,
                    "param": 4,
                    "param_array": 1,
                    "param_value": 1,
                    "pointer": 1,
                    "ptr": 1,
                    "ptr_data": 1,
                    "value": 2
                },
                "param_3": {
                    "buffer_size": 1,
                    "byte_count": 1,
                    "data_length": 1,
                    "data_size": 1,
                    "length": 2,
                    "size": 1,
                    "start_offset": 1
                },
                "ushort": {
                    "ushort_value": 1
                }
            },
            "called": [
                "FUN_08004bf4",
                "FUN_0800b430",
                "FUN_080003ec"
            ],
            "calling": [
                "FUN_080005b4",
                "FUN_080051b4",
                "FUN_080004ac",
                "FUN_080044e8"
            ],
            "code": "\nbool check_and_process_data_08004d7c(byte input_byte,undefined4 data_pointer)\n\n{\n  int result;\n  \n  result = FUN_080003ec(data_pointer,(ushort_value)input_byte * 0xd + 0x200,0xc);\n  if (result == 0) {\n    FUN_0800b430(data_pointer,0,0xc);\n    FUN_08004bf4(input_byte,data_pointer);\n  }\n  return result != 0;\n}\n\n",
            "current_name": "check_and_process_data_08004d7c",
            "entrypoint": "0x08004d7c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d7c": "check_and_process_data_08004d7c",
                "iVar1": "result",
                "param_1": "input_byte",
                "param_2": "data_pointer",
                "ushort": "ushort_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004dd2": {
            "additional_data": {
                "0x28": {
                    "block_size_2": 1
                },
                "0x40": {
                    "block_size_1": 1
                },
                "FUN_08000310": {
                    "check_data": 1,
                    "get_buffer_status": 1,
                    "get_byte_value": 2,
                    "get_data": 3,
                    "get_data_type": 3,
                    "get_data_value": 1,
                    "get_initial_value": 3,
                    "get_input": 3,
                    "get_input_data": 1,
                    "get_input_value": 2,
                    "get_resource_status": 1,
                    "get_response": 1,
                    "get_status": 1
                },
                "FUN_080003ec": {
                    "allocate_memory": 17,
                    "allocate_resource": 1,
                    "extract_data_block": 1,
                    "process_data": 1,
                    "read_data": 1,
                    "write_data": 1
                },
                "FUN_080004c48": {
                    "log_output": 1
                },
                "FUN_080004dd2": {
                    "process_data": 1
                },
                "FUN_08003ec": {
                    "allocate_memory": 1
                },
                "FUN_08004c48": {
                    "do_something": 1,
                    "initialize": 1,
                    "initialize_data": 1,
                    "perform_action": 3,
                    "perform_cleanup": 1,
                    "perform_initial_operation": 1,
                    "perform_operation": 2,
                    "process_data": 3,
                    "process_output": 1,
                    "release_resource": 1,
                    "reset_buffer": 1,
                    "reset_data": 2,
                    "reverse_bits": 2,
                    "reverse_data": 1,
                    "set_flag": 1
                },
                "FUN_08004dd2": {
                    "check_and_initialize_buffer": 1,
                    "check_and_initialize_data": 1,
                    "check_and_initialize_memory": 1,
                    "check_and_process_data": 4,
                    "check_and_process_input": 1,
                    "check_and_update_data": 1,
                    "check_resource_availability": 1,
                    "extract_and_process_data": 3,
                    "extract_data": 1,
                    "initialize": 1,
                    "initialize_and_process_data": 1,
                    "initialize_data": 2,
                    "process_binary": 1,
                    "process_data": 10,
                    "verify_and_initialize_data": 1
                },
                "bVar1": {
                    "byte_value": 1,
                    "data_type": 3,
                    "data_value": 1,
                    "initial_value": 2,
                    "result": 9
                },
                "iVar2": {
                    "allocation_result": 5,
                    "read_result": 1,
                    "result_code": 1,
                    "return_value": 1,
                    "status": 8
                },
                "param_1": {
                    "data_input": 1,
                    "input_value": 1
                }
            },
            "called": [
                "FUN_08000310",
                "FUN_08004c48",
                "FUN_080003ec"
            ],
            "calling": [
                "FUN_080051b4"
            ],
            "code": "\nundefined4 check_and_process_data_08004dd2(void)\n\n{\n  byte result;\n  int status;\n  \n  result = FUN_08000310(0);\n  if (result == 5) {\n    status = FUN_080003ec(&DAT_20000ebc,1,0x40);\n    if (status == 0) {\n      return 0;\n    }\n  }\n  else {\n    if (4 < result) {\n      return 0;\n    }\n    status = FUN_080003ec(&DAT_20000ebc,1,0x28);\n    if (status == 0) {\n      return 0;\n    }\n    FUN_08004c48(0);\n  }\n  return 1;\n}\n\n",
            "current_name": "check_and_process_data_08004dd2",
            "entrypoint": "0x08004dd2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004dd2": "check_and_process_data_08004dd2",
                "bVar1": "result",
                "iVar2": "status"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004e30": {
            "additional_data": {
                "DAT_20000ebc": {
                    "config_array": 2,
                    "config_array012": 1,
                    "data0_to2": 1,
                    "data_arr": 1,
                    "data_buffer": 1,
                    "param1_data": 1,
                    "parameter_array": 1
                },
                "DAT_20000ec9": {
                    "calc_result1": 1,
                    "calculated_value": 1,
                    "config_value1": 1,
                    "config_value3": 1,
                    "configured_data_case3": 1,
                    "data1": 1,
                    "data3": 1,
                    "hash_result1": 1,
                    "result_variable1": 1,
                    "validated_data1": 1
                },
                "DAT_20000ecc": {
                    "assigned_value": 1,
                    "config_value2": 1,
                    "config_value4": 2,
                    "data2": 1,
                    "data4": 1,
                    "hash_result2": 1,
                    "result_variable2": 1,
                    "validated_data2": 1,
                    "value1": 1
                },
                "DAT_20000ed0": {
                    "assigned_value2": 1,
                    "config_value3": 1,
                    "config_value5": 2,
                    "data3": 1,
                    "data5": 1,
                    "hash_result3": 1,
                    "result_variable3": 1,
                    "validated_data3": 1,
                    "value2": 1
                },
                "DAT_20000ed4": {
                    "calc_result2": 1,
                    "calculated_value2": 1,
                    "config_value4": 1,
                    "config_value6": 1,
                    "configured_data_case6": 1,
                    "data4": 1,
                    "data6": 1,
                    "result_variable4": 1,
                    "reverse_hash_result": 1,
                    "validated_data4": 1
                },
                "DAT_20000ed6": {
                    "calc_result8": 1,
                    "calculated_value8": 1,
                    "config_hash_result3": 1,
                    "config_value15": 1,
                    "config_value23": 1,
                    "configured_data_case23": 1,
                    "data17": 1,
                    "data19": 1,
                    "result_variable13": 1,
                    "validated_data10": 1
                },
                "DAT_20000ed8": {
                    "assigned_value5": 1,
                    "config_value10": 2,
                    "config_value2": 1,
                    "config_value7": 1,
                    "data10": 1,
                    "data8": 1,
                    "modified_result3": 1,
                    "other_config_value": 1,
                    "updated_data": 1
                },
                "DAT_20000edc": {
                    "assigned_value3": 1,
                    "calc_value1": 1,
                    "configured_data_case8": 1,
                    "converted_data": 1,
                    "data6": 1,
                    "data8": 1,
                    "encrypted_config_result": 1,
                    "masked_config_value8": 1,
                    "modified_result1": 1,
                    "updated_value1": 1
                },
                "DAT_20000ee0": {
                    "assigned_value4": 1,
                    "config_flag": 1,
                    "config_value6": 1,
                    "config_value9": 2,
                    "data7": 1,
                    "data9": 1,
                    "masked_data": 1,
                    "modified_result2": 1,
                    "parsed_config_value": 1
                },
                "DAT_20000ee4": {
                    "config_status": 1,
                    "config_validity": 1,
                    "config_value_mask": 1,
                    "configuration_flags": 1,
                    "data11": 1,
                    "data_flag": 1,
                    "flag": 1,
                    "flags": 1,
                    "result_flag": 1
                },
                "DAT_20000ee6": {
                    "calc_result6": 1,
                    "calculated_value6": 1,
                    "config_hash_result": 1,
                    "config_value10": 1,
                    "config_value18": 1,
                    "configured_data_case18": 1,
                    "data12": 1,
                    "data14": 1,
                    "result_variable8": 1,
                    "validated_data8": 1
                },
                "DAT_20000ee8": {
                    "assigned_value6": 1,
                    "config_value11": 1,
                    "config_value19": 2,
                    "config_value2": 1,
                    "config_value3": 1,
                    "data13": 1,
                    "data15": 1,
                    "result_variable9": 1,
                    "updated_data2": 1
                },
                "DAT_20000eec": {
                    "assigned_value7": 1,
                    "config_value12": 1,
                    "config_value20": 2,
                    "config_value3": 1,
                    "config_value4": 1,
                    "data14": 1,
                    "data16": 1,
                    "result_variable10": 1,
                    "updated_data3": 1
                },
                "DAT_20000ef0": {
                    "calc_result7": 1,
                    "calculated_value7": 1,
                    "config_hash_result2": 1,
                    "config_value13": 1,
                    "config_value21": 1,
                    "configured_data_case21": 1,
                    "data15": 1,
                    "data17": 1,
                    "result_variable11": 1,
                    "validated_data9": 1
                },
                "DAT_20000ef4": {
                    "assigned_value8": 1,
                    "config_value14": 1,
                    "config_value22": 2,
                    "config_value4": 1,
                    "config_value5": 1,
                    "data16": 1,
                    "data18": 1,
                    "result_variable12": 1,
                    "updated_data4": 1
                },
                "DAT_20000ef8": {
                    "calc_result3": 1,
                    "calculated_value3": 1,
                    "config_value5": 1,
                    "config_value7": 1,
                    "configured_data_case7": 1,
                    "data5": 1,
                    "data7": 1,
                    "result_variable5": 1,
                    "reverse_hash_result2": 1,
                    "validated_data5": 1
                },
                "DAT_20000ef9": {
                    "calc_result5": 1,
                    "calculated_value5": 1,
                    "config_value12": 1,
                    "config_value9": 1,
                    "configured_data_case12": 1,
                    "data10": 1,
                    "data12": 1,
                    "other_hash_result2": 1,
                    "result_variable7": 1,
                    "validated_data7": 1
                },
                "DAT_20000efa": {
                    "calc_result4": 1,
                    "calculated_value4": 1,
                    "config_value11": 1,
                    "config_value8": 1,
                    "configured_data_case11": 1,
                    "data11": 1,
                    "data9": 1,
                    "other_hash_result": 1,
                    "result_variable6": 1,
                    "validated_data6": 1
                },
                "FUN_0800192c": {
                    "perform_action": 3,
                    "perform_action16": 1,
                    "perform_action_type16": 1,
                    "perform_additional_setup": 1,
                    "perform_task": 2,
                    "update_data2": 1,
                    "update_flag": 1
                },
                "FUN_08004c2a": {
                    "finalize_operation": 1,
                    "update_complete": 1,
                    "update_ui": 1
                },
                "FUN_08004e30": {
                    "configure_parameters": 1,
                    "handle_operation": 1,
                    "initialize_component": 1,
                    "initialize_data": 1,
                    "modify_data": 1,
                    "process_command": 1,
                    "process_configuration": 1,
                    "process_param": 1,
                    "set_configuration": 1,
                    "update_config": 6,
                    "update_configuration": 6,
                    "update_data": 5,
                    "update_parameter": 1,
                    "update_parameter_value": 1,
                    "update_settings": 2,
                    "update_values": 1
                },
                "FUN_08008590": {
                    "calculate_checksum": 1,
                    "calculate_something_a": 1,
                    "calculate_value1": 1,
                    "convert_value": 1,
                    "process_config_value": 1,
                    "process_data": 2,
                    "process_value1": 1
                },
                "FUN_08008bf0": {
                    "calculate_value": 1,
                    "compute_result": 1,
                    "convert_data": 1,
                    "perform_calculation": 1
                },
                "FUN_08008eec": {
                    "calculate_encrypted_config": 1,
                    "calculate_something_d": 1,
                    "compute_value_with_mask": 1,
                    "get_config_value8": 1,
                    "modify_result": 1,
                    "perform_operation": 1,
                    "reverse_data3": 1,
                    "update_data6": 1,
                    "update_value_with_mask1": 1
                },
                "FUN_08009214": {
                    "check_config_result": 1,
                    "check_data2": 2,
                    "check_flag": 1,
                    "check_something": 1,
                    "check_value": 1,
                    "check_value1": 1,
                    "check_value_is_zero": 1,
                    "is_config_valid": 1,
                    "perform_action_type1": 1
                },
                "FUN_08009228": {
                    "check_data": 1,
                    "check_operation3": 1,
                    "initialize_flag": 1,
                    "is_valid_value": 1,
                    "perform_action_type3": 1,
                    "set_config_case3": 1,
                    "set_config_type3": 1,
                    "validate_data": 1
                },
                "FUN_0800923c": {
                    "check_data": 1,
                    "check_operation0_to2": 1,
                    "check_value": 2,
                    "is_invalid_value": 1,
                    "perform_action_type0": 1,
                    "set_config_case012": 1,
                    "set_config_type0_to2": 1,
                    "set_config_value": 1,
                    "set_config_value1": 1
                },
                "FUN_08009654": {
                    "calculate_hash": 1,
                    "calculate_something_b": 1,
                    "calculate_value2": 1,
                    "compute_config_value": 1,
                    "perform_calculation": 1,
                    "process_value2": 1,
                    "rearrange_data": 1,
                    "reverse_data": 1
                },
                "FUN_08009798": {
                    "calculate_reverse_hash": 1,
                    "calculate_something_c": 1,
                    "calculate_value3": 1,
                    "reverse_data": 1,
                    "reverse_data5": 1,
                    "update_data4": 1
                },
                "iVar2": {
                    "error": 3,
                    "error_code": 8,
                    "result": 10,
                    "return_value": 5,
                    "status": 5
                },
                "param_1": {
                    "command": 4,
                    "component_type": 1,
                    "config_index": 1,
                    "config_option": 3,
                    "config_type": 8,
                    "data_index": 2,
                    "operation_code": 1,
                    "option": 4,
                    "param_type": 1,
                    "parameter_type": 2,
                    "setting_type": 2,
                    "type": 2
                },
                "param_2": {
                    "component_value": 1,
                    "config_value": 12,
                    "data_value": 2,
                    "param_value": 1,
                    "parameter": 1,
                    "parameter_value": 2,
                    "setting_value": 2,
                    "value": 10
                },
                "return": {
                    "return_value": 1
                },
                "uVar1": {
                    "error_code": 4,
                    "result": 15,
                    "result2": 1,
                    "return_value": 6,
                    "status": 1
                },
                "uVar3": {
                    "config_result": 1,
                    "converted_value": 2,
                    "data": 1,
                    "modified_value": 1,
                    "new_value": 1,
                    "processed_data": 1,
                    "processed_value": 6,
                    "result": 5,
                    "temp": 1,
                    "temp_result": 1,
                    "temp_value": 6,
                    "temp_variable": 1,
                    "transformed_value": 3,
                    "updated_value": 1
                }
            },
            "called": [
                "FUN_08008590",
                "FUN_0800923c",
                "FUN_08009654",
                "FUN_08009228",
                "FUN_0800192c",
                "FUN_08008bf0",
                "FUN_08009798",
                "FUN_08004c2a",
                "FUN_08009214",
                "FUN_08008eec"
            ],
            "calling": [
                "FUN_08003b98"
            ],
            "code": "\nundefined4 update_parameter_value_08004e30(int config_type,uint config_value)\n\n{\n  undefined4 result;\n  int result;\n  undefined8 temp_value;\n  \n  switch(config_type) {\n  case 0:\n  case 1:\n  case 2:\n    result = FUN_0800923c(config_value,0);\n    if (result != 0) {\n      return_value 8;\n    }\n    (&DAT_20000ebc)[config_type] = config_value;\n    break;\n  case 3:\n    result = FUN_08009228(config_value,0x40400000);\n    if (result != 0) {\n      return_value 9;\n    }\n    temp_value = FUN_08008590(config_value);\n    temp_value = FUN_08009654((int)temp_value,(int)((ulonglong)temp_value >> 0x20));\n    DAT_20000ec9 = FUN_08008bf0((int)temp_value,(int)((ulonglong)temp_value >> 0x20));\n    break;\n  case 4:\n    DAT_20000ecc = config_value;\n    break;\n  case 5:\n    DAT_20000ed0 = config_value;\n    break;\n  case 6:\n    temp_value = FUN_08008590(config_value);\n    temp_value = FUN_08009798((int)temp_value,(int)((ulonglong)temp_value >> 0x20));\n    DAT_20000ed4 = FUN_08008bf0((int)temp_value,(int)((ulonglong)temp_value >> 0x20));\n    break;\n  case 7:\n    temp_value = FUN_08008590(config_value);\n    temp_value = FUN_08009654((int)temp_value,(int)((ulonglong)temp_value >> 0x20));\n    DAT_20000ef8 = FUN_08008bf0((int)temp_value,(int)((ulonglong)temp_value >> 0x20));\n    break;\n  case 8:\n    result = FUN_08008eec(config_value,0x42700000);\n    DAT_20000edc = FUN_08008eec(result,0x42700000);\n    break;\n  case 9:\n    DAT_20000ee0 = config_value & 0x7fffffff;\n    break;\n  case 10:\n    DAT_20000ed8 = config_value;\n    break;\n  case 0xb:\n    temp_value = FUN_08008590(config_value);\n    temp_value = FUN_08009654((int)temp_value,(int)((ulonglong)temp_value >> 0x20));\n    DAT_20000efa = FUN_08008bf0((int)temp_value,(int)((ulonglong)temp_value >> 0x20));\n    break;\n  case 0xc:\n    temp_value = FUN_08008590(config_value);\n    temp_value = FUN_08009654((int)temp_value,(int)((ulonglong)temp_value >> 0x20));\n    DAT_20000ef9 = FUN_08008bf0((int)temp_value,(int)((ulonglong)temp_value >> 0x20));\n    break;\n  case 0xd:\n    result = FUN_08009214(config_value,0);\n    if (result == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 1;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfe;\n    }\n    break;\n  case 0xe:\n    result = FUN_08009214(config_value,0);\n    if (result == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 2;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfd;\n    }\n    break;\n  case 0xf:\n    result = FUN_08009214(config_value,0);\n    if (result == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 4;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfb;\n    }\n    break;\n  case 0x10:\n    result = FUN_08009214(config_value,0);\n    if (result == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 8;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xf7;\n    }\n    FUN_0800192c();\n    break;\n  case 0x11:\n    result = FUN_08009214(config_value,0);\n    if (result == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 0x10;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xef;\n    }\n    break;\n  case 0x12:\n    temp_value = FUN_08008590(config_value);\n    temp_value = FUN_08009798((int)temp_value,(int)((ulonglong)temp_value >> 0x20));\n    DAT_20000ee6 = FUN_08008bf0((int)temp_value,(int)((ulonglong)temp_value >> 0x20));\n    break;\n  case 0x13:\n    DAT_20000ee8 = config_value;\n    break;\n  case 0x14:\n    DAT_20000eec = config_value;\n    break;\n  case 0x15:\n    temp_value = FUN_08008590(config_value);\n    temp_value = FUN_08009654((int)temp_value,(int)((ulonglong)temp_value >> 0x20));\n    DAT_20000ef0 = FUN_08008bf0((int)temp_value,(int)((ulonglong)temp_value >> 0x20));\n    break;\n  case 0x16:\n    DAT_20000ef4 = config_value;\n    break;\n  case 0x17:\n    temp_value = FUN_08008590(config_value);\n    temp_value = FUN_08009798((int)temp_value,(int)((ulonglong)temp_value >> 0x20));\n    DAT_20000ed6 = FUN_08008bf0((int)temp_value,(int)((ulonglong)temp_value >> 0x20));\n    break;\n  default:\n    return_value 6;\n  }\n  FUN_08004c2a();\n  return_value 0;\n}\n\n",
            "current_name": "update_parameter_value_08004e30",
            "entrypoint": "0x08004e30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004e30": "update_parameter_value_08004e30",
                "iVar2": "result",
                "param_1": "config_type",
                "param_2": "config_value",
                "return": "return_value",
                "uVar1": "result",
                "uVar3": "temp_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080051b4": {
            "called": [
                "FUN_08004dd2",
                "FUN_08004250",
                "FUN_08004c48",
                "FUN_08004030",
                "FUN_08004d7c"
            ],
            "calling": [
                "FUN_08001ddc"
            ],
            "code": "\nvoid FUNC_080051b4(void)\n\n{\n  int iVar1;\n  undefined auStack_18 [15];\n  byte local_9;\n  \n  iVar1 = FUN_08004dd2();\n  if (iVar1 == 0) {\n    FUN_08004030(10);\n    FUN_08004c48(1);\n    FUN_08004250();\n  }\n  for (local_9 = 0; local_9 < 8; local_9 = local_9 + 1) {\n    iVar1 = FUN_08004d7c(local_9,auStack_18);\n    if (iVar1 == 0) {\n      FUN_08004030(10);\n    }\n  }\n  return;\n}\n\n",
            "current_name": "FUNC_080051b4",
            "entrypoint": "0x080051b4",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080051b4": "FUNC_080051b4"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005208": {
            "called": [],
            "calling": [
                "FUN_0800525c"
            ],
            "code": "\nvoid FUNC_08005208(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005208",
            "entrypoint": "0x08005208",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005208": "FUNC_08005208"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005214": {
            "called": [],
            "calling": [
                "FUN_08005250"
            ],
            "code": "\nvoid FUNC_08005214(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005214",
            "entrypoint": "0x08005214",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005214": "FUNC_08005214"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005220": {
            "called": [],
            "calling": [
                "FUN_0800525c"
            ],
            "code": "\nvoid FUNC_08005220(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005220",
            "entrypoint": "0x08005220",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005220": "FUNC_08005220"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800522c": {
            "called": [],
            "calling": [
                "FUN_0800525c"
            ],
            "code": "\nvoid FUNC_0800522c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800522c",
            "entrypoint": "0x0800522c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800522c": "FUNC_0800522c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005238": {
            "additional_data": {
                "FUN_08005238": {
                    "initialize_counter": 1,
                    "initialize_data": 26,
                    "initialize_global_variable": 1,
                    "initialize_variables": 1,
                    "reset_counter": 1,
                    "reset_data": 1
                },
                "FUN_08005250": {
                    "call_sub_function": 1,
                    "execute_data_initialization": 1,
                    "execute_process": 1,
                    "execute_sub_function": 1,
                    "execute_subfunction": 1,
                    "initialize": 1,
                    "initialize_data": 1,
                    "perform_action": 3,
                    "perform_initialization": 4,
                    "perform_operation": 6,
                    "perform_operations": 1,
                    "perform_subtask": 1,
                    "process_data": 6,
                    "update_data": 3
                }
            },
            "called": [
                "FUN_08005250"
            ],
            "calling": [
                "FUN_08001ddc"
            ],
            "code": "\nvoid initialize_data_08005238(void)\n\n{\n  DAT_20000e12 = 0;\n  FUN_08005250();\n  return;\n}\n\n",
            "current_name": "initialize_data_08005238",
            "entrypoint": "0x08005238",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005238": "initialize_data_08005238"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005250": {
            "additional_data": {
                "FUNC_08005214": {
                    "call_subfunction": 2,
                    "configure_settings": 1,
                    "execute_initialization": 2,
                    "execute_preparation": 1,
                    "execute_sub_function": 2,
                    "execute_subfunction": 2,
                    "execute_subroutine": 1,
                    "initialize": 1,
                    "initialize_data": 2,
                    "initialize_subroutine": 3,
                    "initialize_subsystem": 1,
                    "initiate_process": 1,
                    "perform_initialization": 8,
                    "perform_setup": 1,
                    "perform_task": 1,
                    "run_initialization": 1,
                    "run_sub_function": 1
                },
                "FUN_08005250": {
                    "execute_function": 3,
                    "execute_initial_setup": 1,
                    "execute_initialization": 8,
                    "execute_initialization_code": 1,
                    "execute_main_function": 7,
                    "execute_startup_tasks": 1,
                    "initialize": 2,
                    "initialize_application": 1,
                    "initialize_system": 6,
                    "run_main_function": 1
                }
            },
            "called": [
                "FUN_08005214"
            ],
            "calling": [
                "FUN_080025e8",
                "FUN_0800525c",
                "FUN_08005238"
            ],
            "code": "\nvoid execute_main_function_08005250(void)\n\n{\n  FUNC_08005214();\n  return;\n}\n\n",
            "current_name": "execute_main_function_08005250",
            "entrypoint": "0x08005250",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005250": "execute_main_function_08005250"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800525c": {
            "additional_data": {
                "DAT_20000e12": {
                    "current_data": 1,
                    "previous_value": 1,
                    "saved_param": 1,
                    "stored_param": 1
                },
                "FUNC_08005208": {
                    "finalize_action": 1,
                    "finalize_data": 1,
                    "finalize_operation": 1,
                    "finalize_update": 6,
                    "perform_final_action": 2,
                    "save_input": 2,
                    "save_to_memory": 1,
                    "update_data": 1,
                    "update_data_state": 1,
                    "update_flag": 1,
                    "update_global_data": 1,
                    "update_internal_state": 1,
                    "update_param": 1,
                    "update_param_status": 1,
                    "update_state": 1,
                    "update_status": 1,
                    "update_value": 2
                },
                "FUNC_08005220": {
                    "handle_data_greater_than_one": 1,
                    "handle_higher_value": 1,
                    "handle_non_zero_parameter": 1,
                    "handle_param_greater_than_zero": 1,
                    "handle_positive_case": 1,
                    "handle_positive_input": 6,
                    "handle_positive_param": 1,
                    "handle_positive_value": 1,
                    "handle_success": 1,
                    "handle_valid_data": 1,
                    "handle_valid_input": 5,
                    "handle_valid_value": 2,
                    "handle_value_greater_than_zero": 1,
                    "process_input": 1,
                    "process_value_condition": 1
                },
                "FUNC_0800522c": {
                    "handle_data_less_than_one": 1,
                    "handle_error": 1,
                    "handle_invalid_data": 1,
                    "handle_invalid_input": 6,
                    "handle_invalid_value": 3,
                    "handle_lower_value": 1,
                    "handle_negative_case": 1,
                    "handle_negative_input": 5,
                    "handle_negative_param": 1,
                    "handle_negative_value": 1,
                    "handle_param_less_than_one": 1,
                    "handle_value_less_than_one": 1,
                    "handle_zero_input": 1,
                    "handle_zero_parameter": 1
                },
                "FUN_08002fd4": {
                    "handle_data_mismatch": 1,
                    "handle_error": 2,
                    "handle_invalid_input": 1,
                    "handle_invalid_param": 1,
                    "handle_mismatch": 2,
                    "handle_not_equal": 1,
                    "handle_value_mismatch": 1,
                    "perform_action": 2,
                    "perform_cleanup": 1,
                    "perform_error_handling": 1,
                    "perform_first_action": 1,
                    "perform_initial_action": 2,
                    "perform_operation1": 1,
                    "perform_reset": 2,
                    "reset_data": 3,
                    "reset_function": 2,
                    "reset_value": 1
                },
                "FUN_08005250": {
                    "handle_null_input": 1,
                    "handle_zero_data": 2,
                    "handle_zero_input": 5,
                    "handle_zero_param": 1,
                    "handle_zero_value": 1,
                    "initialize": 1,
                    "initialize_data": 3,
                    "perform_action_on_zero": 1,
                    "perform_initialization": 1,
                    "perform_operation2": 1,
                    "perform_second_action": 1,
                    "perform_special_action": 1,
                    "reset_and_update_value": 1,
                    "reset_data": 2,
                    "reset_param": 1,
                    "reset_state": 1,
                    "reset_value": 1
                },
                "FUN_0800525c": {
                    "check_and_set_param": 2,
                    "check_and_update_param": 2,
                    "check_and_update_value": 1,
                    "handle_input": 1,
                    "process_byte": 2,
                    "process_data": 1,
                    "process_input": 1,
                    "update_data": 11,
                    "update_param": 1,
                    "update_param_value": 1,
                    "update_parameter_value": 1,
                    "update_state": 1,
                    "update_value": 6
                },
                "param_1": {
                    "byte": 1,
                    "byte_value": 2,
                    "data": 3,
                    "input": 5,
                    "input_byte": 6,
                    "input_param": 3,
                    "input_value": 4,
                    "new_data": 1,
                    "new_value": 3,
                    "value": 3
                }
            },
            "called": [
                "FUN_0800522c",
                "FUN_08002fd4",
                "FUN_08005220",
                "FUN_08005250",
                "FUN_08005208"
            ],
            "calling": [
                "FUN_080005b4"
            ],
            "code": "\nvoid update_data_0800525c(byte input_byte)\n\n{\n  if ((int)(char)input_byte != (uint)DAT_20000e12) {\n    FUN_08002fd4();\n    if (input_byte == 0) {\n      FUN_08005250();\n      DAT_20000e12 = input_byte;\n    }\n    else {\n      if ((char)input_byte < '\\x01') {\n        FUNC_0800522c();\n      }\n      else {\n        FUNC_08005220();\n      }\n      FUNC_08005208();\n      DAT_20000e12 = input_byte;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "update_data_0800525c",
            "entrypoint": "0x0800525c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800525c": "update_data_0800525c",
                "param_1": "input_byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080052ac": {
            "additional_data": {
                "0xfffffaaf": {
                    "bit_mask": 1,
                    "flag_mask": 1,
                    "mask": 2
                },
                "DAT_40021014": {
                    "data_flag": 1
                },
                "FUN_080052ac": {
                    "set_and_mask_register": 1,
                    "set_bits_in_memory": 1,
                    "set_bits_in_register": 1,
                    "set_bitwise_mask": 1,
                    "set_flag_in_register": 1,
                    "set_param_flags": 1,
                    "set_param_with_mask": 1,
                    "update_config_value": 1,
                    "update_configuration": 3,
                    "update_data": 8,
                    "update_data_and_merge": 1,
                    "update_data_with_mask": 1,
                    "update_data_with_param": 1,
                    "update_flag_bits": 2,
                    "update_flag_register": 1,
                    "update_memory": 1,
                    "update_memory_value": 1,
                    "update_parameter_value": 1,
                    "update_register": 1,
                    "update_register_value": 1,
                    "update_variable_with_mask": 1
                },
                "_DAT_40021014": {
                    "": 1,
                    "config_register": 1,
                    "current_configuration": 1,
                    "current_value": 3,
                    "existing_data": 2,
                    "existing_flags": 1,
                    "existing_value": 6,
                    "masked_param": 1,
                    "memory_address": 1,
                    "original_config_value": 1,
                    "original_data": 2,
                    "original_value": 1,
                    "register_value": 5
                },
                "param_1": {
                    "bit_mask": 1,
                    "configuration": 1,
                    "configuration_data": 1,
                    "data": 3,
                    "flag_value": 1,
                    "input_value": 3,
                    "new_configuration_value": 1,
                    "new_data": 3,
                    "new_flag_value": 1,
                    "new_flags": 1,
                    "new_param": 1,
                    "new_parameter_value": 1,
                    "new_value": 10,
                    "value": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_0800583c",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "code": "\n\n\nvoid update_data_with_mask_080052ac(uint new_value)\n\n{\n  _DAT_40021014 = new_value | _DAT_40021014 & 0xfffffaaf;\n  return;\n}\n\n",
            "current_name": "update_data_with_mask_080052ac",
            "entrypoint": "0x080052ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080052ac": "update_data_with_mask_080052ac",
                "param_1": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080052dc": {
            "additional_data": {
                "FUN_080052dc": {
                    "apply_mask": 1,
                    "set_bit_mask": 1,
                    "set_bits_in_register": 1,
                    "set_high_bits": 1,
                    "update_bits": 1,
                    "update_config": 1,
                    "update_configuration": 1,
                    "update_data": 5,
                    "update_data_and_mask": 1,
                    "update_data_in_register": 1,
                    "update_data_mask": 1,
                    "update_data_register": 1,
                    "update_data_value": 1,
                    "update_data_with_param": 1,
                    "update_flag": 1,
                    "update_flags": 2,
                    "update_global_value": 1,
                    "update_memory": 1,
                    "update_memory_with_param": 1,
                    "update_param_data": 1,
                    "update_parameter_value": 1,
                    "update_parameter_with_bitwise_or": 1,
                    "update_register": 2,
                    "update_register_value": 1
                },
                "_DAT_40021014": {
                    "base_address": 1,
                    "config_register": 1,
                    "configuration_data": 1,
                    "data_mask": 1,
                    "data_register": 1,
                    "data_to_update": 1,
                    "existing_data": 3,
                    "existing_value": 2,
                    "flag_value": 1,
                    "flags": 2,
                    "global_value": 1,
                    "param_data": 1,
                    "register_value": 6,
                    "result": 1,
                    "updated_memory": 1
                },
                "param_1": {
                    "config_value": 1,
                    "input": 1,
                    "input_data": 1,
                    "input_value": 2,
                    "new_bit_value": 1,
                    "new_bits": 1,
                    "new_data": 4,
                    "new_param": 3,
                    "new_parameter": 2,
                    "new_parameter_value": 1,
                    "new_value": 8,
                    "param": 1,
                    "value": 5
                }
            },
            "called": [],
            "calling": [
                "FUN_080053a0"
            ],
            "code": "\n\n\nvoid update_data_with_param_080052dc(uint new_value)\n\n{\n  _DAT_40021014 = new_value | _DAT_40021014 & 0xfffff55f;\n  return;\n}\n\n",
            "current_name": "update_data_with_param_080052dc",
            "entrypoint": "0x080052dc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080052dc": "update_data_with_param_080052dc",
                "param_1": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800530c": {
            "called": [],
            "calling": [
                "FUN_080057e4"
            ],
            "code": "\nvoid FUNC_0800530c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800530c",
            "entrypoint": "0x0800530c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800530c": "FUNC_0800530c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005318": {
            "called": [],
            "calling": [
                "FUN_08005790"
            ],
            "code": "\nvoid FUNC_08005318(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005318",
            "entrypoint": "0x08005318",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005318": "FUNC_08005318"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005324": {
            "additional_data": {
                "FUN_08005324": {
                    "calculate_data_rate": 1,
                    "calculate_delay": 1,
                    "calculate_divider": 1,
                    "calculate_division": 4,
                    "calculate_division_and_call_another_function": 1,
                    "calculate_division_and_call_function": 2,
                    "calculate_divisor": 4,
                    "calculate_frequency": 8,
                    "calculate_inverse_rate": 1,
                    "calculate_ratio": 2,
                    "calculate_refresh_rate": 4,
                    "calculate_time_per_unit": 1,
                    "calculate_time_period": 1
                },
                "FUN_08007bf0": {
                    "execute_function": 1,
                    "send_divisor": 1,
                    "send_time_to_server": 1,
                    "send_value_to_server": 1,
                    "set_refresh_rate": 1
                },
                "local_14": {
                    "adjusted_data_rate": 1,
                    "adjusted_divisor": 2,
                    "adjusted_frequency": 5,
                    "adjusted_height": 1,
                    "adjusted_input_parameter": 1,
                    "adjusted_number": 1,
                    "adjusted_rate": 1,
                    "adjusted_refresh_rate": 1,
                    "adjusted_time": 1,
                    "adjusted_units": 1,
                    "adjusted_value": 5,
                    "calculated_frequency": 1,
                    "dividend": 1,
                    "divisor": 1,
                    "max_refresh_rate": 1,
                    "min_resolution": 1,
                    "modified_value": 1,
                    "normalized_value": 3,
                    "valid_frequency": 1
                },
                "param_1": {
                    "dividend": 1,
                    "divisor": 2,
                    "frequency": 2,
                    "input": 1,
                    "input_data_rate": 1,
                    "input_frequency": 5,
                    "input_number": 1,
                    "input_parameter": 1,
                    "input_refresh_rate": 1,
                    "input_resolution": 1,
                    "input_units": 1,
                    "input_value": 10,
                    "rate": 1,
                    "screen_height": 1,
                    "screen_refresh_rate": 1,
                    "time_value": 1
                }
            },
            "called": [
                "FUN_08007bf0"
            ],
            "calling": [
                "FUN_080053a0",
                "FUN_08005814",
                "FUN_080058a0"
            ],
            "code": "\nvoid calculate_frequency_08005324(uint input_value)\n\n{\n  uint adjusted_value;\n  \n  adjusted_value = input_value;\n  if (input_value < 800) {\n    adjusted_value = 800;\n  }\n  DAT_20000e28 = 1260000000 / adjusted_value;\n  FUN_08007bf0(DAT_20000e28);\n  return;\n}\n\n",
            "current_name": "calculate_frequency_08005324",
            "entrypoint": "0x08005324",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005324": "calculate_frequency_08005324",
                "local_14": "adjusted_value",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005360": {
            "additional_data": {
                "420000": {
                    "limit": 1,
                    "threshold": 1
                },
                "DAT_20000e28": {
                    "base_value": 3,
                    "constant_value": 1,
                    "increment": 1,
                    "initial_value": 3,
                    "old_value": 1,
                    "previous_value": 1,
                    "value_to_add": 1
                },
                "DAT_20000e2c": {
                    "accumulated_value": 3,
                    "accumulation": 1,
                    "accumulator": 1,
                    "counter": 2,
                    "current_value": 3,
                    "sum": 3,
                    "total_value": 1
                },
                "FUN_08005360": {
                    "accumulate": 1,
                    "accumulate_and_check_limit": 1,
                    "accumulate_and_check_overflow": 1,
                    "accumulate_and_check_threshold": 2,
                    "accumulate_value_and_check_threshold": 1,
                    "accumulate_value_exceeds": 1,
                    "add_and_check_threshold": 1,
                    "calculate_exceeded_limit": 1,
                    "calculate_exceeds_threshold": 1,
                    "calculate_excess": 2,
                    "calculate_overflow": 1,
                    "calculate_sum_and_check_threshold": 1,
                    "check_exceeded_threshold": 1,
                    "check_if_exceeds_limit": 1,
                    "check_if_sum_exceeds_threshold": 1,
                    "check_if_threshold_exceeded": 3,
                    "check_overflow": 2,
                    "check_threshold": 1,
                    "check_threshold_exceeded": 5,
                    "update_counter": 3
                },
                "bVar1": {
                    "exceeded_limit": 2,
                    "exceeds_limit": 1,
                    "exceeds_threshold": 1,
                    "is_above_threshold": 1,
                    "is_exceeded": 2,
                    "is_exceeded_threshold": 1,
                    "is_exceeding_threshold": 1,
                    "is_limit_exceeded": 1,
                    "is_overflow": 7,
                    "is_sum_exceeding_threshold": 1,
                    "is_threshold_exceeded": 11,
                    "is_threshold_reached": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080053a0"
            ],
            "code": "\nbool check_if_threshold_exceeded_08005360(void)\n\n{\n  bool is_threshold_exceeded;\n  \n  DAT_20000e2c = DAT_20000e28 + DAT_20000e2c;\n  is_threshold_exceeded = 420000 < DAT_20000e2c;\n  if (is_threshold_exceeded) {\n    DAT_20000e2c = DAT_20000e2c - 420000;\n  }\n  return is_threshold_exceeded;\n}\n\n",
            "current_name": "check_if_threshold_exceeded_08005360",
            "entrypoint": "0x08005360",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005360": "check_if_threshold_exceeded_08005360",
                "bVar1": "is_threshold_exceeded"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080053a0": {
            "additional_data": {
                "FUN_08002f40": {
                    "clean_up": 1,
                    "cleanup": 10,
                    "cleanup_data": 1,
                    "cleanup_memory": 1,
                    "reset_data": 17,
                    "reset_data_values": 1
                },
                "FUN_08002f74": {
                    "allocate_memory": 25,
                    "get_data": 2,
                    "get_memory": 1,
                    "get_new_data": 1,
                    "get_pointer": 1,
                    "get_updated_data": 1
                },
                "FUN_080052dc": {
                    "initialize": 3,
                    "initialize_data": 26,
                    "initialize_status": 1,
                    "prepare_data": 1
                },
                "FUN_08005324": {
                    "update_data": 13,
                    "update_data_threshold": 1,
                    "update_data_value": 2,
                    "update_stats": 1,
                    "update_status": 1,
                    "update_threshold": 2,
                    "update_value": 11
                },
                "FUN_08005360": {
                    "check_condition": 22,
                    "check_result": 2,
                    "check_value": 4,
                    "check_value_validity": 1,
                    "verify_data": 1
                },
                "FUN_080053a0": {
                    "calculate_statistics": 1,
                    "calculate_stats": 1,
                    "calculate_status": 1,
                    "handle_data_processing": 1,
                    "process_data": 13,
                    "update_data": 12,
                    "update_data_and_values": 1,
                    "update_data_values": 1
                },
                "FUN_080057e4": {
                    "display_error_message": 1,
                    "handle_error": 13,
                    "handle_failure": 1,
                    "handle_no_data": 4,
                    "handle_no_data_error": 1,
                    "handle_null_data": 4,
                    "handle_null_pointer": 4,
                    "handle_null_ptr": 2,
                    "print_error_message": 1
                },
                "iVar1": {
                    "result": 2,
                    "return_value": 1
                }
            },
            "called": [
                "FUN_080057e4",
                "FUN_08002f40",
                "FUN_08005324",
                "FUN_08002f74",
                "FUN_080052dc",
                "FUN_08005360"
            ],
            "calling": [
                "FUN_08007c7c"
            ],
            "code": "\nvoid update_data_and_values_080053a0(void)\n\n{\n  int result;\n  \n  FUN_080052dc(DAT_20000e3e);\n  DAT_20000e40 = DAT_20000e3c;\n  if (DAT_20000e38 == (ushort *)0x0) {\n    DAT_20000e38 = (ushort *)FUN_08002f74();\n    if (DAT_20000e38 == (ushort *)0x0) {\n      FUN_080057e4();\n      DAT_20000eaa = DAT_20000eaa | 4;\n    }\n    else {\n      if (DAT_20000ea9 == '\\x03') {\n        DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x14);\n        FUN_08005324(DAT_20000e30);\n        DAT_20000e2c = 210000;\n      }\n      DAT_20000e34 = (*(int *)(DAT_20000e38 + 0x18) >> 1) + *(int *)(DAT_20000e38 + 0x18);\n      DAT_20000e14 = -(*(int *)(DAT_20000e38 + 8) >> 1);\n      DAT_20000e20 = *(int *)(DAT_20000e38 + 8);\n      DAT_20000e24 = 0;\n      DAT_20000e18 = DAT_20000e14;\n      DAT_20000e1c = DAT_20000e14;\n    }\n  }\n  if (DAT_20000e38 != (ushort *)0x0) {\n    DAT_20000e3e = *DAT_20000e38;\n    DAT_20000e3c = 0;\n    DAT_20000e14 = *(int *)(DAT_20000e38 + 2) + DAT_20000e14;\n    if (0 < DAT_20000e14) {\n      DAT_20000e3c = 0x10;\n      DAT_20000e14 = DAT_20000e14 - DAT_20000e20;\n      if ((DAT_20000e3e & 0x20) == 0) {\n        DAT_20000eac = DAT_20000eac + 1;\n      }\n      else {\n        DAT_20000eac = DAT_20000eac + -1;\n      }\n    }\n    DAT_20000e18 = *(int *)(DAT_20000e38 + 4) + DAT_20000e18;\n    if (0 < DAT_20000e18) {\n      DAT_20000e3c = DAT_20000e3c | 0x440;\n      DAT_20000e18 = DAT_20000e18 - DAT_20000e20;\n      if ((DAT_20000e3e & 0x80) == 0) {\n        DAT_20000eb0 = DAT_20000eb0 + 1;\n      }\n      else {\n        DAT_20000eb0 = DAT_20000eb0 + -1;\n      }\n    }\n    DAT_20000e1c = *(int *)(DAT_20000e38 + 6) + DAT_20000e1c;\n    if (0 < DAT_20000e1c) {\n      DAT_20000e3c = DAT_20000e3c | 0x100;\n      DAT_20000e1c = DAT_20000e1c - DAT_20000e20;\n      if ((DAT_20000e3e & 0x200) == 0) {\n        DAT_20000eb4 = DAT_20000eb4 + 1;\n      }\n      else {\n        DAT_20000eb4 = DAT_20000eb4 + -1;\n      }\n    }\n    DAT_20000e24 = DAT_20000e24 + 1;\n    if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 8)) {\n      if (DAT_20000ea9 == '\\x04') {\n        result = FUN_08005360();\n        if (result != 0) {\n          if (*(uint *)(DAT_20000e38 + 0x18) < DAT_20000e30) {\n            DAT_20000e30 = DAT_20000e30 - *(int *)(DAT_20000e38 + 0x18);\n            FUN_08005324(DAT_20000e30);\n          }\n          else {\n            FUN_080057e4();\n            DAT_20000eaa = DAT_20000eaa | 4;\n          }\n        }\n      }\n      else if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 0x1a)) {\n        result = FUN_08005360();\n        if (result != 0) {\n          DAT_20000e30 = DAT_20000e30 + *(int *)(DAT_20000e38 + 0x18);\n          if (*(uint *)(DAT_20000e38 + 0x1e) <= DAT_20000e30) {\n            DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x1e);\n          }\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n      else if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 0x1c)) {\n        if (DAT_20000e30 != *(uint *)(DAT_20000e38 + 0x1e)) {\n          DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x1e);\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n      else if (DAT_20000e24 == *(uint *)(DAT_20000e38 + 0x1c)) {\n        if (DAT_20000e30 == *(uint *)(DAT_20000e38 + 0x1e)) {\n          DAT_20000e2c = 210000;\n        }\n        else {\n          DAT_20000e2c = 420000 - DAT_20000e2c;\n        }\n      }\n      else {\n        result = FUN_08005360();\n        if (result != 0) {\n          if (DAT_20000e34 < DAT_20000e30) {\n            DAT_20000e30 = DAT_20000e30 - *(int *)(DAT_20000e38 + 0x18);\n          }\n          else {\n            DAT_20000e30 = DAT_20000e30 >> 1;\n          }\n          if (DAT_20000e30 < *(uint *)(DAT_20000e38 + 0x16)) {\n            DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x16);\n          }\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n    }\n    else {\n      DAT_20000e3c = 0;\n      DAT_20000e38 = (ushort *)0x0;\n      FUN_08002f40();\n    }\n  }\n  DAT_20000e3c = DAT_20000e3c ^ DAT_20000ed4;\n  DAT_20000e3e = DAT_20000e3e ^ DAT_20000ed6;\n  return;\n}\n\n",
            "current_name": "update_data_and_values_080053a0",
            "entrypoint": "0x080053a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080053a0": "update_data_and_values_080053a0",
                "iVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005760": {
            "additional_data": {
                "DAT_20000ed4": {
                    "data": 1
                },
                "FUN_080052ac": {
                    "call_subfunction": 1,
                    "load_configurations": 1,
                    "load_data": 1,
                    "perform_action": 1,
                    "process_data": 17
                },
                "FUN_08005760": {
                    "execute_function": 1,
                    "execute_initial_setup": 1,
                    "execute_initialization": 2,
                    "initialize_application": 3,
                    "initialize_data": 24
                },
                "param_1": {
                    "action_parameter": 1,
                    "argument": 1,
                    "data": 14,
                    "data_addr": 1,
                    "data_address": 6,
                    "data_parameter": 1,
                    "data_value": 1,
                    "input_data": 1
                }
            },
            "called": [
                "FUN_080052ac"
            ],
            "calling": [
                "FUN_08007c7c"
            ],
            "code": "\nvoid initialize_data_08005760(void)\n\n{\n  FUN_080052ac(DAT_20000ed4);\n  return;\n}\n\n",
            "current_name": "initialize_data_08005760",
            "entrypoint": "0x08005760",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005760": "initialize_data_08005760"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005778": {
            "additional_data": {
                "FUN_080052ac": {
                    "initialize_data_helper": 1,
                    "initialize_memory": 1,
                    "pass_data": 1,
                    "perform_initialization": 1,
                    "process_data": 14,
                    "process_input": 1,
                    "set_data": 1
                },
                "FUN_08005778": {
                    "initialize": 1,
                    "initialize_data": 28,
                    "initialize_output": 1,
                    "initiate_data_processing": 1
                },
                "param_1": {
                    "data": 13,
                    "data_address": 3,
                    "data_array": 1,
                    "data_buffer": 1,
                    "data_parameter": 4,
                    "data_pointer": 3,
                    "output_data": 1
                }
            },
            "called": [
                "FUN_080052ac"
            ],
            "calling": [
                "FUN_08007c7c"
            ],
            "code": "\nvoid initialize_data_08005778(void)\n\n{\n  FUN_080052ac(DAT_20000e40);\n  return;\n}\n\n",
            "current_name": "initialize_data_08005778",
            "entrypoint": "0x08005778",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005778": "initialize_data_08005778"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005790": {
            "additional_data": {
                "FUNC_08005318": {
                    "call_first_function": 1,
                    "execute_first_function": 1,
                    "execute_preparation": 1,
                    "initialize": 15,
                    "initialize_data": 8,
                    "initialize_variables": 1,
                    "perform_initialization": 1,
                    "perform_preprocessing": 1,
                    "perform_setup": 1,
                    "setup_environment": 1
                },
                "FUN_08005790": {
                    "execute_operation": 1,
                    "execute_process": 1,
                    "execute_special_function": 1,
                    "execute_task": 1,
                    "extract_and_process_data": 1,
                    "extract_data_and_process": 2,
                    "initialize": 1,
                    "initialize_data": 5,
                    "initialize_process": 1,
                    "process_data": 14,
                    "update_data_and_call_functions": 1,
                    "update_data_if_needed": 2
                },
                "FUN_08007b70": {
                    "cleanup": 2,
                    "execute_action": 1,
                    "execute_final_operation": 1,
                    "execute_process": 1,
                    "finalize": 3,
                    "finalize_data": 2,
                    "finalize_execution": 1,
                    "finalize_process": 2,
                    "finalize_processing": 3,
                    "finalize_task": 1,
                    "perform_action": 9,
                    "perform_final_action": 1,
                    "perform_operation": 1,
                    "perform_task": 3
                },
                "FUN_08007c40": {
                    "display_data": 1,
                    "display_message": 17,
                    "display_result": 1,
                    "print_message": 3,
                    "print_value": 2,
                    "set_flag": 3,
                    "set_initial_value": 1,
                    "set_mode": 2,
                    "set_value": 1
                },
                "FUN_08007c5e": {
                    "calculate_multiplier": 1,
                    "calculate_offset": 8,
                    "calculate_parameter_value": 3,
                    "calculate_result": 1,
                    "calculate_size": 1,
                    "calculate_threshold": 1,
                    "calculate_value": 14,
                    "multiply_by_parameter": 1,
                    "set_threshold": 1
                }
            },
            "called": [
                "FUN_08005318",
                "FUN_08007c5e",
                "FUN_08007b70",
                "FUN_08007c40"
            ],
            "calling": [
                "FUN_0800583c",
                "FUN_0800585c",
                "FUN_08001d4c"
            ],
            "code": "\nvoid extract_and_process_data_08005790(void)\n\n{\n  FUNC_08005318();\n  if (DAT_20000ea9 == '\\x03') {\n    DAT_20000e3c = DAT_20000ed4;\n    DAT_20000e3e = DAT_20000ed6;\n    FUN_08007c40(0x69);\n    FUN_08007c5e((DAT_20000ec9 + 5) * 0x15);\n    FUN_08007b70();\n  }\n  return;\n}\n\n",
            "current_name": "extract_and_process_data_08005790",
            "entrypoint": "0x08005790",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005790": "extract_and_process_data_08005790"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080057e4": {
            "additional_data": {
                "FUNC_0800530c": {
                    "check_condition": 1,
                    "check_conditions": 2,
                    "execute_function": 2,
                    "execute_operation": 1,
                    "execute_process": 1,
                    "perform_action": 17,
                    "perform_additional_operations": 1,
                    "perform_additional_tasks": 1,
                    "perform_cleanup": 1,
                    "perform_operation": 1,
                    "perform_reverse_operation": 1,
                    "process_data": 2
                },
                "FUN_080057e4": {
                    "check_and_call_function": 1,
                    "check_and_execute_function": 1,
                    "execute_code": 1,
                    "execute_conditional_operations": 1,
                    "execute_function": 11,
                    "execute_function_if_needed": 1,
                    "execute_important_function": 1,
                    "execute_logic": 1,
                    "execute_main_function": 7,
                    "execute_post_function": 1,
                    "execute_relevant_operations": 1,
                    "handle_data_processing": 1,
                    "initialize_system": 1,
                    "process_data": 1
                },
                "FUN_08007bc2": {
                    "initialize": 1,
                    "initialize_context": 1,
                    "initialize_data": 18,
                    "initialize_data_structures": 1,
                    "initialize_resources": 2,
                    "initialize_system": 1,
                    "initialize_variables": 2,
                    "perform_initialization": 2,
                    "perform_preparatory_tasks": 1,
                    "perform_setup": 1,
                    "prepare_data": 1
                }
            },
            "called": [
                "FUN_08007bc2",
                "FUN_0800530c"
            ],
            "calling": [
                "FUN_080025e8",
                "FUN_080053a0",
                "FUN_0800583c",
                "FUN_08001d4c"
            ],
            "code": "\nvoid execute_main_function_080057e4(void)\n\n{\n  FUN_08007bc2();\n  if ((DAT_20000ef8 != -1) || ((DAT_20000eaa & 0x20) != 0)) {\n    FUNC_0800530c();\n  }\n  return;\n}\n\n",
            "current_name": "execute_main_function_080057e4",
            "entrypoint": "0x080057e4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080057e4": "execute_main_function_080057e4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005814": {
            "additional_data": {
                "DAT_20000e14": {
                    "data": 1,
                    "source_data": 1
                },
                "DAT_20000e38": {
                    "counter": 2,
                    "data_flag": 1
                },
                "FUN_08005324": {
                    "delay": 1,
                    "perform_operation": 2,
                    "print_message": 1,
                    "set_counter": 1,
                    "set_delay": 1,
                    "set_initial_value": 2,
                    "set_resolution": 1,
                    "set_threshold": 11,
                    "set_time": 1,
                    "set_timer": 5,
                    "set_timer_duration": 1,
                    "set_timer_value": 1,
                    "set_window_size": 2
                },
                "FUN_08005814": {
                    "initialize": 2,
                    "initialize_application": 3,
                    "initialize_data": 23,
                    "initialize_data_structures": 1,
                    "initialize_program": 2
                },
                "FUN_0800b430": {
                    "clear_memory": 1,
                    "copy_data": 14,
                    "copy_data_to_memory": 1,
                    "copy_memory": 2,
                    "fill_memory": 2,
                    "initialize_array": 1,
                    "initialize_memory": 8,
                    "populate_data": 1
                },
                "data": {
                    "data_buffer": 1
                },
                "flag": {
                    "clear_flag": 1
                },
                "param_1": {
                    "data": 1,
                    "data_array": 3,
                    "data_pointer": 9,
                    "destination": 1
                },
                "param_2": {
                    "flag": 7,
                    "param2": 3,
                    "param_flag": 1,
                    "source": 1,
                    "unused": 1,
                    "unused_param": 1
                },
                "param_3": {
                    "data_size": 1,
                    "length": 2,
                    "size": 11
                },
                "size": {
                    "buffer_size": 1
                }
            },
            "called": [
                "FUN_08005324",
                "FUN_0800b430"
            ],
            "calling": [
                "FUN_08001ddc"
            ],
            "code": "\nvoid initialize_data_structures_08005814(void)\n\n{\n  FUN_0800b430(&DAT_20000e14,0,0x24);\n  FUN_08005324(800);\n  DAT_20000e38 = 0;\n  return;\n}\n\n",
            "current_name": "initialize_data_structures_08005814",
            "entrypoint": "0x08005814",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005814": "initialize_data_structures_08005814"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800583c": {
            "additional_data": {
                "DAT_20000ed4": {
                    "some_data": 1
                },
                "FUN_080052ac": {
                    "do_something": 1,
                    "execute_task1": 1,
                    "initialize_data": 5,
                    "initialize_memory": 1,
                    "load_configuration": 1,
                    "load_data": 9,
                    "load_parameters": 1,
                    "load_resource": 1,
                    "perform_action": 1,
                    "process_data": 4,
                    "process_input": 1,
                    "reverse_data": 1,
                    "set_config": 1,
                    "set_configuration": 1,
                    "set_initial_parameters": 1,
                    "setup_configuration": 1
                },
                "FUN_08005790": {
                    "display_welcome_message": 1,
                    "execute_initialization": 1,
                    "execute_main_function": 1,
                    "execute_operation": 2,
                    "execute_process": 1,
                    "execute_startup_routine": 1,
                    "execute_task": 6,
                    "execute_task2": 1,
                    "initialize_data": 1,
                    "initialize_graphics": 1,
                    "initialize_system": 1,
                    "log_data": 1,
                    "perform_action": 2,
                    "perform_data_processing": 1,
                    "perform_initial_setup": 1,
                    "perform_initialization": 2,
                    "perform_logging": 1,
                    "perform_main_setup": 1,
                    "perform_preparation": 1,
                    "perform_task": 1,
                    "perform_task1": 1,
                    "setup_gui": 1,
                    "start_execution": 1
                },
                "FUN_080057e4": {
                    "cleanup": 3,
                    "cleanup_environment": 1,
                    "configure_settings": 1,
                    "display_message": 1,
                    "execute_additional_function": 1,
                    "execute_cleanup": 1,
                    "execute_initialization": 1,
                    "execute_task3": 1,
                    "finalize_initialization": 1,
                    "finalize_program": 1,
                    "finalize_setup": 1,
                    "initialize_network": 1,
                    "perform_action": 1,
                    "perform_additional_checks": 1,
                    "perform_additional_setup": 1,
                    "perform_additional_tasks": 1,
                    "perform_cleanup": 10,
                    "perform_post_processing": 1,
                    "perform_task2": 1,
                    "set_configuration": 1
                },
                "FUN_0800583c": {
                    "execute_initialization": 1,
                    "execute_main_function": 1,
                    "initialize": 6,
                    "initialize_and_execute": 2,
                    "initialize_application": 8,
                    "initialize_program": 6,
                    "initialize_system": 7
                },
                "param_1": {
                    "data": 1,
                    "data_address": 2,
                    "data_input": 1,
                    "input_param": 1,
                    "input_parameter": 1,
                    "param": 1
                },
                "uint": {
                    "param": 1
                }
            },
            "called": [
                "FUN_080057e4",
                "FUN_08005790",
                "FUN_080052ac"
            ],
            "calling": [
                "FUN_08001ddc"
            ],
            "code": "\nvoid initialize_application_0800583c(void)\n\n{\n  FUN_080052ac(DAT_20000ed4);\n  FUN_08005790();\n  FUN_080057e4();\n  return;\n}\n\n",
            "current_name": "initialize_application_0800583c",
            "entrypoint": "0x0800583c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800583c": "initialize_application_0800583c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800585c": {
            "additional_data": {
                "DAT_20000ea9": {
                    "status": 2
                },
                "FUN_08005790": {
                    "call_helper_function": 1,
                    "execute_action": 4,
                    "execute_callback": 1,
                    "execute_data_update": 1,
                    "execute_function": 1,
                    "execute_subroutine": 1,
                    "execute_task": 2,
                    "execute_update": 4,
                    "perform_action": 6,
                    "perform_data_update": 1,
                    "perform_operation": 1,
                    "perform_task": 1,
                    "perform_update": 4,
                    "process_data": 1
                },
                "FUN_0800585c": {
                    "check_and_update_status": 1,
                    "process_status": 1,
                    "update_and_call_function_if_needed": 1,
                    "update_data_and_call_function": 1,
                    "update_data_status": 3,
                    "update_flag_and_call_function": 1,
                    "update_state_if_condition_met": 1,
                    "update_status": 14,
                    "update_status_and_call_function": 8
                }
            },
            "called": [
                "FUN_08005790"
            ],
            "calling": [
                "FUN_08001e98",
                "FUN_08003a74",
                "FUN_080024c4"
            ],
            "code": "\nvoid update_status_and_call_function_0800585c(void)\n\n{\n  if (DAT_20000ea9 == '\\x02') {\n    DAT_20000ea9 = '\\x03';\n    FUN_08005790();\n  }\n  return;\n}\n\n",
            "current_name": "update_status_and_call_function_0800585c",
            "entrypoint": "0x0800585c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800585c": "update_status_and_call_function_0800585c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800587c": {
            "additional_data": {
                "": {
                    "": 2
                },
                "DAT_20000ea9": {
                    "current_status": 7,
                    "current_value": 1,
                    "data_flag": 1,
                    "data_status": 4,
                    "status": 12,
                    "status_flag": 2
                },
                "DAT_20000eb8": {
                    "counter": 24,
                    "error_code": 1,
                    "error_count": 1,
                    "reset_counter": 1
                },
                "FUN_0800587c": {
                    "update_data": 3,
                    "update_data_if_condition_met": 1,
                    "update_data_if_needed": 2,
                    "update_data_status": 4,
                    "update_status": 20,
                    "update_variable_if_needed": 1
                },
                "ea9": {
                    "status": 1
                },
                "eb8": {
                    "counter": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003a74"
            ],
            "code": "\nvoid update_data_status_0800587c(void)\n\n{\n  if (DAT_20000ea9 == '\\x03') {\n    DAT_20000ea9 = '\\x04';\n    DAT_20000eb8 = 0;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_status_0800587c",
            "entrypoint": "0x0800587c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800587c": "update_data_status_0800587c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080058a0": {
            "additional_data": {
                "DAT_20000e24": {
                    "initial_value": 1,
                    "offset": 1
                },
                "DAT_20000e2c": {
                    "count": 1,
                    "threshold": 1
                },
                "DAT_20000e30": {
                    "dummy_variable": 1,
                    "temp_value": 1
                },
                "DAT_20000e38": {
                    "data_ptr": 1,
                    "ptr_data": 1
                },
                "DAT_20000ea9": {
                    "flag": 1,
                    "status": 1
                },
                "FUN_08003618": {
                    "adjust_offset": 4,
                    "adjust_parameter": 3,
                    "adjust_value": 15,
                    "compute_difference": 1,
                    "modify_parameter": 1,
                    "perform_calculation": 3,
                    "subtract_from_param": 1,
                    "subtract_value": 3
                },
                "FUN_08005324": {
                    "display_message": 7,
                    "display_notification": 1,
                    "display_result": 1,
                    "display_status": 1,
                    "notify_function": 1,
                    "print_message": 1,
                    "print_status": 1,
                    "reset_counter": 1,
                    "reset_state": 1,
                    "set_display_mode": 3,
                    "set_flag": 7,
                    "set_status": 2,
                    "update_counter": 1,
                    "update_display": 1,
                    "update_status": 2
                },
                "FUN_080058a0": {
                    "initialize_data": 25,
                    "initialize_function": 2,
                    "initialize_process": 2,
                    "process_data": 1,
                    "update_data": 1
                },
                "newVariable": {
                    "new_flag": 1
                },
                "param_1": {
                    "flag": 1,
                    "input_param": 1,
                    "input_parameter": 1,
                    "message_type": 1,
                    "new_value": 1,
                    "value": 3
                },
                "param_2": {
                    "offset": 1
                },
                "tempVariable": {
                    "temp_offset": 1
                }
            },
            "called": [
                "FUN_08005324",
                "FUN_08003618"
            ],
            "calling": [
                "FUN_08003a74"
            ],
            "code": "\nvoid initialize_data_080058a0(void)\n\n{\n  if (DAT_20000e38 == 0) {\n    DAT_20000ea9 = 0;\n  }\n  else {\n    FUN_08003618(*(int *)(DAT_20000e38 + 0x10) - DAT_20000e24);\n    DAT_20000e30 = 0;\n    FUN_08005324(0);\n    DAT_20000e2c = 210000;\n    DAT_20000e24 = 0;\n    DAT_20000ea9 = 2;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_080058a0",
            "entrypoint": "0x080058a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080058a0": "initialize_data_080058a0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005900": {
            "additional_data": {
                "DAT_20000eaa": {
                    "data_flag": 1,
                    "flag_variable": 1,
                    "flags": 4,
                    "internal_flags": 1,
                    "status_flag": 1,
                    "status_flags": 1
                },
                "FUN_080025e8": {
                    "handle_byte18": 1,
                    "handle_param_0x18": 1,
                    "handle_special_byte": 1,
                    "handle_special_case": 5,
                    "perform_action": 3,
                    "perform_special_action": 1,
                    "process_character": 1
                },
                "FUN_08005900": {
                    "check_and_modify_flags": 1,
                    "check_and_set_flags": 7,
                    "check_and_update_flags": 4,
                    "check_byte": 1,
                    "check_character": 1,
                    "check_special_byte": 1,
                    "check_special_characters": 1,
                    "handle_byte": 1,
                    "identify_special_characters": 1,
                    "process_byte": 11,
                    "process_input_byte": 2
                },
                "param_1": {
                    "byte_to_check": 1,
                    "byte_value": 16,
                    "character": 3,
                    "input_byte": 10,
                    "input_value": 1
                }
            },
            "called": [
                "FUN_080025e8"
            ],
            "calling": [
                "FUN_08008286"
            ],
            "code": "\nundefined4 process_input_byte_08005900(byte byte_value)\n\n{\n  if (byte_value == 0x7e) {\n    DAT_20000eaa = DAT_20000eaa | 2;\n    return 1;\n  }\n  if (byte_value < 0x7f) {\n    if (byte_value == 0x3f) {\n      DAT_20000eaa = DAT_20000eaa | 1;\n      return 1;\n    }\n    if (byte_value < 0x40) {\n      if (byte_value == 0x18) {\n        FUN_080025e8();\n        return 1;\n      }\n      if (byte_value == 0x21) {\n        DAT_20000eaa = DAT_20000eaa | 8;\n        return 1;\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_input_byte_08005900",
            "entrypoint": "0x08005900",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005900": "process_input_byte_08005900",
                "param_1": "byte_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800597c": {
            "additional_data": {
                "0x3f": {
                    "file_system_call": 1,
                    "interrupt_code": 1
                },
                "FUN_0800597c": {
                    "call_api_function": 1,
                    "execute_software_interrupt": 5,
                    "execute_system_call": 7,
                    "execute_system_interrupt": 5,
                    "invoke_software_interrupt": 1,
                    "invoke_system_call": 3,
                    "invoke_system_interrupt": 1,
                    "perform_software_interrupt": 5,
                    "send_interrupt_request": 1,
                    "software_interrupt_handler": 1,
                    "trigger_software_interrupt": 1
                },
                "PTR_0800597c": {
                    "function_pointer": 1
                },
                "software_interrupt": {
                    "call_interrupt": 1,
                    "execute_interrupt": 4,
                    "handle_software_interrupt": 1,
                    "interrupt": 1,
                    "interrupt_kernel": 1,
                    "invoke_interrupt": 4,
                    "invoke_operating_system": 1,
                    "perform_interrupt": 1,
                    "send_software_interrupt": 1,
                    "trigger_api_call": 1,
                    "trigger_interrupt": 1,
                    "trigger_system_call": 1,
                    "trigger_system_interrupt": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005984"
            ],
            "code": "\nvoid execute_system_call_0800597c(void)\n\n{\n  execute_interrupt(0x3f);\n  return;\n}\n\n",
            "current_name": "execute_system_call_0800597c",
            "entrypoint": "0x0800597c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800597c": "execute_system_call_0800597c",
                "software_interrupt": "execute_interrupt"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005984": {
            "additional_data": {
                "FUN_08005984": {
                    "check_initialization": 1,
                    "check_initialization_status": 1,
                    "execute_function": 1,
                    "execute_function_based_on_condition": 1,
                    "execute_if_initialized": 1,
                    "execute_if_needed": 1,
                    "execute_or_return_zero": 1,
                    "execute_or_skip": 1,
                    "extract_data": 1,
                    "initialize": 1,
                    "initialize_application": 1,
                    "initialize_data": 8,
                    "initialize_function": 1,
                    "initialize_if_zero": 1,
                    "initialize_or_reset": 1,
                    "initialize_or_return": 1,
                    "initialize_state": 1,
                    "initialize_value": 1,
                    "initialize_var": 1,
                    "process_data": 3,
                    "process_initialization": 1,
                    "reverse_binary": 1
                },
                "param_1": {
                    "arg": 1,
                    "configuration": 1,
                    "data": 2,
                    "input": 10,
                    "input_data": 3,
                    "input_param": 2,
                    "input_parameter": 2,
                    "input_value": 8,
                    "status": 1,
                    "value_to_initialize": 1
                },
                "uVar1": {
                    "result": 15,
                    "return_value": 15
                }
            },
            "called": [
                "FUN_0800597c"
            ],
            "calling": [
                "FUN_08007540"
            ],
            "code": "\nundefined4 initialize_data_08005984(undefined4 input)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000e44 == 0) {\n    result = FUN_0800597c(1,input,0);\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "initialize_data_08005984",
            "entrypoint": "0x08005984",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005984": "initialize_data_08005984",
                "param_1": "input",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080059b4": {
            "additional_data": {
                "FUNC_08005a50": {
                    "activate_function": 1,
                    "configure_device": 1,
                    "execute": 1,
                    "execute_initialization": 2,
                    "execute_operation": 1,
                    "execute_system_operations": 1,
                    "execute_task": 3,
                    "initialize_components": 3,
                    "perform_action": 3,
                    "perform_calibration": 1,
                    "perform_initialization": 5,
                    "perform_startup_tasks": 2,
                    "perform_system_check": 1,
                    "perform_system_checks": 1,
                    "perform_task": 3
                },
                "FUN_080059b4": {
                    "initialize": 3,
                    "initialize_and_configure_system": 1,
                    "initialize_and_execute_program": 1,
                    "initialize_and_run": 1,
                    "initialize_and_run_application": 1,
                    "initialize_application": 2,
                    "initialize_device": 2,
                    "initialize_system": 19,
                    "initiate_application": 1
                },
                "FUN_08006ce0": {
                    "configure_interrupt": 1,
                    "configure_options": 1,
                    "configure_output": 1,
                    "configure_settings": 1,
                    "configure_system": 4,
                    "enable_interrupts": 1,
                    "set_configuration": 1,
                    "set_device_mode": 1,
                    "set_mode": 15,
                    "set_priority": 2,
                    "set_thread_priority": 1
                },
                "FUN_08006d72": {
                    "delay": 1,
                    "initialize_timer": 2,
                    "set_buffer_size": 1,
                    "set_delay": 1,
                    "set_execution_time": 1,
                    "set_flag": 1,
                    "set_interrupt_delay": 1,
                    "set_sample_rate": 1,
                    "set_sleep_time": 1,
                    "set_time": 1,
                    "set_time_delay": 1,
                    "set_time_limit": 1,
                    "set_timeout": 3,
                    "set_timer": 11,
                    "wait": 2
                },
                "_DAT_40023c00": {
                    "config_flag": 1,
                    "configuration_flags": 1,
                    "device_flags": 1,
                    "flag": 1,
                    "system_flags": 3,
                    "system_status": 1
                },
                "param_1": {
                    "buffer_size": 1,
                    "delay": 1,
                    "delay_duration": 1,
                    "delay_ms": 1,
                    "delay_time": 1,
                    "duration": 2,
                    "execution_time": 1,
                    "initialization_duration": 1,
                    "milliseconds": 5,
                    "num_of_samples": 1,
                    "param": 1,
                    "param1": 1,
                    "time": 1,
                    "time_delay": 2,
                    "time_limit_ms": 1,
                    "time_period": 1,
                    "timeout": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08006d72",
                "FUN_08006ce0",
                "FUN_08005a50"
            ],
            "calling": [
                "FUN_08007540"
            ],
            "code": "\n\n\nundefined4 initialize_and_configure_system_080059b4(void)\n\n{\n  _DAT_40023c00 = _DAT_40023c00 | 0x700;\n  FUN_08006d72(16000);\n  FUN_08006ce0(3);\n  FUNC_08005a50();\n  return 0;\n}\n\n",
            "current_name": "initialize_and_configure_system_080059b4",
            "entrypoint": "0x080059b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080059b4": "initialize_and_configure_system_080059b4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080059f8": {
            "additional_data": {
                "FUNC_08005a5c": {
                    "call_subfunction": 1,
                    "do_additional_processing": 2,
                    "do_custom_processing": 1,
                    "do_something": 1,
                    "execute_additional_function": 1,
                    "execute_initialization": 1,
                    "perform_action": 6,
                    "perform_additional_setup": 1,
                    "perform_additional_tasks": 3,
                    "perform_calculation": 1,
                    "perform_operation": 2,
                    "perform_operations": 3,
                    "perform_task": 4,
                    "process_data": 4
                },
                "FUN_080059f8": {
                    "initialize_data": 28,
                    "initialize_system_state": 1,
                    "initialize_variables": 2
                },
                "_DAT_40023810": {
                    "data3": 6,
                    "data_3": 5,
                    "data_var3": 1,
                    "data_variable3": 1,
                    "state_variable_3": 1,
                    "var3": 1,
                    "variable3": 1
                },
                "_DAT_40023814": {
                    "data4": 6,
                    "data_4": 5,
                    "data_var4": 1,
                    "data_variable4": 1,
                    "state_variable_4": 1,
                    "var4": 1,
                    "variable4": 1
                },
                "_DAT_40023818": {
                    "data5": 6,
                    "data_5": 5,
                    "data_var5": 1,
                    "data_variable5": 1,
                    "state_variable_5": 1,
                    "var5": 1,
                    "variable5": 1
                },
                "_DAT_40023820": {
                    "data1": 6,
                    "data_1": 5,
                    "data_var1": 1,
                    "data_variable1": 1,
                    "state_variable_1": 1,
                    "var1": 1,
                    "variable1": 1
                },
                "_DAT_40023824": {
                    "data2": 6,
                    "data_2": 5,
                    "data_var2": 1,
                    "data_variable2": 1,
                    "state_variable_2": 1,
                    "var2": 1,
                    "variable2": 1
                }
            },
            "called": [
                "FUN_08005a5c"
            ],
            "calling": [],
            "code": "\n\n\nundefined4 initialize_data_080059f8(void)\n\n{\n  _DAT_40023820 = 0;\n  _DAT_40023824 = 0;\n  _DAT_40023810 = 0;\n  _DAT_40023814 = 0;\n  _DAT_40023818 = 0;\n  FUNC_08005a5c();\n  return 0;\n}\n\n",
            "current_name": "initialize_data_080059f8",
            "entrypoint": "0x080059f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080059f8": "initialize_data_080059f8"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005a50": {
            "called": [],
            "calling": [
                "FUN_080059b4"
            ],
            "code": "\nvoid FUNC_08005a50(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005a50",
            "entrypoint": "0x08005a50",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005a50": "FUNC_08005a50"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005a5c": {
            "called": [],
            "calling": [
                "FUN_080059f8"
            ],
            "code": "\nvoid FUNC_08005a5c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005a5c",
            "entrypoint": "0x08005a5c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005a5c": "FUNC_08005a5c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005a68": {
            "additional_data": {
                "": {
                    "": 1
                },
                "DAT_20000e48": {
                    "counter": 19,
                    "data_counter": 6,
                    "data_value": 2
                },
                "FUN_08005a68": {
                    "increment_counter": 21,
                    "increment_data_counter": 8,
                    "increment_data_value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08007756"
            ],
            "code": "\nvoid increment_data_counter_08005a68(void)\n\n{\n  DAT_20000e48 = DAT_20000e48 + 1;\n  return;\n}\n\n",
            "current_name": "increment_data_counter_08005a68",
            "entrypoint": "0x08005a68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005a68": "increment_data_counter_08005a68"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005a84": {
            "additional_data": {
                "DAT_20000e48": {
                    "data": 14,
                    "global_value": 2,
                    "global_variable": 4,
                    "global_variable_value": 2,
                    "memory_value": 1,
                    "return_value": 1,
                    "value": 1
                },
                "FUN_08005a84": {
                    "get_data": 12,
                    "get_data_from_memory": 2,
                    "get_data_value": 6,
                    "get_global_value": 2,
                    "get_global_variable": 3,
                    "get_global_variable_value": 3,
                    "get_memory_value": 1,
                    "get_return_value": 1,
                    "get_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08000268",
                "FUN_08007756",
                "FUN_08005a98",
                "FUN_08005cec",
                "FUN_0800618c"
            ],
            "code": "\nundefined4 get_data_value_08005a84(void)\n\n{\n  return DAT_20000e48;\n}\n\n",
            "current_name": "get_data_value_08005a84",
            "entrypoint": "0x08005a84",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005a84": "get_data_value_08005a84"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005a98": {
            "additional_data": {
                "FUN_08005a98": {
                    "calculate_loop": 1,
                    "calculate_threshold": 1,
                    "check_limit": 1,
                    "check_param_boundaries": 1,
                    "check_param_range": 1,
                    "check_param_sum": 1,
                    "check_range_and_return": 1,
                    "compare_values_and_return_if_greater": 1,
                    "find_boundary": 1,
                    "find_end": 1,
                    "find_limit": 2,
                    "find_target_value": 2,
                    "find_threshold": 1,
                    "find_upper_bound": 2,
                    "find_upper_limit": 1,
                    "find_value_in_range": 1,
                    "perform_comparison": 1,
                    "perform_loop": 1,
                    "perform_range_check": 1,
                    "process_data": 1,
                    "process_param_and_add": 1,
                    "reverse_and_compare": 1,
                    "reverse_and_increment": 1,
                    "reverse_and_limit": 1,
                    "reverse_and_limit_loop": 1,
                    "reverse_in_range": 1
                },
                "iVar1": {
                    "base_value": 5,
                    "first_return_value": 1,
                    "initial_value": 22,
                    "result1": 1,
                    "start": 1,
                    "starting_value": 1
                },
                "param_1": {
                    "comparison_value": 1,
                    "data_size": 1,
                    "desired_value": 1,
                    "increment_limit": 1,
                    "input": 1,
                    "input_number": 1,
                    "input_value": 5,
                    "limit": 6,
                    "num_iterations": 1,
                    "range_boundary": 1,
                    "target": 5,
                    "target_value": 4,
                    "threshold": 2,
                    "value_to_compare": 1
                },
                "uVar2": {
                    "current": 1,
                    "current_value": 17,
                    "generated_value": 1,
                    "rand_value": 1,
                    "random_value": 8,
                    "result2": 1,
                    "second_return_value": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08005a84"
            ],
            "calling": [
                "FUN_080002a0"
            ],
            "code": "\nvoid find_upper_limit_08005a98(int limit)\n\n{\n  int initial_value;\n  uint current_value;\n  \n  initial_value = FUN_08005a84();\n  do {\n    current_value = FUN_08005a84();\n  } while (current_value < (uint)(limit + initial_value));\n  return;\n}\n\n",
            "current_name": "find_upper_limit_08005a98",
            "entrypoint": "0x08005a98",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005a98": "find_upper_limit_08005a98",
                "iVar1": "initial_value",
                "param_1": "limit",
                "uVar2": "current_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005bdc": {
            "additional_data": {
                "0x1fff1c00": {
                    "address2": 1,
                    "address_offset2": 1,
                    "buffer2": 1
                },
                "0xe000ed14": {
                    "address1": 1,
                    "address_offset1": 1,
                    "buffer1": 1
                },
                "FUN_08005bdc": {
                    "set_byte_value": 1,
                    "set_memory": 1,
                    "set_memory_value": 1,
                    "store_byte": 1,
                    "store_byte_value": 2,
                    "store_data": 2,
                    "store_data_at_address": 1,
                    "store_parameter_in_memory": 1,
                    "store_shifted_value": 1,
                    "store_value": 1,
                    "update_buffer": 1,
                    "update_data_entry": 1,
                    "update_memory": 5,
                    "update_memory_address": 1,
                    "update_memory_value": 2,
                    "update_value_at_address": 1,
                    "write_byte_to_memory": 3,
                    "write_to_memory": 5
                },
                "char": {
                    "character": 1
                },
                "param_1": {
                    "address": 11,
                    "byte_value": 7,
                    "entry_index": 1,
                    "input": 1,
                    "input_bit": 1,
                    "input_byte": 8,
                    "input_character": 1,
                    "offset": 1
                },
                "param_2": {
                    "data": 7,
                    "data_value": 3,
                    "input_number": 1,
                    "input_value": 4,
                    "int_value": 1,
                    "integer_value": 1,
                    "shifted_value": 2,
                    "uint_value": 1,
                    "value": 11
                }
            },
            "called": [],
            "calling": [
                "FUN_08005c30"
            ],
            "code": "\nvoid write_byte_to_memory_08005bdc(byte address,uint value)\n\n{\n  if ((character)address < '\\0') {\n    *(character *)((address & 0xf) + 0xe000ed14) = (character)((value & 0xff) << 4);\n  }\n  else {\n    *(character *)((character)address + -0x1fff1c00) = (character)((value & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "current_name": "write_byte_to_memory_08005bdc",
            "entrypoint": "0x08005bdc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005bdc": "write_byte_to_memory_08005bdc",
                "char": "character",
                "param_1": "address",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005c30": {
            "additional_data": {
                "FUN_08005bdc": {
                    "perform_initialization": 1,
                    "perform_operation": 2,
                    "process_data": 2,
                    "set_bitmask": 1,
                    "set_byte_and_unsigned_int": 1,
                    "set_byte_and_value": 1,
                    "set_byte_parameter": 1,
                    "set_byte_value": 1,
                    "set_data": 1,
                    "set_options": 1,
                    "set_parameters": 1,
                    "set_register": 1,
                    "set_registers": 1,
                    "update_byte": 1,
                    "update_some_value": 1
                },
                "FUN_08005c30": {
                    "check_and_initialize": 2,
                    "check_and_initialize_memory": 1,
                    "check_and_initialize_param": 2,
                    "check_and_initialize_value": 3,
                    "check_and_set_data": 1,
                    "check_and_set_global_values": 1,
                    "check_and_set_param": 4,
                    "check_and_set_parameter": 1,
                    "check_and_set_params": 1,
                    "check_and_set_values": 3,
                    "check_and_update_param": 1,
                    "check_is_valid_value": 1,
                    "check_param_boundaries": 1,
                    "check_param_bounds": 1,
                    "check_range_and_set_registers": 1,
                    "check_value_range": 1,
                    "decrement_and_set_registers": 1,
                    "is_param_valid": 3,
                    "is_valid_param": 1,
                    "validate_input_value": 1
                },
                "PARAM_1": {
                    "operation_param_1": 1
                },
                "PARAM_2": {
                    "operation_param_2": 1
                },
                "_DAT_e000e010": {
                    "another_data": 1,
                    "bit_value": 1,
                    "counter": 1,
                    "data2": 1,
                    "data_2": 1,
                    "error_code": 1,
                    "new_value3": 1,
                    "option2": 1,
                    "param_b": 1,
                    "register3": 1,
                    "register_2": 1,
                    "register_val_3": 1,
                    "result2": 1,
                    "value_two": 1
                },
                "_DAT_e000e014": {
                    "adjusted_param": 1,
                    "adjusted_value": 1,
                    "modified_input": 2,
                    "modified_param": 1,
                    "modified_value": 3,
                    "new_value": 2,
                    "previous_value": 1,
                    "register1": 1,
                    "register_val_1": 1,
                    "updated_parameter": 1,
                    "updated_value": 2
                },
                "_DAT_e000e018": {
                    "additional_data": 1,
                    "data1": 1,
                    "data_1": 1,
                    "new_value2": 1,
                    "option1": 1,
                    "param_a": 1,
                    "register2": 1,
                    "register_1": 1,
                    "register_val_2": 1,
                    "reserved_value": 1,
                    "reset_value": 1,
                    "result1": 1,
                    "some_data": 1,
                    "value_one": 1
                },
                "bVar1": {
                    "is_in_range": 5,
                    "is_input_valid": 3,
                    "is_less_than_range": 1,
                    "is_less_than_threshold": 2,
                    "is_param_valid": 2,
                    "is_valid": 6,
                    "is_valid_value": 2,
                    "is_value_valid": 3,
                    "is_within_bounds": 1,
                    "is_within_range": 4
                },
                "param_1": {
                    "byte_param": 2,
                    "byte_val": 1,
                    "byte_value": 2,
                    "data": 1,
                    "data_byte": 1,
                    "input": 2,
                    "input_param": 6,
                    "input_value": 9,
                    "param1": 1,
                    "param_one": 1,
                    "value": 4,
                    "value_to_check": 1
                },
                "param_2": {
                    "bitmask": 1,
                    "byte_param": 1,
                    "byte_value": 1,
                    "data_value": 1,
                    "length": 1,
                    "param2": 1,
                    "param_two": 1,
                    "uint_param": 1,
                    "uint_val": 1,
                    "value_param": 1,
                    "value_threshold": 1
                }
            },
            "called": [
                "FUN_08005bdc"
            ],
            "calling": [
                "FUN_0800618c"
            ],
            "code": "\n\n\nbool check_and_initialize_value_08005c30(int input_value)\n\n{\n  bool is_valid;\n  \n  is_valid = input_value - 1U < 0x1000000;\n  if (is_valid) {\n    _DAT_e000e014 = input_value + -1;\n    FUN_08005bdc(0xffffffff,0xf);\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n  }\n  return !is_valid;\n}\n\n",
            "current_name": "check_and_initialize_value_08005c30",
            "entrypoint": "0x08005c30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005c30": "check_and_initialize_value_08005c30",
                "bVar1": "is_valid",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005cec": {
            "additional_data": {
                "DAT_40007000": {
                    "system_control_register": 1
                },
                "DAT_40023800_0": {
                    "part0": 1
                },
                "DAT_40023800_1": {
                    "part1": 1,
                    "status_register_byte1": 1,
                    "status_register_part1": 1,
                    "value3": 1
                },
                "DAT_40023800_2": {
                    "constant4": 1,
                    "part2": 1,
                    "register3_lower_bits": 1,
                    "register3_part2": 1,
                    "status_register_byte2": 1,
                    "status_register_part2": 1,
                    "value2": 1
                },
                "DAT_40023800_3": {
                    "bit3": 1,
                    "constant3": 1,
                    "device_settings_bits": 1,
                    "flag3_value": 1,
                    "hardware_register2_3": 1,
                    "part3": 1,
                    "reg_3_0": 1,
                    "register3": 1,
                    "register3_3": 1,
                    "register3_3rd_byte": 1,
                    "register3_lower_bits": 1,
                    "register3_part1": 1,
                    "status_register1_upper": 1,
                    "status_register_byte3": 1,
                    "status_register_part3": 1,
                    "value1": 1
                },
                "DAT_40023840": {
                    "control_register3": 1
                },
                "DAT_40023870": {
                    "constant6": 1
                },
                "DAT_40023870_1": {
                    "bit1": 1,
                    "constant5": 1,
                    "device_settings_value": 1,
                    "hardware_register3_1": 1,
                    "part8": 1,
                    "reg_4_1": 1,
                    "register3_byte1": 1,
                    "register4_1": 1,
                    "register4_1st_byte": 1,
                    "register4_part1": 1,
                    "register9_lower_bits": 1,
                    "register_1_part1": 1,
                    "status_register2_upper": 1,
                    "value4": 1
                },
                "DAT_40023874": {
                    "register_2": 1
                },
                "DAT_40023874_2": {
                    "register5": 1
                },
                "D_40023800_3": {
                    "bit3_data": 1
                },
                "D_40023840": {
                    "some_data": 1
                },
                "D_40023870_1": {
                    "bit1_data": 1
                },
                "D_40023874": {
                    "device_status2": 1
                },
                "FUN_08005a84": {
                    "generate_random_value": 2,
                    "get_random_value": 1,
                    "random_value": 1,
                    "some_function": 1
                },
                "FUN_08005cec": {
                    "check_and_handle_flags": 1,
                    "check_and_process_flags": 2,
                    "check_and_update_settings": 1,
                    "check_and_verify_data": 1,
                    "check_conditions": 5,
                    "check_conditions_and_actions": 1,
                    "check_conditions_and_perform_actions": 1,
                    "check_flags": 7,
                    "check_flags_and_conditions": 1,
                    "check_hardware_configuration": 1,
                    "check_input_flags": 1,
                    "check_params": 3,
                    "check_status": 1,
                    "process_flags": 1,
                    "process_input": 1,
                    "process_params": 1,
                    "validate_configuration": 1
                },
                "_DAT_40007000": {
                    "control_register4": 1,
                    "data_flag2": 1,
                    "device_control2": 1,
                    "device_status": 1,
                    "reg6": 1,
                    "reg_6": 1,
                    "register2": 1,
                    "register5": 1,
                    "register6": 3,
                    "register8": 2
                },
                "_DAT_40023800": {
                    "device_settings": 1,
                    "flags2": 1,
                    "global_flags": 1,
                    "hardware_register2": 1,
                    "reg3": 1,
                    "reg_3": 1,
                    "register": 1,
                    "register3": 6,
                    "status_register": 2,
                    "status_register1": 1,
                    "system_control": 1
                },
                "_DAT_40023804": {
                    "another_register": 1,
                    "constant2": 1,
                    "control_register2": 1,
                    "device_flags": 2,
                    "flag_register": 1,
                    "flag_register2": 1,
                    "hardware_register3": 1,
                    "reg2": 1,
                    "reg_2": 1,
                    "register2": 6,
                    "system_status": 1
                },
                "_DAT_40023808": {
                    "constant1": 1,
                    "control_register": 1,
                    "control_register1": 1,
                    "device_status": 2,
                    "flag_register1": 1,
                    "hardware_register1": 1,
                    "reg1": 1,
                    "reg_1": 1,
                    "register1": 6,
                    "some_register": 1,
                    "system_settings": 1
                },
                "_DAT_40023840": {
                    "device_control1": 1,
                    "flag3_status": 1,
                    "other_control_register": 1,
                    "reg5": 1,
                    "reg_5": 1,
                    "register1": 1,
                    "register4": 1,
                    "register5": 3,
                    "register7": 2
                },
                "_DAT_40023870": {
                    "device_control3": 1,
                    "device_status3": 1,
                    "flag3_status2": 1,
                    "reg7": 1,
                    "reg_7": 1,
                    "register3": 1,
                    "register6": 1,
                    "register7": 2,
                    "register9": 2,
                    "register_1": 1,
                    "status_register2": 1
                },
                "_DAT_40023874": {
                    "constant7": 1,
                    "device_control4": 1,
                    "flag4_status": 1,
                    "flag_register3": 1,
                    "reg4": 1,
                    "reg_8": 1,
                    "register4": 1,
                    "register6": 1,
                    "register7": 1,
                    "register8": 2,
                    "status_register3": 1
                },
                "_DAT_42470000": {
                    "data_flag": 1,
                    "device_control5": 1,
                    "flag1": 3,
                    "flag2_value": 1,
                    "memory_flag1": 1,
                    "register4": 2,
                    "register8": 1,
                    "register9": 2
                },
                "_DAT_42470060": {
                    "data_flag3": 1,
                    "device_control7": 1,
                    "flag2": 1,
                    "flag3": 2,
                    "flag5_value": 1,
                    "memory_flag2": 1,
                    "register10": 2,
                    "register11": 2
                },
                "_DAT_42470e80": {
                    "device_control6": 1,
                    "flag2": 2,
                    "flag3": 1,
                    "flag4_value": 1,
                    "register10": 2,
                    "register5": 1,
                    "register6": 1,
                    "register9": 1
                },
                "checkFlags": {
                    "check_flags": 1
                },
                "iVar1": {
                    "count": 1,
                    "counter": 6,
                    "counter1": 1,
                    "iteration_count": 1,
                    "result": 16,
                    "temp1": 1,
                    "temp_var": 2,
                    "threshold": 1,
                    "value1": 1
                },
                "param_1": {
                    "config_params": 1,
                    "data": 1,
                    "flags": 20,
                    "hardware_config": 1,
                    "input_flags": 1,
                    "param_array": 1,
                    "params": 4,
                    "settings": 1,
                    "status": 1
                },
                "uVar2": {
                    "counter2": 1,
                    "random_num": 1,
                    "random_value": 17,
                    "temp": 2,
                    "temp2": 1,
                    "temp_var2": 2,
                    "value": 5,
                    "value2": 1
                },
                "value1": {
                    "value1": 1
                },
                "value2": {
                    "value2": 1
                },
                "value3": {
                    "value3": 1
                },
                "value4": {
                    "value4": 1
                }
            },
            "called": [
                "FUN_08005a84"
            ],
            "calling": [
                "FUN_08007436"
            ],
            "code": "\n\n\nundefined4 check_and_process_flags_08005cec(uint *flags)\n\n{\n  int result;\n  uint random_value;\n  \n  if ((*flags & 1) != 0) {\n    if (((_DAT_40023808 & 0xc) == 4) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0x400000)))) {\n      if (((_DAT_40023800 & 0x20000) != 0) && (flags[1] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      _DAT_40023800 = (uint3)_DAT_40023800;\n      result = FUN_08005a84();\n      while ((_DAT_40023800 & 0x20000) != 0) {\n        random_value = FUN_08005a84();\n        if (result + 5000U <= random_value) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = CONCAT13(DAT_40023800_3,CONCAT12((char)flags[1],_DAT_40023800));\n      if (flags[1] == 1) {\n        result = FUN_08005a84();\n        while ((_DAT_40023800 & 0x20000) == 0) {\n          random_value = FUN_08005a84();\n          if (result + 5000U <= random_value) {\n            return 3;\n          }\n        }\n      }\n      else {\n        result = FUN_08005a84();\n        while ((_DAT_40023800 & 0x20000) != 0) {\n          random_value = FUN_08005a84();\n          if (result + 5000U <= random_value) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40023808 & 0xc) == 0) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0)))) {\n      if (((_DAT_40023800 & 2) != 0) && (flags[3] != 1)) {\n        return 1;\n      }\n    }\n    else if (flags[3] == 0) {\n      _DAT_42470000 = 0;\n      result = FUN_08005a84();\n      while ((_DAT_40023800 & 2) != 0) {\n        random_value = FUN_08005a84();\n        if (result + 100U <= random_value) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470000 = 1;\n      result = FUN_08005a84();\n      while ((_DAT_40023800 & 2) == 0) {\n        random_value = FUN_08005a84();\n        if (result + 100U <= random_value) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = flags[4] << 3 | _DAT_40023800 & 0xffffff07;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flags[5] == 0) {\n      _DAT_42470e80 = 0;\n      result = FUN_08005a84();\n      while ((_DAT_40023874 & 2) != 0) {\n        random_value = FUN_08005a84();\n        if (result + 100U <= random_value) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470e80 = 1;\n      result = FUN_08005a84();\n      while ((_DAT_40023874 & 2) == 0) {\n        random_value = FUN_08005a84();\n        if (result + 100U <= random_value) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40023840 = _DAT_40023840 | 0x10000000;\n    _DAT_40007000 = _DAT_40007000 | 0x100;\n    result = FUN_08005a84();\n    while ((_DAT_40007000 & 0x100) == 0) {\n      random_value = FUN_08005a84();\n      if (result + 100U <= random_value) {\n        return 3;\n      }\n    }\n    _DAT_40023870 = _DAT_40023870 & 0xffffff00;\n    result = FUN_08005a84();\n    while ((_DAT_40023870 & 2) != 0) {\n      random_value = FUN_08005a84();\n      if (result + 5000U <= random_value) {\n        return 3;\n      }\n    }\n    _DAT_40023870 = CONCAT31(DAT_40023870_1,(char)flags[2]);\n    if (flags[2] == 1) {\n      result = FUN_08005a84();\n      while ((_DAT_40023870 & 2) == 0) {\n        random_value = FUN_08005a84();\n        if (result + 5000U <= random_value) {\n          return 3;\n        }\n      }\n    }\n    else {\n      result = FUN_08005a84();\n      while ((_DAT_40023870 & 2) != 0) {\n        random_value = FUN_08005a84();\n        if (result + 5000U <= random_value) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (flags[6] != 0) {\n    if ((_DAT_40023808 & 0xc) == 8) {\n      return 1;\n    }\n    if (flags[6] == 2) {\n      _DAT_42470060 = 0;\n      result = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) != 0) {\n        random_value = FUN_08005a84();\n        if (result + 100U <= random_value) {\n          return 3;\n        }\n      }\n      _DAT_40023804 =\n           flags[0xb] << 0x18 |\n           flags[8] | flags[9] << 6 | ((flags[10] >> 1) - 1) * 0x10000 | flags[7] |\n           0x20000000;\n      _DAT_42470060 = 1;\n      result = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) == 0) {\n        random_value = FUN_08005a84();\n        if (result + 100U <= random_value) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470060 = 0;\n      result = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) != 0) {\n        random_value = FUN_08005a84();\n        if (result + 100U <= random_value) {\n          return 3;\n        }\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "check_and_process_flags_08005cec",
            "entrypoint": "0x08005cec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005cec": "check_and_process_flags_08005cec",
                "iVar1": "result",
                "param_1": "flags",
                "uVar2": "random_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800618c": {
            "additional_data": {
                "DAT_40023c00_1": {
                    "counter_offset": 1,
                    "flags_temp_1": 1,
                    "global_flag1": 1,
                    "register2": 1
                },
                "FAT_08005a84": {
                    "random_function": 1
                },
                "FAT_08005c30": {
                    "process_data": 1
                },
                "FAT_08006628": {
                    "get_timestamp": 1
                },
                "FUN_08005a84": {
                    "generate_random_number": 1,
                    "generate_random_value": 1,
                    "get_current_time": 3,
                    "get_current_value": 1,
                    "get_elapsed_time": 3,
                    "get_random_number": 4,
                    "get_random_value": 1,
                    "get_value": 1,
                    "wait": 1,
                    "wait_for_condition": 1
                },
                "FUN_08005c30": {
                    "do_something": 1,
                    "execute_task": 1,
                    "log_execution_time": 1,
                    "perform_action": 1,
                    "perform_calculation": 3,
                    "perform_operation": 3,
                    "perform_task": 2,
                    "process_data": 3,
                    "process_time_data": 1
                },
                "FUN_0800618c": {
                    "check_and_adjust_params": 1,
                    "check_and_execute_function": 1,
                    "check_and_process_data": 3,
                    "check_and_update_config": 1,
                    "check_and_update_parameters": 2,
                    "check_and_update_settings": 2,
                    "check_conditions_and_execute": 1,
                    "check_param_and_execute": 1,
                    "check_param_and_run": 1,
                    "check_valid_input": 1,
                    "execute_command": 1,
                    "execute_operation": 1,
                    "handle_data": 1,
                    "process_data": 6,
                    "validate_and_execute": 1,
                    "validate_and_execute_operation": 1,
                    "validate_and_perform_operation": 1,
                    "validate_input": 1,
                    "verify_access": 1
                },
                "FUN_08006628": {
                    "get_current_time": 10,
                    "get_current_time_millis": 1,
                    "get_current_timestamp": 1,
                    "get_elapsed_time": 4
                },
                "_DAT_40023800": {
                    "flags": 1,
                    "hardware_flags": 1,
                    "io_register": 1,
                    "register3": 1
                },
                "_DAT_40023808": {
                    "register4": 1,
                    "result_flags": 1,
                    "status": 1,
                    "status_register": 1
                },
                "_DAT_40023c00": {
                    "control_register": 1,
                    "counter": 1,
                    "flags_temp": 1,
                    "global_flag": 1,
                    "register1": 1
                },
                "iVar1": {
                    "interval": 1,
                    "iteration_variable": 1,
                    "random_value": 1,
                    "result": 22,
                    "temp_var": 2,
                    "temp_var1": 1,
                    "timeout": 1
                },
                "param_1": {
                    "command_params": 1,
                    "config_data": 1,
                    "config_params": 1,
                    "data": 8,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "flags": 6,
                    "input_data": 2,
                    "input_parameters": 2,
                    "input_params": 1,
                    "operation_params": 1,
                    "param_array": 1,
                    "parameters": 1,
                    "params": 1,
                    "settings": 1,
                    "settings_array": 1
                },
                "param_2": {
                    "config_param_count": 1,
                    "config_size": 1,
                    "data_size": 4,
                    "flag_count": 1,
                    "input_length": 1,
                    "input_size": 1,
                    "length": 3,
                    "num_flags": 1,
                    "num_params": 1,
                    "operation_code": 1,
                    "param_count": 2,
                    "param_length": 1,
                    "param_size": 1,
                    "param_value": 1,
                    "settings_size": 1,
                    "size": 8,
                    "value": 2
                },
                "uVar2": {
                    "current_time": 12,
                    "current_value": 3,
                    "elapsed_time": 1,
                    "random_value": 7,
                    "random_value_2": 1,
                    "random_var": 1,
                    "random_var1": 1,
                    "result": 1,
                    "temp_var2": 1,
                    "temp_variable_1": 1,
                    "time": 1,
                    "timer_value": 1
                },
                "uVar3": {
                    "end_time": 3,
                    "limit": 1,
                    "limit_value": 1,
                    "max_time": 1,
                    "max_value": 2,
                    "random_var2": 1,
                    "temp_var3": 1,
                    "temp_variable_2": 1,
                    "threshold": 3,
                    "threshold_value": 1,
                    "time_limit": 1,
                    "timeout": 14,
                    "timeout_value": 1
                },
                "uVar4": {
                    "current_time": 4,
                    "current_time_millis": 1,
                    "elapsed_time": 3,
                    "execution_time": 3,
                    "result": 1,
                    "temp_var4": 1,
                    "temp_variable_3": 1,
                    "time": 4,
                    "time_elapsed": 4,
                    "timestamp": 7,
                    "timestamp_millis": 1
                }
            },
            "called": [
                "FUN_08006628",
                "FUN_08005a84",
                "FUN_08005c30"
            ],
            "calling": [
                "FUN_08007436"
            ],
            "code": "\n\n\nundefined4 check_and_process_data_0800618c(uint *data,uint size)\n\n{\n  int result;\n  uint current_time;\n  uint timeout;\n  undefined8 timestamp;\n  \n  if ((_DAT_40023c00 & 0xf) < size) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)size);\n    if (size != (size & 0xf)) {\n      return 1;\n    }\n    if ((*data & 1) != 0) {\n      if (data[1] == 1) {\n        if ((_DAT_40023800 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if ((data[1] != 2) && ((_DAT_40023800 & 2) == 0)) {\n        return 1;\n      }\n      _DAT_40023808 = data[1] | _DAT_40023808 & 0xfffffffc;\n      result = FUN_08005a84();\n      timeout = result + 5000;\n      if (data[1] == 1) {\n        while ((_DAT_40023808 & 0xc) != 4) {\n          current_time = FUN_08005a84();\n          if (timeout <= current_time) {\n            return 3;\n          }\n        }\n      }\n      else if (data[1] == 2) {\n        while ((_DAT_40023808 & 0xc) != 8) {\n          current_time = FUN_08005a84();\n          if (timeout <= current_time) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((_DAT_40023808 & 0xc) != 0) {\n          current_time = FUN_08005a84();\n          if (timeout <= current_time) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  else {\n    if ((*data & 1) != 0) {\n      if (data[1] == 1) {\n        if ((_DAT_40023800 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if (data[1] == 2) {\n        if ((_DAT_40023800 & 0x2000000) == 0) {\n          return 1;\n        }\n      }\n      else if ((_DAT_40023800 & 2) == 0) {\n        return 1;\n      }\n      _DAT_40023808 = data[1] | _DAT_40023808 & 0xfffffffc;\n      result = FUN_08005a84();\n      timeout = result + 5000;\n      if (data[1] == 1) {\n        while ((_DAT_40023808 & 0xc) != 4) {\n          current_time = FUN_08005a84();\n          if (timeout <= current_time) {\n            return 3;\n          }\n        }\n      }\n      else if (data[1] == 2) {\n        while ((_DAT_40023808 & 0xc) != 8) {\n          current_time = FUN_08005a84();\n          if (timeout <= current_time) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((_DAT_40023808 & 0xc) != 0) {\n          current_time = FUN_08005a84();\n          if (timeout <= current_time) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)size);\n    if (size != (size & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*data & 2) != 0) {\n    _DAT_40023808 = data[2] | _DAT_40023808 & 0xffffff0f;\n  }\n  if ((*data & 4) != 0) {\n    _DAT_40023808 = data[3] | _DAT_40023808 & 0xffffe3ff;\n  }\n  if ((*data & 8) != 0) {\n    _DAT_40023808 = data[4] << 3 | _DAT_40023808 & 0xffff1fff;\n  }\n  timestamp = FUN_08006628();\n  FUN_08005c30((uint)timestamp / 1000,(int)((ulonglong)timestamp >> 0x20),(uint)timestamp * 0x10624dd3);\n  return 0;\n}\n\n",
            "current_name": "check_and_process_data_0800618c",
            "entrypoint": "0x0800618c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800618c": "check_and_process_data_0800618c",
                "iVar1": "result",
                "param_1": "data",
                "param_2": "size",
                "uVar2": "current_time",
                "uVar3": "timeout",
                "uVar4": "timestamp"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800640c": {
            "additional_data": {
                "FUN_0800640c": {
                    "configure_hardware": 1,
                    "handle_parameters": 1,
                    "handle_params": 1,
                    "initialize_data": 3,
                    "initialize_flags": 4,
                    "initialize_memory": 1,
                    "initialize_parameters": 1,
                    "initialize_registers": 1,
                    "initialize_settings": 1,
                    "modify_data": 1,
                    "process_data": 1,
                    "update_config": 1,
                    "update_configuration": 4,
                    "update_data": 5,
                    "update_flags_and_values": 2,
                    "update_settings": 3
                },
                "FUN_08006e88": {
                    "change_values": 1,
                    "perform_action": 1,
                    "set_values": 1,
                    "update_values": 1
                },
                "local_10": {
                    "buffer4": 1,
                    "config_value3": 1,
                    "constant2": 6,
                    "constant3": 10,
                    "count2": 1,
                    "flag4": 1,
                    "flag_value5": 1,
                    "local_var2": 1,
                    "num2": 1,
                    "number2": 1,
                    "setting3": 1,
                    "val2": 1,
                    "value2": 1,
                    "value4": 1,
                    "value5": 1,
                    "var2": 2
                },
                "local_14": {
                    "buffer3": 1,
                    "config_value2": 1,
                    "constant3": 5,
                    "constant4": 9,
                    "flag3": 1,
                    "flag_value6": 1,
                    "local_var3": 1,
                    "setting4": 1,
                    "temp1": 2,
                    "unused1": 2,
                    "val3": 1,
                    "value3": 1,
                    "value4": 1,
                    "value5": 1,
                    "var3": 2,
                    "variable": 1
                },
                "local_18": {
                    "buffer2": 1,
                    "config_value1": 1,
                    "constant1": 6,
                    "constant2": 10,
                    "count1": 1,
                    "flag2": 1,
                    "flag_value4": 1,
                    "local_var1": 1,
                    "num1": 1,
                    "number1": 1,
                    "setting2": 1,
                    "val1": 1,
                    "value1": 1,
                    "value3": 2,
                    "var1": 2
                },
                "local_1c": {
                    "buffer1": 1,
                    "buffer_size": 2,
                    "config_size": 1,
                    "config_value": 1,
                    "constant": 1,
                    "constant1": 9,
                    "data_size": 3,
                    "flag1": 1,
                    "flag_bit": 1,
                    "flag_value3": 1,
                    "mask": 1,
                    "memory_size": 1,
                    "setting1": 1,
                    "size": 6
                },
                "local_c": {
                    "buffer5": 1,
                    "config_value4": 1,
                    "constant4": 4,
                    "constant5": 9,
                    "flag5": 1,
                    "flag_value7": 1,
                    "local_var4": 1,
                    "setting5": 1,
                    "temp2": 2,
                    "unused2": 2,
                    "val4": 1,
                    "value4": 1,
                    "value6": 2,
                    "var4": 2,
                    "variable2": 1
                },
                "param_1": {
                    "address1": 1,
                    "condition": 2,
                    "configuration_option": 1,
                    "flag": 18,
                    "flag_type": 2,
                    "flag_value": 1,
                    "is_zero": 1,
                    "mode": 2,
                    "option": 2,
                    "param1": 1
                },
                "param_2": {
                    "address2": 1,
                    "bits1": 1,
                    "data1": 2,
                    "flag_value1": 2,
                    "param2": 2,
                    "value1": 23
                },
                "param_3": {
                    "bits2": 1,
                    "data2": 2,
                    "flag_value2": 2,
                    "param3": 2,
                    "value2": 24
                }
            },
            "called": [
                "FUN_08006e88"
            ],
            "calling": [],
            "code": "\n\n\nvoid update_data_0800640c(int flag,uint value1,uint value2)\n\n{\n  undefined4 constant1;\n  undefined4 constant2;\n  undefined4 constant4;\n  undefined4 constant3;\n  undefined4 constant5;\n  \n  if (flag == 0) {\n    _DAT_40023830 = _DAT_40023830 | 1;\n    constant1 = 0x100;\n    constant2 = 2;\n    constant3 = 3;\n    constant4 = 0;\n    constant5 = 0;\n    FUN_08006e88(0x40020000,&constant1);\n    _DAT_40023808 = value2 | value1 | _DAT_40023808 & 0xf89fffff;\n  }\n  else {\n    _DAT_40023830 = _DAT_40023830 | 4;\n    constant1 = 0x200;\n    constant2 = 2;\n    constant3 = 3;\n    constant4 = 0;\n    constant5 = 0;\n    FUN_08006e88(0x40020800,&constant1);\n    _DAT_40023808 = value1 | value2 << 3 | _DAT_40023808 & 0x7ffffff;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_0800640c",
            "entrypoint": "0x0800640c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800640c": "update_data_0800640c",
                "local_10": "constant3",
                "local_14": "constant4",
                "local_18": "constant2",
                "local_1c": "constant1",
                "local_c": "constant5",
                "param_1": "flag",
                "param_2": "value1",
                "param_3": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080064ec": {
            "additional_data": {
                "FUN_080064ec": {
                    "calculate_clock_cycle": 1,
                    "calculate_clock_frequency": 13,
                    "calculate_clock_speed": 15,
                    "calculate_frequency": 1,
                    "calculate_frequency_divider": 1
                },
                "_DAT_40023804": {
                    "": 1,
                    "clock_config_register": 1,
                    "clock_control_register": 1,
                    "clock_register": 1,
                    "config_value": 1,
                    "configuration_register2": 1
                },
                "_DAT_40023808": {
                    "": 1,
                    "clock_config_register": 1,
                    "clock_control_register": 1,
                    "configuration_register1": 1,
                    "control_register": 1,
                    "register_value": 1
                },
                "local_c": {
                    "calculated_frequency": 1,
                    "calculated_speed": 2,
                    "clock_frequency": 10,
                    "clock_speed": 13,
                    "frequency": 2,
                    "frequency_divider": 1,
                    "frequency_value": 1,
                    "result": 1
                },
                "uVar1": {
                    "clock_config": 10,
                    "clock_config_bits": 2,
                    "clock_mode": 8,
                    "clock_setting": 1,
                    "clock_source": 1,
                    "config_bits": 4,
                    "config_flags": 1,
                    "configured_frequency": 1,
                    "frequency_type": 1,
                    "system_configuration": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006628"
            ],
            "code": "\n\n\nuint calculate_clock_speed_080064ec(void)\n\n{\n  uint clock_config;\n  uint clock_speed;\n  \n  clock_config = _DAT_40023808 & 0xc;\n  if (clock_config == 8) {\n    if ((_DAT_40023804 & 0x400000) == 0) {\n      clock_speed = ((_DAT_40023804 & 0x7fc0) >> 6) * (16000000 / (_DAT_40023804 & 0x3f));\n    }\n    else {\n      clock_speed = ((_DAT_40023804 & 0x7fc0) >> 6) * (8000000 / (_DAT_40023804 & 0x3f));\n    }\n    return clock_speed / ((((_DAT_40023804 & 0x30000) >> 0x10) + 1) * 2);\n  }\n  if (clock_config < 9) {\n    if (clock_config == 0) {\n      return 16000000;\n    }\n    if (clock_config == 4) {\n      return 8000000;\n    }\n  }\n  return 16000000;\n}\n\n",
            "current_name": "calculate_clock_speed_080064ec",
            "entrypoint": "0x080064ec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080064ec": "calculate_clock_speed_080064ec",
                "local_c": "clock_speed",
                "uVar1": "clock_config"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006628": {
            "additional_data": {
                "DAT_20000000": {
                    "extracted_data": 2,
                    "modified_value": 1,
                    "shifted_data": 1,
                    "shifted_result": 1,
                    "shifted_value": 3
                },
                "FUN_080064ec": {
                    "fetch_data_from_source": 1,
                    "get_data": 3,
                    "get_data_from_device": 1,
                    "get_data_value": 1,
                    "get_extracted_value": 1,
                    "get_initial_value": 4,
                    "get_input_data": 1,
                    "get_input_value": 2,
                    "get_original_value": 2,
                    "get_value": 1,
                    "retrieve_bits": 1,
                    "retrieve_data": 2,
                    "retrieve_initial_value": 1,
                    "retrieve_value": 2
                },
                "FUN_08006628": {
                    "calculate_modified_value": 1,
                    "calculate_shifted_value": 5,
                    "calculate_shifted_value_and_store": 1,
                    "extract_and_set_shifted_value": 1,
                    "extract_and_shift": 2,
                    "extract_and_shift_bits": 2,
                    "extract_and_shift_data": 5,
                    "extract_and_shift_value": 4,
                    "extract_bits_and_store": 2,
                    "extract_data": 3,
                    "extracted_bits_and_store": 1,
                    "extracted_value_shifted": 1,
                    "reverse_bits": 1,
                    "shift_and_store": 1,
                    "update_data": 1
                },
                "_DAT_40023808": {
                    "data_register": 2,
                    "data_value": 1,
                    "initial_data": 1,
                    "input": 2,
                    "input_data": 1,
                    "input_value": 6,
                    "original_value": 1
                },
                "uVar1": {
                    "data": 3,
                    "extracted_value": 1,
                    "initial_value": 1,
                    "input_value": 1,
                    "original_value": 1,
                    "result": 7,
                    "retrieved_value": 1,
                    "return_value": 1
                }
            },
            "called": [
                "FUN_080064ec"
            ],
            "calling": [
                "FUN_080066cc",
                "FUN_08006680",
                "FUN_0800618c"
            ],
            "code": "\n\n\nuint extract_and_shift_data_08006628(void)\n\n{\n  uint result;\n  \n  result = FUN_080064ec();\n  DAT_20000000 = result >> (&DAT_0800bcac)[(_DAT_40023808 & 0xf0) >> 4];\n  return result >> (&DAT_0800bcac)[(_DAT_40023808 & 0xf0) >> 4];\n}\n\n",
            "current_name": "extract_and_shift_data_08006628",
            "entrypoint": "0x08006628",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006628": "extract_and_shift_data_08006628",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006680": {
            "additional_data": {
                "DAT_0800bcac": {
                    "data": 1,
                    "data_shift_table": 1,
                    "lookup_table": 3,
                    "shift_array": 1,
                    "shift_index": 1,
                    "shift_indexes_array": 1,
                    "shift_table": 2
                },
                "DAT_40023808": {
                    "data_variable": 1
                },
                "FUN_08006628": {
                    "get_data": 4,
                    "get_data_from_source": 1,
                    "get_extracted_value": 1,
                    "get_initial_value": 1,
                    "get_input_value": 2,
                    "get_original_value": 2,
                    "get_uint_value": 1,
                    "get_unsigned_result": 1,
                    "get_value": 6,
                    "get_value_from_subfunction": 1,
                    "get_value_to_shift": 1,
                    "read_data_from_binary": 1,
                    "retrieve_input": 1,
                    "retrieve_value_from_memory": 1,
                    "retrieve_value_from_sub_function": 1
                },
                "FUN_08006680": {
                    "calculate_shifted_value": 1,
                    "extract_and_shift_data": 1,
                    "extract_bit_from_uint": 1,
                    "extract_bits_from_result": 1,
                    "extract_bits_from_value": 1,
                    "extract_data_from_binary": 1,
                    "extracted_data": 1,
                    "extracted_value": 2,
                    "extracted_value_from_binary": 1,
                    "extracted_value_shifted": 1,
                    "get_shifted_result": 1,
                    "get_shifted_value": 3,
                    "shift_and_return": 1,
                    "shift_and_return_value": 1,
                    "shift_by_constant": 1,
                    "shift_by_lookup": 1,
                    "shift_data": 1,
                    "shift_right": 1,
                    "shift_right_by_constant": 1,
                    "shift_value_based_on_data": 1,
                    "shift_value_based_on_input": 1,
                    "shift_value_based_on_key": 1,
                    "shift_value_based_on_memory_address": 1,
                    "shift_value_by_index": 1,
                    "shifted_result": 3
                },
                "_DAT_40023808": {
                    "binary_data": 1,
                    "control_value": 1,
                    "data": 1,
                    "data_value": 1,
                    "data_variable": 1,
                    "input": 1,
                    "input_data": 1,
                    "input_value": 6,
                    "mask": 1,
                    "memory_address": 1,
                    "original_value": 1
                },
                "uVar1": {
                    "data": 1,
                    "data_value": 2,
                    "extracted_value": 1,
                    "function_result": 2,
                    "initial_value": 1,
                    "input_value": 1,
                    "result": 9,
                    "result_from_subfunction": 1,
                    "retrieved_value": 1,
                    "shifted_value": 1,
                    "value": 1,
                    "value_from_memory": 1,
                    "value_to_shift": 1
                }
            },
            "called": [
                "FUN_08006628"
            ],
            "calling": [
                "FUN_08007f54"
            ],
            "code": "\n\n\nuint get_shifted_result_08006680(void)\n\n{\n  uint result;\n  \n  result = FUN_08006628();\n  return result >> (&DAT_0800bcac)[(_DAT_40023808 & 0x1c00) >> 10];\n}\n\n",
            "current_name": "get_shifted_result_08006680",
            "entrypoint": "0x08006680",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006680": "get_shifted_result_08006680",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080066cc": {
            "additional_data": {
                "DAT_0800bcac": {
                    "constant_array": 1,
                    "shift_amount": 1,
                    "shift_array": 1,
                    "shift_table": 1,
                    "shift_value": 1,
                    "shift_values": 3
                },
                "FUN_08006628": {
                    "calculate_initial_value": 1,
                    "calculate_value": 1,
                    "call_sub_function": 1,
                    "get_data": 1,
                    "get_extracted_value": 1,
                    "get_first_value": 1,
                    "get_initial_value": 3,
                    "get_input_value": 1,
                    "get_masked_value": 1,
                    "get_original_value": 1,
                    "get_result": 1,
                    "get_value": 6,
                    "get_value_from_sub_function": 2,
                    "get_value_to_shift": 1,
                    "retrieve_value": 3
                },
                "FUN_080066cc": {
                    "calculate_shift": 1,
                    "calculate_shifted_result": 1,
                    "calculate_shifted_value": 3,
                    "extract_and_shift": 1,
                    "extract_bits": 1,
                    "extracted_value": 2,
                    "extracted_value_from_binary": 1,
                    "get_shifted_result": 2,
                    "get_shifted_value": 3,
                    "shift_and_return": 1,
                    "shift_and_return_result": 1,
                    "shift_bits": 2,
                    "shift_data": 1,
                    "shift_operation": 1,
                    "shift_result": 1,
                    "shift_result_based_on_bits": 1,
                    "shift_result_based_on_mask": 1,
                    "shift_result_by_register": 1,
                    "shift_right_by_bitmask": 1,
                    "shifted_result": 1,
                    "shifted_right_by_constant": 1,
                    "shifted_value": 2,
                    "shifted_value_from_function_result": 1
                },
                "_DAT_40023808": {
                    "control_value": 1,
                    "data": 1,
                    "input_data": 1,
                    "input_value": 7,
                    "input_variable": 1,
                    "masked_value": 1,
                    "operand": 1,
                    "register_value": 1,
                    "shift_mask": 1,
                    "shift_value": 1
                },
                "uVar1": {
                    "data": 1,
                    "first_value": 1,
                    "initial_value": 2,
                    "original_value": 1,
                    "result": 9,
                    "result_of_sub_function": 1,
                    "result_of_sub_function_call": 1,
                    "retrieved_value": 1,
                    "return_value": 1,
                    "value": 3,
                    "value_to_shift": 1
                }
            },
            "called": [
                "FUN_08006628"
            ],
            "calling": [
                "FUN_08007f54"
            ],
            "code": "\n\n\nuint get_shifted_value_080066cc(void)\n\n{\n  uint result;\n  \n  result = FUN_08006628();\n  return result >> (&DAT_0800bcac)[(_DAT_40023808 & 0xe000) >> 0xd];\n}\n\n",
            "current_name": "get_shifted_value_080066cc",
            "entrypoint": "0x080066cc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080066cc": "get_shifted_value_080066cc",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006950": {
            "additional_data": {
                "0x5fa0000": {
                    "bit_set_mask": 1,
                    "constant": 2
                },
                "0xf8ff": {
                    "bit_clear_mask": 1,
                    "bit_mask": 1,
                    "mask": 1
                },
                "FUN_08006950": {
                    "configure_control_register": 2,
                    "set_bit_in_memory": 1,
                    "set_bit_in_register": 1,
                    "set_bit_pattern": 1,
                    "set_bitfield": 1,
                    "set_bitmask": 1,
                    "set_bits_in_control_register": 1,
                    "set_config_param": 1,
                    "set_config_value": 1,
                    "set_configuration": 1,
                    "set_configuration_register": 2,
                    "set_control_bits": 1,
                    "set_control_register_bits": 1,
                    "set_flags_and_values": 1,
                    "set_memory_config": 1,
                    "set_memory_configuration": 1,
                    "set_modified_parameter": 1,
                    "set_param_bits": 1,
                    "set_register_bits": 2,
                    "set_reserved_bits_in_register": 1,
                    "update_configuration": 2,
                    "update_control_register": 1,
                    "update_parameter": 1,
                    "update_register": 1,
                    "update_register_value": 3
                },
                "_DAT_e000ed0c": {
                    "config_register": 2,
                    "configuration_register": 1,
                    "control_register": 6,
                    "flags_and_values": 1,
                    "memory_config_register": 1,
                    "memory_control_register": 1,
                    "modified_value": 1,
                    "register": 4,
                    "register_value": 7
                },
                "param_1": {
                    "bit_index": 1,
                    "bit_mask": 1,
                    "bits_to_set": 1,
                    "config_param": 1,
                    "config_value": 3,
                    "configuration": 1,
                    "configuration_bits": 1,
                    "configuration_value": 1,
                    "control_bits": 1,
                    "control_value": 1,
                    "input": 3,
                    "input_value": 7,
                    "memory_config": 2,
                    "new_value": 1,
                    "param": 1,
                    "value": 5
                }
            },
            "called": [],
            "calling": [
                "FUN_08006ce0"
            ],
            "code": "\n\n\nvoid set_bits_in_control_register_08006950(uint input_value)\n\n{\n  _DAT_e000ed0c = _DAT_e000ed0c & 0xf8ff | (input_value & 7) << 8 | 0x5fa0000;\n  return;\n}\n\n",
            "current_name": "set_bits_in_control_register_08006950",
            "entrypoint": "0x08006950",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006950": "set_bits_in_control_register_08006950",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006998": {
            "additional_data": {
                "": {
                    "": 2
                },
                "FUN_08006998": {
                    "get_bit": 1,
                    "get_bit_pattern": 1,
                    "get_bit_value": 2,
                    "get_bits": 1,
                    "get_bits_from_register": 3,
                    "get_bitwise_shift_value": 1,
                    "get_byte_from_memory": 1,
                    "get_shifted_and_masked_value": 1,
                    "get_shifted_bits": 15,
                    "get_shifted_value": 2,
                    "get_three_least_significant_bits": 3
                },
                "_DAT_e000ed0c": {
                    "bit_pattern": 1,
                    "data": 2,
                    "data_register": 6,
                    "data_value": 1,
                    "input_data": 4,
                    "input_data_mask": 1,
                    "memory_address": 1,
                    "original_value": 2,
                    "register": 1,
                    "register_value": 5,
                    "shifted_value": 6,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006d8a",
                "FUN_08006cf6"
            ],
            "code": "\n\n\nuint get_shifted_bits_08006998(void)\n\n{\n  return _DAT_e000ed0c >> 8 & 7;\n}\n\n",
            "current_name": "get_shifted_bits_08006998",
            "entrypoint": "0x08006998",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006998": "get_shifted_bits_08006998"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080069b4": {
            "additional_data": {
                "FUN_080069b4": {
                    "set_bit": 8,
                    "set_bit_at_index": 2,
                    "set_bit_at_offset": 1,
                    "set_bit_at_position": 1,
                    "set_bit_in_array": 3,
                    "set_bit_in_memory": 11,
                    "set_bit_to_value": 1,
                    "set_bit_value": 2,
                    "store_bit_in_memory": 1,
                    "update_bit_array": 1
                },
                "param_1": {
                    "bit_position": 3,
                    "bit_to_set": 1,
                    "byte_to_set": 3,
                    "byte_value": 5,
                    "input_byte": 16,
                    "input_value": 1,
                    "value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08006d2e"
            ],
            "code": "\nvoid set_bit_in_memory_080069b4(byte input_byte)\n\n{\n  *(int *)(((uint)(int)(char)input_byte >> 5) * 4 + -0x1fff1f00) = 1 << (input_byte & 0x1f);\n  return;\n}\n\n",
            "current_name": "set_bit_in_memory_080069b4",
            "entrypoint": "0x080069b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080069b4": "set_bit_in_memory_080069b4",
                "param_1": "input_byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080069e4": {
            "additional_data": {
                "0x1f": {
                    "bit_mask": 1
                },
                "1": {
                    "bit_shifted": 1
                },
                "DAT_": {
                    "": 2,
                    "data_": 1
                },
                "FUN_080069e4": {
                    "set_bit": 9,
                    "set_bit_at_index": 1,
                    "set_bit_at_offset": 2,
                    "set_bit_at_position": 2,
                    "set_bit_in_array": 5,
                    "set_bit_in_integer": 1,
                    "set_bit_in_memory": 6,
                    "set_bit_of_address": 1,
                    "set_bit_value": 2,
                    "setbit_at_offset": 1,
                    "update_bit": 1
                },
                "PTR_": {
                    "": 2,
                    "pointer_": 1
                },
                "byteValue": {
                    "bit_position": 1
                },
                "char": {
                    "char": 1,
                    "character": 2,
                    "converted_char": 1,
                    "signed_char": 1
                },
                "int": {
                    "int32": 1,
                    "integer": 1
                },
                "new_variable_name_1": {
                    "shifted_index": 1
                },
                "new_variable_name_2": {
                    "array_index": 1
                },
                "param_1": {
                    "bit_position": 2,
                    "byte_to_set": 2,
                    "byte_value": 5,
                    "data": 1,
                    "index": 1,
                    "input": 1,
                    "input_byte": 17,
                    "param_1": 1,
                    "value": 1
                },
                "uint": {
                    "u_int32": 1,
                    "unsigned_int": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08006d4a"
            ],
            "code": "\nvoid set_bit_in_memory_080069e4(byte input_byte)\n\n{\n  *(integer *)((((unsigned_int)(integer)(character)input_byte >> 5) + 0x20) * 4 + -0x1fff1f00) = 1 << (input_byte & 0x1f);\n  return;\n}\n\n",
            "current_name": "set_bit_in_memory_080069e4",
            "entrypoint": "0x080069e4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080069e4": "set_bit_in_memory_080069e4",
                "char": "character",
                "int": "integer",
                "param_1": "input_byte",
                "uint": "unsigned_int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006a18": {
            "additional_data": {
                "0x40": {
                    "byte_shift": 1,
                    "offset": 1
                },
                "1": {
                    "bit_mask": 1
                },
                "4": {
                    "bit_shift": 1,
                    "size": 1
                },
                "DAT_": {
                    "dat_": 1
                },
                "FUN_08006a18": {
                    "check_bit": 11,
                    "check_bit_at_index": 1,
                    "check_bit_at_offset": 1,
                    "check_bit_in_memory": 2,
                    "check_bit_set": 11,
                    "check_bit_value": 1,
                    "is_bit_set": 4
                },
                "PTR_": {
                    "ptr_": 1
                },
                "char": {
                    "character": 2
                },
                "int": {
                    "integer": 1
                },
                "param_1": {
                    "bit_position": 1,
                    "bit_value": 1,
                    "byte_to_check": 2,
                    "byte_val": 1,
                    "byte_value": 13,
                    "input": 1,
                    "input_byte": 11,
                    "input_value": 1
                },
                "uint": {
                    "unsigned_int": 1,
                    "unsigned_integer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006de0"
            ],
            "code": "\nbool check_bit_set_08006a18(byte byte_value)\n\n{\n  return (*(unsigned_int *)((((unsigned_int)(integer)(character)byte_value >> 5) + 0x40) * 4 + -0x1fff1f00) &\n         1 << (byte_value & 0x1f)) != 0;\n}\n\n",
            "current_name": "check_bit_set_08006a18",
            "entrypoint": "0x08006a18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006a18": "check_bit_set_08006a18",
                "char": "character",
                "int": "integer",
                "param_1": "byte_value",
                "uint": "unsigned_int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006a58": {
            "additional_data": {
                "0x40": {
                    "offset_value": 1
                },
                "1": {
                    "bit_mask": 2
                },
                "4": {
                    "bytes_per_int": 1
                },
                "FUN_08006a58": {
                    "bitwise_shift_and_store": 1,
                    "set_bit": 5,
                    "set_bit_at_offset": 3,
                    "set_bit_at_position": 1,
                    "set_bit_in_array": 6,
                    "set_bit_in_int_array": 1,
                    "set_bit_in_memory": 12,
                    "set_bit_value": 2
                },
                "char": {
                    "converted_param": 1
                },
                "local_var_1": {
                    "index": 1
                },
                "local_var_2": {
                    "shifted_value": 1
                },
                "new_variable_name_1": {
                    "bit_mask": 1
                },
                "param_1": {
                    "bit_index": 1,
                    "bit_position": 5,
                    "byte_to_set": 6,
                    "byte_value": 6,
                    "data": 1,
                    "input": 1,
                    "input_byte": 11
                },
                "param_2": {
                    "bit_offset": 1,
                    "new_parameter_name_2": 1
                },
                "param_3": {
                    "bit_value": 1
                },
                "param_4": {
                    "bit_mask": 1
                },
                "param_n": {
                    "new_parameter_name_n": 1
                },
                "uint": {
                    "shifted_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006dc4"
            ],
            "code": "\nvoid set_bit_in_memory_08006a58(byte input_byte)\n\n{\n  *(int *)((((shifted_value)(int)(converted_param)input_byte >> 5) + 0x40) * 4 + -0x1fff1f00) = 1 << (input_byte & 0x1f);\n  return;\n}\n\n",
            "current_name": "set_bit_in_memory_08006a58",
            "entrypoint": "0x08006a58",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006a58": "set_bit_in_memory_08006a58",
                "char": "converted_param",
                "param_1": "input_byte",
                "uint": "shifted_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006a8c": {
            "additional_data": {
                "DAT_": {
                    "dat": 1
                },
                "FUN_08006a8c": {
                    "set_bit": 4,
                    "set_bit_at_index": 1,
                    "set_bit_at_position": 1,
                    "set_bit_by_index": 1,
                    "set_bit_in_array": 7,
                    "set_bit_in_memory": 14,
                    "set_bit_in_word": 1,
                    "set_bit_value": 1
                },
                "F_UNJUMBLE_BYTE": {
                    "set_bit_in_memory_address": 1
                },
                "PTR_": {
                    "ptr": 1,
                    "unchanged_variable": 1
                },
                "char": {
                    "character": 2,
                    "signed_char": 1
                },
                "param_1": {
                    "bit_index": 1,
                    "bit_value": 1,
                    "byte_to_set": 8,
                    "byte_value": 5,
                    "input_byte": 15,
                    "value": 1
                },
                "param_2": {
                    "new_value": 1
                },
                "uint": {
                    "unsigned_int": 1,
                    "unsigned_integer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006dfe"
            ],
            "code": "\nvoid set_bit_in_memory_08006a8c(byte input_byte)\n\n{\n  *(int *)((((unsigned_int)(int)(character)input_byte >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (input_byte & 0x1f);\n  return;\n}\n\n",
            "current_name": "set_bit_in_memory_08006a8c",
            "entrypoint": "0x08006a8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006a8c": "set_bit_in_memory_08006a8c",
                "char": "character",
                "param_1": "input_byte",
                "uint": "unsigned_int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006ac0": {
            "additional_data": {
                "DAT_": {
                    "": 1,
                    "data": 1
                },
                "FUN_08006ac0": {
                    "check_bit": 19,
                    "check_bit_set": 3,
                    "check_bit_value": 4,
                    "is_bit_set": 3,
                    "is_nth_bit_set": 1
                },
                "PTR_": {
                    "": 1,
                    "ptr": 1
                },
                "char": {
                    "character": 2
                },
                "param_1": {
                    "byte_to_check": 3,
                    "byte_value": 8,
                    "input": 2,
                    "input_byte": 16,
                    "input_value": 1
                },
                "uint": {
                    "unsigned_int": 1,
                    "unsigned_integer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006e1a"
            ],
            "code": "\nbool check_bit_value_08006ac0(byte input_byte)\n\n{\n  return (*(unsigned_int *)((((unsigned_int)(int)(character)input_byte >> 5) + 0x80) * 4 + -0x1fff1f00) &\n         1 << (input_byte & 0x1f)) != 0;\n}\n\n",
            "current_name": "check_bit_value_08006ac0",
            "entrypoint": "0x08006ac0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006ac0": "check_bit_value_08006ac0",
                "char": "character",
                "param_1": "input_byte",
                "uint": "unsigned_int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006b00": {
            "additional_data": {
                "0x1fff1c00": {
                    "adjustment2": 1,
                    "memory_address_2": 1,
                    "memory_location_2": 1
                },
                "0xe000ed14": {
                    "address2": 1,
                    "memory_address_1": 1,
                    "memory_location_1": 1
                },
                "0xf": {
                    "mask": 1
                },
                "0xff": {
                    "mask": 1
                },
                "DAT_": {
                    "": 1
                },
                "FUN_08006b00": {
                    "set_byte_at_offset": 1,
                    "set_byte_value": 1,
                    "set_byte_value_in_memory": 1,
                    "store_byte": 1,
                    "store_byte_value": 6,
                    "store_byte_with_offset": 1,
                    "store_data": 1,
                    "store_data_in_memory": 1,
                    "store_parameter_value": 1,
                    "store_value": 3,
                    "update_memory": 2,
                    "update_memory_byte": 2,
                    "write_byte_to_memory": 4,
                    "write_data": 1,
                    "write_data_to_memory": 1,
                    "write_param_to_memory": 1,
                    "write_to_memory": 2,
                    "write_value": 1
                },
                "PTR_": {
                    "": 1
                },
                "char": {
                    "byte": 1,
                    "character": 1
                },
                "original_variable_name_1": {
                    "memory_location": 1
                },
                "original_variable_name_2": {
                    "shifted_value": 1
                },
                "original_variable_name_3": {
                    "new_variable": 1
                },
                "param_1": {
                    "address": 5,
                    "address_offset": 1,
                    "byte_to_write": 1,
                    "byte_value": 2,
                    "data_index": 1,
                    "flag": 1,
                    "input_byte": 17,
                    "input_value": 2,
                    "memory_address": 1
                },
                "param_2": {
                    "bit_value": 1,
                    "data": 4,
                    "data_to_write": 1,
                    "data_value": 3,
                    "input_number": 1,
                    "input_uint": 1,
                    "input_value": 6,
                    "int_value": 1,
                    "new_value": 2,
                    "output_value": 1,
                    "value": 6,
                    "value_to_set": 1,
                    "value_to_store": 2,
                    "value_to_write": 1
                },
                "param_3": {
                    "destination_array": 1,
                    "new_param": 1
                },
                "param_4": {
                    "destination_index": 1
                },
                "param_5": {
                    "source_value": 1
                },
                "param_6": {
                    "bit_shift": 1
                },
                "var_1": {
                    "adjusted_value": 1
                },
                "var_2": {
                    "destination_address": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006c9c",
                "FUN_08006cf6"
            ],
            "code": "\nvoid store_byte_value_08006b00(byte input_byte,uint input_value)\n\n{\n  if ((character)input_byte < '\\0') {\n    *(character *)((input_byte & 0xf) + 0xe000ed14) = (character)((input_value & 0xff) << 4);\n  }\n  else {\n    *(character *)((character)input_byte + -0x1fff1c00) = (character)((input_value & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "current_name": "store_byte_value_08006b00",
            "entrypoint": "0x08006b00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006b00": "store_byte_value_08006b00",
                "char": "character",
                "param_1": "input_byte",
                "param_2": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006b54": {
            "additional_data": {
                "FUN_08006b54": {
                    "byte_to_nibble": 2,
                    "extract_byte": 8,
                    "extract_byte_from_binary": 1,
                    "extract_byte_from_memory": 1,
                    "extract_high_nibble": 1,
                    "extract_nibble": 3,
                    "extract_nibble_from_memory": 1,
                    "extracted_byte": 5,
                    "extracted_byte_value": 2,
                    "get_nibble_from_address": 1,
                    "get_nibble_from_byte": 1,
                    "get_nibble_from_table": 1,
                    "get_shifted_byte": 3,
                    "read_nibble_from_memory": 1
                },
                "bVar1": {
                    "extracted_nibble": 1,
                    "extracted_value": 1,
                    "output_byte": 8,
                    "output_nibble": 2,
                    "result": 6,
                    "result_byte": 10,
                    "shifted_byte": 2,
                    "value": 1
                },
                "param_1": {
                    "address": 1,
                    "byte_to_extract_nibble": 1,
                    "input": 1,
                    "input_byte": 26,
                    "input_data": 1,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006d98"
            ],
            "code": "\nbyte extract_byte_from_memory_08006b54(byte input_byte)\n\n{\n  byte result_byte;\n  \n  if ((char)input_byte < '\\0') {\n    result_byte = *(byte *)((input_byte & 0xf) + 0xe000ed14);\n  }\n  else {\n    result_byte = *(byte *)((char)input_byte + -0x1fff1c00);\n  }\n  return result_byte >> 4;\n}\n\n",
            "current_name": "extract_byte_from_memory_08006b54",
            "entrypoint": "0x08006b54",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006b54": "extract_byte_from_memory_08006b54",
                "bVar1": "result_byte",
                "param_1": "input_byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006ba0": {
            "additional_data": {
                "FUN_08006ba0": {
                    "apply_bit_mask": 4,
                    "apply_bitwise_mask": 1,
                    "apply_bitwise_operations": 1,
                    "bitwise_combination": 1,
                    "bitwise_combiner": 1,
                    "bitwise_operation": 11,
                    "bitwise_operations": 2,
                    "combine_bits": 1,
                    "extract_bits": 5,
                    "extract_bits_from_value": 1,
                    "masked_bits": 1,
                    "modify_bits": 1,
                    "reverse_bits": 1
                },
                "param_1": {
                    "adjusted_value": 1,
                    "bit_mask": 1,
                    "bit_offset": 2,
                    "bit_position": 5,
                    "bitmask": 1,
                    "extracted_bits": 1,
                    "input": 1,
                    "input_bit": 1,
                    "input_bit_position": 1,
                    "input_bits": 4,
                    "input_mask": 2,
                    "input_value": 3,
                    "mask": 3,
                    "shift2": 1,
                    "shift_amount": 1,
                    "shift_amount2": 1,
                    "shifted_bits": 1,
                    "shifted_position": 1
                },
                "param_1_new": {
                    "masked_bits": 1
                },
                "param_2": {
                    "bit_mask": 5,
                    "bit_masked_data": 1,
                    "bit_sequence": 1,
                    "bitmask_value": 1,
                    "data": 1,
                    "data_bits": 1,
                    "input2": 1,
                    "input_bit_mask": 1,
                    "input_data": 1,
                    "input_mask": 3,
                    "input_value": 2,
                    "mask": 3,
                    "mask_value": 2,
                    "param_bits": 1,
                    "result": 1,
                    "source_value": 2,
                    "value": 2,
                    "value1": 2
                },
                "param_2_new": {
                    "masked_value": 1
                },
                "param_3": {
                    "bit_mask": 2,
                    "data": 2,
                    "dest_value": 1,
                    "input3": 1,
                    "input_data": 1,
                    "input_value": 2,
                    "input_value3": 1,
                    "mask": 1,
                    "original_data": 1,
                    "original_value": 3,
                    "output": 1,
                    "output_bit_mask": 1,
                    "output_value": 4,
                    "result": 4,
                    "result_bits": 2,
                    "result_value": 1,
                    "value": 1,
                    "value2": 2
                },
                "param_3_new": {
                    "final_value": 1
                },
                "result": {
                    "new_value": 1
                },
                "return": {
                    "result": 3
                },
                "uVar1": {
                    "bit_count": 1,
                    "bit_difference": 1,
                    "bits_to_shift": 1,
                    "leading_zeros": 1,
                    "mask_complement": 1,
                    "mask_value": 1,
                    "num_bits": 1,
                    "num_bits_to_extract": 1,
                    "remaining_bits": 3,
                    "shift1": 1,
                    "shift_amount": 12,
                    "shift_amount1": 1,
                    "shift_count": 1,
                    "shift_right": 1,
                    "shifted_bits": 2,
                    "shifted_mask": 1,
                    "temp_var1": 1
                },
                "uVar2": {
                    "extracted_bits": 1,
                    "temp_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006cf6"
            ],
            "code": "\nuint bitwise_operation_08006ba0(uint bit_position,uint bit_mask,uint output_value)\n\n{\n  uint shift_amount;\n  \n  bit_position = bit_position & 7;\n  shift_amount = 7 - bit_position;\n  if (3 < shift_amount) {\n    shift_amount = 4;\n  }\n  if (bit_position + 4 < 7) {\n    bit_position = 0;\n  }\n  else {\n    bit_position = bit_position - 3;\n  }\n  result output_value & (1 << (bit_position & 0xff)) - 1U |\n         ((1 << (shift_amount & 0xff)) - 1U & bit_mask) << (bit_position & 0xff);\n}\n\n",
            "current_name": "bitwise_operation_08006ba0",
            "entrypoint": "0x08006ba0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006ba0": "bitwise_operation_08006ba0",
                "param_1": "bit_position",
                "param_2": "bit_mask",
                "param_3": "output_value",
                "return": "result",
                "uVar1": "shift_amount"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006c04": {
            "additional_data": {
                "DAT_": {
                    "dat_": 1
                },
                "FUN_08006c04": {
                    "bitwise_operation": 1,
                    "bitwise_partition": 1,
                    "bitwise_shift_and_mask": 1,
                    "extract_bits": 27,
                    "extracted_bits": 1
                },
                "PTR_": {
                    "ptr_": 1
                },
                "param_1": {
                    "input": 9,
                    "input_value": 21,
                    "source": 1
                },
                "param_2": {
                    "adjusted_bit_position": 2,
                    "bit_offset": 12,
                    "bit_position": 9,
                    "bit_shift": 1,
                    "num_bits": 3,
                    "num_bits_left": 1,
                    "num_shift": 1,
                    "shift_amount": 1,
                    "start_position": 1
                },
                "param_2_internal": {
                    "adjusted_bits": 1
                },
                "param_3": {
                    "bits1": 1,
                    "bits_extracted": 1,
                    "bits_high": 1,
                    "extracted_bits": 1,
                    "extracted_bits1": 2,
                    "extracted_value1": 1,
                    "high_bits": 1,
                    "output1": 5,
                    "output_1": 2,
                    "output_value1": 8,
                    "output_value_1": 3,
                    "part1": 1,
                    "result1": 2,
                    "result_1": 2
                },
                "param_4": {
                    "bits2": 1,
                    "bits_low": 1,
                    "bits_remaining": 1,
                    "extracted_bits2": 2,
                    "extracted_value2": 1,
                    "low_bits": 1,
                    "output2": 5,
                    "output_2": 2,
                    "output_value2": 8,
                    "output_value_2": 3,
                    "part2": 1,
                    "remaining_bits": 1,
                    "result2": 2,
                    "result_2": 2
                },
                "uVar1": {
                    "bits_mask": 1,
                    "bits_to_extract": 3,
                    "bits_to_shift": 3,
                    "mask_offset": 1,
                    "mask_shift": 1,
                    "mask_size": 1,
                    "num_bits": 2,
                    "remaining_bits": 9,
                    "shift_amount": 8,
                    "shift_val": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006d98"
            ],
            "code": "\nvoid extract_bits_08006c04(uint input_value,uint bit_offset,uint *output_value1,uint *output_value2)\n\n{\n  uint remaining_bits;\n  \n  bit_offset = bit_offset & 7;\n  remaining_bits = 7 - bit_offset;\n  if (3 < remaining_bits) {\n    remaining_bits = 4;\n  }\n  if (bit_offset + 4 < 7) {\n    bit_offset = 0;\n  }\n  else {\n    bit_offset = bit_offset - 3;\n  }\n  *output_value1 = (1 << (remaining_bits & 0xff)) - 1U & input_value >> (bit_offset & 0xff);\n  *output_value2 = (1 << (bit_offset & 0xff)) - 1U & input_value;\n  return;\n}\n\n",
            "current_name": "extract_bits_08006c04",
            "entrypoint": "0x08006c04",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006c04": "extract_bits_08006c04",
                "param_1": "input_value",
                "param_2": "bit_offset",
                "param_3": "output_value1",
                "param_4": "output_value2",
                "uVar1": "remaining_bits"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006c70": {
            "additional_data": {
                "0xf": {
                    "barrier_value": 1,
                    "sync_value": 1
                },
                "DataSynchronizationBarrier": {
                    "sync_bar": 1,
                    "sync_barrier": 22,
                    "synchronize_data": 1,
                    "synchronize_data_barrier": 1,
                    "wait_for_data_sync": 1
                },
                "FUN_08006c70": {
                    "continuous_loop": 6,
                    "data_sync_loop": 1,
                    "do_nothing_loop": 1,
                    "endless_loop": 1,
                    "infinite_loop": 8,
                    "main_loop": 1,
                    "run_infinite_loop": 9,
                    "run_loop": 1,
                    "synchronize_data": 1,
                    "wait_for_data_sync": 1,
                    "wait_indefinitely": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006d66"
            ],
            "code": "\nvoid run_infinite_loop_08006c70(void)\n\n{\n  sync_barrier(0xf);\n  sync_barrier(0xf);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "run_infinite_loop_08006c70",
            "entrypoint": "0x08006c70",
            "imported": false,
            "improved": true,
            "renaming": {
                "DataSynchronizationBarrier": "sync_barrier",
                "FUN_08006c70": "run_infinite_loop_08006c70"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006c9c": {
            "additional_data": {
                "FUN_08006b00": {
                    "apply_byte_operation": 1,
                    "do_something": 1,
                    "initialize_data": 1,
                    "initialize_values": 1,
                    "perform_action": 1,
                    "perform_operation": 3,
                    "set_byte_and_param": 1,
                    "set_byte_values": 1,
                    "set_flags": 1,
                    "set_values": 2,
                    "update_byte_value": 1,
                    "update_data": 1
                },
                "FUN_08006c9c": {
                    "check_and_initialize": 5,
                    "check_and_initialize_data": 1,
                    "check_and_initialize_param": 2,
                    "check_and_initialize_parameter": 1,
                    "check_and_set_data": 2,
                    "check_and_set_param": 6,
                    "check_and_set_param_value": 1,
                    "check_and_set_params": 1,
                    "check_and_set_value": 1,
                    "check_and_update_data": 1,
                    "check_and_update_param": 2,
                    "check_and_update_value": 1,
                    "check_bounds_and_initialize": 1,
                    "check_param_and_set_values": 1,
                    "check_value_and_update_registers": 1,
                    "is_param_valid": 2,
                    "is_valid_param": 1,
                    "validate_param_and_set_registers": 1
                },
                "_DAT_e000e010": {
                    "another_value": 1,
                    "bit_mask": 1,
                    "constant_value": 1,
                    "count": 1,
                    "data2": 1,
                    "data_2": 1,
                    "flag": 2,
                    "flag2": 1,
                    "modified_param_3": 1,
                    "modified_value3": 1,
                    "new_var2": 1,
                    "number_of_params": 1,
                    "register2": 1,
                    "register_2": 1,
                    "set_bits": 1,
                    "var2": 1,
                    "variable_2": 1
                },
                "_DAT_e000e014": {
                    "adjusted_value": 1,
                    "data_value": 1,
                    "modified_input": 1,
                    "modified_param_1": 1,
                    "modified_value": 2,
                    "modified_value1": 1,
                    "previous_input": 1,
                    "previous_param": 1,
                    "previous_value": 1,
                    "register_value": 1,
                    "result_value": 1,
                    "updated_input_value": 1,
                    "updated_param": 1,
                    "updated_value": 4
                },
                "_DAT_e000e018": {
                    "counter": 1,
                    "data1": 1,
                    "data_1": 1,
                    "flag": 1,
                    "flag1": 1,
                    "modified_param_2": 1,
                    "modified_value2": 1,
                    "new_var1": 1,
                    "register1": 1,
                    "register_1": 1,
                    "reset_value": 3,
                    "some_value": 1,
                    "unused_data": 1,
                    "unused_param": 1,
                    "var1": 1,
                    "variable_1": 1
                },
                "bVar1": {
                    "is_in_range": 8,
                    "is_input_valid": 2,
                    "is_less_than_threshold": 1,
                    "is_param_valid": 2,
                    "is_param_within_range": 2,
                    "is_valid": 8,
                    "is_valid_input": 1,
                    "is_value_in_range": 1,
                    "is_value_valid": 1,
                    "is_within_bounds": 1,
                    "is_within_range": 4
                },
                "param_1": {
                    "byte_value": 1,
                    "input": 4,
                    "input_param": 9,
                    "input_value": 9,
                    "operation_byte": 1,
                    "operation_param1": 1,
                    "value": 6
                },
                "param_2": {
                    "byte_val": 1,
                    "flag_value": 1,
                    "length": 1,
                    "operation_param": 1,
                    "operation_param2": 1,
                    "operation_value": 1,
                    "param_value": 1
                }
            },
            "called": [
                "FUN_08006b00"
            ],
            "calling": [
                "FUN_08006d72"
            ],
            "code": "\n\n\nbool check_bounds_and_initialize_08006c9c(int input_param)\n\n{\n  bool is_in_range;\n  \n  is_in_range = input_param - 1U < 0x1000000;\n  if (is_in_range) {\n    _DAT_e000e014 = input_param + -1;\n    FUN_08006b00(0xffffffff,0xf);\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n  }\n  return !is_in_range;\n}\n\n",
            "current_name": "check_bounds_and_initialize_08006c9c",
            "entrypoint": "0x08006c9c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006c9c": "check_bounds_and_initialize_08006c9c",
                "bVar1": "is_in_range",
                "param_1": "input_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006ce0": {
            "additional_data": {
                "FUN_08006950": {
                    "call_subfunction": 1,
                    "configure_subsystem": 1,
                    "configure_system": 1,
                    "execute_function": 1,
                    "execute_sub_function": 4,
                    "execute_subfunction": 1,
                    "execute_task": 1,
                    "perform_action": 1,
                    "perform_initialization": 1,
                    "perform_operation": 1,
                    "process": 1,
                    "process_application_data": 1,
                    "process_data": 7,
                    "process_input": 5,
                    "process_parameter": 1
                },
                "FUN_08006ce0": {
                    "execute_function": 6,
                    "execute_important_task": 1,
                    "execute_initial_function": 1,
                    "execute_initial_setup": 1,
                    "execute_initialization": 2,
                    "execute_main_function": 3,
                    "execute_processing": 1,
                    "extract_and_process_data": 1,
                    "initialize": 9,
                    "initialize_application": 3,
                    "initialize_subsystem": 1,
                    "initialize_system": 1,
                    "start_process": 1
                },
                "param_1": {
                    "application_data": 1,
                    "arg": 1,
                    "argument": 1,
                    "data": 7,
                    "initialization_param": 1,
                    "input": 3,
                    "input_param": 4,
                    "input_parameter": 2,
                    "input_value": 3,
                    "param": 4,
                    "parameter": 2,
                    "subsystem_id": 1,
                    "system_config": 1
                }
            },
            "called": [
                "FUN_08006950"
            ],
            "calling": [
                "FUN_080059b4"
            ],
            "code": "\nvoid initialize_application_08006ce0(undefined4 data)\n\n{\n  FUN_08006950(data);\n  return;\n}\n\n",
            "current_name": "initialize_application_08006ce0",
            "entrypoint": "0x08006ce0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006ce0": "initialize_application_08006ce0",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006cf6": {
            "additional_data": {
                "FUN_08006998": {
                    "fetch_data": 1,
                    "get_data": 2,
                    "get_initial_value": 12,
                    "get_uint": 1,
                    "initialize_uint": 1,
                    "retrieve_data": 5,
                    "retrieve_value": 2
                },
                "FUN_08006b00": {
                    "apply_operation": 1,
                    "handle_data": 1,
                    "output_data": 1,
                    "print_data": 3,
                    "print_result": 2,
                    "process_byte": 6,
                    "process_data": 1,
                    "process_result": 1,
                    "send_data": 6,
                    "write_data": 1,
                    "write_to_memory": 1
                },
                "FUN_08006ba0": {
                    "calculate": 1,
                    "calculate_data": 1,
                    "calculate_result": 2,
                    "calculate_uint": 1,
                    "calculate_value": 1,
                    "combine_values": 1,
                    "compute_value": 1,
                    "manipulate_data": 4,
                    "modify_data": 7,
                    "perform_calculation": 2,
                    "perform_calculations": 1,
                    "perform_operation": 1,
                    "process_uint": 1
                },
                "FUN_08006cf6": {
                    "decode_and_execute": 1,
                    "decode_and_process_data": 1,
                    "execute_function": 2,
                    "initialize_function": 2,
                    "initialize_process": 1,
                    "process_and_execute": 1,
                    "process_data": 17,
                    "process_function": 2,
                    "process_input": 2
                },
                "param_1": {
                    "byte": 1,
                    "byte_data": 3,
                    "byte_input": 1,
                    "character": 5,
                    "data": 6,
                    "data_byte": 1,
                    "input": 2,
                    "input_byte": 10,
                    "input_param": 1,
                    "uint_input_1": 1
                },
                "param_2": {
                    "input1": 2,
                    "input_1": 1,
                    "num1": 1,
                    "param1": 7,
                    "param2": 6,
                    "param_2": 1,
                    "param_a": 4,
                    "param_two": 1,
                    "param_x": 1,
                    "parameter1": 1,
                    "uint_input_2": 1,
                    "value1": 2,
                    "value_1": 2,
                    "var1": 1
                },
                "param_3": {
                    "input2": 2,
                    "input_2": 1,
                    "num2": 1,
                    "param2": 7,
                    "param3": 6,
                    "param_3": 1,
                    "param_b": 4,
                    "param_three": 1,
                    "param_y": 1,
                    "parameter2": 1,
                    "uint_input_3": 1,
                    "value2": 2,
                    "value_2": 2,
                    "var2": 1
                },
                "uVar1": {
                    "random_value": 2,
                    "result": 22,
                    "result1": 2,
                    "return_value": 2
                }
            },
            "called": [
                "FUN_08006b00",
                "FUN_08006ba0",
                "FUN_08006998"
            ],
            "calling": [
                "FUN_08007a70"
            ],
            "code": "\nvoid decode_and_process_data_08006cf6(char input_byte,undefined4 param1,undefined4 param2)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006998();\n  result = FUN_08006ba0(result,param1,param2);\n  FUN_08006b00((int)input_byte,result);\n  return;\n}\n\n",
            "current_name": "decode_and_process_data_08006cf6",
            "entrypoint": "0x08006cf6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006cf6": "decode_and_process_data_08006cf6",
                "param_1": "input_byte",
                "param_2": "param1",
                "param_3": "param2",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006d2e": {
            "additional_data": {
                "FUN_080069b4": {
                    "decode_byte": 1,
                    "handle_byte": 1,
                    "handle_character": 1,
                    "handle_input": 1,
                    "perform_decoding": 1,
                    "perform_task": 1,
                    "process_byte": 7,
                    "process_input": 3,
                    "reverse_byte": 2,
                    "reverse_bytes": 1,
                    "reverse_operation": 1
                },
                "FUN_08006d2e": {
                    "decode_character": 1,
                    "decode_parameter": 1,
                    "execute_function": 8,
                    "execute_operation": 1,
                    "expand_parameter": 1,
                    "initialize": 1,
                    "initialize_param": 1,
                    "invoke_sub_function": 1,
                    "process_character": 7,
                    "process_data": 4,
                    "process_input": 2,
                    "process_param": 1
                },
                "param_1": {
                    "byte": 1,
                    "character": 8,
                    "data": 2,
                    "encoded_byte": 1,
                    "input": 5,
                    "input_byte": 3,
                    "input_char": 1,
                    "input_character": 1,
                    "input_data": 3,
                    "input_param": 4,
                    "input_parameter": 1,
                    "input_value": 1
                }
            },
            "called": [
                "FUN_080069b4"
            ],
            "calling": [],
            "code": "\nvoid execute_function_08006d2e(char character)\n\n{\n  FUN_080069b4((int)character);\n  return;\n}\n\n",
            "current_name": "execute_function_08006d2e",
            "entrypoint": "0x08006d2e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006d2e": "execute_function_08006d2e",
                "param_1": "character"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006d4a": {
            "additional_data": {
                "FUN_080069e4": {
                    "handle_character": 1,
                    "handle_input": 1,
                    "process_byte": 10,
                    "process_data": 2,
                    "process_input": 2
                },
                "FUN_08006d4a": {
                    "call_sub_function": 1,
                    "execute": 1,
                    "execute_function": 9,
                    "execute_param_function": 1,
                    "initialize": 1,
                    "initialize_data": 1,
                    "initialize_function": 2,
                    "perform_task": 1,
                    "process_char": 2,
                    "process_character": 8,
                    "process_input": 2,
                    "process_parameter": 1
                },
                "param_1": {
                    "byte_param": 1,
                    "byte_value": 1,
                    "character": 10,
                    "data_param": 1,
                    "input": 5,
                    "input_byte": 7,
                    "input_data": 1,
                    "input_param": 4,
                    "input_value": 1
                }
            },
            "called": [
                "FUN_080069e4"
            ],
            "calling": [],
            "code": "\nvoid execute_param_function_08006d4a(char character)\n\n{\n  FUN_080069e4((int)character);\n  return;\n}\n\n",
            "current_name": "execute_param_function_08006d4a",
            "entrypoint": "0x08006d4a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006d4a": "execute_param_function_08006d4a",
                "param_1": "character"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006d66": {
            "additional_data": {
                "FUN_08006c70": {
                    "call_sub_function": 1,
                    "execute_sub_function": 2,
                    "execute_subfunction": 1,
                    "helper_function": 1,
                    "initialize": 1,
                    "initialize_data": 1,
                    "initialize_program": 1,
                    "initialize_resources": 1,
                    "initialize_sub_function": 1,
                    "initialize_system": 2,
                    "perform_initialization": 17,
                    "perform_pre_initialization": 1,
                    "perform_sub_task": 1
                },
                "FUN_08006d66": {
                    "execute_function": 2,
                    "execute_initialization": 8,
                    "execute_main_function": 5,
                    "execute_main_task": 1,
                    "execute_primary_function": 1,
                    "execute_program": 1,
                    "initialize": 5,
                    "initialize_application": 6,
                    "initialize_system": 2
                }
            },
            "called": [
                "FUN_08006c70"
            ],
            "calling": [],
            "code": "\nvoid initialize_application_08006d66(void)\n\n{\n  FUN_08006c70();\n  return;\n}\n\n",
            "current_name": "initialize_application_08006d66",
            "entrypoint": "0x08006d66",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006d66": "initialize_application_08006d66"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006d72": {
            "additional_data": {
                "FUN_08006c9c": {
                    "check_condition": 1,
                    "check_value": 2,
                    "validate_data": 2
                },
                "FUN_08006d72": {
                    "extracted_function": 2,
                    "process_data": 14,
                    "process_function": 2,
                    "process_input": 1
                },
                "param_1": {
                    "data": 8,
                    "input": 15,
                    "input_data": 2,
                    "input_param": 3,
                    "input_parameter": 1,
                    "input_value": 2
                },
                "uVar1": {
                    "result": 24,
                    "return_value": 4
                }
            },
            "called": [
                "FUN_08006c9c"
            ],
            "calling": [
                "FUN_080059b4"
            ],
            "code": "\nundefined4 process_data_08006d72(undefined4 input)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006c9c(input);\n  return result;\n}\n\n",
            "current_name": "process_data_08006d72",
            "entrypoint": "0x08006d72",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006d72": "process_data_08006d72",
                "param_1": "input",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006d8a": {
            "additional_data": {
                "FUN_08006998": {
                    "calculate_value": 1,
                    "fetch_data": 2,
                    "fetch_data_from_memory": 1,
                    "get_binary_data": 1,
                    "get_config_data": 1,
                    "get_data_from_binary": 2,
                    "get_device_info": 1,
                    "get_initial_value": 2,
                    "get_initialization_status": 1,
                    "get_result": 2,
                    "get_return_value": 1,
                    "get_status": 1,
                    "get_system_status": 1,
                    "get_task_result": 1,
                    "get_uint_value": 1,
                    "perform_operation": 1,
                    "retrieve_data": 2
                },
                "FUN_08006d8a": {
                    "execute_function": 3,
                    "execute_function_and_get_result": 1,
                    "execute_reverse_operation": 1,
                    "execute_task": 1,
                    "extract_and_return_data": 1,
                    "extract_data_from_binary": 4,
                    "get_return_value": 8,
                    "initialize_and_return_value": 1,
                    "initialize_application": 3,
                    "initialize_external_device": 1,
                    "initialize_process": 1,
                    "initialize_program": 1,
                    "initialize_system": 2,
                    "perform_default_action": 1,
                    "process_data": 1
                },
                "uVar1": {
                    "binary_data": 1,
                    "data": 1,
                    "result": 4,
                    "return_value": 4
                }
            },
            "called": [
                "FUN_08006998"
            ],
            "calling": [],
            "code": "\nundefined4 get_return_value_08006d8a(void)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006998();\n  return result;\n}\n\n",
            "current_name": "get_return_value_08006d8a",
            "entrypoint": "0x08006d8a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006d8a": "get_return_value_08006d8a",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006d98": {
            "additional_data": {
                "FUN_08006b54": {
                    "convert_character": 2,
                    "get_converted_character": 1,
                    "reverse_byte": 1
                },
                "FUN_08006c04": {
                    "convert_character": 1,
                    "handle_character": 1,
                    "process_data": 2
                },
                "FUN_08006d98": {
                    "convert_and_process_data": 1,
                    "decode_and_process": 1,
                    "decode_and_process_data": 1,
                    "execute_function": 1,
                    "initialize_and_execute": 1,
                    "parse_and_process_data": 1,
                    "process_and_invoke": 1,
                    "process_char": 1,
                    "process_character": 13,
                    "process_data": 3,
                    "process_input": 2
                },
                "param_1": {
                    "char_param1": 1,
                    "character": 13,
                    "data": 1,
                    "data1": 1,
                    "input": 1,
                    "input_byte": 5,
                    "input_char": 4,
                    "input_character": 2,
                    "input_data": 2,
                    "input_value": 1
                },
                "param_2": {
                    "additional_value1": 1,
                    "arg2": 1,
                    "char_param2": 1,
                    "data2": 1,
                    "output": 1,
                    "param1": 2,
                    "param2": 11,
                    "param_2": 4,
                    "param_a": 2,
                    "parameter2": 1,
                    "val_1": 1,
                    "value1": 4,
                    "value_1": 1
                },
                "param_3": {
                    "arg3": 1,
                    "buffer1": 1,
                    "output_data1": 2,
                    "output_ptr1": 1,
                    "param2": 1,
                    "param3": 12,
                    "param_3": 3,
                    "param_array1": 1,
                    "param_b": 1,
                    "parameter3": 1,
                    "ptr1": 1,
                    "ptr_val_1": 1,
                    "val2": 1,
                    "value2": 3,
                    "value_2": 1
                },
                "param_4": {
                    "arg4": 1,
                    "buffer2": 1,
                    "output_data2": 2,
                    "output_ptr2": 1,
                    "param3": 1,
                    "param4": 12,
                    "param_4": 3,
                    "param_array2": 1,
                    "param_c": 1,
                    "parameter4": 1,
                    "ptr2": 1,
                    "ptr_val_2": 1,
                    "val3": 1,
                    "value3": 3,
                    "value_3": 1
                },
                "uVar1": {
                    "byte_result": 1,
                    "byte_value": 1,
                    "character_int": 1,
                    "converted_byte": 3,
                    "converted_char": 3,
                    "converted_character": 5,
                    "converted_data": 2,
                    "converted_input": 1,
                    "converted_value": 5,
                    "decoded_byte": 1,
                    "decoded_character": 1,
                    "decoded_value": 1,
                    "processed_char": 1,
                    "processed_data": 1,
                    "processed_input": 1
                }
            },
            "called": [
                "FUN_08006c04",
                "FUN_08006b54"
            ],
            "calling": [],
            "code": "\nvoid process_character_08006d98(char character,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined4 converted_value;\n  \n  converted_value = FUN_08006b54((int)character);\n  FUN_08006c04(converted_value,param2,param3,param4);\n  return;\n}\n\n",
            "current_name": "process_character_08006d98",
            "entrypoint": "0x08006d98",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006d98": "process_character_08006d98",
                "param_1": "character",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "converted_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006dc4": {
            "additional_data": {
                "FUN_08006a58": {
                    "execute_operation": 1,
                    "handle_byte": 1,
                    "handle_data": 2,
                    "process_byte": 7,
                    "process_byte_data": 2,
                    "process_data": 2,
                    "process_input": 3,
                    "process_operation": 1,
                    "reverse_byte": 1
                },
                "FUN_08006dc4": {
                    "execute_function": 7,
                    "execute_operation": 1,
                    "execute_param_1": 1,
                    "execute_param_function": 2,
                    "execute_process": 1,
                    "initialize": 4,
                    "initialize_component": 1,
                    "initialize_function": 1,
                    "initialize_module": 1,
                    "perform_task": 1,
                    "process_char": 1,
                    "process_char_input": 1,
                    "process_character": 1,
                    "process_data": 4,
                    "process_input": 2,
                    "process_input_data": 1
                },
                "param_1": {
                    "byte_data": 2,
                    "character": 1,
                    "data": 3,
                    "input": 6,
                    "input_byte": 5,
                    "input_char": 3,
                    "input_data": 6,
                    "input_param": 1,
                    "input_parameter": 3,
                    "operation_code": 1
                }
            },
            "called": [
                "FUN_08006a58"
            ],
            "calling": [],
            "code": "\nvoid execute_param_function_08006dc4(char input_data)\n\n{\n  FUN_08006a58((int)input_data);\n  return;\n}\n\n",
            "current_name": "execute_param_function_08006dc4",
            "entrypoint": "0x08006dc4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006dc4": "execute_param_function_08006dc4",
                "param_1": "input_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006de0": {
            "additional_data": {
                "FUN_08006a18": {
                    "check_byte_value": 1,
                    "check_character": 1,
                    "is_byte_valid": 1
                },
                "FUN_08006de0": {
                    "convert_byte_to_bool": 1,
                    "convert_char_to_unsigned_int": 1,
                    "decode_byte": 5,
                    "decode_character": 3,
                    "decode_param": 1,
                    "process_byte": 1,
                    "process_char": 3,
                    "process_character": 2,
                    "process_input": 2,
                    "reverse_binary": 1,
                    "translate_character": 1
                },
                "param_1": {
                    "byte_to_decode": 4,
                    "byte_value": 1,
                    "character": 6,
                    "input": 4,
                    "input_byte": 11,
                    "input_char": 3,
                    "input_character": 1,
                    "input_data": 1
                },
                "uVar1": {
                    "decoded_value": 5,
                    "output_value": 1,
                    "result": 19,
                    "return_value": 1,
                    "status": 1
                }
            },
            "called": [
                "FUN_08006a18"
            ],
            "calling": [],
            "code": "\nundefined4 decode_byte_08006de0(char input_byte)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006a18((int)input_byte);\n  return result;\n}\n\n",
            "current_name": "decode_byte_08006de0",
            "entrypoint": "0x08006de0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006de0": "decode_byte_08006de0",
                "param_1": "input_byte",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006dfe": {
            "additional_data": {
                "FUN_08006a8c": {
                    "call_sub_function": 1,
                    "call_sub_sub_function": 1,
                    "handle_byte": 1,
                    "handle_character": 1,
                    "handle_data": 2,
                    "handle_input": 1,
                    "perform_action": 1,
                    "process_action": 1,
                    "process_byte": 7,
                    "process_character": 1,
                    "process_data": 4,
                    "process_input": 1,
                    "reverse_bits": 1
                },
                "FUN_08006dfe": {
                    "call_decode_function": 1,
                    "call_sub_function": 1,
                    "decode_character": 1,
                    "execute_action": 1,
                    "execute_function": 4,
                    "execute_param_action": 1,
                    "initialize": 2,
                    "initialize_function": 1,
                    "process_char": 1,
                    "process_character": 7,
                    "process_data": 6,
                    "process_input": 3,
                    "reverse_computation": 1,
                    "run_function": 1
                },
                "param_1": {
                    "action": 1,
                    "byte_param": 1,
                    "byte_to_decode": 1,
                    "character": 9,
                    "data": 7,
                    "input": 5,
                    "input_byte": 1,
                    "input_data": 3,
                    "input_parameter": 2,
                    "parameter": 1
                }
            },
            "called": [
                "FUN_08006a8c"
            ],
            "calling": [],
            "code": "\nvoid process_character_08006dfe(char character)\n\n{\n  FUN_08006a8c((int)character);\n  return;\n}\n\n",
            "current_name": "process_character_08006dfe",
            "entrypoint": "0x08006dfe",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006dfe": "process_character_08006dfe",
                "param_1": "character"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006e1a": {
            "additional_data": {
                "FUN_08006ac0": {
                    "check_byte": 1,
                    "check_character": 1,
                    "check_condition": 3
                },
                "FUN_08006e1a": {
                    "convert_byte_to_int": 1,
                    "convert_byte_to_u_int": 1,
                    "decode_byte": 3,
                    "decode_char": 1,
                    "decode_character": 4,
                    "decode_param": 1,
                    "extract_byte_from_binary": 1,
                    "extract_character": 1,
                    "get_converted_value": 1,
                    "parse_character": 3,
                    "process_char": 1,
                    "process_character": 5,
                    "reverse_func": 1,
                    "reverse_param": 1,
                    "translate_char_to_value": 1
                },
                "param_1": {
                    "byte": 1,
                    "byte_from_binary": 1,
                    "byte_to_decode": 1,
                    "char_to_decode": 1,
                    "character": 10,
                    "encoded_character": 1,
                    "encoded_value": 1,
                    "input": 1,
                    "input_byte": 9,
                    "input_char": 3,
                    "input_character": 1,
                    "input_parameter": 1
                },
                "uVar1": {
                    "converted_int": 1,
                    "converted_value": 1,
                    "decoded_byte": 1,
                    "decoded_value": 5,
                    "is_valid": 1,
                    "result": 9,
                    "return_value": 3
                }
            },
            "called": [
                "FUN_08006ac0"
            ],
            "calling": [],
            "code": "\nundefined4 process_character_08006e1a(char character)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006ac0((int)character);\n  return result;\n}\n\n",
            "current_name": "process_character_08006e1a",
            "entrypoint": "0x08006e1a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006e1a": "process_character_08006e1a",
                "param_1": "character",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006e88": {
            "additional_data": {
                "FUN_08006e88": {
                    "update_binary_parameters": 1,
                    "update_bits": 2,
                    "update_configuration": 3,
                    "update_data_values": 1,
                    "update_flags": 2,
                    "update_memory_layout": 1,
                    "update_param_values": 3,
                    "update_parameters": 7,
                    "update_params": 5,
                    "update_registers": 6
                },
                "UpdateBit": {
                    "update_bit": 1
                },
                "_DAT_40013800": {
                    "memory_location2": 1
                },
                "_DAT_40013c00": {
                    "memory_location3": 1
                },
                "_DAT_40013c04": {
                    "memory_location4": 1
                },
                "_DAT_40013c08": {
                    "memory_location5": 1
                },
                "_DAT_40013c0c": {
                    "memory_location6": 1
                },
                "_DAT_40023844": {
                    "memory_location1": 1
                },
                "iVar3": {
                    "array_index": 2,
                    "block_index": 2,
                    "data_index": 2,
                    "index": 17,
                    "param_index": 2,
                    "register_index": 4,
                    "var_index": 1
                },
                "local_c": {
                    "bit_index": 5,
                    "bit_position": 2,
                    "counter": 11,
                    "i": 1,
                    "index": 3,
                    "loop_counter": 6,
                    "loop_index": 2,
                    "loop_var": 1
                },
                "param_1": {
                    "base_address": 1,
                    "config_array": 1,
                    "configuration": 2,
                    "current_values": 1,
                    "input_params": 1,
                    "memory_blocks": 1,
                    "original_params": 1,
                    "output": 1,
                    "output_data": 1,
                    "output_params": 10,
                    "register_1": 1,
                    "register_array": 4,
                    "register_array1": 1,
                    "registers": 3,
                    "target": 1,
                    "target_params": 1
                },
                "param_2": {
                    "bit_data_array": 1,
                    "bitmask": 1,
                    "config_data": 1,
                    "config_params": 1,
                    "data": 1,
                    "flags": 1,
                    "input": 1,
                    "input_array": 3,
                    "input_data": 2,
                    "input_params": 10,
                    "input_values": 1,
                    "new_params": 1,
                    "new_values": 1,
                    "register_2": 1,
                    "register_array2": 1,
                    "source": 1,
                    "source_params": 1,
                    "update_array": 1,
                    "update_values": 1
                },
                "uVar1": {
                    "bit_mask": 21,
                    "bit_shift": 1,
                    "bit_value": 1,
                    "bitmask": 1,
                    "mask": 6,
                    "shifted_bit": 1
                },
                "uVar2": {
                    "bit": 1,
                    "bit_and": 1,
                    "bit_check": 11,
                    "bit_mask": 1,
                    "bit_result": 2,
                    "bit_value": 8,
                    "bitwise_and": 1,
                    "bitwise_and_result": 1,
                    "extracted_bit": 1,
                    "flag": 1,
                    "masked_value": 1,
                    "result": 1,
                    "tmp": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800778c",
                "FUN_0800640c"
            ],
            "code": "\n\n\nvoid update_binary_parameters_08006e88(uint *output_params,uint *input_params)\n\n{\n  uint bit_mask;\n  uint bit_check;\n  int index;\n  uint counter;\n  \n  for (counter = 0; counter < 0x10; counter = counter + 1) {\n    bit_mask = 1 << (counter & 0xff);\n    bit_check = *input_params & bit_mask;\n    if (bit_check == bit_mask) {\n      if ((input_params[1] == 2) || (input_params[1] == 0x12)) {\n        bit_mask = input_params[4];\n        output_params[(counter >> 3) + 8] = output_params[(counter >> 3) + 8] & ~(0xf << ((counter & 7) << 2));\n        output_params[(counter >> 3) + 8] = output_params[(counter >> 3) + 8] | bit_mask << ((counter & 7) << 2);\n      }\n      *output_params = *output_params & ~(3 << ((counter & 0x7f) << 1));\n      *output_params = *output_params | (input_params[1] & 3) << ((counter & 0x7f) << 1);\n      if ((((input_params[1] == 1) || (input_params[1] == 2)) || (input_params[1] == 0x11)) || (input_params[1] == 0x12)\n         ) {\n        output_params[2] = output_params[2] & ~(3 << ((counter & 0x7f) << 1));\n        output_params[2] = output_params[2] | input_params[3] << ((counter & 0x7f) << 1);\n        output_params[1] = output_params[1] & ~(1 << (counter & 0xff));\n        output_params[1] = output_params[1] | (input_params[1] >> 4 & 1) << (counter & 0xff);\n      }\n      output_params[3] = output_params[3] & ~(3 << ((counter & 0x7f) << 1));\n      output_params[3] = output_params[3] | input_params[2] << ((counter & 0x7f) << 1);\n      if ((input_params[1] & 0x10000000) != 0) {\n        _DAT_40023844 = _DAT_40023844 | 0x4000;\n        *(uint *)(((counter >> 2) + 2) * 4 + 0x40013800) =\n             ~(0xf << ((counter & 3) << 2)) & *(uint *)(((counter >> 2) + 2) * 4 + 0x40013800);\n        if (output_params == (uint *)0x40020000) {\n          index = 0;\n        }\n        else if (output_params == (uint *)0x40020400) {\n          index = 1;\n        }\n        else if (output_params == (uint *)0x40020800) {\n          index = 2;\n        }\n        else if (output_params == (uint *)0x40020c00) {\n          index = 3;\n        }\n        else if (output_params == (uint *)0x40021000) {\n          index = 4;\n        }\n        else if (output_params == (uint *)0x40021400) {\n          index = 5;\n        }\n        else if (output_params == (uint *)0x40021800) {\n          index = 6;\n        }\n        else if (output_params == (uint *)0x40021c00) {\n          index = 7;\n        }\n        else if (output_params == (uint *)0x40022000) {\n          index = 8;\n        }\n        else if (output_params == (uint *)0x40022400) {\n          index = 9;\n        }\n        else {\n          index = 10;\n        }\n        *(uint *)(((counter >> 2) + 2) * 4 + 0x40013800) =\n             index << ((counter & 3) << 2) | *(uint *)(((counter >> 2) + 2) * 4 + 0x40013800);\n        _DAT_40013c00 = ~bit_check & _DAT_40013c00;\n        _DAT_40013c04 = ~bit_check & _DAT_40013c04;\n        if ((input_params[1] & 0x10000) != 0) {\n          _DAT_40013c00 = bit_check | _DAT_40013c00;\n        }\n        if ((input_params[1] & 0x20000) != 0) {\n          _DAT_40013c04 = bit_check | _DAT_40013c04;\n        }\n        _DAT_40013c08 = ~bit_check & _DAT_40013c08;\n        _DAT_40013c0c = ~bit_check & _DAT_40013c0c;\n        if ((input_params[1] & 0x100000) != 0) {\n          _DAT_40013c08 = bit_check | _DAT_40013c08;\n        }\n        if ((input_params[1] & 0x200000) != 0) {\n          _DAT_40013c0c = bit_check | _DAT_40013c0c;\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "update_binary_parameters_08006e88",
            "entrypoint": "0x08006e88",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006e88": "update_binary_parameters_08006e88",
                "iVar3": "index",
                "local_c": "counter",
                "param_1": "output_params",
                "param_2": "input_params",
                "uVar1": "bit_mask",
                "uVar2": "bit_check"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800733e": {
            "additional_data": {
                "0x18": {
                    "offset2": 1,
                    "offset_b": 1,
                    "param_option_b": 1,
                    "param_value2_offset": 1,
                    "second_param_offset": 1,
                    "second_parameter_offset": 1,
                    "second_value_offset": 1
                },
                "0x1a": {
                    "first_param_offset": 1,
                    "first_parameter_offset": 1,
                    "first_value_offset": 1,
                    "offset1": 1,
                    "offset_a": 1,
                    "param_option_a": 1,
                    "param_value1_offset": 1
                },
                "FUN_0800733e": {
                    "assign_param": 1,
                    "assign_param_value": 3,
                    "assign_value_based_on_flag": 1,
                    "set_component_value": 1,
                    "set_param": 3,
                    "set_param_value": 8,
                    "store_parameter_value": 1,
                    "update_data": 1,
                    "update_index": 1,
                    "update_param": 4,
                    "update_parameter": 5,
                    "update_parameter_value": 2
                },
                "param_1": {
                    "array": 1,
                    "base_address": 8,
                    "component_address": 1,
                    "container_address": 1,
                    "data_address": 2,
                    "data_ptr": 1,
                    "data_structure": 1,
                    "function_pointer": 1,
                    "obj": 1,
                    "obj_addr": 1,
                    "obj_offset": 1,
                    "obj_pointer": 1,
                    "object_address": 10,
                    "target_address": 1
                },
                "param_2": {
                    "component_value": 1,
                    "new_param_value": 2,
                    "new_parameter": 1,
                    "new_value": 10,
                    "param_value": 2,
                    "value": 13,
                    "value_to_assign": 1,
                    "value_to_set": 1
                },
                "param_3": {
                    "condition": 4,
                    "condition_flag": 2,
                    "flag": 5,
                    "is_alternate": 1,
                    "is_default_value": 1,
                    "is_flag_set": 1,
                    "is_non_null": 1,
                    "is_second_index": 1,
                    "is_second_param": 4,
                    "is_second_parameter": 1,
                    "is_second_value": 4,
                    "is_secondary": 1,
                    "is_secondary_param": 1,
                    "is_zero": 3,
                    "should_update_second_field": 1
                },
                "param_4": {
                    "is_third_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800778c"
            ],
            "code": "\nvoid set_param_value_0800733e(int object_address,undefined2 value,char flag)\n\n{\n  if (flag == '\\0') {\n    *(undefined2 *)(object_address + 0x1a) = value;\n  }\n  else {\n    *(undefined2 *)(object_address + 0x18) = value;\n  }\n  return;\n}\n\n",
            "current_name": "set_param_value_0800733e",
            "entrypoint": "0x0800733e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800733e": "set_param_value_0800733e",
                "param_1": "object_address",
                "param_2": "value",
                "param_3": "flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800738e": {
            "additional_data": {
                "FUNC_080073c0": {
                    "apply_config_changes": 1,
                    "execute_function": 2,
                    "execute_operation": 1,
                    "execute_task": 1,
                    "handle_update": 1,
                    "perform_action": 5,
                    "perform_update": 1,
                    "process_data": 10,
                    "process_updated_data": 1,
                    "write_to_database": 1
                },
                "FUN_0800738e": {
                    "check_and_update_param": 1,
                    "process_param": 1,
                    "update_and_call_function": 4,
                    "update_config": 1,
                    "update_data": 6,
                    "update_data_and_call_function": 5,
                    "update_data_if_flag_set": 2,
                    "update_data_if_match": 1,
                    "update_data_if_necessary": 1,
                    "update_data_if_set": 1,
                    "update_database_entry": 1,
                    "update_flag_if_param_set": 1,
                    "update_if_param_1": 1,
                    "update_param_and_call_func": 2,
                    "update_param_and_call_function": 1,
                    "update_parameter_and_call_function": 2
                },
                "_DAT_40013c14": {
                    "config_mask": 1,
                    "current_data": 1,
                    "data": 2,
                    "data_flag": 6,
                    "data_mask": 1,
                    "data_value": 2,
                    "data_variable": 1,
                    "existing_data": 1,
                    "flag": 3,
                    "flag_value": 1,
                    "param_mask": 1,
                    "update_flag": 2
                },
                "param_1": {
                    "config_value": 1,
                    "data": 7,
                    "data_to_update": 1,
                    "entry_status": 1,
                    "input": 3,
                    "input_data": 3,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_value": 10,
                    "new_data": 1,
                    "new_value": 1,
                    "param": 1
                }
            },
            "called": [
                "FUN_080073c0"
            ],
            "calling": [],
            "code": "\n\n\nvoid update_data_and_call_function_0800738e(ushort input_value)\n\n{\n  if ((input_value & _DAT_40013c14) != 0) {\n    _DAT_40013c14 = (uint)input_value;\n    FUNC_080073c0(input_value);\n  }\n  return;\n}\n\n",
            "current_name": "update_data_and_call_function_0800738e",
            "entrypoint": "0x0800738e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800738e": "update_data_and_call_function_0800738e",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080073c0": {
            "called": [],
            "calling": [
                "FUN_0800738e"
            ],
            "code": "\nvoid FUNC_080073c0(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080073c0",
            "entrypoint": "0x080073c0",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080073c0": "FUNC_080073c0"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080073d4": {
            "additional_data": {
                "DAT_": {
                    "unchanged": 1
                },
                "FUN_080073d4": {
                    "modify_bits": 1,
                    "set_bit": 3,
                    "set_bit_in_array": 1,
                    "set_bit_in_memory": 13,
                    "set_bit_in_short_array": 1,
                    "set_bit_value": 2,
                    "store_bit_in_memory": 1,
                    "store_bit_pattern_to_memory": 1,
                    "store_bits_in_memory": 1,
                    "store_bitwise_value": 1,
                    "update_bitmap": 1,
                    "update_memory": 1,
                    "update_memory_address": 1,
                    "update_short_at_offset": 1,
                    "update_short_value": 1,
                    "write_bit_to_address": 1
                },
                "PTR_": {
                    "unchanged": 1
                },
                "param_1": {
                    "bit_position": 8,
                    "bitmap_index": 1,
                    "index": 2,
                    "input": 7,
                    "input_value": 11,
                    "memory_value": 1,
                    "value": 1
                },
                "short": {
                    "half_word": 1,
                    "short": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08007520"
            ],
            "code": "\nvoid set_bit_in_memory_080073d4(uint input_value)\n\n{\n  *(short *)(((int)input_value >> 4) * 0x400 + 0x4002001a) = (short)(1 << (input_value & 0xf));\n  return;\n}\n\n",
            "current_name": "set_bit_in_memory_080073d4",
            "entrypoint": "0x080073d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080073d4": "set_bit_in_memory_080073d4",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007402": {
            "additional_data": {
                "0x400": {
                    "address_offset": 1,
                    "array_offset": 1,
                    "block_size": 1
                },
                "0x40020018": {
                    "array_start_address": 1,
                    "base_address": 2,
                    "memory_address": 2,
                    "memory_offset": 1
                },
                "0xf": {
                    "offset": 1
                },
                "DAT_": {
                    "": 1
                },
                "FUN_08007402": {
                    "map_value_to_memory": 1,
                    "set_bit_at_index": 1,
                    "set_bit_at_offset": 1,
                    "set_bit_in_array": 2,
                    "set_bit_in_memory": 12,
                    "set_bit_value": 1,
                    "set_short_value_at_offset": 1,
                    "store_bit_in_memory": 1,
                    "store_bitwise_value": 1,
                    "update_bit": 1,
                    "update_bitwise_value": 1,
                    "update_memory": 1,
                    "update_memory_value": 1,
                    "update_value_at_offset": 1,
                    "write_bit_to_memory": 4,
                    "write_bits_to_memory": 1
                },
                "PTR_": {
                    "": 1
                },
                "param_1": {
                    "array_index": 1,
                    "bit_index": 2,
                    "bit_position": 2,
                    "bit_to_set": 1,
                    "data": 1,
                    "index": 2,
                    "input": 9,
                    "input_number": 1,
                    "input_param": 1,
                    "input_value": 8,
                    "memory_address": 1,
                    "value": 2
                },
                "short": {
                    "short": 1,
                    "ushort": 1
                },
                "value": {
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080074c8"
            ],
            "code": "\nvoid set_bit_in_memory_08007402(uint input)\n\n{\n  *(short *)(((int)input >> 4) * 0x400 + 0x40020018) = (short)(1 << (input & 0xf));\n  return;\n}\n\n",
            "current_name": "set_bit_in_memory_08007402",
            "entrypoint": "0x08007402",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007402": "set_bit_in_memory_08007402",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007430": {
            "additional_data": {
                "DAT_": {
                    "": 1,
                    "dat_": 1
                },
                "FUN_08007430": {
                    "do_nothing_loop": 1,
                    "infinite_loop": 27,
                    "infinite_loop_function": 1,
                    "run_infinite_loop": 1,
                    "wait_forever": 1
                },
                "PTR_": {
                    "": 1,
                    "ptr_": 1
                },
                "do": {
                    "do": 4,
                    "infinite_loop": 1,
                    "infinite_loop_do": 1,
                    "loop": 1,
                    "repeatedly": 1,
                    "while": 1
                },
                "true": {
                    "always_true": 1,
                    "true": 7
                },
                "while": {
                    "infinite_loop": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08007436"
            ],
            "code": "\nvoid infinite_loop_function_08007430(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } infinite_loop( true );\n}\n\n",
            "current_name": "infinite_loop_function_08007430",
            "entrypoint": "0x08007430",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007430": "infinite_loop_function_08007430",
                "while": "infinite_loop"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007436": {
            "additional_data": {
                "FUN_08005cec": {
                    "check_condition": 1,
                    "check_config_flag": 1,
                    "check_flag": 2,
                    "check_flag1": 1,
                    "check_flag_values": 1,
                    "check_status": 1,
                    "function1": 1,
                    "initialize_connection": 1,
                    "initialize_module": 1,
                    "process_data": 2,
                    "process_data1": 1,
                    "verify_param1": 1
                },
                "FUN_0800618c": {
                    "configure_parameters": 1,
                    "configure_settings": 1,
                    "execute_command": 1,
                    "execute_task": 1,
                    "function2": 1,
                    "perform_action": 1,
                    "perform_operation": 4,
                    "process_data": 2,
                    "process_data2": 1,
                    "verify_params": 1
                },
                "FUN_08007430": {
                    "error_handler": 1,
                    "error_handling_function": 1,
                    "handle_error": 10,
                    "handle_error1": 1,
                    "handle_initialization_error": 1
                },
                "FUN_08007436": {
                    "configure_hardware": 2,
                    "enable_memory_operations": 1,
                    "initialize": 1,
                    "initialize_binary": 3,
                    "initialize_binary_settings": 2,
                    "initialize_components": 2,
                    "initialize_config": 1,
                    "initialize_configuration": 1,
                    "initialize_flags": 2,
                    "initialize_function": 1,
                    "initialize_hardware": 1,
                    "initialize_memory": 1,
                    "initialize_registers": 1,
                    "initialize_system": 9,
                    "initialize_variables": 1,
                    "set_flags_and_initialize": 1,
                    "setup_and_run": 1
                },
                "_DAT_40007000": {
                    "hardware_register2": 1
                },
                "_DAT_40023840": {
                    "hardware_register1": 1
                },
                "iVar1": {
                    "result": 7,
                    "result1": 1
                },
                "local_10": {
                    "address2": 3,
                    "config_flag12": 1,
                    "config_param12": 1,
                    "constant_six": 1,
                    "flag12": 1,
                    "flag_twelve": 1,
                    "num4": 1,
                    "offset": 1,
                    "param12": 5,
                    "param4": 2,
                    "param_4": 1,
                    "parameter12": 1,
                    "parameter5": 1,
                    "value10": 1,
                    "value4": 2,
                    "value7": 1,
                    "value9": 3,
                    "var12": 3,
                    "var4": 1
                },
                "local_14": {
                    "config_flag11": 1,
                    "config_param11": 1,
                    "flag11": 1,
                    "flag5": 1,
                    "flag_eleven": 1,
                    "flag_six": 1,
                    "num3": 1,
                    "number7": 1,
                    "param11": 5,
                    "param3": 2,
                    "param_3": 1,
                    "parameter11": 1,
                    "parameter3": 2,
                    "some_value3": 1,
                    "value3": 1,
                    "value8": 3,
                    "value9": 1,
                    "var11": 3,
                    "var3": 1
                },
                "local_18": {
                    "config_flag10": 1,
                    "config_param10": 1,
                    "flag10": 1,
                    "flag4": 1,
                    "flag_five": 1,
                    "flag_ten": 1,
                    "num2": 1,
                    "number6": 2,
                    "param10": 5,
                    "param2": 2,
                    "param_2": 1,
                    "parameter10": 1,
                    "parameter2": 2,
                    "parameter4": 1,
                    "value": 1,
                    "value2": 1,
                    "value7": 3,
                    "value8": 1,
                    "var10": 3,
                    "var2": 1
                },
                "local_1c": {
                    "config_flag9": 1,
                    "config_param9": 1,
                    "error_flag": 1,
                    "flag3": 3,
                    "flag9": 1,
                    "flag_four": 1,
                    "flag_nine": 1,
                    "num1": 1,
                    "number5": 2,
                    "param1": 2,
                    "param9": 5,
                    "param_1": 1,
                    "parameter1": 2,
                    "parameter3": 1,
                    "parameter9": 1,
                    "value1": 1,
                    "value6": 1,
                    "value7": 1,
                    "var1": 1,
                    "var9": 3
                },
                "local_20": {
                    "config_flag8": 1,
                    "config_param8": 1,
                    "constant6": 1,
                    "constant_five": 1,
                    "constant_value4": 1,
                    "count": 1,
                    "flag8": 1,
                    "flag_eight": 1,
                    "number4": 2,
                    "param8": 6,
                    "parameter8": 1,
                    "value2": 1,
                    "value3": 1,
                    "value4": 2,
                    "value5": 1,
                    "value6": 5,
                    "var8": 3,
                    "var_6": 1
                },
                "local_24": {
                    "config_flag7": 1,
                    "config_param7": 1,
                    "constant5": 1,
                    "constant_four": 1,
                    "constant_value3": 1,
                    "counter3": 1,
                    "flag7": 1,
                    "flag_seven": 1,
                    "number3": 2,
                    "param7": 6,
                    "parameter7": 1,
                    "some_value2": 1,
                    "value1": 1,
                    "value3": 2,
                    "value4": 1,
                    "value5": 5,
                    "var7": 3,
                    "var_5": 1
                },
                "local_28": {
                    "config_flag6": 1,
                    "config_param6": 1,
                    "constant4": 1,
                    "constant_three": 1,
                    "constant_value2": 1,
                    "flag6": 1,
                    "flag_six": 1,
                    "limit": 1,
                    "param6": 6,
                    "parameter6": 1,
                    "size": 2,
                    "value1": 2,
                    "value2": 2,
                    "value3": 1,
                    "value4": 5,
                    "var6": 3,
                    "var_4": 1
                },
                "local_2c": {
                    "another_value": 1,
                    "config_flag5": 1,
                    "config_param5": 1,
                    "constant3": 1,
                    "constant_two": 1,
                    "constant_value": 1,
                    "count": 1,
                    "counter2": 1,
                    "flag5": 1,
                    "flag_five": 1,
                    "number2": 2,
                    "param5": 6,
                    "parameter5": 1,
                    "value1": 1,
                    "value2": 2,
                    "value3": 5,
                    "var5": 3,
                    "var_3": 1
                },
                "local_30": {
                    "address": 1,
                    "address1": 3,
                    "config_flag4": 1,
                    "config_param4": 1,
                    "constant2": 1,
                    "constant_one": 1,
                    "flag4": 1,
                    "flag_four": 1,
                    "initial_value": 1,
                    "mask1": 1,
                    "memory_address": 1,
                    "param4": 6,
                    "parameter2": 1,
                    "parameter4": 1,
                    "value1": 1,
                    "value2": 5,
                    "var4": 3,
                    "var_2": 1
                },
                "local_34": {
                    "config_flag3": 1,
                    "config_param3": 1,
                    "constant1": 1,
                    "counter1": 1,
                    "flag3": 3,
                    "flag_three": 2,
                    "number1": 2,
                    "param3": 6,
                    "parameter1": 1,
                    "parameter3": 1,
                    "some_value": 1,
                    "value1": 7,
                    "var3": 3,
                    "var_1": 1
                },
                "local_48": {
                    "config_flag2": 1,
                    "config_param2": 1,
                    "flag2": 14,
                    "flag_2": 1,
                    "flag_two": 2,
                    "is_flag_set2": 1,
                    "is_set_flag2": 1,
                    "param2": 6,
                    "parameter2": 1,
                    "var2": 3
                },
                "local_4c": {
                    "config_flag1": 1,
                    "config_param1": 1,
                    "flag1": 14,
                    "flag_1": 1,
                    "flag_one": 2,
                    "is_flag_set": 1,
                    "is_set_flag": 1,
                    "param1": 6,
                    "parameter1": 1,
                    "var1": 3
                },
                "local_c": {
                    "address3": 2,
                    "config_flag13": 1,
                    "config_param13": 1,
                    "constant_seven": 1,
                    "flag13": 1,
                    "flag_thirteen": 1,
                    "num5": 1,
                    "param13": 5,
                    "param5": 2,
                    "param_5": 1,
                    "parameter13": 1,
                    "parameter6": 1,
                    "size": 1,
                    "size2": 1,
                    "value10": 3,
                    "value11": 1,
                    "value5": 2,
                    "value8": 1,
                    "var13": 3,
                    "var5": 1
                },
                "param_1": {
                    "input1": 1
                },
                "param_2": {
                    "input2": 1
                }
            },
            "called": [
                "FUN_08005cec",
                "FUN_08007430",
                "FUN_0800618c"
            ],
            "calling": [
                "FUN_08007540"
            ],
            "code": "\n\n\nvoid initialize_system_08007436(void)\n\n{\n  int result;\n  undefined4 flag1;\n  undefined4 flag2;\n  undefined4 value1;\n  undefined4 param4;\n  undefined4 param5;\n  undefined4 param6;\n  undefined4 param7;\n  undefined4 param8;\n  undefined4 param9;\n  undefined4 param10;\n  undefined4 param11;\n  undefined4 param12;\n  undefined4 param13;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0xc000;\n  flag1 = 1;\n  flag2 = 1;\n  value1 = 2;\n  param4 = 0x400000;\n  param5 = 8;\n  param6 = 0x150;\n  param7 = 2;\n  param8 = 7;\n  result = FUN_08005cec(&flag1);\n  if (result != 0) {\n    FUN_08007430();\n  }\n  param9 = 0xf;\n  param10 = 2;\n  param11 = 0;\n  param12 = 0x1400;\n  param13 = 0x1000;\n  result = FUN_0800618c(&param9,5);\n  if (result != 0) {\n    FUN_08007430();\n  }\n  return;\n}\n\n",
            "current_name": "initialize_system_08007436",
            "entrypoint": "0x08007436",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007436": "initialize_system_08007436",
                "iVar1": "result",
                "local_10": "param12",
                "local_14": "param11",
                "local_18": "param10",
                "local_1c": "param9",
                "local_20": "param8",
                "local_24": "param7",
                "local_28": "param6",
                "local_2c": "param5",
                "local_30": "param4",
                "local_34": "value1",
                "local_48": "flag2",
                "local_4c": "flag1",
                "local_c": "param13"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080074c8": {
            "additional_data": {
                "0x1e": {
                    "condition2_mask": 1,
                    "condition_mask_a": 1,
                    "flag": 1,
                    "flag1_mask": 1,
                    "flag_a": 1,
                    "flag_b_mask": 2,
                    "flag_mask": 1,
                    "flag_mask1": 1,
                    "mask_a": 1,
                    "mask_one": 1,
                    "variable_a_mask": 1
                },
                "0x3e": {
                    "action1_param": 2,
                    "action_a_parameter": 1,
                    "argument1": 1,
                    "case1_value": 2,
                    "constant_value": 1,
                    "error_flag": 1,
                    "error_type": 1,
                    "event_flag_a": 1,
                    "flag_a_constant": 1,
                    "flag_a_value": 2,
                    "message_code": 1,
                    "value_a": 3,
                    "value_one": 1
                },
                "0x80": {
                    "condition3_mask": 1,
                    "condition_mask_b": 1,
                    "flag2": 1,
                    "flag2_mask": 1,
                    "flag_b": 1,
                    "flag_c_mask": 2,
                    "flag_mask2": 2,
                    "mask_b": 1,
                    "mask_two": 1,
                    "variable_b_mask": 1
                },
                "DAT_20000e4c": {
                    "check_flag_a": 2,
                    "condition1": 2,
                    "condition1_flag": 1,
                    "condition_a": 1,
                    "data1": 1,
                    "flag1": 4,
                    "flag_a": 1,
                    "flag_b_condition": 1,
                    "flag_one": 1,
                    "is_condition_met_a": 1,
                    "is_flag_b_set": 1,
                    "some_condition_a": 1,
                    "variable1": 1,
                    "variable_a": 1
                },
                "DAT_20000e50": {
                    "check_flag_b": 2,
                    "condition2": 2,
                    "condition3_flag": 1,
                    "condition_b": 1,
                    "data2": 1,
                    "flag2": 4,
                    "flag_b": 1,
                    "flag_c_condition": 1,
                    "flag_two": 1,
                    "is_condition_met_b": 1,
                    "is_flag_c_set": 1,
                    "some_condition_b": 1,
                    "variable2": 1,
                    "variable_b": 1
                },
                "FUN_0800195c": {
                    "execute_action2": 1,
                    "execute_action_a": 1,
                    "execute_flag_mask_action": 1,
                    "execute_function_b": 1,
                    "execute_function_c": 1,
                    "execute_operation": 2,
                    "handle_case2": 1,
                    "handle_case_two": 2,
                    "handle_flag_b": 3,
                    "handle_non_zero_dat": 1,
                    "handle_second_flag": 1,
                    "handle_value_b": 1,
                    "handle_variable_a": 1,
                    "invoke_function2": 1,
                    "perform_action": 1,
                    "perform_action1": 1,
                    "perform_action2": 2,
                    "perform_action3": 1,
                    "perform_action_b": 1,
                    "perform_task": 2,
                    "process_case2": 1,
                    "process_flag_a": 1,
                    "process_flag_b": 1,
                    "update_value_b": 1
                },
                "FUN_08003a18": {
                    "execute_action3": 1,
                    "execute_flag80_action": 1,
                    "execute_function": 1,
                    "execute_function_b": 1,
                    "execute_function_c": 1,
                    "handle_case3": 1,
                    "handle_case_three": 2,
                    "handle_flag_c": 3,
                    "handle_high_bit_param": 1,
                    "handle_third_flag": 1,
                    "handle_value_c": 1,
                    "handle_variable_b": 1,
                    "invoke_function3": 1,
                    "perform_action2": 2,
                    "perform_action3": 2,
                    "perform_action_c": 1,
                    "process_case3": 1,
                    "process_event_flag_b": 1,
                    "process_flag": 2,
                    "process_flag_c": 1,
                    "process_input": 2,
                    "process_value_b": 1,
                    "update_value_c": 1
                },
                "FUN_08007402": {
                    "execute_action1": 1,
                    "execute_flag1_action": 1,
                    "execute_function_a": 2,
                    "handle_case1": 1,
                    "handle_case_one": 2,
                    "handle_even_param": 1,
                    "handle_first_flag": 1,
                    "handle_flag": 2,
                    "handle_flag_a": 4,
                    "handle_value_a": 1,
                    "invoke_function1": 1,
                    "log_error": 1,
                    "perform_action1": 3,
                    "perform_action_a": 1,
                    "print_error_message": 1,
                    "print_message": 1,
                    "process_case1": 1,
                    "process_event_flag_a": 1,
                    "process_flag_a": 1,
                    "process_value_a": 1,
                    "send_error_message": 1,
                    "update_value_a": 1
                },
                "FUN_080074c8": {
                    "check_and_execute_actions": 1,
                    "execute_function": 1,
                    "execute_function_based_on_param": 1,
                    "handle_event": 1,
                    "handle_flags": 3,
                    "handle_function": 1,
                    "handle_input": 1,
                    "handle_param": 2,
                    "handle_parameter": 1,
                    "process_flags": 10,
                    "process_input": 2,
                    "process_parameter": 5,
                    "update_function": 1,
                    "update_settings": 1
                },
                "param_1": {
                    "event_flags": 1,
                    "flags": 13,
                    "function_param": 1,
                    "input": 3,
                    "input_flags": 5,
                    "input_parameter": 1,
                    "param": 2,
                    "parameter": 5
                }
            },
            "called": [
                "FUN_08007402",
                "FUN_08003a18",
                "FUN_0800195c"
            ],
            "calling": [
                "FUN_08007930"
            ],
            "code": "\nvoid process_flags_080074c8(uint flags)\n\n{\n  if ((flags & 1) != 0) {\n    FUN_08007402(0x3e);\n  }\n  if ((DAT_20000e4c != 0) && ((flags & 0x1e) != 0)) {\n    FUN_0800195c();\n  }\n  if ((DAT_20000e50 != 0) && ((flags & 0x80) != 0)) {\n    FUN_08003a18(flags);\n  }\n  return;\n}\n\n",
            "current_name": "process_flags_080074c8",
            "entrypoint": "0x080074c8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080074c8": "process_flags_080074c8",
                "param_1": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007520": {
            "additional_data": {
                "FUN_080073d4": {
                    "call_sub_function": 2,
                    "execute_action": 1,
                    "execute_function": 2,
                    "execute_sub_function": 3,
                    "invoke_sub_function": 1,
                    "perform_action": 1,
                    "print_error_message": 1,
                    "print_message": 1,
                    "print_value": 1,
                    "process_data": 1,
                    "send_command": 1,
                    "send_data": 3,
                    "send_signal": 1
                },
                "FUN_08007520": {
                    "check_and_call_function": 6,
                    "check_and_call_sub_function": 1,
                    "check_and_call_subfunction": 1,
                    "check_and_execute_function": 1,
                    "check_and_invoke_function": 1,
                    "check_bit_and_call_function": 1,
                    "execute_conditional_function": 2,
                    "execute_if_odd": 1,
                    "handle_odd_parameter": 1,
                    "handle_param": 5,
                    "handle_param_one": 1,
                    "print_if_odd": 1,
                    "process_flag": 1,
                    "process_input": 1,
                    "process_param": 4,
                    "process_parameter": 2,
                    "trigger_function": 1
                },
                "param_1": {
                    "data": 2,
                    "data_to_send": 1,
                    "flag": 2,
                    "input": 6,
                    "input_flag": 1,
                    "input_number": 2,
                    "input_param": 5,
                    "input_parameter": 1,
                    "input_value": 7,
                    "param": 3,
                    "value": 1
                }
            },
            "called": [
                "FUN_080073d4"
            ],
            "calling": [
                "FUN_08007930"
            ],
            "code": "\nvoid check_bit_and_call_function_08007520(uint input_value)\n\n{\n  if ((input_value & 1) != 0) {\n    FUN_080073d4(0x3e);\n  }\n  return;\n}\n\n",
            "current_name": "check_bit_and_call_function_08007520",
            "entrypoint": "0x08007520",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007520": "check_bit_and_call_function_08007520",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007540": {
            "additional_data": {
                "FUN_08001ddc": {
                    "clean_up_resources": 1,
                    "cleanup": 1,
                    "cleanup_resources": 5,
                    "do_something": 1,
                    "final_cleanup": 2,
                    "finalize_initialization": 1,
                    "finalize_setup": 1,
                    "initialize_network": 1,
                    "initialize_system": 1,
                    "perform_additional_setup": 1,
                    "perform_additional_task": 1,
                    "perform_cleanup": 10,
                    "perform_initialization": 3,
                    "perform_shutdown": 1,
                    "process_input": 1
                },
                "FUN_08005984": {
                    "another_function": 1,
                    "execute_subtask_3": 1,
                    "execute_task": 1,
                    "run_setup": 1,
                    "set_configuration": 2,
                    "set_error_flag": 1,
                    "set_flag_value": 1,
                    "set_initial_state": 2,
                    "set_initial_value": 2,
                    "set_log_level": 1,
                    "set_logging_level": 3,
                    "set_mode": 7,
                    "set_mode_option": 1,
                    "set_option": 1,
                    "set_options": 2,
                    "set_parameter": 1,
                    "set_parameters": 1,
                    "set_value": 2
                },
                "FUN_080059b4": {
                    "configure_input": 1,
                    "do_something1": 1,
                    "initialize_audio": 1,
                    "initialize_component1": 1,
                    "initialize_components": 2,
                    "initialize_data_structures": 1,
                    "initialize_database": 1,
                    "initialize_devices": 1,
                    "initialize_environment": 1,
                    "initialize_graphics": 2,
                    "initialize_module1": 1,
                    "initialize_networking": 1,
                    "initialize_resources": 1,
                    "initialize_something": 1,
                    "initialize_subsystem": 1,
                    "initialize_subsystem_a": 1,
                    "initialize_system": 7,
                    "initialize_variables": 1,
                    "perform_initialization": 2,
                    "perform_preprocessing": 1,
                    "verify_credentials": 1
                },
                "FUN_08007436": {
                    "check_memory": 1,
                    "do_something2": 1,
                    "execute_subtask_5": 1,
                    "initialize_audio": 1,
                    "initialize_component2": 1,
                    "initialize_components": 2,
                    "initialize_database": 3,
                    "initialize_filesystem": 1,
                    "initialize_graphics": 1,
                    "initialize_logging": 1,
                    "initialize_memory": 1,
                    "initialize_module2": 1,
                    "initialize_network": 1,
                    "initialize_resources": 2,
                    "initialize_subsystem_b": 1,
                    "load_configuration": 2,
                    "load_configurations": 1,
                    "load_external_resources": 1,
                    "load_resources": 1,
                    "perform_initialization": 2,
                    "perform_task_a": 1,
                    "setup_input": 1,
                    "setup_logging": 1,
                    "validate_input": 1
                },
                "FUN_08007540": {
                    "execute_binary_function": 1,
                    "execute_main_function": 1,
                    "execute_program": 1,
                    "execute_startup_tasks": 1,
                    "initialize": 1,
                    "initialize_application": 3,
                    "initialize_components": 1,
                    "initialize_program": 16,
                    "initialize_system": 3,
                    "run_main_function": 1,
                    "run_program": 2
                },
                "FUN_0800778c": {
                    "configure_network": 1,
                    "configure_settings": 2,
                    "configure_system": 1,
                    "configure_system_settings": 1,
                    "do_something3": 1,
                    "execute_subtask_2": 1,
                    "initialize_component3": 1,
                    "initialize_database": 1,
                    "initialize_graphics": 1,
                    "initialize_logging": 1,
                    "initialize_module3": 1,
                    "initialize_network": 3,
                    "initialize_networking": 2,
                    "initialize_subsystem_c": 1,
                    "load_assets": 1,
                    "load_configuration": 2,
                    "load_data": 3,
                    "perform_calculation": 1,
                    "perform_calculations": 1,
                    "perform_task_b": 1,
                    "setup_logging": 1,
                    "update_database": 1,
                    "validate_inputs": 1
                },
                "FUN_080079c0": {
                    "configure_input": 1,
                    "configure_network": 2,
                    "configure_settings": 3,
                    "connect_to_server": 1,
                    "do_something5": 1,
                    "execute_subtask_1": 1,
                    "initialize_audio": 1,
                    "initialize_component5": 1,
                    "initialize_data": 2,
                    "initialize_data_structures": 4,
                    "initialize_database": 2,
                    "initialize_logging": 1,
                    "initialize_module5": 1,
                    "initialize_network": 1,
                    "initialize_subsystem_e": 1,
                    "initialize_variables": 1,
                    "load_configuration": 3,
                    "perform_task_d": 1,
                    "run_network_setup": 1,
                    "setup_configuration": 1
                },
                "FUN_08007e08": {
                    "check_errors": 1,
                    "configure_settings": 1,
                    "display_splash_screen": 1,
                    "do_something4": 1,
                    "establish_connection": 1,
                    "execute_algorithm": 2,
                    "execute_core_logic": 1,
                    "execute_subtask_4": 1,
                    "execute_tasks": 1,
                    "initialize_component4": 1,
                    "initialize_database": 3,
                    "initialize_gui": 1,
                    "initialize_module4": 1,
                    "initialize_networking": 1,
                    "initialize_subsystem_d": 1,
                    "load_assets": 1,
                    "load_configuration": 2,
                    "load_data": 1,
                    "perform_self_test": 1,
                    "perform_task_c": 1,
                    "process_data": 3,
                    "process_input": 1,
                    "set_defaults": 1,
                    "setup_audio": 1
                },
                "FUN_08008190": {
                    "display_results": 1,
                    "do_something6": 1,
                    "execute_subtask_6": 1,
                    "finalize": 1,
                    "finalize_application": 1,
                    "finalize_execution": 2,
                    "finalize_process": 1,
                    "finalize_setup": 1,
                    "initialize_component6": 1,
                    "initialize_graphics": 5,
                    "initialize_logging": 1,
                    "initialize_module6": 1,
                    "initialize_services": 1,
                    "initialize_settings": 1,
                    "initialize_subsystem_f": 1,
                    "initialize_ui": 1,
                    "perform_cleanup": 2,
                    "perform_operations": 1,
                    "perform_startup_checks": 1,
                    "perform_startup_tasks": 1,
                    "perform_task_e": 1,
                    "run_main_loop": 1,
                    "start_game": 1,
                    "start_service": 1
                }
            },
            "called": [
                "FUN_08001ddc",
                "FUN_080079c0",
                "FUN_0800778c",
                "FUN_08005984",
                "FUN_080059b4",
                "FUN_08007e08",
                "FUN_08007436",
                "FUN_08008190"
            ],
            "calling": [
                "entry"
            ],
            "code": "\nundefined4 initialize_program_08007540(void)\n\n{\n  FUN_080059b4();\n  FUN_08007436();\n  FUN_0800778c();\n  FUN_08007e08();\n  FUN_080079c0();\n  FUN_08008190();\n  FUN_08005984(0);\n  FUN_08001ddc();\n  return 0;\n}\n\n",
            "current_name": "initialize_program_08007540",
            "entrypoint": "0x08007540",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007540": "initialize_program_08007540"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800756c": {
            "additional_data": {
                "FUN_0800756c": {
                    "initialize_component": 1,
                    "initialize_data": 1,
                    "initialize_function": 1,
                    "initialize_hardware": 3,
                    "initialize_memory": 3,
                    "initialize_registers": 8,
                    "initialize_settings": 4,
                    "initialize_system": 8
                },
                "_": {
                    "init": 1
                },
                "_2": {
                    "config": 1
                },
                "_3": {
                    "mask_value": 1
                },
                "_4": {
                    "counter": 1
                },
                "_5": {
                    "memory_address": 1
                },
                "_DAT_40023800": {
                    "config_data": 1,
                    "config_register": 1,
                    "control_register": 9,
                    "data_register": 1,
                    "gpio_pin_configuration": 1,
                    "input_port": 1,
                    "interrupt_enable_register": 1,
                    "register1": 1,
                    "register3": 2,
                    "register_control": 1,
                    "register_value": 4,
                    "status_register": 2,
                    "system_config_register": 1,
                    "system_configuration": 1,
                    "system_control_register": 1
                },
                "_DAT_40023804": {
                    "address_register": 1,
                    "base_address": 6,
                    "base_address_register": 1,
                    "configuration_value": 1,
                    "control_reg": 1,
                    "control_register": 5,
                    "display_address": 1,
                    "gpio_control_register": 1,
                    "memory_address": 2,
                    "memory_base_address": 2,
                    "mode_register": 1,
                    "output_port": 1,
                    "peripheral_base_address": 1,
                    "register2": 3,
                    "system_config_register": 1,
                    "timer_config": 2
                },
                "_DAT_40023808": {
                    "data_register": 1,
                    "flag": 3,
                    "initialized_value": 1,
                    "register1": 2,
                    "register3": 1,
                    "status_flag": 1,
                    "status_register": 2,
                    "timer_count": 1
                },
                "_DAT_4002380c": {
                    "auxiliary_register": 1,
                    "counter": 5,
                    "counter_register": 1,
                    "interrupt_mask": 1,
                    "register4": 3,
                    "status_register": 2,
                    "system_status_register": 1
                },
                "_DAT_e000ed08": {
                    "auxiliary_register": 1,
                    "exception_handler": 1,
                    "interrupt_config": 1,
                    "interrupt_control": 3,
                    "interrupt_control_register": 7,
                    "interrupt_enable": 1,
                    "interrupt_enable_register": 4,
                    "interrupt_reg": 1,
                    "interrupt_register": 2,
                    "memory_address": 1,
                    "register5": 3,
                    "stack_pointer": 1,
                    "system_control_register": 4
                }
            },
            "called": [],
            "calling": [
                "entry"
            ],
            "code": "\n\n\nvoid initialize_data_0800756c(void)\n\n{\n  initDATcounter0023808 = 0;\n  initDATcounter0023804 = 0x24003010;\n  initDATcounter0023800 = initDATcounter0023800 & 0xfef2ffff | 1;\n  initDATcounter002380c = 0;\n  initDATinite000ed08 = 0x8000000;\n  return;\n}\n\n",
            "current_name": "initialize_data_0800756c",
            "entrypoint": "0x0800756c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800756c": "initialize_data_0800756c",
                "_": "init",
                "_4": "counter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080076c8": {
            "additional_data": {
                "0x400": {
                    "bit_offset": 1,
                    "memory_block_size": 1
                },
                "0x40020014": {
                    "base_address": 2,
                    "memory_address": 1,
                    "memory_block_address": 1
                },
                "DAT_": {
                    "": 1
                },
                "DAT_001f44f4": {
                    "constant": 1
                },
                "DAT_001f4518": {
                    "offset": 1
                },
                "FUN_080076c8": {
                    "modify_bit_at_offset": 1,
                    "modify_register_bits": 1,
                    "set_bit_at_offset": 1,
                    "toggle_bit": 4,
                    "toggle_bit_at_address": 1,
                    "toggle_bit_at_position": 1,
                    "toggle_bit_in_memory": 2,
                    "update_bit": 8,
                    "update_bit_array": 1,
                    "update_bit_in_memory": 5,
                    "update_bit_value": 3,
                    "update_data_bit": 1,
                    "update_memory": 1,
                    "write_bit": 1
                },
                "PTR_": {
                    "": 1
                },
                "PTR_INT_001f449c": {
                    "array_base_address": 1
                },
                "new_variable_name_1": {
                    "offset": 1
                },
                "new_variable_name_2": {
                    "shifted_value": 1
                },
                "offset": {
                    "address_offset": 1
                },
                "param_1": {
                    "address": 2,
                    "binary_value": 1,
                    "bit_position": 2,
                    "data": 1,
                    "index": 1,
                    "input": 13,
                    "input_index": 1,
                    "input_num": 1,
                    "input_value": 5,
                    "value": 3,
                    "value_to_update": 1
                },
                "param_2": {
                    "bit_number": 1,
                    "bit_position": 1,
                    "position": 1,
                    "shift": 1
                },
                "param_3": {
                    "base_address": 1
                },
                "param_4": {
                    "offset": 1
                },
                "param_5": {
                    "mask": 1
                },
                "param_6": {
                    "updated_value": 1
                },
                "param_n": {
                    "n": 1,
                    "unused_parameter": 1
                },
                "ptr_0x40020014": {
                    "memory_address": 1
                },
                "return": {
                    "void": 1
                },
                "uint": {
                    "unsigned_int": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08007756"
            ],
            "code": "\nvoid update_bit_in_memory_080076c8(unsigned_int input)\n\n{\n  *(unsigned_int *)(((int)input >> 4) * 0x400 + 0x40020014) =\n       *(unsigned_int *)(((int)input >> 4) * 0x400 + 0x40020014) ^ 1 << (input & 0xf);\n  void;\n}\n\n",
            "current_name": "update_bit_in_memory_080076c8",
            "entrypoint": "0x080076c8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080076c8": "update_bit_in_memory_080076c8",
                "param_1": "input",
                "return": "void",
                "uint": "unsigned_int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007756": {
            "additional_data": {
                "0x3c": {
                    "task1_parameter": 1
                },
                "FUN_08005a68": {
                    "cleanup": 5,
                    "execute_additional_process": 1,
                    "execute_additional_tasks": 1,
                    "execute_always": 1,
                    "execute_operation_c": 2,
                    "execute_sub_operation3": 1,
                    "execute_task_c": 3,
                    "finalization": 1,
                    "initialize_system": 1,
                    "log_event": 1,
                    "perform_action2": 1,
                    "perform_action3": 1,
                    "perform_action_c": 1,
                    "perform_additional_actions": 1,
                    "perform_additional_tasks": 1,
                    "perform_cleanup": 1,
                    "perform_default_action": 1,
                    "perform_general_tasks": 1,
                    "perform_operation_c": 1,
                    "perform_other_tasks": 1,
                    "perform_sub_task_c": 1,
                    "perform_task": 2,
                    "update_system": 1
                },
                "FUN_08005a84": {
                    "get_action_code": 1,
                    "get_data": 3,
                    "get_error_code": 1,
                    "get_flag_bits": 1,
                    "get_flag_status": 3,
                    "get_flag_value": 5,
                    "get_flags": 3,
                    "get_operation_result": 1,
                    "get_random_number": 1,
                    "get_result": 5,
                    "get_some_data": 1,
                    "get_system_status": 3,
                    "get_task_status": 1,
                    "get_validation_result": 1,
                    "get_var_and_check_flag": 1
                },
                "FUN_080076c8": {
                    "execute_action": 3,
                    "execute_additional_action": 1,
                    "execute_if_divisible_by60": 1,
                    "execute_if_multiple": 1,
                    "execute_operation_a": 2,
                    "execute_specific_operation": 1,
                    "execute_sub_operation1": 1,
                    "execute_task1": 1,
                    "execute_task_a": 1,
                    "execute_task_b": 2,
                    "execute_with_param": 2,
                    "execute_with_parameter": 1,
                    "log_warning": 1,
                    "perform_action1": 1,
                    "perform_action2": 1,
                    "perform_action_b": 1,
                    "perform_operation_a": 1,
                    "perform_sub_task_b": 1,
                    "print_error_message": 1,
                    "print_message": 2,
                    "process_data": 1,
                    "send_alert": 1,
                    "send_message": 1,
                    "trigger_action": 1,
                    "trigger_event": 1
                },
                "FUN_08007756": {
                    "check_and_execute": 6,
                    "check_and_execute_actions": 4,
                    "check_and_execute_operations": 5,
                    "check_and_execute_tasks": 5,
                    "check_and_run_functions": 1,
                    "check_and_update_data": 1,
                    "check_conditions": 1,
                    "check_memory_conditions": 1,
                    "check_system_status": 2,
                    "execute_main_process": 1,
                    "perform_operations": 1,
                    "process_data": 3
                },
                "FUN_08007930": {
                    "check_and_execute_task": 1,
                    "check_condition": 1,
                    "check_condition1": 1,
                    "execute_if_divisible": 2,
                    "execute_if_divisible_by15": 1,
                    "execute_if_multiple_of16": 1,
                    "execute_if_multiple_of_four": 1,
                    "execute_operation_b": 2,
                    "execute_special_action": 1,
                    "execute_sub_operation2": 1,
                    "execute_task2": 1,
                    "execute_task_a": 2,
                    "execute_task_b": 1,
                    "handle_case_zero": 1,
                    "perform_action": 3,
                    "perform_action1": 1,
                    "perform_action_a": 1,
                    "perform_additional_checks": 1,
                    "perform_cleanup": 1,
                    "perform_maintenance": 1,
                    "perform_operation_b": 1,
                    "perform_secondary_check": 1,
                    "perform_sub_task_a": 1,
                    "perform_system_reset": 1,
                    "perform_task": 1,
                    "update_data_if_multiple_of_fifteen": 1
                },
                "param_1": {
                    "action": 1,
                    "code_a": 1,
                    "operation_code": 1,
                    "param": 1
                },
                "uVar1": {
                    "flag_value": 1,
                    "result": 10,
                    "system_status": 1
                }
            },
            "called": [
                "FUN_08007930",
                "FUN_080076c8",
                "FUN_08005a68",
                "FUN_08005a84"
            ],
            "calling": [],
            "code": "\nvoid check_and_execute_operations_08007756(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a84();\n  if ((result & 0x1ff) == 0) {\n    FUN_080076c8(0x3c);\n  }\n  if ((result & 0xf) == 0) {\n    FUN_08007930();\n  }\n  FUN_08005a68();\n  return;\n}\n\n",
            "current_name": "check_and_execute_operations_08007756",
            "entrypoint": "0x08007756",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007756": "check_and_execute_operations_08007756",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800778c": {
            "additional_data": {
                "FUN_08006e88": {
                    "initialize_peripheral_address": 1
                },
                "FUN_0800733e": {
                    "set_peripheral_value": 1
                },
                "FUN_0800778c": {
                    "configure_hardware": 1,
                    "initialize_and_configure_devices": 2,
                    "initialize_bitmask": 1,
                    "initialize_bits": 2,
                    "initialize_bits_and_values": 1,
                    "initialize_data": 2,
                    "initialize_device": 1,
                    "initialize_devices": 1,
                    "initialize_flags": 2,
                    "initialize_flags_and_call_functions": 2,
                    "initialize_graphics": 1,
                    "initialize_hardware": 3,
                    "initialize_memory": 2,
                    "initialize_peripheral": 1,
                    "initialize_peripheral_registers": 2,
                    "initialize_peripherals": 1,
                    "initialize_registers": 3,
                    "initialize_system_registers": 1,
                    "initializebits": 1,
                    "update_registers_and_flags": 1
                },
                "_DAT_40023830": {
                    "system_control_register": 1
                },
                "iVar1": {
                    "address_offset": 1,
                    "index": 6,
                    "iteration_index": 1,
                    "offset": 12
                },
                "local_10": {
                    "address": 5,
                    "array_ptr": 1,
                    "bit_positions": 1,
                    "config_data": 2,
                    "current_data": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "device_address": 1,
                    "device_params": 1,
                    "device_pointer": 1,
                    "device_ptr": 1,
                    "entry": 1,
                    "flag_array": 1,
                    "parameters_address": 1,
                    "peripheral_address": 1,
                    "pointer": 5,
                    "ptr_constants": 1,
                    "ptr_data": 1,
                    "register_array": 1,
                    "register_info": 1,
                    "register_pointer": 1
                },
                "local_14": {
                    "data4": 2,
                    "device_parameter4": 1,
                    "device_value4": 1,
                    "mem_offset4": 1,
                    "memory_value4": 1,
                    "offset4": 1,
                    "val4": 1,
                    "value4": 16,
                    "value_4": 3,
                    "var4": 1
                },
                "local_18": {
                    "data3": 2,
                    "device_parameter3": 1,
                    "device_value3": 1,
                    "mem_offset3": 1,
                    "memory_value3": 1,
                    "offset3": 1,
                    "register1": 1,
                    "val3": 1,
                    "value3": 16,
                    "value_3": 3,
                    "var3": 1
                },
                "local_1c": {
                    "data2": 2,
                    "device_parameter2": 1,
                    "device_value2": 1,
                    "mem_offset2": 1,
                    "memory_value2": 1,
                    "offset2": 1,
                    "register2": 1,
                    "val2": 1,
                    "value2": 16,
                    "value_2": 3,
                    "var2": 1
                },
                "local_20": {
                    "data1": 2,
                    "device_parameter1": 1,
                    "device_value1": 1,
                    "mem_offset1": 1,
                    "memory_value1": 1,
                    "offset1": 1,
                    "register3": 1,
                    "val1": 1,
                    "value1": 16,
                    "value_1": 3,
                    "var1": 1
                },
                "local_24": {
                    "bit_mask": 18,
                    "bit_position": 1,
                    "bitmask": 2,
                    "device_config_flag": 1,
                    "device_mask": 1,
                    "flag": 4,
                    "mask": 1,
                    "register4": 1,
                    "register_mask": 1,
                    "shifted_bit": 1
                },
                "local_c": {
                    "count": 1,
                    "counter": 13,
                    "device_index": 1,
                    "i": 1,
                    "index": 4,
                    "loop_counter": 9,
                    "loop_index": 2
                },
                "param_1": {
                    "data_address": 1,
                    "device_memory": 1
                },
                "param_2": {
                    "bit_positions": 1,
                    "register_value": 1
                },
                "param_3": {
                    "device_config": 1,
                    "extraction_mask": 1
                }
            },
            "called": [
                "FUN_0800733e",
                "FUN_08006e88"
            ],
            "calling": [
                "FUN_08007540"
            ],
            "code": "\n\n\nvoid initialize_peripheral_registers_0800778c(void)\n\n{\n  int offset;\n  int bit_mask;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  uint *pointer;\n  uint counter;\n  \n  for (counter = 0; counter < 0x11; counter = counter + 1) {\n    offset = counter * 0x18;\n    pointer = (uint *)(&DAT_0800bcbc + offset);\n    _DAT_40023830 = _DAT_40023830 | 1 << (*pointer >> 4 & 0xff);\n    bit_mask = 1 << (*pointer & 0xf);\n    value1 = *(undefined4 *)(&DAT_0800bcc0 + offset);\n    value2 = *(undefined4 *)(&DAT_0800bcc4 + offset);\n    value3 = *(undefined4 *)(&DAT_0800bcc8 + offset);\n    value4 = *(undefined4 *)(&DAT_0800bccc + offset);\n    FUN_08006e88(((*pointer >> 4) + 0x100080) * 0x400,&bit_mask);\n    if (-1 < (int)pointer[5]) {\n      FUN_0800733e(((*pointer >> 4) + 0x100080) * 0x400,1 << (*pointer & 0xf) & 0xffff,\n                   pointer[5] & 0xff);\n    }\n  }\n  return;\n}\n\n",
            "current_name": "initialize_peripheral_registers_0800778c",
            "entrypoint": "0x0800778c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800778c": "initialize_peripheral_registers_0800778c",
                "iVar1": "offset",
                "local_10": "pointer",
                "local_14": "value4",
                "local_18": "value3",
                "local_1c": "value2",
                "local_20": "value1",
                "local_24": "bit_mask",
                "local_c": "counter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007854": {
            "additional_data": {
                "0x400": {
                    "block_size": 1,
                    "memory_size": 1,
                    "offset": 1,
                    "offset_multiplier": 1
                },
                "0x40020010": {
                    "base_address": 5,
                    "memory_address": 1,
                    "memory_base_address": 1
                },
                "0xf": {
                    "bit_mask": 1,
                    "bit_offset": 1
                },
                "1": {
                    "bit_mask": 1,
                    "bit_value": 1
                },
                "DAT_": {
                    "": 1
                },
                "DAT_0000000f": {
                    "bit_mask": 1
                },
                "DAT_080020010": {
                    "data": 1,
                    "memory_base_address": 1
                },
                "FUN_08007854": {
                    "check_bit": 2,
                    "check_bit_value": 1,
                    "extract_bit": 3,
                    "extract_bit_from_address": 1,
                    "extract_bit_from_memory": 5,
                    "extract_bit_from_offset": 1,
                    "extract_bit_from_uint": 2,
                    "get_bit_at_index": 1,
                    "get_bit_at_offset": 1,
                    "get_bit_from_memory": 1,
                    "get_bit_from_offset": 2,
                    "get_bit_from_value": 1,
                    "get_bit_value": 5,
                    "read_bit_at_offset": 1,
                    "retrieve_bit_from_memory": 2,
                    "retrieve_bit_value": 1,
                    "reverse_bit": 1
                },
                "PTR_": {
                    "": 1
                },
                "PTR_08007854": {
                    "ptr": 1
                },
                "int": {
                    "shifted_address": 2
                },
                "param_1": {
                    "index": 1,
                    "input": 6,
                    "input_address": 1,
                    "input_data": 1,
                    "input_value": 13,
                    "memory_address": 5,
                    "offset": 2,
                    "value": 2
                },
                "ptr": {
                    "pointer": 1
                },
                "return": {
                    "bit_value": 1
                },
                "temp1": {
                    "shifted_input": 1
                },
                "temp2": {
                    "bitwise_result": 1
                },
                "uint": {
                    "unsigned_int": 3,
                    "unsigned_integer": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08007884"
            ],
            "code": "\nunsigned_int extract_bit_from_memory_08007854(unsigned_int input_value)\n\n{\n  bit_value *(unsigned_int *)(((shifted_address)input_value >> 4) * 0x400 + 0x40020010) >> (input_value & 0xf) & 1;\n}\n\n",
            "current_name": "extract_bit_from_memory_08007854",
            "entrypoint": "0x08007854",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007854": "extract_bit_from_memory_08007854",
                "int": "shifted_address",
                "param_1": "input_value",
                "return": "bit_value",
                "uint": "unsigned_int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007884": {
            "additional_data": {
                "FUN_08007854": {
                    "get_bit_value": 1,
                    "get_bits": 1,
                    "get_flag": 1,
                    "get_sub_function_result": 1,
                    "sub_function": 1
                },
                "FUN_08007884": {
                    "assemble_bits": 1,
                    "assemble_byte": 1,
                    "assemble_flags": 2,
                    "calculate_bitmask": 1,
                    "calculate_checksum": 1,
                    "calculate_combined_result": 1,
                    "calculate_combined_value": 1,
                    "calculate_flag": 1,
                    "calculate_flags": 2,
                    "calculate_result": 1,
                    "calculate_return_value": 1,
                    "combine_bit_fields": 1,
                    "combine_bits": 4,
                    "combine_flags": 1,
                    "combine_results": 2,
                    "combine_values": 3,
                    "decode_and_combine_values": 1,
                    "decode_flags": 1,
                    "extract_bits_from_values": 1,
                    "get_assembled_value": 1,
                    "get_composite_value": 1,
                    "reversed_value": 1
                },
                "iVar1": {
                    "bit1": 2,
                    "bit_4": 1,
                    "bit_value1": 2,
                    "flag1": 4,
                    "flag_0x36": 2,
                    "result1": 3,
                    "result_0x36": 1,
                    "result_1": 1,
                    "value1": 7,
                    "value_0x36": 7,
                    "var1": 1
                },
                "iVar2": {
                    "bit2": 2,
                    "bit_3": 1,
                    "bit_value2": 2,
                    "flag2": 4,
                    "flag_0x37": 2,
                    "result2": 3,
                    "result_0x37": 1,
                    "result_2": 1,
                    "value2": 7,
                    "value_0x37": 7,
                    "var2": 1
                },
                "iVar3": {
                    "bit3": 2,
                    "bit_2": 1,
                    "bit_value3": 2,
                    "flag3": 4,
                    "flag_0x38": 2,
                    "result3": 3,
                    "result_0x38": 1,
                    "result_3": 1,
                    "value3": 7,
                    "value_0x38": 7,
                    "var3": 1
                },
                "iVar4": {
                    "bit4": 2,
                    "bit_1": 1,
                    "bit_value4": 2,
                    "flag4": 4,
                    "flag_0x39": 2,
                    "result4": 3,
                    "result_0x39": 1,
                    "result_4": 1,
                    "value4": 7,
                    "value_0x39": 7,
                    "var4": 1
                },
                "iVar5": {
                    "bit5": 2,
                    "bit_7": 1,
                    "bit_value5": 2,
                    "flag5": 4,
                    "flag_0xf": 2,
                    "result5": 3,
                    "result_0x0_f": 1,
                    "result_5": 1,
                    "value5": 7,
                    "value_0x0_f": 2,
                    "value_0x_f": 1,
                    "value_0xf": 4,
                    "var5": 1
                },
                "param_1": {
                    "bit_number": 1,
                    "bit_position": 2,
                    "bitmask": 1,
                    "field_index": 1,
                    "input": 1,
                    "input_value": 2,
                    "opcode": 2,
                    "sub_function_parameter": 1,
                    "value": 2
                },
                "uVar6": {
                    "base_flag": 1,
                    "bit0": 1,
                    "bit_0": 1,
                    "combined_bits": 2,
                    "combined_flags": 1,
                    "combined_value": 1,
                    "default_value": 1,
                    "flag0": 1,
                    "flag_0": 1,
                    "flag_0x0": 1,
                    "result": 4,
                    "result6": 3,
                    "result_0x00": 1,
                    "result_6": 1,
                    "value6": 3,
                    "value_0x0": 5,
                    "value_0x00": 1,
                    "var6": 1
                }
            },
            "called": [
                "FUN_08007854"
            ],
            "calling": [
                "FUN_08007930"
            ],
            "code": "\nuint decode_and_combine_values_08007884(void)\n\n{\n  int value_0x36;\n  int value2;\n  int value_0x38;\n  int value_0x39;\n  int value5;\n  uint value_0x0;\n  \n  value_0x36 = FUN_08007854(0x36);\n  value2 = FUN_08007854(0x37);\n  value_0x38 = FUN_08007854(0x38);\n  value_0x39 = FUN_08007854(0x39);\n  value5 = FUN_08007854(0xf);\n  value_0x0 = FUN_08007854(0);\n  return value_0x0 | value_0x36 << 4 | value2 << 3 | value_0x38 << 2 | value_0x39 << 1 | value5 << 7;\n}\n\n",
            "current_name": "decode_and_combine_values_08007884",
            "entrypoint": "0x08007884",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007884": "decode_and_combine_values_08007884",
                "iVar1": "value_0x36",
                "iVar2": "value2",
                "iVar3": "value_0x38",
                "iVar4": "value_0x39",
                "iVar5": "value5",
                "uVar6": "value_0x0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080078f4": {
            "additional_data": {
                "FUN_080078f4": {
                    "calculate_bitwise_or": 7,
                    "calculate_combined_value": 3,
                    "calculate_or": 1,
                    "calculate_or_value": 1,
                    "calculate_sum": 1,
                    "combine_and_or": 1,
                    "combine_and_return_result": 1,
                    "combine_bits": 3,
                    "combine_four_numbers": 1,
                    "combine_integers": 1,
                    "combine_numbers": 1,
                    "combine_uint_values": 1,
                    "combine_uintegers": 1,
                    "combine_uints": 1,
                    "combine_values": 6,
                    "combine_values_from_pointers": 1
                },
                "local_10": {
                    "counter": 3,
                    "index": 24,
                    "iteration": 1,
                    "iteration_index": 1,
                    "loop_index": 2
                },
                "local_c": {
                    "bitwise_or_result": 1,
                    "combined_result": 2,
                    "combined_uints": 1,
                    "combined_value": 13,
                    "result": 13,
                    "sum": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08007930",
                "FUN_08001994"
            ],
            "code": "\nuint calculate_bitwise_or_080078f4(void)\n\n{\n  int index;\n  uint combined_value;\n  \n  combined_value = 0;\n  for (index = 0; index < 4; index = index + 1) {\n    combined_value = *(uint *)(&DAT_20000e54 + index * 4) | combined_value;\n  }\n  return combined_value;\n}\n\n",
            "current_name": "calculate_bitwise_or_080078f4",
            "entrypoint": "0x080078f4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080078f4": "calculate_bitwise_or_080078f4",
                "local_10": "index",
                "local_c": "combined_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007930": {
            "additional_data": {
                "DAT_param": {
                    "u_var3": 1
                },
                "FUNDetectAndHandleChanges": {
                    "detect_and_handle_changes": 1
                },
                "FUN_080074c8": {
                    "perform_action": 2,
                    "process_bits": 1,
                    "process_data": 1,
                    "process_difference": 1,
                    "process_value": 3,
                    "reverse_bits": 1,
                    "update_status": 1
                },
                "FUN_08007520": {
                    "apply_mask": 1,
                    "display_difference": 1,
                    "update_bits": 1
                },
                "FUN_08007884": {
                    "calculate_value": 1,
                    "get_new_value": 6,
                    "get_updated_value": 2,
                    "retrieve_data": 1
                },
                "FUN_080078f4": {
                    "compare_data": 1,
                    "get_current_value": 9
                },
                "FUN_08007930": {
                    "execute_function": 1,
                    "process_data": 9,
                    "update_data": 17,
                    "update_variable_and_call_functions": 2
                },
                "iVar1": {
                    "counter": 6,
                    "current_idx": 1,
                    "current_index": 5,
                    "current_value_index": 2,
                    "index": 6,
                    "prev_index": 1
                },
                "param_1": {
                    "mask": 1
                },
                "param_2": {
                    "u_var2": 1
                },
                "uVar1": {
                    "i_var1": 1
                },
                "uVar2": {
                    "current_data": 1,
                    "current_value": 6,
                    "existing_value": 1,
                    "old_value": 1,
                    "original_value": 1,
                    "prev_data": 1,
                    "prev_value": 1,
                    "previous_data": 3,
                    "previous_value": 13
                },
                "uVar3": {
                    "new_calculated_value": 1,
                    "new_data": 3,
                    "new_value": 15,
                    "result": 3,
                    "result_value": 1,
                    "retrieved_data": 1,
                    "updated_value": 2,
                    "value_from_function1": 1
                },
                "uVar4": {
                    "compared_data": 1,
                    "current_data": 3,
                    "current_value": 11,
                    "new_data": 1,
                    "new_mask": 1,
                    "new_value": 6,
                    "new_value_from_function": 1,
                    "return_value": 1,
                    "temp_value": 3,
                    "updated_value": 1,
                    "value_from_function2": 1
                },
                "uVar5": {
                    "bit_diff": 1,
                    "bit_mask": 1,
                    "bitwise_difference": 1,
                    "changed_bits": 20,
                    "difference": 2,
                    "mask_difference": 1,
                    "new_value": 1,
                    "processed_data": 1,
                    "update_mask": 1,
                    "updated_bits": 1
                }
            },
            "called": [
                "FUN_08007520",
                "FUN_080078f4",
                "FUN_080074c8",
                "FUN_08007884"
            ],
            "calling": [
                "FUN_08007756"
            ],
            "code": "\nvoid update_data_08007930(void)\n\n{\n  int counter;\n  uint previous_value;\n  undefined4 new_value;\n  uint current_value;\n  uint changed_bits;\n  \n  counter = DAT_20000e68;\n  previous_value = DAT_20000e64;\n  if (DAT_20000e6c != 0) {\n    new_value = FUN_08007884();\n    *(undefined4 *)(&DAT_20000e54 + counter * 4) = new_value;\n    if (DAT_20000e68 == 3) {\n      DAT_20000e68 = 0;\n    }\n    else {\n      DAT_20000e68 = DAT_20000e68 + 1;\n    }\n    current_value = FUN_080078f4();\n    previous_value = DAT_20000e64;\n    if (current_value != DAT_20000e64) {\n      changed_bits = ~current_value & DAT_20000e64;\n      if ((~DAT_20000e64 & current_value) != 0) {\n        FUN_080074c8(~DAT_20000e64 & current_value);\n      }\n      previous_value = current_value;\n      if (changed_bits != 0) {\n        FUN_08007520(changed_bits);\n      }\n    }\n  }\n  DAT_20000e64 = previous_value;\n  return;\n}\n\n",
            "current_name": "update_data_08007930",
            "entrypoint": "0x08007930",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007930": "update_data_08007930",
                "iVar1": "counter",
                "uVar2": "previous_value",
                "uVar3": "new_value",
                "uVar4": "current_value",
                "uVar5": "changed_bits"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080079c0": {
            "additional_data": {
                "DAT_20000e54": {
                    "data": 3,
                    "data_array": 1,
                    "data_target": 1,
                    "destination": 1
                },
                "DAT_20000e6c": {
                    "data_initialized": 1,
                    "flag": 7,
                    "flag_value": 1,
                    "initialized_flag": 1,
                    "is_initialized": 1,
                    "status": 2
                },
                "FUN_080079c0": {
                    "initialize_data": 31
                },
                "FUN_0800b430": {
                    "copy_data": 8,
                    "copy_memory": 7,
                    "copy_memory_block": 1,
                    "fill_memory": 1,
                    "initialize_memory": 1,
                    "set_memory": 1
                },
                "param_1": {
                    "array": 4,
                    "array_pointer": 2,
                    "data_array": 1,
                    "data_pointer": 7,
                    "data_ptr": 1,
                    "dest": 2,
                    "dest_array": 1,
                    "destination": 9,
                    "destination_array": 1,
                    "memory_pointer": 1
                },
                "param_2": {
                    "byte_value": 2,
                    "fill_byte": 1,
                    "fill_value": 5,
                    "flag": 3,
                    "initial_value": 1,
                    "padding": 1,
                    "param2": 2,
                    "start_value": 1,
                    "unused": 1,
                    "value": 12
                },
                "param_3": {
                    "length": 3,
                    "size": 26
                }
            },
            "called": [
                "FUN_0800b430"
            ],
            "calling": [
                "FUN_08007540"
            ],
            "code": "\nvoid initialize_data_080079c0(void)\n\n{\n  FUN_0800b430(&DAT_20000e54,0,0x18);\n  DAT_20000e6c = 1;\n  return;\n}\n\n",
            "current_name": "initialize_data_080079c0",
            "entrypoint": "0x080079c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080079c0": "initialize_data_080079c0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080079e0": {
            "additional_data": {
                "FUN_080079e0": {
                    "set_bit": 11,
                    "set_bit_at_index": 2,
                    "set_bit_in_array": 3,
                    "set_bit_in_memory": 11,
                    "set_bit_value": 1,
                    "set_bitwise_value_in_memory": 1,
                    "store_bit_in_memory_block": 1,
                    "update_memory": 1
                },
                "param_1": {
                    "bit_position": 1,
                    "byte_to_set": 4,
                    "byte_value": 9,
                    "input_byte": 14,
                    "param_1": 1,
                    "value": 2
                },
                "param_2": {
                    "bit_index": 1
                },
                "param_3": {
                    "array_pointer": 1
                },
                "param_4": {
                    "array_length": 1
                },
                "ptr_1": {
                    "bit_array": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08007a70"
            ],
            "code": "\nvoid set_bit_in_memory_080079e0(byte input_byte)\n\n{\n  *(int *)(((uint)(int)(char)input_byte >> 5) * 4 + -0x1fff1f00) = 1 << (input_byte & 0x1f);\n  return;\n}\n\n",
            "current_name": "set_bit_in_memory_080079e0",
            "entrypoint": "0x080079e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080079e0": "set_bit_in_memory_080079e0",
                "param_1": "input_byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007a10": {
            "additional_data": {
                "0x40000000": {
                    "address_1": 1,
                    "address_constant_1": 1,
                    "const_flag_1": 1,
                    "flag_value1": 1
                },
                "0x40000400": {
                    "address_2": 1,
                    "address_constant_2": 1,
                    "const_flag_2": 1,
                    "flag_value2": 1
                },
                "FUN_08007a10": {
                    "set_flag": 3,
                    "set_flag_based_on_address": 2,
                    "set_flag_based_on_param": 3,
                    "set_flags": 1,
                    "set_permissions": 1,
                    "update_data_access_flag": 1,
                    "update_data_flag": 2,
                    "update_data_flags": 2,
                    "update_flag": 12,
                    "update_flag_based_on_param": 1,
                    "update_flags": 1,
                    "update_flags_based_on_address": 1,
                    "update_status_flags": 1
                },
                "PTR_40000000": {
                    "flag1": 1
                },
                "PTR_40000400": {
                    "flag2": 1
                },
                "PTR_40000800": {
                    "flag3": 1
                },
                "_DAT_40023840": {
                    "data_access_flag": 1,
                    "data_flags": 1,
                    "flag": 15,
                    "flag_register": 1,
                    "flag_value": 1,
                    "flag_variable": 2,
                    "flags": 3,
                    "permissions_flag": 1,
                    "status_flag": 1,
                    "status_flags": 1
                },
                "param_1": {
                    "address": 12,
                    "buffer": 1,
                    "data": 1,
                    "data_pointer": 2,
                    "input": 5,
                    "input_data": 1,
                    "input_param": 1,
                    "input_pointer": 2,
                    "input_ptr": 1,
                    "input_value": 1,
                    "param": 3,
                    "pointer": 1
                },
                "undefined": {
                    "pointer": 3,
                    "void": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08007d08",
                "FUN_08007ad0"
            ],
            "code": "\n\n\nvoid update_data_access_flag_08007a10(pointer *address)\n\n{\n  if (address == (pointer *)0x40000000) {\n    _DAT_40023840 = _DAT_40023840 | 1;\n  }\n  else if (address == (pointer *)0x40000400) {\n    _DAT_40023840 = _DAT_40023840 | 2;\n  }\n  else if (address == &DAT_40000800) {\n    _DAT_40023840 = _DAT_40023840 | 4;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_access_flag_08007a10",
            "entrypoint": "0x08007a10",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007a10": "update_data_access_flag_08007a10",
                "param_1": "address",
                "undefined": "pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007a70": {
            "additional_data": {
                "FUN_08006cf6": {
                    "call_function": 1,
                    "execute_function_b": 1,
                    "perform_action2": 1,
                    "perform_operation": 1
                },
                "FUN_080079e0": {
                    "execute_classified_operation": 1,
                    "execute_function_a": 1,
                    "perform_action": 1,
                    "perform_action1": 1
                },
                "FUN_08007a70": {
                    "classify_param": 1,
                    "handle_param": 1,
                    "map_address_to_action": 1,
                    "process_address": 1,
                    "process_data": 1,
                    "process_input": 3,
                    "process_memory_block": 1,
                    "process_memory_location": 1,
                    "process_param": 15,
                    "process_parameter": 5,
                    "update_local_value": 1
                },
                "local_c": {
                    "action": 1,
                    "classification": 1,
                    "code": 1,
                    "local_code": 1,
                    "local_var": 1,
                    "local_variable": 4,
                    "mapping": 1,
                    "new_code": 1,
                    "new_local_variable": 1,
                    "new_value": 2,
                    "output_byte": 1,
                    "output_value": 2,
                    "param_value": 2,
                    "result": 7,
                    "selected_value": 1,
                    "updated_value": 1,
                    "value": 2,
                    "value_to_use": 1
                },
                "param_1": {
                    "address": 3,
                    "data": 1,
                    "input": 2,
                    "input_param": 3,
                    "input_pointer": 3,
                    "input_ptr": 2,
                    "memory_block": 1,
                    "memory_location": 1,
                    "param": 7,
                    "param_pointer": 1,
                    "param_ptr": 2,
                    "parameter": 5
                },
                "param_2": {
                    "arg1": 2,
                    "param1": 2,
                    "param2": 10,
                    "param_2": 6,
                    "param_a": 1,
                    "value1": 9,
                    "value2": 1
                },
                "param_3": {
                    "arg2": 2,
                    "param2": 2,
                    "param3": 10,
                    "param_3": 6,
                    "param_b": 1,
                    "value2": 9,
                    "value3": 1
                }
            },
            "called": [
                "FUN_080079e0",
                "FUN_08006cf6"
            ],
            "calling": [
                "FUN_08007ad0"
            ],
            "code": "\nvoid process_param_08007a70(undefined *param,undefined4 param2,undefined4 param3)\n\n{\n  undefined result;\n  \n  if (param == (undefined *)0x40000000) {\n    result = 0x1c;\n  }\n  else if (param == (undefined *)0x40000400) {\n    result = 0x1d;\n  }\n  else {\n    if (param != &DAT_40000800) {\n      return;\n    }\n    result = 0x1e;\n  }\n  FUN_08006cf6(result,param2,param3);\n  FUN_080079e0(result);\n  return;\n}\n\n",
            "current_name": "process_param_08007a70",
            "entrypoint": "0x08007a70",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007a70": "process_param_08007a70",
                "local_c": "result",
                "param_1": "param",
                "param_2": "param2",
                "param_3": "param3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007ad0": {
            "additional_data": {
                "0": {
                    "zero_value": 1
                },
                "0x40000000": {
                    "start_address": 1
                },
                "DAT_20000000": {
                    "total_memory": 1,
                    "value_to_calculate": 1
                },
                "FUN_08007a10": {
                    "initialize_pointer": 2,
                    "set_base_address": 2,
                    "set_memory_address": 15,
                    "set_memory_base_address": 2,
                    "set_memory_location": 3,
                    "set_memory_pointer": 4,
                    "set_pointer": 1,
                    "set_pointer_value": 2
                },
                "FUN_08007a70": {
                    "clear_memory": 5,
                    "configure_memory": 1,
                    "initialize_block": 1,
                    "initialize_memory": 1,
                    "initialize_memory_block": 5,
                    "initialize_memory_pointer": 1,
                    "initialize_memory_range": 1,
                    "initialize_memory_values": 1,
                    "initialize_memory_with_data": 1,
                    "initialize_memory_with_parameters": 1,
                    "initialize_memory_with_params": 1,
                    "initialize_memory_with_values": 3,
                    "reset_data": 1,
                    "reset_memory": 1,
                    "set_memory": 3,
                    "set_memory_values": 3,
                    "write_to_memory": 1
                },
                "FUN_08007ad0": {
                    "initialize_data": 5,
                    "initialize_memory": 26
                },
                "_DAT_40000000": {
                    "memory_address": 1,
                    "memory_pointer": 1
                },
                "_DAT_40000028": {
                    "calculated_value": 1,
                    "calculation_result": 1
                },
                "param_1": {
                    "address": 2,
                    "base_address": 1,
                    "memory_address": 5,
                    "memory_location": 1,
                    "memory_pointer": 3,
                    "memory_ptr": 1,
                    "pointer": 3,
                    "ptr": 1
                },
                "param_2": {
                    "param1": 3,
                    "param2": 8,
                    "value1": 6
                },
                "param_3": {
                    "param2": 3,
                    "param3": 8,
                    "value2": 6
                }
            },
            "called": [
                "FUN_08007a70",
                "FUN_08007a10"
            ],
            "calling": [
                "FUN_08007e08"
            ],
            "code": "\n\n\nvoid initialize_memory_08007ad0(void)\n\n{\n  FUN_08007a10(0x40000000);\n  _DAT_40000000 = 0;\n  _DAT_40000004 = 0;\n  _DAT_40000008 = 0;\n  _DAT_4000000c = 0;\n  _DAT_40000010 = 0;\n  _DAT_40000018 = 0;\n  _DAT_4000001c = 0;\n  _DAT_40000020 = 0;\n  _DAT_40000024 = 0;\n  _DAT_40000028 = DAT_20000000 / 42000000 - 1;\n  _DAT_4000002c = 0;\n  _DAT_40000034 = 0;\n  _DAT_40000038 = 0;\n  _DAT_4000003c = 0;\n  _DAT_40000040 = 0;\n  _DAT_40000048 = 0;\n  _DAT_4000004c = 0;\n  FUN_08007a70(0x40000000,0,0);\n  return;\n}\n\n",
            "current_name": "initialize_memory_08007ad0",
            "entrypoint": "0x08007ad0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007ad0": "initialize_memory_08007ad0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007b70": {
            "additional_data": {
                "FUN_08007b70": {
                    "apply_settings": 1,
                    "configure_flags": 4,
                    "configure_hardware": 1,
                    "consolidate_flags": 1,
                    "set_config_bits": 1,
                    "set_configuration_flags": 1,
                    "set_flag_bits": 1,
                    "set_flags": 3,
                    "set_flags_and_values": 2,
                    "set_flags_based_on_conditions": 3,
                    "set_local_flags": 1,
                    "update_config_flags": 1,
                    "update_flags": 6,
                    "update_flags_and_registers": 1,
                    "update_flags_and_values": 2,
                    "update_settings": 2
                },
                "_DAT_40000000": {
                    "flags": 1,
                    "flags_mask": 1,
                    "result": 1,
                    "some_value": 1
                },
                "_DAT_4000000c": {
                    "flags": 2,
                    "flags_to_update": 1,
                    "settings": 1
                },
                "_DAT_40000034": {
                    "condition1": 11,
                    "condition_1": 6,
                    "condition_a": 1,
                    "flag1": 2
                },
                "_DAT_40000038": {
                    "condition2": 11,
                    "condition_2": 6,
                    "condition_b": 1,
                    "flag2": 2
                },
                "local_c": {
                    "config_bits": 1,
                    "config_flags": 1,
                    "config_value": 1,
                    "configuration_flags": 1,
                    "flag": 5,
                    "flag_bits": 1,
                    "flag_value": 1,
                    "flags": 19,
                    "settings_flag": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005790"
            ],
            "code": "\n\n\nvoid update_flags_and_values_08007b70(void)\n\n{\n  uint flags;\n  \n  flags = 1;\n  if (_DAT_40000034 != 0) {\n    flags = 3;\n  }\n  if (_DAT_40000038 != 0) {\n    flags = flags | 4;\n  }\n  _DAT_4000000c = _DAT_4000000c | flags;\n  _DAT_40000000 = _DAT_40000000 | 1;\n  return;\n}\n\n",
            "current_name": "update_flags_and_values_08007b70",
            "entrypoint": "0x08007b70",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007b70": "update_flags_and_values_08007b70",
                "local_c": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007bc2": {
            "additional_data": {
                "BIT_DATA_1": {
                    "bit_data": 1
                },
                "BIT_DATA_2": {
                    "bit_mask": 1
                },
                "FUNC_decode_binary": {
                    "identify_bits": 1
                },
                "FUN_08007bc2": {
                    "clear_bits": 10,
                    "clear_flags": 20
                },
                "PTR_FUN_08007bc2_param_1": {
                    "none": 1
                },
                "PTR_FUN_08007bc2_param_2": {
                    "none": 1
                },
                "_DAT_40000000": {
                    "data1": 6,
                    "data_ptr": 1,
                    "data_reg1": 1,
                    "data_register1": 5,
                    "flag1": 6,
                    "flag_a": 2,
                    "flag_one": 1,
                    "flags": 2,
                    "flags1": 1,
                    "flags_register": 3,
                    "ptr": 1,
                    "status_register": 1
                },
                "_DAT_4000000c": {
                    "config": 1,
                    "config_ptr": 1,
                    "control_register": 5,
                    "data": 1,
                    "data2": 6,
                    "data_reg2": 1,
                    "data_register2": 5,
                    "flag2": 6,
                    "flag_b": 2,
                    "flag_two": 1,
                    "flags2": 1
                },
                "none": {
                    "none": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080057e4"
            ],
            "code": "\n\n\nvoid clear_flags_08007bc2(void)\n\n{\n  _DAT_40000000 = _DAT_40000000 & 0xfffffffe;\n  _DAT_4000000c = _DAT_4000000c & 0xfffffff8;\n  return;\n}\n\n",
            "current_name": "clear_flags_08007bc2",
            "entrypoint": "0x08007bc2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007bc2": "clear_flags_08007bc2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007bf0": {
            "additional_data": {
                "FUN_08007bf0": {
                    "set_minimum_value": 3,
                    "set_smallest_value": 1,
                    "update_and_minimize": 1,
                    "update_and_minimize_param": 1,
                    "update_data": 7,
                    "update_data_and_limit": 1,
                    "update_data_and_set_minimum": 1,
                    "update_data_and_track_minimum": 1,
                    "update_min_max_value": 1,
                    "update_min_value": 3,
                    "update_minimum_value": 7,
                    "update_param_and_limit": 1,
                    "update_parameter": 1,
                    "update_variable": 2
                },
                "_DAT_40000024": {
                    "global_minimum": 1,
                    "limit": 1,
                    "min_data": 2,
                    "min_max_value": 1,
                    "min_value": 9,
                    "minimum_value": 11,
                    "minimum_value_seen": 1,
                    "overall_min": 1,
                    "param_limit": 1,
                    "smallest_value": 1
                },
                "_DAT_4000002c": {
                    "current_data": 2,
                    "current_min": 1,
                    "current_min_value": 3,
                    "current_minimum": 2,
                    "current_minimum_value": 3,
                    "current_param_value": 1,
                    "current_value": 15,
                    "data": 1,
                    "original_value": 1
                },
                "param_1": {
                    "input_param": 1,
                    "input_value": 1,
                    "new_data": 1,
                    "new_param_value": 1,
                    "new_value": 21,
                    "value": 6
                }
            },
            "called": [],
            "calling": [
                "FUN_08005324"
            ],
            "code": "\n\n\nvoid update_data_and_track_minimum_08007bf0(uint new_value)\n\n{\n  _DAT_4000002c = new_value;\n  if (new_value <= _DAT_40000024) {\n    _DAT_40000024 = new_value;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_and_track_minimum_08007bf0",
            "entrypoint": "0x08007bf0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007bf0": "update_data_and_track_minimum_08007bf0",
                "param_1": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007c40": {
            "additional_data": {
                "FUN_08007c40": {
                    "initialize_data": 2,
                    "initialize_global_variable": 1,
                    "set_40000034_value": 1,
                    "set_data": 1,
                    "set_data_in_memory": 1,
                    "set_data_pointer": 1,
                    "set_data_value": 1,
                    "set_entry_point": 1,
                    "set_global_data": 1,
                    "set_global_parameter": 4,
                    "set_global_value": 5,
                    "set_global_variable": 9,
                    "set_param": 1,
                    "set_param_value": 1,
                    "set_value": 1
                },
                "_DAT_40000034": {
                    "data_initialized": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_register": 1,
                    "global_parameter": 2,
                    "global_value": 3,
                    "global_variable": 8,
                    "initialized_data": 1,
                    "memory_location": 1,
                    "param_value": 1,
                    "stored_value": 1
                },
                "param_1": {
                    "data": 5,
                    "data_value": 1,
                    "entry_point_address": 1,
                    "new_value": 8,
                    "param": 1,
                    "param_value": 1,
                    "value": 14
                },
                "param_3": {
                    "new_parameter_3": 1
                },
                "param_n": {
                    "new_parameter_n": 1,
                    "new_parameter_name_n": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005790"
            ],
            "code": "\n\n\nvoid set_global_variable_08007c40(undefined4 value)\n\n{\n  _DAT_40000034 = value;\n  return;\n}\n\n",
            "current_name": "set_global_variable_08007c40",
            "entrypoint": "0x08007c40",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007c40": "set_global_variable_08007c40",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007c5e": {
            "additional_data": {
                "FUN_08007c5e": {
                    "assign_to_global_variable": 1,
                    "initialize_data": 2,
                    "save_parameter_value": 1,
                    "set_data": 2,
                    "set_data_at_address": 1,
                    "set_data_at_memory_address": 1,
                    "set_data_value": 1,
                    "set_global_data": 2,
                    "set_global_param": 1,
                    "set_global_value": 2,
                    "set_global_variable": 10,
                    "set_param_in_memory": 1,
                    "set_param_value": 1,
                    "set_parameter": 1,
                    "store_parameter": 1,
                    "store_parameter_in_global_variable": 2,
                    "store_parameter_value": 1
                },
                "_DAT_40000038": {
                    "address": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "global_data": 1,
                    "global_param": 1,
                    "global_value": 1,
                    "global_var": 1,
                    "global_variable": 13,
                    "memory_address": 1,
                    "param_value": 1,
                    "parameter_storage": 1,
                    "stored_value": 1
                },
                "param_1": {
                    "data": 4,
                    "data_value": 3,
                    "input_parameter": 1,
                    "new_parameter": 1,
                    "new_value": 2,
                    "param": 1,
                    "value": 19
                },
                "param_2": {
                    "new_parameter_name_2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005790"
            ],
            "code": "\n\n\nvoid set_global_variable_08007c5e(undefined4 value)\n\n{\n  _DAT_40000038 = value;\n  return;\n}\n\n",
            "current_name": "set_global_variable_08007c5e",
            "entrypoint": "0x08007c5e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007c5e": "set_global_variable_08007c5e",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007c7c": {
            "additional_data": {
                "FUN_080053a0": {
                    "call_function_1": 1,
                    "clear_notification": 1,
                    "execute_action_1": 1,
                    "execute_function_1": 1,
                    "execute_function_a": 1,
                    "execute_function_c": 1,
                    "handle_flag1_and_status1": 1,
                    "handle_flag_1": 2,
                    "perform_action1": 1,
                    "perform_action3": 1,
                    "perform_action_1": 3,
                    "perform_operation_1": 2,
                    "process_condition_1": 1,
                    "process_condition_one": 1,
                    "reverse_with_condition1": 1
                },
                "FUN_08005760": {
                    "call_function_3": 1,
                    "execute_action_3": 1,
                    "execute_function_3": 1,
                    "execute_function_b": 1,
                    "execute_function_c": 1,
                    "handle_flag4_and_status4": 1,
                    "handle_flag_3": 2,
                    "perform_action2": 1,
                    "perform_action3": 1,
                    "perform_action_3": 3,
                    "perform_operation_3": 2,
                    "process_condition_3": 1,
                    "process_condition_three": 1,
                    "process_event2": 1,
                    "reverse_with_condition3": 1
                },
                "FUN_08005778": {
                    "call_function_2": 1,
                    "execute_action_2": 1,
                    "execute_function_2": 1,
                    "execute_function_a": 1,
                    "execute_function_b": 1,
                    "handle_flag2_and_status2": 1,
                    "handle_flag_2": 2,
                    "perform_action1": 1,
                    "perform_action2": 1,
                    "perform_action_2": 3,
                    "perform_operation_2": 2,
                    "process_condition_2": 1,
                    "process_condition_two": 1,
                    "process_event1": 1,
                    "reverse_with_condition2": 1
                },
                "FUN_08007c7c": {
                    "check_and_call_functions": 11,
                    "check_and_call_sub_functions": 1,
                    "check_and_execute_actions": 2,
                    "check_and_execute_functions": 4,
                    "check_and_execute_operations": 2,
                    "check_and_update_flags": 1,
                    "process_flags": 2,
                    "process_input": 1,
                    "update_data_and_call_functions": 1,
                    "update_flags": 2,
                    "update_flags_based_on_registers": 1,
                    "update_settings": 2,
                    "update_status_flags": 1
                },
                "_DAT_4000000c": {
                    "bit_check": 1,
                    "condition": 1,
                    "conditions": 1,
                    "control_register": 7,
                    "data_register0c": 1,
                    "data_register2": 1,
                    "data_register_2": 1,
                    "flag_b": 1,
                    "input_register": 1,
                    "mask": 1,
                    "other_flags_register": 1,
                    "register2": 1,
                    "register_2": 1,
                    "register_flag": 1,
                    "status": 1,
                    "status_flag2": 1,
                    "status_register": 1,
                    "value_mask": 1,
                    "variable_2": 1
                },
                "_DAT_40000010": {
                    "bit_mask": 1,
                    "data_register1": 1,
                    "data_register10": 1,
                    "data_register_1": 1,
                    "flag_a": 1,
                    "flags": 4,
                    "flags_register": 3,
                    "register1": 1,
                    "register_1": 1,
                    "register_value": 1,
                    "setting_mask": 1,
                    "settings_register": 1,
                    "status_flag1": 1,
                    "status_register": 6,
                    "variable_1": 1
                }
            },
            "called": [
                "FUN_080053a0",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "calling": [],
            "code": "\n\n\nvoid check_and_call_sub_functions_08007c7c(void)\n\n{\n  if (((_DAT_40000010 & 2) != 0) && ((_DAT_4000000c & 2) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffd;\n    FUN_08005778();\n  }\n  if (((_DAT_40000010 & 4) != 0) && ((_DAT_4000000c & 4) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffb;\n    FUN_08005760();\n  }\n  if (((_DAT_40000010 & 1) != 0) && ((_DAT_4000000c & 1) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffe;\n    FUN_080053a0();\n  }\n  return;\n}\n\n",
            "current_name": "check_and_call_sub_functions_08007c7c",
            "entrypoint": "0x08007c7c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007c7c": "check_and_call_sub_functions_08007c7c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007d08": {
            "additional_data": {
                "DAT_20000000": {
                    "clock_frequency": 2,
                    "clock_speed": 1,
                    "constant1": 1,
                    "data1": 1,
                    "device_data_2": 1,
                    "frequency": 1
                },
                "DAT_40000800": {
                    "device_data_1": 1,
                    "memory_address": 1,
                    "register1": 1
                },
                "FUN_08007a10": {
                    "configure_peripheral": 1,
                    "initialize": 1,
                    "initialize_data": 3,
                    "initialize_memory": 15,
                    "initialize_param": 2,
                    "initialize_parameter": 2,
                    "initialize_pointer": 2,
                    "set_configuration": 1,
                    "set_configuration_data": 1
                },
                "FUN_08007d08": {
                    "initialize_communication": 1,
                    "initialize_data": 2,
                    "initialize_device": 5,
                    "initialize_hardware": 4,
                    "initialize_hardware_config": 1,
                    "initialize_hardware_settings": 1,
                    "initialize_registers": 14,
                    "initialize_settings": 3
                },
                "_DAT_40000800": {
                    "base_address": 1,
                    "buffer_size": 1,
                    "communication_flag": 1,
                    "configuration_data": 1,
                    "data_1": 1,
                    "device_control_register": 1,
                    "device_flag": 1,
                    "device_register": 1,
                    "device_status": 2,
                    "hardware_register1": 1,
                    "hardware_status": 1,
                    "register1": 4,
                    "register_0": 1,
                    "register_a": 2,
                    "register_value1": 1,
                    "setting_1": 1,
                    "settings": 1,
                    "status_flag": 1,
                    "status_register": 2,
                    "system_control_register": 1
                },
                "_DAT_40000804": {
                    "device_status": 1,
                    "hardware_register2": 1,
                    "register1": 1,
                    "register2": 3,
                    "register_1": 1,
                    "register_b": 1,
                    "register_value2": 1,
                    "variable1": 3
                },
                "_DAT_40000808": {
                    "counter1": 1,
                    "device_counter": 1,
                    "hardware_register3": 1,
                    "register2": 1,
                    "register3": 4,
                    "register_2": 1,
                    "register_c": 1,
                    "register_value3": 1,
                    "setting_3": 1,
                    "variable2": 3
                },
                "_DAT_4000080c": {
                    "device_flag": 1,
                    "hardware_register4": 1,
                    "register3": 1,
                    "register4": 3,
                    "register_3": 1,
                    "register_d": 1,
                    "register_value4": 1,
                    "variable3": 3
                },
                "_DAT_40000810": {
                    "counter2": 1,
                    "device_flag2": 1,
                    "hardware_register5": 1,
                    "register4": 1,
                    "register5": 3,
                    "register_4": 1,
                    "register_e": 1,
                    "register_value5": 1,
                    "setting_5": 1,
                    "variable4": 3
                },
                "_DAT_40000814": {
                    "data_0x14": 1,
                    "data_2": 1,
                    "device_enable": 1,
                    "device_flag": 1,
                    "device_power_mode": 1,
                    "device_status": 1,
                    "enable_flag": 2,
                    "flag": 3,
                    "hardware_register18": 1,
                    "initialized_flag": 1,
                    "register17": 1,
                    "register18": 2,
                    "register6": 1,
                    "register8": 1,
                    "register_r": 1,
                    "register_value18": 1,
                    "setting_20": 1,
                    "variable13": 1,
                    "variable17": 1,
                    "variable9": 1
                },
                "_DAT_40000818": {
                    "baud_rate": 2,
                    "clock_frequency": 1,
                    "constant1": 1,
                    "data_3": 1,
                    "device_configuration": 1,
                    "device_memory": 1,
                    "hardware_register6": 1,
                    "memory_location1": 1,
                    "register4": 1,
                    "register5": 1,
                    "register6": 2,
                    "register_7": 1,
                    "register_b": 1,
                    "register_f": 1,
                    "register_value6": 1,
                    "screen_resolution": 1,
                    "setting_7": 1,
                    "timer_interval": 1,
                    "variable5": 2
                },
                "_DAT_4000081c": {
                    "device_temp1": 1,
                    "hardware_register7": 1,
                    "memory_location2": 1,
                    "register6": 1,
                    "register7": 2,
                    "register_8": 1,
                    "register_g": 1,
                    "register_value7": 1,
                    "variable5": 1,
                    "variable6": 1
                },
                "_DAT_40000820": {
                    "device_temp2": 1,
                    "hardware_register8": 1,
                    "memory_location3": 1,
                    "register7": 1,
                    "register8": 2,
                    "register_9": 1,
                    "register_h": 1,
                    "register_value8": 1,
                    "variable6": 1,
                    "variable7": 1
                },
                "_DAT_40000824": {
                    "device_temp3": 1,
                    "hardware_register9": 1,
                    "memory_location4": 1,
                    "register8": 1,
                    "register9": 2,
                    "register_10": 1,
                    "register_i": 1,
                    "register_value9": 1,
                    "variable7": 1,
                    "variable8": 1
                },
                "_DAT_40000828": {
                    "clock_divisor": 1,
                    "data_4": 1,
                    "device_clk_div": 1,
                    "device_clock_freq": 1,
                    "device_preset_value": 1,
                    "divider": 1,
                    "hardware_register10": 1,
                    "memory_location5": 1,
                    "prescaler": 2,
                    "register10": 2,
                    "register5": 1,
                    "register9": 1,
                    "register_11": 1,
                    "register_j": 1,
                    "register_value1": 1,
                    "register_value10": 1,
                    "setting_9": 1,
                    "timer_prescaler": 1,
                    "timer_value": 1,
                    "variable6": 1,
                    "variable9": 1
                },
                "_DAT_4000082c": {
                    "constant2": 1,
                    "data_5": 1,
                    "device_threshold": 2,
                    "device_timeout": 1,
                    "hardware_register11": 1,
                    "interrupt_delay": 1,
                    "memory_location6": 1,
                    "period": 1,
                    "register10": 1,
                    "register11": 2,
                    "register6": 1,
                    "register_12": 1,
                    "register_c": 1,
                    "register_k": 1,
                    "register_value11": 1,
                    "register_value2": 1,
                    "reload_value": 1,
                    "setting_10": 1,
                    "timer_reload_value": 1,
                    "value": 1,
                    "variable10": 1,
                    "variable7": 1
                },
                "_DAT_40000834": {
                    "device_temp4": 1,
                    "hardware_register12": 1,
                    "memory_location7": 1,
                    "register11": 1,
                    "register12": 2,
                    "register_13": 1,
                    "register_l": 1,
                    "register_value12": 1,
                    "register_value3": 1,
                    "variable11": 1,
                    "variable8": 1
                },
                "_DAT_40000838": {
                    "buffer_size": 1,
                    "constant3": 1,
                    "counter_threshold": 1,
                    "data_6": 1,
                    "device_delay": 1,
                    "device_idle_time": 1,
                    "device_timeout": 1,
                    "hardware_register13": 1,
                    "memory_location8": 1,
                    "parameter": 1,
                    "register12": 1,
                    "register13": 2,
                    "register7": 1,
                    "register_14": 1,
                    "register_d": 1,
                    "register_m": 1,
                    "register_value13": 1,
                    "register_value4": 1,
                    "setting_12": 1,
                    "timeout_value": 1,
                    "variable12": 1,
                    "variable8": 1
                },
                "_DAT_4000083c": {
                    "counter3": 1,
                    "device_temp5": 1,
                    "hardware_register14": 1,
                    "memory_location9": 1,
                    "register13": 1,
                    "register14": 2,
                    "register_15": 1,
                    "register_n": 1,
                    "register_value14": 1,
                    "register_value5": 1,
                    "variable13": 1,
                    "variable9": 1
                },
                "_DAT_40000840": {
                    "device_temp6": 1,
                    "hardware_register15": 1,
                    "memory_location10": 1,
                    "register14": 1,
                    "register15": 2,
                    "register_16": 1,
                    "register_o": 1,
                    "register_value15": 1,
                    "register_value6": 1,
                    "variable10": 1,
                    "variable14": 1
                },
                "_DAT_40000848": {
                    "device_temp7": 1,
                    "hardware_register16": 1,
                    "memory_location11": 1,
                    "register15": 1,
                    "register16": 2,
                    "register_17": 1,
                    "register_p": 1,
                    "register_value16": 1,
                    "register_value7": 1,
                    "variable11": 1,
                    "variable15": 1
                },
                "_DAT_4000084c": {
                    "device_temp8": 1,
                    "hardware_register17": 1,
                    "memory_location12": 1,
                    "register16": 1,
                    "register17": 2,
                    "register_18": 1,
                    "register_q": 1,
                    "register_value17": 1,
                    "register_value8": 1,
                    "variable12": 1,
                    "variable16": 1
                },
                "param_1": {
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "memory": 1,
                    "memory_address": 1,
                    "memory_data": 1,
                    "memory_pointer": 8,
                    "param": 2,
                    "param_ptr": 1,
                    "parameter": 2,
                    "peripheral_data": 1,
                    "pointer": 1,
                    "ptr": 1,
                    "settings": 1
                },
                "undefined": {
                    "pointer": 1
                }
            },
            "called": [
                "FUN_08007a10"
            ],
            "calling": [
                "FUN_08007e08"
            ],
            "code": "\n\n\nvoid initialize_registers_08007d08(void)\n\n{\n  FUN_08007a10(&DAT_40000800);\n  _DAT_40000800 = 0x80;\n  _DAT_40000804 = 0;\n  _DAT_40000808 = 0;\n  _DAT_4000080c = 0;\n  _DAT_40000810 = 0;\n  _DAT_40000818 = 0x6800;\n  _DAT_4000081c = 0;\n  _DAT_40000820 = 0;\n  _DAT_40000824 = 0;\n  _DAT_40000828 = DAT_20000000 / 4800000 - 1;\n  _DAT_4000082c = 199;\n  _DAT_40000834 = 0;\n  _DAT_40000838 = 100;\n  _DAT_4000083c = 0;\n  _DAT_40000840 = 0;\n  _DAT_40000848 = 0;\n  _DAT_4000084c = 0;\n  _DAT_40000814 = 1;\n  return;\n}\n\n",
            "current_name": "initialize_registers_08007d08",
            "entrypoint": "0x08007d08",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007d08": "initialize_registers_08007d08"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007da8": {
            "additional_data": {
                "": {
                    "": 1
                },
                "FUN_08007da8": {
                    "set_enabled_flags": 1,
                    "set_flags": 16,
                    "set_flags_and_enable": 2,
                    "set_flags_and_permissions": 1,
                    "set_flags_and_status": 2,
                    "set_flags_and_values": 2,
                    "set_flags_on": 1,
                    "set_memory_flags": 1,
                    "set_register_flags": 1,
                    "update_flags": 2,
                    "update_settings": 1,
                    "update_status_flags": 1
                },
                "_": {
                    "value": 1
                },
                "_DAT_40000800": {
                    "control": 2,
                    "control_flags": 1,
                    "control_register": 8,
                    "enable": 1,
                    "enable_bit": 1,
                    "enable_register": 1,
                    "flag_register2": 2,
                    "flag_register_2": 1,
                    "flags2": 1,
                    "memory_status_flags2": 1,
                    "other_flag_register": 1,
                    "permissions": 1,
                    "register": 1,
                    "register_value": 1,
                    "settings_value": 1,
                    "status": 2,
                    "status_register": 1,
                    "values": 1
                },
                "_DAT_40000820": {
                    "flag_register": 3,
                    "flag_register1": 2,
                    "flag_register_1": 1,
                    "flags": 9,
                    "flags1": 1,
                    "flags_register": 8,
                    "memory_status_flags1": 1,
                    "register_flags": 1,
                    "settings_flags": 1,
                    "status_flags": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08007e08"
            ],
            "code": "\n\n\nvoid set_flags_and_values_08007da8(void)\n\n{\n  valueDATvalue40000820 = valueDATvalue40000820 | 0x10;\n  valueDATvalue40000800 = valueDATvalue40000800 | 1;\n  return;\n}\n\n",
            "current_name": "set_flags_and_values_08007da8",
            "entrypoint": "0x08007da8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007da8": "set_flags_and_values_08007da8",
                "_": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007e08": {
            "additional_data": {
                "FUN_08007ad0": {
                    "cleanup_resources": 1,
                    "execute_preparation_step": 1,
                    "fetch_input": 1,
                    "initialize": 1,
                    "initialize_components": 1,
                    "initialize_connections": 1,
                    "initialize_data": 1,
                    "initialize_data_structures": 1,
                    "initialize_first": 1,
                    "initialize_module": 1,
                    "initialize_module_a": 1,
                    "initialize_network": 2,
                    "initialize_subsystem_1": 2,
                    "initialize_system": 1,
                    "initialize_variables": 3,
                    "load_configuration": 1,
                    "load_data": 1,
                    "perform_action3": 1,
                    "perform_initialization": 3,
                    "perform_operation3": 1,
                    "setup_environment": 1
                },
                "FUN_08007d08": {
                    "configure_settings": 2,
                    "configure_system": 1,
                    "configure_ui": 1,
                    "execute_procedure": 1,
                    "fetch_data": 1,
                    "initialize_data": 1,
                    "initialize_database": 1,
                    "initialize_graphics": 1,
                    "initialize_module_b": 1,
                    "initialize_second": 1,
                    "initialize_subsystem_2": 2,
                    "initialize_variables": 1,
                    "load_data": 1,
                    "perform_action1": 1,
                    "perform_calculations": 1,
                    "perform_data_processing": 1,
                    "perform_first_step": 1,
                    "perform_first_task": 1,
                    "perform_initialization": 1,
                    "perform_operation": 1,
                    "perform_operation1": 2,
                    "perform_preprocessing": 1,
                    "perform_setup_procedure": 1,
                    "perform_task1": 1,
                    "setup_configuration": 1,
                    "setup_user_interface": 1,
                    "update_configurations": 1
                },
                "FUN_08007da8": {
                    "analyze_data": 1,
                    "configure_settings": 1,
                    "configure_system": 1,
                    "configure_system_components": 1,
                    "execute_decompilation": 1,
                    "finalize": 1,
                    "handle_data_output": 1,
                    "initialize_audio": 1,
                    "initialize_gui": 1,
                    "initialize_module_c": 1,
                    "initialize_subsystem_3": 2,
                    "initialize_third": 1,
                    "load_data": 1,
                    "perform_action2": 1,
                    "perform_computation": 1,
                    "perform_operation2": 2,
                    "perform_second_step": 1,
                    "perform_second_task": 1,
                    "perform_startup": 1,
                    "perform_task": 1,
                    "perform_task2": 1,
                    "process_data": 3,
                    "run_configuration_process": 1,
                    "start_execution": 1,
                    "start_processing": 1,
                    "update_values": 1
                },
                "FUN_08007e08": {
                    "execute_function_sequence": 1,
                    "execute_functions": 2,
                    "execute_initialization_routine": 1,
                    "execute_main_function": 1,
                    "execute_operations": 1,
                    "execute_process": 1,
                    "execute_setup": 1,
                    "execute_sub_functions": 1,
                    "initialize": 3,
                    "initialize_application": 2,
                    "initialize_components": 1,
                    "initialize_program": 2,
                    "initialize_system": 6,
                    "initialize_system_components": 1,
                    "run_initialization": 1
                }
            },
            "called": [
                "FUN_08007d08",
                "FUN_08007da8",
                "FUN_08007ad0"
            ],
            "calling": [
                "FUN_08007540"
            ],
            "code": "\nvoid initialize_system_components_08007e08(void)\n\n{\n  FUN_08007ad0();\n  FUN_08007d08();\n  FUN_08007da8();\n  return;\n}\n\n",
            "current_name": "initialize_system_components_08007e08",
            "entrypoint": "0x08007e08",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007e08": "initialize_system_components_08007e08"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007e1c": {
            "additional_data": {
                "FUN_08007e1c": {
                    "send_byte": 1,
                    "send_byte_and_await_confirmation": 1,
                    "send_byte_and_wait": 1,
                    "send_byte_and_wait_for_ack": 3,
                    "send_byte_and_wait_for_confirmation": 1,
                    "send_byte_and_wait_for_ready": 1,
                    "send_byte_data": 1,
                    "send_byte_to_buffer": 1,
                    "send_byte_to_device": 3,
                    "send_byte_to_io_device": 1,
                    "send_data": 2,
                    "set_byte_and_wait_for_flag": 1,
                    "set_byte_value": 1,
                    "set_byte_value_and_wait": 1,
                    "set_byte_value_blocking": 1,
                    "set_data_to_register": 1,
                    "store_byte_in_memory": 2,
                    "store_byte_until_flag_set": 1,
                    "write_byte_to_memory": 4,
                    "write_byte_to_register": 1,
                    "write_to_memory": 2
                },
                "_DAT_40004400": {
                    "data_register": 1,
                    "device_status": 1,
                    "device_status_register": 2,
                    "memory_status": 1,
                    "memory_status_register": 1,
                    "status_flag": 1,
                    "status_register": 13
                },
                "_DAT_40004404": {
                    "communication_register": 1,
                    "data_register": 5,
                    "device_data": 1,
                    "device_data_register": 2,
                    "memory_address": 4,
                    "memory_data_register": 1,
                    "output_register": 5,
                    "result": 1
                },
                "param_1": {
                    "byte_data": 1,
                    "byte_to_send": 13,
                    "byte_to_set": 1,
                    "byte_to_store": 1,
                    "byte_to_write": 4,
                    "byte_value": 1,
                    "data": 5,
                    "input_byte": 3,
                    "new_value": 1,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08008250",
                "FUN_0800826a"
            ],
            "code": "\n\n\nvoid write_byte_to_memory_08007e1c(byte byte_to_send)\n\n{\n  do {\n  } while ((_DAT_40004400 & 0x80) == 0);\n  _DAT_40004404 = (uint)byte_to_send;\n  return;\n}\n\n",
            "current_name": "write_byte_to_memory_08007e1c",
            "entrypoint": "0x08007e1c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007e1c": "write_byte_to_memory_08007e1c",
                "param_1": "byte_to_send"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007e58": {
            "additional_data": {
                "0x20": {
                    "bit_mask": 2,
                    "flag_mask": 1
                },
                "DAT_40004400": {
                    "status_register": 1
                },
                "FUN_08007e58": {
                    "check_bit_32_is_set": 1,
                    "check_bit_flag": 2,
                    "check_bit_flags_set": 1,
                    "check_bit_is_set": 1,
                    "check_bit_set": 10,
                    "check_bit_status": 2,
                    "check_flag": 1,
                    "check_flag_set": 5,
                    "check_flag_status": 2,
                    "check_permission_flag": 1,
                    "is_bit_set": 4,
                    "is_flag_set": 1
                },
                "_DAT_40004400": {
                    "bit_flag": 1,
                    "bit_flags": 2,
                    "bitfield_register": 1,
                    "bitmask": 1,
                    "data": 2,
                    "data_register": 1,
                    "data_value": 2,
                    "data_variable": 2,
                    "flag": 3,
                    "flag_data": 1,
                    "flag_register": 3,
                    "flag_status": 1,
                    "flag_variable": 1,
                    "permission_flag": 1,
                    "register_value": 2,
                    "status_register": 6
                },
                "bool": {
                    "bool": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08008286"
            ],
            "code": "\n\n\nbool check_bit_32_is_set_08007e58(void)\n\n{\n  return (_DAT_40004400 & 0x20) != 0;\n}\n\n",
            "current_name": "check_bit_32_is_set_08007e58",
            "entrypoint": "0x08007e58",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007e58": "check_bit_32_is_set_08007e58"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007e84": {
            "additional_data": {
                "0xff": {
                    "mask": 2
                },
                "FUN_08007e84": {
                    "extract_lowest_byte": 1,
                    "get_last_byte": 3,
                    "get_least_significant_byte": 4,
                    "get_low_byte": 1,
                    "get_lower8_bits": 1,
                    "get_lower_byte": 2,
                    "get_lowest_byte": 15,
                    "get_lowest_byte_from_global_variable": 1,
                    "get_lowest_byte_value": 1,
                    "get_masked_value": 2
                },
                "_DAT_40004404": {
                    "data": 11,
                    "data_register": 2,
                    "data_value": 8,
                    "data_variable": 1,
                    "global_variable": 1,
                    "input_data": 2,
                    "input_value": 1,
                    "masked_value": 1,
                    "masked_variable": 1,
                    "original_value": 1,
                    "source_value": 1,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08008286"
            ],
            "code": "\n\n\nuint get_lowest_byte_from_global_variable_08007e84(void)\n\n{\n  return _DAT_40004404 & 0xff;\n}\n\n",
            "current_name": "get_lowest_byte_from_global_variable_08007e84",
            "entrypoint": "0x08007e84",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007e84": "get_lowest_byte_from_global_variable_08007e84"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007ea4": {
            "additional_data": {
                "0x40004400": {
                    "flag_address_2": 1
                },
                "0x40004800": {
                    "address_1": 1,
                    "address_c": 1,
                    "base_address_c": 1,
                    "flag_address_3": 2
                },
                "0x40004c00": {
                    "address_2": 1,
                    "address_d": 1,
                    "base_address_d": 1,
                    "flag_address_4": 2
                },
                "0x40005000": {
                    "address_3": 1,
                    "address_e": 1,
                    "base_address_e": 1,
                    "flag_address_5": 2
                },
                "0x40011000": {
                    "address_a": 1,
                    "base_address_a": 1,
                    "flag_address_1": 2,
                    "start_address": 1
                },
                "0x40011400": {
                    "address_4": 1,
                    "address_f": 1,
                    "base_address_f": 1,
                    "flag_address_6": 2
                },
                "FUN_08007ea4": {
                    "set_flags": 1,
                    "set_flags_based_on_address": 1,
                    "set_flags_based_on_param": 1,
                    "set_memory_flag": 1,
                    "update_data": 1,
                    "update_flags": 3,
                    "update_flags_based_on_param": 4,
                    "update_memory_addresses": 1,
                    "update_memory_flag": 1,
                    "update_memory_flags": 13,
                    "update_memory_protection": 1,
                    "update_memory_registers": 1,
                    "update_status_flags": 2
                },
                "_DAT_40023840": {
                    "flag2": 6,
                    "flag_register2": 1,
                    "flags2": 2,
                    "memory_flag2": 8,
                    "memory_flag_b": 1,
                    "memory_flags2": 1,
                    "memory_protection2": 1,
                    "register_b": 1,
                    "register_value2": 1,
                    "status_flags2": 2,
                    "variable2": 1
                },
                "_DAT_40023844": {
                    "flag1": 6,
                    "flag_register1": 1,
                    "flags1": 2,
                    "memory_flag1": 8,
                    "memory_flag_a": 1,
                    "memory_flags1": 1,
                    "memory_protection1": 1,
                    "register_a": 1,
                    "register_value1": 1,
                    "status_flags1": 2,
                    "variable1": 1
                },
                "param_1": {
                    "address": 7,
                    "data_ptr": 1,
                    "input": 1,
                    "input_param": 1,
                    "mem_address": 1,
                    "memory_address": 16,
                    "param": 4
                },
                "undefined": {
                    "ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08008190"
            ],
            "code": "\n\n\nvoid update_memory_flags_08007ea4(ptr *memory_address)\n\n{\n  if (memory_address == (ptr *)0x40011000) {\n    _DAT_40023844 = _DAT_40023844 | 0x10;\n  }\n  else if (memory_address == &DAT_40004400) {\n    _DAT_40023840 = _DAT_40023840 | 0x20000;\n  }\n  else if (memory_address == (ptr *)0x40004800) {\n    _DAT_40023840 = _DAT_40023840 | 0x40000;\n  }\n  else if (memory_address == (ptr *)0x40004c00) {\n    _DAT_40023840 = _DAT_40023840 | 0x80000;\n  }\n  else if (memory_address == (ptr *)0x40005000) {\n    _DAT_40023840 = _DAT_40023840 | 0x100000;\n  }\n  else if (memory_address == (ptr *)0x40011400) {\n    _DAT_40023844 = _DAT_40023844 | 0x20;\n  }\n  return;\n}\n\n",
            "current_name": "update_memory_flags_08007ea4",
            "entrypoint": "0x08007ea4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007ea4": "update_memory_flags_08007ea4",
                "param_1": "memory_address",
                "undefined": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007f54": {
            "additional_data": {
                "FUN_08006680": {
                    "calculate_random_value": 1,
                    "calculate_uint_value2": 1,
                    "calculate_value1": 1,
                    "get_dividend": 1,
                    "get_factor2": 1,
                    "get_random_value": 2,
                    "get_random_value1": 1,
                    "get_random_value2": 3,
                    "get_scaled_value1": 1,
                    "get_uint_value2": 1,
                    "get_value2": 2,
                    "perform_complex_calculation": 1
                },
                "FUN_080066cc": {
                    "calculate_uint_value1": 1,
                    "calculate_value2": 1,
                    "fetch_value_from_memory": 1,
                    "get_another_random_value": 1,
                    "get_factor1": 1,
                    "get_multiplier": 1,
                    "get_random_value": 1,
                    "get_random_value1": 3,
                    "get_random_value2": 1,
                    "get_random_value_alt": 1,
                    "get_scaled_value2": 1,
                    "get_uint_value1": 1,
                    "get_value1": 2
                },
                "FUN_08007f54": {
                    "calculate_and_set_param_value": 1,
                    "calculate_and_set_parameter": 1,
                    "calculate_and_set_parameter_value": 1,
                    "calculate_and_update_value": 3,
                    "calculate_checksum": 6,
                    "calculate_output_value": 1,
                    "calculate_param": 1,
                    "calculate_param_value": 1,
                    "calculate_parameter": 6,
                    "calculate_parameter_value": 5,
                    "calculate_value": 3,
                    "calculate_voltage": 1,
                    "update_parameter_value": 1
                },
                "iVar2": {
                    "div_result2": 1,
                    "input1_result": 1,
                    "operand2": 1,
                    "quotient": 2,
                    "result1": 6,
                    "result2": 6,
                    "temp1": 2,
                    "temp2": 3,
                    "temp_value1": 3,
                    "temp_var1": 4,
                    "value2": 1,
                    "voltage_index": 1
                },
                "iVar3": {
                    "div_result3": 1,
                    "input2_result": 1,
                    "operand3": 1,
                    "other_index": 1,
                    "remainder": 1,
                    "result2": 6,
                    "result3": 6,
                    "temp": 1,
                    "temp2": 2,
                    "temp3": 3,
                    "temp_value2": 3,
                    "temp_var2": 4,
                    "value3": 1
                },
                "param_1": {
                    "address": 18,
                    "base_address": 2,
                    "data_address": 1,
                    "device_address": 1,
                    "input_address": 5,
                    "input_param1": 1,
                    "input_value": 1,
                    "input_value1": 1,
                    "parameter_address": 1
                },
                "param_2": {
                    "data_length": 1,
                    "divisor": 1,
                    "factor": 3,
                    "input_param2": 1,
                    "input_value": 4,
                    "input_value2": 1,
                    "multiplier": 7,
                    "param_value": 1,
                    "scale_factor": 1,
                    "shift_count": 1,
                    "size": 2,
                    "value": 8
                },
                "uVar1": {
                    "calculated_value": 1,
                    "checksum_value": 1,
                    "div_result": 1,
                    "dividend": 2,
                    "division_result": 2,
                    "factor": 1,
                    "multiplier": 1,
                    "operand1": 1,
                    "quotient": 4,
                    "quotient1": 1,
                    "result": 5,
                    "result1": 6,
                    "temp1": 3,
                    "value1": 1,
                    "voltage_ratio": 1
                },
                "uVar4": {
                    "calculation_result": 1,
                    "converted_value": 1,
                    "function_result": 5,
                    "random_value": 8,
                    "random_var": 1,
                    "result": 3,
                    "return_value": 2,
                    "temp": 1,
                    "temp4": 3,
                    "value": 4,
                    "value_multiplier": 1
                }
            },
            "called": [
                "FUN_080066cc",
                "FUN_08006680"
            ],
            "calling": [
                "FUN_08008190"
            ],
            "code": "\nvoid calculate_and_set_parameter_value_08007f54(int address,int value)\n\n{\n  ulonglong result1;\n  int result2;\n  int result2;\n  undefined8 random_value;\n  \n  if ((*(uint *)(address + 0xc) & 0x8000) == 0) {\n    if ((address != 0x40011000) && (address != 0x40011400)) {\n      random_value = FUN_08006680();\n      result1 = (ulonglong)(uint)((int)random_value * 0x19) / (ulonglong)(uint)(value << 2);\n      result2 = FUN_08006680((int)random_value,(int)((ulonglong)random_value >> 0x20),(int)(result1 * 0x51eb851f));\n      result2 = FUN_08006680();\n      *(uint *)(address + 8) =\n           (int)(result1 / 100) << 4 |\n           (((uint)(result2 * 0x19) / (uint)(value << 2) +\n            (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(value << 2)) / 100) * -100)\n            * 0x10 + 0x32) / 100 & 0xf;\n      return;\n    }\n    random_value = FUN_080066cc();\n    result1 = (ulonglong)(uint)((int)random_value * 0x19) / (ulonglong)(uint)(value << 2);\n    result2 = FUN_080066cc((int)random_value,(int)((ulonglong)random_value >> 0x20),(int)(result1 * 0x51eb851f));\n    result2 = FUN_080066cc();\n    *(uint *)(address + 8) =\n         (int)(result1 / 100) << 4 |\n         (((uint)(result2 * 0x19) / (uint)(value << 2) +\n          (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(value << 2)) / 100) * -100) *\n          0x10 + 0x32) / 100 & 0xf;\n  }\n  else {\n    if ((address != 0x40011000) && (address != 0x40011400)) {\n      random_value = FUN_08006680();\n      result1 = (ulonglong)(uint)((int)random_value * 0x19) / (ulonglong)(uint)(value << 1);\n      result2 = FUN_08006680((int)random_value,(int)((ulonglong)random_value >> 0x20),(int)(result1 * 0x51eb851f));\n      result2 = FUN_08006680();\n      *(uint *)(address + 8) =\n           (int)(result1 / 100) << 4 |\n           (((uint)(result2 * 0x19) / (uint)(value << 1) +\n            (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(value << 1)) / 100) * -100)\n            * 0x10 + 0x32) / 100 & 0xf;\n      return;\n    }\n    random_value = FUN_080066cc();\n    result1 = (ulonglong)(uint)((int)random_value * 0x19) / (ulonglong)(uint)(value << 1);\n    result2 = FUN_080066cc((int)random_value,(int)((ulonglong)random_value >> 0x20),(int)(result1 * 0x51eb851f));\n    result2 = FUN_080066cc();\n    *(uint *)(address + 8) =\n         (int)(result1 / 100) << 4 |\n         (((uint)(result2 * 0x19) / (uint)(value << 1) +\n          (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(value << 1)) / 100) * -100) *\n          0x10 + 0x32) / 100 & 0xf;\n  }\n  return;\n}\n\n",
            "current_name": "calculate_and_set_parameter_value_08007f54",
            "entrypoint": "0x08007f54",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007f54": "calculate_and_set_parameter_value_08007f54",
                "iVar2": "result2",
                "iVar3": "result2",
                "param_1": "address",
                "param_2": "value",
                "uVar1": "result1",
                "uVar4": "random_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008190": {
            "additional_data": {
                "0x1c200": {
                    "data_length": 1,
                    "offset": 1
                },
                "0x2000": {
                    "flag": 2
                },
                "0xc": {
                    "value1": 1,
                    "value_a": 1
                },
                "0xffff400c": {
                    "mask1": 1,
                    "mask_a": 1
                },
                "0xffff8090": {
                    "mask2": 1,
                    "mask_b": 1
                },
                "0xfffff000": {
                    "mask3": 1,
                    "mask_c": 1
                },
                "0xfffffc00": {
                    "mask4": 1,
                    "mask_d": 1
                },
                "FUN_08007ea4": {
                    "clear_memory": 1,
                    "copy_data": 3,
                    "initialize_buffer": 1,
                    "initialize_data": 8,
                    "initialize_memory": 8,
                    "initialize_pointer": 1,
                    "initialize_pointers": 1,
                    "set_initial_values": 2,
                    "set_memory": 3,
                    "set_memory_data": 1,
                    "setup_memory": 1,
                    "update_memory_value": 1
                },
                "FUN_08007f54": {
                    "configure_memory": 1,
                    "copy_data": 3,
                    "copy_data_to_memory": 1,
                    "copy_memory": 2,
                    "initialize_data_section": 1,
                    "load_data": 2,
                    "load_data_into_memory": 5,
                    "load_memory": 1,
                    "modify_data": 1,
                    "modify_memory": 1,
                    "perform_data_initialization": 1,
                    "set_data": 1,
                    "set_memory_range": 3,
                    "set_memory_threshold": 1,
                    "set_memory_value": 1,
                    "set_memory_values": 1,
                    "set_value": 1,
                    "transfer_data": 1,
                    "write_data": 1,
                    "write_data_to_memory": 1,
                    "write_to_memory": 1
                },
                "FUN_08008190": {
                    "initialize_data": 3,
                    "initialize_memory": 18,
                    "initialize_memory_config": 1,
                    "initialize_memory_layout": 1,
                    "initialize_registers": 7,
                    "initiate_memory": 1
                },
                "_DAT_40004400": {
                    "data": 1,
                    "data_buffer": 1,
                    "memory": 1,
                    "memory_base": 1,
                    "memory_buffer": 1,
                    "memory_config3": 1,
                    "memory_data": 1,
                    "register4": 2,
                    "register_a": 1
                },
                "_DAT_4000440c": {
                    "configured_value": 1,
                    "control_register": 1,
                    "data_flag1": 1,
                    "memory_config": 1,
                    "memory_config0": 1,
                    "memory_flags1": 1,
                    "pointer_data_a": 1,
                    "register1": 2,
                    "register_c": 1
                },
                "_DAT_40004410": {
                    "data_flag2": 1,
                    "initialized_value": 1,
                    "memory_config1": 1,
                    "memory_config2": 1,
                    "memory_flags2": 1,
                    "pointer_data_b": 1,
                    "register2": 2,
                    "register_d": 1,
                    "status_register": 1
                },
                "_DAT_40004414": {
                    "adjusted_value": 1,
                    "data_flag3": 1,
                    "interrupt_register": 1,
                    "memory_config2": 1,
                    "memory_config3": 1,
                    "memory_flags3": 1,
                    "pointer_data_c": 1,
                    "register3": 2,
                    "register_e": 1
                },
                "param_1": {
                    "buffer": 1,
                    "data": 3,
                    "data_pointer": 4,
                    "data_ptr": 1,
                    "memory_address": 1,
                    "memory_pointer": 3,
                    "pointer": 1,
                    "pointers": 1
                },
                "param_2": {
                    "data_size": 4,
                    "length": 1,
                    "memory_size": 2,
                    "size": 3,
                    "threshold": 1,
                    "value": 4
                }
            },
            "called": [
                "FUN_08007ea4",
                "FUN_08007f54"
            ],
            "calling": [
                "FUN_08007540"
            ],
            "code": "\n\n\nvoid initialize_memory_config_08008190(void)\n\n{\n  FUN_08007ea4(&DAT_40004400);\n  _DAT_4000440c = _DAT_4000440c & 0xffff400c | 0xc;\n  _DAT_40004410 = _DAT_40004410 & 0xffff8090;\n  _DAT_40004414 = _DAT_40004414 & 0xfffff000;\n  _DAT_40004400 = _DAT_40004400 & 0xfffffc00;\n  FUN_08007f54(&DAT_40004400,0x1c200);\n  _DAT_4000440c = _DAT_4000440c | 0x2000;\n  return;\n}\n\n",
            "current_name": "initialize_memory_config_08008190",
            "entrypoint": "0x08008190",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008190": "initialize_memory_config_08008190"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008244": {
            "called": [],
            "calling": [
                "FUN_08001ddc"
            ],
            "code": "\nvoid FUNC_08008244(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08008244",
            "entrypoint": "0x08008244",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08008244": "FUNC_08008244"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08008250": {
            "additional_data": {
                "FUN_08007e1c": {
                    "do_sub_function": 1,
                    "execute_preparation": 1,
                    "execute_task": 1,
                    "initialize": 1,
                    "initialize_parameter_buffer": 1,
                    "perform_action": 1,
                    "perform_initialization": 1,
                    "process_byte": 6,
                    "process_data": 12,
                    "process_input": 1
                },
                "FUN_08008250": {
                    "execute_function": 2,
                    "execute_initial_function": 1,
                    "execute_initial_task": 1,
                    "execute_initialization": 10,
                    "execute_main_function": 1,
                    "initialize": 10,
                    "initialize_application": 1,
                    "initialize_components": 1,
                    "initialize_data": 1,
                    "process_data": 2,
                    "process_function": 1
                },
                "param_1": {
                    "byte_data": 2,
                    "data": 11,
                    "input": 7,
                    "input_data": 5,
                    "input_parameter": 1,
                    "task_parameter": 1
                }
            },
            "called": [
                "FUN_08007e1c"
            ],
            "calling": [
                "FUN_08003826",
                "FUN_080036c6",
                "FUN_08003778",
                "FUN_080036f0",
                "FUN_080037fc",
                "FUN_0800369c"
            ],
            "code": "\nvoid initialize_application_08008250(undefined data)\n\n{\n  FUN_08007e1c(data);\n  return;\n}\n\n",
            "current_name": "initialize_application_08008250",
            "entrypoint": "0x08008250",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008250": "initialize_application_08008250",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800826a": {
            "additional_data": {
                "FUN_08007e1c": {
                    "execute_action": 1,
                    "handle_byte": 1,
                    "handle_data": 2,
                    "initialize_byte_data": 1,
                    "initialize_data": 2,
                    "perform_action": 1,
                    "perform_initialization": 1,
                    "process_byte": 5,
                    "process_data": 6,
                    "process_input": 2,
                    "reverse_bytes": 1
                },
                "FUN_0800826a": {
                    "execute_function": 5,
                    "execute_initialization": 2,
                    "execute_main_function": 1,
                    "initialize": 6,
                    "initialize_and_return_zero": 1,
                    "initialize_application": 1,
                    "initialize_database": 1,
                    "initialize_memory": 1,
                    "initialize_process": 1,
                    "initialize_program": 1,
                    "initialize_system": 3,
                    "process": 1,
                    "process_data": 4,
                    "process_param": 1,
                    "update_status": 1
                },
                "param_1": {
                    "byte_input": 1,
                    "byte_param": 2,
                    "data": 10,
                    "input": 6,
                    "input_byte": 1,
                    "input_data": 6,
                    "input_parameter": 1,
                    "param": 2,
                    "status": 1
                }
            },
            "called": [
                "FUN_08007e1c"
            ],
            "calling": [],
            "code": "\nundefined4 initialize_system_0800826a(undefined data)\n\n{\n  FUN_08007e1c(data);\n  return 0;\n}\n\n",
            "current_name": "initialize_system_0800826a",
            "entrypoint": "0x0800826a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800826a": "initialize_system_0800826a",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008286": {
            "additional_data": {
                "FUN_08005900": {
                    "check_byte": 2,
                    "check_byte_value": 1,
                    "check_condition": 1,
                    "check_data_successful": 1,
                    "check_data_validity": 1,
                    "check_network_status": 1,
                    "check_value": 4,
                    "check_value_and_perform_action": 1,
                    "is_valid_error_code": 1,
                    "is_value_valid": 2,
                    "perform_operation": 1,
                    "process_data": 3,
                    "process_result": 1,
                    "process_value": 1,
                    "validate_data": 1,
                    "validate_response": 1
                },
                "FUN_08007e58": {
                    "check_condition": 7,
                    "check_connection": 2,
                    "check_flag": 1,
                    "is_condition_met": 1,
                    "is_connection_valid": 1,
                    "is_data_valid": 1,
                    "is_error": 1,
                    "is_network_available": 1,
                    "is_status_nonzero": 1,
                    "is_valid": 5,
                    "is_valid_byte": 1,
                    "is_valid_data": 1
                },
                "FUN_08007e84": {
                    "get_byte_value": 2,
                    "get_data": 5,
                    "get_error_code": 1,
                    "get_input_value": 1,
                    "get_network_status": 1,
                    "get_response": 1,
                    "get_value": 11,
                    "retrieve_data": 1
                },
                "FUN_08008286": {
                    "check_and_execute_operation": 1,
                    "check_and_get_data": 1,
                    "check_and_get_value": 3,
                    "check_and_process_data": 2,
                    "check_byte_function": 1,
                    "check_byte_value": 1,
                    "check_data_validity": 1,
                    "check_if_error_occurred": 1,
                    "check_if_valid_connection": 1,
                    "check_input": 1,
                    "check_network_connection": 1,
                    "check_result": 2,
                    "check_result_of_subfunctions": 1,
                    "check_status": 9,
                    "check_status_and_return": 1,
                    "check_status_and_return_result": 1,
                    "check_success_and_return_value": 1,
                    "check_valid_response": 1,
                    "check_validity": 1
                },
                "iVar2": {
                    "condition_check_result": 1,
                    "is_valid": 2,
                    "result": 12,
                    "status": 9,
                    "success": 1
                },
                "uVar1": {
                    "byte_value": 3,
                    "connection_status": 1,
                    "data": 4,
                    "input_value": 1,
                    "network_status": 1,
                    "response": 1,
                    "result": 8,
                    "return_value": 1,
                    "value": 5
                }
            },
            "called": [
                "FUN_08005900",
                "FUN_08007e58",
                "FUN_08007e84"
            ],
            "calling": [
                "FUN_08003f34"
            ],
            "code": "\nundefined check_status_and_return_result_08008286(void)\n\n{\n  undefined result;\n  int result;\n  \n  result = FUN_08007e58();\n  if (result != 0) {\n    result = FUN_08007e84();\n    result = FUN_08005900(result);\n    if (result == 0) {\n      return result;\n    }\n  }\n  return 0xff;\n}\n\n",
            "current_name": "check_status_and_return_result_08008286",
            "entrypoint": "0x08008286",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008286": "check_status_and_return_result_08008286",
                "iVar2": "result",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080082ba": {
            "called": [],
            "calling": [
                "FUN_08001ddc"
            ],
            "code": "\nvoid FUNC_080082ba(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080082ba",
            "entrypoint": "0x080082ba",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080082ba": "FUNC_080082ba"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080082d0": {
            "additional_data": {
                "FUN_080082d0": {
                    "binary_addition": 1,
                    "binary_arithmetic_operation": 1,
                    "calculate": 2,
                    "calculate_bitwise_operation": 1,
                    "calculate_result": 4,
                    "calculate_sum": 3,
                    "perform_calculation": 1,
                    "reverse_arithmetic": 2,
                    "reverse_binary_operation": 2,
                    "reverse_bits": 2,
                    "reverse_bits_and_manipulate_values": 1,
                    "reverse_bits_and_shift_left": 1,
                    "reverse_bitwise_operations": 1,
                    "reverse_operation": 1
                },
                "bVar13": {
                    "bool1": 1,
                    "bool_var_1": 1,
                    "carry_flag": 1,
                    "check1": 1,
                    "condition1": 1,
                    "condition_1": 1,
                    "flag1": 8,
                    "flag_1": 3,
                    "flag_a": 1,
                    "is_carry_zero": 1,
                    "is_condition1": 1,
                    "is_condition1_true": 1,
                    "is_condition_true1": 1,
                    "is_equal": 1,
                    "is_input2_equal": 1,
                    "is_input_equal": 1,
                    "is_zero": 1,
                    "is_zero8": 1,
                    "temp14": 1,
                    "temp_11": 1,
                    "temp_6": 1,
                    "temp_bool_1": 1
                },
                "bVar14": {
                    "bool2": 1,
                    "bool_var_2": 1,
                    "check2": 1,
                    "condition1": 2,
                    "condition2": 1,
                    "condition_2": 1,
                    "condition_flag": 1,
                    "flag2": 8,
                    "flag_2": 3,
                    "flag_b": 1,
                    "is_condition2": 1,
                    "is_condition2_true": 1,
                    "is_condition_met": 1,
                    "is_condition_true2": 1,
                    "is_result_zero": 1,
                    "is_zero1": 1,
                    "is_zero10": 1,
                    "temp15": 1,
                    "temp_12": 1,
                    "temp_7": 1,
                    "temp_bool_2": 1
                },
                "bVar15": {
                    "bool3": 1,
                    "bool_var_3": 1,
                    "check3": 1,
                    "condition2": 1,
                    "condition3": 1,
                    "condition_3": 1,
                    "flag3": 8,
                    "flag_3": 3,
                    "flag_c": 1,
                    "is_carry_overflow": 1,
                    "is_condition3": 1,
                    "is_condition3_true": 1,
                    "is_condition_true3": 1,
                    "is_greater": 1,
                    "is_zero2": 1,
                    "is_zero4": 1,
                    "overflow": 1,
                    "subtract_flag": 1,
                    "temp16": 1,
                    "temp_13": 1,
                    "temp_8": 1,
                    "temp_bool_3": 1
                },
                "bVar2": {
                    "carry": 8,
                    "carry1": 1,
                    "carry_bit": 2,
                    "flag": 1,
                    "flag4": 1,
                    "temp2": 2,
                    "temp3": 1,
                    "temp_11": 1,
                    "temp_5": 1,
                    "temp_byte": 1,
                    "temp_flag": 1,
                    "temp_var_2": 1
                },
                "iVar1": {
                    "bit_shift1": 1,
                    "count1": 1,
                    "flags_1": 1,
                    "int_a": 1,
                    "shift1": 1,
                    "shift_amount1": 1,
                    "shift_amount2": 1,
                    "shift_amount_1": 1,
                    "shift_count_1": 1,
                    "shift_val1": 1,
                    "shifted_bits": 1,
                    "shifted_input2": 2,
                    "sign_bit1": 1,
                    "temp1": 2,
                    "temp2": 1,
                    "temp6": 2,
                    "temp_3": 1,
                    "temp_9": 1,
                    "temp_value1": 1,
                    "temp_var_1": 2,
                    "upper_bits1": 1
                },
                "iVar8": {
                    "bit_shift2": 1,
                    "count2": 1,
                    "flags_2": 1,
                    "int_b": 1,
                    "shift2": 1,
                    "shift_amount2": 1,
                    "shift_amount4": 1,
                    "shift_amount_2": 1,
                    "shift_count_2": 1,
                    "shift_val2": 1,
                    "shifted_bits2": 1,
                    "shifted_input4": 2,
                    "sign_bit2": 1,
                    "temp2": 1,
                    "temp6": 3,
                    "temp7": 1,
                    "temp8": 2,
                    "temp9": 1,
                    "temp_10": 1,
                    "temp_4": 1,
                    "temp_6": 1,
                    "temp_value2": 1,
                    "temp_var_2": 1,
                    "temp_var_8": 1,
                    "upper_bits2": 1
                },
                "param_1": {
                    "a": 1,
                    "input1": 17,
                    "input_1": 7,
                    "input_a": 1,
                    "input_param_1": 1,
                    "input_parameter_1": 1,
                    "input_value1": 1,
                    "operand1": 2
                },
                "param_2": {
                    "b": 1,
                    "input2": 17,
                    "input_2": 7,
                    "input_b": 1,
                    "input_param_2": 1,
                    "input_parameter_2": 1,
                    "input_value2": 1,
                    "operand2": 2
                },
                "param_3": {
                    "c": 1,
                    "input3": 17,
                    "input_3": 7,
                    "input_c": 1,
                    "input_param_3": 1,
                    "input_parameter_3": 1,
                    "input_value3": 1,
                    "operand3": 2
                },
                "param_4": {
                    "d": 1,
                    "input4": 17,
                    "input_4": 7,
                    "input_d": 1,
                    "input_param_4": 1,
                    "input_parameter_4": 1,
                    "input_value4": 1,
                    "operand4": 2
                },
                "uVar10": {
                    "adjusted_input2": 1,
                    "bitwise_op2": 1,
                    "carry_shifted": 1,
                    "modified_value3": 1,
                    "operand1_shifted": 1,
                    "output2": 1,
                    "result2": 1,
                    "shifted_input2": 1,
                    "temp10": 2,
                    "temp11": 1,
                    "temp2": 1,
                    "temp4": 1,
                    "temp8": 4,
                    "temp9": 1,
                    "temp_10": 1,
                    "temp_3": 1,
                    "temp_4": 2,
                    "temp_8": 1,
                    "temp_input1": 1,
                    "temp_uint_7": 1,
                    "temp_var_10": 1,
                    "temp_var_6": 1,
                    "tmp3": 1,
                    "u_var2": 1,
                    "value2": 1
                },
                "uVar11": {
                    "adjusted_input4": 1,
                    "bitwise_op3": 1,
                    "carry_result": 1,
                    "modified_value4": 1,
                    "output3": 1,
                    "result1": 1,
                    "result3": 1,
                    "result_2": 1,
                    "result_hi": 1,
                    "result_high": 1,
                    "result_high_shifted": 1,
                    "shifted_input4": 1,
                    "temp10": 1,
                    "temp11": 2,
                    "temp12": 1,
                    "temp3": 1,
                    "temp5": 1,
                    "temp9": 4,
                    "temp_4": 1,
                    "temp_5": 1,
                    "temp_9": 1,
                    "temp_result_high": 1,
                    "temp_uint_8": 1,
                    "temp_var_11": 1,
                    "tmp4": 1,
                    "value3": 1,
                    "var_c": 1
                },
                "uVar12": {
                    "bitwise_op4": 1,
                    "carry2": 1,
                    "carry_shifted2": 1,
                    "modified_value5": 1,
                    "overflow": 1,
                    "result2": 1,
                    "result4": 1,
                    "temp10": 4,
                    "temp11": 1,
                    "temp12": 2,
                    "temp13": 1,
                    "temp2": 1,
                    "temp4": 1,
                    "temp6": 1,
                    "temp_10": 1,
                    "temp_2": 1,
                    "temp_5": 2,
                    "temp_6": 1,
                    "temp_result_ext": 1,
                    "temp_uint_9": 1,
                    "temp_var_12": 1,
                    "temp_var_7": 1,
                    "tmp5": 1,
                    "u_var6": 1,
                    "value4": 1,
                    "var_d": 1
                },
                "uVar3": {
                    "carry": 2,
                    "carry1": 1,
                    "result1": 1,
                    "result_1": 1,
                    "result_low": 1,
                    "sum1": 1,
                    "temp1": 11,
                    "temp3": 2,
                    "temp4": 1,
                    "temp_1": 2,
                    "temp_12": 1,
                    "temp_6": 1,
                    "temp_a": 1,
                    "temp_uint_1": 1,
                    "temp_value3": 1,
                    "temp_var_1": 1,
                    "temp_var_3": 1
                },
                "uVar4": {
                    "carry2": 1,
                    "masked_input1": 1,
                    "result2": 1,
                    "result_2": 1,
                    "result_low": 2,
                    "sum1": 1,
                    "sum2": 1,
                    "temp2": 9,
                    "temp4": 3,
                    "temp5": 1,
                    "temp_13": 1,
                    "temp_2": 2,
                    "temp_7": 1,
                    "temp_b": 1,
                    "temp_uint_2": 1,
                    "temp_value4": 1,
                    "temp_var_2": 1,
                    "temp_var_4": 1
                },
                "uVar5": {
                    "carry_add": 1,
                    "result3": 1,
                    "result_3": 1,
                    "sum1": 1,
                    "sum2": 1,
                    "sum3": 1,
                    "temp": 1,
                    "temp2": 2,
                    "temp3": 9,
                    "temp5": 2,
                    "temp6": 1,
                    "temp_14": 1,
                    "temp_3": 2,
                    "temp_8": 1,
                    "temp_c": 1,
                    "temp_uint_3": 1,
                    "temp_value5": 1,
                    "temp_var_3": 1,
                    "temp_var_5": 1
                },
                "uVar6": {
                    "input2_shifted": 1,
                    "modified_value1": 1,
                    "operand2_shifted": 1,
                    "result1": 4,
                    "result_1": 2,
                    "result_high": 1,
                    "sum2": 1,
                    "temp1": 1,
                    "temp3": 1,
                    "temp4": 6,
                    "temp6": 2,
                    "temp7": 1,
                    "temp_1": 2,
                    "temp_4": 1,
                    "temp_input2": 1,
                    "temp_uint_4": 1,
                    "temp_var_4": 1,
                    "temp_var_6": 1,
                    "tmp1": 1,
                    "var_a": 1
                },
                "uVar7": {
                    "input3_shifted": 1,
                    "operand3_shifted": 1,
                    "result2": 3,
                    "result_2": 1,
                    "shifted_input1": 1,
                    "sum3": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp5": 6,
                    "temp7": 2,
                    "temp8": 1,
                    "temp_15": 1,
                    "temp_2": 1,
                    "temp_5": 1,
                    "temp_9": 1,
                    "temp_d": 1,
                    "temp_input3": 1,
                    "temp_uint_5": 1,
                    "temp_value6": 1,
                    "temp_var_5": 1,
                    "temp_var_7": 1,
                    "tmp2": 1
                },
                "uVar9": {
                    "bitwise_op1": 1,
                    "modified_value2": 1,
                    "operand2_shifted": 1,
                    "operand2_shifted_high": 1,
                    "output1": 1,
                    "result1": 1,
                    "result_3": 1,
                    "result_lo": 1,
                    "shift_amount": 1,
                    "shifted_input3": 1,
                    "temp1": 1,
                    "temp10": 1,
                    "temp3": 2,
                    "temp7": 4,
                    "temp8": 1,
                    "temp9": 2,
                    "temp_1": 1,
                    "temp_2": 1,
                    "temp_3": 1,
                    "temp_7": 1,
                    "temp_result_low": 1,
                    "temp_uint_6": 1,
                    "temp_var_9": 1,
                    "u_var1": 1,
                    "value1": 1,
                    "var_b": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08009b24",
                "FUN_08009410",
                "FUN_08003004",
                "FUN_08009d78",
                "FUN_08004940",
                "FUN_080096e8",
                "FUN_0800af78",
                "FUN_0800a1bc",
                "FUN_08001f00",
                "FUN_0800a5a0",
                "FUN_0800adf0",
                "FUN_0800a348",
                "FUN_08009990"
            ],
            "code": "\nulonglong calculate_result_080082d0(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int temp1;\n  byte carry;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  int temp6;\n  uint temp7;\n  uint temp8;\n  uint temp9;\n  uint temp10;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  \n  temp4 = input4 ^ 0x80000000;\n  temp7 = input2 << 1;\n  input4 = input4 << 1;\n  flag1 = ((input2 ^ temp4) & 0x7fffffff) == 0;\n  flag2 = flag1 && input1 == input3;\n  if (!flag1 || input1 != input3) {\n    flag2 = (temp7 | input1) == 0;\n  }\n  if (!flag2) {\n    flag2 = (input4 | input3) == 0;\n  }\n  temp6 = (int)temp7 >> 0x15;\n  if (!flag2) {\n    flag2 = temp6 == -1;\n  }\n  temp1 = (int)input4 >> 0x15;\n  if (!flag2) {\n    flag2 = temp1 == -1;\n  }\n  if (flag2) {\n    if (temp6 == -1 || temp1 == -1) {\n      temp7 = temp4;\n      temp9 = input3;\n      if (temp6 == -1) {\n        temp7 = input2;\n        temp9 = input1;\n      }\n      if (temp6 != -1 || temp1 != -1) {\n        input3 = temp9;\n        temp4 = temp7;\n      }\n      flag2 = (temp9 | temp7 << 0xc) == 0;\n      if (flag2) {\n        flag2 = (input3 | temp4 << 0xc) == 0;\n      }\n      if (flag2) {\n        flag2 = temp7 == temp4;\n      }\n      if (!flag2) {\n        temp7 = temp7 | 0x80000;\n      }\n      return CONCAT44(temp7,temp9);\n    }\n    if (((input2 ^ temp4) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((temp7 | input1) == 0) {\n        input1 = input3;\n        input2 = temp4;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != temp4) {\n      return 0;\n    }\n    if (temp7 >> 0x15 == 0) {\n      flag2 = (input1 & 0x80000000) != 0;\n      temp4 = input2 * 2 + (uint)flag2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)flag2)) {\n        temp4 = temp4 | 0x80000000;\n      }\n      return CONCAT44(temp4,input1 << 1);\n    }\n    if (temp7 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  temp7 = temp7 >> 0x15;\n  input4 = input4 >> 0x15;\n  temp9 = input4 - temp7;\n  flag2 = temp9 != 0;\n  if (input4 < temp7) {\n    temp9 = -temp9;\n  }\n  temp8 = input1;\n  temp5 = input2;\n  if (flag2 && temp7 <= input4) {\n    temp7 = temp7 + temp9;\n    temp8 = input3;\n    temp5 = temp4;\n    input3 = input1;\n    temp4 = input2;\n  }\n  if (0x36 < temp9) {\n    return CONCAT44(temp5,temp8);\n  }\n  temp2 = temp5 & 0xfffff | 0x100000;\n  if ((temp5 & 0x80000000) != 0) {\n    flag2 = temp8 != 0;\n    temp8 = -temp8;\n    temp2 = -temp2 - (uint)flag2;\n  }\n  temp5 = temp4 & 0xfffff | 0x100000;\n  if ((temp4 & 0x80000000) != 0) {\n    flag2 = input3 != 0;\n    input3 = -input3;\n    temp5 = -temp5 - (uint)flag2;\n  }\n  if (temp7 == temp9) {\n    temp5 = temp5 ^ 0x100000;\n    if (temp7 == 0) {\n      temp2 = temp2 ^ 0x100000;\n      temp7 = 1;\n    }\n    else {\n      temp9 = temp9 - 1;\n    }\n  }\n  temp4 = -temp9 + 0x20;\n  if ((int)temp9 < 0x21) {\n    temp10 = input3 << (temp4 & 0xff);\n    input3 = input3 >> (temp9 & 0xff);\n    temp1 = temp8 + input3;\n    temp3 = temp5 << (temp4 & 0xff);\n    temp4 = temp1 + temp3;\n    temp2 = temp2 + CARRY4(temp8,input3) + ((int)temp5 >> (temp9 & 0xff)) +\n            (uint)CARRY4(temp1,temp3);\n  }\n  else {\n    temp10 = temp5 << (-temp9 + 0x40 & 0xff);\n    if (input3 != 0) {\n      temp10 = temp10 | 2;\n    }\n    temp5 = (int)temp5 >> (temp9 - 0x20 & 0xff);\n    temp4 = temp8 + temp5;\n    temp2 = temp2 + ((int)temp5 >> 0x1f) + (uint)CARRY4(temp8,temp5);\n  }\n  input2 = temp2 & 0x80000000;\n  temp9 = temp2;\n  if ((int)temp2 < 0) {\n    flag2 = temp10 == 0;\n    temp10 = -temp10;\n    temp9 = -temp4;\n    temp4 = -(uint)!flag2 - temp4;\n    temp9 = -(uint)(flag2 <= temp9) - temp2;\n  }\n  if (0xfffff < temp9) {\n    temp8 = temp7 - 1;\n    if (0x1fffff < temp9) {\n      temp8 = temp9 & 1;\n      temp9 = temp9 >> 1;\n      carry = (byte)temp4;\n      temp4 = (uint)(temp8 != 0) << 0x1f | temp4 >> 1;\n      temp10 = (uint)(carry & 1) << 0x1f | temp10 >> 1;\n      temp8 = temp7;\n      if (0xffbfffff < temp7 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    flag2 = 0x7fffffff < temp10;\n    if (temp10 == 0x80000000) {\n      flag2 = (temp4 & 1) != 0;\n    }\n    return CONCAT44(temp9 + temp8 * 0x100000 + (uint)CARRY4(temp4,(uint)flag2) | input2,\n                    temp4 + flag2);\n  }\n  flag1 = (temp10 & 0x80000000) != 0;\n  temp10 = temp10 << 1;\n  temp8 = temp4 * 2;\n  flag2 = CARRY4(temp4,temp4);\n  temp4 = temp4 * 2 + (uint)flag1;\n  temp9 = temp9 * 2 + (uint)(flag2 || CARRY4(temp8,(uint)flag1));\n  temp8 = temp7 - 2;\n  if (temp7 - 1 != 0 && 0xfffff < temp9) goto LAB_080083e0;\n  temp5 = temp4;\n  temp7 = temp9;\n  if (temp9 == 0) {\n    temp5 = 0;\n    temp7 = temp4;\n  }\n  temp6 = LZCOUNT(temp7);\n  if (temp9 == 0) {\n    temp6 = temp6 + 0x20;\n  }\n  temp9 = temp6 - 0xb;\n  flag3 = SBORROW4(temp9,0x20);\n  temp4 = temp6 - 0x2b;\n  flag2 = (int)temp4 < 0;\n  flag1 = temp4 == 0;\n  if ((int)temp9 < 0x20) {\n    flag3 = SCARRY4(temp4,0xc);\n    temp6 = temp6 + -0x1f;\n    flag2 = temp6 < 0;\n    flag1 = temp6 == 0;\n    temp4 = temp9;\n    if (!flag1 && flag2 == flag3) {\n      temp5 = temp7 << (temp9 & 0xff);\n      temp7 = temp7 >> (0xcU - temp6 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (flag1 || flag2 != flag3) {\n    temp10 = 0x20 - temp4;\n  }\n  temp7 = temp7 << (temp4 & 0xff);\n  if (flag1 || flag2 != flag3) {\n    temp7 = temp7 | temp5 >> (temp10 & 0xff);\n  }\n  if (flag1 || flag2 != flag3) {\n    temp5 = temp5 << (temp4 & 0xff);\n  }\nLAB_08008458:\n  if ((int)temp9 <= (int)temp8) {\n    return CONCAT44(temp7 + (temp8 - temp9) * 0x100000 | input2,temp5);\n  }\n  temp4 = ~(temp8 - temp9);\n  if ((int)temp4 < 0x1f) {\n    temp6 = temp4 - 0x13;\n    if (temp6 != 0 && temp6 < 0 == SCARRY4(temp4 - 0x1f,0xc)) {\n      return CONCAT44(temp2,temp5 >> (0x20 - (0xcU - temp6) & 0xff) | temp7 << (0xcU - temp6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp4 = temp4 + 1;\n    return CONCAT44(input2 | temp7 >> (temp4 & 0xff),\n                    temp5 >> (temp4 & 0xff) | temp7 << (0x20 - temp4 & 0xff));\n  }\n  return CONCAT44(temp2,temp7 >> (temp4 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "current_name": "calculate_result_080082d0",
            "entrypoint": "0x080082d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080082d0": "calculate_result_080082d0",
                "bVar13": "flag1",
                "bVar14": "flag2",
                "bVar15": "flag3",
                "bVar2": "carry",
                "iVar1": "temp1",
                "iVar8": "temp6",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar10": "temp8",
                "uVar11": "temp9",
                "uVar12": "temp10",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "uVar6": "temp4",
                "uVar7": "temp5",
                "uVar9": "temp7"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080082d4": {
            "additional_data": {
                "FUN_080082d4": {
                    "calculate_bitwise_operations": 1,
                    "calculate_extended_sum": 1,
                    "calculate_floating_point": 1,
                    "calculate_product": 2,
                    "calculate_result": 2,
                    "calculate_ulongs_from_uints": 1,
                    "calculate_unsigned_arithmetic_result": 1,
                    "compute_sum_and_shift": 1,
                    "perform_arithmetic_operation": 2,
                    "perform_unsigned_integer_operation": 1,
                    "reverse_addition": 1,
                    "reverse_binary_conversion": 1,
                    "reverse_bits": 2,
                    "reverse_bits_and_swap": 1,
                    "simplify_arithmetic": 1
                },
                "LZCOUNT": {
                    "leading_zeros_count": 1
                },
                "bVar13": {
                    "are_inputs_equal": 1,
                    "carry1": 1,
                    "carry2": 1,
                    "comparison1": 1,
                    "condition1": 3,
                    "condition_1": 1,
                    "flag1": 3,
                    "is_condition1": 1,
                    "is_equal": 5,
                    "is_equal_unsigned": 1,
                    "is_input2_and4_equal": 1,
                    "is_input2_eq_input4": 1,
                    "is_input2_equal_to_input4": 1,
                    "is_same_sign": 1,
                    "is_shift_last": 1,
                    "is_zero": 1,
                    "temp13": 1,
                    "temp_bool1": 1,
                    "temp_var11": 1,
                    "temp_var13": 1
                },
                "bVar14": {
                    "are_shifted_inputs_zero": 1,
                    "carry2": 1,
                    "comparison2": 1,
                    "condition": 1,
                    "condition2": 3,
                    "condition_2": 1,
                    "flag": 1,
                    "flag1": 1,
                    "flag2": 3,
                    "is_condition2": 1,
                    "is_condition_met": 2,
                    "is_difference_positive": 1,
                    "is_equal": 1,
                    "is_equal_signed": 1,
                    "is_input2_equal_to_input4_or_either_input1_or_input3_zero": 1,
                    "is_same_sign_and_equal": 1,
                    "is_zero": 3,
                    "temp14": 1,
                    "temp_bool2": 1,
                    "temp_var12": 1,
                    "temp_var14": 1
                },
                "bVar15": {
                    "borrow_flag": 1,
                    "carry3": 1,
                    "comparison3": 1,
                    "condition3": 2,
                    "condition_3": 1,
                    "flag2": 1,
                    "flag3": 3,
                    "is_carry": 4,
                    "is_condition3": 1,
                    "is_negative": 2,
                    "is_negative_difference": 1,
                    "is_shift_negative": 1,
                    "is_shifted_bits1_less_than32": 1,
                    "is_subtract": 1,
                    "temp15": 1,
                    "temp_bool3": 1,
                    "temp_var13": 1,
                    "temp_var15": 1,
                    "temp_var_10": 1
                },
                "bVar2": {
                    "bit": 1,
                    "byte_bit": 1,
                    "carry": 11,
                    "carry1": 2,
                    "carry_flag": 1,
                    "temp2": 2,
                    "temp_var2": 1,
                    "temp_var_9": 1
                },
                "iVar1": {
                    "input4_shifted_signed": 1,
                    "shift1": 7,
                    "shift_amount1": 1,
                    "shift_amount_b": 1,
                    "shift_count1": 1,
                    "shift_right1": 2,
                    "shift_right_amount2": 1,
                    "shift_right_count1": 1,
                    "shifted_bits4": 1,
                    "shifted_input2": 1,
                    "shifted_input4_divided_by21": 1,
                    "shifted_input_d_signed": 1,
                    "shifted_num2": 1,
                    "temp1": 2,
                    "temp_11": 1,
                    "temp_var1": 1
                },
                "iVar13": {
                    "temp_var5": 1
                },
                "iVar14": {
                    "temp_var4": 1
                },
                "iVar15": {
                    "temp_var3": 1
                },
                "iVar6": {
                    "input2_shifted_signed": 1,
                    "shift1": 1,
                    "shift2": 7,
                    "shift_amount2": 1,
                    "shift_amount_d": 1,
                    "shift_count2": 1,
                    "shift_right2": 2,
                    "shift_right_amount1": 1,
                    "shift_right_count2": 1,
                    "shifted_bits1": 1,
                    "shifted_input1_msb": 1,
                    "shifted_input2_divided_by21": 1,
                    "shifted_input4": 1,
                    "shifted_input_b_signed": 1,
                    "shifted_num4": 1,
                    "temp6": 2,
                    "temp_12": 1,
                    "temp_2": 1,
                    "temp_var4": 1,
                    "temp_var6": 1,
                    "temp_var_3": 1
                },
                "param_1": {
                    "a": 1,
                    "first_param": 1,
                    "input1": 16,
                    "input_1": 3,
                    "input_a": 2,
                    "num1": 3,
                    "number1": 1,
                    "operand1": 1,
                    "x1": 1
                },
                "param_2": {
                    "b": 1,
                    "exp1": 1,
                    "input2": 16,
                    "input_2": 3,
                    "input_b": 2,
                    "num2": 2,
                    "number2": 1,
                    "operand2": 1,
                    "second_param": 1,
                    "x2": 1
                },
                "param_3": {
                    "c": 1,
                    "input3": 16,
                    "input_3": 3,
                    "input_c": 2,
                    "num2": 1,
                    "num3": 2,
                    "number3": 1,
                    "operand3": 1,
                    "third_param": 1,
                    "y1": 1
                },
                "param_4": {
                    "d": 1,
                    "exp2": 1,
                    "fourth_param": 1,
                    "input4": 16,
                    "input_4": 3,
                    "input_d": 2,
                    "num4": 2,
                    "number4": 1,
                    "operand4": 1,
                    "y2": 1
                },
                "uVar10": {
                    "abs_difference": 1,
                    "diff": 1,
                    "difference": 6,
                    "new_result3": 1,
                    "shift_diff": 2,
                    "shifted_bits2": 1,
                    "shifted_carry2": 1,
                    "shifted_number4": 1,
                    "shifted_result": 1,
                    "temp10": 2,
                    "temp5": 2,
                    "temp7": 2,
                    "temp_6": 1,
                    "temp_7": 1,
                    "temp_var10": 1,
                    "temp_var8": 1,
                    "temp_var_4": 1,
                    "tmp1": 1,
                    "u_var10": 1,
                    "var5": 1
                },
                "uVar11": {
                    "carry_bit": 1,
                    "carry_result": 1,
                    "new_result1": 1,
                    "result1": 1,
                    "shifted_number5": 1,
                    "shifted_result_b": 1,
                    "sum1_copy": 1,
                    "temp1": 3,
                    "temp11": 2,
                    "temp2": 1,
                    "temp5": 1,
                    "temp6": 2,
                    "temp8": 2,
                    "temp_7": 1,
                    "temp_8": 1,
                    "temp_result1": 1,
                    "temp_var1": 2,
                    "temp_var11": 1,
                    "temp_var9": 1,
                    "temp_var_5": 1,
                    "tmp2": 1,
                    "var6": 1
                },
                "uVar12": {
                    "carry_result": 1,
                    "new_result2": 1,
                    "result": 1,
                    "result2": 2,
                    "result_low": 1,
                    "shifted_number6": 1,
                    "shifted_result_a": 1,
                    "sum2_copy": 1,
                    "temp12": 2,
                    "temp2": 3,
                    "temp6": 1,
                    "temp7": 2,
                    "temp9": 2,
                    "temp_8": 1,
                    "temp_9": 1,
                    "temp_result2": 1,
                    "temp_var10": 1,
                    "temp_var12": 1,
                    "temp_var2": 2,
                    "temp_var_6": 1,
                    "tmp3": 1,
                    "var7": 1
                },
                "uVar13": {
                    "carry": 1,
                    "temp_10": 1
                },
                "uVar14": {
                    "temp3": 1
                },
                "uVar15": {
                    "temp4": 1
                },
                "uVar16": {
                    "temp5": 1
                },
                "uVar3": {
                    "carry_mask": 1,
                    "product_1": 1,
                    "result1": 3,
                    "shifted_input1": 1,
                    "shifted_sum1": 1,
                    "sum1": 3,
                    "temp": 1,
                    "temp1": 9,
                    "temp3": 2,
                    "temp_1": 1,
                    "temp_a": 1,
                    "temp_var1": 1,
                    "temp_var3": 1,
                    "temp_var_7": 1,
                    "tmp1": 1,
                    "var3": 1
                },
                "uVar4": {
                    "carry_mask_inverse": 1,
                    "product_2": 1,
                    "result2": 1,
                    "shifted_b": 1,
                    "shifted_carry": 1,
                    "shifted_input2": 1,
                    "shifted_input4_shifted_by12": 1,
                    "shifted_result1": 1,
                    "shifted_sum1": 1,
                    "shifted_sum2": 1,
                    "sum2": 1,
                    "temp2": 9,
                    "temp4": 2,
                    "temp_2": 1,
                    "temp_b": 1,
                    "temp_var2": 1,
                    "temp_var4": 1,
                    "temp_var_8": 1,
                    "tmp2": 1,
                    "var4": 1
                },
                "uVar5": {
                    "input2_modified": 1,
                    "new_input2": 1,
                    "num2_copy": 1,
                    "param2_copy": 1,
                    "result2": 1,
                    "result_b": 1,
                    "shifted_bit_b": 1,
                    "shifted_d": 1,
                    "shifted_input3": 2,
                    "shifted_sum3": 1,
                    "signed_input3": 1,
                    "sum2": 1,
                    "temp": 1,
                    "temp3": 6,
                    "temp5": 2,
                    "temp_1": 1,
                    "temp_3": 1,
                    "temp_var3": 1,
                    "temp_var5": 1,
                    "temp_var_2": 1,
                    "u_var5": 1,
                    "var1": 1
                },
                "uVar7": {
                    "input2_shifted": 2,
                    "new_shifted_input4": 1,
                    "result2": 1,
                    "shifted2": 1,
                    "shifted_input2": 6,
                    "shifted_input2_msb": 1,
                    "shifted_input_2": 1,
                    "shifted_input_b": 1,
                    "shifted_num2": 2,
                    "shifted_number1": 1,
                    "shifted_result_band_bit": 1,
                    "temp3": 1,
                    "temp4": 2,
                    "temp7": 2,
                    "temp_3": 1,
                    "temp_4": 1,
                    "temp_var5": 1,
                    "temp_var7": 1,
                    "u_shift": 1,
                    "var2": 1
                },
                "uVar8": {
                    "input1_modified": 1,
                    "input4_shifted": 1,
                    "new_input1": 1,
                    "result_a": 1,
                    "result_high": 1,
                    "shifted1": 1,
                    "shifted_b_2": 1,
                    "shifted_carry1": 1,
                    "shifted_input1": 1,
                    "shifted_input3_msb": 1,
                    "shifted_input4": 2,
                    "shifted_num4": 1,
                    "shifted_number2": 1,
                    "shifted_result_aand_bit": 1,
                    "signed_input1": 1,
                    "sum2": 1,
                    "temp4": 2,
                    "temp5": 2,
                    "temp8": 2,
                    "temp_4": 1,
                    "temp_5": 1,
                    "temp_var6": 1,
                    "temp_var8": 1,
                    "temp_var_1": 1,
                    "var3": 1
                },
                "uVar9": {
                    "carry_shift": 1,
                    "input4_shifted": 1,
                    "new_shifted_input2": 1,
                    "param4_copy": 1,
                    "shifted_d_2": 1,
                    "shifted_input4": 5,
                    "shifted_input4_msb": 1,
                    "shifted_input_4": 1,
                    "shifted_input_d": 1,
                    "shifted_number3": 1,
                    "shifted_result2": 1,
                    "shifted_result_a": 1,
                    "shifted_sum2": 1,
                    "temp4": 2,
                    "temp6": 2,
                    "temp9": 2,
                    "temp_5": 1,
                    "temp_6": 1,
                    "temp_var7": 1,
                    "temp_var9": 1,
                    "u_var9": 1,
                    "var4": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08009b24",
                "FUN_08009d78",
                "FUN_08009798",
                "FUN_0800af78",
                "FUN_0800a1bc",
                "FUN_08001f00",
                "FUN_0800b2e8",
                "FUN_0800a5a0",
                "FUN_0800adf0",
                "FUN_0800a348",
                "FUN_08009990",
                "FUN_08009654",
                "FUN_08009318",
                "FUN_080094c0"
            ],
            "code": "\nulonglong calculate_unsigned_arithmetic_result_080082d4(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int shift1;\n  byte carry;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  int shift2;\n  uint shifted_input2;\n  uint shifted_input4;\n  uint shifted_input4;\n  uint difference;\n  uint temp1;\n  uint temp2;\n  bool is_equal;\n  bool is_zero;\n  bool is_carry;\n  \n  shifted_input2 = input2 << 1;\n  shifted_input4 = input4 << 1;\n  is_equal = ((input2 ^ input4) & 0x7fffffff) == 0;\n  is_zero = is_equal && input1 == input3;\n  if (!is_equal || input1 != input3) {\n    is_zero = (shifted_input2 | input1) == 0;\n  }\n  if (!is_zero) {\n    is_zero = (shifted_input4 | input3) == 0;\n  }\n  shift2 = (int)shifted_input2 >> 0x15;\n  if (!is_zero) {\n    is_zero = shift2 == -1;\n  }\n  shift1 = (int)shifted_input4 >> 0x15;\n  if (!is_zero) {\n    is_zero = shift1 == -1;\n  }\n  if (is_zero) {\n    if (shift2 == -1 || shift1 == -1) {\n      shifted_input4 = input4;\n      shifted_input2 = input3;\n      if (shift2 == -1) {\n        shifted_input4 = input2;\n        shifted_input2 = input1;\n      }\n      if (shift2 != -1 || shift1 != -1) {\n        input3 = shifted_input2;\n        input4 = shifted_input4;\n      }\n      is_zero = (shifted_input2 | shifted_input4 << 0xc) == 0;\n      if (is_zero) {\n        is_zero = (input3 | input4 << 0xc) == 0;\n      }\n      if (is_zero) {\n        is_zero = shifted_input4 == input4;\n      }\n      if (!is_zero) {\n        shifted_input4 = shifted_input4 | 0x80000;\n      }\n      return CONCAT44(shifted_input4,shifted_input2);\n    }\n    if (((input2 ^ input4) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((shifted_input2 | input1) == 0) {\n        input1 = input3;\n        input2 = input4;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != input4) {\n      return 0;\n    }\n    if (shifted_input2 >> 0x15 == 0) {\n      is_zero = (input1 & 0x80000000) != 0;\n      shifted_input4 = input2 * 2 + (uint)is_zero;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)is_zero)) {\n        shifted_input4 = shifted_input4 | 0x80000000;\n      }\n      return CONCAT44(shifted_input4,input1 << 1);\n    }\n    if (shifted_input2 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  shifted_input2 = shifted_input2 >> 0x15;\n  shifted_input4 = shifted_input4 >> 0x15;\n  difference = shifted_input4 - shifted_input2;\n  is_zero = difference != 0;\n  if (shifted_input4 < shifted_input2) {\n    difference = -difference;\n  }\n  shifted_input4 = input1;\n  temp3 = input2;\n  if (is_zero && shifted_input2 <= shifted_input4) {\n    shifted_input2 = shifted_input2 + difference;\n    shifted_input4 = input3;\n    temp3 = input4;\n    input3 = input1;\n    input4 = input2;\n  }\n  if (0x36 < difference) {\n    return CONCAT44(temp3,shifted_input4);\n  }\n  shifted_input4 = temp3 & 0xfffff | 0x100000;\n  if ((temp3 & 0x80000000) != 0) {\n    is_zero = shifted_input4 != 0;\n    shifted_input4 = -shifted_input4;\n    shifted_input4 = -shifted_input4 - (uint)is_zero;\n  }\n  temp3 = input4 & 0xfffff | 0x100000;\n  if ((input4 & 0x80000000) != 0) {\n    is_zero = input3 != 0;\n    input3 = -input3;\n    temp3 = -temp3 - (uint)is_zero;\n  }\n  if (shifted_input2 == difference) {\n    temp3 = temp3 ^ 0x100000;\n    if (shifted_input2 == 0) {\n      shifted_input4 = shifted_input4 ^ 0x100000;\n      shifted_input2 = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  temp2 = -difference + 0x20;\n  if ((int)difference < 0x21) {\n    temp1 = input3 << (temp2 & 0xff);\n    input3 = input3 >> (difference & 0xff);\n    temp1 = shifted_input4 + input3;\n    temp2 = temp3 << (temp2 & 0xff);\n    temp2 = temp1 + temp2;\n    shifted_input4 = shifted_input4 + CARRY4(shifted_input4,input3) + ((int)temp3 >> (difference & 0xff)) +\n            (uint)CARRY4(temp1,temp2);\n  }\n  else {\n    temp1 = temp3 << (-difference + 0x40 & 0xff);\n    if (input3 != 0) {\n      temp1 = temp1 | 2;\n    }\n    temp3 = (int)temp3 >> (difference - 0x20 & 0xff);\n    temp2 = shifted_input4 + temp3;\n    shifted_input4 = shifted_input4 + ((int)temp3 >> 0x1f) + (uint)CARRY4(shifted_input4,temp3);\n  }\n  input2 = shifted_input4 & 0x80000000;\n  difference = shifted_input4;\n  if ((int)shifted_input4 < 0) {\n    is_zero = temp1 == 0;\n    temp1 = -temp1;\n    difference = -temp2;\n    temp2 = -(uint)!is_zero - temp2;\n    difference = -(uint)(is_zero <= difference) - shifted_input4;\n  }\n  if (0xfffff < difference) {\n    shifted_input4 = shifted_input2 - 1;\n    if (0x1fffff < difference) {\n      shifted_input4 = difference & 1;\n      difference = difference >> 1;\n      carry = (byte)temp2;\n      temp2 = (uint)(shifted_input4 != 0) << 0x1f | temp2 >> 1;\n      temp1 = (uint)(carry & 1) << 0x1f | temp1 >> 1;\n      shifted_input4 = shifted_input2;\n      if (0xffbfffff < shifted_input2 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    is_zero = 0x7fffffff < temp1;\n    if (temp1 == 0x80000000) {\n      is_zero = (temp2 & 1) != 0;\n    }\n    return CONCAT44(difference + shifted_input4 * 0x100000 + (uint)CARRY4(temp2,(uint)is_zero) | input2,\n                    temp2 + is_zero);\n  }\n  is_equal = (temp1 & 0x80000000) != 0;\n  temp1 = temp1 << 1;\n  shifted_input4 = temp2 * 2;\n  is_zero = CARRY4(temp2,temp2);\n  temp2 = temp2 * 2 + (uint)is_equal;\n  difference = difference * 2 + (uint)(is_zero || CARRY4(shifted_input4,(uint)is_equal));\n  shifted_input4 = shifted_input2 - 2;\n  if (shifted_input2 - 1 != 0 && 0xfffff < difference) goto LAB_080083e0;\n  temp3 = temp2;\n  shifted_input2 = difference;\n  if (difference == 0) {\n    temp3 = 0;\n    shifted_input2 = temp2;\n  }\n  shift2 = leading_zeros_count(shifted_input2);\n  if (difference == 0) {\n    shift2 = shift2 + 0x20;\n  }\n  temp2 = shift2 - 0xb;\n  is_carry = SBORROW4(temp2,0x20);\n  difference = shift2 - 0x2b;\n  is_zero = (int)difference < 0;\n  is_equal = difference == 0;\n  if ((int)temp2 < 0x20) {\n    is_carry = SCARRY4(difference,0xc);\n    shift2 = shift2 + -0x1f;\n    is_zero = shift2 < 0;\n    is_equal = shift2 == 0;\n    difference = temp2;\n    if (!is_equal && is_zero == is_carry) {\n      temp3 = shifted_input2 << (temp2 & 0xff);\n      shifted_input2 = shifted_input2 >> (0xcU - shift2 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (is_equal || is_zero != is_carry) {\n    temp1 = 0x20 - difference;\n  }\n  shifted_input2 = shifted_input2 << (difference & 0xff);\n  if (is_equal || is_zero != is_carry) {\n    shifted_input2 = shifted_input2 | temp3 >> (temp1 & 0xff);\n  }\n  if (is_equal || is_zero != is_carry) {\n    temp3 = temp3 << (difference & 0xff);\n  }\nLAB_08008458:\n  if ((int)temp2 <= (int)shifted_input4) {\n    return CONCAT44(shifted_input2 + (shifted_input4 - temp2) * 0x100000 | input2,temp3);\n  }\n  difference = ~(shifted_input4 - temp2);\n  if ((int)difference < 0x1f) {\n    shift2 = difference - 0x13;\n    if (shift2 != 0 && shift2 < 0 == SCARRY4(difference - 0x1f,0xc)) {\n      return CONCAT44(shifted_input4,temp3 >> (0x20 - (0xcU - shift2) & 0xff) | shifted_input2 << (0xcU - shift2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    difference = difference + 1;\n    return CONCAT44(input2 | shifted_input2 >> (difference & 0xff),\n                    temp3 >> (difference & 0xff) | shifted_input2 << (0x20 - difference & 0xff));\n  }\n  return CONCAT44(shifted_input4,shifted_input2 >> (difference - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "current_name": "calculate_unsigned_arithmetic_result_080082d4",
            "entrypoint": "0x080082d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080082d4": "calculate_unsigned_arithmetic_result_080082d4",
                "LZCOUNT": "leading_zeros_count",
                "bVar13": "is_equal",
                "bVar14": "is_zero",
                "bVar15": "is_carry",
                "bVar2": "carry",
                "iVar1": "shift1",
                "iVar6": "shift2",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar10": "difference",
                "uVar11": "temp1",
                "uVar12": "temp2",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "uVar7": "shifted_input2",
                "uVar8": "shifted_input4",
                "uVar9": "shifted_input4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800854c": {
            "additional_data": {
                "0": {
                    "zero": 1
                },
                "CONCAT44": {
                    "combine_parts": 1,
                    "combine_values": 1,
                    "concatenate": 1,
                    "concatenate64_bits": 1
                },
                "FUN_0800854c": {
                    "bit_shift_and_concat": 2,
                    "bit_shift_and_concatenate": 1,
                    "bit_shift_concatenation": 1,
                    "bit_shift_with_conditions": 1,
                    "bitwise_shift_concatenation": 1,
                    "reverse_bit_pattern": 1,
                    "reverse_bits": 3,
                    "reverse_integer_bits": 1,
                    "reverse_shift": 2,
                    "reversing_operation": 1,
                    "shift_and_combine": 3,
                    "shift_and_concat": 7,
                    "shift_and_concat_bits": 2,
                    "shift_and_concatenate": 5
                },
                "LAB_08008458": {
                    "bit_shift": 1,
                    "bit_shift_end": 1,
                    "calculate_result": 1,
                    "combine_bits": 1,
                    "perform_shift": 2,
                    "shift_and_concatenate_loop": 1,
                    "shift_and_return": 1,
                    "shift_operation": 1,
                    "shift_result": 1
                },
                "bVar5": {
                    "is_less_than_zero": 1,
                    "is_negative": 18,
                    "is_negative_count": 1,
                    "is_negative_offset": 1,
                    "is_negative_or_zero": 1,
                    "is_negative_shift": 6,
                    "is_num_bits_negative": 1,
                    "is_shift_negative": 1,
                    "negative_shift": 1
                },
                "bVar6": {
                    "is_equal": 1,
                    "is_num_bits_zero": 1,
                    "is_shift_zero": 1,
                    "is_zero": 18,
                    "is_zero_count": 1,
                    "is_zero_offset": 1,
                    "is_zero_shift": 7,
                    "zero_shift": 1
                },
                "bVar7": {
                    "carry_flag": 1,
                    "has_carry": 1,
                    "is_borrow": 8,
                    "is_borrow_overflow": 1,
                    "is_borrowed": 1,
                    "is_boundary": 1,
                    "is_carry": 7,
                    "is_offset_overflow": 1,
                    "is_over_shift": 1,
                    "is_overflow": 5,
                    "is_overflowed": 1,
                    "is_shift_amount_negative": 1,
                    "overflow": 1,
                    "overflow_flag": 1
                },
                "iVar3": {
                    "bit_count": 5,
                    "count": 4,
                    "leading_zeroes": 2,
                    "leading_zeros": 10,
                    "leading_zeros_count": 1,
                    "lz_count": 5,
                    "lzcount_result": 3,
                    "shifted_value3": 1
                },
                "in_r12": {
                    "bit_difference": 1,
                    "in_r12": 1,
                    "mask": 3,
                    "num_bits_max": 1,
                    "remaining_bits": 14,
                    "remaining_shift": 2,
                    "shift_amount": 1,
                    "shift_amount_minus": 1,
                    "shift_mask": 1,
                    "shift_right": 1,
                    "shift_right_amount": 1,
                    "shifted_value": 1,
                    "shifted_value5": 1,
                    "temp": 2
                },
                "param_01": {
                    "input": 1
                },
                "param_1": {
                    "input": 24,
                    "input_number": 1,
                    "input_value": 3,
                    "num": 1,
                    "param1": 1,
                    "value": 1
                },
                "uVar1": {
                    "bit_count": 1,
                    "combined": 1,
                    "combined_value": 1,
                    "concat_result": 1,
                    "concatenated_bits": 1,
                    "concatenated_upper": 1,
                    "concatenated_value": 2,
                    "high_bits": 1,
                    "lower_part": 1,
                    "result": 5,
                    "result1": 1,
                    "result_high": 2,
                    "result_upper": 1,
                    "shifted_num": 1,
                    "shifted_number": 1,
                    "shifted_result": 1,
                    "shifted_value": 1,
                    "shifted_value1": 1,
                    "upper_bits": 2,
                    "upper_part": 3,
                    "upper_result": 1,
                    "upper_value": 1
                },
                "uVar2": {
                    "bit_count": 1,
                    "lower_part": 2,
                    "num_bits": 1,
                    "offset": 1,
                    "result2": 1,
                    "shift_amount": 20,
                    "shift_amount1": 1,
                    "shift_count": 1,
                    "shifted_value2": 1,
                    "temp": 1
                },
                "uVar4": {
                    "addition1": 1,
                    "adjusted_offset": 1,
                    "adjusted_shift": 2,
                    "adjusted_shift_amount": 1,
                    "computed_length": 1,
                    "constant": 2,
                    "final_shift": 1,
                    "masked_count": 1,
                    "new_bit_count": 1,
                    "offset": 3,
                    "shift_amount": 4,
                    "shift_amount_plus": 1,
                    "shift_constant": 1,
                    "shift_difference": 1,
                    "shift_limit": 1,
                    "shift_threshold": 2,
                    "shift_value": 1,
                    "shifted_amount": 3,
                    "shifted_value4": 1,
                    "total_bits": 1,
                    "total_shift": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001994"
            ],
            "code": "\nulonglong bit_shift_and_concat_0800854c(uint input)\n\n{\n  uint result;\n  uint shift_amount;\n  int leading_zeros;\n  uint shift_amount;\n  uint remaining_bits;\n  bool is_negative;\n  bool is_zero;\n  bool is_borrow;\n  \n  if (input == 0) {\n    return 0;\n  }\n  result = 0;\n  leading_zeros = LZCOUNT(input);\n  shift_amount = leading_zeros + 0x15;\n  is_borrow = SBORROW4(shift_amount,0x20);\n  shift_amount = leading_zeros - 0xb;\n  is_negative = (int)shift_amount < 0;\n  is_zero = shift_amount == 0;\n  if (shift_amount < 0x20) {\n    is_borrow = SCARRY4(shift_amount,0xc);\n    is_negative = false;\n    is_zero = leading_zeros + 1 == 0;\n    shift_amount = shift_amount;\n    if (!is_zero && is_borrow == false) {\n      result = input << shift_amount;\n      input = input >> (0xcU - (leading_zeros + 1) & 0xff);\n      goto perform_shift;\n    }\n  }\n  if (is_zero || is_negative != is_borrow) {\n    remaining_bits = 0x20 - shift_amount;\n  }\n  input = input << (shift_amount & 0xff);\n  if (is_zero || is_negative != is_borrow) {\n    input = input | 0U >> (remaining_bits & 0xff);\n  }\n  if (is_zero || is_negative != is_borrow) {\n    result = 0 << (shift_amount & 0xff);\n  }\nperform_shift:\n  if (shift_amount < 0x433) {\n    return combine_values(input + (0x432 - shift_amount) * 0x100000,result);\n  }\n  shift_amount = ~(0x432 - shift_amount);\n  if (0x1e < (int)shift_amount) {\n    return (ulonglong)(input >> (shift_amount - 0x1f & 0xff));\n  }\n  leading_zeros = shift_amount - 0x13;\n  if (leading_zeros == 0 || leading_zeros < 0 != SCARRY4(shift_amount - 0x1f,0xc)) {\n    shift_amount = shift_amount + 1;\n    return combine_values(input >> (shift_amount & 0xff),\n                    result >> (shift_amount & 0xff) | input << (0x20 - shift_amount & 0xff));\n  }\n  return (ulonglong)(result >> (0x20 - (0xcU - leading_zeros) & 0xff) | input << (0xcU - leading_zeros & 0xff));\n}\n\n",
            "current_name": "bit_shift_and_concat_0800854c",
            "entrypoint": "0x0800854c",
            "imported": false,
            "improved": true,
            "renaming": {
                "CONCAT44": "combine_values",
                "FUN_0800854c": "bit_shift_and_concat_0800854c",
                "LAB_08008458": "perform_shift",
                "bVar5": "is_negative",
                "bVar6": "is_zero",
                "bVar7": "is_borrow",
                "iVar3": "leading_zeros",
                "in_r12": "remaining_bits",
                "param_1": "input",
                "uVar1": "result",
                "uVar2": "shift_amount",
                "uVar4": "shift_amount"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800856c": {
            "additional_data": {
                "0x13": {
                    "constant6": 1,
                    "min_shift_distance": 1
                },
                "0x15": {
                    "constant1": 1,
                    "shift_offset": 1
                },
                "0x1e": {
                    "constant5": 1,
                    "max_shift_distance": 1
                },
                "0x20": {
                    "bit_shift_constant": 1,
                    "total_bits": 1
                },
                "0x432": {
                    "constant4": 1,
                    "max_calculated_bits": 1
                },
                "0x433": {
                    "constant3": 1,
                    "max_total_bits": 1
                },
                "0x80000000": {
                    "sign_bit_mask": 1,
                    "sign_mask": 1
                },
                "0xb": {
                    "constant2": 1
                },
                "0xc": {
                    "bit_shift_constant2": 1,
                    "max_shift_bits": 1
                },
                "0xcU": {
                    "constant7": 1
                },
                "0xff": {
                    "bit_mask1": 1
                },
                "0xffffffffffffffff": {
                    "mask": 1
                },
                "CONCAT44": {
                    "concat": 1,
                    "concatenate_u_long": 1,
                    "result": 1
                },
                "FUN_0800856c": {
                    "bit_shift_and_concat": 1,
                    "bit_shift_function": 1,
                    "bitwise_shift": 4,
                    "bitwise_shift_and_concat": 2,
                    "bitwise_shift_and_merge": 1,
                    "bitwise_shift_left_right": 1,
                    "compressed_bit_reverse": 1,
                    "reverse_and_shift_bits": 2,
                    "reverse_bit_pattern": 1,
                    "reverse_bits": 8,
                    "reverse_unsigned_long": 1,
                    "shift_and_combine": 2,
                    "shift_and_concat": 3,
                    "shift_and_concatenate": 2,
                    "shift_and_merge": 1
                },
                "LAB_08008458": {
                    "label_08008458": 1,
                    "shift_right": 1
                },
                "LZCOUNT": {
                    "count_leading_zeros": 2,
                    "leading_zero_count": 1
                },
                "SBORROW4": {
                    "signed_borrow": 2
                },
                "SCARRY4": {
                    "signed_carry": 3,
                    "signed_carry4": 1
                },
                "bVar7": {
                    "check1": 2,
                    "is_count_negative": 1,
                    "is_negative": 17,
                    "is_negative1": 1,
                    "is_negative_shift": 2,
                    "is_shift_negative": 2,
                    "leading_zeros_neg": 1,
                    "needs_additional_shift": 1,
                    "negative_shift": 2,
                    "shift_needed": 1
                },
                "bVar8": {
                    "check2": 2,
                    "equal_zero": 1,
                    "is_adjustment_zero": 1,
                    "is_count_zero": 1,
                    "is_shift_zero": 3,
                    "is_zero": 15,
                    "is_zero_or_negative": 1,
                    "is_zero_shift": 1,
                    "leading_zeros_zero": 1,
                    "no_extra_shift": 1,
                    "shift_exact": 1,
                    "zero_shift": 2
                },
                "bVar9": {
                    "borrow_flag": 1,
                    "carry": 2,
                    "carry_bit": 1,
                    "carry_flag": 2,
                    "carry_out": 1,
                    "check3": 2,
                    "has_carry": 1,
                    "has_overflow": 1,
                    "is_addition": 1,
                    "is_borrow": 1,
                    "is_carry": 4,
                    "is_carry_set": 3,
                    "is_negative2": 1,
                    "is_negative_overflow": 1,
                    "is_overflow": 1,
                    "is_shift_negative_overflow": 1,
                    "leading_zeros_borrow": 1,
                    "overflow": 3,
                    "overflow_flag": 1,
                    "shift_borrow": 1
                },
                "iVar4": {
                    "count": 2,
                    "leading_zeros": 26,
                    "lz_count": 2,
                    "shift_count": 1
                },
                "in_r12": {
                    "bit_mask": 1,
                    "bits_to_shift": 1,
                    "constant": 1,
                    "mask": 2,
                    "mask1": 1,
                    "num_bits_shifted": 1,
                    "remaining_bits": 16,
                    "remaining_shift": 1,
                    "remaining_shift_count": 1,
                    "rotated_value": 1,
                    "shift_count3": 1,
                    "shift_mask": 1,
                    "shifted_out_bits": 1,
                    "unused": 1
                },
                "new_variable_name_1": {
                    "temp1": 1
                },
                "new_variable_name_2": {
                    "temp2": 1
                },
                "param_1": {
                    "input": 24,
                    "input_number": 2,
                    "input_value": 2,
                    "num": 2,
                    "value": 1
                },
                "return": {
                    "result": 1
                },
                "uVar1": {
                    "bit_count": 6,
                    "count_leading_zeros": 1,
                    "output1": 1,
                    "output_number": 1,
                    "output_value_low": 1,
                    "result": 3,
                    "shift_amount": 5,
                    "shift_count": 2,
                    "shifted_bits": 3,
                    "shifted_input": 2,
                    "shifted_left": 1,
                    "shifted_value": 3,
                    "temp_var1": 1,
                    "zero_count": 1
                },
                "uVar10": {
                    "result": 1
                },
                "uVar2": {
                    "abs_input": 21,
                    "abs_num": 1,
                    "abs_value": 2,
                    "absolute_number": 1,
                    "absolute_value": 1,
                    "result": 1,
                    "temp": 2,
                    "temp_input": 1,
                    "temp_var2": 1
                },
                "uVar3": {
                    "bit_shift": 1,
                    "input_shifted": 1,
                    "num_bits": 1,
                    "shift": 1,
                    "shift_amount": 20,
                    "shift_amt": 1,
                    "shift_count": 1,
                    "shift_count1": 1,
                    "shift_mask": 1,
                    "shifted": 1,
                    "shifted_output": 1,
                    "temp_var3": 1
                },
                "uVar5": {
                    "adjusted_bit_count": 1,
                    "adjusted_count": 1,
                    "adjusted_shift": 3,
                    "adjusted_shift_amount": 1,
                    "adjusted_shift_amt": 1,
                    "combined_shift_amount": 1,
                    "constant1": 1,
                    "differential": 1,
                    "final_shift_amount": 1,
                    "mask_value": 1,
                    "new_shift_count": 1,
                    "offset": 1,
                    "shift_amount": 1,
                    "shift_count2": 1,
                    "shift_diff": 1,
                    "shift_distance": 1,
                    "shift_limit": 1,
                    "shift_threshold": 1,
                    "shifted_amount": 2,
                    "shifted_bit_count": 1,
                    "shifted_count": 1,
                    "shifted_input_size": 1,
                    "shifted_value": 1,
                    "total_bits": 5
                },
                "uVar6": {
                    "is_negative": 2,
                    "sign": 2,
                    "sign_bit": 21,
                    "sign_extension": 1,
                    "sign_flag": 1,
                    "sign_mask": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_0800a5a0",
                "FUN_08009d78",
                "FUN_08002c18"
            ],
            "code": "\nulonglong reverse_and_shift_bits_0800856c(uint input)\n\n{\n  uint bit_count;\n  uint abs_input;\n  uint shift_amount;\n  int leading_zeros;\n  uint total_bits;\n  uint sign_bit;\n  uint remaining_bits;\n  bool is_negative;\n  bool is_zero;\n  bool is_carry;\n  \n  if (input == 0) {\n    result 0;\n  }\n  sign_bit = input & 0x80000000;\n  abs_input = input;\n  if ((int)sign_bit < 0) {\n    abs_input = -input;\n  }\n  bit_count = 0;\n  leading_zeros = count_leading_zeros(abs_input);\n  total_bits = leading_zeros + 0x15;\n  is_carry = signed_borrow(total_bits,0x20);\n  shift_amount = leading_zeros - 0xb;\n  is_negative = (int)shift_amount < 0;\n  is_zero = shift_amount == 0;\n  if (total_bits < 0x20) {\n    is_carry = signed_carry(shift_amount,0xc);\n    is_negative = false;\n    is_zero = leading_zeros + 1 == 0;\n    shift_amount = total_bits;\n    if (!is_zero && is_carry == false) {\n      bit_count = abs_input << total_bits;\n      abs_input = abs_input >> (constant7 - (leading_zeros + 1) & 0xff);\n      goto shift_right;\n    }\n  }\n  if (is_zero || is_negative != is_carry) {\n    remaining_bits = 0x20 - shift_amount;\n  }\n  abs_input = abs_input << (shift_amount & 0xff);\n  if (is_zero || is_negative != is_carry) {\n    abs_input = abs_input | 0U >> (remaining_bits & 0xff);\n  }\n  if (is_zero || is_negative != is_carry) {\n    bit_count = 0 << (shift_amount & 0xff);\n  }\nshift_right:\n  if (total_bits < 0x433) {\n    result concatenate_u_long(abs_input + (0x432 - total_bits) * 0x100000 | sign_bit,bit_count);\n  }\n  shift_amount = ~(0x432 - total_bits);\n  if (0x1e < (int)shift_amount) {\n    result concatenate_u_long(input,abs_input >> (shift_amount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leading_zeros = shift_amount - 0x13;\n  if (leading_zeros == 0 || leading_zeros < 0 != signed_carry(shift_amount - 0x1f,0xc)) {\n    shift_amount = shift_amount + 1;\n    result concatenate_u_long(sign_bit | abs_input >> (shift_amount & 0xff),\n                    bit_count >> (shift_amount & 0xff) | abs_input << (0x20 - shift_amount & 0xff));\n  }\n  result concatenate_u_long(input,bit_count >> (0x20 - (constant7 - leading_zeros) & 0xff) | abs_input << (constant7 - leading_zeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "current_name": "reverse_and_shift_bits_0800856c",
            "entrypoint": "0x0800856c",
            "imported": false,
            "improved": true,
            "renaming": {
                "0xcU": "constant7",
                "CONCAT44": "concatenate_u_long",
                "FUN_0800856c": "reverse_and_shift_bits_0800856c",
                "LAB_08008458": "shift_right",
                "LZCOUNT": "count_leading_zeros",
                "SBORROW4": "signed_borrow",
                "SCARRY4": "signed_carry",
                "bVar7": "is_negative",
                "bVar8": "is_zero",
                "bVar9": "is_carry",
                "iVar4": "leading_zeros",
                "in_r12": "remaining_bits",
                "param_1": "input",
                "return": "result",
                "uVar1": "bit_count",
                "uVar2": "abs_input",
                "uVar3": "shift_amount",
                "uVar5": "total_bits",
                "uVar6": "sign_bit"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008590": {
            "additional_data": {
                "FUN_08008590": {
                    "convert_binary_to_int64": 1,
                    "decode_and_modify_value": 1,
                    "reverse_binary_operation": 1,
                    "reverse_bits": 16,
                    "reverse_bitwise_operation": 1,
                    "reverse_logic": 1,
                    "reverse_unsigned_long_long": 1
                },
                "LZCOUNT": {
                    "leading_zero_count": 1
                },
                "bVar10": {
                    "b_var10": 1,
                    "carry": 2,
                    "carry_bit": 2,
                    "carry_flag": 3,
                    "carry_out2": 1,
                    "check2": 1,
                    "compare_result_2": 1,
                    "condition2": 1,
                    "is_b_var10": 1,
                    "is_carry": 1,
                    "is_greater": 1,
                    "is_greater_than": 1,
                    "is_negative": 2,
                    "is_negative3": 1,
                    "is_negative_bit_shift": 1,
                    "is_negative_shift": 2,
                    "is_negative_shift2": 1,
                    "is_positive": 2,
                    "is_shift_negative": 1,
                    "is_shift_positive": 1,
                    "overflow_flag": 1,
                    "shift_less": 1,
                    "should_shift": 1,
                    "temp_bool10": 1
                },
                "bVar8": {
                    "carry": 1,
                    "carry_flag": 1,
                    "carry_out1": 1,
                    "is_b_var8": 1,
                    "is_borrow": 1,
                    "is_count_negative": 1,
                    "is_less_than": 1,
                    "is_negative": 6,
                    "is_negative1": 1,
                    "is_negative_input": 1,
                    "is_negative_shift": 2,
                    "is_shift_negative": 1,
                    "is_shift_zero": 1,
                    "is_zero": 3,
                    "is_zero_shift": 3,
                    "need_shift": 1,
                    "shift_more": 1,
                    "shift_negative": 1,
                    "should_shift": 1,
                    "temp_bool8": 1
                },
                "bVar9": {
                    "all_bits_zero": 1,
                    "b_var9": 1,
                    "bool_flag1": 1,
                    "check1": 1,
                    "check_condition": 1,
                    "check_value": 2,
                    "compare_result_1": 1,
                    "condition1": 1,
                    "is_b_var9": 1,
                    "is_equal": 1,
                    "is_full_bytes": 1,
                    "is_input_all_ones": 1,
                    "is_mask_zero": 1,
                    "is_max": 1,
                    "is_negative2": 1,
                    "is_param4_equal_to_zero": 1,
                    "is_trailing_zeros": 1,
                    "is_zero": 10,
                    "is_zero_shift": 1,
                    "is_zero_shift_value": 1,
                    "temp_bool9": 1
                },
                "iVar6": {
                    "bit_count": 12,
                    "bit_index": 1,
                    "bit_position": 1,
                    "bits_count": 1,
                    "count": 4,
                    "leading_zero_count": 1,
                    "leading_zeros": 2,
                    "num_bits": 2,
                    "number_of_leading_zeros": 1,
                    "shift_amount": 2,
                    "shift_count": 1,
                    "shifted_condition": 1,
                    "shifted_count": 1,
                    "var6": 1
                },
                "in_r12": {
                    "bit_mask": 1,
                    "constant": 2,
                    "constant_value": 1,
                    "extra_shift": 1,
                    "in_r12": 2,
                    "input_mask": 1,
                    "mask_value": 1,
                    "remainder": 3,
                    "remaining_bits": 7,
                    "remaining_shift": 1,
                    "shift_remainder": 1,
                    "temp": 2,
                    "temp3": 2,
                    "temp_var_2": 1,
                    "temp_variable": 1,
                    "var3": 1,
                    "var8": 2,
                    "var_20": 1
                },
                "param_1": {
                    "binary_number": 1,
                    "input": 21,
                    "input_num": 1,
                    "input_number": 1,
                    "input_value": 6,
                    "original_value": 1
                },
                "param_2": {
                    "extra_param1": 1,
                    "flag_1": 1,
                    "ignore": 1,
                    "param2": 11,
                    "param_2": 4,
                    "size": 1,
                    "unused": 2,
                    "unused1": 3,
                    "unused_param": 2,
                    "var2": 1
                },
                "param_3": {
                    "extra_param2": 1,
                    "flag_2": 1,
                    "ignore": 1,
                    "padding": 1,
                    "param3": 11,
                    "param_3": 4,
                    "unused": 2,
                    "unused2": 3,
                    "unused_param": 1,
                    "unused_param_2": 1,
                    "var3": 1
                },
                "param_4": {
                    "additional_value": 1,
                    "condition": 1,
                    "flag": 1,
                    "flag_value": 1,
                    "flags": 1,
                    "mask": 5,
                    "mask_value": 1,
                    "param4": 11,
                    "param_4": 4,
                    "unused": 1,
                    "unused3": 3,
                    "var4": 1
                },
                "uVar1": {
                    "bit30": 1,
                    "bit31": 4,
                    "bit31_shifted_value": 1,
                    "condition_flag1": 1,
                    "high_bit": 5,
                    "high_bits": 1,
                    "is_msb_set": 1,
                    "msb": 1,
                    "msb_flag": 1,
                    "msb_mask": 1,
                    "msb_set": 1,
                    "result1": 1,
                    "shifted_bit": 1,
                    "sign_bit": 3,
                    "sign_bit_shifted": 1,
                    "sign_extension": 2,
                    "u_var1": 1,
                    "upper_bit": 2,
                    "upper_bit_mask": 1,
                    "var1": 1
                },
                "uVar10": {
                    "shifted_input": 1
                },
                "uVar11": {
                    "output": 1,
                    "shifted_input": 1
                },
                "uVar2": {
                    "input_copy": 1,
                    "left_shifted_input": 1,
                    "modified_value": 1,
                    "new_input": 1,
                    "output": 3,
                    "output1": 1,
                    "output_high_bits": 1,
                    "remaining_bits": 1,
                    "result2": 1,
                    "shifted_binary_number": 1,
                    "shifted_input": 3,
                    "shifted_value": 1,
                    "temp": 1,
                    "temp1": 6,
                    "temp_input": 1,
                    "temp_value": 1,
                    "temp_var": 1,
                    "updated_input": 1,
                    "upper_value": 1,
                    "var1": 1,
                    "var2": 1,
                    "var8": 1
                },
                "uVar3": {
                    "bit31_with_shifted_out_bits": 1,
                    "bit63_bit32": 1,
                    "bit_pattern": 1,
                    "combined_shift": 1,
                    "extended_input": 1,
                    "output2": 1,
                    "output_low_bits": 1,
                    "result": 14,
                    "result1": 1,
                    "result3": 1,
                    "result_high": 6,
                    "result_upper": 1,
                    "var3": 1
                },
                "uVar4": {
                    "result2": 1,
                    "result4": 1,
                    "shift": 1,
                    "shift_amount": 5,
                    "shift_amount1": 1,
                    "shift_count": 1,
                    "shift_val": 1,
                    "shifted_amount1": 1,
                    "shifted_bits": 1,
                    "shifted_input": 7,
                    "shifted_input_divided_by8": 1,
                    "shifted_num": 1,
                    "shifted_number": 1,
                    "shifted_out_bits": 1,
                    "shifted_size": 1,
                    "shifted_value": 2,
                    "temp2": 1,
                    "var2": 1,
                    "var4": 1,
                    "var_c": 1
                },
                "uVar5": {
                    "double_num": 1,
                    "input_copy": 1,
                    "input_value_shifted": 1,
                    "shift_amount2": 1,
                    "shifted_amount2": 1,
                    "shifted_input": 5,
                    "shifted_input_copy": 1,
                    "shifted_input_times2": 2,
                    "shifted_output": 1,
                    "shifted_value": 1,
                    "temp": 2,
                    "temp1": 2,
                    "temp2": 4,
                    "temp3": 1,
                    "temp_result": 1,
                    "temp_shifted_value": 1,
                    "temp_value": 2,
                    "temp_var": 1,
                    "var5": 1,
                    "var_10": 1
                },
                "uVar6": {
                    "shifted_input": 1
                },
                "uVar7": {
                    "adjusted_shift_amount": 1,
                    "adjustment_offset": 1,
                    "diff": 1,
                    "shift_amount": 12,
                    "shift_amount3": 1,
                    "shifted_bits": 1,
                    "shifted_count": 2,
                    "shifted_difference": 2,
                    "shifted_out_bits_count": 1,
                    "shifted_output": 1,
                    "shifted_value": 1,
                    "temp2": 1,
                    "trailing_zeros": 1,
                    "u_var7": 2,
                    "var7": 2,
                    "var_1c": 1
                },
                "uVar8": {
                    "shifted_input": 1
                },
                "uVar9": {
                    "shifted_input": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08002408",
                "FUN_08004940",
                "FUN_08002c18",
                "FUN_080044e8",
                "FUN_08001f00",
                "FUN_080046d0",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_08004e30",
                "FUN_08003b98",
                "FUN_0800056c",
                "FUN_08001994"
            ],
            "code": "\nulonglong reverse_bits_08008590(uint input,undefined4 param2,undefined4 param3,uint param4)\n\n{\n  uint high_bit;\n  uint temp1;\n  uint result;\n  uint shifted_input;\n  uint shifted_input;\n  int bit_count;\n  uint shift_amount;\n  uint remaining_bits;\n  bool is_negative;\n  bool is_zero;\n  bool carry_flag;\n  \n  shifted_input = input << 1;\n  is_zero = shifted_input == 0;\n  high_bit = (uint)((input & 0x80000000) != 0) << 0x1f;\n  shifted_input = (uint)((int)shifted_input >> 3) >> 1;\n  result = high_bit | shifted_input;\n  input = input << 0x1d;\n  if (!is_zero) {\n    param4 = shifted_input & 0xff000000;\n    is_zero = param4 == 0;\n  }\n  if (!is_zero) {\n    is_zero = param4 == 0xff000000;\n  }\n  if (!is_zero) {\n    return CONCAT44(result,input) ^ 0x3800000000000000;\n  }\n  if ((shifted_input & 0xffffff) == 0) {\n    return CONCAT44(result,input);\n  }\n  if (param4 == 0xff000000) {\n    return CONCAT44(result,input) | 0x8000000000000;\n  }\n  temp1 = input;\n  shifted_input = shifted_input;\n  if (shifted_input == 0) {\n    temp1 = 0;\n    shifted_input = input;\n  }\n  bit_count = leading_zero_count(shifted_input);\n  if (shifted_input == 0) {\n    bit_count = bit_count + 0x20;\n  }\n  shift_amount = bit_count - 0xb;\n  carry_flag = SBORROW4(shift_amount,0x20);\n  shifted_input = bit_count - 0x2b;\n  is_zero = (int)shifted_input < 0;\n  is_negative = shifted_input == 0;\n  if ((int)shift_amount < 0x20) {\n    carry_flag = SCARRY4(shifted_input,0xc);\n    bit_count = bit_count + -0x1f;\n    is_zero = bit_count < 0;\n    is_negative = bit_count == 0;\n    shifted_input = shift_amount;\n    if (!is_negative && is_zero == carry_flag) {\n      temp1 = shifted_input << (shift_amount & 0xff);\n      shifted_input = shifted_input >> (0xcU - bit_count & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (is_negative || is_zero != carry_flag) {\n    remaining_bits = 0x20 - shifted_input;\n  }\n  shifted_input = shifted_input << (shifted_input & 0xff);\n  if (is_negative || is_zero != carry_flag) {\n    shifted_input = shifted_input | temp1 >> (remaining_bits & 0xff);\n  }\n  if (is_negative || is_zero != carry_flag) {\n    temp1 = temp1 << (shifted_input & 0xff);\n  }\nLAB_08008458:\n  if ((int)shift_amount < 0x381) {\n    return CONCAT44(shifted_input + (0x380 - shift_amount) * 0x100000 | high_bit,temp1);\n  }\n  shifted_input = ~(0x380 - shift_amount);\n  if (0x1e < (int)shifted_input) {\n    return CONCAT44(result,shifted_input >> (shifted_input - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  bit_count = shifted_input - 0x13;\n  if (bit_count == 0 || bit_count < 0 != SCARRY4(shifted_input - 0x1f,0xc)) {\n    shifted_input = shifted_input + 1;\n    return CONCAT44(high_bit | shifted_input >> (shifted_input & 0xff),\n                    temp1 >> (shifted_input & 0xff) | shifted_input << (0x20 - shifted_input & 0xff));\n  }\n  return CONCAT44(result,temp1 >> (0x20 - (0xcU - bit_count) & 0xff) | shifted_input << (0xcU - bit_count & 0xff)) &\n         0x80000000ffffffff;\n}\n\n",
            "current_name": "reverse_bits_08008590",
            "entrypoint": "0x08008590",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008590": "reverse_bits_08008590",
                "LZCOUNT": "leading_zero_count",
                "bVar10": "carry_flag",
                "bVar8": "is_negative",
                "bVar9": "is_zero",
                "iVar6": "bit_count",
                "in_r12": "remaining_bits",
                "param_1": "input",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "high_bit",
                "uVar2": "temp1",
                "uVar3": "result",
                "uVar4": "shifted_input",
                "uVar5": "shifted_input",
                "uVar7": "shift_amount"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008640": {
            "additional_data": {
                "FUN_08008640": {
                    "calculate_floating_point_bits": 1,
                    "calculate_floating_point_sum": 1,
                    "calculate_mul_and_add": 1,
                    "calculate_multivariable": 1,
                    "calculate_product": 9,
                    "calculate_result": 16,
                    "multiply_and_shift": 1
                },
                "bVar10": {
                    "b_var10": 1,
                    "bool2": 1,
                    "carry": 1,
                    "check2": 1,
                    "condition2": 8,
                    "flag1": 1,
                    "flag2": 13,
                    "is_carry": 1,
                    "is_exponent_overflow": 1,
                    "is_negative": 3
                },
                "bVar11": {
                    "b_var11": 1,
                    "bool3": 1,
                    "check3": 1,
                    "condition3": 8,
                    "flag2": 1,
                    "flag3": 13,
                    "is_negative": 1,
                    "is_negative2": 1,
                    "is_overflow": 2,
                    "overflow": 2
                },
                "bVar9": {
                    "bool1": 1,
                    "check1": 1,
                    "condition1": 8,
                    "flag": 1,
                    "flag1": 13,
                    "is_zero": 7
                },
                "iVar5": {
                    "calculation1": 1,
                    "exponent_sum": 2,
                    "result5": 1,
                    "sum": 6,
                    "sum2": 1,
                    "temp3": 15,
                    "temp5": 2,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "z": 1
                },
                "lVar2": {
                    "mul_result2": 1,
                    "product2": 3,
                    "result2": 10,
                    "sum": 1,
                    "sum1": 1,
                    "temp": 7,
                    "temp2": 2,
                    "temp64": 1,
                    "temp_mul": 1,
                    "temp_result": 1,
                    "temp_result2": 1,
                    "temp_var": 2
                },
                "param_1": {
                    "arg1": 1,
                    "initial_value": 1,
                    "input": 1,
                    "input1": 19,
                    "input_1": 1,
                    "input_a": 1,
                    "input_int1": 1,
                    "input_param1": 1,
                    "input_parameter1": 1,
                    "input_val1": 1,
                    "param1": 1,
                    "sign": 1,
                    "x": 1
                },
                "param_2": {
                    "a": 1,
                    "arg2": 1,
                    "exponent": 1,
                    "input2": 19,
                    "input_2": 1,
                    "input_b": 1,
                    "input_param2": 1,
                    "input_parameter2": 1,
                    "input_u_int1": 1,
                    "input_val2": 1,
                    "multiply_value1": 1,
                    "param2": 1,
                    "y": 1
                },
                "param_3": {
                    "arg3": 1,
                    "b": 1,
                    "input3": 18,
                    "input_3": 1,
                    "input_c": 1,
                    "input_param3": 1,
                    "input_parameter3": 1,
                    "input_u_int2": 1,
                    "input_val3": 1,
                    "mantissa1": 1,
                    "multiply_value2": 1,
                    "param3": 1,
                    "var1": 1,
                    "z": 1
                },
                "param_4": {
                    "arg4": 1,
                    "c": 1,
                    "input4": 18,
                    "input_4": 1,
                    "input_d": 1,
                    "input_param4": 1,
                    "input_parameter4": 1,
                    "input_u_int3": 1,
                    "input_val4": 1,
                    "mantissa2": 1,
                    "multiply_value3": 1,
                    "param4": 1,
                    "var2": 1,
                    "w": 1
                },
                "uVar1": {
                    "mul_result": 1,
                    "mul_result1": 1,
                    "product": 3,
                    "product1": 4,
                    "product_low": 1,
                    "result": 4,
                    "result1": 10,
                    "result64": 1,
                    "result_low": 2,
                    "result_upper": 1,
                    "temp1": 2,
                    "temp_result1": 1
                },
                "uVar12": {
                    "combined_bits": 1,
                    "combined_input": 10,
                    "combined_inputs": 2,
                    "combined_params": 2,
                    "combined_product": 1,
                    "combined_value": 1,
                    "combined_var": 1,
                    "concat": 1,
                    "concat_result": 1,
                    "concat_value": 1,
                    "concatenated": 2,
                    "concatenated_input": 1,
                    "product_high": 1,
                    "result": 4,
                    "temp3": 1,
                    "temp8": 1
                },
                "uVar3": {
                    "bitwise_op1": 1,
                    "exponent_and_sign_bit": 1,
                    "mask1": 1,
                    "mask_1": 1,
                    "masked_param2": 1,
                    "part1": 1,
                    "partial_result_low": 1,
                    "result3": 1,
                    "result_upper_masked": 1,
                    "temp1": 16,
                    "temp3": 2,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "x": 1,
                    "x_high": 1
                },
                "uVar4": {
                    "bit_mask1": 1,
                    "bitwise_op2": 1,
                    "exponent_bits": 1,
                    "extracted_bits1": 1,
                    "input2_bits": 1,
                    "mask2": 1,
                    "mask_2": 1,
                    "masked_significant_bits2": 1,
                    "part2": 1,
                    "result4": 1,
                    "temp2": 15,
                    "temp4": 2,
                    "temp_var3": 1,
                    "upper_exponent1": 1,
                    "y": 1,
                    "y_high": 1
                },
                "uVar6": {
                    "calculation2": 1,
                    "diff": 1,
                    "exponent": 1,
                    "extracted_bits2": 1,
                    "m": 1,
                    "masked_sum": 1,
                    "result6": 1,
                    "sum_low": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp4": 15,
                    "temp6": 2,
                    "temp_sub": 1,
                    "temp_var4": 1,
                    "temp_var5": 1,
                    "u_var6": 1
                },
                "uVar7": {
                    "accumulator": 1,
                    "bits_set": 1,
                    "calculation4": 1,
                    "carry": 1,
                    "mask": 1,
                    "masked_param4": 1,
                    "p": 1,
                    "result1": 1,
                    "result8": 1,
                    "result_high": 1,
                    "result_lower": 1,
                    "sum_high": 1,
                    "temp2": 1,
                    "temp5": 2,
                    "temp6": 13,
                    "temp8": 2,
                    "temp_var7": 1
                },
                "uVar8": {
                    "calculation5": 1,
                    "carry": 1,
                    "extracted_bits4": 1,
                    "q": 1,
                    "result1": 1,
                    "result2": 1,
                    "result9": 1,
                    "result_lower_with_sign": 1,
                    "result_significant_bits": 1,
                    "temp3": 1,
                    "temp6": 2,
                    "temp7": 13,
                    "temp9": 2,
                    "temp_high": 1,
                    "temp_var7": 1,
                    "temp_var8": 1,
                    "u_var8": 1
                },
                "unaff_r5": {
                    "bit_mask2": 1,
                    "calculation3": 1,
                    "extracted_bits3": 1,
                    "mantissa1_bits": 1,
                    "mask3": 1,
                    "masked_significant_bits4": 1,
                    "n": 1,
                    "part3": 1,
                    "result7": 1,
                    "temp5": 13,
                    "temp7": 2,
                    "temp_var5": 1,
                    "temp_var6": 1,
                    "u_var7": 1,
                    "upper_exponent2": 1,
                    "w_high": 1
                }
            },
            "called": [
                "FUN_0800881c"
            ],
            "calling": [
                "FUN_08009b24",
                "FUN_08003004",
                "FUN_08009d78",
                "FUN_08002638",
                "FUN_08004940",
                "FUN_08002c18",
                "FUN_080044e8",
                "FUN_0800af78",
                "FUN_0800a1bc",
                "FUN_08001f00",
                "FUN_0800b2e8",
                "FUN_0800a5a0",
                "FUN_0800adf0",
                "FUN_080046d0",
                "FUN_0800a348",
                "FUN_0800056c",
                "FUN_08001994"
            ],
            "code": "\nulonglong calculate_result_08008640(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  ulonglong result1;\n  longlong result2;\n  uint temp1;\n  uint temp2;\n  int temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  ulonglong combined_input;\n  \n  combined_input = CONCAT44(input2,input1);\n  temp6 = 0x7ff;\n  temp2 = input2 >> 0x14 & 0x7ff;\n  flag1 = temp2 == 0;\n  if (!flag1) {\n    temp5 = input4 >> 0x14 & 0x7ff;\n    flag1 = temp5 == 0;\n  }\n  if (!flag1) {\n    flag1 = temp2 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = temp5 == 0x7ff;\n  }\n  if (flag1) {\n    combined_input = FUN_0800881c();\n  }\n  temp1 = (uint)(combined_input >> 0x20);\n  temp3 = temp2 + temp5;\n  temp2 = temp1 ^ input4;\n  temp1 = temp1 & ~(temp6 << 0x15);\n  input4 = input4 & ~(temp6 << 0x15);\n  flag1 = ((uint)combined_input | temp1 << 0xc) == 0;\n  if (!flag1) {\n    flag1 = (input3 | input4 << 0xc) == 0;\n  }\n  temp1 = temp1 | 0x100000;\n  input4 = input4 | 0x100000;\n  if (flag1) {\n    input3 = (uint)combined_input | input3;\n    input4 = (temp2 & 0x80000000 | temp1) ^ input4;\n    temp2 = temp6 >> 1;\n    flag3 = SBORROW4(temp3,temp2);\n    temp4 = temp3 - temp2;\n    flag1 = temp4 == 0;\n    temp1 = temp4;\n    if (!flag1 && (int)temp2 <= temp3) {\n      flag3 = SBORROW4(temp6,temp4);\n      temp1 = temp6 - temp4;\n      flag1 = temp6 == temp4;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      input4 = input4 | temp4 * 0x100000;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      return CONCAT44(input4,input3);\n    }\n    input4 = input4 | 0x100000;\n    temp6 = 0;\n    flag3 = SBORROW4(temp4,1);\n    temp4 = temp4 - 1;\n    flag1 = temp4 == 0;\n    temp2 = temp4;\n  }\n  else {\n    result1 = (combined_input & 0xffffffff) * (ulonglong)input3;\n    combined_input = (combined_input & 0xffffffff) * (ulonglong)input4 +\n             (ulonglong)temp1 * (ulonglong)input3 + (result1 >> 0x20);\n    temp7 = (uint)combined_input;\n    result2 = (ulonglong)temp1 * (ulonglong)input4 + (combined_input >> 0x20);\n    temp6 = (uint)result2;\n    temp1 = (uint)((ulonglong)result2 >> 0x20);\n    if ((int)result1 != 0) {\n      temp7 = temp7 | 1;\n    }\n    temp4 = (temp3 + -0x3ff) - (uint)(temp1 < 0x200);\n    if (temp1 < 0x200) {\n      flag1 = (temp7 & 0x80000000) != 0;\n      temp7 = temp7 << 1;\n      result2 = CONCAT44(temp1 * 2 + (uint)(CARRY4(temp6,temp6) || CARRY4(temp6 * 2,(uint)flag1)),\n                       temp6 * 2 + (uint)flag1);\n    }\n    input4 = temp2 & 0x80000000 | (int)((ulonglong)result2 >> 0x20) << 0xb | (uint)result2 >> 0x15;\n    input3 = (uint)result2 << 0xb | temp7 >> 0x15;\n    temp6 = temp7 * 0x800;\n    flag2 = 0xfc < temp4;\n    flag3 = SBORROW4(temp4,0xfd);\n    temp1 = temp4 - 0xfd;\n    flag1 = temp1 == 0;\n    temp2 = temp1;\n    if (flag2 && !flag1) {\n      flag2 = 0x6ff < temp1;\n      flag3 = SBORROW4(temp1,0x700);\n      temp2 = temp4 - 0x7fd;\n      flag1 = temp1 == 0x700;\n    }\n    if (!flag2 || flag1) {\n      flag1 = 0x7fffffff < temp6;\n      if (temp6 == 0x80000000) {\n        flag1 = (temp7 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(input4 + temp4 * 0x100000 + (uint)CARRY4(input3,(uint)flag1),input3 + flag1\n                     );\n    }\n  }\n  if (!flag1 && (int)temp2 < 0 == flag3) {\n    return (ulonglong)(input4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag2 = SCARRY4(temp4,0x36);\n  flag1 = (int)(temp4 + 0x36) < 0;\n  flag3 = temp4 == 0xffffffca;\n  if (flag3 || flag1 != flag2) {\n    input3 = 0;\n  }\n  if (flag3 || flag1 != flag2) {\n    input4 = input4 & 0x80000000;\n  }\n  if (flag3 || flag1 != flag2) {\n    return CONCAT44(input4,input3);\n  }\n  temp2 = -temp4;\n  temp1 = temp2 - 0x20;\n  if (0x1f < (int)temp2) {\n    temp4 = input3 >> (temp1 & 0xff) | input4 << (0x20 - temp1 & 0xff);\n    temp2 = (input4 >> (temp1 & 0xff) & ~((input4 & 0x80000000) >> (temp1 & 0xff))) -\n            ((int)temp4 >> 0x1f);\n    if ((temp6 | input3 << (0x20 - temp1 & 0xff) | temp4 << 1) == 0) {\n      temp2 = temp2 & ~(temp4 >> 0x1f);\n    }\n    return CONCAT44(input4,temp2) & 0x80000000ffffffff;\n  }\n  temp3 = temp2 - 0x14;\n  if (temp3 == 0 || temp3 < 0 != SCARRY4(temp1,0xc)) {\n    temp7 = input3 << (temp4 + 0x20 & 0xff);\n    temp1 = input3 >> (temp2 & 0xff) | input4 << (temp4 + 0x20 & 0xff);\n    temp4 = temp1 + -((int)temp7 >> 0x1f);\n    if ((temp6 | temp7 << 1) == 0) {\n      temp4 = temp4 & ~(temp7 >> 0x1f);\n    }\n    return CONCAT44((input4 & 0x80000000) +\n                    ((input4 & 0x7fffffff) >> (temp2 & 0xff)) +\n                    (uint)CARRY4(temp1,-((int)temp7 >> 0x1f)),temp4);\n  }\n  temp2 = 0xc - temp3;\n  temp4 = input3 << (temp2 & 0xff);\n  temp2 = input3 >> (0x20 - temp2 & 0xff) | input4 << (temp2 & 0xff);\n  temp1 = temp2 + -((int)temp4 >> 0x1f);\n  if ((temp6 | temp4 << 1) == 0) {\n    temp1 = temp1 & ~(temp4 >> 0x1f);\n  }\n  return CONCAT44((input4 & 0x80000000) + (uint)CARRY4(temp2,-((int)temp4 >> 0x1f)),temp1);\n}\n\n",
            "current_name": "calculate_result_08008640",
            "entrypoint": "0x08008640",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008640": "calculate_result_08008640",
                "bVar10": "flag2",
                "bVar11": "flag3",
                "bVar9": "flag1",
                "iVar5": "temp3",
                "lVar2": "result2",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "uVar12": "combined_input",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar6": "temp4",
                "uVar7": "temp6",
                "uVar8": "temp7",
                "unaff_r5": "temp5"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800881c": {
            "additional_data": {
                "CONCAT44": {
                    "combine_two_32bit_values": 1
                },
                "FUN_0800881c": {
                    "bitwise_operation": 2,
                    "calculate_and_combine": 1,
                    "calculate_bitwise_result": 1,
                    "calculate_bitwise_xor": 3,
                    "calculate_hash": 1,
                    "calculate_result": 1,
                    "calculate_shifted_and_combined": 1,
                    "calculate_xor": 1,
                    "extract_bitwise_value": 1,
                    "reverse_and_check": 1,
                    "reverse_and_combine": 1,
                    "reverse_and_convert_bits": 1,
                    "reverse_and_mask": 1,
                    "reverse_and_shift": 1,
                    "reverse_bit_operations": 1,
                    "reverse_bit_pattern": 1,
                    "reverse_bits": 7,
                    "reverse_bits_and_shift": 1,
                    "reverse_bitwise_operations": 3
                },
                "bVar4": {
                    "check_condition": 1,
                    "check_result": 1,
                    "flag": 2,
                    "flag_1": 1,
                    "is_zero": 25
                },
                "in_r12": {
                    "bit3": 1,
                    "bit5": 2,
                    "bit_5": 4,
                    "constant1": 1,
                    "constant_1": 1,
                    "constant_value": 1,
                    "in_r12": 1,
                    "mask": 4,
                    "temp2": 4,
                    "temp5": 1,
                    "temp_2": 5,
                    "temp_5": 2,
                    "temp_b": 1,
                    "temp_two": 1,
                    "temp_var_5": 1,
                    "temporary_2": 1
                },
                "param_1": {
                    "input1": 12,
                    "input_1": 14,
                    "input_a": 1,
                    "input_one": 1,
                    "input_param1": 1,
                    "input_value_1": 2
                },
                "param_2": {
                    "input2": 12,
                    "input_2": 14,
                    "input_b": 1,
                    "input_param2": 1,
                    "input_two": 1,
                    "input_value_2": 2
                },
                "param_3": {
                    "input3": 12,
                    "input_3": 14,
                    "input_c": 1,
                    "input_param3": 1,
                    "input_three": 1,
                    "input_value_3": 2
                },
                "param_4": {
                    "input4": 12,
                    "input_4": 14,
                    "input_d": 1,
                    "input_four": 1,
                    "input_param4": 1,
                    "input_value_4": 2
                },
                "uVar1": {
                    "bit": 1,
                    "bit1": 8,
                    "bit_1": 6,
                    "shifted_input1": 1,
                    "temp1": 1,
                    "temp3": 2,
                    "temp_1": 4,
                    "temp_3": 5,
                    "temp_three": 1,
                    "temp_var1": 1,
                    "temp_var_1": 1
                },
                "uVar2": {
                    "bit2": 3,
                    "bit3": 2,
                    "bit_2": 2,
                    "bit_3": 4,
                    "condition_2": 1,
                    "masked_val": 1,
                    "shifted_input4": 1,
                    "shifted_temp_2": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp4": 2,
                    "temp_2": 2,
                    "temp_3": 2,
                    "temp_4": 4,
                    "temp_four": 1,
                    "temp_var2": 1,
                    "temp_var_3": 1
                },
                "uVar3": {
                    "bit2": 1,
                    "bit3": 3,
                    "bit4": 2,
                    "bit_3": 1,
                    "bit_4": 4,
                    "bitwise_result": 1,
                    "result": 1,
                    "shifted_input2": 1,
                    "temp2": 1,
                    "temp4": 1,
                    "temp5": 2,
                    "temp_3": 2,
                    "temp_4": 3,
                    "temp_5": 4,
                    "temp_five": 1,
                    "temp_val": 1,
                    "temp_var3": 1,
                    "temp_var_4": 1
                },
                "uVar5": {
                    "temp_6": 1
                },
                "unaff_r4": {
                    "bit2": 3,
                    "bit_2": 4,
                    "comparison_val": 1,
                    "condition_1": 1,
                    "constant2": 1,
                    "constant_2": 1,
                    "temp1": 6,
                    "temp2": 1,
                    "temp_1": 5,
                    "temp_2": 2,
                    "temp_a": 1,
                    "temp_one": 1,
                    "temp_var": 1,
                    "temp_var_2": 1,
                    "temporary_1": 1,
                    "unaff_r4": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08008640"
            ],
            "code": "\nulonglong reverse_bits_and_shift_0800881c(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  uint bit1;\n  uint temp1;\n  uint temp_4;\n  uint temp_5;\n  uint temp_2;\n  bool is_zero;\n  \n  temp_4 = temp_2 & input_4 >> 0x14;\n  if (temp1 != temp_2 && temp_4 != temp_2) {\n    is_zero = (input_1 | input_2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input_3 | input_4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input_2 ^ input_4) & 0x80000000) << 0x20;\n    }\n    if (temp1 == 0) {\n      temp_5 = input_2 & 0x80000000;\n      do {\n        bit1 = input_1 & 0x80000000;\n        input_1 = input_1 << 1;\n        input_2 = input_2 * 2 + (uint)(bit1 != 0);\n      } while ((input_2 & 0x100000) == 0);\n      input_2 = input_2 | temp_5;\n      if (temp_4 != 0) {\n        return combine_two_32bit_values(input_2,input_1);\n      }\n    }\n    do {\n      temp_4 = input_3 & 0x80000000;\n      input_3 = input_3 << 1;\n      input_4 = input_4 * 2 + (uint)(temp_4 != 0);\n    } while ((input_4 & 0x100000) == 0);\n    return combine_two_32bit_values(input_2,input_1);\n  }\n  is_zero = (input_1 | input_2 << 1) == 0;\n  if (is_zero) {\n    input_2 = input_4;\n    input_1 = input_3;\n  }\n  if (!is_zero) {\n    is_zero = (input_3 | input_4 << 1) == 0;\n  }\n  temp_5 = input_2;\n  if (((!is_zero) && ((temp1 != temp_2 || ((input_1 | input_2 << 0xc) == 0)))) &&\n     ((temp_4 != temp_2 || (input_1 = input_3, temp_5 = input_4, (input_3 | input_4 << 0xc) == 0)))) {\n    return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return combine_two_32bit_values(temp_5,input_1) | 0x7ff8000000000000;\n}\n\n",
            "current_name": "reverse_bits_and_shift_0800881c",
            "entrypoint": "0x0800881c",
            "imported": false,
            "improved": true,
            "renaming": {
                "CONCAT44": "combine_two_32bit_values",
                "FUN_0800881c": "reverse_bits_and_shift_0800881c",
                "bVar4": "is_zero",
                "in_r12": "temp_2",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "bit1",
                "uVar2": "temp_4",
                "uVar3": "temp_5",
                "unaff_r4": "temp1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008894": {
            "additional_data": {
                "FUN_08008894": {
                    "calculate_double_precision_number": 1,
                    "calculate_float": 4,
                    "calculate_floating_point": 15,
                    "calculate_floating_point_number": 1,
                    "calculate_floating_point_value": 2,
                    "calculate_result": 1,
                    "calculate_sum": 1,
                    "convert_float_to_u_fixed": 1
                },
                "bVar14": {
                    "bool_var1": 1,
                    "check1": 1,
                    "comparison_flag": 1,
                    "condition": 1,
                    "condition1": 3,
                    "exponent_bits_equal": 1,
                    "flag1": 7,
                    "is_infinity": 1,
                    "is_true": 1,
                    "is_true_1": 1,
                    "is_zero": 9,
                    "is_zero1": 1,
                    "is_zero_exponent": 1,
                    "temp_bool1": 1,
                    "temp_var_15": 1
                },
                "bVar15": {
                    "b_var15": 1,
                    "bool_var2": 1,
                    "check2": 1,
                    "comparison_flag2": 1,
                    "condition2": 3,
                    "exponent_difference_negative": 1,
                    "flag2": 7,
                    "is_equal": 7,
                    "is_exact": 1,
                    "is_negative": 3,
                    "is_true_2": 1,
                    "is_zero": 1,
                    "is_zero2": 1,
                    "temp_bool2": 1,
                    "temp_var_16": 1
                },
                "bVar16": {
                    "b_var16": 1,
                    "bool_var3": 1,
                    "carry": 3,
                    "carry7_flag": 1,
                    "carry_flag": 2,
                    "check3": 1,
                    "condition3": 2,
                    "flag3": 7,
                    "is_carry": 1,
                    "is_greater": 1,
                    "is_negative": 1,
                    "is_overflow": 2,
                    "is_round_bit_set": 1,
                    "is_true_3": 1,
                    "overflow": 4,
                    "temp_bool3": 1,
                    "temp_var_17": 1
                },
                "bVar17": {
                    "borrow_flag": 1,
                    "condition3": 1,
                    "flag4": 1,
                    "is_even": 1,
                    "is_negative": 1,
                    "negative_flag": 1,
                    "result": 1
                },
                "bVar28": {
                    "lt_one": 1
                },
                "iVar8": {
                    "diff": 1,
                    "difference": 9,
                    "exponent_diff": 2,
                    "exponent_difference": 5,
                    "i_var8": 1,
                    "integer_var": 1,
                    "temp8": 6,
                    "temp_8": 1,
                    "temp_var8": 1,
                    "temp_var_8": 1,
                    "var8": 2
                },
                "param_1": {
                    "flags": 1,
                    "floating_point_bit_pattern": 1,
                    "fraction": 1,
                    "input1": 8,
                    "input_bits1": 1,
                    "input_param": 1,
                    "input_param1": 1,
                    "input_param_1": 1,
                    "param1": 1,
                    "sign": 8,
                    "sign_bit": 3,
                    "sign_bits": 1,
                    "value": 1,
                    "value1": 2
                },
                "param_2": {
                    "exponent": 7,
                    "exponent_bits": 4,
                    "exponent_bits_and_mantissa_high": 1,
                    "input2": 8,
                    "input_bits2": 1,
                    "input_data": 1,
                    "input_param2": 1,
                    "input_param_2": 1,
                    "param1_exponent": 1,
                    "param2": 1,
                    "sign": 1,
                    "sign_and_exponent": 1,
                    "sign_and_exponent1": 1,
                    "sign_exponent": 1,
                    "value2": 1
                },
                "param_3": {
                    "control_param": 1,
                    "exponent": 1,
                    "fraction1": 1,
                    "fraction_bits_msb": 1,
                    "input3": 8,
                    "input_bits3": 1,
                    "input_param3": 1,
                    "input_param_3": 1,
                    "mantissa": 1,
                    "mantissa1": 1,
                    "mantissa_bits": 2,
                    "mantissa_high": 3,
                    "mantissa_high_bits": 2,
                    "mantissa_low": 1,
                    "param3": 1,
                    "param3_mantissa": 1,
                    "sign": 1,
                    "significand1": 1,
                    "significand_1": 1,
                    "value3": 1
                },
                "param_4": {
                    "control_data": 1,
                    "denormalized": 1,
                    "exponent_and_mantissa_low": 1,
                    "fraction2": 1,
                    "fraction_bits_lsb": 1,
                    "input4": 8,
                    "input_bits4": 1,
                    "input_param4": 1,
                    "input_param_4": 1,
                    "mantissa": 1,
                    "mantissa2": 1,
                    "mantissa_bits_extended": 1,
                    "mantissa_low": 3,
                    "mantissa_low_bits": 2,
                    "param4": 1,
                    "param4_mantissa": 1,
                    "raw_bits": 1,
                    "rounding_mode": 1,
                    "sign_and_exponent2": 1,
                    "significand_2": 1,
                    "value4": 1
                },
                "uVar1": {
                    "bit1": 1,
                    "bit_mask": 1,
                    "exponent_bits": 2,
                    "exponent_sign_bit": 1,
                    "flag_temp": 1,
                    "fraction_bits": 1,
                    "fraction_bits_msb_shifted": 1,
                    "is_exponent_zero": 1,
                    "mantissa_1": 1,
                    "mask": 1,
                    "result": 1,
                    "result1": 1,
                    "shifted_mantissa": 1,
                    "sign_bit": 1,
                    "temp1": 9,
                    "temp_1": 1,
                    "temp_var1": 2,
                    "temp_var_1": 1,
                    "unsigned_var1": 1,
                    "var1": 2
                },
                "uVar10": {
                    "adjusted_fraction": 1,
                    "exponent1": 1,
                    "exponent_2": 1,
                    "exponent_bits_lsb_shifted": 1,
                    "exponent_bits_modified2": 1,
                    "exponent_normalized": 1,
                    "exponent_shifted": 1,
                    "normalized_exponent": 1,
                    "shifted_exponent": 1,
                    "temp10": 2,
                    "temp11": 5,
                    "temp2": 2,
                    "temp4": 1,
                    "temp9": 1,
                    "temp_11": 1,
                    "temp_var10": 1,
                    "temp_var11": 1,
                    "temp_var4": 1,
                    "temp_var_11": 1,
                    "temporary2": 1,
                    "u_var10": 2,
                    "unsigned_var10": 1,
                    "var10": 1,
                    "var11": 1
                },
                "uVar11": {
                    "adjusted_bits": 1,
                    "fraction_integral": 1,
                    "mantissa": 3,
                    "mantissa1": 1,
                    "reconstructed_bits": 1,
                    "result": 1,
                    "result_exponent_bits": 1,
                    "result_high": 1,
                    "result_mantissa_high": 1,
                    "shifted_mantissa": 1,
                    "temp11": 2,
                    "temp12": 4,
                    "temp3": 2,
                    "temp5": 1,
                    "temp_12": 1,
                    "temp_var11": 1,
                    "temp_var12": 1,
                    "temp_var_12": 1,
                    "temporary3": 1,
                    "u_var11": 2,
                    "unsigned_var11": 1,
                    "var11": 1,
                    "var12": 1
                },
                "uVar12": {
                    "difference": 1,
                    "exponent_difference_shifted": 1,
                    "fraction_difference": 1,
                    "fraction_remainder": 1,
                    "mantissa_difference": 1,
                    "mantissa_sub": 1,
                    "result_mantissa_low": 1,
                    "temp10": 1,
                    "temp12": 3,
                    "temp13": 4,
                    "temp4": 2,
                    "temp6": 2,
                    "temp_13": 1,
                    "temp_var12": 1,
                    "temp_var13": 1,
                    "temp_var3": 1,
                    "temp_var_13": 1,
                    "temporary4": 1,
                    "u_var12": 2,
                    "unsigned_var12": 1,
                    "var12": 1,
                    "var13": 1
                },
                "uVar13": {
                    "comparison_result": 1,
                    "exponent_bits_shifted": 1,
                    "exponent_mask": 2,
                    "fraction_result": 1,
                    "loop_temp": 1,
                    "max_exponent": 1,
                    "max_exponent_value": 1,
                    "max_value": 1,
                    "result": 1,
                    "round_bit": 1,
                    "shift_count": 1,
                    "temp13": 3,
                    "temp14": 4,
                    "temp5": 2,
                    "temp_14": 1,
                    "temp_var13": 1,
                    "temp_var14": 1,
                    "temp_var4": 1,
                    "temp_var_14": 1,
                    "u_var13": 1,
                    "unsigned_var13": 1,
                    "var13": 1,
                    "var14": 1,
                    "y_res": 1
                },
                "uVar14": {
                    "normalized_bits": 1
                },
                "uVar16": {
                    "overflow_exponent": 1
                },
                "uVar17": {
                    "combined_params": 1,
                    "concatenated_value": 1,
                    "concatenated_vars": 1,
                    "output": 1,
                    "result": 10,
                    "result_bits": 1,
                    "result_low": 1,
                    "return_value": 1,
                    "temp14": 1,
                    "temp15": 1,
                    "temp6": 1,
                    "temp_var15": 1,
                    "temp_var_18": 1,
                    "u_var17": 2
                },
                "uVar18": {
                    "bit1_or_normalized_exponent": 1,
                    "final_exponent_bits": 1,
                    "result_1": 1,
                    "result_fraction": 1,
                    "sign_mask": 1
                },
                "uVar19": {
                    "adjust_exponent": 1,
                    "bit20_or_mantissa": 1,
                    "final_exponent_diff": 1,
                    "result_2": 1,
                    "result_exponent": 1
                },
                "uVar2": {
                    "bit2": 1,
                    "exponent": 1,
                    "exponent_bits": 2,
                    "exponent_difference": 1,
                    "fraction_bits_lsb_shifted": 1,
                    "is_mantissa_zero": 1,
                    "mantissa_2": 1,
                    "result2": 1,
                    "shifted_mantissa2": 1,
                    "shifted_sign_bit": 1,
                    "sign_temp": 1,
                    "temp": 1,
                    "temp2": 9,
                    "temp_2": 1,
                    "temp_var2": 2,
                    "temp_var_2": 1,
                    "u_var2": 2,
                    "unsigned_var2": 1,
                    "var2": 2
                },
                "uVar20": {
                    "bit21_or_normalized_exponent": 1,
                    "result": 1,
                    "result_exponent": 1,
                    "temp_exponent": 1
                },
                "uVar21": {
                    "bit9_or_mantissa": 1,
                    "mantissa1": 1,
                    "result_mantissa": 1,
                    "result_temp": 1
                },
                "uVar22": {
                    "bigger": 1,
                    "bit10_or_normalized_exponent": 1
                },
                "uVar23": {
                    "bit4_or_mantissa": 1,
                    "shift": 1
                },
                "uVar24": {
                    "bit5_or_normalized_exponent": 1,
                    "mant_shift": 1
                },
                "uVar25": {
                    "bit3_or_mantissa": 1,
                    "temp_mantissa": 1
                },
                "uVar26": {
                    "bit2_or_normalized_exponent": 1,
                    "normalized": 1
                },
                "uVar27": {
                    "bit6_or_normalized_exponent": 1,
                    "remainder": 1
                },
                "uVar28": {
                    "bit7_or_mantissa": 1
                },
                "uVar29": {
                    "bit8_or_normalized_exponent": 1,
                    "shift1": 1
                },
                "uVar3": {
                    "bit3": 1,
                    "exponent_bits": 1,
                    "exponent_temp": 1,
                    "fraction1_bits": 1,
                    "fraction_bits_combined_shifted": 1,
                    "mantissa_3": 1,
                    "mantissa_shifted": 1,
                    "mantissa_top_bit": 1,
                    "normalized_mantissa": 1,
                    "result3": 1,
                    "sign_bit": 1,
                    "temp1": 1,
                    "temp3": 9,
                    "temp_3": 1,
                    "temp_var3": 2,
                    "temp_var_3": 1,
                    "u_var3": 2,
                    "unsigned_var3": 1,
                    "var3": 2
                },
                "uVar30": {
                    "bit11_or_mantissa": 1,
                    "temp_mant_shift": 1
                },
                "uVar31": {
                    "bit12_or_normalized_exponent": 1,
                    "sign_extend": 1
                },
                "uVar32": {
                    "bit19_or_normalized_exponent": 1,
                    "is_negative": 1
                },
                "uVar33": {
                    "bit22_or_normalized_exponent": 1,
                    "normalized_bit": 1
                },
                "uVar34": {
                    "bit13_or_mantissa": 1
                },
                "uVar35": {
                    "bit51_or_normalized_exponent": 1
                },
                "uVar36": {
                    "bit23_or_normalized_exponent": 1
                },
                "uVar37": {
                    "bit14_or_mantissa": 1
                },
                "uVar38": {
                    "bit15_or_normalized_exponent": 1
                },
                "uVar39": {
                    "final_result": 1
                },
                "uVar4": {
                    "bit4": 1,
                    "carry_bit": 1,
                    "fraction2_bits": 1,
                    "i_var": 1,
                    "mantissa_4": 1,
                    "mantissa_temp": 1,
                    "result4": 1,
                    "rounding_bit": 1,
                    "shifted_exponent": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp4": 9,
                    "temp_4": 1,
                    "temp_var1": 1,
                    "temp_var4": 2,
                    "temp_var_4": 1,
                    "u_var4": 2,
                    "unsigned_var4": 1,
                    "var4": 2
                },
                "uVar40": {
                    "temp_var5": 1
                },
                "uVar5": {
                    "bit5": 1,
                    "divided_mantissa": 1,
                    "fraction1_shifted": 1,
                    "mantissa_5": 1,
                    "result5": 1,
                    "shifted_exponent": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp5": 9,
                    "temp_5": 1,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "temp_var5": 2,
                    "temp_var_5": 1,
                    "u_var5": 2,
                    "unaff_r5": 1,
                    "unsigned_var5": 1,
                    "var5": 2
                },
                "uVar6": {
                    "bit6": 1,
                    "diff": 1,
                    "divided_exponent": 1,
                    "fraction2_shifted": 1,
                    "mantissa_6": 1,
                    "result6": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp4": 1,
                    "temp6": 9,
                    "temp_6": 1,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temp_var6": 2,
                    "temp_var_6": 1,
                    "u_var6": 2,
                    "u_var_a": 1,
                    "unsigned_var6": 1,
                    "var6": 2
                },
                "uVar7": {
                    "bit7": 1,
                    "combined_bits": 1,
                    "exponent_1": 1,
                    "extracted_exponent": 1,
                    "fraction_bits_adjusted": 1,
                    "result7": 1,
                    "result_sign": 1,
                    "result_sign_bit": 1,
                    "result_sign_bits": 1,
                    "sign_mask": 1,
                    "temp3": 1,
                    "temp5": 1,
                    "temp7": 9,
                    "temp_7": 1,
                    "temp_var7": 2,
                    "temp_var_7": 1,
                    "u_var7": 2,
                    "u_var_b": 1,
                    "unsigned_var7": 1,
                    "var7": 2
                },
                "uVar8": {
                    "rounded_exponent": 1
                },
                "uVar9": {
                    "biased_exponent": 1,
                    "exponent": 2,
                    "exponent1": 1,
                    "exponent_bits_modified": 1,
                    "exponent_diff_adjusted": 1,
                    "exponent_difference_shifted": 1,
                    "fraction_normalized": 1,
                    "new_exponent": 1,
                    "normalized_exponent": 1,
                    "result_exponent": 1,
                    "temp1": 2,
                    "temp8": 2,
                    "temp9": 6,
                    "temp_9": 1,
                    "temp_var9": 1,
                    "temp_var_9": 1,
                    "temporary1": 1,
                    "u_var9": 2,
                    "unsigned_var9": 1,
                    "upper_bits": 1,
                    "var9": 2
                },
                "unaff_r5": {
                    "bit8": 1,
                    "denormalized_bits": 1,
                    "exponent2": 1,
                    "exponent_bits_lsb": 1,
                    "input_exponent": 1,
                    "mantissa_high_bits_shifted": 1,
                    "normalized_significand": 1,
                    "param4_exponent": 1,
                    "rounding_bit_adjusted": 1,
                    "temp10": 5,
                    "temp9": 1,
                    "temp_10": 1,
                    "temp_var10": 1,
                    "temp_var_10": 1,
                    "unaff_r5": 2,
                    "unaffected_r5": 1,
                    "unaffected_register": 1,
                    "var10": 1
                }
            },
            "called": [
                "FUN_08008a02"
            ],
            "calling": [
                "FUN_0800a1bc",
                "FUN_080005b4",
                "FUN_08009990",
                "FUN_080098d0",
                "FUN_08003004",
                "FUN_0800af78",
                "FUN_08001994"
            ],
            "code": "\nulonglong calculate_floating_point_value_08008894(undefined4 sign,uint input2,uint input3,uint input4)\n\n{\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  int difference;\n  uint temp9;\n  uint temp10;\n  uint temp11;\n  uint temp12;\n  uint temp13;\n  uint temp14;\n  bool is_zero;\n  bool is_equal;\n  bool flag3;\n  undefined8 result;\n  \n  result = CONCAT44(input2,sign);\n  temp14 = 0x7ff;\n  temp7 = input2 >> 0x14 & 0x7ff;\n  is_zero = temp7 == 0;\n  if (!is_zero) {\n    temp10 = input4 >> 0x14 & 0x7ff;\n    is_zero = temp10 == 0;\n  }\n  if (!is_zero) {\n    is_zero = temp7 == 0x7ff;\n  }\n  if (!is_zero) {\n    is_zero = temp10 == 0x7ff;\n  }\n  if (is_zero) {\n    result = FUN_08008a02();\n  }\n  temp9 = (uint)((ulonglong)result >> 0x20);\n  temp12 = (uint)result;\n  difference = temp7 - temp10;\n  if ((input3 | input4 << 0xc) == 0) {\n    temp7 = (temp9 ^ input4) & 0x80000000 | temp9 & 0xfffff;\n    flag3 = SCARRY4(difference,temp14 >> 1);\n    temp9 = difference + (temp14 >> 1);\n    is_zero = (int)temp9 < 0;\n    is_equal = temp9 == 0;\n    if (!is_equal && is_zero == flag3) {\n      flag3 = SBORROW4(temp14,temp9);\n      is_zero = (int)(temp14 - temp9) < 0;\n      is_equal = temp14 == temp9;\n    }\n    if (!is_equal && is_zero == flag3) {\n      temp7 = temp7 | temp9 * 0x100000;\n    }\n    if (!is_equal && is_zero == flag3) {\n      return CONCAT44(temp7,temp12);\n    }\n    temp7 = temp7 | 0x100000;\n    temp14 = 0;\n    is_equal = SBORROW4(temp9,1);\n    temp9 = temp9 - 1;\n    is_zero = temp9 == 0;\n    temp3 = temp9;\n  }\n  else {\n    temp3 = (input4 << 0xc) >> 4 | 0x10000000 | input3 >> 0x18;\n    temp14 = input3 << 8;\n    temp11 = (temp9 << 0xc) >> 4 | 0x10000000 | temp12 >> 0x18;\n    temp12 = temp12 * 0x100;\n    temp7 = (temp9 ^ input4) & 0x80000000;\n    is_zero = temp3 <= temp11;\n    if (temp11 == temp3) {\n      is_zero = temp14 <= temp12;\n    }\n    difference = difference + (uint)is_zero;\n    temp9 = difference + 0x3fd;\n    if (is_zero == false) {\n      temp3 = temp3 >> 1;\n      temp14 = (uint)((input3 >> 0x18 & 1) != 0) << 0x1f | temp14 >> 1;\n    }\n    temp13 = temp12 - temp14;\n    temp11 = (temp11 - temp3) - (uint)(temp12 < temp14);\n    temp4 = temp3 >> 1;\n    temp1 = (uint)((temp3 & 1) != 0) << 0x1f | temp14 >> 1;\n    temp12 = 0x100000;\n    temp3 = 0x80000;\n    while( true ) {\n      is_zero = temp1 <= temp13;\n      if (temp4 < temp11 || temp11 - temp4 < (uint)is_zero) {\n        temp13 = temp13 - temp1;\n        temp12 = temp12 | temp3;\n        temp11 = (temp11 - temp4) - (uint)!is_zero;\n      }\n      temp5 = temp4 >> 1;\n      temp1 = (uint)((temp4 & 1) != 0) << 0x1f | temp1 >> 1;\n      is_equal = temp1 <= temp13;\n      is_zero = temp11 - temp5 < (uint)is_equal;\n      temp14 = temp11;\n      if (temp5 < temp11 || is_zero) {\n        temp13 = temp13 - temp1;\n        temp14 = (temp11 - temp5) - (uint)!is_equal;\n      }\n      if (temp5 < temp11 || is_zero) {\n        temp12 = temp12 | temp3 >> 1;\n      }\n      temp11 = temp4 >> 2;\n      temp2 = (uint)((temp5 & 1) != 0) << 0x1f | temp1 >> 1;\n      is_equal = temp2 <= temp13;\n      is_zero = temp14 - temp11 < (uint)is_equal;\n      temp5 = temp14;\n      if (temp11 < temp14 || is_zero) {\n        temp13 = temp13 - temp2;\n        temp5 = (temp14 - temp11) - (uint)!is_equal;\n      }\n      if (temp11 < temp14 || is_zero) {\n        temp12 = temp12 | temp3 >> 2;\n      }\n      temp6 = temp4 >> 3;\n      temp1 = (uint)((temp11 & 1) != 0) << 0x1f | temp2 >> 1;\n      is_equal = temp1 <= temp13;\n      is_zero = temp5 - temp6 < (uint)is_equal;\n      temp11 = temp5;\n      if (temp6 < temp5 || is_zero) {\n        temp13 = temp13 - temp1;\n        temp11 = (temp5 - temp6) - (uint)!is_equal;\n      }\n      if (temp6 < temp5 || is_zero) {\n        temp12 = temp12 | temp3 >> 3;\n      }\n      temp14 = temp11 | temp13;\n      if (temp14 == 0) break;\n      temp11 = temp11 << 4 | temp13 >> 0x1c;\n      temp13 = temp13 << 4;\n      temp4 = temp4 & 0xfffffff8 | temp1 >> 0x1d;\n      temp1 = (temp2 >> 1) << 3;\n      temp3 = temp3 >> 4;\n      if (temp3 == 0) {\n        temp6 = temp4;\n        if ((temp7 & 0x100000) != 0) goto LAB_080089b2;\n        temp7 = temp7 | temp12;\n        temp12 = 0;\n        temp3 = 0x80000000;\n      }\n    }\n    if ((temp7 & 0x100000) == 0) {\n      temp7 = temp7 | temp12;\n      temp12 = 0;\n    }\nLAB_080089b2:\n    flag3 = 0xfc < temp9;\n    is_equal = SBORROW4(temp9,0xfd);\n    temp4 = difference + 0x300;\n    is_zero = temp4 == 0;\n    temp3 = temp4;\n    if (flag3 && !is_zero) {\n      flag3 = 0x6ff < temp4;\n      is_equal = SBORROW4(temp4,0x700);\n      temp3 = difference - 0x400;\n      is_zero = temp4 == 0x700;\n    }\n    if (!flag3 || is_zero) {\n      is_zero = temp6 <= temp11;\n      if (temp11 == temp6) {\n        is_zero = temp1 <= temp13;\n      }\n      if (temp11 == temp6 && temp13 == temp1) {\n        is_zero = (temp12 & 1) != 0;\n      }\n      return CONCAT44(temp7 + temp9 * 0x100000 + (uint)CARRY4(temp12,(uint)is_zero),temp12 + is_zero);\n    }\n  }\n  if (!is_zero && (int)temp3 < 0 == is_equal) {\n    return (ulonglong)(temp7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag3 = SCARRY4(temp9,0x36);\n  is_zero = (int)(temp9 + 0x36) < 0;\n  is_equal = temp9 == 0xffffffca;\n  if (is_equal || is_zero != flag3) {\n    temp12 = 0;\n  }\n  if (is_equal || is_zero != flag3) {\n    temp7 = temp7 & 0x80000000;\n  }\n  if (is_equal || is_zero != flag3) {\n    return CONCAT44(temp7,temp12);\n  }\n  temp3 = -temp9;\n  temp11 = temp3 - 0x20;\n  if (0x1f < (int)temp3) {\n    temp3 = temp12 >> (temp11 & 0xff) | temp7 << (0x20 - temp11 & 0xff);\n    temp9 = (temp7 >> (temp11 & 0xff) & ~((temp7 & 0x80000000) >> (temp11 & 0xff))) -\n            ((int)temp3 >> 0x1f);\n    if ((temp14 | temp12 << (0x20 - temp11 & 0xff) | temp3 << 1) == 0) {\n      temp9 = temp9 & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44(temp7,temp9) & 0x80000000ffffffff;\n  }\n  difference = temp3 - 0x14;\n  if (difference != 0 && difference < 0 == SCARRY4(temp11,0xc)) {\n    temp9 = 0xc - difference;\n    temp3 = temp12 << (temp9 & 0xff);\n    temp12 = temp12 >> (0x20 - temp9 & 0xff) | temp7 << (temp9 & 0xff);\n    temp9 = temp12 + -((int)temp3 >> 0x1f);\n    if ((temp14 | temp3 << 1) == 0) {\n      temp9 = temp9 & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44((temp7 & 0x80000000) + (uint)CARRY4(temp12,-((int)temp3 >> 0x1f)),temp9);\n  }\n  temp11 = temp12 << (temp9 + 0x20 & 0xff);\n  temp12 = temp12 >> (temp3 & 0xff) | temp7 << (temp9 + 0x20 & 0xff);\n  temp9 = temp12 + -((int)temp11 >> 0x1f);\n  if ((temp14 | temp11 << 1) == 0) {\n    temp9 = temp9 & ~(temp11 >> 0x1f);\n  }\n  return CONCAT44((temp7 & 0x80000000) +\n                  ((temp7 & 0x7fffffff) >> (temp3 & 0xff)) +\n                  (uint)CARRY4(temp12,-((int)temp11 >> 0x1f)),temp9);\n}\n\n",
            "current_name": "calculate_floating_point_value_08008894",
            "entrypoint": "0x08008894",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008894": "calculate_floating_point_value_08008894",
                "bVar14": "is_zero",
                "bVar15": "is_equal",
                "bVar16": "flag3",
                "iVar8": "difference",
                "param_1": "sign",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp1",
                "uVar10": "temp11",
                "uVar11": "temp12",
                "uVar12": "temp13",
                "uVar13": "temp14",
                "uVar17": "result",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "uVar9": "temp9",
                "unaff_r5": "temp10"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008a02": {
            "additional_data": {
                "FUN_08008a02": {
                    "calculate_double": 2,
                    "calculate_float_bit_pattern": 1,
                    "calculate_float_representation": 1,
                    "calculate_float_value": 1,
                    "calculate_floating_point_value": 1,
                    "calculate_sign_bit": 1,
                    "convert_float_to_long": 1,
                    "convert_floating_point": 1,
                    "decode_and_shift": 1,
                    "extract_bits": 1,
                    "extract_nan_and_sign_bit": 1,
                    "extracted_binary_function": 1,
                    "extracted_function": 1,
                    "reverse_binary_calculation": 1,
                    "reverse_bits": 8,
                    "reverse_bits_and_shift": 1,
                    "reverse_bits_to_float": 1
                },
                "LAB_08008838": {
                    "return_condition2": 1
                },
                "LAB_08008874": {
                    "return_condition1": 1
                },
                "bVar4": {
                    "flag": 1,
                    "flag1": 1,
                    "is_zero": 24,
                    "is_zero_check": 1,
                    "temp_var6": 2,
                    "temp_var_6": 1
                },
                "in_r12": {
                    "bit4": 1,
                    "bit5": 5,
                    "bit_shift_amount": 1,
                    "constant": 3,
                    "constant_2": 1,
                    "exponent_part1_flag": 1,
                    "mask": 3,
                    "shift_bits": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp5": 3,
                    "temp_2": 2,
                    "temp_4": 1,
                    "temp_var2": 2,
                    "temp_var5": 2,
                    "temp_var_5": 1
                },
                "param_1": {
                    "dividend": 1,
                    "exponent": 1,
                    "float_value1": 1,
                    "input1": 19,
                    "input_1": 5,
                    "input_param_1": 2,
                    "mantissa_part1": 1,
                    "sign": 1
                },
                "param_2": {
                    "divisor": 1,
                    "exponent": 1,
                    "float_value2": 1,
                    "input2": 19,
                    "input_2": 5,
                    "input_param_2": 2,
                    "mantissa1": 1,
                    "mantissa_part2": 1
                },
                "param_3": {
                    "exponent2": 1,
                    "exponent_part1": 1,
                    "float_value3": 1,
                    "input3": 19,
                    "input_3": 5,
                    "input_param_3": 2,
                    "mantissa": 1,
                    "remainder": 1
                },
                "param_4": {
                    "exponent_part2": 1,
                    "float_value4": 1,
                    "fraction": 1,
                    "input4": 19,
                    "input_4": 5,
                    "input_param_4": 2,
                    "mantissa2": 1,
                    "value": 1
                },
                "uVar1": {
                    "bit": 1,
                    "bit1": 10,
                    "bit_1": 4,
                    "bit_check": 1,
                    "bit_mask_1": 1,
                    "shifted_input_1": 1,
                    "temp1": 2,
                    "temp2": 2,
                    "temp_bit1": 1,
                    "temp_var1": 3,
                    "temp_var3": 1,
                    "temp_var_1": 1
                },
                "uVar2": {
                    "bit2": 3,
                    "bit3": 5,
                    "bit_2": 3,
                    "bit_mask": 1,
                    "bit_mask_2": 1,
                    "masked_input": 1,
                    "shifted_input4": 1,
                    "shifted_temp_2": 1,
                    "shifted_value": 2,
                    "temp1": 1,
                    "temp2": 2,
                    "temp3": 3,
                    "temp_2": 1,
                    "temp_var3": 4,
                    "temp_var4": 1,
                    "temp_var_3": 1
                },
                "uVar3": {
                    "bit3": 3,
                    "bit4": 5,
                    "bit_3": 2,
                    "bit_mask_3": 1,
                    "bit_result": 1,
                    "new_remainder": 1,
                    "shifted_input_2": 1,
                    "temp": 2,
                    "temp2": 1,
                    "temp3": 2,
                    "temp4": 3,
                    "temp_3": 1,
                    "temp_input2": 1,
                    "temp_var4": 4,
                    "temp_var5": 1,
                    "temp_var_4": 1,
                    "updated_input_2": 1
                },
                "unaff_r4": {
                    "accumulator": 1,
                    "bit2": 6,
                    "comparison_value": 1,
                    "condition": 1,
                    "constant2": 1,
                    "constant_1": 1,
                    "divisor_copy": 1,
                    "exponent_part2_flag": 1,
                    "temp1": 5,
                    "temp2": 1,
                    "temp_1": 3,
                    "temp_input1": 1,
                    "temp_var1": 2,
                    "temp_var2": 3,
                    "temp_var_2": 1,
                    "temp_variable": 1,
                    "unset_var": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08008894"
            ],
            "code": "\nulonglong reverse_bits_to_float_08008a02(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint bit2;\n  uint bit3;\n  uint bit4;\n  uint bit5;\n  bool is_zero;\n  \n  bit3 = bit5 & input4 >> 0x14;\n  bit4 = input2;\n  if (bit2 != bit5 || bit3 != bit5) {\n    if (bit2 == bit5) {\n      if (((input1 | input2 << 0xc) == 0) && (input1 = input3, bit4 = input4, bit3 != bit5)\n         ) {\nreturn_condition1:\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (bit3 == bit5) {\n      input1 = input3;\n      bit4 = input4;\n      if ((input3 | input4 << 0xc) == 0) {\nreturn_condition2:\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      is_zero = (input1 | input2 << 1) == 0;\n      if (!is_zero) {\n        is_zero = (input3 | input4 << 1) == 0;\n      }\n      if (!is_zero) {\n        if (bit2 == 0) {\n          bit4 = input2 & 0x80000000;\n          do {\n            bit1 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(bit1 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | bit4;\n          if (bit3 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          bit4 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(bit4 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) goto return_condition1;\n      if ((input3 | input4 << 1) != 0) goto return_condition2;\n    }\n  }\n  return CONCAT44(bit4,input1) | 0x7ff8000000000000;\n}\n\n",
            "current_name": "reverse_bits_to_float_08008a02",
            "entrypoint": "0x08008a02",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008a02": "reverse_bits_to_float_08008a02",
                "LAB_08008838": "return_condition2",
                "LAB_08008874": "return_condition1",
                "bVar4": "is_zero",
                "in_r12": "bit5",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "uVar2": "bit3",
                "uVar3": "bit4",
                "unaff_r4": "bit2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008a74": {
            "additional_data": {
                "FUN_08008a74": {
                    "check_conditions": 3,
                    "check_equality": 4,
                    "check_equality_and_comparison": 1,
                    "check_equality_with_conditions": 1,
                    "check_parameter_equality": 1,
                    "check_parameters": 6,
                    "check_parameters_equality": 3,
                    "check_params": 2,
                    "check_params_and_compare": 1,
                    "check_params_match": 1,
                    "check_values_and_compare": 1,
                    "compare_and_check": 1,
                    "compare_parameters": 4,
                    "compare_params": 2
                },
                "bVar2": {
                    "are_parameters_equal": 1,
                    "are_parameters_zero": 1,
                    "are_values_equal": 1,
                    "are_values_zero": 1,
                    "is_all_zeros": 1,
                    "is_both_zero": 1,
                    "is_equal": 4,
                    "is_first_condition_true": 1,
                    "is_param1_or2_zero": 1,
                    "is_zero": 13,
                    "is_zero1": 4,
                    "parameters_zero": 1,
                    "params_are_zero": 1
                },
                "bVar3": {
                    "is_condition_met": 1,
                    "is_greater": 3,
                    "is_greater_or_equal": 1,
                    "is_less_than_or_equal": 1,
                    "is_negative": 10,
                    "is_negative_or_equal": 1,
                    "is_negative_xor_zero": 1,
                    "is_param3_or4_zero": 1,
                    "is_param4_less_than_or_equal_param2": 1,
                    "is_param4_less_than_or_equal_to_param2": 1,
                    "is_result_negative": 2,
                    "is_second_condition_true": 1,
                    "is_second_value_greater_than_first": 1,
                    "is_smaller": 1,
                    "is_smaller_or_equal": 1,
                    "is_zero2": 4
                },
                "bVar4": {
                    "is_value1_non_zero": 1
                },
                "bVar5": {
                    "is_value3_non_zero": 1
                },
                "param_1": {
                    "a": 7,
                    "first_param": 2,
                    "first_value": 1,
                    "input1": 1,
                    "input_1": 3,
                    "val1": 1,
                    "value1": 11,
                    "value_1": 5
                },
                "param_2": {
                    "b": 7,
                    "input2": 1,
                    "input_2": 3,
                    "second_param": 2,
                    "second_value": 1,
                    "val2": 1,
                    "value2": 11,
                    "value_2": 5
                },
                "param_2_shifted": {
                    "shifted_value2": 1
                },
                "param_2_shifted_negative": {
                    "is_shifted_value2_negative": 1
                },
                "param_3": {
                    "c": 6,
                    "input3": 1,
                    "input_3": 3,
                    "shifted_param3": 1,
                    "third_param": 2,
                    "third_value": 1,
                    "val3": 1,
                    "value3": 11,
                    "value_3": 5
                },
                "param_4": {
                    "d": 6,
                    "fourth_param": 2,
                    "fourth_value": 1,
                    "input4": 1,
                    "input_4": 3,
                    "shifted_param4": 1,
                    "val4": 1,
                    "value4": 11,
                    "value_4": 5
                },
                "param_4_shifted": {
                    "shifted_value4": 1
                },
                "param_4_shifted_negative": {
                    "is_shifted_value4_negative": 1
                },
                "return": {
                    "output": 2,
                    "result": 4
                },
                "uVar1": {
                    "difference": 1,
                    "result": 18,
                    "result_1": 1,
                    "temp1": 1,
                    "xor_result": 10
                }
            },
            "called": [],
            "calling": [
                "FUN_08008b00"
            ],
            "code": "\nuint check_parameters_equality_08008a74(uint value1,uint value2,uint value3,uint value4)\n\n{\n  uint result;\n  bool is_zero;\n  bool is_negative;\n  \n  if (((int)(value2 << 1) >> 0x15 == -1 || (int)(value4 << 1) >> 0x15 == -1) &&\n     ((((int)(value2 << 1) >> 0x15 == -1 && ((value1 | value2 << 0xc) != 0)) ||\n      (((int)(value4 << 1) >> 0x15 == -1 && ((value3 | value4 << 0xc) != 0)))))) {\n    result 1;\n  }\n  is_zero = (value1 | value2 << 1) == 0;\n  if (is_zero) {\n    is_zero = (value3 | value4 << 1) == 0;\n  }\n  if (!is_zero) {\n    is_zero = value2 == value4;\n  }\n  if (is_zero) {\n    is_zero = value1 == value3;\n  }\n  if (!is_zero) {\n    result = value2 ^ value4;\n    is_zero = result == 0;\n    if (-1 < (int)result) {\n      is_zero = value2 == value4;\n    }\n    is_negative = -1 < (int)result && value4 <= value2;\n    if (is_zero) {\n      is_negative = value3 <= value1;\n    }\n    value4 = (int)value4 >> 0x1f;\n    if (!is_negative) {\n      value4 = ~value4;\n    }\n    result value4 | 1;\n  }\n  result 0;\n}\n\n",
            "current_name": "check_parameters_equality_08008a74",
            "entrypoint": "0x08008a74",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008a74": "check_parameters_equality_08008a74",
                "bVar2": "is_zero",
                "bVar3": "is_negative",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "return": "result",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008af0": {
            "additional_data": {
                "FUN_08008af0": {
                    "call_subroutine": 1,
                    "execute_and_return": 1,
                    "execute_function": 19,
                    "execute_process": 1,
                    "initialize_function": 2,
                    "process_data": 3,
                    "process_parameters": 1,
                    "process_params": 1
                },
                "FUN_08008b00": {
                    "call_sub_function": 4,
                    "execute_sub_function": 1,
                    "handle_data": 1,
                    "invoke_sub_function": 1,
                    "process_data": 1,
                    "sub_function": 6
                },
                "F_08008af0": {
                    "process_params": 1
                },
                "param_1": {
                    "arg1": 9,
                    "arg_1": 1,
                    "argument1": 5,
                    "data1": 1,
                    "first_param": 1,
                    "first_parameter": 1,
                    "function_param1": 1,
                    "input1": 6,
                    "input_param1": 3,
                    "param1": 2,
                    "param_a": 1
                },
                "param_2": {
                    "arg2": 9,
                    "arg_2": 1,
                    "argument2": 5,
                    "data2": 1,
                    "function_param2": 1,
                    "input2": 6,
                    "input_param2": 3,
                    "param2": 2,
                    "param_b": 1,
                    "second_param": 1,
                    "second_parameter": 1
                },
                "param_3": {
                    "arg3": 9,
                    "arg_3": 1,
                    "argument3": 5,
                    "data3": 1,
                    "function_param3": 1,
                    "input3": 5,
                    "input_param3": 2,
                    "output_param1": 1,
                    "param3": 3,
                    "param_c": 1,
                    "third_param": 1,
                    "third_parameter": 1
                },
                "param_4": {
                    "arg4": 9,
                    "arg_4": 1,
                    "argument4": 5,
                    "data4": 1,
                    "fourth_param": 1,
                    "fourth_parameter": 1,
                    "function_param4": 1,
                    "input4": 5,
                    "input_param4": 2,
                    "output_param2": 1,
                    "param4": 3,
                    "param_d": 1
                }
            },
            "called": [
                "FUN_08008b00"
            ],
            "calling": [
                "FUN_08008b4c",
                "FUN_08008b60"
            ],
            "code": "\nvoid execute_function_08008af0(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08008b00(arg3,arg4,arg1,arg2);\n  return;\n}\n\n",
            "current_name": "execute_function_08008af0",
            "entrypoint": "0x08008af0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008af0": "execute_function_08008af0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008b00": {
            "additional_data": {
                "FUN_08008a74": {
                    "calculate_result": 2,
                    "execute_helper": 1,
                    "execute_subfunction": 1,
                    "execute_subroutine": 1,
                    "execute_task": 1,
                    "helper_function": 1,
                    "perform_additional_setup": 1,
                    "perform_calculation": 4,
                    "perform_operation": 17,
                    "reverse_data": 1
                },
                "FUN_08008a74_param_1": {
                    "helper_param_1": 1,
                    "input_1": 1,
                    "param1": 1,
                    "param_1": 1,
                    "value1": 1
                },
                "FUN_08008a74_param_2": {
                    "helper_param_2": 1,
                    "input_2": 1,
                    "param2": 1,
                    "param_2": 1,
                    "value2": 1
                },
                "FUN_08008a74_param_3": {
                    "helper_param_3": 1,
                    "input_3": 1,
                    "param3": 1,
                    "param_3": 1,
                    "value3": 1
                },
                "FUN_08008a74_param_4": {
                    "helper_param_4": 1,
                    "input_4": 1,
                    "param4": 1,
                    "param_4": 1,
                    "value4": 1
                },
                "FUN_08008b00": {
                    "execute_algorithm": 1,
                    "execute_and_return": 4,
                    "execute_and_return_param": 2,
                    "execute_and_return_result": 1,
                    "execute_function": 6,
                    "execute_operation": 1,
                    "initialize": 5,
                    "initialize_and_return": 3,
                    "initialize_and_return_value": 1,
                    "initialize_application": 1,
                    "initialize_function": 1,
                    "initialize_param": 1,
                    "initialize_program": 1
                },
                "param_1": {
                    "argument": 1,
                    "input": 9,
                    "input_param": 5,
                    "input_parameter": 2,
                    "input_value": 9,
                    "operation_code": 1,
                    "param_1": 1,
                    "result": 1,
                    "user_input": 1,
                    "value": 1
                },
                "param_2": {
                    "arg1": 1,
                    "calculation_param_1": 2,
                    "input_1": 1,
                    "operand1": 4,
                    "param_2": 2,
                    "param_a": 1,
                    "start_address": 1,
                    "subfunc_param_1": 1,
                    "value1": 3,
                    "value_2": 2,
                    "variable1": 1
                },
                "param_3": {
                    "arg2": 1,
                    "calculation_param_2": 2,
                    "end_address": 1,
                    "input_2": 1,
                    "operand2": 4,
                    "param_3": 2,
                    "param_b": 1,
                    "subfunc_param_2": 1,
                    "value2": 3,
                    "value_3": 2,
                    "variable2": 1
                },
                "param_4": {
                    "arg3": 1,
                    "calculation_param_3": 2,
                    "flags": 1,
                    "input_3": 1,
                    "operand3": 4,
                    "param_4": 2,
                    "param_c": 1,
                    "subfunc_param_3": 1,
                    "value3": 3,
                    "value_4": 2,
                    "variable3": 1
                },
                "uint": {
                    "unsigned_int": 1
                }
            },
            "called": [
                "FUN_08008a74"
            ],
            "calling": [
                "FUN_08008b24",
                "FUN_08008af0",
                "FUN_08008b10"
            ],
            "code": "\nundefined4 initialize_and_return_value_08008b00(undefined4 input)\n\n{\n  FUN_08008a74();\n  return input;\n}\n\n",
            "current_name": "initialize_and_return_value_08008b00",
            "entrypoint": "0x08008b00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008b00": "initialize_and_return_value_08008b00",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008b10": {
            "additional_data": {
                "FUN_08008b00": {
                    "call_function": 1,
                    "call_sub_function": 1,
                    "execute_initialization_logic": 1,
                    "initialize_character": 1,
                    "initialize_input": 2,
                    "initialize_zr": 2
                },
                "FUN_08008b10": {
                    "check_if_char_not_zero": 1,
                    "check_if_condition_is_true": 1,
                    "check_if_flag_is_set": 1,
                    "check_if_in_zr_is_not_null": 1,
                    "check_if_initialized": 5,
                    "check_if_input_is_not_empty": 1,
                    "check_if_input_is_not_null": 1,
                    "check_if_input_is_valid": 1,
                    "check_if_input_not_empty": 1,
                    "check_if_nonzero": 2,
                    "check_if_not_null": 2,
                    "check_if_result_not_zero": 1,
                    "check_if_zero": 1,
                    "check_if_zr_is_not_null": 1,
                    "check_in_zr": 1,
                    "check_input": 1,
                    "check_input_char": 1,
                    "check_input_validity": 1,
                    "check_result_of_function": 1,
                    "is_character_non_null": 1,
                    "is_function_successful": 1,
                    "is_input_empty": 1,
                    "is_nonzero": 1,
                    "is_not_zero": 1,
                    "is_zr_nonzero": 1
                },
                "in_ZR": {
                    "character": 2,
                    "check_result": 1,
                    "flag": 2,
                    "input_char": 6,
                    "input_character": 1,
                    "input_is_valid": 1,
                    "input_valid": 1,
                    "input_variable": 1,
                    "is_condition_true": 1,
                    "is_initialized": 5,
                    "is_valid_input": 1,
                    "result": 6,
                    "status": 2,
                    "zr": 1
                }
            },
            "called": [
                "FUN_08008b00"
            ],
            "calling": [
                "FUN_0800a5a0",
                "FUN_08009d78"
            ],
            "code": "\nbool check_if_initialized_08008b10(void)\n\n{\n  char result;\n  \n  FUN_08008b00();\n  return result != '\\0';\n}\n\n",
            "current_name": "check_if_initialized_08008b10",
            "entrypoint": "0x08008b10",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008b10": "check_if_initialized_08008b10",
                "in_ZR": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008b24": {
            "additional_data": {
                "FUN_08008b00": {
                    "call_relevant_function": 1,
                    "helper_func": 1,
                    "initialize_input": 1,
                    "initialize_variable": 1,
                    "perform_additional_checks": 1
                },
                "FUN_08008b24": {
                    "check_for_null_termination": 1,
                    "check_if_char_is_zero": 1,
                    "check_if_cy_is_null": 1,
                    "check_if_in_cy_is_null": 1,
                    "check_if_input_empty": 2,
                    "check_if_input_is_empty": 3,
                    "check_if_input_is_null": 1,
                    "check_if_input_is_valid": 1,
                    "check_if_null_character": 1,
                    "check_if_string_empty": 1,
                    "check_null_terminated": 1,
                    "check_null_termination": 1,
                    "is_cy_empty": 1,
                    "is_cy_null": 2,
                    "is_end_of_input": 1,
                    "is_in_cy_null": 1,
                    "is_input_empty": 4,
                    "is_input_null": 2,
                    "is_null_byte_present": 1,
                    "is_null_character": 1,
                    "is_null_terminated": 1,
                    "is_null_terminated_string": 1,
                    "is_string_null_terminated": 1
                },
                "in_CY": {
                    "character": 2,
                    "cy": 2,
                    "cy_input": 1,
                    "input_char": 9,
                    "input_character": 14,
                    "input_value": 1,
                    "last_character_of_string": 1,
                    "termination_char": 1
                }
            },
            "called": [
                "FUN_08008b00"
            ],
            "calling": [
                "FUN_08009b24",
                "FUN_080098d0",
                "FUN_08003004"
            ],
            "code": "\nbool check_if_input_is_empty_08008b24(void)\n\n{\n  char input_character;\n  \n  FUN_08008b00();\n  return input_character == '\\0';\n}\n\n",
            "current_name": "check_if_input_is_empty_08008b24",
            "entrypoint": "0x08008b24",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008b24": "check_if_input_is_empty_08008b24",
                "in_CY": "input_character"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008b4c": {
            "additional_data": {
                "FUN_08008af0": {
                    "calculate_parameters": 1,
                    "execute_subfunction": 2,
                    "execute_subfunctions": 1,
                    "initialize_flags": 1,
                    "initialize_variables": 2,
                    "perform_initialization": 2,
                    "perform_operations": 2
                },
                "FUN_08008b4c": {
                    "check_carry_and_zero": 3,
                    "check_carry_or_zero": 1,
                    "check_carry_zero": 2,
                    "check_condition": 3,
                    "check_conditions": 4,
                    "check_conditions_and_return": 1,
                    "check_cy_and_zr": 4,
                    "check_cy_or_zr": 1,
                    "check_cy_zr": 1,
                    "check_cy_zr_flags": 1,
                    "check_error_condition": 1,
                    "check_flags": 1,
                    "check_input_conditions": 1,
                    "check_reversed_conditions": 1,
                    "check_zero_flag_and_carry_flag": 1,
                    "check_zr_and_cy": 1,
                    "is_cy_or_zr_true": 1,
                    "is_cy_or_zr_zero": 1,
                    "is_cy_zero_or_zr": 1,
                    "should_execute_function": 1
                },
                "PTR_FUN_08008af0": {
                    "sub_function": 1
                },
                "in_CY": {
                    "carry": 2,
                    "carry_flag": 13,
                    "is_carry": 2,
                    "is_carry_flag_set": 1,
                    "is_carry_set": 1,
                    "is_condition_met_1": 1,
                    "is_cy_flag_set": 1,
                    "is_last_carry": 1
                },
                "in_ZR": {
                    "is_condition_met_2": 1,
                    "is_zero": 3,
                    "is_zero_flag_set": 3,
                    "is_zero_result": 1,
                    "zero": 2,
                    "zero_flag": 12
                },
                "param_1": {
                    "param1": 1,
                    "unused_param1": 1,
                    "unused_param_1": 1
                },
                "param_2": {
                    "param2": 1,
                    "unused_param2": 1,
                    "unused_param_2": 1
                },
                "param_3": {
                    "param3": 1,
                    "unused_param3": 1,
                    "unused_param_3": 1
                },
                "param_4": {
                    "param4": 1,
                    "unused_param4": 1,
                    "unused_param_4": 1
                }
            },
            "called": [
                "FUN_08008af0"
            ],
            "calling": [
                "FUN_0800a5a0"
            ],
            "code": "\nbool is_cy_or_zr_true_08008b4c(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_08008af0();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "current_name": "is_cy_or_zr_true_08008b4c",
            "entrypoint": "0x08008b4c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008b4c": "is_cy_or_zr_true_08008b4c",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008b60": {
            "additional_data": {
                "FUN_08008af0": {
                    "execute_preparation": 1,
                    "initialize_func": 1,
                    "perform_initialization": 2
                },
                "FUN_08008b60": {
                    "check_if_cy_is_null": 1,
                    "check_if_empty": 1,
                    "check_if_in_cy_is_null": 1,
                    "check_if_in_cy_is_zero": 1,
                    "check_if_input_empty": 3,
                    "check_if_input_is_empty": 1,
                    "check_if_null_character": 1,
                    "check_if_null_terminated": 1,
                    "check_if_string_empty": 1,
                    "check_if_string_ends_with_null": 1,
                    "check_if_zero": 1,
                    "check_input_string_is_null": 1,
                    "check_null_termination": 2,
                    "is_cy_null": 4,
                    "is_in_cy_null": 1,
                    "is_input_empty": 2,
                    "is_null_byte_present": 1,
                    "is_null_terminated": 2,
                    "is_string_empty": 5
                },
                "in_CY": {
                    "char_value": 2,
                    "character": 2,
                    "check_byte": 1,
                    "checking_cy": 1,
                    "input_char": 9,
                    "input_character": 12,
                    "input_cy": 1,
                    "input_string_is_null": 1,
                    "is_cy_null": 1,
                    "termination_check": 1
                }
            },
            "called": [
                "FUN_08008af0"
            ],
            "calling": [
                "FUN_08003004",
                "FUN_08009318",
                "FUN_080094c0",
                "FUN_0800af78"
            ],
            "code": "\nbool check_if_in_cy_is_zero_08008b60(void)\n\n{\n  char input_character;\n  \n  FUN_08008af0();\n  return input_character == '\\0';\n}\n\n",
            "current_name": "check_if_in_cy_is_zero_08008b60",
            "entrypoint": "0x08008b60",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008b60": "check_if_in_cy_is_zero_08008b60",
                "in_CY": "input_character"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008b74": {
            "additional_data": {
                "FUN_08008b74": {
                    "check_conditions": 3,
                    "check_input_validity": 3,
                    "check_parameters": 7,
                    "check_parameters_validity": 2,
                    "check_params": 8,
                    "check_valid_inputs": 1,
                    "check_validity": 1,
                    "is_input_valid": 1,
                    "is_valid": 1,
                    "is_valid_combination": 1,
                    "is_valid_parameters": 3
                },
                "param_1": {
                    "first_param": 1,
                    "input1": 7,
                    "input_1": 6,
                    "input_value_1": 1,
                    "value1": 12,
                    "value_1": 4
                },
                "param_2": {
                    "input2": 7,
                    "input_2": 6,
                    "input_value_2": 1,
                    "second_param": 1,
                    "value2": 12,
                    "value_2": 4
                },
                "param_3": {
                    "input3": 7,
                    "input_3": 6,
                    "input_value_3": 1,
                    "third_param": 1,
                    "value3": 12,
                    "value_3": 4
                },
                "param_4": {
                    "fourth_param": 1,
                    "input4": 7,
                    "input_4": 6,
                    "input_value_4": 1,
                    "value4": 12,
                    "value_4": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_080098d0"
            ],
            "code": "\nundefined4 check_parameters_validity_08008b74(uint value1,int value2,uint value3,int value4)\n\n{\n  if ((((value2 << 1) >> 0x15 != -1) || ((value1 | value2 << 0xc) == 0)) &&\n     (((value4 << 1) >> 0x15 != -1 || ((value3 | value4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "check_parameters_validity_08008b74",
            "entrypoint": "0x08008b74",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008b74": "check_parameters_validity_08008b74",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008ba0": {
            "additional_data": {
                "FUN_08008ba0": {
                    "calculate_converted_value": 1,
                    "calculate_integer": 1,
                    "calculate_result": 4,
                    "calculate_shifted_value": 1,
                    "calculate_signed_division": 1,
                    "calculate_unsigned_division": 1,
                    "calculate_updated_value": 1,
                    "convert_to_positive_integer": 1,
                    "convert_to_twos_complement": 1,
                    "decode_and_shift": 1,
                    "extract_bits": 1,
                    "perform_calculation": 1,
                    "perform_operation": 1,
                    "process_input": 1,
                    "process_values": 1,
                    "reverse_and_shift": 1,
                    "reverse_arithmetic_limits": 1,
                    "reverse_bits": 3,
                    "reverse_bits_and_shift": 1,
                    "reverse_integer": 1
                },
                "iVar2": {
                    "adjusted_divisor": 2,
                    "adjusted_value": 1,
                    "calculated_value": 2,
                    "calculation": 1,
                    "modified_input2": 1,
                    "multiplied_val": 1,
                    "multiplied_value": 8,
                    "offset": 3,
                    "offset_value": 1,
                    "result2": 2,
                    "shifted_offset": 1,
                    "shifted_value": 1,
                    "temp": 1,
                    "temp_value": 1,
                    "temp_value_2": 1,
                    "temp_var": 1
                },
                "param_1": {
                    "dividend": 2,
                    "input": 1,
                    "input1": 9,
                    "input_1": 4,
                    "input_integer": 1,
                    "input_value": 7,
                    "input_value1": 1,
                    "input_value_1": 5,
                    "value1": 1
                },
                "param_2": {
                    "adjusted_input_2": 1,
                    "bit_count": 1,
                    "clamped_input_value_2": 1,
                    "clamped_value": 1,
                    "divisor": 2,
                    "input2": 8,
                    "input_2": 3,
                    "input_number": 1,
                    "input_value2": 1,
                    "input_value_2": 4,
                    "mask": 1,
                    "masked_value": 1,
                    "shift_amount": 3,
                    "shift_count": 1,
                    "shift_value": 1,
                    "shifted_amount": 1
                },
                "uVar1": {
                    "adjusted_result": 1,
                    "computed_value": 1,
                    "final_result": 2,
                    "final_shifted_value": 1,
                    "modified_result": 1,
                    "output_value": 1,
                    "quotient": 1,
                    "result": 5,
                    "result1": 1,
                    "result4": 1,
                    "shifted_result": 1,
                    "shifted_value": 11,
                    "temp_value_1": 1
                },
                "uVar3": {
                    "adjusted_result": 1,
                    "adjusted_shift": 2,
                    "adjusted_value": 2,
                    "computed_value": 1,
                    "final_result": 1,
                    "mask": 3,
                    "modified_value": 2,
                    "negative_offset": 1,
                    "offset": 1,
                    "result": 1,
                    "result3": 2,
                    "result_value": 1,
                    "shift_amount": 2,
                    "shifted_amount": 1,
                    "shifted_offset": 1,
                    "shifted_value": 1,
                    "shifted_value_modified": 1,
                    "subtraction_result": 1,
                    "temp_value": 2,
                    "temp_value_3": 1
                },
                "uVar4": {
                    "bit_shifted_value": 1,
                    "temp_value_4": 1
                },
                "uVar5": {
                    "temp_value_5": 1
                },
                "uVar6": {
                    "temp_value_6": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800a5a0",
                "FUN_0800adf0",
                "FUN_0800a348",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_08009d78",
                "FUN_080095b8",
                "FUN_08002c18"
            ],
            "code": "\nuint reverse_bits_and_shift_08008ba0(uint input1,uint input2)\n\n{\n  uint shifted_value;\n  int multiplied_value;\n  uint mask;\n  \n  multiplied_value = input2 * 2 + 0x200000;\n  if (input2 * 2 < 0xffe00000) {\n    if (-1 < multiplied_value) {\n      return 0;\n    }\n    shifted_value = multiplied_value >> 0x15;\n    mask = -shifted_value - 0x3e1;\n    if (shifted_value < 0xfffffc20 && mask != 0) {\n      shifted_value = (input2 << 0xb | 0x80000000 | input1 >> 0x15) >> (mask & 0xff);\n      if ((input2 & 0x80000000) != 0) {\n        shifted_value = -shifted_value;\n      }\n      return shifted_value;\n    }\n  }\n  else if ((input1 | input2 << 0xc) != 0) {\n    return 0;\n  }\n  input2 = input2 & 0x80000000;\n  if (input2 == 0) {\n    input2 = 0x7fffffff;\n  }\n  return input2;\n}\n\n",
            "current_name": "reverse_bits_and_shift_08008ba0",
            "entrypoint": "0x08008ba0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008ba0": "reverse_bits_and_shift_08008ba0",
                "iVar2": "multiplied_value",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "shifted_value",
                "uVar3": "mask"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008bf0": {
            "additional_data": {
                "0x15": {
                    "shift_value": 1
                },
                "0x200000": {
                    "constant_a": 1
                },
                "0x3e1": {
                    "adjustment": 1
                },
                "0x80000000": {
                    "sign_bit": 1
                },
                "0xb": {
                    "shift_amount": 1
                },
                "0xffe00000": {
                    "upper_limit": 1
                },
                "FUN_08008bf0": {
                    "calculate_dividend": 1,
                    "calculate_result": 1,
                    "calculate_shift_amount": 2,
                    "calculate_shift_value": 2,
                    "calculate_shifted_and_masked_value": 1,
                    "calculate_shifted_bits": 1,
                    "calculate_shifted_result": 1,
                    "calculate_shifted_value": 9,
                    "check_and_shift": 1,
                    "convert_and_shift": 1,
                    "convert_to_signed_integer": 1,
                    "divide_with_shift": 1,
                    "range_check": 1,
                    "reverse_bit_shift": 1,
                    "reverse_bits": 1,
                    "validate_number": 1,
                    "validate_param": 1,
                    "validate_parameters": 1
                },
                "iVar1": {
                    "multiplier": 1,
                    "offset": 1,
                    "result": 1,
                    "shifted_dividend": 1,
                    "shifted_mask": 1,
                    "shifted_result": 2,
                    "shifted_sum": 1,
                    "shifted_value": 15,
                    "temp": 1,
                    "temp1": 3,
                    "temp_shifted_value": 1,
                    "temp_var": 1
                },
                "param_1": {
                    "dividend": 1,
                    "divisor": 1,
                    "input": 1,
                    "input1": 5,
                    "input_1": 1,
                    "input_param": 1,
                    "input_param_1": 2,
                    "input_parameter_1": 1,
                    "input_value": 10,
                    "input_value_1": 3,
                    "num": 1,
                    "number": 1,
                    "value": 1,
                    "value1": 1,
                    "value_1": 1
                },
                "param_2": {
                    "bit_mask": 1,
                    "bitmask": 1,
                    "dividend": 1,
                    "divisor": 1,
                    "flag": 1,
                    "input2": 5,
                    "input_2": 1,
                    "input_param_2": 2,
                    "input_parameter_2": 1,
                    "input_value_2": 3,
                    "limit": 1,
                    "mask": 1,
                    "multiplier": 2,
                    "shift_amount": 7,
                    "shift_param": 1,
                    "value2": 1,
                    "value_2": 1
                },
                "uVar2": {
                    "bit_count": 1,
                    "dividend_shift": 1,
                    "negative_shifted_value": 1,
                    "result": 1,
                    "shift": 1,
                    "shift_amount": 13,
                    "shift_count": 4,
                    "shift_value": 1,
                    "shifted_amount": 2,
                    "shifted_result": 1,
                    "shifting_factor": 1,
                    "temp2": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08001f00",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08003004",
                "FUN_08002408",
                "FUN_08003b98",
                "FUN_08002c18",
                "FUN_08001994"
            ],
            "code": "\nuint calculate_shifted_and_masked_value_08008bf0(uint input_value,uint shift_amount)\n\n{\n  int shifted_value;\n  uint shift_amount;\n  \n  if ((shift_amount & 0x80000000) != 0) {\n    return 0;\n  }\n  shifted_value = shift_amount * 2 + 0x200000;\n  if (shift_amount * 2 < 0xffe00000) {\n    if (-1 < shifted_value) {\n      return 0;\n    }\n    shift_amount = -(shifted_value >> 0x15) - 0x3e1;\n    if (-1 < (int)shift_amount) {\n      return (shift_amount << 0xb | 0x80000000 | input_value >> 0x15) >> (shift_amount & 0xff);\n    }\n  }\n  else if ((input_value | shift_amount << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "calculate_shifted_and_masked_value_08008bf0",
            "entrypoint": "0x08008bf0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008bf0": "calculate_shifted_and_masked_value_08008bf0",
                "iVar1": "shifted_value",
                "param_1": "input_value",
                "param_2": "shift_amount",
                "uVar2": "shift_amount"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008c30": {
            "additional_data": {
                "FUN_08008c30": {
                    "calculate_float": 8,
                    "calculate_float_bits": 1,
                    "calculate_float_exponent": 1,
                    "calculate_float_number": 1,
                    "calculate_float_representation": 1,
                    "calculate_float_value": 5,
                    "calculate_floating_point": 4,
                    "calculate_floating_point_number": 1,
                    "calculate_modified_floating_point": 1,
                    "calculate_normalized_float": 1,
                    "calculate_square_root": 1,
                    "convert_float_to_integer": 1,
                    "convert_to_float": 2,
                    "float_to_uint": 2,
                    "reverse_bits_and_increment": 1
                },
                "SCARRY4": {
                    "carry_check": 1,
                    "helper_function": 1,
                    "is_carry": 1,
                    "is_carry_set": 1,
                    "is_subtraction_overflow": 1,
                    "overflow_check": 1
                },
                "bVar4": {
                    "check1": 2,
                    "flag1": 1,
                    "is_adjusted_bit_count_zero": 1,
                    "is_zero": 26,
                    "temp4": 1
                },
                "bVar5": {
                    "check2": 2,
                    "cond": 1,
                    "flag2": 1,
                    "is_below_threshold": 1,
                    "is_in_range": 4,
                    "is_less": 1,
                    "is_less_than": 6,
                    "is_less_than0x70000000": 1,
                    "is_less_than2_billion": 1,
                    "is_less_than_limit": 1,
                    "is_less_than_threshold": 6,
                    "is_negative": 1,
                    "is_shifted_bit_count_valid": 1,
                    "is_small_value": 1,
                    "is_under_threshold": 1,
                    "is_valid": 1,
                    "temp5": 1
                },
                "in_r12": {
                    "additional_value": 1,
                    "adjusted_bit_count_alt": 1,
                    "adjusted_multiplier_with_offset": 1,
                    "alternate_increment_value": 1,
                    "alternate_value": 1,
                    "alternative_result": 1,
                    "comparison_float": 1,
                    "comparison_value": 1,
                    "condition": 1,
                    "constant_value": 1,
                    "extra_var1": 1,
                    "high_exp": 1,
                    "in_range": 1,
                    "initial_value": 1,
                    "masked_value": 1,
                    "modified_double_multiplier": 1,
                    "result2": 1,
                    "shifted_value2": 1,
                    "static_value": 1,
                    "temp1": 1,
                    "temp3": 6,
                    "temp_value": 1,
                    "temp_value1": 1,
                    "temp_var": 1,
                    "temp_variable1": 1,
                    "threshold": 1
                },
                "param_1": {
                    "float_number1": 1,
                    "float_value": 3,
                    "input": 2,
                    "input1": 7,
                    "input_1": 1,
                    "input_float": 6,
                    "input_number": 2,
                    "input_value": 7,
                    "integer_part": 1,
                    "number": 1
                },
                "param_2": {
                    "bit_count": 1,
                    "control_bits": 1,
                    "exp_value": 1,
                    "flags": 3,
                    "float_number2": 1,
                    "fractional_part": 1,
                    "input2": 7,
                    "input_2": 1,
                    "input_bits": 1,
                    "input_flag": 1,
                    "input_float2": 1,
                    "input_mask": 1,
                    "input_sign": 1,
                    "multiplier": 5,
                    "original_bits": 1,
                    "param_multiplier": 1,
                    "shift_amount": 3
                },
                "uVar1": {
                    "converted_value": 1,
                    "final_result": 1,
                    "float_rep": 1,
                    "output_bits": 1,
                    "result": 26,
                    "result_float": 1
                },
                "uVar2": {
                    "double_bits": 1,
                    "double_multiplier": 1,
                    "doubled_multiplier": 1,
                    "exp_times_two": 1,
                    "input_2_double": 1,
                    "masked_value": 1,
                    "modified_multiplier": 1,
                    "multiplied_float": 1,
                    "multiplied_fractional_part": 1,
                    "multiplied_value": 3,
                    "multiplier": 1,
                    "multiplier_twice": 1,
                    "scaled_input": 1,
                    "shift_count": 1,
                    "shifted_bit_count": 1,
                    "shifted_bits": 1,
                    "shifted_value": 3,
                    "temp1": 10
                },
                "uVar3": {
                    "adjusted_bit_count": 1,
                    "adjusted_bits": 1,
                    "adjusted_float": 1,
                    "adjusted_multiplier": 2,
                    "adjusted_value": 3,
                    "converted_bits": 1,
                    "increment_value": 1,
                    "modified_fractional_part": 1,
                    "modified_input_2_double": 1,
                    "modified_multiplier": 1,
                    "normalized_exp": 1,
                    "normalized_value": 1,
                    "offset_value": 1,
                    "scaled_input_plus_offset": 1,
                    "shifted_value": 1,
                    "temp": 2,
                    "temp2": 10,
                    "updated_multiplier": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001f00",
                "FUN_080046d0",
                "FUN_08002978",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08004940",
                "FUN_0800056c",
                "FUN_080044e8",
                "FUN_08001994"
            ],
            "code": "\nuint calculate_float_value_08008c30(uint input_value,uint input2)\n\n{\n  uint result;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  bool is_zero;\n  bool is_less_than_threshold;\n  \n  temp1 = input2 * 2;\n  is_less_than_threshold = temp1 < 0x70000000;\n  temp2 = temp1 + 0x90000000;\n  result = temp2;\n  if (!is_less_than_threshold) {\n    temp3 = temp1 + 0x8fe00000;\n    result = temp3;\n  }\n  is_zero = result == 0;\n  if (!is_less_than_threshold && temp2 >= 0x200000) {\n    is_zero = temp3 == 0x1fc00000;\n  }\n  if (((is_less_than_threshold || temp2 < 0x200000) || 0x1fc00000 < temp3) || is_zero) {\n    if ((input2 & 0x40000000) != 0) {\n      if (((int)temp1 >> 0x15 == -1) && ((input_value | input2 << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return input2 & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(temp1 + 0x92e00000) < 0 != helper_function(temp2,0x2e00000)) {\n      return input2 & 0x80000000;\n    }\n    temp1 = 0x18 - (temp1 + 0x92e00000 >> 0x15);\n    result = input_value >> (temp1 & 0xff);\n    if (input_value << (0x20 - temp1 & 0xff) != 0) {\n      result = result | 1;\n    }\n    temp2 = input2 & 0x1fffff | 0x100000;\n    input_value = result | temp2 << (0x20 - temp1 & 0xff);\n    temp2 = (temp2 >> (temp1 & 0xff)) << 1;\n  }\n  result = (input2 & 0x80000000 | input_value >> 0x1d) + temp2 * 4 + (uint)(0x7fffffff < input_value * 8);\n  if (input_value * 8 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_float_value_08008c30",
            "entrypoint": "0x08008c30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008c30": "calculate_float_value_08008c30",
                "SCARRY4": "helper_function",
                "bVar4": "is_zero",
                "bVar5": "is_less_than_threshold",
                "in_r12": "temp3",
                "param_1": "input_value",
                "param_2": "input2",
                "uVar1": "result",
                "uVar2": "temp1",
                "uVar3": "temp2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008cd8": {
            "additional_data": {
                "FUN_08008cd8": {
                    "bitwise_operation": 1,
                    "calculate_float": 8,
                    "calculate_float_addition": 1,
                    "calculate_floating_point": 2,
                    "calculate_new_float": 2,
                    "calculate_unsigned_division": 1,
                    "calculate_updated_float": 1,
                    "convert_float_to_u_int": 1,
                    "perform_arithmetic": 1,
                    "perform_arithmetic_operation": 2,
                    "perform_calculation": 1,
                    "rearrange_bits": 1,
                    "reverse_binary_operation": 1,
                    "reverse_bits": 6,
                    "reverse_bitwise_operation": 2
                },
                "LZCOUNT": {
                    "leading_zeros_count": 1
                },
                "bVar8": {
                    "b_flag": 1,
                    "check": 1,
                    "condition": 2,
                    "condition_check": 1,
                    "flag": 1,
                    "is_condition_met": 3,
                    "is_condition_true": 2,
                    "is_equal": 10,
                    "is_match": 1,
                    "is_matched": 1,
                    "is_negative": 1,
                    "is_true": 2,
                    "is_zero": 4
                },
                "iVar1": {
                    "first_shift_result": 1,
                    "leftmost_bit_input": 1,
                    "msb_float_value": 1,
                    "msb_mask": 1,
                    "shift1": 3,
                    "shift_amount": 1,
                    "shift_amount1": 1,
                    "shift_bit": 1,
                    "shift_bits": 1,
                    "shift_value": 1,
                    "shifted_addend": 1,
                    "shifted_float": 1,
                    "shifted_float1": 1,
                    "shifted_input": 2,
                    "shifted_input1": 5,
                    "shifted_input1_msb": 1,
                    "shifted_input_sign_bit": 1,
                    "shifted_value1_msb": 1,
                    "sign_bit1": 2,
                    "signed_shift1": 1,
                    "temp_var1": 1,
                    "val1": 1
                },
                "iVar2": {
                    "leftmost_bit_mask": 1,
                    "msb_mask": 1,
                    "msb_shifted": 1,
                    "second_shift_result": 1,
                    "shift2": 3,
                    "shift_amount2": 2,
                    "shift_bit2": 1,
                    "shift_bits_2": 1,
                    "shifted_float2": 2,
                    "shifted_input2": 5,
                    "shifted_input2_msb": 1,
                    "shifted_mask": 2,
                    "shifted_result_sign_bit": 1,
                    "shifted_sum": 1,
                    "shifted_value": 1,
                    "shifted_value2_msb": 1,
                    "sign_bit2": 2,
                    "signed_shift2": 1,
                    "temp_var2": 1,
                    "val2": 1
                },
                "param_1": {
                    "addend": 1,
                    "dividend": 1,
                    "float_value": 1,
                    "input": 4,
                    "input1": 14,
                    "input_1": 2,
                    "input_float1": 1,
                    "input_num": 1,
                    "input_value": 2,
                    "old_float1": 1,
                    "original_float": 1,
                    "value": 1,
                    "value1": 1
                },
                "param_2": {
                    "divisor": 1,
                    "input2": 14,
                    "input_2": 2,
                    "input_float2": 1,
                    "input_u_int": 1,
                    "mask": 6,
                    "mask_num": 1,
                    "mask_value": 1,
                    "old_float2": 1,
                    "original_val": 1,
                    "sum": 1,
                    "value2": 1
                },
                "param_3": {
                    "constant": 3,
                    "constant_value": 1,
                    "flag": 2,
                    "flags": 2,
                    "input3": 10,
                    "input_value": 1,
                    "param3": 3,
                    "parameter_3": 1,
                    "precision": 1,
                    "shift": 1,
                    "temp": 2,
                    "temp_param": 1,
                    "unknown": 1,
                    "unknown_val": 1,
                    "unused_param": 1
                },
                "param_4": {
                    "bitwise_operation_result": 1,
                    "input4": 10,
                    "input_3": 1,
                    "loop_count": 1,
                    "output": 2,
                    "param4": 3,
                    "result": 6,
                    "result_u_int": 1,
                    "rounding_mode": 1,
                    "shift": 1,
                    "shift_num": 1,
                    "shift_value": 1,
                    "temp": 1,
                    "temp_result": 1
                },
                "uVar10": {
                    "shifted_updated_masked_input1": 1,
                    "temp2": 1
                },
                "uVar100": {
                    "temp92": 1
                },
                "uVar101": {
                    "temp93": 1
                },
                "uVar102": {
                    "temp94": 1
                },
                "uVar103": {
                    "temp95": 1
                },
                "uVar104": {
                    "temp96": 1
                },
                "uVar105": {
                    "temp97": 1
                },
                "uVar106": {
                    "temp98": 1
                },
                "uVar107": {
                    "temp99": 1
                },
                "uVar108": {
                    "temp100": 1
                },
                "uVar109": {
                    "temp101": 1
                },
                "uVar11": {
                    "shifted_updated_masked_input2": 1,
                    "temp3": 1
                },
                "uVar110": {
                    "temp102": 1
                },
                "uVar111": {
                    "temp103": 1
                },
                "uVar112": {
                    "temp104": 1
                },
                "uVar113": {
                    "temp105": 1
                },
                "uVar114": {
                    "temp106": 1
                },
                "uVar115": {
                    "temp107": 1
                },
                "uVar116": {
                    "temp108": 1
                },
                "uVar117": {
                    "temp109": 1
                },
                "uVar118": {
                    "temp110": 1
                },
                "uVar119": {
                    "temp111": 1
                },
                "uVar12": {
                    "adjusted_shifted_masked_input1": 1,
                    "temp4": 1
                },
                "uVar120": {
                    "temp112": 1
                },
                "uVar121": {
                    "temp113": 1
                },
                "uVar122": {
                    "temp114": 1
                },
                "uVar123": {
                    "temp115": 1
                },
                "uVar124": {
                    "temp116": 1
                },
                "uVar125": {
                    "temp117": 1
                },
                "uVar126": {
                    "temp118": 1
                },
                "uVar127": {
                    "temp119": 1
                },
                "uVar13": {
                    "adjusted_shifted_masked_input2": 1,
                    "temp5": 1
                },
                "uVar14": {
                    "temp6": 1
                },
                "uVar15": {
                    "temp7": 1
                },
                "uVar16": {
                    "temp8": 1
                },
                "uVar17": {
                    "temp9": 1
                },
                "uVar18": {
                    "temp10": 1
                },
                "uVar19": {
                    "temp11": 1
                },
                "uVar20": {
                    "temp12": 1
                },
                "uVar21": {
                    "temp13": 1
                },
                "uVar22": {
                    "temp14": 1
                },
                "uVar23": {
                    "temp15": 1
                },
                "uVar24": {
                    "temp16": 1
                },
                "uVar25": {
                    "temp17": 1
                },
                "uVar26": {
                    "temp18": 1
                },
                "uVar27": {
                    "temp19": 1
                },
                "uVar28": {
                    "temp20": 1
                },
                "uVar29": {
                    "temp21": 1
                },
                "uVar3": {
                    "abs_input1": 1,
                    "bitwise_xor": 3,
                    "bitwise_xor_result": 1,
                    "cmp_value": 1,
                    "input2_xor": 1,
                    "input_2_var": 1,
                    "input_mask": 1,
                    "mask1": 1,
                    "mask_input2": 1,
                    "masked_input": 1,
                    "masked_value": 1,
                    "output_num": 1,
                    "result1": 3,
                    "result_1": 1,
                    "shifted_input2": 1,
                    "temp1": 4,
                    "temp_float1": 1,
                    "temp_xor": 2,
                    "var1": 1,
                    "xor_result": 2,
                    "xored_float1": 1,
                    "xored_input2": 1
                },
                "uVar30": {
                    "temp22": 1
                },
                "uVar31": {
                    "temp23": 1
                },
                "uVar32": {
                    "temp24": 1
                },
                "uVar33": {
                    "temp25": 1
                },
                "uVar34": {
                    "temp26": 1
                },
                "uVar35": {
                    "temp27": 1
                },
                "uVar36": {
                    "temp28": 1
                },
                "uVar37": {
                    "temp29": 1
                },
                "uVar38": {
                    "temp30": 1
                },
                "uVar39": {
                    "temp31": 1
                },
                "uVar4": {
                    "abs_input2": 1,
                    "dividend_sign": 1,
                    "mask2": 1,
                    "mask_xor": 1,
                    "masked_result": 1,
                    "positive_result": 1,
                    "result2": 3,
                    "result_2": 1,
                    "shifted_bitwise_xor": 1,
                    "shifted_input1": 1,
                    "shifted_input2": 1,
                    "shifted_value": 1,
                    "shifted_value2": 1,
                    "shifted_xor_result": 1,
                    "temp1": 1,
                    "temp2": 4,
                    "temp_float1": 1,
                    "temp_float2": 1,
                    "temp_num1": 1,
                    "temp_u_int": 1,
                    "temp_var1": 2,
                    "u_var4": 1,
                    "var2": 1,
                    "xored_float2": 1,
                    "xored_shifted_input1": 1
                },
                "uVar40": {
                    "temp32": 1
                },
                "uVar41": {
                    "temp33": 1
                },
                "uVar42": {
                    "temp34": 1
                },
                "uVar43": {
                    "temp35": 1
                },
                "uVar44": {
                    "temp36": 1
                },
                "uVar45": {
                    "temp37": 1
                },
                "uVar46": {
                    "temp38": 1
                },
                "uVar47": {
                    "temp39": 1
                },
                "uVar48": {
                    "temp40": 1
                },
                "uVar49": {
                    "temp41": 1
                },
                "uVar5": {
                    "bits_input": 1,
                    "data1": 1,
                    "dividend_abs": 1,
                    "input1_shifted": 1,
                    "output": 1,
                    "result": 3,
                    "result1": 3,
                    "result_1": 1,
                    "shifted_bitwise_xor_alt": 1,
                    "shifted_float": 1,
                    "shifted_float3": 1,
                    "shifted_input": 1,
                    "shifted_input1": 1,
                    "shifted_input_value": 1,
                    "shifted_result1": 1,
                    "shifted_value1": 1,
                    "temp1": 3,
                    "temp2": 1,
                    "temp_num2": 1,
                    "temp_result": 1,
                    "temp_shifted_float1": 1,
                    "temp_var2": 1,
                    "value1": 2,
                    "var3": 1
                },
                "uVar50": {
                    "temp42": 1
                },
                "uVar51": {
                    "temp43": 1
                },
                "uVar52": {
                    "temp44": 1
                },
                "uVar53": {
                    "temp45": 1
                },
                "uVar54": {
                    "temp46": 1
                },
                "uVar55": {
                    "temp47": 1
                },
                "uVar56": {
                    "temp48": 1
                },
                "uVar57": {
                    "temp49": 1
                },
                "uVar58": {
                    "temp50": 1
                },
                "uVar59": {
                    "temp51": 1
                },
                "uVar6": {
                    "bit_count": 1,
                    "bits_mask": 1,
                    "count": 1,
                    "first_operand": 1,
                    "loop_counter": 1,
                    "loop_index": 1,
                    "new_shifted_value1": 1,
                    "result": 1,
                    "result2": 2,
                    "result_2": 1,
                    "shift_amount": 2,
                    "shifted_float4": 1,
                    "shifted_mask_value": 1,
                    "shifted_result": 2,
                    "shifted_result2": 1,
                    "shifted_value_abs": 1,
                    "temp2": 3,
                    "temp3": 1,
                    "temp_diff": 1,
                    "temp_num3": 1,
                    "temp_result_2": 1,
                    "temp_var3": 1,
                    "updated_shifted_input1": 1,
                    "value2": 2,
                    "var4": 1
                },
                "uVar60": {
                    "temp52": 1
                },
                "uVar61": {
                    "temp53": 1
                },
                "uVar62": {
                    "temp54": 1
                },
                "uVar63": {
                    "temp55": 1
                },
                "uVar64": {
                    "temp56": 1
                },
                "uVar65": {
                    "temp57": 1
                },
                "uVar66": {
                    "temp58": 1
                },
                "uVar67": {
                    "temp59": 1
                },
                "uVar68": {
                    "temp60": 1
                },
                "uVar69": {
                    "temp61": 1
                },
                "uVar7": {
                    "diff": 2,
                    "diff_float": 1,
                    "difference": 18,
                    "second_operand": 1,
                    "subtract_value": 1,
                    "temp3": 3,
                    "temp4": 1,
                    "temp_num4": 1,
                    "temp_shifted_diff": 1,
                    "temp_var4": 1,
                    "var5": 1
                },
                "uVar70": {
                    "temp62": 1
                },
                "uVar71": {
                    "temp63": 1
                },
                "uVar72": {
                    "temp64": 1
                },
                "uVar73": {
                    "temp65": 1
                },
                "uVar74": {
                    "temp66": 1
                },
                "uVar75": {
                    "temp67": 1
                },
                "uVar76": {
                    "temp68": 1
                },
                "uVar77": {
                    "temp69": 1
                },
                "uVar78": {
                    "temp70": 1
                },
                "uVar79": {
                    "temp71": 1
                },
                "uVar8": {
                    "result": 1,
                    "shifted_masked_input1": 1
                },
                "uVar80": {
                    "temp72": 1
                },
                "uVar81": {
                    "temp73": 1
                },
                "uVar82": {
                    "temp74": 1
                },
                "uVar83": {
                    "temp75": 1
                },
                "uVar84": {
                    "temp76": 1
                },
                "uVar85": {
                    "temp77": 1
                },
                "uVar86": {
                    "temp78": 1
                },
                "uVar87": {
                    "temp79": 1
                },
                "uVar88": {
                    "temp80": 1
                },
                "uVar89": {
                    "temp81": 1
                },
                "uVar9": {
                    "shift_count": 1,
                    "shifted_masked_input2": 1,
                    "temp1": 1
                },
                "uVar90": {
                    "temp82": 1
                },
                "uVar91": {
                    "temp83": 1
                },
                "uVar92": {
                    "temp84": 1
                },
                "uVar93": {
                    "temp85": 1
                },
                "uVar94": {
                    "temp86": 1
                },
                "uVar95": {
                    "temp87": 1
                },
                "uVar96": {
                    "temp88": 1
                },
                "uVar97": {
                    "temp89": 1
                },
                "uVar98": {
                    "temp90": 1
                },
                "uVar99": {
                    "temp91": 1
                },
                "value3": {
                    "masked_value1": 1
                },
                "value4": {
                    "masked_value2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001f00",
                "FUN_080028bc",
                "FUN_08002978",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_08002908",
                "FUN_08002408",
                "FUN_08004940"
            ],
            "code": "\nuint calculate_new_float_08008cd8(uint input1,uint input2,undefined4 input3,uint input4)\n\n{\n  int shifted_input1;\n  int shifted_input2;\n  uint temp1;\n  uint temp2;\n  uint temp1;\n  uint temp2;\n  uint difference;\n  bool is_equal;\n  \n  temp1 = input2 ^ 0x80000000;\n  temp1 = input1 << 1;\n  is_equal = temp1 == 0;\n  if (!is_equal) {\n    input4 = input2 << 1;\n    is_equal = input4 == 0;\n  }\n  if (!is_equal) {\n    is_equal = temp1 == input4;\n  }\n  shifted_input1 = (int)temp1 >> 0x18;\n  if (!is_equal) {\n    is_equal = shifted_input1 == -1;\n  }\n  if (!is_equal) {\n    is_equal = (int)input4 >> 0x18 == -1;\n  }\n  if (is_equal) {\n    shifted_input2 = (int)(input2 << 1) >> 0x18;\n    if (shifted_input1 == -1 || shifted_input2 == -1) {\n      temp1 = temp1;\n      if (shifted_input1 == -1) {\n        temp1 = input1;\n      }\n      if (shifted_input1 != -1 || shifted_input2 != -1) {\n        temp1 = temp1;\n      }\n      is_equal = (temp1 & 0x7fffff) == 0;\n      if (is_equal) {\n        is_equal = (temp1 & 0x7fffff) == 0;\n      }\n      if (is_equal) {\n        is_equal = temp1 == temp1;\n      }\n      if (!is_equal) {\n        temp1 = temp1 | 0x400000;\n      }\n      return temp1;\n    }\n    if (((input1 ^ temp1) & 0x7fffffff) != 0) {\n      if (temp1 == 0) {\n        input1 = temp1;\n      }\n      return input1;\n    }\n    if (input1 != temp1) {\n      return 0;\n    }\n    if ((temp1 & 0xff000000) == 0) {\n      temp1 = input1 << 1;\n      if ((input1 & 0x80000000) != 0) {\n        temp1 = temp1 | 0x80000000;\n      }\n      return temp1;\n    }\n    if (temp1 < 0xfe000000) {\n      return input1 + 0x800000;\n    }\n    input1 = input1 & 0x80000000;\nLAB_08008e12:\n    return input1 | 0x7f800000;\n  }\n  temp1 = temp1 >> 0x18;\n  input4 = input4 >> 0x18;\n  difference = input4 - temp1;\n  is_equal = difference != 0;\n  temp2 = temp1;\n  if (is_equal && temp1 <= input4) {\n    temp2 = temp1 + difference;\n  }\n  if (is_equal && temp1 <= input4) {\n    temp1 = temp1 ^ input1;\n  }\n  if (is_equal && temp1 <= input4) {\n    input1 = input1 ^ temp1;\n  }\n  if (is_equal && temp1 <= input4) {\n    temp1 = temp1 ^ input1;\n  }\n  if (input4 < temp1) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return input1;\n  }\n  temp1 = input1 & 0xffffff | 0x800000;\n  if ((input1 & 0x80000000) != 0) {\n    temp1 = -temp1;\n  }\n  temp2 = temp1 & 0xffffff | 0x800000;\n  if ((temp1 & 0x80000000) != 0) {\n    temp2 = -temp2;\n  }\n  if (temp2 == difference) {\n    temp2 = temp2 ^ 0x800000;\n    if (temp2 == 0) {\n      temp1 = temp1 ^ 0x800000;\n      temp2 = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  temp1 = temp1 + ((int)temp2 >> (difference & 0xff));\n  temp2 = temp2 << (0x20 - difference & 0xff);\n  input1 = temp1 & 0x80000000;\n  if ((int)temp1 < 0) {\n    is_equal = temp2 != 0;\n    temp2 = -temp2;\n    temp1 = -temp1 - (uint)is_equal;\n  }\n  if (temp1 < 0x800000) {\n    temp1 = temp2 & 0x80000000;\n    temp2 = temp2 << 1;\n    temp1 = temp1 * 2 + (uint)(temp1 != 0);\n    temp1 = temp2 - 2;\n    if (temp2 - 1 == 0 || temp1 < 0x800000) {\n      difference = leading_zeros_count(temp1) - 8;\n      temp1 = temp1 << (difference & 0xff);\n      if ((int)temp1 < (int)difference) {\n        temp1 = temp1 >> (-(temp1 - difference) & 0xff);\n      }\n      else {\n        temp1 = temp1 + (temp1 - difference) * 0x800000;\n      }\n      return temp1 | input1;\n    }\n  }\n  else {\n    temp1 = temp2 - 1;\n    if (0xffffff < temp1) {\n      temp1 = temp1 & 1;\n      temp1 = temp1 >> 1;\n      temp2 = (uint)(temp1 != 0) << 0x1f | temp2 >> 1;\n      temp1 = temp2;\n      if (0xfd < temp2) goto LAB_08008e12;\n    }\n  }\n  temp1 = temp1 + temp1 * 0x800000 + (uint)(0x7fffffff < temp2);\n  if (temp2 == 0x80000000) {\n    temp1 = temp1 & 0xfffffffe;\n  }\n  return temp1 | input1;\n}\n\n",
            "current_name": "calculate_new_float_08008cd8",
            "entrypoint": "0x08008cd8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008cd8": "calculate_new_float_08008cd8",
                "LZCOUNT": "leading_zeros_count",
                "bVar8": "is_equal",
                "iVar1": "shifted_input1",
                "iVar2": "shifted_input2",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp1",
                "uVar6": "temp2",
                "uVar7": "difference"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008cdc": {
            "additional_data": {
                "FUN_08008cdc": {
                    "calculate_float": 12,
                    "calculate_float_value": 2,
                    "calculate_floating_point": 7,
                    "calculate_floating_point_result": 1,
                    "calculate_new_float": 1,
                    "compute_float": 1,
                    "enhanced_float_calculation": 1,
                    "float_to_integer": 1,
                    "float_to_uint": 1,
                    "reverse_binary": 1,
                    "reverse_bits": 1,
                    "reverse_bitwise_operations": 1
                },
                "LZCOUNT": {
                    "leading_zero_count": 2
                },
                "bVar7": {
                    "condition": 3,
                    "flag": 1,
                    "is_condition_met": 2,
                    "is_equal": 8,
                    "is_true": 1,
                    "is_zero": 14,
                    "is_zero_bits_shifted1": 1,
                    "result": 1
                },
                "iVar1": {
                    "bit_shift_value1": 1,
                    "msb1": 1,
                    "msb_input1": 1,
                    "num1_shifted": 1,
                    "result1": 1,
                    "shift1": 1,
                    "shift_amount": 3,
                    "shift_bits": 1,
                    "shift_result": 1,
                    "shifted_float1": 1,
                    "shifted_input1": 6,
                    "shifted_input_1": 2,
                    "shifted_num1": 2,
                    "shifted_value": 1,
                    "shifted_value1": 3,
                    "shifted_value1_sign": 1,
                    "sign_bits_shifted1": 1,
                    "upper_bits1": 1,
                    "x_sign_bit": 1
                },
                "iVar2": {
                    "another_shift_bits": 1,
                    "bit_shift_value2": 1,
                    "msb2": 1,
                    "msb_shifted_input2": 1,
                    "num2_shifted": 1,
                    "result2": 1,
                    "shift2": 1,
                    "shift_amount2": 2,
                    "shift_amount_2": 1,
                    "shift_result2": 1,
                    "shifted_float2": 1,
                    "shifted_input2": 6,
                    "shifted_input_2": 2,
                    "shifted_num2": 2,
                    "shifted_value2": 4,
                    "shifted_value2_sign": 1,
                    "sign_bits_shifted2": 1,
                    "upper_bits2": 1,
                    "y_sign_bit": 1
                },
                "input1": {
                    "shifted_value1_neg": 1
                },
                "input2": {
                    "shifted_value2_neg": 1
                },
                "param_1": {
                    "float1": 2,
                    "input1": 13,
                    "input_1": 4,
                    "input_float1": 1,
                    "input_value1": 2,
                    "num1": 4,
                    "number1": 2,
                    "value1": 2,
                    "x": 1
                },
                "param_2": {
                    "float2": 2,
                    "input2": 13,
                    "input_2": 4,
                    "input_float2": 1,
                    "input_value2": 2,
                    "num2": 4,
                    "number2": 2,
                    "value2": 2,
                    "y": 1
                },
                "param_3": {
                    "constant": 2,
                    "flag": 1,
                    "ignored_param": 1,
                    "increment": 1,
                    "input3": 8,
                    "input_3": 2,
                    "input_size": 1,
                    "input_value3": 1,
                    "mask": 1,
                    "num3": 1,
                    "param3": 6,
                    "placeholder": 1,
                    "precision": 2,
                    "value3": 2,
                    "z": 1
                },
                "param_4": {
                    "bitmask": 1,
                    "comparison_value": 1,
                    "control": 1,
                    "float_bits1": 1,
                    "input4": 8,
                    "input_4": 2,
                    "input_value4": 1,
                    "limit": 1,
                    "modulus": 1,
                    "num4": 1,
                    "param4": 6,
                    "result": 1,
                    "rounding_mode": 2,
                    "shift_amount": 1,
                    "value4": 2,
                    "w": 1
                },
                "uVar10": {
                    "temp2": 1
                },
                "uVar11": {
                    "result_exponent": 1
                },
                "uVar12": {
                    "x_normalized_fraction": 1
                },
                "uVar13": {
                    "y_normalized_fraction": 1
                },
                "uVar14": {
                    "is_x_zero": 1
                },
                "uVar15": {
                    "is_y_zero": 1
                },
                "uVar16": {
                    "u_var16": 1
                },
                "uVar17": {
                    "u_var17": 1
                },
                "uVar18": {
                    "u_var18": 1
                },
                "uVar19": {
                    "u_var19": 1
                },
                "uVar3": {
                    "a": 1,
                    "abs_shifted_float1": 1,
                    "converted_value1": 1,
                    "float1": 1,
                    "float_bits2": 1,
                    "input1_sign": 1,
                    "input1_temp": 1,
                    "input1_unsigned": 1,
                    "input_1_with_sign": 1,
                    "lower_bits1": 1,
                    "mantissa1": 1,
                    "mask_value": 1,
                    "masked_input_1": 2,
                    "normalized_mantissa1": 1,
                    "normalized_value1": 1,
                    "num2_shifted_partial": 1,
                    "partial_input1": 1,
                    "result": 3,
                    "result1": 5,
                    "result_temp": 1,
                    "result_value1": 1,
                    "shifted_value2": 1,
                    "temp_value1": 1,
                    "x_fraction": 1
                },
                "uVar4": {
                    "abs_num1": 1,
                    "abs_shifted_float2": 1,
                    "converted_value2": 1,
                    "float2": 1,
                    "float_bits_shifted1": 1,
                    "input1_abs": 1,
                    "input1_shifted": 1,
                    "input2_unsigned": 1,
                    "input_1_shifted": 1,
                    "lower_bits2": 1,
                    "mantissa2": 1,
                    "masked_input_2": 1,
                    "masked_shifted_input_1": 1,
                    "normalized_mantissa2": 1,
                    "normalized_value2": 1,
                    "partial_input2": 1,
                    "result": 2,
                    "result2": 4,
                    "rounded_num1": 1,
                    "shifted_result1": 3,
                    "shifted_value1": 2,
                    "temp1": 1,
                    "temp_value2": 1,
                    "x_exponent": 1
                },
                "uVar5": {
                    "abs_num2": 1,
                    "abs_result": 1,
                    "adjusted_shift": 1,
                    "comparison1": 1,
                    "count": 2,
                    "difference": 1,
                    "exponent": 1,
                    "exponent1": 2,
                    "input1_modified": 1,
                    "input2_abs": 1,
                    "negative_bit_value": 1,
                    "remaining_bits": 1,
                    "remaining_shifts": 1,
                    "res_1": 1,
                    "result3": 2,
                    "rounded_num2": 1,
                    "shift": 1,
                    "shift_counter": 1,
                    "shifted_delta": 1,
                    "shifted_input1": 1,
                    "shifted_result2": 1,
                    "temp1": 3,
                    "temp_value3": 1,
                    "u_result": 1,
                    "updated_shift_value1": 1,
                    "y_fraction": 1
                },
                "uVar6": {
                    "abs_difference": 2,
                    "comparison2": 1,
                    "delta": 1,
                    "diff": 3,
                    "difference": 8,
                    "difference_value": 1,
                    "exponent2": 2,
                    "input2_modified": 1,
                    "res_2": 1,
                    "result4": 2,
                    "shift_difference": 2,
                    "shifted_input2": 1,
                    "temp2": 4,
                    "temp_value4": 1,
                    "y_exponent": 1
                },
                "uVar8": {
                    "temp": 1
                },
                "uVar9": {
                    "shift_count": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001f00",
                "FUN_080028bc",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_08003004",
                "FUN_08002908",
                "FUN_08004940",
                "FUN_08003826"
            ],
            "code": "\nuint calculate_float_value_08008cdc(uint input1,uint input2,undefined4 input3,uint input4)\n\n{\n  int shifted_input1;\n  int shifted_input2;\n  uint result1;\n  uint result2;\n  uint temp1;\n  uint difference;\n  bool is_zero;\n  \n  result2 = input1 << 1;\n  is_zero = result2 == 0;\n  if (!is_zero) {\n    input4 = input2 << 1;\n    is_zero = input4 == 0;\n  }\n  if (!is_zero) {\n    is_zero = result2 == input4;\n  }\n  shifted_input1 = (int)result2 >> 0x18;\n  if (!is_zero) {\n    is_zero = shifted_input1 == -1;\n  }\n  if (!is_zero) {\n    is_zero = (int)input4 >> 0x18 == -1;\n  }\n  if (is_zero) {\n    shifted_input2 = (int)(input2 << 1) >> 0x18;\n    if (shifted_input1 == -1 || shifted_input2 == -1) {\n      result2 = input2;\n      if (shifted_input1 == -1) {\n        result2 = input1;\n      }\n      if (shifted_input1 != -1 || shifted_input2 != -1) {\n        input2 = result2;\n      }\n      is_zero = (result2 & 0x7fffff) == 0;\n      if (is_zero) {\n        is_zero = (input2 & 0x7fffff) == 0;\n      }\n      if (is_zero) {\n        is_zero = result2 == input2;\n      }\n      if (!is_zero) {\n        result2 = result2 | 0x400000;\n      }\n      return result2;\n    }\n    if (((input1 ^ input2) & 0x7fffffff) != 0) {\n      if (result2 == 0) {\n        input1 = input2;\n      }\n      return input1;\n    }\n    if (input1 != input2) {\n      return 0;\n    }\n    if ((result2 & 0xff000000) == 0) {\n      result2 = input1 << 1;\n      if ((input1 & 0x80000000) != 0) {\n        result2 = result2 | 0x80000000;\n      }\n      return result2;\n    }\n    if (result2 < 0xfe000000) {\n      return input1 + 0x800000;\n    }\n    input1 = input1 & 0x80000000;\nLAB_08008e12:\n    return input1 | 0x7f800000;\n  }\n  result2 = result2 >> 0x18;\n  input4 = input4 >> 0x18;\n  difference = input4 - result2;\n  is_zero = difference != 0;\n  temp1 = result2;\n  if (is_zero && result2 <= input4) {\n    temp1 = result2 + difference;\n  }\n  if (is_zero && result2 <= input4) {\n    input2 = input2 ^ input1;\n  }\n  if (is_zero && result2 <= input4) {\n    input1 = input1 ^ input2;\n  }\n  if (is_zero && result2 <= input4) {\n    input2 = input2 ^ input1;\n  }\n  if (input4 < result2) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return input1;\n  }\n  result2 = input1 & 0xffffff | 0x800000;\n  if ((input1 & 0x80000000) != 0) {\n    result2 = -result2;\n  }\n  result1 = input2 & 0xffffff | 0x800000;\n  if ((input2 & 0x80000000) != 0) {\n    result1 = -result1;\n  }\n  if (temp1 == difference) {\n    result1 = result1 ^ 0x800000;\n    if (temp1 == 0) {\n      result2 = result2 ^ 0x800000;\n      temp1 = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  result2 = result2 + ((int)result1 >> (difference & 0xff));\n  result1 = result1 << (0x20 - difference & 0xff);\n  input1 = result2 & 0x80000000;\n  if ((int)result2 < 0) {\n    is_zero = result1 != 0;\n    result1 = -result1;\n    result2 = -result2 - (uint)is_zero;\n  }\n  if (result2 < 0x800000) {\n    difference = result1 & 0x80000000;\n    result1 = result1 << 1;\n    result2 = result2 * 2 + (uint)(difference != 0);\n    difference = temp1 - 2;\n    if (temp1 - 1 == 0 || result2 < 0x800000) {\n      temp1 = leading_zero_count(result2) - 8;\n      result2 = result2 << (temp1 & 0xff);\n      if ((int)difference < (int)temp1) {\n        result2 = result2 >> (-(difference - temp1) & 0xff);\n      }\n      else {\n        result2 = result2 + (difference - temp1) * 0x800000;\n      }\n      return result2 | input1;\n    }\n  }\n  else {\n    difference = temp1 - 1;\n    if (0xffffff < result2) {\n      difference = result2 & 1;\n      result2 = result2 >> 1;\n      result1 = (uint)(difference != 0) << 0x1f | result1 >> 1;\n      difference = temp1;\n      if (0xfd < temp1) goto LAB_08008e12;\n    }\n  }\n  result2 = result2 + difference * 0x800000 + (uint)(0x7fffffff < result1);\n  if (result1 == 0x80000000) {\n    result2 = result2 & 0xfffffffe;\n  }\n  return result2 | input1;\n}\n\n",
            "current_name": "calculate_float_value_08008cdc",
            "entrypoint": "0x08008cdc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008cdc": "calculate_float_value_08008cdc",
                "LZCOUNT": "leading_zero_count",
                "bVar7": "is_zero",
                "iVar1": "shifted_input1",
                "iVar2": "shifted_input2",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar3": "result1",
                "uVar4": "result2",
                "uVar5": "temp1",
                "uVar6": "difference"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008e3c": {
            "additional_data": {
                "FUN_08008e3c": {
                    "bitwise_conversion": 1,
                    "calculate": 1,
                    "calculate_hash": 1,
                    "calculate_modified_value": 1,
                    "calculate_new_value": 2,
                    "calculate_result": 3,
                    "calculate_shifted_sum": 1,
                    "calculate_value": 7,
                    "count_bits": 2,
                    "count_leading_zeros": 1,
                    "decode_unsigned_integer": 1,
                    "reverse_bits": 7,
                    "reverse_number": 1
                },
                "iVar3": {
                    "base_offset": 1,
                    "base_value": 5,
                    "constant": 8,
                    "constant_offset": 3,
                    "constant_term": 1,
                    "constant_value": 4,
                    "initial_value": 1,
                    "intermediate_result": 1,
                    "intermediate_sum": 1,
                    "intermediate_value": 2,
                    "multiplier": 1,
                    "offset": 2,
                    "result": 1
                },
                "param_1": {
                    "input": 14,
                    "input_value": 15,
                    "number": 2
                },
                "uVar1": {
                    "adjusted_value": 1,
                    "final_result": 3,
                    "leading_zero_count": 3,
                    "leading_zeroes": 3,
                    "leading_zeros": 15,
                    "leading_zeros_count": 2,
                    "leading_zeros_left_shifted": 1,
                    "output_value": 1,
                    "result": 1,
                    "u_var1": 1
                },
                "uVar2": {
                    "exponent": 1,
                    "leading_bits": 1,
                    "offset": 1,
                    "shift": 1,
                    "shift_amount": 20,
                    "shift_count": 1,
                    "shift_distance": 1,
                    "shift_value": 1,
                    "shifted_value": 1,
                    "temp": 1,
                    "temp_shift": 1,
                    "u_var2": 1
                },
                "uVar4": {
                    "bit_mask": 1,
                    "bit_shift": 1,
                    "carry": 1,
                    "check_value": 1,
                    "comparison_result": 2,
                    "comparison_value": 2,
                    "conditional_mask": 1,
                    "conditional_value": 1,
                    "high_bit_check": 1,
                    "mask": 9,
                    "mask_value": 2,
                    "overflow_check": 2,
                    "result": 1,
                    "shifted_input": 1,
                    "temp": 3,
                    "temp_value": 2
                },
                "uVar5": {
                    "mask": 1,
                    "masked_value": 1,
                    "result": 4,
                    "shifted_input": 1,
                    "temp_value1": 1
                },
                "uVar6": {
                    "final_sum": 1,
                    "mask": 2,
                    "modified_hash": 1,
                    "shifted_input": 1,
                    "temp_value2": 1
                },
                "uVar7": {
                    "condition": 1,
                    "saturated_result": 1
                },
                "uVar8": {
                    "adjusted_result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002638",
                "FUN_08002c18"
            ],
            "code": "\nuint calculate_new_value_08008e3c(uint input_value)\n\n{\n  uint leading_zeros;\n  uint shift_amount;\n  int constant;\n  uint mask;\n  \n  if (input_value == 0) {\n    return 0;\n  }\n  leading_zeros = LZCOUNT(input_value);\n  shift_amount = leading_zeros - 8;\n  constant = shift_amount * -0x800000 + 0x4a800000;\n  if (7 < leading_zeros) {\n    mask = 0 << (shift_amount & 0xff);\n    leading_zeros = constant + (input_value << (shift_amount & 0xff)) +\n            (0U >> (0x20 - shift_amount & 0xff)) + (uint)(0x7fffffff < mask);\n    if (mask == 0x80000000) {\n      leading_zeros = leading_zeros & 0xfffffffe;\n    }\n    return leading_zeros;\n  }\n  shift_amount = input_value << leading_zeros + 0x18;\n  leading_zeros = constant + ((input_value >> (0x20 - (leading_zeros + 0x18) & 0xff)) - ((int)shift_amount >> 0x1f));\n  if ((shift_amount & 0x7fffffff) == 0) {\n    leading_zeros = leading_zeros & ~(shift_amount >> 0x1f);\n  }\n  return leading_zeros;\n}\n\n",
            "current_name": "calculate_new_value_08008e3c",
            "entrypoint": "0x08008e3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008e3c": "calculate_new_value_08008e3c",
                "iVar3": "constant",
                "param_1": "input_value",
                "uVar1": "leading_zeros",
                "uVar2": "shift_amount",
                "uVar4": "mask"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008e44": {
            "additional_data": {
                "FUN_08008e44": {
                    "bitwise_manipulation": 1,
                    "calculate_abs_value": 1,
                    "calculate_bit_reversed_integer": 1,
                    "calculate_hash": 3,
                    "calculate_integer_value": 1,
                    "calculate_modified_value": 1,
                    "calculate_unsigned_value": 2,
                    "compute_value": 1,
                    "convert_twos_complement": 1,
                    "count_and_calculate": 1,
                    "count_bits": 2,
                    "count_bits_and_convert": 1,
                    "count_bits_and_shift": 1,
                    "count_leading_zeros": 3,
                    "count_set_bits": 2,
                    "count_trailing_zeros": 1,
                    "decode_and_transform": 1,
                    "extract_bits": 1,
                    "get_modified_value": 1,
                    "reverse_bit_operations": 1,
                    "reverse_bits": 2,
                    "reverse_bitwise_operation": 1
                },
                "LZCOUNT": {
                    "count_leading_zeros": 3
                },
                "iParam1": {
                    "shifted_input": 1
                },
                "iVar4": {
                    "calculated_value": 1,
                    "constant": 1,
                    "constant_value": 1,
                    "final_result": 1,
                    "hash_value": 1,
                    "intermediate_value": 1,
                    "modified_number": 1,
                    "modified_value": 1,
                    "result": 22,
                    "shifted_value": 1
                },
                "param_1": {
                    "input": 11,
                    "input_num": 1,
                    "input_number": 3,
                    "input_value": 12,
                    "number": 4
                },
                "uVar1": {
                    "bit_count": 2,
                    "count": 1,
                    "leading_bits": 1,
                    "leading_zero_count": 1,
                    "leading_zeroes": 2,
                    "leading_zeros": 19,
                    "mask": 1,
                    "num_bits": 1,
                    "num_set_bits": 1,
                    "zero_check": 1,
                    "zeros": 1
                },
                "uVar2": {
                    "leading_bits": 1,
                    "result": 1,
                    "shift": 5,
                    "shift_amount": 18,
                    "shift_amount1": 1,
                    "shift_distance": 1,
                    "shift_offset": 1,
                    "shift_value": 1,
                    "shifted_bits": 2
                },
                "uVar3": {
                    "is_negative": 5,
                    "is_negative_shifted": 1,
                    "modified_result": 1,
                    "negative_flag": 1,
                    "result": 1,
                    "sign": 1,
                    "sign_bit": 21
                }
            },
            "called": [],
            "calling": [
                "FUN_08001f00",
                "FUN_08003004",
                "FUN_080004fc",
                "FUN_08002408",
                "FUN_08004940",
                "FUN_08003618",
                "FUN_08002c18",
                "FUN_080024c4"
            ],
            "code": "\nuint count_set_bits_08008e44(uint input_value)\n\n{\n  uint leading_zeros;\n  uint shift_amount;\n  uint sign_bit;\n  int result;\n  \n  sign_bit = input_value & 0x80000000;\n  if ((int)sign_bit < 0) {\n    input_value = -input_value;\n  }\n  if (input_value == 0) {\n    return 0;\n  }\n  leading_zeros = count_leading_zeros(input_value);\n  shift_amount = leading_zeros - 8;\n  result = ((sign_bit | 0x4b000000) - 0x800000) + shift_amount * -0x800000;\n  if (7 < leading_zeros) {\n    leading_zeros = 0 << (shift_amount & 0xff);\n    sign_bit = result + (input_value << (shift_amount & 0xff)) +\n            (0U >> (0x20 - shift_amount & 0xff)) + (uint)(0x7fffffff < leading_zeros);\n    if (leading_zeros == 0x80000000) {\n      sign_bit = sign_bit & 0xfffffffe;\n    }\n    return sign_bit;\n  }\n  shift_amount = input_value << leading_zeros + 0x18;\n  sign_bit = result + ((input_value >> (0x20 - (leading_zeros + 0x18) & 0xff)) - ((int)shift_amount >> 0x1f));\n  if ((shift_amount & 0x7fffffff) == 0) {\n    sign_bit = sign_bit & ~(shift_amount >> 0x1f);\n  }\n  return sign_bit;\n}\n\n",
            "current_name": "count_set_bits_08008e44",
            "entrypoint": "0x08008e44",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008e44": "count_set_bits_08008e44",
                "LZCOUNT": "count_leading_zeros",
                "iVar4": "result",
                "param_1": "input_value",
                "uVar1": "leading_zeros",
                "uVar2": "shift_amount",
                "uVar3": "sign_bit"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008eec": {
            "additional_data": {
                "FUN_08008eec": {
                    "calculate_float": 10,
                    "calculate_float_from_bits": 1,
                    "calculate_float_from_integers": 1,
                    "calculate_float_value": 3,
                    "calculate_floating_point": 10,
                    "calculate_floating_point_value": 1,
                    "calculate_hash": 1,
                    "calculation": 1,
                    "decode_float32": 1,
                    "float_to_unsigned_int": 1
                },
                "SBORROW4": {
                    "signed_subtraction": 1,
                    "subtract_overflow": 1,
                    "subtract_with_borrow": 1,
                    "subtraction_borrow": 1
                },
                "SCARRY4": {
                    "add_overflow": 1,
                    "addition_carry": 1,
                    "subtract_with_carry": 1
                },
                "bVar10": {
                    "borrow_flag": 1,
                    "check2": 1,
                    "check_condition2": 1,
                    "condition2": 4,
                    "is_carry": 1,
                    "is_negative": 9,
                    "is_negative_exponent": 1,
                    "is_negative_result": 2,
                    "is_negative_shift": 1,
                    "is_overflow": 3,
                    "is_zero2": 4,
                    "overflow": 1,
                    "overflow_check": 1,
                    "overflow_flag": 1
                },
                "bVar9": {
                    "check1": 1,
                    "check_condition1": 1,
                    "condition": 1,
                    "condition1": 4,
                    "is_equal": 1,
                    "is_value1_zero_or_ff": 1,
                    "is_zero": 10,
                    "is_zero1": 8,
                    "is_zero_check": 1,
                    "is_zero_exponent_x": 1,
                    "is_zero_or_ff": 1,
                    "is_zero_shift_a": 1
                },
                "iVar4": {
                    "add_result": 1,
                    "bits_sum": 1,
                    "shift_sum": 1,
                    "sum": 17,
                    "sum_exponents": 2,
                    "sum_of_bytes": 1,
                    "sum_of_exponents": 2,
                    "sum_offset": 1,
                    "sum_shifted": 1,
                    "sum_shifted_inputs": 1,
                    "temp1": 1,
                    "total_shift": 1,
                    "total_shifted_bits": 1
                },
                "iVar5": {
                    "adjusted_exponent1": 1,
                    "bits_difference": 1,
                    "diff": 6,
                    "difference": 3,
                    "difference_exponents": 1,
                    "difference_of_exponents": 1,
                    "exponent_diff": 1,
                    "normalized_sum": 1,
                    "shift_count2": 1,
                    "shift_diff": 1,
                    "shift_difference": 1,
                    "shifted_bits_b": 1,
                    "shifted_sum": 4,
                    "subtract_result": 1,
                    "sum_diff": 2,
                    "sum_minus127": 2,
                    "sum_offset": 1,
                    "temp1": 1,
                    "temp2": 1
                },
                "iVar7": {
                    "adjusted_exponent2": 1,
                    "bit_offset2": 1,
                    "carry": 1,
                    "count": 2,
                    "counter": 1,
                    "diff2": 1,
                    "diff_temp": 1,
                    "difference": 1,
                    "exponent_difference": 1,
                    "iteration_count": 1,
                    "product_diff": 1,
                    "shift_amount": 4,
                    "shift_count1": 1,
                    "shift_limit": 1,
                    "shift_offset": 1,
                    "shift_value": 2,
                    "shifted_sum": 1,
                    "sub_result": 1,
                    "sum_diff2": 1,
                    "temp": 1,
                    "temp2": 2,
                    "temp3": 1,
                    "temp_sum": 1,
                    "temp_var": 1
                },
                "lVar1": {
                    "longlong_input": 1,
                    "mul_result64": 1,
                    "prod": 1,
                    "product": 4,
                    "product2": 1,
                    "product64": 2,
                    "temp_long": 1,
                    "temp_long1": 1,
                    "temp_variable": 1
                },
                "param_1": {
                    "exponent1": 1,
                    "float1": 1,
                    "float_a": 1,
                    "float_bits1": 1,
                    "input1": 16,
                    "input_a": 2,
                    "input_x": 1,
                    "num1": 1,
                    "number1": 1,
                    "operand1": 1,
                    "value1": 5
                },
                "param_2": {
                    "exponent2": 1,
                    "float2": 1,
                    "float_b": 1,
                    "float_bits2": 1,
                    "input2": 16,
                    "input_b": 2,
                    "input_y": 1,
                    "num2": 1,
                    "number2": 1,
                    "operand2": 1,
                    "value2": 5
                },
                "param_3": {
                    "bits": 1,
                    "float_result": 1,
                    "input3": 11,
                    "input_c": 2,
                    "option": 1,
                    "param3": 8,
                    "parameter3": 1,
                    "rounding_mode": 1,
                    "some_value": 1,
                    "unused_param": 1,
                    "value1": 1,
                    "value3": 2
                },
                "param_4": {
                    "bits2": 1,
                    "exception_flags": 1,
                    "flags": 1,
                    "float_condition": 1,
                    "input3": 1,
                    "input4": 10,
                    "input_d": 2,
                    "mask": 2,
                    "param4": 7,
                    "parameter4": 1,
                    "some_other_value": 1,
                    "value3": 1,
                    "value4": 2
                },
                "uParam4": {
                    "input2_sign": 1
                },
                "uVar2": {
                    "combined_bits": 1,
                    "result": 26,
                    "result1": 2,
                    "shifted_input2": 1,
                    "temp_result": 1
                },
                "uVar3": {
                    "bit1": 1,
                    "bit_field1": 1,
                    "bit_offset1": 1,
                    "bit_shift_val1": 1,
                    "bits1": 1,
                    "exponent1": 2,
                    "first_byte": 1,
                    "first_byte_a": 1,
                    "input1_first_byte": 1,
                    "input1_shifted": 2,
                    "input1_sign": 1,
                    "num1_shifted": 1,
                    "operand1_shifted": 1,
                    "param1_shifted": 1,
                    "shift_amount": 1,
                    "shift_amount1": 1,
                    "shifted_bits1": 1,
                    "shifted_bits_a": 1,
                    "shifted_float_a": 1,
                    "shifted_input1": 2,
                    "shifted_value": 1,
                    "shifting_result": 1,
                    "temp1": 2,
                    "upper_byte1": 1,
                    "value1_shifted": 1,
                    "value1_upper_bits": 1,
                    "var1": 1
                },
                "uVar5": {
                    "shifted_value": 1
                },
                "uVar6": {
                    "carry": 1,
                    "lower32_bits": 1,
                    "mul_result": 3,
                    "multiplication_result": 1,
                    "multiplied_bits": 1,
                    "multiplied_result": 1,
                    "multiplied_sum": 1,
                    "multiplier": 1,
                    "product": 8,
                    "product_low": 3,
                    "result_multiply": 1,
                    "temp1": 1,
                    "temp2": 2,
                    "temp_float": 1,
                    "temp_result": 1,
                    "temporary_var": 1,
                    "var2": 1
                },
                "uVar8": {
                    "bit_shift_val2": 1,
                    "bitwise_result": 2,
                    "combined_operands": 1,
                    "combined_result": 1,
                    "exponent_result": 1,
                    "final_result": 1,
                    "masked_result": 1,
                    "modified_input1": 1,
                    "product_high": 1,
                    "result": 2,
                    "result2": 2,
                    "result_sign": 2,
                    "shifted_float_b": 1,
                    "shifted_result": 1,
                    "sign_mantissa_comb": 1,
                    "temp": 3,
                    "temp2": 1,
                    "temp3": 1,
                    "temp_input": 1,
                    "temp_result": 3,
                    "temp_value": 1,
                    "value2_shifted": 1,
                    "var3": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080028bc",
                "FUN_08003004",
                "FUN_08002908",
                "FUN_08002638",
                "FUN_08002408",
                "FUN_08003826",
                "FUN_08003618",
                "FUN_08002c18",
                "FUN_080024c4",
                "FUN_08001f00",
                "FUN_08002978",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001994"
            ],
            "code": "\nuint calculate_float_value_08008eec(uint input1,uint input2,undefined4 input3,uint input4)\n\n{\n  longlong product;\n  uint result;\n  uint temp1;\n  int sum;\n  int diff;\n  uint product;\n  int shift_amount;\n  uint temp_result;\n  bool is_zero;\n  bool is_negative;\n  \n  temp1 = input1 >> 0x17 & 0xff;\n  is_zero = temp1 == 0;\n  if (!is_zero) {\n    input4 = input2 >> 0x17 & 0xff;\n    is_zero = input4 == 0;\n  }\n  if (!is_zero) {\n    is_zero = temp1 == 0xff;\n  }\n  if (!is_zero) {\n    is_zero = input4 == 0xff;\n  }\n  if (is_zero) {\n    input4 = input2 >> 0x17 & 0xff;\n    if (temp1 == 0xff || input4 == 0xff) {\n      is_zero = input1 == 0 || input1 == 0x80000000;\n      result = input2;\n      if (input1 != 0 && input1 != 0x80000000) {\n        is_zero = input2 == 0;\n        result = input1;\n      }\n      if (!is_zero) {\n        is_zero = input2 == 0x80000000;\n      }\n      temp_result = result;\n      if (((is_zero) || ((temp1 == 0xff && ((result & 0x7fffff) != 0)))) ||\n         ((input4 == 0xff && (temp_result = input2, (input2 & 0x7fffff) != 0)))) {\n        return temp_result | 0x7fc00000;\n      }\n      result = result ^ input2;\n      goto LAB_0800903c;\n    }\n    is_zero = (input1 & 0x7fffffff) == 0;\n    if (!is_zero) {\n      is_zero = (input2 & 0x7fffffff) == 0;\n    }\n    if (is_zero) {\n      return (input1 ^ input2) & 0x80000000;\n    }\n    is_zero = temp1 == 0;\n    result = input1 & 0x80000000;\n    while( true ) {\n      if (is_zero) {\n        input1 = input1 << 1;\n        is_zero = (input1 & 0x800000) == 0;\n      }\n      if (!is_zero) break;\n      temp1 = temp1 - 1;\n    }\n    input1 = input1 | result;\n    is_zero = input4 == 0;\n    result = input2 & 0x80000000;\n    while( true ) {\n      if (is_zero) {\n        input2 = input2 << 1;\n        is_zero = (input2 & 0x800000) == 0;\n      }\n      if (!is_zero) break;\n      input4 = input4 - 1;\n    }\n    input2 = input2 | result;\n  }\n  sum = temp1 + input4;\n  temp_result = input1 ^ input2;\n  temp1 = input1 << 9;\n  is_zero = temp1 == 0;\n  if (!is_zero) {\n    input2 = input2 << 9;\n    is_zero = input2 == 0;\n  }\n  if (is_zero) {\n    if (temp1 == 0) {\n      input2 = input2 << 9;\n    }\n    result = temp_result & 0x80000000 | input1 & 0x7fffff | input2 >> 9;\n    is_negative = signed_subtraction(sum,0x7f);\n    diff = sum + -0x7f;\n    is_zero = diff == 0;\n    shift_amount = diff;\n    if (!is_zero && 0x7e < sum) {\n      is_negative = signed_subtraction(0xff,diff);\n      shift_amount = 0xff - diff;\n      is_zero = diff == 0xff;\n    }\n    if (!is_zero && shift_amount < 0 == is_negative) {\n      result = result | diff * 0x800000;\n    }\n    if (!is_zero && shift_amount < 0 == is_negative) {\n      return result;\n    }\n    result = result | 0x800000;\n    product = 0;\n    is_negative = signed_subtraction(diff,1);\n    temp_result = sum - 0x80;\n    is_zero = temp_result == 0;\n    temp1 = temp_result;\n  }\n  else {\n    product = (ulonglong)(temp1 >> 5 | 0x8000000) * (ulonglong)(input2 >> 5 | 0x8000000);\n    product = (uint)product;\n    result = (uint)((ulonglong)product >> 0x20);\n    is_zero = result < 0x800000;\n    if (is_zero) {\n      result = result << 1;\n    }\n    if (is_zero) {\n      result = result | product >> 0x1f;\n      product = product << 1;\n    }\n    result = temp_result & 0x80000000 | result;\n    temp_result = (sum + -0x7f) - (uint)is_zero;\n    is_negative = signed_subtraction(temp_result,0xfd);\n    is_zero = temp_result == 0xfd;\n    temp1 = temp_result - 0xfd;\n    if (temp_result < 0xfe) {\n      result = result + temp_result * 0x800000 + (uint)(0x7fffffff < product);\n      if (product == 0x80000000) {\n        result = result & 0xfffffffe;\n      }\n      return result;\n    }\n  }\n  if (is_zero || (int)temp1 < 0 != is_negative) {\n    is_zero = (int)(temp_result + 0x19) < 0;\n    if (temp_result == 0xffffffe7 || is_zero != add_overflow(temp_result,0x19)) {\n      result = result & 0x80000000;\n    }\n    if (temp_result != 0xffffffe7 && is_zero == add_overflow(temp_result,0x19)) {\n      temp1 = (result << 1) >> (-temp_result & 0xff);\n      temp_result = result << (temp_result + 0x20 & 0xff);\n      temp1 = ((uint)((result & 0x80000000) != 0) << 0x1f | temp1 >> 1) + (uint)((byte)temp1 & 1);\n      if ((product | temp_result << 1) == 0) {\n        temp1 = temp1 & ~(temp_result >> 0x1f);\n      }\n      return temp1;\n    }\n    return result;\n  }\nLAB_0800903c:\n  return result & 0x80000000 | 0x7f800000;\n}\n\n",
            "current_name": "calculate_float_value_08008eec",
            "entrypoint": "0x08008eec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008eec": "calculate_float_value_08008eec",
                "SBORROW4": "signed_subtraction",
                "SCARRY4": "add_overflow",
                "bVar10": "is_negative",
                "bVar9": "is_zero",
                "iVar4": "sum",
                "iVar5": "diff",
                "iVar7": "shift_amount",
                "lVar1": "product",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar2": "result",
                "uVar3": "temp1",
                "uVar6": "product",
                "uVar8": "temp_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009054": {
            "additional_data": {
                "FUN_08009054": {
                    "calculate_float": 6,
                    "calculate_float_from_u_int": 1,
                    "calculate_float_value": 4,
                    "calculate_floating_point": 9,
                    "calculate_floating_point_number": 1,
                    "calculate_floating_point_value": 1,
                    "compute_float": 1,
                    "convert_float_to_fixed": 1,
                    "decode_float": 1,
                    "ieee754_to_float": 1,
                    "perform_floating_point_ops": 1,
                    "reverse_float_bits": 1,
                    "reverse_float_operation": 1
                },
                "SBORROW4": {
                    "s_borrow4": 1,
                    "signed_borrow": 1,
                    "signed_borrow4": 1
                },
                "SCARRY4": {
                    "s_carry4": 1,
                    "signed_carry": 1,
                    "signed_carry4": 1
                },
                "bVar7": {
                    "bool_var1": 1,
                    "carry_flag": 1,
                    "check_zero1": 1,
                    "condition": 4,
                    "condition1": 4,
                    "condition_1": 1,
                    "flag1": 7,
                    "flag_a": 1,
                    "is_zero": 10,
                    "is_zero_shift": 1
                },
                "bVar8": {
                    "bool_var2": 1,
                    "carry": 1,
                    "check_zero2": 1,
                    "condition2": 5,
                    "condition_2": 1,
                    "condition_result1": 1,
                    "flag1": 1,
                    "flag2": 7,
                    "flag_b": 1,
                    "is_carry": 2,
                    "is_max": 2,
                    "is_negative": 4,
                    "is_overflow": 1,
                    "is_shift_addition": 1,
                    "overflow1": 1,
                    "overflow_flag": 1
                },
                "bVar9": {
                    "add_result": 1,
                    "bool_var3": 1,
                    "borrow_flag": 1,
                    "condition3": 5,
                    "condition_result2": 1,
                    "flag2": 1,
                    "flag3": 7,
                    "flag_c": 1,
                    "is_borrow": 2,
                    "is_carry": 3,
                    "is_overflow": 3,
                    "overflow": 3,
                    "overflow2": 1,
                    "scarry_flag": 1
                },
                "iVar3": {
                    "diff": 4,
                    "diff1": 1,
                    "diff_exp": 1,
                    "difference": 10,
                    "exponent_difference": 1,
                    "i1": 1,
                    "shift_count": 1,
                    "shift_difference": 2,
                    "temp1": 1,
                    "temp3": 3,
                    "temp_var3": 4,
                    "var3": 2
                },
                "iVar5": {
                    "diff2": 1,
                    "i2": 1,
                    "new_exp": 1,
                    "normalized_difference": 1,
                    "rounded_exponent": 1,
                    "shifted_amount": 1,
                    "shifted_difference2": 1,
                    "sum": 6,
                    "sum_difference": 1,
                    "sum_plus127": 1,
                    "sum_plus_127": 1,
                    "sum_with_overflow": 1,
                    "temp": 2,
                    "temp3": 1,
                    "temp5": 3,
                    "temp_value4": 1,
                    "temp_var5": 4,
                    "temp_variable2": 1,
                    "var5": 2
                },
                "param_1": {
                    "a": 1,
                    "encoded_float_1": 1,
                    "first_float": 1,
                    "float1": 1,
                    "input1": 10,
                    "input_1": 1,
                    "input_a": 3,
                    "input_float1": 2,
                    "input_value1": 3,
                    "integer_part": 1,
                    "num1": 1,
                    "number1": 1,
                    "operand_1": 1,
                    "value1": 3,
                    "value_a": 1
                },
                "param_2": {
                    "b": 1,
                    "encoded_float_2": 1,
                    "float2": 1,
                    "fractional_part": 1,
                    "input2": 10,
                    "input_2": 1,
                    "input_b": 3,
                    "input_float2": 2,
                    "input_value2": 3,
                    "num2": 1,
                    "number2": 1,
                    "operand_2": 1,
                    "second_float": 1,
                    "value2": 3,
                    "value_b": 1
                },
                "param_3": {
                    "c": 1,
                    "float_parameter": 1,
                    "input3": 2,
                    "input_c": 2,
                    "input_flag": 1,
                    "input_param3": 1,
                    "mask": 1,
                    "other_param": 1,
                    "param3": 7,
                    "param_3": 1,
                    "precision": 1,
                    "result1": 1,
                    "round_mode": 1,
                    "undefined_value": 1,
                    "unknown": 1,
                    "unknown_param": 1,
                    "unused": 3,
                    "unused_param_3": 1,
                    "unused_parameter": 1,
                    "value1": 1,
                    "var3": 1
                },
                "param_4": {
                    "additional_param": 1,
                    "bit_shift_value": 1,
                    "byte_val": 1,
                    "d": 1,
                    "float_result": 1,
                    "input4": 2,
                    "input_d": 2,
                    "input_param4": 1,
                    "mask2": 1,
                    "other_input": 1,
                    "param4": 6,
                    "param_4": 1,
                    "result2": 1,
                    "rounding_mode": 1,
                    "shift_amount": 1,
                    "shift_bits": 1,
                    "sticky_bit": 1,
                    "temp_value": 1,
                    "unknown_param2": 1,
                    "unused": 1,
                    "unused2": 1,
                    "unused_param_4": 1,
                    "value2": 1,
                    "var4": 1
                },
                "uVar1": {
                    "abs_diff": 1,
                    "bit_mask": 1,
                    "bit_shifted_input2": 1,
                    "bit_shifted_value_b": 1,
                    "mask": 1,
                    "mask1": 1,
                    "normalized_float_1": 1,
                    "result": 1,
                    "result1": 2,
                    "rounded_product": 1,
                    "shifted_input2": 4,
                    "shifted_value1": 1,
                    "temp1": 7,
                    "temp_value1": 1,
                    "temp_var1": 4,
                    "u1": 1,
                    "var1": 2
                },
                "uVar2": {
                    "bit_pos": 1,
                    "bit_shifted_value_a": 1,
                    "exp1": 1,
                    "exp_diff": 1,
                    "exponent_a": 1,
                    "normalized_float_2": 1,
                    "normalized_input1_exponent": 1,
                    "result2": 2,
                    "shifted_input1": 4,
                    "shifted_val1": 1,
                    "shifted_value": 1,
                    "shifted_value2": 1,
                    "temp2": 7,
                    "temp_value2": 1,
                    "temp_var2": 4,
                    "u2": 1,
                    "var2": 2
                },
                "uVar4": {
                    "comparison": 1,
                    "exponent_b": 1,
                    "shifted_difference": 3,
                    "shifted_exp1": 1,
                    "shifted_float_1": 1,
                    "shifted_val2": 1,
                    "sticky_bit_temp": 1,
                    "sum": 3,
                    "temp2": 1,
                    "temp3": 3,
                    "temp4": 4,
                    "temp_value3": 1,
                    "temp_var4": 4,
                    "temp_variable": 1,
                    "tmp": 1,
                    "u3": 1,
                    "u_var4": 1,
                    "var4": 2
                },
                "uVar6": {
                    "result": 19,
                    "temp4": 1,
                    "temp6": 4,
                    "temp_var6": 4,
                    "u4": 1,
                    "var6": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08001f00",
                "FUN_080028bc",
                "FUN_08003004",
                "FUN_08004250",
                "FUN_08002908",
                "FUN_080004fc",
                "FUN_08004940",
                "FUN_08003618",
                "FUN_08002e08",
                "FUN_08001994"
            ],
            "code": "\nuint calculate_float_from_u_int_08009054(uint input1,uint input2,undefined4 param3,uint param4)\n\n{\n  uint temp1;\n  uint temp2;\n  int difference;\n  uint temp_var4;\n  int sum;\n  uint result;\n  bool is_zero;\n  bool flag2;\n  bool flag3;\n  \n  temp2 = input1 >> 0x17 & 0xff;\n  is_zero = temp2 == 0;\n  if (!is_zero) {\n    param4 = input2 >> 0x17 & 0xff;\n    is_zero = param4 == 0;\n  }\n  if (!is_zero) {\n    is_zero = temp2 == 0xff;\n  }\n  if (!is_zero) {\n    is_zero = param4 == 0xff;\n  }\n  if (is_zero) {\n    param4 = input2 >> 0x17 & 0xff;\n    result = input1;\n    if (temp2 == 0xff) {\n      if (((input1 & 0x7fffff) != 0) || (result = input2, param4 == 0xff)) {\nLAB_0800904a:\n        return result | 0x7fc00000;\n      }\n    }\n    else {\n      if (param4 == 0xff) {\n        result = input2;\n        if ((input2 & 0x7fffff) == 0) {\nLAB_08009000:\n          return (input1 ^ input2) & 0x80000000;\n        }\n        goto LAB_0800904a;\n      }\n      is_zero = (input1 & 0x7fffffff) == 0;\n      if (!is_zero) {\n        is_zero = (input2 & 0x7fffffff) == 0;\n      }\n      if (!is_zero) {\n        is_zero = temp2 == 0;\n        result = input1 & 0x80000000;\n        while( true ) {\n          if (is_zero) {\n            input1 = input1 << 1;\n            is_zero = (input1 & 0x800000) == 0;\n          }\n          if (!is_zero) break;\n          temp2 = temp2 - 1;\n        }\n        input1 = input1 | result;\n        is_zero = param4 == 0;\n        result = input2 & 0x80000000;\n        while( true ) {\n          if (is_zero) {\n            input2 = input2 << 1;\n            is_zero = (input2 & 0x800000) == 0;\n          }\n          if (!is_zero) break;\n          param4 = param4 - 1;\n        }\n        input2 = input2 | result;\n        goto LAB_0800906c;\n      }\n      if ((input1 & 0x7fffffff) == 0) {\n        if ((input2 & 0x7fffffff) != 0) goto LAB_08009000;\n        goto LAB_0800904a;\n      }\n    }\n    input1 = input1 ^ input2;\n  }\n  else {\nLAB_0800906c:\n    difference = temp2 - param4;\n    if (input2 << 9 == 0) {\n      input1 = (input1 ^ input2) & 0x80000000 | input1 & 0x7fffff;\n      flag3 = signed_carry(difference,0x7f);\n      sum = difference + 0x7f;\n      is_zero = sum < 0;\n      flag2 = sum == 0;\n      if (!flag2 && is_zero == flag3) {\n        flag3 = signed_borrow4(0xff,sum);\n        is_zero = 0xff - sum < 0;\n        flag2 = sum == 0xff;\n      }\n      if (!flag2 && is_zero == flag3) {\n        input1 = input1 | sum * 0x800000;\n      }\n      if (!flag2 && is_zero == flag3) {\n        return input1;\n      }\n      input1 = input1 | 0x800000;\n      temp2 = 0;\n      flag2 = signed_borrow4(sum,1);\n      temp_var4 = difference + 0x7e;\n      is_zero = temp_var4 == 0;\n      result = temp_var4;\n    }\n    else {\n      temp1 = (input2 << 9) >> 4 | 0x10000000;\n      temp2 = (input1 << 9) >> 4 | 0x10000000;\n      input1 = (input1 ^ input2) & 0x80000000;\n      is_zero = temp1 <= temp2;\n      if (!is_zero) {\n        temp2 = temp2 << 1;\n      }\n      temp_var4 = difference + 0x7d + (uint)is_zero;\n      result = 0x800000;\n      do {\n        if (temp1 <= temp2) {\n          temp2 = temp2 - temp1;\n          input1 = input1 | result;\n        }\n        is_zero = temp1 >> 1 <= temp2;\n        if (is_zero) {\n          temp2 = temp2 - (temp1 >> 1);\n        }\n        if (is_zero) {\n          input1 = input1 | result >> 1;\n        }\n        is_zero = temp1 >> 2 <= temp2;\n        if (is_zero) {\n          temp2 = temp2 - (temp1 >> 2);\n        }\n        if (is_zero) {\n          input1 = input1 | result >> 2;\n        }\n        is_zero = temp1 >> 3 <= temp2;\n        if (is_zero) {\n          temp2 = temp2 - (temp1 >> 3);\n        }\n        if (is_zero) {\n          input1 = input1 | result >> 3;\n        }\n        temp2 = temp2 * 0x10;\n        is_zero = temp2 == 0;\n        if (!is_zero) {\n          result = result >> 4;\n          is_zero = result == 0;\n        }\n      } while (!is_zero);\n      flag2 = signed_borrow4(temp_var4,0xfd);\n      is_zero = temp_var4 == 0xfd;\n      result = temp_var4 - 0xfd;\n      if (temp_var4 < 0xfe) {\n        input1 = input1 + temp_var4 * 0x800000 + (uint)(temp1 <= temp2);\n        if (temp2 - temp1 == 0) {\n          input1 = input1 & 0xfffffffe;\n        }\n        return input1;\n      }\n    }\n    if (is_zero || (int)result < 0 != flag2) {\n      is_zero = (int)(temp_var4 + 0x19) < 0;\n      if (temp_var4 == 0xffffffe7 || is_zero != signed_carry(temp_var4,0x19)) {\n        input1 = input1 & 0x80000000;\n      }\n      if (temp_var4 == 0xffffffe7 || is_zero != signed_carry(temp_var4,0x19)) {\n        return input1;\n      }\n      result = (input1 << 1) >> (-temp_var4 & 0xff);\n      temp_var4 = input1 << (temp_var4 + 0x20 & 0xff);\n      result = ((uint)((input1 & 0x80000000) != 0) << 0x1f | result >> 1) + (uint)((byte)result & 1);\n      if ((temp2 | temp_var4 << 1) == 0) {\n        result = result & ~(temp_var4 >> 0x1f);\n      }\n      return result;\n    }\n  }\n  return input1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "current_name": "calculate_float_from_u_int_08009054",
            "entrypoint": "0x08009054",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009054": "calculate_float_from_u_int_08009054",
                "SBORROW4": "signed_borrow4",
                "SCARRY4": "signed_carry",
                "bVar7": "is_zero",
                "bVar8": "flag2",
                "bVar9": "flag3",
                "iVar3": "difference",
                "iVar5": "sum",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar4": "temp_var4",
                "uVar6": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800919c": {
            "additional_data": {
                "FUN_0800919c": {
                    "binary_arithmetic_operation": 1,
                    "calculate_bitwise_result": 1,
                    "calculate_checksum": 1,
                    "calculate_new_value": 1,
                    "calculate_parameter": 1,
                    "calculate_result": 11,
                    "check_and_adjust_values": 1,
                    "check_integer_overflow": 1,
                    "check_overflow": 6,
                    "check_overflow_and_negation": 1,
                    "check_overflow_and_sign": 3,
                    "multiply_and_compare": 1,
                    "perform_calculation": 1,
                    "reverse_implementation": 1
                },
                "bVar1": {
                    "is_combined_inputs_negative": 1,
                    "is_combined_negative": 1,
                    "is_combined_value_negative": 1,
                    "is_greater_than_zero": 1,
                    "is_negative": 21,
                    "is_negative_result": 1,
                    "is_negative_xor": 2,
                    "is_overflow": 1,
                    "is_positive": 1,
                    "is_result_negative": 1
                },
                "bVar5": {
                    "is_combined_inputs_zero": 1,
                    "is_combined_zero": 1,
                    "is_result_zero": 2,
                    "is_zero": 26,
                    "is_zero_result": 1
                },
                "param_1": {
                    "adjusted_value": 1,
                    "first_operand": 1,
                    "input1": 5,
                    "input_1": 7,
                    "input_number_1": 1,
                    "input_one": 1,
                    "input_param1": 1,
                    "input_value_1": 4,
                    "num1": 2,
                    "output": 2,
                    "output_1": 1,
                    "result": 1,
                    "value1": 2,
                    "value_1": 1
                },
                "param_1_doubled": {
                    "input_1_times_2": 1
                },
                "param_1_xor_2": {
                    "input_1_xor_input_2": 1
                },
                "param_2": {
                    "input2": 5,
                    "input_2": 8,
                    "input_number_2": 1,
                    "input_param2": 1,
                    "input_two": 1,
                    "input_value_2": 5,
                    "num2": 2,
                    "output": 1,
                    "output_2": 1,
                    "second_operand": 1,
                    "sign_bit": 1,
                    "value2": 2,
                    "value_2": 1
                },
                "param_2_doubled": {
                    "input_2_times_2": 1
                },
                "return": {
                    "result": 1
                },
                "uVar2": {
                    "calculation_1": 1,
                    "double_first_operand": 1,
                    "double_input1": 1,
                    "double_input_1": 1,
                    "double_input_value_1": 2,
                    "double_num1": 1,
                    "double_param1": 1,
                    "doubled_input1": 1,
                    "doubled_input_1": 1,
                    "doubled_input_one": 1,
                    "doubled_value_1": 2,
                    "input1_double": 1,
                    "input1_shifted": 1,
                    "input_1_doubled": 2,
                    "input_1_multiplied": 2,
                    "input_1_times_2": 3,
                    "input_number_1_times_2": 1,
                    "mul_value1": 1,
                    "multiplied_input_1": 1,
                    "num1_times_2": 1,
                    "result_1": 1,
                    "temp1": 1,
                    "value1_doubled": 2,
                    "value_1_times_2": 1
                },
                "uVar3": {
                    "calculation_2": 1,
                    "double_input2": 1,
                    "double_input_2": 1,
                    "double_input_value_2": 2,
                    "double_num2": 1,
                    "double_param2": 1,
                    "double_second_operand": 1,
                    "doubled_input2": 1,
                    "doubled_input_2": 1,
                    "doubled_input_two": 1,
                    "doubled_value_2": 2,
                    "input2_double": 1,
                    "input2_shifted": 1,
                    "input_2_doubled": 2,
                    "input_2_multiplied": 2,
                    "input_2_times_2": 3,
                    "input_number_2_times_2": 1,
                    "mul_value2": 1,
                    "multiplied_input_2": 1,
                    "num2_times_2": 1,
                    "result_2": 1,
                    "temp2": 1,
                    "value2_doubled": 2,
                    "value_2_times_2": 1
                },
                "uVar4": {
                    "bitwise_or_result": 1,
                    "combined_input": 2,
                    "combined_inputs": 7,
                    "combined_nums": 1,
                    "combined_operands": 1,
                    "combined_params": 1,
                    "combined_result": 3,
                    "combined_value": 5,
                    "combined_values": 2,
                    "merged_input": 1,
                    "merged_values": 1,
                    "result": 5,
                    "resultant": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08009204"
            ],
            "code": "\nuint calculate_bitwise_result_0800919c(uint input_1,uint input_2)\n\n{\n  bool is_negative;\n  uint input_1_times_2;\n  uint input_2_times_2;\n  uint combined_inputs;\n  bool is_zero;\n  \n  input_1_times_2 = input_1 * 2;\n  input_2_times_2 = input_2 * 2;\n  if (((int)input_1_times_2 >> 0x18 == -1 || (int)input_2_times_2 >> 0x18 == -1) &&\n     ((((int)input_1_times_2 >> 0x18 == -1 && ((input_1 & 0x7fffff) != 0)) ||\n      (((int)input_2_times_2 >> 0x18 == -1 && ((input_2 & 0x7fffff) != 0)))))) {\n    result 1;\n  }\n  combined_inputs = input_1_times_2 | input_2 & 0x7fffffff;\n  is_zero = combined_inputs == 0;\n  if (!is_zero) {\n    combined_inputs = input_1 ^ input_2;\n    is_zero = combined_inputs == 0;\n  }\n  is_negative = -1 < (int)combined_inputs;\n  if (is_negative) {\n    input_1 = input_1_times_2 + input_2 * -2;\n    is_zero = input_1 == 0;\n  }\n  if ((is_negative && input_2_times_2 <= input_1_times_2) && !is_zero) {\n    input_1 = (int)input_2 >> 0x1f;\n  }\n  if (!is_negative || input_2_times_2 > input_1_times_2) {\n    input_1 = ~((int)input_2 >> 0x1f);\n  }\n  if (!is_zero) {\n    input_1 = input_1 | 1;\n  }\n  result input_1;\n}\n\n",
            "current_name": "calculate_bitwise_result_0800919c",
            "entrypoint": "0x0800919c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800919c": "calculate_bitwise_result_0800919c",
                "bVar1": "is_negative",
                "bVar5": "is_zero",
                "param_1": "input_1",
                "param_2": "input_2",
                "return": "result",
                "uVar2": "input_1_times_2",
                "uVar3": "input_2_times_2",
                "uVar4": "combined_inputs"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080091fc": {
            "additional_data": {
                "FUN_080091fc": {
                    "call_080091fc": 1,
                    "call_functions": 1,
                    "call_subroutine": 1,
                    "copy_parameters": 3,
                    "copy_params_and_call": 1,
                    "decompiled_function": 1,
                    "execute_function": 10,
                    "execute_operation": 1,
                    "perform_operation": 1,
                    "reorder_parameters": 1,
                    "reverse_and_return": 1,
                    "reverse_order": 1,
                    "swap_parameters": 4,
                    "transfer_data": 1
                },
                "FUN_08009204": {
                    "call_sub_function": 1,
                    "call_subfunction": 1,
                    "copy_data": 3,
                    "copy_parameters": 1,
                    "copy_params": 1,
                    "do_something": 1,
                    "execute_function": 1,
                    "execute_subfunction": 1,
                    "extracted_function": 1,
                    "pass_params_and_execute": 1,
                    "perform_operation": 1,
                    "perform_swap": 2,
                    "print_reversed": 1,
                    "process_data": 1,
                    "process_function": 1,
                    "reverse_helper": 2,
                    "swap_values": 1
                },
                "param_1": {
                    "arg1": 4,
                    "argument1": 1,
                    "dst": 1,
                    "execute_param1": 1,
                    "first_param": 1,
                    "first_parameter": 2,
                    "input1": 7,
                    "input_1": 1,
                    "input_param": 5,
                    "input_param1": 1,
                    "input_param_1": 1,
                    "param_source": 1,
                    "source": 3,
                    "source_param": 1,
                    "temp": 1
                },
                "param_2": {
                    "arg2": 4,
                    "argument2": 1,
                    "destination": 3,
                    "destination_param": 1,
                    "execute_param2": 1,
                    "input2": 7,
                    "input_2": 1,
                    "input_param2": 1,
                    "input_param_2": 1,
                    "output_param": 5,
                    "param_destination": 1,
                    "second_param": 1,
                    "second_parameter": 2,
                    "src": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08009204"
            ],
            "calling": [
                "FUN_08009264",
                "FUN_08009250"
            ],
            "code": "\nvoid execute_function_080091fc(undefined4 input1,undefined4 input2)\n\n{\n  FUN_08009204(input2,input1);\n  return;\n}\n\n",
            "current_name": "execute_function_080091fc",
            "entrypoint": "0x080091fc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080091fc": "execute_function_080091fc",
                "param_1": "input1",
                "param_2": "input2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009204": {
            "additional_data": {
                "FUN_0800919c": {
                    "calculate_sum": 1,
                    "combine_32bit_values": 1,
                    "combine_numbers": 1,
                    "combine_params": 1,
                    "combine_values": 1,
                    "concatenate": 3,
                    "concatenate_integers_helper": 1,
                    "concatenate_numbers": 1,
                    "concatenate_uint_params": 1,
                    "concatenate_values": 4,
                    "multiply_integers": 1,
                    "perform_calculation": 1,
                    "perform_concatenation": 3,
                    "perform_number_concatenation": 1,
                    "perform_operation": 2,
                    "retrieve_params": 1
                },
                "FUN_08009204": {
                    "concatenate_64bit": 1,
                    "concatenate_64bit_numbers": 1,
                    "concatenate_and_return": 1,
                    "concatenate_integers": 2,
                    "concatenate_numbers": 1,
                    "concatenate_param": 1,
                    "concatenate_param1_param2": 1,
                    "concatenate_parameters": 9,
                    "concatenate_params": 13,
                    "concatenate_values": 1
                },
                "param_1": {
                    "first_32bit_value": 1,
                    "first_input": 1,
                    "first_integer": 1,
                    "first_number": 3,
                    "first_param": 6,
                    "first_parameter": 4,
                    "first_value": 1,
                    "input1": 5,
                    "input_1": 1,
                    "input_one": 1,
                    "input_param1": 1,
                    "input_param_1": 1,
                    "num1": 1,
                    "number1_param": 1,
                    "operand_1": 1,
                    "p1": 1,
                    "value1": 1
                },
                "param_2": {
                    "input2": 5,
                    "input_2": 1,
                    "input_param2": 1,
                    "input_param_2": 1,
                    "input_two": 1,
                    "num2": 1,
                    "number2_param": 1,
                    "operand_2": 1,
                    "p2": 1,
                    "second_32bit_value": 1,
                    "second_input": 1,
                    "second_integer": 1,
                    "second_number": 3,
                    "second_param": 6,
                    "second_parameter": 4,
                    "second_value": 1,
                    "value2": 1
                },
                "uint": {
                    "unsigned_integer": 1
                }
            },
            "called": [
                "FUN_0800919c"
            ],
            "calling": [
                "FUN_0800923c",
                "FUN_08009228",
                "FUN_080091fc",
                "FUN_08009214"
            ],
            "code": "\nundefined8 concatenate_params_08009204(undefined4 first_param,undefined4 second_param)\n\n{\n  FUN_0800919c();\n  return CONCAT44(second_param,first_param);\n}\n\n",
            "current_name": "concatenate_params_08009204",
            "entrypoint": "0x08009204",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009204": "concatenate_params_08009204",
                "param_1": "first_param",
                "param_2": "second_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009214": {
            "additional_data": {
                "FUN_08009204": {
                    "call_fun_08009204": 1,
                    "execute_function": 1,
                    "execute_process": 1,
                    "execute_sub_function": 1,
                    "initialize_sub_functions": 1
                },
                "FUN_08009214": {
                    "check_if_char_not_null": 1,
                    "check_if_character_non_null": 1,
                    "check_if_fun_called": 1,
                    "check_if_function_success": 1,
                    "check_if_in_zr_not_null": 1,
                    "check_if_initialized": 5,
                    "check_if_input_is_not_null": 1,
                    "check_if_input_not_null": 1,
                    "check_if_not_empty": 1,
                    "check_if_not_null": 3,
                    "check_if_null_character": 1,
                    "check_if_null_terminated": 1,
                    "check_if_string_exists": 1,
                    "check_if_valid": 1,
                    "check_in_zr": 2,
                    "check_in_zr_is_not_null": 1,
                    "check_input": 1,
                    "check_non_empty_char": 1,
                    "check_non_zero_char": 1,
                    "check_non_zero_value": 1,
                    "check_nonzero": 1,
                    "is_in_zr_not_null": 1,
                    "is_nonzero": 1,
                    "is_nonzero_char": 1
                },
                "in_ZR": {
                    "character": 2,
                    "check_result": 2,
                    "check_value": 1,
                    "error_flag": 1,
                    "input_category_flag": 1,
                    "input_char": 5,
                    "input_character": 4,
                    "is_initialized": 4,
                    "is_null": 1,
                    "is_string_found": 1,
                    "is_valid": 1,
                    "is_zero": 1,
                    "result": 6,
                    "return_value": 1
                },
                "param_1": {
                    "input_param_1": 1,
                    "unspecified_1": 1
                },
                "param_2": {
                    "input_param_2": 1,
                    "unspecified_2": 1
                }
            },
            "called": [
                "FUN_08009204"
            ],
            "calling": [
                "FUN_08001f00",
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08002afc",
                "FUN_08004e30",
                "FUN_08002638"
            ],
            "code": "\nbool check_if_input_is_not_null_08009214(void)\n\n{\n  char result;\n  \n  FUN_08009204();\n  return result != '\\0';\n}\n\n",
            "current_name": "check_if_input_is_not_null_08009214",
            "entrypoint": "0x08009214",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009214": "check_if_input_is_not_null_08009214",
                "in_ZR": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009228": {
            "additional_data": {
                "FUN_08009204": {
                    "call_subfunction": 1,
                    "do_something": 1,
                    "initialize_cy": 3
                },
                "FUN_08009228": {
                    "check_if_cy_is_null": 2,
                    "check_if_empty": 1,
                    "check_if_input_empty": 2,
                    "check_if_input_is_empty": 1,
                    "check_if_input_null": 1,
                    "check_if_null_byte": 1,
                    "check_if_null_terminated": 5,
                    "check_if_string_empty": 2,
                    "check_null_terminated_string": 1,
                    "check_null_terminator": 2,
                    "check_zero_termination": 1,
                    "is_cy_null": 4,
                    "is_in_c_string_null_terminated": 1,
                    "is_in_cy_null": 1,
                    "is_input_null_terminated": 1,
                    "is_null_terminated": 2,
                    "is_null_termination": 1,
                    "is_null_terminator": 1,
                    "is_string_empty": 1
                },
                "in_CY": {
                    "character": 3,
                    "current_character": 1,
                    "cy": 1,
                    "cy_char": 1,
                    "cy_flag": 1,
                    "in_cy": 1,
                    "input_char": 14,
                    "input_character": 8,
                    "is_null": 1
                },
                "param_1": {
                    "param1": 1
                },
                "param_2": {
                    "param2": 1
                }
            },
            "called": [
                "FUN_08009204"
            ],
            "calling": [
                "FUN_080005b4",
                "FUN_080029d8",
                "FUN_08002afc",
                "FUN_08004e30",
                "FUN_08003004",
                "FUN_08003826"
            ],
            "code": "\nbool check_if_cy_is_null_08009228(void)\n\n{\n  char input_char;\n  \n  FUN_08009204();\n  return input_char == '\\0';\n}\n\n",
            "current_name": "check_if_cy_is_null_08009228",
            "entrypoint": "0x08009228",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009228": "check_if_cy_is_null_08009228",
                "in_CY": "input_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800923c": {
            "additional_data": {
                "FUN_08009204": {
                    "execute_sub_functions": 1,
                    "execute_subfunction": 1,
                    "initialize_system": 1
                },
                "FUN_0800923c": {
                    "check_carry_and_zero": 1,
                    "check_carry_and_zero_flags": 1,
                    "check_condition": 1,
                    "check_conditions": 2,
                    "check_cy_and_zr": 10,
                    "check_cy_zr": 1,
                    "check_cy_zr_flags": 1,
                    "check_error_conditions": 1,
                    "check_error_flags": 2,
                    "check_flags": 4,
                    "check_for_zero_carry": 1,
                    "check_inverted_zero": 1,
                    "check_result": 2,
                    "check_special_conditions": 1,
                    "evaluate_result": 1,
                    "is_any_input_false": 1
                },
                "in_CY": {
                    "carry_flag": 24,
                    "carry_flag_result": 1,
                    "carry_result": 1,
                    "is_carry": 2,
                    "is_carry_set": 2
                },
                "in_ZR": {
                    "is_zero": 1,
                    "is_zero_result": 3,
                    "zero_flag": 23,
                    "zero_flag_result": 1,
                    "zero_result": 1,
                    "zero_result_flag": 1
                },
                "param_1": {
                    "value1": 1
                },
                "param_2": {
                    "value2": 1
                }
            },
            "called": [
                "FUN_08009204"
            ],
            "calling": [
                "FUN_08001f00",
                "FUN_080005b4",
                "FUN_08004e30"
            ],
            "code": "\nbool check_cy_and_zr_0800923c(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_08009204();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "current_name": "check_cy_and_zr_0800923c",
            "entrypoint": "0x0800923c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800923c": "check_cy_and_zr_0800923c",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009250": {
            "additional_data": {
                "FUN_080091fc": {
                    "call_subfunction": 1,
                    "execute_sub_functions": 1,
                    "execute_subfunction": 1,
                    "initialize": 1,
                    "initialize_flags": 1,
                    "initialize_params": 1,
                    "invoke_subfunction": 1,
                    "perform_initialization": 1,
                    "perform_operation": 2,
                    "set_flags": 1,
                    "update_flags": 1
                },
                "FUN_08009250": {
                    "check_carry_and_zero": 1,
                    "check_carry_and_zero_flags": 2,
                    "check_condition": 2,
                    "check_conditions": 3,
                    "check_cy_and_zr": 8,
                    "check_cy_zr": 5,
                    "check_cy_zr_flags": 1,
                    "check_error_flags": 1,
                    "check_flags": 2,
                    "check_for_zero": 1,
                    "check_for_zero_flags": 1,
                    "check_zero_and_carry": 1,
                    "check_zero_and_carry_flags": 1,
                    "evaluate_result": 1,
                    "validate_flags": 1
                },
                "in_CY": {
                    "carry": 1,
                    "carry_flag": 17,
                    "carry_flag_set": 1,
                    "carry_result": 1,
                    "cy_flag": 1,
                    "has_carry": 2,
                    "is_carry": 2,
                    "is_carry_set_flag": 1,
                    "is_cy_set": 1
                },
                "in_ZR": {
                    "is_zero": 2,
                    "is_zero_flag": 1,
                    "is_zero_result": 3,
                    "is_zr_set": 1,
                    "zero_flag": 16,
                    "zero_flag_set": 1,
                    "zero_result": 2,
                    "zr_flag": 1
                },
                "param_1": {
                    "arg1": 1,
                    "param1": 1,
                    "undefined_param1": 1,
                    "undefined_param_1": 1
                },
                "param_2": {
                    "arg2": 1,
                    "param2": 1,
                    "undefined_param2": 1,
                    "undefined_param_2": 1
                }
            },
            "called": [
                "FUN_080091fc"
            ],
            "calling": [
                "FUN_08001f00",
                "FUN_08003004"
            ],
            "code": "\nbool check_cy_and_zr_08009250(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_080091fc();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "current_name": "check_cy_and_zr_08009250",
            "entrypoint": "0x08009250",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009250": "check_cy_and_zr_08009250",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009264": {
            "additional_data": {
                "FUN_080091fc": {
                    "initialize_cy": 1,
                    "initialize_variables": 1
                },
                "FUN_08009264": {
                    "check_for_null_termination": 1,
                    "check_if_character_null": 1,
                    "check_if_cy_is_null": 1,
                    "check_if_in_cy_is_null": 2,
                    "check_if_input_empty": 1,
                    "check_if_input_is_empty": 1,
                    "check_if_input_is_null": 1,
                    "check_if_null": 1,
                    "check_if_null_terminated": 3,
                    "check_if_string_empty": 1,
                    "check_if_string_is_empty": 3,
                    "check_in_cy": 1,
                    "check_null_terminated": 1,
                    "check_null_termination": 4,
                    "is_cy_null": 2,
                    "is_input_empty": 2,
                    "is_input_null": 1,
                    "is_null_string": 1,
                    "is_null_terminated": 2,
                    "is_string_empty": 1
                },
                "in_CY": {
                    "char_input": 1,
                    "check_char": 1,
                    "cy": 1,
                    "input_char": 15,
                    "input_character": 11,
                    "is_empty": 1,
                    "user_input": 1
                },
                "param_1": {
                    "unused_param1": 1
                },
                "param_2": {
                    "unused_param2": 1
                }
            },
            "called": [
                "FUN_080091fc"
            ],
            "calling": [
                "FUN_080029d8",
                "FUN_08003004"
            ],
            "code": "\nbool check_if_in_cy_is_null_08009264(void)\n\n{\n  char input_char;\n  \n  FUN_080091fc();\n  return input_char == '\\0';\n}\n\n",
            "current_name": "check_if_in_cy_is_null_08009264",
            "entrypoint": "0x08009264",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009264": "check_if_in_cy_is_null_08009264",
                "in_CY": "input_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009278": {
            "additional_data": {
                "FUN_08009278": {
                    "apply_transformation": 1,
                    "binary_to_signed_integer": 1,
                    "convert_to_fixed_point": 1,
                    "convert_to_positive_int": 1,
                    "convert_to_positive_integer": 1,
                    "convert_to_signed_int": 2,
                    "convert_to_signed_integer": 3,
                    "convert_unsigned_int": 1,
                    "convert_unsigned_to_signed": 1,
                    "convert_unsigned_to_signed_int": 1,
                    "decode_int": 1,
                    "decode_integer": 1,
                    "decode_value": 1,
                    "extract_and_normalize": 1,
                    "extract_integer_from_parameter": 1,
                    "extract_signed_magnitude": 1,
                    "extract_signed_value": 1,
                    "extract_value": 1,
                    "reverse_and_adjust_value": 1,
                    "reverse_and_convert": 2,
                    "reverse_and_fix_number": 1,
                    "reverse_arithmetic": 1,
                    "reverse_number": 1,
                    "reverse_transform": 1,
                    "reverse_unsigned_integer": 1,
                    "reverse_value": 1
                },
                "param_1": {
                    "conditioned_input": 1,
                    "converted_value": 1,
                    "encoded_value": 1,
                    "input": 5,
                    "input_number": 3,
                    "input_value": 13,
                    "masked_input": 1,
                    "masked_value": 1,
                    "output_value": 1,
                    "signed_value": 1,
                    "unsigned_integer": 1,
                    "unsigned_value": 1,
                    "value": 1
                },
                "param_2": {
                    "new_input_value": 1
                },
                "uVar1": {
                    "conditioned_input": 1,
                    "converted_value": 2,
                    "decoded_value": 1,
                    "processed_value": 1,
                    "result": 2,
                    "shift_count": 1,
                    "shift_result": 1,
                    "shifted_byte": 1,
                    "shifted_input": 5,
                    "shifted_integer": 1,
                    "shifted_number": 2,
                    "shifted_result": 1,
                    "shifted_value": 12
                },
                "uVar2": {
                    "adjusted_value": 1,
                    "converted_value": 1,
                    "difference": 17,
                    "difference_from_max": 1,
                    "offset": 1,
                    "result": 1,
                    "shift_amount": 2,
                    "shift_distance": 1,
                    "shifted_difference": 1,
                    "shifted_distance": 1,
                    "shifted_value": 1,
                    "sign_extension": 1,
                    "subtract_value": 1,
                    "temp": 1
                },
                "uVar3": {
                    "converted_value": 3,
                    "mask": 1,
                    "output": 1,
                    "result": 1,
                    "shift_amount": 1,
                    "shifted_input_value": 1,
                    "shifted_number": 1,
                    "shifted_result": 1,
                    "shifted_value": 2,
                    "shifted_value1": 1
                },
                "uVar4": {
                    "positive_value": 1,
                    "result": 3,
                    "shift_amount": 1,
                    "shifted_and_masked_value": 1,
                    "sign_bit": 1
                },
                "uVar5": {
                    "flag": 1,
                    "shift_amount": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003826",
                "FUN_08003b98"
            ],
            "code": "\nuint convert_unsigned_to_signed_int_08009278(uint input_value)\n\n{\n  uint shifted_value;\n  uint difference;\n  \n  if (input_value << 1 < 0x7f000000) {\n    return 0;\n  }\n  shifted_value = (input_value << 1) >> 0x18;\n  difference = 0x9e - shifted_value;\n  if (shifted_value < 0x9f && difference != 0) {\n    shifted_value = (input_value << 8 | 0x80000000) >> (difference & 0xff);\n    if ((input_value & 0x80000000) != 0) {\n      shifted_value = -shifted_value;\n    }\n    return shifted_value;\n  }\n  if ((difference == 0xffffff9f) && ((input_value & 0x7fffff) != 0)) {\n    return 0;\n  }\n  input_value = input_value & 0x80000000;\n  if (input_value == 0) {\n    input_value = 0x7fffffff;\n  }\n  return input_value;\n}\n\n",
            "current_name": "convert_unsigned_to_signed_int_08009278",
            "entrypoint": "0x08009278",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009278": "convert_unsigned_to_signed_int_08009278",
                "param_1": "input_value",
                "uVar1": "shifted_value",
                "uVar2": "difference"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009318": {
            "additional_data": {
                "FUN_080082d4": {
                    "perform_computation": 1
                },
                "FUN_08008b60": {
                    "check_result": 1
                },
                "FUN_08009318": {
                    "calculate_double": 1,
                    "calculate_double_precision_number": 1,
                    "calculate_double_precision_value": 1,
                    "calculate_float_from_uint": 1,
                    "calculate_floating_point": 2,
                    "calculate_floating_point_number": 2,
                    "calculate_floating_point_value": 4,
                    "calculate_response": 1,
                    "calculate_result": 1,
                    "calculate_value": 2,
                    "compute_floating_point": 1,
                    "convert_to_double": 5,
                    "perform_calculation": 1
                },
                "bVar4": {
                    "carry": 7,
                    "carry_bit": 1,
                    "carry_flag": 22,
                    "carry_over": 1
                },
                "iVar1": {
                    "check": 1,
                    "check_result": 1,
                    "comparison": 1,
                    "comparison_result": 5,
                    "comparison_variable": 1,
                    "error_code": 1,
                    "result": 7,
                    "result1": 1,
                    "return_value": 6,
                    "status": 6
                },
                "lVar6": {
                    "converted_value": 1,
                    "double_value": 1,
                    "final_result": 8,
                    "final_value": 3,
                    "floating_point": 1,
                    "output": 6,
                    "output_value": 1,
                    "result": 5,
                    "result64": 1,
                    "result_value": 2,
                    "return_value": 2
                },
                "param_1": {
                    "exponent": 1,
                    "input1": 14,
                    "input_1": 1,
                    "input_num_1": 1,
                    "input_parameter": 1,
                    "input_value1": 5,
                    "input_variable1": 1,
                    "mantissa": 1,
                    "num1": 2,
                    "upper_bits": 1,
                    "value": 1,
                    "value1": 2
                },
                "param_2": {
                    "exponent": 2,
                    "input2": 14,
                    "input_2": 1,
                    "input_num_2": 1,
                    "input_value2": 5,
                    "input_variable2": 1,
                    "lower_bits": 1,
                    "mantissa": 1,
                    "num2": 2,
                    "shifted_parameter": 1,
                    "value2": 2
                },
                "param_3": {
                    "constant1": 11,
                    "constant_1": 2,
                    "flag1": 1,
                    "param3": 6,
                    "parameter3": 1,
                    "temp_var1": 1,
                    "undefined_value1": 1,
                    "unknown1": 1,
                    "unused1": 1,
                    "unused_param": 2,
                    "unused_param1": 2,
                    "unused_parameter1": 1,
                    "val1": 1
                },
                "param_4": {
                    "constant2": 11,
                    "constant_2": 2,
                    "flag2": 1,
                    "param4": 6,
                    "parameter4": 1,
                    "temp_var2": 1,
                    "undefined_value2": 1,
                    "unknown2": 1,
                    "unused2": 1,
                    "unused_param": 2,
                    "unused_param2": 2,
                    "unused_parameter2": 1,
                    "val2": 1
                },
                "uVar2": {
                    "difference": 1,
                    "exponent": 5,
                    "exponent_difference": 8,
                    "exponent_offset": 1,
                    "shift_amount": 3,
                    "shift_amt": 1,
                    "shift_val": 1,
                    "shifted_amount": 1,
                    "shifted_bits": 4,
                    "shifted_value": 4,
                    "shifted_variable": 1,
                    "threshold": 1
                },
                "uVar3": {
                    "bit_mask": 4,
                    "mask": 21,
                    "shift_amount": 1,
                    "shift_right_amount": 1,
                    "shifted_bits": 1,
                    "shifted_value": 2,
                    "shifted_value1": 1
                },
                "uVar5": {
                    "combined_bits": 1,
                    "converted_value": 5,
                    "processed_value": 1,
                    "result": 17,
                    "result_variable": 1,
                    "return_val": 1,
                    "temp_result": 4,
                    "temp_value": 1
                }
            },
            "called": [
                "FUN_080082d4",
                "FUN_08008b60"
            ],
            "calling": [
                "FUN_08003004",
                "FUN_08002c18",
                "FUN_08001994"
            ],
            "code": "\nlonglong calculate_floating_point_value_08009318(uint input1,uint input2,undefined4 constant1,undefined4 constant2)\n\n{\n  int result;\n  uint exponent_difference;\n  uint mask;\n  bool carry_flag;\n  undefined8 result;\n  longlong final_result;\n  \n  mask = (input2 << 1) >> 0x15;\n  exponent_difference = mask - 0x3ff;\n  if ((int)exponent_difference < 0x14) {\n    if ((int)exponent_difference < 0) {\n      result = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,constant2);\n      result = FUN_08008b60((int)result,(int)((ulonglong)result >> 0x20),0,0);\n      final_result = CONCAT44(input2,input1);\n      if (result != 0) {\n        if ((int)input2 < 0) {\n          final_result = -0x8000000000000000;\n        }\n        else if ((input1 | input2) == 0) {\n          final_result = 0;\n        }\n        else {\n          final_result = 0x3ff0000000000000;\n        }\n      }\n    }\n    else {\n      mask = 0xfffff >> (exponent_difference & 0xff);\n      final_result = CONCAT44(input2,input1);\n      if ((input2 & mask | input1) != 0) {\n        result = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,constant2);\n        result = FUN_08008b60((int)result,(int)((ulonglong)result >> 0x20),0,0);\n        final_result = CONCAT44(input2,input1);\n        if (result != 0) {\n          if (0 < (int)input2) {\n            input2 = input2 + (0x100000 >> (exponent_difference & 0xff));\n          }\n          final_result = (ulonglong)(input2 & ~mask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)exponent_difference < 0x34) {\n    mask = 0xffffffff >> (mask - 0x413 & 0xff);\n    final_result = CONCAT44(input2,input1);\n    if ((mask & input1) != 0) {\n      result = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,constant2);\n      result = FUN_08008b60((int)result,(int)((ulonglong)result >> 0x20),0,0);\n      final_result = CONCAT44(input2,input1);\n      if (result != 0) {\n        if (0 < (int)input2) {\n          if (exponent_difference == 0x14) {\n            input2 = input2 + 1;\n          }\n          else {\n            exponent_difference = 1 << (0x34 - exponent_difference & 0xff);\n            carry_flag = CARRY4(exponent_difference,input1);\n            input1 = exponent_difference + input1;\n            if (carry_flag != false) {\n              input2 = input2 + 1;\n            }\n          }\n        }\n        final_result = CONCAT44(input2,input1 & ~mask);\n      }\n    }\n  }\n  else {\n    final_result = CONCAT44(input2,input1);\n    if (exponent_difference == 0x400) {\n      final_result = FUN_080082d4();\n    }\n  }\n  return final_result;\n}\n\n",
            "current_name": "calculate_floating_point_value_08009318",
            "entrypoint": "0x08009318",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009318": "calculate_floating_point_value_08009318",
                "bVar4": "carry_flag",
                "iVar1": "result",
                "lVar6": "final_result",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "constant1",
                "param_4": "constant2",
                "uVar2": "exponent_difference",
                "uVar3": "mask",
                "uVar5": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009410": {
            "additional_data": {
                "FUN_080082d0": {
                    "function_d": 1,
                    "handle_extreme_cases": 1,
                    "perform_operation_four": 1,
                    "process_case4": 1,
                    "process_type3": 1,
                    "reverse_bits": 1
                },
                "FUN_08009410": {
                    "calculate_result": 1,
                    "convert_float_to_uint": 1,
                    "handle_floating_point": 1,
                    "process_binary_data": 3,
                    "process_binary_function": 1,
                    "process_data": 8,
                    "process_input": 2,
                    "process_number": 3,
                    "process_param": 1
                },
                "FUN_08009d78": {
                    "function_a": 1,
                    "get_converted_value": 1,
                    "get_values": 1,
                    "perform_operation_three": 1,
                    "process_case3": 1,
                    "process_input": 1
                },
                "FUN_0800a348": {
                    "function_c": 1,
                    "handle_normal_cases": 1,
                    "handle_type2": 1,
                    "perform_operation_two": 1,
                    "process_case2": 1,
                    "process_type2": 1
                },
                "FUN_0800adf0": {
                    "function_b": 1,
                    "handle_special_cases": 1,
                    "handle_type1": 1,
                    "perform_operation_one": 1,
                    "process_case1": 1,
                    "process_type1": 1
                },
                "local_20": {
                    "data3": 1,
                    "local_var2": 1,
                    "local_variable3": 3,
                    "output_value3": 1,
                    "param2": 1,
                    "result3": 3,
                    "result_3": 1,
                    "stack_var2": 1,
                    "temp3": 3,
                    "temp_val_3": 1,
                    "temp_value3": 1,
                    "temp_value_3": 1,
                    "temp_var3": 6,
                    "value3": 2,
                    "var3": 4
                },
                "local_28": {
                    "converted_value": 1,
                    "data1": 1,
                    "local_var1": 1,
                    "local_variable1": 3,
                    "output_value1": 1,
                    "param": 1,
                    "result1": 3,
                    "result_1": 1,
                    "temp1": 3,
                    "temp_val_1": 1,
                    "temp_value1": 1,
                    "temp_value_1": 1,
                    "temp_var1": 6,
                    "value1": 2,
                    "var1": 4
                },
                "param_1": {
                    "arg1": 1,
                    "input": 5,
                    "input1": 10,
                    "input_1": 1,
                    "input_data": 1,
                    "input_param": 2,
                    "input_parameter": 3,
                    "input_value": 6,
                    "input_variable": 1
                },
                "param_2": {
                    "arg2": 1,
                    "bit_pattern": 1,
                    "data": 1,
                    "data_size": 1,
                    "flag": 1,
                    "flag_value": 1,
                    "flags": 1,
                    "input2": 9,
                    "input_2": 1,
                    "input_value": 3,
                    "number": 1,
                    "parameter": 1,
                    "size": 1,
                    "unsigned_int": 1,
                    "unsigned_value": 1,
                    "value": 5
                },
                "uStack_1c": {
                    "data4": 1,
                    "local_variable4": 3,
                    "output_value4": 1,
                    "param3": 1,
                    "result4": 3,
                    "result_4": 1,
                    "stack_var2": 1,
                    "stack_var3": 1,
                    "temp4": 3,
                    "temp_val_4": 1,
                    "temp_value4": 1,
                    "temp_value_4": 1,
                    "temp_var4": 6,
                    "value4": 2,
                    "var4": 4
                },
                "uStack_24": {
                    "data2": 1,
                    "local_variable2": 3,
                    "output_value2": 1,
                    "param1": 1,
                    "result2": 3,
                    "result_2": 1,
                    "stack_var1": 2,
                    "temp2": 3,
                    "temp_val_2": 1,
                    "temp_value2": 1,
                    "temp_value_2": 1,
                    "temp_var2": 6,
                    "value2": 2,
                    "var2": 4
                },
                "uVar1": {
                    "output": 3,
                    "result": 17,
                    "return_value": 9,
                    "return_value1": 1
                },
                "uVar2": {
                    "adjusted_flag": 1,
                    "bit_masked_value": 1,
                    "condition": 2,
                    "flag": 5,
                    "mask_result": 1,
                    "modified_value": 1,
                    "modifier": 1,
                    "option": 1,
                    "processed_flags": 1,
                    "processed_value": 1,
                    "result": 2,
                    "result_code": 1,
                    "return_value2": 1,
                    "status": 4,
                    "temp": 1,
                    "temp_var5": 1,
                    "trimmed_flag_value": 1,
                    "type": 1,
                    "u_condition": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_0800adf0",
                "FUN_0800a348",
                "FUN_08009d78",
                "FUN_080082d0"
            ],
            "calling": [
                "FUN_08001f00"
            ],
            "code": "\nundefined4 process_binary_data_08009410(undefined4 input1,uint input2)\n\n{\n  undefined4 result;\n  uint flag;\n  undefined4 temp_var1;\n  undefined4 temp_var2;\n  undefined4 temp_var3;\n  undefined4 temp_var4;\n  \n  if (0x3fe921fb < (input2 & 0x7fffffff)) {\n    if ((input2 & 0x7fffffff) < 0x7ff00000) {\n      flag = FUN_08009d78(input1,input2,&temp_var1);\n      flag = flag & 3;\n      if (flag == 1) {\n        result = FUN_0800adf0(temp_var1,temp_var2,temp_var3,temp_var4,1);\n      }\n      else if (flag == 2) {\n        result = FUN_0800a348(temp_var1,temp_var2,temp_var3,temp_var4);\n      }\n      else if (flag == 0) {\n        result = FUN_0800a348(temp_var1,temp_var2,temp_var3,temp_var4);\n      }\n      else {\n        result = FUN_0800adf0(temp_var1,temp_var2,temp_var3,temp_var4,1);\n      }\n    }\n    else {\n      result = FUN_080082d0(input1,input2,input1,input2);\n    }\n    return result;\n  }\n  result = FUN_0800a348(input1,input2,0,0);\n  return result;\n}\n\n",
            "current_name": "process_binary_data_08009410",
            "entrypoint": "0x08009410",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009410": "process_binary_data_08009410",
                "local_20": "temp_var3",
                "local_28": "temp_var1",
                "param_1": "input1",
                "param_2": "input2",
                "uStack_1c": "temp_var4",
                "uStack_24": "temp_var2",
                "uVar1": "result",
                "uVar2": "flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080094c0": {
            "additional_data": {
                "FUN_080082d4": {
                    "calculate_hash": 1
                },
                "FUN_08008b60": {
                    "check_status": 1
                },
                "FUN_080094c0": {
                    "binary_function": 1,
                    "calculate_double_precision": 1,
                    "calculate_double_value": 1,
                    "calculate_floating_point": 1,
                    "calculate_floating_point_value": 3,
                    "calculate_hash": 1,
                    "calculate_larger_value": 1,
                    "calculate_modified_value": 1,
                    "calculate_new_value": 1,
                    "calculate_normalized_value": 1,
                    "calculate_result": 7,
                    "calculate_shifted_value": 1,
                    "calculate_value": 1,
                    "convert_float_to_longlong": 1
                },
                "bVar4": {
                    "carry": 6,
                    "carry_check": 2,
                    "carry_flag": 21,
                    "is_carry": 1,
                    "is_carry_set": 1
                },
                "iVar1": {
                    "check_result": 1,
                    "comparison_result": 2,
                    "result": 13,
                    "result_1": 1,
                    "return_value": 4,
                    "status": 6,
                    "success_flag": 1,
                    "temp_var": 1,
                    "verification_result": 1
                },
                "lVar6": {
                    "calculated_value": 1,
                    "combined_result": 1,
                    "concatenated_result": 1,
                    "converted_value": 1,
                    "final_result": 18,
                    "final_value": 3,
                    "output": 3,
                    "return_value": 3
                },
                "param_1": {
                    "exponent": 1,
                    "exponent_bitfield": 1,
                    "input1": 11,
                    "input_1": 5,
                    "input_param": 2,
                    "input_param1": 4,
                    "input_param_1": 1,
                    "input_value_1": 5,
                    "numerator": 1
                },
                "param_2": {
                    "denominator": 1,
                    "input2": 11,
                    "input_2": 5,
                    "input_param2": 4,
                    "input_param_2": 1,
                    "input_value_2": 5,
                    "mantissa": 1,
                    "mantissa_bitfield": 1,
                    "shift_param": 1,
                    "size_param": 1
                },
                "param_3": {
                    "constant1": 3,
                    "constant_1": 6,
                    "extra_param1": 1,
                    "input3": 2,
                    "param3": 4,
                    "placeholder_param1": 1,
                    "temp_value_1": 1,
                    "unused_param": 2,
                    "unused_param1": 2,
                    "unused_param3": 5,
                    "unused_param_1": 3,
                    "var3": 1
                },
                "param_4": {
                    "constant2": 3,
                    "constant_2": 6,
                    "extra_param2": 1,
                    "input4": 2,
                    "param4": 4,
                    "placeholder_param2": 1,
                    "temp_value_2": 1,
                    "unused_param": 1,
                    "unused_param2": 2,
                    "unused_param4": 5,
                    "unused_param_2": 4,
                    "var4": 1
                },
                "uVar2": {
                    "difference": 4,
                    "exponent": 2,
                    "exponent_diff": 3,
                    "exponent_difference": 1,
                    "exponent_shifted": 1,
                    "offset": 1,
                    "shift_amount": 5,
                    "shift_count": 1,
                    "shifted_amount": 1,
                    "shifted_bits": 4,
                    "shifted_bits_diff": 1,
                    "shifted_difference": 1,
                    "shifted_distance": 1,
                    "shifted_param2": 1,
                    "shifted_param_2": 1,
                    "shifted_value": 2,
                    "size_diff": 1
                },
                "uVar3": {
                    "bit_mask": 1,
                    "bitmask": 1,
                    "bits_to_shift": 1,
                    "mask": 16,
                    "mask_value": 1,
                    "shift_amount": 1,
                    "shifted_bits": 7,
                    "shifted_mask": 2,
                    "shifted_right": 1
                },
                "uVar5": {
                    "calculated_result": 1,
                    "carry_result": 1,
                    "computed_result": 1,
                    "computed_value": 2,
                    "func_result": 2,
                    "intermediate_result": 2,
                    "result": 16,
                    "temp_result": 5,
                    "temp_value": 1
                }
            },
            "called": [
                "FUN_080082d4",
                "FUN_08008b60"
            ],
            "calling": [
                "FUN_08001f00",
                "FUN_0800a5a0",
                "FUN_08002408",
                "FUN_08002c18"
            ],
            "code": "\nlonglong calculate_result_080094c0(uint input1,uint input2,undefined4 constant_1,undefined4 constant_2)\n\n{\n  int result;\n  uint shift_amount;\n  uint mask;\n  bool carry_flag;\n  undefined8 result;\n  longlong final_result;\n  \n  mask = (input2 << 1) >> 0x15;\n  shift_amount = mask - 0x3ff;\n  if ((int)shift_amount < 0x14) {\n    if ((int)shift_amount < 0) {\n      result = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,constant_2);\n      result = FUN_08008b60((int)result,(int)((ulonglong)result >> 0x20),0,0);\n      final_result = CONCAT44(input2,input1);\n      if (result != 0) {\n        if ((int)input2 < 0) {\n          if ((input1 | input2 & 0x7fffffff) != 0) {\n            input2 = 0xbff00000;\n          }\n          final_result = (ulonglong)input2 << 0x20;\n        }\n        else {\n          final_result = 0;\n        }\n      }\n    }\n    else {\n      mask = 0xfffff >> (shift_amount & 0xff);\n      final_result = CONCAT44(input2,input1);\n      if ((input2 & mask | input1) != 0) {\n        result = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,constant_2);\n        result = FUN_08008b60((int)result,(int)((ulonglong)result >> 0x20),0,0);\n        final_result = CONCAT44(input2,input1);\n        if (result != 0) {\n          if ((int)input2 < 0) {\n            input2 = input2 + (0x100000 >> (shift_amount & 0xff));\n          }\n          final_result = (ulonglong)(input2 & ~mask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)shift_amount < 0x34) {\n    mask = 0xffffffff >> (mask - 0x413 & 0xff);\n    final_result = CONCAT44(input2,input1);\n    if ((mask & input1) != 0) {\n      result = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,constant_2);\n      result = FUN_08008b60((int)result,(int)((ulonglong)result >> 0x20),0,0);\n      final_result = CONCAT44(input2,input1);\n      if (result != 0) {\n        if ((int)input2 < 0) {\n          if (shift_amount == 0x14) {\n            input2 = input2 + 1;\n          }\n          else {\n            shift_amount = 1 << (0x34 - shift_amount & 0xff);\n            carry_flag = CARRY4(shift_amount,input1);\n            input1 = shift_amount + input1;\n            if (carry_flag != false) {\n              input2 = input2 + 1;\n            }\n          }\n        }\n        final_result = CONCAT44(input2,input1 & ~mask);\n      }\n    }\n  }\n  else {\n    final_result = CONCAT44(input2,input1);\n    if (shift_amount == 0x400) {\n      final_result = FUN_080082d4();\n    }\n  }\n  return final_result;\n}\n\n",
            "current_name": "calculate_result_080094c0",
            "entrypoint": "0x080094c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080094c0": "calculate_result_080094c0",
                "bVar4": "carry_flag",
                "iVar1": "result",
                "lVar6": "final_result",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "constant_1",
                "param_4": "constant_2",
                "uVar2": "shift_amount",
                "uVar3": "mask",
                "uVar5": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080095b8": {
            "additional_data": {
                "FUN_08008ba0": {
                    "calculate_carry": 1,
                    "carry_check": 1,
                    "carry_func": 1,
                    "perform_overflow_check": 1
                },
                "FUN_080095b8": {
                    "calculate_integer_product": 1,
                    "calculate_multiplier": 1,
                    "calculate_product": 19,
                    "calculate_result": 3,
                    "calculate_signed_multiplication": 1,
                    "calculate_signed_multiply": 1,
                    "calculate_value": 1,
                    "calculate_x_times_y": 1,
                    "compute_product": 1,
                    "convert_to_fixed_point": 2
                },
                "iVar4": {
                    "multiplier": 1,
                    "product": 1,
                    "result": 2,
                    "sign": 27
                },
                "param_1": {
                    "dividend": 1,
                    "factor1": 1,
                    "factor_1": 1,
                    "input1": 8,
                    "input_1": 3,
                    "input_value": 1,
                    "input_value1": 1,
                    "input_value_1": 2,
                    "multiplicand": 2,
                    "multiplier": 2,
                    "num1": 2,
                    "number1": 2,
                    "operand1": 1,
                    "value1": 1,
                    "value_1": 1,
                    "x": 2
                },
                "param_2": {
                    "divisor": 1,
                    "factor2": 1,
                    "factor_2": 1,
                    "fractional_bits": 1,
                    "input2": 8,
                    "input_2": 3,
                    "input_value2": 1,
                    "input_value_2": 2,
                    "multiplicand": 2,
                    "multiplier": 2,
                    "num2": 2,
                    "number2": 2,
                    "operand2": 1,
                    "value2": 1,
                    "value_2": 1,
                    "y": 2
                },
                "uVar1": {
                    "bit_mask": 1,
                    "bit_shifted_mask": 1,
                    "bit_shifted_part": 1,
                    "carry": 7,
                    "carry_bit": 1,
                    "carry_value": 1,
                    "mask": 4,
                    "shift_mask": 1,
                    "shifted_bit": 2,
                    "shifted_dividend": 1,
                    "shifted_input2": 2,
                    "shifted_num": 1,
                    "temp1": 6,
                    "tmp1": 1
                },
                "uVar2": {
                    "shift_amount": 4,
                    "shift_count": 2,
                    "shifted": 1,
                    "shifted_amount": 1,
                    "shifted_amt": 1,
                    "shifted_bits": 7,
                    "shifted_input2": 4,
                    "shifted_input2_divided_by21": 1,
                    "shifted_input_2": 1,
                    "shifted_number": 1,
                    "shifted_val": 1,
                    "shifted_value": 2,
                    "shifted_y": 1,
                    "temp2": 4
                },
                "uVar3": {
                    "modified_input1": 1,
                    "modified_value": 1,
                    "processed_val": 1,
                    "processed_value": 1,
                    "product_bits": 1,
                    "result": 23,
                    "result_value": 1,
                    "shifted_input1": 1,
                    "temp3": 1
                },
                "uVar5": {
                    "adjusted_shift": 1,
                    "adjusted_shifted_amount": 1,
                    "bits_difference": 1,
                    "diff": 4,
                    "difference": 7,
                    "exponent": 7,
                    "exponent_bits": 1,
                    "offset": 1,
                    "shift_amount": 2,
                    "shift_difference": 1,
                    "shifted_difference": 1,
                    "shifted_input2_minus1023": 1,
                    "shifted_value": 1,
                    "temp3": 1,
                    "temp4": 1
                }
            },
            "called": [
                "FUN_08008ba0"
            ],
            "calling": [
                "FUN_08003004",
                "FUN_08001994"
            ],
            "code": "\nint calculate_integer_product_080095b8(uint input1,uint input2)\n\n{\n  uint carry;\n  uint shifted_bits;\n  uint result;\n  int sign;\n  uint difference;\n  \n  shifted_bits = (input2 << 1) >> 0x15;\n  difference = shifted_bits - 0x3ff;\n  if ((int)input2 < 0) {\n    sign = -1;\n  }\n  else {\n    sign = 1;\n  }\n  result = input2 & 0xfffff | 0x100000;\n  if ((int)difference < 0x14) {\n    if ((int)difference < 0) {\n      if (difference != 0xffffffff) {\n        sign = 0;\n      }\n      return sign;\n    }\n    result = result + (0x80000 >> (difference & 0xff)) >> (0x14 - difference & 0xff);\n  }\n  else {\n    if (0x1e < difference) {\n      sign = FUN_08008ba0();\n      return sign;\n    }\n    if ((int)difference < 0x34) {\n      carry = 0x80000000 >> (shifted_bits - 0x413 & 0xff);\n      if (CARRY4(carry,input1) != false) {\n        result = result + 1;\n      }\n      result = result << (shifted_bits - 0x413 & 0xff);\n      if (difference != 0x14) {\n        result = result | carry + input1 >> (0x34 - difference & 0xff);\n      }\n    }\n    else {\n      result = result << (shifted_bits - 0x413 & 0xff) | input1 << (shifted_bits - 0x433 & 0xff);\n    }\n  }\n  return result * sign;\n}\n\n",
            "current_name": "calculate_integer_product_080095b8",
            "entrypoint": "0x080095b8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080095b8": "calculate_integer_product_080095b8",
                "iVar4": "sign",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "carry",
                "uVar2": "shifted_bits",
                "uVar3": "result",
                "uVar5": "difference"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009654": {
            "additional_data": {
                "FUN_080082d4": {
                    "calculate_something": 1,
                    "calculate_special_floating_point_value": 1,
                    "divide_by_two": 1,
                    "generate_default_value": 1,
                    "get_default_value": 1,
                    "get_infinity": 1,
                    "get_value_from_function": 1,
                    "handle_special_case": 1,
                    "retrieve_constant": 1,
                    "reverse_operation": 1
                },
                "FUN_08009654": {
                    "calculate_double_precision": 2,
                    "calculate_float": 1,
                    "calculate_floating_point": 1,
                    "calculate_floating_point_value": 1,
                    "combine_parameters": 1,
                    "convert_float_to_double": 2,
                    "convert_float_to_long": 1,
                    "convert_floating_point": 1,
                    "convert_to_double": 7,
                    "convert_to_float": 2,
                    "convert_to_long": 1,
                    "convert_to_long_long": 1,
                    "decode_float": 1,
                    "decompile_and_improve": 1,
                    "extract_float_bits": 1,
                    "process_float_values": 1,
                    "process_numbers": 1,
                    "reverse_bits": 1
                },
                "lVar3": {
                    "combined_result": 1,
                    "concat_result": 1,
                    "converted_double": 1,
                    "encoded_float": 1,
                    "result": 19,
                    "return_value": 1,
                    "special_value": 1
                },
                "param_1": {
                    "float_part": 1,
                    "increment": 1,
                    "input1": 10,
                    "input_float1": 1,
                    "input_high": 1,
                    "input_param1": 1,
                    "input_value1": 1,
                    "int_value": 1,
                    "integer_part": 5,
                    "mantissa": 2,
                    "num_part1": 1,
                    "original_param": 1,
                    "sign_and_exponent": 1,
                    "uint1": 1,
                    "value1": 3
                },
                "param_2": {
                    "adjusted_value2": 1,
                    "exponent": 2,
                    "fraction": 1,
                    "fraction_part": 2,
                    "fraction_value": 1,
                    "fractional_part": 3,
                    "input2": 10,
                    "input_float2": 1,
                    "input_low": 1,
                    "input_param2": 1,
                    "input_value2": 1,
                    "int_part": 1,
                    "num_part2": 1,
                    "uint2": 1,
                    "value2": 3,
                    "value_param": 1
                },
                "param_3": {
                    "default_value1": 2,
                    "input_param1": 1,
                    "param3": 1,
                    "special1": 1
                },
                "param_4": {
                    "default_value2": 2,
                    "extra_param": 1,
                    "input_param2": 1,
                    "param4": 1,
                    "special2": 1
                },
                "uVar1": {
                    "diff": 2,
                    "diff1": 1,
                    "exponent": 5,
                    "exponent1": 1,
                    "exponent_diff": 1,
                    "exponent_difference": 2,
                    "normalized_exponent": 1,
                    "shifted_bits": 4,
                    "shifted_difference": 2,
                    "shifted_fractional_part": 1,
                    "shifted_low": 1,
                    "shifted_param": 1,
                    "shifted_value": 2,
                    "special_case": 1,
                    "temp_var1": 1
                },
                "uVar2": {
                    "bit_difference": 1,
                    "bit_mask": 1,
                    "mask": 2,
                    "shift": 1,
                    "shift_amount": 1,
                    "shift_amt": 1,
                    "shifted": 1,
                    "shifted_amount": 1,
                    "shifted_bits2": 1,
                    "shifted_decimal_places": 1,
                    "shifted_exponent": 7,
                    "shifted_high": 1,
                    "shifted_input2": 1,
                    "shifted_mask": 1,
                    "shifted_value": 4,
                    "temp_var2": 1
                },
                "uVar3": {
                    "mask1": 1
                },
                "uVar4": {
                    "mask2": 1
                },
                "uVar5": {
                    "mask3": 1
                },
                "uVar6": {
                    "carried_bit": 1
                }
            },
            "called": [
                "FUN_080082d4"
            ],
            "calling": [
                "FUN_08004e30"
            ],
            "code": "\nlonglong convert_float_to_double_08009654(uint input1,uint input2)\n\n{\n  uint exponent;\n  uint shifted_exponent;\n  longlong result;\n  \n  result = CONCAT44(input2,input1);\n  shifted_exponent = (input2 << 1) >> 0x15;\n  exponent = shifted_exponent - 0x3ff;\n  if ((int)exponent < 0x14) {\n    if ((int)exponent < 0) {\n      input2 = input2 & 0x80000000;\n      if (exponent == 0xffffffff) {\n        input2 = input2 | 0x3ff00000;\n      }\n      result = (ulonglong)input2 << 0x20;\n    }\n    else {\n      shifted_exponent = 0xfffff >> (exponent & 0xff);\n      result = CONCAT44(input2,input1);\n      if ((input2 & shifted_exponent | input1) != 0) {\n        result = (ulonglong)(input2 + (0x80000 >> (exponent & 0xff)) & ~shifted_exponent) << 0x20;\n      }\n    }\n  }\n  else if ((int)exponent < 0x34) {\n    shifted_exponent = 0xffffffff >> (shifted_exponent - 0x413 & 0xff);\n    if ((input1 & shifted_exponent) != 0) {\n      exponent = 1 << (0x33 - exponent & 0xff);\n      if (CARRY4(input1,exponent) != false) {\n        input2 = input2 + 1;\n      }\n      result = CONCAT44(input2,input1 + exponent & ~shifted_exponent);\n    }\n  }\n  else {\n    result = CONCAT44(input2,input1);\n    if (exponent == 0x400) {\n      result = FUN_080082d4();\n    }\n  }\n  return result;\n}\n\n",
            "current_name": "convert_float_to_double_08009654",
            "entrypoint": "0x08009654",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009654": "convert_float_to_double_08009654",
                "lVar3": "result",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "exponent",
                "uVar2": "shifted_exponent"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080096e8": {
            "additional_data": {
                "FUN_080082d0": {
                    "execute_third_sub_function": 1,
                    "perform_calculation": 1,
                    "perform_operation": 1,
                    "perform_operation_c": 1
                },
                "FUN_080096e8": {
                    "calculate_result": 3,
                    "handle_floating_point": 1,
                    "parse_float": 1,
                    "parse_number": 1,
                    "process_binary_data": 1,
                    "process_binary_function": 1,
                    "process_data": 6,
                    "process_floating_point_number": 1,
                    "process_input": 3,
                    "process_number": 1,
                    "process_parameter": 1,
                    "process_value": 3
                },
                "FUN_08009d78": {
                    "extract_data": 2,
                    "get_results": 1,
                    "get_sub_function_result": 1
                },
                "FUN_0800a348": {
                    "execute_first_sub_function": 1,
                    "perform_operation_b": 1,
                    "process_case1": 1,
                    "process_result1": 1
                },
                "FUN_0800adf0": {
                    "calculate_result": 1,
                    "execute_second_sub_function": 1,
                    "perform_operation_a": 1,
                    "process_result2": 1
                },
                "local_20": {
                    "local_var3": 2,
                    "local_variable3": 1,
                    "output3": 1,
                    "output_3": 2,
                    "param3": 2,
                    "parameter3": 1,
                    "ptr3": 2,
                    "ptr_3": 1,
                    "result3": 3,
                    "temp3": 3,
                    "temp_3": 1,
                    "temp_value3": 1,
                    "temp_var": 1,
                    "temp_var3": 5,
                    "temporary_value_3": 1,
                    "var3": 2,
                    "variable3": 1
                },
                "local_28": {
                    "local_var1": 2,
                    "local_variable1": 1,
                    "mantissa": 1,
                    "output1": 1,
                    "output_1": 2,
                    "param": 1,
                    "param1": 1,
                    "parameter1": 1,
                    "ptr1": 2,
                    "ptr_1": 1,
                    "result1": 3,
                    "temp1": 3,
                    "temp_1": 1,
                    "temp_value1": 1,
                    "temp_var1": 5,
                    "temporary_value": 1,
                    "var1": 2,
                    "variable1": 1
                },
                "param_1": {
                    "arg1": 1,
                    "context": 1,
                    "data": 2,
                    "input": 8,
                    "input1": 4,
                    "input_1": 1,
                    "input_data": 4,
                    "input_param": 5,
                    "input_parameter": 1,
                    "input_value": 3,
                    "status": 1
                },
                "param_2": {
                    "arg2": 1,
                    "bit_representation": 1,
                    "data_size": 1,
                    "flag": 3,
                    "input2": 4,
                    "input_2": 1,
                    "input_number": 1,
                    "input_size": 1,
                    "input_value": 6,
                    "number": 1,
                    "param_value": 1,
                    "size": 3,
                    "value": 7
                },
                "param_3": {
                    "param_a": 1
                },
                "param_4": {
                    "param_b": 1
                },
                "param_5": {
                    "operation_flag": 1
                },
                "uStack_1c": {
                    "another_temp_var": 1,
                    "local_var4": 2,
                    "local_variable4": 1,
                    "output4": 1,
                    "output_4": 2,
                    "param4": 2,
                    "parameter4": 1,
                    "ptr4": 2,
                    "ptr_4": 1,
                    "result4": 3,
                    "temp4": 3,
                    "temp_4": 1,
                    "temp_value4": 1,
                    "temp_var4": 5,
                    "temporary_value_4": 1,
                    "var4": 2,
                    "variable4": 1
                },
                "uStack_24": {
                    "exponent": 1,
                    "local_var2": 2,
                    "local_variable2": 1,
                    "output2": 1,
                    "output_2": 2,
                    "param2": 2,
                    "parameter2": 1,
                    "ptr2": 2,
                    "ptr_2": 1,
                    "result2": 3,
                    "temp2": 3,
                    "temp_2": 1,
                    "temp_value2": 1,
                    "temp_var2": 5,
                    "temporary_value_2": 1,
                    "var2": 2,
                    "variable2": 1
                },
                "uVar1": {
                    "final_result": 2,
                    "result": 19,
                    "result2": 1,
                    "return_value": 7
                },
                "uVar2": {
                    "condition": 1,
                    "flag": 6,
                    "flags": 1,
                    "func_index": 1,
                    "func_result": 1,
                    "modified_flag": 1,
                    "modified_input_2": 1,
                    "modified_value": 3,
                    "operation": 1,
                    "operation_code": 1,
                    "parsed_result": 1,
                    "processed_value": 1,
                    "result": 2,
                    "result3": 1,
                    "result_flag": 1,
                    "status": 5,
                    "temp": 1
                }
            },
            "called": [
                "FUN_0800adf0",
                "FUN_0800a348",
                "FUN_08009d78",
                "FUN_080082d0"
            ],
            "calling": [
                "FUN_08001f00"
            ],
            "code": "\nundefined4 process_binary_data_080096e8(undefined4 input,uint value)\n\n{\n  undefined4 result;\n  uint flag;\n  undefined4 temp_var1;\n  undefined4 temp_var2;\n  undefined4 temp_var3;\n  undefined4 temp_var4;\n  \n  if (0x3fe921fb < (value & 0x7fffffff)) {\n    if ((value & 0x7fffffff) < 0x7ff00000) {\n      flag = FUN_08009d78(input,value,&temp_var1);\n      flag = flag & 3;\n      if (flag == 1) {\n        result = FUN_0800a348(temp_var1,temp_var2,temp_var3,temp_var4);\n      }\n      else if (flag == 2) {\n        result = FUN_0800adf0(temp_var1,temp_var2,temp_var3,temp_var4,1);\n      }\n      else if (flag == 0) {\n        result = FUN_0800adf0(temp_var1,temp_var2,temp_var3,temp_var4,1);\n      }\n      else {\n        result = FUN_0800a348(temp_var1,temp_var2,temp_var3,temp_var4);\n      }\n    }\n    else {\n      result = FUN_080082d0(input,value,input,value);\n    }\n    return result;\n  }\n  result = FUN_0800adf0(input,value,0,0,0);\n  return result;\n}\n\n",
            "current_name": "process_binary_data_080096e8",
            "entrypoint": "0x080096e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080096e8": "process_binary_data_080096e8",
                "local_20": "temp_var3",
                "local_28": "temp_var1",
                "param_1": "input",
                "param_2": "value",
                "uStack_1c": "temp_var4",
                "uStack_24": "temp_var2",
                "uVar1": "result",
                "uVar2": "flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009798": {
            "additional_data": {
                "FUN_080082d4": {
                    "calculate_exponential": 1,
                    "calculate_something": 1,
                    "compute_result": 1,
                    "perform_additional_operation": 1,
                    "reverse_bits": 2
                },
                "FUN_08009798": {
                    "calculate_shifted_value": 5,
                    "convert_binary_to_long": 1,
                    "convert_to_exponential": 1,
                    "convert_to_fixed_point": 1,
                    "convert_uint_to_unsigned_longlong": 1,
                    "extract_bit_range": 3,
                    "extract_bit_sequence": 1,
                    "extract_bits": 9,
                    "extract_bits_from_parameter": 1,
                    "extract_bits_from_value": 1,
                    "extract_param": 1,
                    "extract_signed_bit": 1,
                    "extracted_bits": 1,
                    "extracted_function": 1,
                    "reverse_bits": 1,
                    "scale_and_mask": 1,
                    "scale_and_shift_right": 1
                },
                "lVar3": {
                    "result": 30,
                    "result_value": 1
                },
                "param_1": {
                    "binary_input1": 1,
                    "input1": 13,
                    "input_1": 3,
                    "input_num": 1,
                    "input_param1": 1,
                    "input_param_1": 2,
                    "input_value": 3,
                    "input_value_1": 3,
                    "value": 2,
                    "value1": 2
                },
                "param_2": {
                    "binary_input2": 1,
                    "bit_position": 2,
                    "bits": 1,
                    "flag_num": 1,
                    "input2": 13,
                    "input_2": 3,
                    "input_param2": 1,
                    "input_param_2": 2,
                    "input_value_2": 3,
                    "scale_factor": 1,
                    "start_index": 1,
                    "value2": 2
                },
                "param_3": {
                    "constant1": 1,
                    "dummy_param_1": 1,
                    "ignored_param": 1,
                    "input_param_3": 1,
                    "param3": 6,
                    "param_3": 1,
                    "precision": 1,
                    "unknown1": 1,
                    "unused": 1,
                    "unused1": 1,
                    "unused_param": 2,
                    "unused_param1": 4,
                    "unused_param_1": 3,
                    "unused_param_3": 2,
                    "unused_parameter": 1,
                    "unused_parameter1": 1,
                    "unused_parameter_1": 2,
                    "unused_var1": 1
                },
                "param_4": {
                    "constant2": 1,
                    "dummy_param_2": 1,
                    "format_option": 1,
                    "ignored_param": 1,
                    "input_param_4": 1,
                    "param4": 7,
                    "param_4": 1,
                    "unknown2": 1,
                    "unused": 1,
                    "unused2": 1,
                    "unused_param": 1,
                    "unused_param2": 4,
                    "unused_param_2": 4,
                    "unused_param_4": 2,
                    "unused_parameter2": 1,
                    "unused_parameter_2": 2,
                    "unused_var2": 1
                },
                "uVar1": {
                    "bit_difference": 2,
                    "bit_offset": 1,
                    "bit_range": 1,
                    "bits_to_remove": 1,
                    "difference": 2,
                    "exponent_value": 1,
                    "scale_difference": 1,
                    "shift_amount": 2,
                    "shift_diff": 1,
                    "shift_difference": 2,
                    "shifted_bit": 1,
                    "shifted_bits": 9,
                    "shifted_difference": 1,
                    "shifted_num": 1,
                    "shifted_param": 1,
                    "shifted_value": 4
                },
                "uVar2": {
                    "bit_offset": 1,
                    "modified_shift_amount": 1,
                    "shift_amount": 5,
                    "shift_value": 1,
                    "shifted_amount": 2,
                    "shifted_bit": 1,
                    "shifted_bits": 5,
                    "shifted_count": 1,
                    "shifted_delta": 1,
                    "shifted_difference": 1,
                    "shifted_index": 1,
                    "shifted_input2": 1,
                    "shifted_offset": 1,
                    "shifted_param2": 1,
                    "shifted_param_divided": 1,
                    "shifted_position": 1,
                    "shifted_scale": 1,
                    "shifted_times": 1,
                    "shifted_value": 4
                }
            },
            "called": [
                "FUN_080082d4"
            ],
            "calling": [
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08003b98"
            ],
            "code": "\nlonglong extract_bits_from_value_08009798(uint input1,uint input2,undefined4 param3,undefined4 param4)\n\n{\n  uint shifted_bits;\n  uint shift_amount;\n  longlong result;\n  \n  shift_amount = (input2 << 1) >> 0x15;\n  shifted_bits = shift_amount - 0x3ff;\n  if ((int)shifted_bits < 0x14) {\n    if ((int)shifted_bits < 0) {\n      return ((ulonglong)input2 & 0x80000000) << 0x20;\n    }\n    result = (ulonglong)(input2 & ~(0xfffff >> (shifted_bits & 0xff))) << 0x20;\n  }\n  else {\n    if ((int)shifted_bits < 0x34) {\n      return CONCAT44(input2,input1 & ~(0xffffffffU >> (shift_amount - 0x413 & 0xff)));\n    }\n    if (shifted_bits != 0x400) {\n      return CONCAT44(input2,input1);\n    }\n    result = FUN_080082d4(input1,input2,input1,input2,param4);\n  }\n  return result;\n}\n\n",
            "current_name": "extract_bits_from_value_08009798",
            "entrypoint": "0x08009798",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009798": "extract_bits_from_value_08009798",
                "lVar3": "result",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "shifted_bits",
                "uVar2": "shift_amount"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800981c": {
            "additional_data": {
                "FUNCTION_0800b3dc": {
                    "get_memory_location": 1
                },
                "FUN_0800981c": {
                    "calculate_hypot": 3,
                    "calculate_hypotenuse": 26,
                    "compute_value_for_hypot": 1,
                    "process_data": 1
                },
                "FUN_08009b24": {
                    "get_error_value": 1,
                    "get_info": 1,
                    "get_max_value": 1,
                    "get_mode_flags": 1,
                    "get_supported_operations": 1,
                    "get_value": 1
                },
                "FUN_0800b2d4": {
                    "check_error_value": 1,
                    "check_function": 1,
                    "check_parameter": 1,
                    "check_side_value": 1,
                    "check_validity": 1,
                    "perform_calculation": 1
                },
                "FUN_0800b2e0": {
                    "check_calculation": 1,
                    "check_value": 1,
                    "execute_operation": 1,
                    "perform_operation": 1,
                    "save_value_to_memory": 1,
                    "write_error_value": 1
                },
                "FUN_0800b3dc": {
                    "get_error_pointer": 1,
                    "get_pointer": 1,
                    "get_result": 1,
                    "return_memory_address": 1,
                    "set_value": 1
                },
                "iVar1": {
                    "error": 1,
                    "func_result": 1,
                    "is_error": 1,
                    "result": 12,
                    "result_code": 1,
                    "return_value": 2,
                    "status": 2,
                    "temp": 1
                },
                "local_30": {
                    "error": 2,
                    "error_check": 1,
                    "error_code": 15,
                    "hypotenuse_result": 1,
                    "local_result": 1,
                    "local_var": 1,
                    "result": 6,
                    "status": 1,
                    "temp": 1,
                    "temp_value": 1,
                    "temp_variable": 1
                },
                "local_38": {
                    "boundary_value_1": 1,
                    "constant_2": 2,
                    "error_flag": 1,
                    "limit_1": 1,
                    "lower_bound": 6,
                    "lower_limit": 3,
                    "min_bound": 2,
                    "min_float": 1,
                    "min_value": 6
                },
                "local_40": {
                    "c": 1,
                    "c_parameter": 1,
                    "input_3_backup": 1,
                    "param": 1,
                    "param3": 1,
                    "param_3": 2,
                    "param_3_copy": 8,
                    "param_c": 2,
                    "side3_copy": 1,
                    "side_3_copy": 1,
                    "side_c": 6,
                    "side_c_copy": 1,
                    "side_c_value": 1,
                    "width1_copy": 1,
                    "x2_copy": 2
                },
                "local_48": {
                    "a": 1,
                    "a_parameter": 1,
                    "input_1_backup": 1,
                    "length1_copy": 1,
                    "param1": 1,
                    "param_1": 1,
                    "param_1_copy": 8,
                    "param_a": 2,
                    "side1_copy": 1,
                    "side_1_copy": 1,
                    "side_a": 8,
                    "side_a_copy": 1,
                    "side_a_value": 1,
                    "x1_copy": 2
                },
                "local_50": {
                    "algorithm_code": 1,
                    "algorithm_type": 1,
                    "calculation_mode": 2,
                    "constant_1": 2,
                    "constant_3": 1,
                    "constant_value": 1,
                    "func_code": 1,
                    "func_id": 1,
                    "function_code": 2,
                    "function_count": 1,
                    "function_id": 3,
                    "function_name_length": 1,
                    "function_type": 1,
                    "length": 1,
                    "name_length": 1,
                    "operation": 1,
                    "operation_code": 3,
                    "operation_type": 3,
                    "option": 1,
                    "power": 1,
                    "precondition": 1
                },
                "param_1": {
                    "input_1": 3,
                    "length1": 1,
                    "length_side_a": 1,
                    "side1": 2,
                    "side1_length": 1,
                    "side_1": 1,
                    "side_a": 19,
                    "side_length_1": 1,
                    "x1": 2
                },
                "param_2": {
                    "input_2": 3,
                    "length2": 1,
                    "length_side_b": 1,
                    "side2": 2,
                    "side2_length": 1,
                    "side_2": 1,
                    "side_b": 19,
                    "side_length_2": 1,
                    "y1": 2
                },
                "param_3": {
                    "input_3": 3,
                    "length_side_c": 1,
                    "param": 1,
                    "param_3": 1,
                    "side3": 2,
                    "side3_length": 1,
                    "side_3": 1,
                    "side_c": 17,
                    "side_length_3": 1,
                    "width1": 1,
                    "x2": 2
                },
                "param_4": {
                    "input_4": 3,
                    "length_side_d": 1,
                    "param": 1,
                    "param_4": 1,
                    "side4": 2,
                    "side4_length": 1,
                    "side_4": 1,
                    "side_d": 17,
                    "side_length_4": 1,
                    "width2": 1,
                    "y2": 2
                },
                "pcStack_4c": {
                    "algorithm_name": 2,
                    "calculation_function": 1,
                    "func_name": 2,
                    "function_name": 15,
                    "name": 1,
                    "operation_name": 6,
                    "string": 1,
                    "string_1": 1,
                    "string_value": 1
                },
                "piVar3": {
                    "int_pointer": 2,
                    "int_ptr": 2,
                    "integer_pointer": 2,
                    "pointer": 2,
                    "pointer_2": 3,
                    "pointer_result": 1,
                    "pointer_to_code": 1,
                    "ptr": 1,
                    "ptr2": 1,
                    "ptr_int": 1,
                    "ptr_local_30": 1,
                    "ptr_result": 1,
                    "result_ptr": 1
                },
                "puVar2": {
                    "output_ptr": 1,
                    "pointer": 7,
                    "pointer_1": 3,
                    "pointer_to_value": 1,
                    "pointer_var": 1,
                    "ptr": 3,
                    "ptr_result": 1,
                    "ptr_var": 1,
                    "result_ptr": 1
                },
                "uStack_34": {
                    "boundary_value_2": 1,
                    "constant_3": 2,
                    "error_code": 1,
                    "limit_2": 1,
                    "max_bound": 2,
                    "max_float": 1,
                    "max_value": 6,
                    "upper_bound": 6,
                    "upper_limit": 3
                },
                "uStack_3c": {
                    "d": 1,
                    "d_parameter": 1,
                    "input_4_backup": 1,
                    "param": 1,
                    "param4": 1,
                    "param_4": 2,
                    "param_4_copy": 8,
                    "param_d": 2,
                    "side4_copy": 1,
                    "side_4_copy": 1,
                    "side_d": 6,
                    "side_d_copy": 1,
                    "side_d_value": 1,
                    "width2_copy": 1,
                    "y2_copy": 2
                },
                "uStack_44": {
                    "b": 1,
                    "b_parameter": 1,
                    "input_2_backup": 1,
                    "length2_copy": 1,
                    "param2": 1,
                    "param_2": 1,
                    "param_2_copy": 8,
                    "param_b": 2,
                    "side2_copy": 1,
                    "side_2_copy": 1,
                    "side_b": 8,
                    "side_b_copy": 1,
                    "side_b_value": 1,
                    "y1_copy": 2
                },
                "uVar4": {
                    "final_result": 3,
                    "final_value": 1,
                    "output": 2,
                    "result": 10,
                    "result_value": 1,
                    "return_value": 9
                }
            },
            "called": [
                "FUN_08009b24",
                "FUN_0800b3dc",
                "FUN_0800b2e0",
                "FUN_0800b2d4"
            ],
            "calling": [
                "FUN_08001f00",
                "FUN_080005b4"
            ],
            "code": "\nundefined8 calculate_hypotenuse_0800981c(undefined4 side_a,undefined4 side_b,undefined4 side_c,undefined4 side_d)\n\n{\n  int result;\n  undefined4 *pointer;\n  int *pointer_2;\n  undefined8 result;\n  undefined4 operation_code;\n  char *function_name;\n  undefined4 side_a;\n  undefined4 side_b;\n  undefined4 param_3_copy;\n  undefined4 param_4_copy;\n  undefined4 min_value;\n  undefined4 upper_bound;\n  int error_code;\n  \n  result = FUN_08009b24();\n  if (DAT_20000014 == -1) {\n    return result;\n  }\n  error_code = FUN_0800b2d4();\n  if (error_code != 0) {\n    return result;\n  }\n  result = FUN_0800b2d4(side_a,side_b);\n  if (result == 0) {\n    return result;\n  }\n  result = FUN_0800b2d4(side_c,side_d);\n  if (result == 0) {\n    return result;\n  }\n  operation_code = 3;\n  function_name = \"hypot\";\n  side_a = side_a;\n  side_b = side_b;\n  param_3_copy = side_c;\n  param_4_copy = side_d;\n  if (DAT_20000014 == '\\0') {\n    min_value = 0xe0000000;\n    upper_bound = 0x47efffff;\nLAB_080098aa:\n    result = FUN_0800b2e0(&operation_code);\n    if (result != 0) goto LAB_08009896;\n  }\n  else {\n    min_value = 0;\n    upper_bound = 0x7ff00000;\n    if (DAT_20000014 != '\\x02') goto LAB_080098aa;\n  }\n  pointer = (undefined4 *)FUN_0800b3dc();\n  *pointer = 0x22;\nLAB_08009896:\n  result = CONCAT44(upper_bound,min_value);\n  if (error_code != 0) {\n    pointer_2 = (int *)FUN_0800b3dc();\n    result = CONCAT44(upper_bound,min_value);\n    *pointer_2 = error_code;\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_hypotenuse_0800981c",
            "entrypoint": "0x0800981c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800981c": "calculate_hypotenuse_0800981c",
                "iVar1": "result",
                "local_30": "error_code",
                "local_38": "min_value",
                "local_40": "param_3_copy",
                "local_48": "side_a",
                "local_50": "operation_code",
                "param_1": "side_a",
                "param_2": "side_b",
                "param_3": "side_c",
                "param_4": "side_d",
                "pcStack_4c": "function_name",
                "piVar3": "pointer_2",
                "puVar2": "pointer",
                "uStack_34": "upper_bound",
                "uStack_3c": "param_4_copy",
                "uStack_44": "side_b",
                "uVar4": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080098d0": {
            "additional_data": {
                "DAT_20000014": {
                    "constant2": 1,
                    "data1": 1
                },
                "FUN_08008894": {
                    "calculate_value": 2,
                    "reverse_bytes": 1
                },
                "FUN_08008b24": {
                    "check_condition": 2,
                    "check_result": 1
                },
                "FUN_08008b74": {
                    "calculate_value": 1,
                    "check_condition2": 1,
                    "check_value": 1
                },
                "FUN_080098d0": {
                    "extracted_function": 2,
                    "improve_and_validate": 1,
                    "improved_binary_operation": 1,
                    "process_data": 11,
                    "validate_and_process_data": 2
                },
                "FUN_0800a1bc": {
                    "get_initial_value": 2,
                    "get_result": 1
                },
                "FUN_0800b2e0": {
                    "perform_operation": 2,
                    "process_value": 1
                },
                "FUN_0800b3dc": {
                    "get_memory_address": 1,
                    "save_value": 1,
                    "set_value": 1
                },
                "cVar1": {
                    "character_var": 1,
                    "check_value": 1,
                    "condition": 3,
                    "config_value": 1,
                    "constant": 3,
                    "data_flag": 1,
                    "flag": 2,
                    "flag2": 1
                },
                "iVar3": {
                    "check_result": 4,
                    "is_valid": 1,
                    "result": 11,
                    "result_check": 1,
                    "result_code": 1,
                    "return_value": 3,
                    "status": 6,
                    "success": 1,
                    "val1": 1
                },
                "local_30": {
                    "code": 1,
                    "error_code": 2,
                    "func_result": 1,
                    "local_var": 2,
                    "local_var8": 1,
                    "local_var_1": 1,
                    "output_status": 1,
                    "result_code": 1,
                    "return_value": 1,
                    "some_value": 1,
                    "status": 1,
                    "sub_func_result": 1,
                    "sub_function_result": 3,
                    "temp": 3,
                    "temp_int": 1,
                    "temp_result": 4,
                    "tmp": 1,
                    "val2": 1,
                    "value": 1,
                    "var1": 1,
                    "variable2": 1,
                    "variable8": 1
                },
                "local_38": {
                    "counter": 1,
                    "function_result": 1,
                    "local_var7": 2,
                    "output": 3,
                    "result": 3,
                    "result_2": 1,
                    "result_value": 1,
                    "return_value": 3,
                    "return_value2": 2,
                    "retval": 1,
                    "temp": 1,
                    "temp_val": 1,
                    "temp_value": 2,
                    "temp_var": 1,
                    "temporary_var": 1,
                    "ulonglong_var": 1,
                    "value": 3,
                    "value2": 1,
                    "variable": 1,
                    "variable7": 1
                },
                "local_40": {
                    "copy_arg1": 1,
                    "input1": 1,
                    "input1_copy2": 3,
                    "input_1_copy2": 1,
                    "input_param_copy2": 1,
                    "input_param_copy_2": 1,
                    "local_param_3": 1,
                    "local_var5": 2,
                    "param1_copy2": 2,
                    "param3": 2,
                    "param_1": 1,
                    "param_1_copy2": 3,
                    "param_1_copy_2": 4,
                    "temp1": 2,
                    "temp_3": 1,
                    "temp_input1_2": 1,
                    "value_3": 1,
                    "var3": 1,
                    "var_40": 1,
                    "variable5": 1
                },
                "local_48": {
                    "arg1_copy": 1,
                    "input1_copy": 6,
                    "input_1": 1,
                    "input_1_copy": 1,
                    "input_param_copy": 2,
                    "local_param_1": 1,
                    "local_var3": 2,
                    "param1": 2,
                    "param1_copy": 2,
                    "param_1_copy": 7,
                    "temp_1": 1,
                    "temp_input1": 1,
                    "value_1": 1,
                    "var1": 1,
                    "var_48": 1,
                    "variable3": 1
                },
                "local_4c": {
                    "buffer": 1,
                    "char_pointer": 3,
                    "char_ptr": 2,
                    "data": 2,
                    "data_pointer": 4,
                    "data_ptr": 4,
                    "local_memory": 1,
                    "local_var2": 2,
                    "message": 2,
                    "ptr3": 1,
                    "ptr_data": 1,
                    "str_ptr": 2,
                    "string_pointer": 1,
                    "string_ptr": 4,
                    "variable2": 1
                },
                "local_50": {
                    "count": 1,
                    "flag": 21,
                    "flag1": 4,
                    "flag_1": 1,
                    "local_var1": 2,
                    "value1": 1,
                    "variable1": 1
                },
                "param_1": {
                    "arg1": 1,
                    "input1": 14,
                    "input_1": 8,
                    "input_param": 2,
                    "input_param1": 1,
                    "input_param_1": 5
                },
                "param_2": {
                    "arg2": 1,
                    "input2": 14,
                    "input_2": 8,
                    "input_param2": 1,
                    "input_param_2": 5,
                    "output_param": 2
                },
                "piVar5": {
                    "int_pointer": 4,
                    "int_pointer_var": 1,
                    "int_ptr": 5,
                    "int_ptr_var": 2,
                    "int_result": 1,
                    "integer_pointer": 2,
                    "p_int_var": 1,
                    "pointer_to_var5": 2,
                    "pointer_var2": 1,
                    "ptr": 1,
                    "ptr2": 7,
                    "ptr_int_result": 1,
                    "ptr_to_result": 1
                },
                "puVar4": {
                    "func_result": 1,
                    "p_u_int_var": 1,
                    "pointer": 3,
                    "pointer_to_var4": 2,
                    "pointer_var": 4,
                    "pointer_var1": 1,
                    "ptr": 8,
                    "ptr1": 5,
                    "ptr_result": 1,
                    "ptr_to_int": 1,
                    "ptr_var": 2
                },
                "uStack_3c": {
                    "copy_arg2": 1,
                    "input2": 1,
                    "input2_copy2": 3,
                    "input_2_copy2": 1,
                    "local_param_4": 1,
                    "local_var6": 2,
                    "output_param_copy2": 1,
                    "output_param_copy_2": 1,
                    "param2_copy2": 2,
                    "param4": 2,
                    "param_2": 1,
                    "param_2_copy2": 3,
                    "param_2_copy_2": 4,
                    "temp2": 2,
                    "temp_4": 1,
                    "temp_input2_2": 1,
                    "value_4": 1,
                    "var4": 1,
                    "var_3c": 1,
                    "variable6": 1
                },
                "uStack_44": {
                    "arg2_copy": 1,
                    "input2_copy": 6,
                    "input_2": 1,
                    "input_2_copy": 1,
                    "local_param_2": 1,
                    "local_var4": 2,
                    "output_param_copy": 2,
                    "param2": 2,
                    "param2_copy": 2,
                    "param_2_copy": 7,
                    "temp_2": 1,
                    "temp_input2": 1,
                    "value_2": 1,
                    "var2": 1,
                    "var_44": 1,
                    "variable4": 1
                },
                "uVar2": {
                    "initialized_value": 1,
                    "result": 17,
                    "return_value": 12
                }
            },
            "called": [
                "FUN_0800a1bc",
                "FUN_08008b24",
                "FUN_0800b3dc",
                "FUN_0800b2e0",
                "FUN_08008894",
                "FUN_08008b74"
            ],
            "calling": [
                "FUN_08002978",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_08001994"
            ],
            "code": "\nundefined4 validate_and_process_data_080098d0(undefined4 input1,undefined4 input2)\n\n{\n  char condition;\n  undefined4 result;\n  int result;\n  undefined4 *ptr;\n  int *ptr2;\n  undefined4 flag;\n  undefined *string_ptr;\n  undefined4 param_1_copy;\n  undefined4 param_2_copy;\n  undefined4 param_1_copy_2;\n  undefined4 param_2_copy_2;\n  undefined8 return_value;\n  int temp_result;\n  \n  result = FUN_0800a1bc();\n  condition = DAT_20000014;\n  if (((DAT_20000014 == -1) ||\n      (temp_result = FUN_08008b74(input1,input2,input1,input2), temp_result != 0)) ||\n     (result = FUN_08008b24(input1,input2,0,0), result == 0)) {\n    return result;\n  }\n  flag = 1;\n  string_ptr = &DAT_0800be5c;\n  param_1_copy = input1;\n  param_2_copy = input2;\n  param_1_copy_2 = input1;\n  param_2_copy_2 = input2;\n  if (condition == '\\0') {\n    return_value = 0;\nLAB_0800996c:\n    result = FUN_0800b2e0(&flag);\n    if (result != 0) goto joined_r0x0800997a;\n  }\n  else {\n    return_value = FUN_08008894(0,0,0,0);\n    if (condition != '\\x02') goto LAB_0800996c;\n  }\n  ptr = (undefined4 *)FUN_0800b3dc();\n  *ptr = 0x21;\njoined_r0x0800997a:\n  if (temp_result != 0) {\n    ptr2 = (int *)FUN_0800b3dc();\n    *ptr2 = temp_result;\n  }\n  return (undefined4)return_value;\n}\n\n",
            "current_name": "validate_and_process_data_080098d0",
            "entrypoint": "0x080098d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080098d0": "validate_and_process_data_080098d0",
                "cVar1": "condition",
                "iVar3": "result",
                "local_30": "temp_result",
                "local_38": "return_value",
                "local_40": "param_1_copy_2",
                "local_48": "param_1_copy",
                "local_4c": "string_ptr",
                "local_50": "flag",
                "param_1": "input1",
                "param_2": "input2",
                "piVar5": "ptr2",
                "puVar4": "ptr",
                "uStack_3c": "param_2_copy_2",
                "uStack_44": "param_2_copy",
                "uVar2": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009990": {
            "additional_data": {
                "DAT_0800be68": {
                    "value1": 1
                },
                "DAT_0800be80": {
                    "value2": 1
                },
                "FUNC_0800b2cc": {
                    "additional_processing": 1,
                    "calculate_something": 1,
                    "do_something": 1,
                    "perform_operation": 3,
                    "perform_operation2": 1,
                    "sub_function_a": 1
                },
                "FUN_080082d0": {
                    "calculate": 1,
                    "calculate_different_thing": 1,
                    "calculate_operand": 1,
                    "calculate_output_1": 1,
                    "perform_computation": 1,
                    "perform_operation3": 1,
                    "perform_reverse": 1,
                    "sub_function_d": 2,
                    "support_function_4": 1
                },
                "FUN_080082d4": {
                    "calculate_another_thing": 1,
                    "calculate_output_2": 1,
                    "fallback": 1,
                    "handle_invalid_inputs": 1,
                    "perform_operation4": 1,
                    "reverse_input": 1,
                    "reverse_operation": 1,
                    "sub_function_c": 2,
                    "support_function_3": 1
                },
                "FUN_08008894": {
                    "calculate_value": 2,
                    "do_something": 1,
                    "execute_operation": 1,
                    "perform_operation1": 1,
                    "process_inputs": 1,
                    "process_parameters": 1,
                    "sub_function_b": 2,
                    "support_function_2": 1
                },
                "FUN_08009990": {
                    "calculate_result": 11,
                    "compute_result": 2
                },
                "FUN_0800af78": {
                    "calculate_value": 1,
                    "get_default_value": 1,
                    "get_function_output": 1,
                    "get_result": 2,
                    "get_value": 1,
                    "helper_function": 2,
                    "sub_function_e": 2
                },
                "FUN_0800b2cc": {
                    "sub_function_a": 1,
                    "support_function_1": 1
                },
                "iVar1": {
                    "difference": 15,
                    "modified_var_2": 1,
                    "temp1": 1,
                    "temp_1": 1,
                    "temp_var1": 7,
                    "temp_var5": 1,
                    "temp_var6": 1,
                    "temp_var_6": 1,
                    "temp_variable1": 1,
                    "tmp_variable": 1
                },
                "param_1": {
                    "input1": 15,
                    "input_1": 8,
                    "input_param1": 3,
                    "input_param_1": 2,
                    "input_value_1": 1,
                    "value1": 2
                },
                "param_2": {
                    "input2": 15,
                    "input_2": 8,
                    "input_param2": 3,
                    "input_param_2": 2,
                    "input_value_2": 1,
                    "value2": 2
                },
                "param_3": {
                    "input3": 15,
                    "input_3": 8,
                    "input_param3": 3,
                    "input_param_3": 2,
                    "input_value_3": 1,
                    "value3": 2
                },
                "param_4": {
                    "input4": 15,
                    "input_4": 8,
                    "input_param4": 3,
                    "input_param_4": 2,
                    "input_value_4": 1,
                    "value4": 2
                },
                "uVar2": {
                    "high_32_bits": 1,
                    "high_bits": 1,
                    "result1": 1,
                    "result_high": 5,
                    "result_upper": 3,
                    "return_value_high": 1,
                    "temp2": 1,
                    "temp_2": 1,
                    "temp_var1": 1,
                    "temp_var2": 7,
                    "temp_var6": 1,
                    "temp_var_1": 1,
                    "temp_variable": 1,
                    "upper_bits": 1,
                    "upper_result": 1
                },
                "uVar3": {
                    "check_value": 1,
                    "condition": 1,
                    "conditional_value": 1,
                    "flag": 1,
                    "flag_variable": 1,
                    "modified_var_1": 1,
                    "result1": 1,
                    "result_low": 1,
                    "result_type": 1,
                    "result_variable1": 1,
                    "shift_amount": 1,
                    "shifted_bits": 1,
                    "shifted_input_2": 1,
                    "shifted_param": 1,
                    "shifted_params": 1,
                    "shifted_value": 1,
                    "shifted_values": 3,
                    "temp3": 1,
                    "temp_3": 1,
                    "temp_var2": 1,
                    "temp_var3": 8,
                    "temp_var_2": 1
                },
                "uVar4": {
                    "abs_input_4": 1,
                    "abs_param4": 1,
                    "clamped_param_4": 1,
                    "mask_param_4": 1,
                    "masked_param4": 1,
                    "masked_param_4": 3,
                    "modified_input4": 1,
                    "modified_input_4": 2,
                    "normalized_input4": 1,
                    "param4_masked": 1,
                    "param_4_masked": 1,
                    "param_4_without_sign_bit": 1,
                    "positive_input_4": 1,
                    "positive_param_4": 1,
                    "result2": 1,
                    "result_variable2": 1,
                    "temp4": 1,
                    "temp_4": 1,
                    "temp_var1": 1,
                    "temp_var3": 1,
                    "temp_var4": 7,
                    "temp_var_3": 1
                },
                "uVar5": {
                    "abs_input_2": 1,
                    "abs_param2": 1,
                    "clamped_param_2": 1,
                    "mask_param_2": 1,
                    "masked_param2": 1,
                    "masked_param_2": 3,
                    "modified_input2": 1,
                    "modified_input_2": 2,
                    "normalized_input2": 1,
                    "param2_masked": 1,
                    "param_2_masked": 1,
                    "param_2_without_sign_bit": 1,
                    "positive_input_2": 1,
                    "positive_param_2": 1,
                    "result3": 1,
                    "result_variable3": 1,
                    "temp5": 1,
                    "temp_5": 1,
                    "temp_var2": 1,
                    "temp_var4": 1,
                    "temp_var5": 7,
                    "temp_var_4": 1
                },
                "uVar6": {
                    "result": 11,
                    "result2": 1,
                    "result4": 1,
                    "result_variable4": 1,
                    "return_value": 2,
                    "temp6": 1,
                    "temp_6": 1,
                    "temp_result": 2,
                    "temp_value": 1,
                    "temp_var4": 1,
                    "temp_var5": 1,
                    "temp_var6": 7,
                    "temp_var_5": 1
                }
            },
            "called": [
                "FUN_0800b2cc",
                "FUN_08008894",
                "FUN_080082d4",
                "FUN_080082d0",
                "FUN_0800af78"
            ],
            "calling": [
                "thunk_FUN_08009990"
            ],
            "code": "\nuint calculate_result_08009990(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int difference;\n  undefined4 temp_var2;\n  uint temp_var3;\n  uint temp_var4;\n  uint temp_var5;\n  undefined8 result;\n  \n  temp_var4 = input4 & 0x7fffffff;\n  if (((temp_var4 | (-input3 | input3) >> 0x1f) < 0x7ff00001) &&\n     (temp_var5 = input2 & 0x7fffffff, (temp_var5 | (-input1 | input1) >> 0x1f) < 0x7ff00001)) {\n    if ((input4 + 0xc0100000 | input3) == 0) {\n      temp_var4 = FUN_0800af78();\n      return temp_var4;\n    }\n    temp_var3 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n    if ((temp_var5 | input1) == 0) {\n      if (temp_var3 == 2) {\n        input1 = 0x54442d18;\n      }\n      else if (temp_var3 == 3) {\n        input1 = 0x54442d18;\n      }\n    }\n    else {\n      if ((temp_var4 | input3) != 0) {\n        if (temp_var4 == 0x7ff00000) {\n          temp_var3 = temp_var3 - 1;\n          if (temp_var5 == 0x7ff00000) {\n            if (temp_var3 < 3) {\n              return *(uint *)(&DAT_0800be68 + temp_var3 * 8);\n            }\n            return 0x54442d18;\n          }\n          if (temp_var3 < 3) {\n            return *(uint *)(&DAT_0800be80 + temp_var3 * 8);\n          }\n          return 0;\n        }\n        if (temp_var5 != 0x7ff00000) {\n          difference = (int)(temp_var5 - temp_var4) >> 0x14;\n          if ((int)(temp_var5 - temp_var4) < 0x3d00000) {\n            if (((int)input4 < 0) && (difference + 0x3c < 0 != SCARRY4(difference,0x3c))) {\n              result = 0;\n            }\n            else {\n              FUN_08008894(input1,input2,input3,input4,input4);\n              FUNC_0800b2cc();\n              result = FUN_0800af78();\n            }\n          }\n          else {\n            result = 0x3ff921fb54442d18;\n          }\n          temp_var2 = (undefined4)((ulonglong)result >> 0x20);\n          temp_var4 = (uint)result;\n          if (temp_var3 == 1) {\n            return temp_var4;\n          }\n          if (temp_var3 == 2) {\n            result = FUN_080082d0(temp_var4,temp_var2,0x33145c07,0x3ca1a626);\n            temp_var4 = FUN_080082d0(0x54442d18,0x400921fb,(int)result,(int)((ulonglong)result >> 0x20));\n            return temp_var4;\n          }\n          if (temp_var3 == 0) {\n            return temp_var4;\n          }\n          result = FUN_080082d0(temp_var4,temp_var2,0x33145c07,0x3ca1a626);\n          temp_var4 = FUN_080082d0((int)result,(int)((ulonglong)result >> 0x20),0x54442d18,0x400921fb);\n          return temp_var4;\n        }\n      }\n      if ((int)input2 < 0) {\n        input1 = 0x54442d18;\n      }\n      else {\n        input1 = 0x54442d18;\n      }\n    }\n  }\n  else {\n    input1 = FUN_080082d4(input3,input4,input1,input2);\n  }\n  return input1;\n}\n\n",
            "current_name": "calculate_result_08009990",
            "entrypoint": "0x08009990",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009990": "calculate_result_08009990",
                "iVar1": "difference",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar2": "temp_var2",
                "uVar3": "temp_var3",
                "uVar4": "temp_var4",
                "uVar5": "temp_var5",
                "uVar6": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009b24": {
            "additional_data": {
                "FUN_08009b24": {
                    "calculate_result": 12,
                    "calculate_value": 1,
                    "improved_calculation": 1,
                    "process_data": 1,
                    "rearrange_function": 1
                },
                "iVar2": {
                    "check_result_1": 1,
                    "comparison_result": 1,
                    "i_var2": 1,
                    "res": 1,
                    "result2": 18,
                    "result_2": 3,
                    "result_var2": 2,
                    "temp2": 1,
                    "temp_2": 2,
                    "var1": 1
                },
                "iVar4": {
                    "check": 1,
                    "check_result_2": 1,
                    "i_var_b": 1,
                    "i_var_high": 1,
                    "result3": 1,
                    "result4": 1,
                    "result_2": 2,
                    "result_4": 1,
                    "result_var3": 1,
                    "result_var4": 1,
                    "temp2": 11,
                    "temp3": 1,
                    "temp_2": 2,
                    "temp_result2": 1,
                    "temp_var1": 1,
                    "value2": 1,
                    "var2": 3
                },
                "iVar6": {
                    "d": 1,
                    "i_var_d": 1,
                    "result4": 3,
                    "result5": 1,
                    "result6": 1,
                    "result_4": 1,
                    "result_6": 1,
                    "result_var5": 1,
                    "result_var6": 1,
                    "temp4": 8,
                    "temp5": 1,
                    "temp_1": 1,
                    "temp_4": 3,
                    "temp_result4": 1,
                    "temp_var3": 1,
                    "value4": 1,
                    "var3": 1,
                    "var4": 2
                },
                "local_3c": {
                    "counter": 2,
                    "local_var": 11,
                    "local_var1": 1,
                    "local_variable": 4,
                    "local_variable1": 3,
                    "offset": 1,
                    "result14": 1,
                    "result_14": 1,
                    "temp4": 2,
                    "temp_10": 1,
                    "temp_11": 1,
                    "temp_12": 1,
                    "value": 1,
                    "var12": 1
                },
                "param_1": {
                    "input1": 18,
                    "input_1": 7,
                    "input_param1": 1,
                    "num1": 1,
                    "value1": 3,
                    "width": 1
                },
                "param_2": {
                    "height": 1,
                    "input2": 18,
                    "input_2": 7,
                    "input_param2": 1,
                    "num2": 1,
                    "value2": 3
                },
                "param_3": {
                    "depth": 1,
                    "input3": 18,
                    "input_3": 7,
                    "input_param3": 1,
                    "num3": 1,
                    "value3": 3
                },
                "param_4": {
                    "input4": 18,
                    "input_4": 7,
                    "input_param4": 1,
                    "num4": 1,
                    "scale": 1,
                    "value4": 3
                },
                "uVar1": {
                    "result": 2,
                    "result1": 18,
                    "result_1": 4,
                    "result_var1": 3,
                    "temp1": 1,
                    "temp_1": 2,
                    "u_low2": 1
                },
                "uVar10": {
                    "calculated_value": 1,
                    "final_result1": 1,
                    "height_upper": 1,
                    "result1": 1,
                    "result10": 1,
                    "result7": 3,
                    "result_10": 1,
                    "result_3": 1,
                    "result_7": 1,
                    "result_var10": 1,
                    "result_var5": 1,
                    "temp3": 1,
                    "temp8": 5,
                    "temp9": 1,
                    "temp_5": 1,
                    "temp_7": 1,
                    "temp_8": 1,
                    "temp_result8": 1,
                    "temp_value4": 1,
                    "temp_var6": 1,
                    "u_combined2": 1,
                    "u_var_h": 1,
                    "value3": 1,
                    "var8": 2
                },
                "uVar11": {
                    "concatenated1": 1,
                    "final_result2": 1,
                    "height_lower": 1,
                    "result11": 1,
                    "result2": 1,
                    "result8": 3,
                    "result_11": 1,
                    "result_4": 1,
                    "result_8": 1,
                    "result_var11": 1,
                    "result_var6": 1,
                    "temp10": 1,
                    "temp4": 1,
                    "temp9": 5,
                    "temp_6": 1,
                    "temp_8": 1,
                    "temp_9": 1,
                    "temp_result9": 1,
                    "temp_value5": 1,
                    "temp_var7": 1,
                    "u_combined1": 1,
                    "u_var_i": 1,
                    "value4": 1,
                    "var9": 2
                },
                "uVar12": {
                    "concatenated2": 1,
                    "depth_upper": 1,
                    "final_temp1": 1,
                    "result12": 1,
                    "result3": 1,
                    "result9": 3,
                    "result_12": 1,
                    "result_9": 1,
                    "result_var12": 1,
                    "result_var7": 1,
                    "temp10": 5,
                    "temp11": 1,
                    "temp5": 1,
                    "temp_10": 1,
                    "temp_7": 1,
                    "temp_8": 1,
                    "temp_9": 1,
                    "temp_result10": 1,
                    "temp_value6": 1,
                    "temp_var8": 1,
                    "u_temp1": 1,
                    "u_var_j": 1,
                    "value5": 1,
                    "var10": 2
                },
                "uVar13": {
                    "concatenated3": 1,
                    "depth_lower": 1,
                    "final_temp2": 1,
                    "result10": 3,
                    "result13": 1,
                    "result4": 1,
                    "result_10": 1,
                    "result_13": 1,
                    "result_var13": 1,
                    "result_var8": 1,
                    "temp11": 5,
                    "temp12": 1,
                    "temp6": 1,
                    "temp_10": 1,
                    "temp_11": 1,
                    "temp_8": 1,
                    "temp_9": 1,
                    "temp_result11": 1,
                    "temp_value7": 1,
                    "temp_var9": 1,
                    "u_temp2": 1,
                    "u_var_k": 1,
                    "value6": 1,
                    "var11": 2
                },
                "uVar3": {
                    "result": 1,
                    "result3": 1,
                    "result_1": 2,
                    "result_2": 1,
                    "result_3": 1,
                    "result_var3": 1,
                    "return_val": 1,
                    "return_value": 2,
                    "temp1": 11,
                    "temp_1": 2,
                    "temp_result1": 1,
                    "temp_var1": 1,
                    "u_var_a": 1,
                    "value1": 1,
                    "value1_adjusted": 1,
                    "var1": 2,
                    "w": 1
                },
                "uVar5": {
                    "h": 1,
                    "result3": 3,
                    "result4": 1,
                    "result5": 1,
                    "result_3": 2,
                    "result_5": 1,
                    "result_var2": 1,
                    "result_var4": 1,
                    "result_var5": 1,
                    "temp3": 8,
                    "temp4": 1,
                    "temp_3": 3,
                    "temp_result3": 1,
                    "temp_var2": 1,
                    "u_var_c": 1,
                    "value3": 1,
                    "var3": 2
                },
                "uVar7": {
                    "max_input": 2,
                    "max_value": 5,
                    "result7": 1,
                    "result_4": 1,
                    "result_7": 1,
                    "result_var7": 1,
                    "s": 1,
                    "temp3": 3,
                    "temp5": 5,
                    "temp6": 1,
                    "temp_5": 2,
                    "temp_result5": 1,
                    "temp_value1": 1,
                    "temp_var2": 1,
                    "u_var_e": 1,
                    "value2_adjusted": 1,
                    "var5": 2
                },
                "uVar8": {
                    "high_bits1": 2,
                    "high_word1": 1,
                    "result5": 3,
                    "result8": 1,
                    "result_5": 1,
                    "result_8": 1,
                    "result_var3": 1,
                    "result_var8": 1,
                    "temp1": 1,
                    "temp6": 5,
                    "temp7": 1,
                    "temp_3": 1,
                    "temp_5": 1,
                    "temp_6": 2,
                    "temp_result6": 1,
                    "temp_value2": 1,
                    "temp_var4": 1,
                    "u_low1": 1,
                    "u_var_f": 1,
                    "value1": 1,
                    "var6": 2,
                    "width_upper": 1
                },
                "uVar9": {
                    "high_bits2": 1,
                    "high_word2": 1,
                    "low_bits1": 1,
                    "result6": 3,
                    "result9": 1,
                    "result_6": 1,
                    "result_9": 1,
                    "result_var4": 1,
                    "result_var9": 1,
                    "temp2": 1,
                    "temp7": 5,
                    "temp8": 1,
                    "temp_4": 1,
                    "temp_6": 1,
                    "temp_7": 2,
                    "temp_result7": 1,
                    "temp_value3": 1,
                    "temp_var5": 1,
                    "u_high1": 1,
                    "u_var_g": 1,
                    "value2": 1,
                    "var7": 2,
                    "width_lower": 1
                }
            },
            "called": [
                "FUN_0800a1bc",
                "FUN_08008b24",
                "FUN_080082d4",
                "FUN_08008640",
                "FUN_080082d0"
            ],
            "calling": [
                "FUN_0800981c"
            ],
            "code": "\nuint calculate_result_08009b24(uint input1,uint input2,uint input3,uint input4)\n\n{\n  undefined4 result1;\n  int result2;\n  uint temp1;\n  int temp2;\n  undefined4 temp3;\n  int temp4;\n  uint temp5;\n  undefined4 temp6;\n  undefined4 temp7;\n  undefined8 temp8;\n  undefined8 temp9;\n  undefined8 temp10;\n  undefined8 temp11;\n  int local_var;\n  \n  input2 = input2 & 0x7fffffff;\n  input4 = input4 & 0x7fffffff;\n  temp1 = input1;\n  temp5 = input2;\n  if (input2 < input4) {\n    temp1 = input3;\n    input3 = input1;\n    temp5 = input4;\n    input4 = input2;\n  }\n  if (0x3c00000 < (int)(temp5 - input4)) {\n    temp1 = FUN_080082d4(temp1,temp5,input3,input4);\n    return temp1;\n  }\n  if (temp5 < 0x5f300001) {\n    local_var = 0;\n  }\n  else {\n    if (0x7fefffff < temp5) {\n      if ((temp5 & 0xfffff | temp1) != 0) {\n        temp1 = FUN_080082d4(temp1,temp5,input3,input4);\n      }\n      if ((input4 ^ 0x7ff00000 | input3) != 0) {\n        return temp1;\n      }\n      return input3;\n    }\n    temp5 = temp5 + 0xda800000;\n    input4 = input4 + 0xda800000;\n    local_var = 600;\n  }\n  temp9 = CONCAT44(temp5,temp1);\n  temp8 = CONCAT44(input4,input3);\n  if ((int)input4 < 0x20b00000) {\n    if ((int)input4 < 0x100000) {\n      if ((input4 | input3) == 0) {\n        return temp1;\n      }\n      temp8 = FUN_08008640(input3,input4,0,0x7fd00000);\n      temp9 = FUN_08008640(temp1,temp5,0,0x7fd00000);\n      local_var = local_var + -0x3fe;\n    }\n    else {\n      temp5 = temp5 + 0x25800000;\n      temp9 = CONCAT44(temp5,temp1);\n      input4 = input4 + 0x25800000;\n      temp8 = CONCAT44(input4,input3);\n      local_var = local_var + -600;\n    }\n  }\n  temp7 = (undefined4)((ulonglong)temp9 >> 0x20);\n  temp6 = (undefined4)temp9;\n  temp4 = (int)((ulonglong)temp8 >> 0x20);\n  temp3 = (undefined4)temp8;\n  temp8 = FUN_080082d0(temp6,temp7,temp3,temp4);\n  temp2 = (int)((ulonglong)temp8 >> 0x20);\n  result1 = (undefined4)temp8;\n  result2 = FUN_08008b24(temp3,temp4,result1,temp2);\n  if (result2 == 0) {\n    temp8 = FUN_08008640(0,input4,0);\n    temp9 = FUN_08008640(result1,temp2 + -0x80000000,result1,temp2);\n    temp10 = FUN_080082d4(temp6,temp7,temp6,temp7);\n    temp10 = FUN_080082d0((int)temp10,(int)((ulonglong)temp10 >> 0x20),0,temp5 + 0x100000);\n    temp10 = FUN_08008640((int)temp10,(int)((ulonglong)temp10 >> 0x20),temp3,temp4);\n    temp11 = FUN_080082d0(temp3,temp4,0,input4);\n    temp11 = FUN_08008640((int)temp11,(int)((ulonglong)temp11 >> 0x20),0,temp5 + 0x100000);\n    temp10 = FUN_080082d4((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp11,\n                          (int)((ulonglong)temp11 >> 0x20));\n    temp9 = FUN_080082d0((int)temp9,(int)((ulonglong)temp9 >> 0x20),(int)temp10,\n                          (int)((ulonglong)temp10 >> 0x20));\n    FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp9,\n                 (int)((ulonglong)temp9 >> 0x20));\n    temp8 = FUN_0800a1bc();\n  }\n  else {\n    temp8 = FUN_08008640(0,temp5,0,temp5);\n    temp9 = FUN_08008640(temp3,temp4 + -0x80000000,temp3,temp4);\n    temp10 = FUN_080082d4(temp6,temp7,0,temp5);\n    temp11 = FUN_080082d0(temp6,temp7,0,temp5);\n    temp10 = FUN_08008640((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp11,\n                          (int)((ulonglong)temp11 >> 0x20));\n    temp9 = FUN_080082d0((int)temp9,(int)((ulonglong)temp9 >> 0x20),(int)temp10,\n                          (int)((ulonglong)temp10 >> 0x20));\n    FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp9,\n                 (int)((ulonglong)temp9 >> 0x20));\n    temp8 = FUN_0800a1bc();\n  }\n  temp1 = (uint)temp8;\n  if (local_var != 0) {\n    temp1 = FUN_08008640(temp1,(int)((ulonglong)temp8 >> 0x20),0,local_var * 0x100000 + 0x3ff00000);\n  }\n  return temp1;\n}\n\n",
            "current_name": "calculate_result_08009b24",
            "entrypoint": "0x08009b24",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009b24": "calculate_result_08009b24",
                "iVar2": "result2",
                "iVar4": "temp2",
                "iVar6": "temp4",
                "local_3c": "local_var",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "uVar10": "temp8",
                "uVar11": "temp9",
                "uVar12": "temp10",
                "uVar13": "temp11",
                "uVar3": "temp1",
                "uVar5": "temp3",
                "uVar7": "temp5",
                "uVar8": "temp6",
                "uVar9": "temp7"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009d78": {
            "additional_data": {
                "FUN_08009d78": {
                    "calculate_complex_result": 1,
                    "calculate_function": 1,
                    "calculate_result": 10,
                    "calculate_value": 1,
                    "calculate_values": 1,
                    "perform_calculation": 1
                },
                "iVar9": {
                    "condition": 1,
                    "counter": 1,
                    "factor": 1,
                    "function_result": 1,
                    "i_var9": 1,
                    "iteration": 2,
                    "iteration_count": 1,
                    "loop_counter": 1,
                    "num_iterations": 1,
                    "result": 10,
                    "result_value": 1,
                    "return_value": 6,
                    "status": 1,
                    "temp_var2": 1,
                    "temp_var9": 2
                },
                "local_30": {
                    "local_temp5": 1,
                    "local_var3": 1,
                    "local_var4": 4,
                    "local_var5": 13,
                    "local_var_3": 1,
                    "local_variable5": 3,
                    "local_variable_5": 1,
                    "temp13": 1,
                    "temp15": 1,
                    "temp17": 1,
                    "temp5": 1,
                    "temp_local3": 1,
                    "temp_local4": 1,
                    "temp_local5": 1
                },
                "local_38": {
                    "local_temp4": 1,
                    "local_var2": 1,
                    "local_var3": 4,
                    "local_var4": 13,
                    "local_var_2": 1,
                    "local_variable4": 3,
                    "local_variable_4": 1,
                    "temp12": 1,
                    "temp14": 1,
                    "temp16": 1,
                    "temp4": 1,
                    "temp_local2": 1,
                    "temp_local3": 1,
                    "temp_local4": 1
                },
                "local_40": {
                    "local_temp3": 1,
                    "local_var1": 1,
                    "local_var2": 4,
                    "local_var3": 13,
                    "local_var_1": 1,
                    "local_variable3": 3,
                    "local_variable_3": 1,
                    "temp11": 1,
                    "temp13": 1,
                    "temp15": 1,
                    "temp3": 1,
                    "temp_local1": 1,
                    "temp_local2": 1,
                    "temp_local3": 1
                },
                "local_50": {
                    "local_result1": 1,
                    "local_temp1": 1,
                    "local_temp_1": 1,
                    "local_var1": 18,
                    "local_variable1": 3,
                    "local_variable_1": 1,
                    "temp1": 1,
                    "temp11": 1,
                    "temp13": 1,
                    "temp9": 1,
                    "temp_local1": 2
                },
                "param_1": {
                    "initial_value": 1,
                    "input": 1,
                    "input1": 8,
                    "input_1": 2,
                    "input_param": 2,
                    "input_val1": 1,
                    "input_value": 10,
                    "input_value1": 4,
                    "param1": 1,
                    "value1": 1
                },
                "param_2": {
                    "flag": 3,
                    "flags": 1,
                    "input2": 8,
                    "input_2": 2,
                    "input_flag": 1,
                    "input_flags": 1,
                    "input_number": 1,
                    "input_size": 1,
                    "input_val2": 1,
                    "input_value": 1,
                    "input_value2": 4,
                    "modifier": 1,
                    "param2": 2,
                    "parameter": 1,
                    "value": 2,
                    "value2": 1
                },
                "param_3": {
                    "output": 9,
                    "output_array": 6,
                    "output_data": 1,
                    "output_param": 2,
                    "output_result": 1,
                    "output_values": 4,
                    "param3": 1,
                    "result": 5,
                    "result_array": 2
                },
                "uStack_4c": {
                    "local_result2": 1,
                    "local_temp2": 1,
                    "local_temp_2": 1,
                    "local_var2": 14,
                    "local_variable2": 3,
                    "local_variable_2": 1,
                    "temp10": 1,
                    "temp12": 1,
                    "temp14": 1,
                    "temp2": 1,
                    "temp_local2": 1,
                    "temp_stack1": 1,
                    "temp_stack_var": 1,
                    "u_stack4c": 1,
                    "u_stack_var": 1
                },
                "uVar1": {
                    "result1": 5,
                    "result_temp_1": 1,
                    "temp1": 11,
                    "temp_1": 1,
                    "temp_value1": 1,
                    "temp_var1": 5,
                    "var1": 6
                },
                "uVar10": {
                    "result1": 2,
                    "temp1": 2,
                    "temp10": 4,
                    "temp6": 2,
                    "temp8": 4,
                    "temp_1": 1,
                    "temp_result1": 2,
                    "temp_value1": 1,
                    "temp_value10": 1,
                    "temp_var1": 3,
                    "temp_var10": 4,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temp_variable1": 1,
                    "temporary_result_1": 1,
                    "value1": 1
                },
                "uVar11": {
                    "result2": 1,
                    "temp11": 4,
                    "temp2": 2,
                    "temp7": 2,
                    "temp8": 1,
                    "temp9": 4,
                    "temp_2": 1,
                    "temp_result2": 2,
                    "temp_value11": 1,
                    "temp_value2": 1,
                    "temp_var11": 4,
                    "temp_var2": 3,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "temp_variable2": 1,
                    "temporary_result_2": 1,
                    "value2": 1
                },
                "uVar12": {
                    "result3": 1,
                    "temp10": 4,
                    "temp12": 4,
                    "temp3": 2,
                    "temp8": 2,
                    "temp9": 1,
                    "temp_3": 1,
                    "temp_result3": 2,
                    "temp_value12": 1,
                    "temp_value3": 1,
                    "temp_var12": 4,
                    "temp_var3": 3,
                    "temp_var4": 1,
                    "temp_var5": 1,
                    "temp_variable3": 1,
                    "temporary_result_3": 1,
                    "value3": 1
                },
                "uVar2": {
                    "result2": 5,
                    "result_temp_2": 1,
                    "temp2": 11,
                    "temp_2": 1,
                    "temp_value2": 1,
                    "temp_var2": 5,
                    "var2": 6
                },
                "uVar3": {
                    "result3": 3,
                    "result_temp_3": 1,
                    "temp1": 2,
                    "temp3": 11,
                    "temp_3": 1,
                    "temp_value3": 1,
                    "temp_var3": 5,
                    "var3": 6
                },
                "uVar4": {
                    "result4": 3,
                    "result_temp_4": 1,
                    "temp2": 2,
                    "temp4": 11,
                    "temp_4": 1,
                    "temp_value4": 1,
                    "temp_var4": 5,
                    "var4": 6
                },
                "uVar5": {
                    "result5": 3,
                    "result_temp_5": 1,
                    "temp3": 2,
                    "temp5": 11,
                    "temp_5": 1,
                    "temp_value5": 1,
                    "temp_var5": 5,
                    "var5": 6
                },
                "uVar6": {
                    "result6": 3,
                    "result_temp_6": 1,
                    "temp4": 2,
                    "temp6": 11,
                    "temp_6": 1,
                    "temp_value6": 1,
                    "temp_var6": 5,
                    "var6": 6
                },
                "uVar7": {
                    "result7": 3,
                    "result_temp_7": 1,
                    "temp5": 2,
                    "temp7": 11,
                    "temp_7": 1,
                    "temp_value7": 1,
                    "temp_var7": 5,
                    "var7": 6
                },
                "uVar8": {
                    "abs_input2": 3,
                    "abs_parameter": 1,
                    "adjusted_flags": 1,
                    "flag_masked": 1,
                    "flag_modified": 1,
                    "modified_input": 1,
                    "modified_input2": 1,
                    "modified_modifier": 1,
                    "modified_param2": 1,
                    "modified_size": 1,
                    "modified_value": 1,
                    "modified_value2": 1,
                    "processed_input2": 1,
                    "revised_flags": 1,
                    "temp8": 1,
                    "temp_value": 1,
                    "temp_value8": 1,
                    "temp_var1": 2,
                    "temp_var8": 2,
                    "u_value": 1,
                    "u_var8": 2,
                    "unsigned_input_number": 1,
                    "unsigned_val": 1,
                    "unsigned_value": 1,
                    "updated_input_2": 1,
                    "var8": 1
                }
            },
            "called": [
                "FUN_0800a5a0",
                "FUN_08008ba0",
                "FUN_0800b2cc",
                "FUN_08008b10",
                "FUN_080082d4",
                "FUN_08008640",
                "FUN_080082d0",
                "FUN_0800856c"
            ],
            "calling": [
                "FUN_08009410",
                "FUN_080096e8"
            ],
            "code": "\nint calculate_complex_result_08009d78(undefined4 input_value,uint input2,undefined8 *output)\n\n{\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  undefined4 temp7;\n  uint abs_input2;\n  int result;\n  undefined8 temp8;\n  undefined8 temp11;\n  undefined8 temp12;\n  undefined4 local_var1;\n  undefined4 local_var2;\n  undefined8 local_var3;\n  undefined8 local_var4;\n  undefined8 local_var5;\n  \n  abs_input2 = input2 & 0x7fffffff;\n  if (abs_input2 < 0x3fe921fc) {\n    *(undefined4 *)output = input_value;\n    *(uint *)((int)output + 4) = input2;\n    *(undefined4 *)(output + 1) = 0;\n    *(undefined4 *)((int)output + 0xc) = 0;\n    return 0;\n  }\n  if (abs_input2 < 0x4002d97c) {\n    if ((int)input2 < 1) {\n      temp8 = FUN_080082d4(input_value,input2,0x54400000,0x3ff921fb);\n      temp3 = (undefined4)((ulonglong)temp8 >> 0x20);\n      temp1 = (undefined4)temp8;\n      if (abs_input2 != 0x3ff921fb) {\n        temp8 = FUN_080082d4(temp1,temp3,0x1a626331,0x3dd0b461);\n        *output = temp8;\n        temp8 = FUN_080082d0(temp1,temp3);\n        temp8 = FUN_080082d4((int)temp8,(int)((ulonglong)temp8 >> 0x20),0x1a626331,0x3dd0b461);\n        output[1] = temp8;\n        return -1;\n      }\n      temp8 = FUN_080082d4(temp1,temp3,0x1a600000,0x3dd0b461);\n      temp1 = (undefined4)((ulonglong)temp8 >> 0x20);\n      temp11 = FUN_080082d4((int)temp8,temp1,0x2e037073,0x3ba3198a);\n      *output = temp11;\n      temp8 = FUN_080082d0((int)temp8,temp1);\n      temp8 = FUN_080082d4((int)temp8,(int)((ulonglong)temp8 >> 0x20),0x2e037073,0x3ba3198a);\n      output[1] = temp8;\n      return -1;\n    }\n    temp8 = FUN_080082d0();\n    temp3 = (undefined4)((ulonglong)temp8 >> 0x20);\n    temp1 = (undefined4)temp8;\n    if (abs_input2 != 0x3ff921fb) {\n      temp8 = FUN_080082d0(temp1,temp3,0x1a626331,0x3dd0b461);\n      *output = temp8;\n      temp8 = FUN_080082d0(temp1,temp3);\n      temp8 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),0x1a626331,0x3dd0b461);\n      output[1] = temp8;\n      return 1;\n    }\n    temp8 = FUN_080082d0(temp1,temp3,0x1a600000,0x3dd0b461);\n    temp1 = (undefined4)((ulonglong)temp8 >> 0x20);\n    temp11 = FUN_080082d0((int)temp8,temp1,0x2e037073,0x3ba3198a);\n    *output = temp11;\n    temp8 = FUN_080082d0((int)temp8,temp1);\n    temp8 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),0x2e037073,0x3ba3198a);\n    output[1] = temp8;\n    return 1;\n  }\n  if (0x413921fb < abs_input2) {\n    if (0x7fefffff < abs_input2) {\n      temp8 = FUN_080082d0(input_value,input2,input_value,input2);\n      output[1] = temp8;\n      *output = temp8;\n      return 0;\n    }\n    result = ((int)abs_input2 >> 0x14) + -0x416;\n    FUN_08008ba0();\n    local_var3 = FUN_0800856c();\n    temp8 = FUN_080082d0(input_value,abs_input2 + result * -0x100000,(int)local_var3,\n                          (int)((ulonglong)local_var3 >> 0x20));\n    temp8 = FUN_08008640((int)temp8,(int)((ulonglong)temp8 >> 0x20),0,0x41700000);\n    FUN_08008ba0();\n    local_var4 = FUN_0800856c();\n    temp8 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20));\n    local_var5 = FUN_08008640((int)temp8,(int)((ulonglong)temp8 >> 0x20),0,0x41700000);\n    FUN_08008b10((int)local_var5,(int)((ulonglong)local_var5 >> 0x20),0,0);\n    result = FUN_0800a5a0(&local_var3,output,result);\n    if (-1 < (int)input2) {\n      return result;\n    }\n    *(int *)((int)output + 4) = *(int *)((int)output + 4) + -0x80000000;\n    *(int *)((int)output + 0xc) = *(int *)((int)output + 0xc) + -0x80000000;\n    return -result;\n  }\n  temp8 = FUNC_0800b2cc();\n  temp3 = (undefined4)((ulonglong)temp8 >> 0x20);\n  temp11 = FUN_08008640((int)temp8,temp3,0x6dc9c883,0x3fe45f30);\n  FUN_080082d4((int)temp11,(int)((ulonglong)temp11 >> 0x20),0,0x3fe00000);\n  result = FUN_08008ba0();\n  temp11 = FUN_0800856c();\n  temp4 = (undefined4)((ulonglong)temp11 >> 0x20);\n  temp1 = (undefined4)temp11;\n  temp11 = FUN_08008640(temp1,temp4,0x54400000,0x3ff921fb);\n  temp8 = FUN_080082d0((int)temp8,temp3,(int)temp11,(int)((ulonglong)temp11 >> 0x20));\n  temp5 = (undefined4)((ulonglong)temp8 >> 0x20);\n  temp3 = (undefined4)temp8;\n  temp11 = FUN_08008640(temp1,temp4,0x1a626331,0x3dd0b461);\n  if ((0x1f < result) || (*(uint *)(&DAT_0800be98 + (result + -1) * 4) == abs_input2)) {\n    temp12 = FUN_080082d0(temp3,temp5,(int)temp11,(int)((ulonglong)temp11 >> 0x20));\n    if ((int)((abs_input2 >> 0x14) - ((uint)((int)((ulonglong)temp12 >> 0x20) << 1) >> 0x15)) < 0x11)\n    goto LAB_0800a0ce;\n    temp11 = FUN_08008640(temp1,temp4,0x1a600000,0x3dd0b461);\n    temp6 = (undefined4)((ulonglong)temp11 >> 0x20);\n    temp8 = FUN_080082d0(temp3,temp5,(int)temp11,temp6);\n    temp7 = (undefined4)((ulonglong)temp8 >> 0x20);\n    temp2 = (undefined4)temp8;\n    temp12 = FUN_080082d0(temp3,temp5,temp2,temp7);\n    temp11 = FUN_080082d0((int)temp12,(int)((ulonglong)temp12 >> 0x20),(int)temp11,temp6);\n    temp12 = FUN_08008640(temp1,temp4,0x2e037073,0x3ba3198a);\n    temp11 = FUN_080082d0((int)temp12,(int)((ulonglong)temp12 >> 0x20),(int)temp11,\n                          (int)((ulonglong)temp11 >> 0x20));\n    temp12 = FUN_080082d0(temp2,temp7,(int)temp11,(int)((ulonglong)temp11 >> 0x20));\n    if ((int)(((int)abs_input2 >> 0x14) - ((uint)((int)((ulonglong)temp12 >> 0x20) << 1) >> 0x15)) < 0x32\n       ) goto LAB_0800a0ce;\n    temp11 = FUN_08008640(temp1,temp4,0x2e000000,0x3ba3198a);\n    temp3 = (undefined4)((ulonglong)temp11 >> 0x20);\n    temp8 = FUN_080082d0(temp2,temp7,(int)temp11,temp3);\n    temp12 = FUN_080082d0(temp2,temp7);\n    temp11 = FUN_080082d0((int)temp12,(int)((ulonglong)temp12 >> 0x20),(int)temp11,temp3);\n    temp12 = FUN_08008640(temp1,temp4,0x252049c1,0x397b839a);\n    temp11 = FUN_080082d0((int)temp12,(int)((ulonglong)temp12 >> 0x20),(int)temp11,\n                          (int)((ulonglong)temp11 >> 0x20));\n  }\n  temp12 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp11,\n                        (int)((ulonglong)temp11 >> 0x20));\nLAB_0800a0ce:\n  local_var2 = (undefined4)((ulonglong)temp8 >> 0x20);\n  local_var1 = (undefined4)temp8;\n  *output = temp12;\n  temp8 = FUN_080082d0(local_var1,local_var2);\n  temp8 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp11,\n                        (int)((ulonglong)temp11 >> 0x20));\n  output[1] = temp8;\n  if ((int)input2 < 0) {\n    *(int *)output = (int)temp12;\n    *(int *)((int)output + 4) = (int)((ulonglong)temp12 >> 0x20) + -0x80000000;\n    *(int *)(output + 1) = (int)temp8;\n    *(int *)((int)output + 0xc) = (int)((ulonglong)temp8 >> 0x20) + -0x80000000;\n    result = -result;\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_complex_result_08009d78",
            "entrypoint": "0x08009d78",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009d78": "calculate_complex_result_08009d78",
                "iVar9": "result",
                "local_30": "local_var5",
                "local_38": "local_var4",
                "local_40": "local_var3",
                "local_50": "local_var1",
                "param_1": "input_value",
                "param_2": "input2",
                "param_3": "output",
                "uStack_4c": "local_var2",
                "uVar1": "temp1",
                "uVar10": "temp8",
                "uVar11": "temp11",
                "uVar12": "temp12",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "uVar8": "abs_input2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a1bc": {
            "additional_data": {
                "FUN_080082d0": {
                    "calculate_function4": 1
                },
                "FUN_080082d4": {
                    "calculate_function2": 1
                },
                "FUN_08008640": {
                    "calculate_function1": 1
                },
                "FUN_08008894": {
                    "calculate_function3": 1
                },
                "FUN_0800a1bc": {
                    "calculate_final_value": 1,
                    "calculate_result": 3,
                    "calculate_value": 2,
                    "compute_result": 1,
                    "reverse_binary_calculation": 1,
                    "reverse_binary_operation": 2,
                    "reverse_bits": 3,
                    "reverse_shift": 1
                },
                "F_080082d0": {
                    "perform_operation3": 1
                },
                "F_080082d4": {
                    "perform_operation": 1
                },
                "F_08008640": {
                    "calculate_value2": 1
                },
                "F_08008894": {
                    "perform_operation2": 1
                },
                "iVar10": {
                    "bit_counter": 1,
                    "bit_position": 1,
                    "counter": 1,
                    "counter2": 1,
                    "i": 1,
                    "inner_loop_count": 1,
                    "iteration_counter": 1,
                    "loop_count": 2,
                    "loop_counter": 6,
                    "loop_counter3": 1,
                    "outer_loop_counter": 1,
                    "shift_counter": 1,
                    "temp10": 9,
                    "temp9": 1,
                    "temp_10": 1,
                    "temp_iteration": 1,
                    "temp_var10": 1
                },
                "iVar14": {
                    "counter3": 1,
                    "loop_count_2": 1
                },
                "iVar2": {
                    "compare": 1,
                    "count": 1,
                    "counter": 6,
                    "counter1": 1,
                    "index": 1,
                    "iteration": 1,
                    "iteration_count": 1,
                    "loop_count": 1,
                    "loop_counter": 1,
                    "loop_counter1": 1,
                    "remaining_bits": 1,
                    "temp1": 2,
                    "temp2": 9,
                    "temp_2": 1,
                    "temp_counter": 1,
                    "temp_shift": 1,
                    "temp_var2": 1
                },
                "param_1": {
                    "input": 5,
                    "input1": 14,
                    "input_1": 2,
                    "input_value": 4,
                    "input_value1": 5,
                    "value1": 1
                },
                "param_2": {
                    "bit_count": 1,
                    "bit_shift": 2,
                    "bits_to_reverse": 1,
                    "count": 1,
                    "input2": 14,
                    "input_2": 2,
                    "input_value2": 5,
                    "mask": 1,
                    "modifier": 1,
                    "num_bits": 2,
                    "value2": 1
                },
                "uVar1": {
                    "remainder": 3,
                    "shift_amount": 4,
                    "shift_amount1": 1,
                    "shift_count": 1,
                    "shifted_bits": 4,
                    "shifted_input2": 1,
                    "shifted_input_2": 1,
                    "shifted_value": 2,
                    "temp": 1,
                    "temp1": 10,
                    "temp_1": 1,
                    "temp_var1": 2
                },
                "uVar11": {
                    "adjusted_shift_amount": 1,
                    "compare_result": 1,
                    "comparison_value": 1,
                    "difference": 1,
                    "remainder": 1,
                    "remaining_modifier": 1,
                    "shifted_input": 1,
                    "shifted_mask": 1,
                    "shifted_temp_value_2": 1,
                    "shifted_value2": 1,
                    "shifted_value3": 1,
                    "temp": 1,
                    "temp10": 1,
                    "temp11": 9,
                    "temp3": 2,
                    "temp4": 1,
                    "temp8": 1,
                    "temp9": 1,
                    "temp_11": 1,
                    "temp_result": 1,
                    "temp_var11": 1,
                    "temp_var8": 1
                },
                "uVar12": {
                    "final_result": 1,
                    "first_bit_position": 1,
                    "num_shifts_required": 1,
                    "output_shift": 1,
                    "remaining_bits_mask": 1,
                    "result": 1,
                    "shift": 1,
                    "shift_amount": 3,
                    "shift_amount2": 1,
                    "shift_amount4": 1,
                    "shift_count": 4,
                    "temp10": 1,
                    "temp11": 1,
                    "temp12": 9,
                    "temp_12": 1,
                    "temp_var12": 1,
                    "temp_var9": 1,
                    "u_var12": 1
                },
                "uVar13": {
                    "call_result": 1,
                    "decomposed_result": 1,
                    "function_result": 4,
                    "result": 6,
                    "result_64": 1,
                    "returned_value": 1,
                    "reversed_bits": 1,
                    "temp12": 1,
                    "temp13": 9,
                    "temp_13": 1,
                    "temp_result": 3,
                    "temp_result_division": 1,
                    "temp_var13": 1
                },
                "uVar14": {
                    "result": 1
                },
                "uVar15": {
                    "shift_amount_2": 1,
                    "shifted_bits3": 1
                },
                "uVar16": {
                    "masked_bits2": 1
                },
                "uVar17": {
                    "temp3": 1
                },
                "uVar3": {
                    "mask": 4,
                    "masked_bits": 1,
                    "result": 2,
                    "temp": 4,
                    "temp1": 1,
                    "temp2": 3,
                    "temp3": 9,
                    "temp_3": 1,
                    "temp_value": 3,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temporary_value": 1
                },
                "uVar4": {
                    "result_high": 1,
                    "shift_amount2": 1,
                    "shifted_bits_high": 1,
                    "shifted_masked_bits": 1,
                    "shifted_result": 1,
                    "shifted_temp_value": 1,
                    "temp1": 1,
                    "temp2": 3,
                    "temp3": 3,
                    "temp4": 9,
                    "temp_4": 1,
                    "temp_result_division_msb": 1,
                    "temp_val": 1,
                    "temp_value": 2,
                    "temp_value2": 2,
                    "temp_var3": 1,
                    "temp_var4": 1
                },
                "uVar5": {
                    "bit_mask": 1,
                    "count": 1,
                    "count1": 1,
                    "mask": 2,
                    "shift": 1,
                    "shift_amount": 2,
                    "shift_amount3": 1,
                    "shifted": 1,
                    "shifted_value2": 1,
                    "temp1": 2,
                    "temp2": 1,
                    "temp4": 2,
                    "temp5": 9,
                    "temp9": 1,
                    "temp_5": 1,
                    "temp_mask": 1,
                    "temp_var4": 1,
                    "temp_var5": 1,
                    "u_var5": 1
                },
                "uVar6": {
                    "bit_mask": 3,
                    "constant": 1,
                    "count": 1,
                    "count2": 1,
                    "loop_count": 1,
                    "loop_counter2": 1,
                    "mask": 2,
                    "mask1": 1,
                    "shift": 1,
                    "shift_mask": 1,
                    "shifted_mask": 1,
                    "shifted_value": 1,
                    "temp3": 1,
                    "temp5": 2,
                    "temp6": 9,
                    "temp_6": 1,
                    "temp_substraction": 1,
                    "temp_var6": 1,
                    "u_var6": 1
                },
                "uVar7": {
                    "accumulator": 1,
                    "bitwise_operation": 1,
                    "num1": 1,
                    "operand": 1,
                    "result": 6,
                    "reversed": 1,
                    "shifted_input1": 1,
                    "shifted_value": 1,
                    "temp2": 1,
                    "temp5": 1,
                    "temp6": 2,
                    "temp7": 9,
                    "temp_7": 1,
                    "temp_value1": 1,
                    "temp_var5": 1,
                    "temp_var7": 1,
                    "u_var7": 1
                },
                "uVar8": {
                    "difference": 1,
                    "num2": 1,
                    "remainder": 1,
                    "remainder2": 1,
                    "remaining_bits": 2,
                    "remaining_bits2": 1,
                    "remaining_shifts": 1,
                    "shifted_bits_diff": 1,
                    "shifted_diff": 1,
                    "subtracted_value": 1,
                    "temp6": 1,
                    "temp7": 2,
                    "temp8": 9,
                    "temp_8": 1,
                    "temp_result_substraction": 1,
                    "temp_value2": 1,
                    "temp_value3": 1,
                    "temp_var6": 1,
                    "temp_var8": 1,
                    "u_var8": 1
                },
                "uVar9": {
                    "input_shifted": 1,
                    "num3": 1,
                    "shifted_bits2": 1,
                    "shifted_input": 2,
                    "shifted_input1": 1,
                    "shifted_input_1": 1,
                    "shifted_input_value": 1,
                    "shifted_value": 2,
                    "temp2": 1,
                    "temp7": 1,
                    "temp8": 2,
                    "temp9": 9,
                    "temp_9": 1,
                    "temp_operand": 1,
                    "temp_result": 2,
                    "temp_value2": 1,
                    "temp_value3": 1,
                    "temp_var7": 1,
                    "temp_var9": 1
                }
            },
            "called": [
                "FUN_080082d4",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_080082d0"
            ],
            "calling": [
                "FUN_08009b24",
                "FUN_080098d0"
            ],
            "code": "\nuint reverse_binary_calculation_0800a1bc(uint input1,uint input2)\n\n{\n  uint temp1;\n  int temp2;\n  uint temp3;\n  undefined4 temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  uint temp8;\n  uint temp9;\n  int temp10;\n  uint temp11;\n  uint temp12;\n  undefined8 temp13;\n  \n  if ((~input2 & 0x7ff00000) == 0) {\n    temp13 = FUN_08008640(input1,input2,input1,input2);\n    temp7 = FUN_080082d4((int)temp13,(int)((ulonglong)temp13 >> 0x20),input1,input2);\n    return temp7;\n  }\n  if ((int)input2 < 1) {\n    if ((input2 & 0x7fffffff | input1) == 0) {\n      return input1;\n    }\n    if (input2 != 0) {\n      temp13 = FUN_080082d0(input1,input2,input1);\n      temp4 = (undefined4)((ulonglong)temp13 >> 0x20);\n      temp7 = FUN_08008894((int)temp13,temp4,(int)temp13,temp4);\n      return temp7;\n    }\n    do {\n      temp9 = input1;\n      temp7 = temp9 >> 0xb;\n      input2 = input2 - 0x15;\n      input1 = temp9 << 0x15;\n    } while (temp7 == 0);\n    temp1 = input2;\n    if (-1 < (int)temp9) goto LAB_0800a290;\n    temp12 = 0x20;\n    temp5 = 0xffffffff;\n    temp9 = input1;\n  }\n  else {\n    temp1 = (int)input2 >> 0x14;\n    temp7 = input2;\n    temp9 = input1;\n    if (temp1 != 0) goto LAB_0800a1da;\nLAB_0800a290:\n    temp9 = 0;\n    temp12 = temp7;\n    do {\n      temp5 = temp9;\n      temp7 = temp12 << 1;\n      temp10 = temp12 << 0xc;\n      temp9 = temp5 + 1;\n      temp12 = temp7;\n    } while (-1 < temp10);\n    temp12 = 0x20 - temp9;\n    input2 = temp1;\n    temp9 = input1 << (temp9 & 0xff);\n  }\n  temp7 = input1 >> (temp12 & 0xff) | temp7;\n  temp1 = input2 - temp5;\nLAB_0800a1da:\n  temp7 = temp7 & 0xfffff | 0x100000;\n  if (-1 < (int)(temp1 << 0x1f)) {\n    temp7 = temp7 * 2 - ((int)temp9 >> 0x1f);\n    temp9 = temp9 << 1;\n  }\n  temp12 = 0;\n  temp7 = temp7 * 2 - ((int)temp9 >> 0x1f);\n  temp9 = temp9 << 1;\n  temp1 = 0;\n  temp10 = 0x16;\n  temp5 = 0x200000;\n  do {\n    temp2 = temp1 + temp5;\n    if (temp2 <= (int)temp7) {\n      temp7 = temp7 - temp2;\n      temp1 = temp2 + temp5;\n      temp12 = temp12 + temp5;\n    }\n    temp10 = temp10 + -1;\n    temp7 = temp7 * 2 - ((int)temp9 >> 0x1f);\n    temp5 = temp5 >> 1;\n    temp9 = temp9 << 1;\n  } while (temp10 != 0);\n  temp2 = 0x20;\n  temp6 = 0x80000000;\n  temp10 = 0;\n  temp5 = 0;\n  do {\n    temp3 = temp6 + temp10;\n    temp11 = temp1;\n    if ((int)temp1 < (int)temp7) {\n      if ((int)temp3 < 0) {\nLAB_0800a26a:\n        if (-1 < (int)(temp3 + temp6)) {\n          temp11 = temp1 + 1;\n        }\n      }\n      temp8 = temp7 - temp1;\n      temp1 = temp11;\n      if (temp9 < temp3) {\n        temp8 = temp8 - 1;\n      }\nLAB_0800a262:\n      temp10 = temp3 + temp6;\n      temp9 = temp9 - temp3;\n      temp5 = temp5 + temp6;\n      temp7 = temp8;\n    }\n    else if ((temp7 == temp1) && (temp3 <= temp9)) {\n      if ((int)temp3 < 0) goto LAB_0800a26a;\n      temp8 = 0;\n      temp1 = temp7;\n      goto LAB_0800a262;\n    }\n    temp2 = temp2 + -1;\n    temp6 = temp6 >> 1;\n    temp7 = temp7 * 2 - ((int)temp9 >> 0x1f);\n    temp9 = temp9 << 1;\n    if (temp2 == 0) {\n      if ((temp7 | temp9) == 0) {\n        temp5 = temp5 >> 1;\n      }\n      else if (temp5 == 0xffffffff) {\n        temp12 = temp12 + 1;\n        temp5 = 0;\n      }\n      else {\n        temp5 = temp5 + 1 >> 1;\n      }\n      if ((temp12 & 1) != 0) {\n        temp5 = temp5 | 0x80000000;\n      }\n      return temp5;\n    }\n  } while( true );\n}\n\n",
            "current_name": "reverse_binary_calculation_0800a1bc",
            "entrypoint": "0x0800a1bc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a1bc": "reverse_binary_calculation_0800a1bc",
                "iVar10": "temp10",
                "iVar2": "temp2",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "temp1",
                "uVar11": "temp11",
                "uVar12": "temp12",
                "uVar13": "temp13",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "uVar8": "temp8",
                "uVar9": "temp9"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a348": {
            "additional_data": {
                "FUN_0800a348": {
                    "calculate_result": 22,
                    "calculate_value": 2,
                    "perform_calculation": 1
                },
                "iVar1": {
                    "error_code": 2,
                    "error_flag": 1,
                    "result": 14,
                    "result1": 7,
                    "return_value": 4,
                    "status": 2
                },
                "local_28": {
                    "final_result3": 1,
                    "local3": 1,
                    "local_result1": 1,
                    "local_result2": 1,
                    "local_var1": 1,
                    "local_var2": 2,
                    "local_var3": 7,
                    "local_variable3": 2,
                    "new_value3": 1,
                    "new_var3": 1,
                    "result2": 1,
                    "stack_var_3": 1,
                    "temp2": 1,
                    "temp3": 2,
                    "temp6": 1,
                    "temp7": 1,
                    "temp_6": 1,
                    "temp_var3": 2,
                    "temp_var8": 1,
                    "temp_var_3": 1,
                    "temp_var_7": 1
                },
                "local_30": {
                    "final_result1": 1,
                    "local1": 1,
                    "local_result": 1,
                    "local_result1": 1,
                    "local_var1": 9,
                    "local_var2": 1,
                    "local_variable1": 2,
                    "new_value1": 1,
                    "new_var1": 1,
                    "result1": 1,
                    "stack_var_1": 1,
                    "temp1": 3,
                    "temp5": 1,
                    "temp9": 1,
                    "temp_4": 1,
                    "temp_var1": 2,
                    "temp_var6": 1,
                    "temp_var_1": 1,
                    "temp_var_5": 1
                },
                "param_1": {
                    "input1": 23,
                    "input_1": 5,
                    "input_param1": 1,
                    "input_param_1": 1,
                    "input_value": 1
                },
                "param_2": {
                    "input2": 23,
                    "input_2": 5,
                    "input_param2": 1,
                    "input_param_2": 1,
                    "input_size": 1
                },
                "param_3": {
                    "input3": 21,
                    "input_3": 5,
                    "input_param3": 1,
                    "input_param_3": 1,
                    "param1": 1,
                    "param3": 2
                },
                "param_4": {
                    "input4": 21,
                    "input_4": 5,
                    "input_param4": 1,
                    "input_param_4": 1,
                    "param2": 1,
                    "param4": 2
                },
                "uStack_24": {
                    "final_result1": 1,
                    "final_result4": 1,
                    "local4": 1,
                    "local_var4": 7,
                    "local_variable4": 2,
                    "new_value4": 1,
                    "new_var4": 1,
                    "result2_high": 2,
                    "stack_var2": 1,
                    "stack_var_4": 1,
                    "temp2_upper": 1,
                    "temp4": 2,
                    "temp7": 1,
                    "temp8": 1,
                    "temp_7": 1,
                    "temp_result5": 1,
                    "temp_var4": 2,
                    "temp_var9": 1,
                    "temp_var_4": 1,
                    "temp_var_8": 1
                },
                "uStack_2c": {
                    "final_result2": 1,
                    "final_result_upper": 1,
                    "local2": 1,
                    "local_var2": 7,
                    "local_variable2": 2,
                    "new_value2": 1,
                    "new_var2": 1,
                    "result1_high": 1,
                    "result3_high": 1,
                    "stack_var1": 1,
                    "stack_var_2": 1,
                    "temp1_upper": 1,
                    "temp2": 2,
                    "temp6": 1,
                    "temp8": 1,
                    "temp_5": 1,
                    "temp_result4": 1,
                    "temp_var2": 2,
                    "temp_var7": 1,
                    "temp_var_2": 1,
                    "temp_var_6": 1
                },
                "uVar2": {
                    "calc_result1": 1,
                    "partial_result_1": 1,
                    "result1": 8,
                    "result2": 6,
                    "result2_upper": 1,
                    "result_low": 1,
                    "result_lower": 1,
                    "result_var1": 1,
                    "temp1": 3,
                    "temp_1": 1,
                    "temp_var1": 3,
                    "value1": 3
                },
                "uVar3": {
                    "calc_result2": 1,
                    "partial_result_2": 1,
                    "result1_high": 2,
                    "result1_upper": 1,
                    "result2": 5,
                    "result2_lower": 1,
                    "result3": 6,
                    "result_high": 1,
                    "result_upper": 1,
                    "result_var2": 1,
                    "temp2": 3,
                    "temp_2": 1,
                    "temp_var2": 3,
                    "value1_high": 1,
                    "value2": 2
                },
                "uVar4": {
                    "abs_input2": 9,
                    "abs_input_2": 2,
                    "abs_input_size": 1,
                    "adjusted_input": 1,
                    "masked_input2": 2,
                    "masked_input_2": 1,
                    "modified_input2": 3,
                    "param2_absolute": 1,
                    "positive_input2": 3,
                    "temp1": 1,
                    "temp_var": 1,
                    "u_var4": 2,
                    "unsigned_input2": 2,
                    "unsigned_input_2": 1,
                    "updated_input2": 1
                },
                "uVar5": {
                    "function_result1": 1,
                    "intermediate1": 1,
                    "result2": 3,
                    "result3": 1,
                    "result4": 3,
                    "temp": 1,
                    "temp1": 2,
                    "temp2": 1,
                    "temp3": 3,
                    "temp_result": 5,
                    "temp_result1": 4,
                    "temp_value": 1,
                    "temp_value1": 1,
                    "temp_var1": 1,
                    "temp_var3": 2,
                    "temp_var_9": 1
                },
                "uVar6": {
                    "accumulator": 1,
                    "final_result": 3,
                    "function_result2": 1,
                    "intermediate2": 1,
                    "result3": 3,
                    "result4": 1,
                    "result5": 3,
                    "temp2": 2,
                    "temp3": 1,
                    "temp4": 3,
                    "temp_result2": 4,
                    "temp_value": 1,
                    "temp_value1": 1,
                    "temp_value2": 1,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temp_var4": 2,
                    "temp_var_10": 1
                },
                "uVar7": {
                    "function_result3": 1,
                    "input_result": 1,
                    "intermediate3": 1,
                    "result4": 3,
                    "result5": 1,
                    "result6": 3,
                    "temp2": 1,
                    "temp3": 2,
                    "temp4": 1,
                    "temp5": 3,
                    "temp_3": 1,
                    "temp_result3": 4,
                    "temp_result_2": 1,
                    "temp_value2": 2,
                    "temp_value3": 1,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "temp_var5": 2,
                    "temp_var_11": 1
                }
            },
            "called": [
                "FUN_08008ba0",
                "FUN_080082d4",
                "FUN_08008640",
                "FUN_080082d0"
            ],
            "calling": [
                "FUN_08009410",
                "FUN_080096e8"
            ],
            "code": "\nundefined4 calculate_result_0800a348(undefined4 input1,uint input2,undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  undefined4 result1;\n  undefined4 result3;\n  uint abs_input2;\n  undefined8 temp_result;\n  undefined8 temp_result2;\n  undefined8 temp_result3;\n  undefined4 local_var1;\n  undefined4 local_var2;\n  undefined4 local_var3;\n  undefined4 local_var4;\n  \n  abs_input2 = input2 & 0x7fffffff;\n  if (abs_input2 < 0x3e400000) {\n    result = FUN_08008ba0();\n    if (result == 0) {\n      return 0;\n    }\n    temp_result = FUN_08008640(input1,input2,input1,input2);\n    result3 = (undefined4)((ulonglong)temp_result >> 0x20);\n    result1 = (undefined4)temp_result;\n    temp_result2 = FUN_08008640(result1,result3,0xbe8838d4,0xbda8fae9);\n    temp_result2 = FUN_080082d4((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),0xbdb4b1c4,0x3e21ee9e);\n    temp_result2 = FUN_08008640((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),result1,result3);\n    temp_result2 = FUN_080082d0((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),0x809c52ad,0x3e927e4f);\n    temp_result2 = FUN_08008640((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),result1,result3);\n    temp_result2 = FUN_080082d4((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),0x19cb1590,0x3efa01a0);\n    temp_result2 = FUN_08008640((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),result1,result3);\n    temp_result2 = FUN_080082d0((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),0x16c15177,0x3f56c16c);\n    temp_result2 = FUN_08008640((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),result1,result3);\n    temp_result2 = FUN_080082d4((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),0x5555554c,0x3fa55555);\n    temp_result2 = FUN_08008640((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),result1,result3);\n  }\n  else {\n    temp_result = FUN_08008640(input1,input2,input1,input2);\n    result3 = (undefined4)((ulonglong)temp_result >> 0x20);\n    result1 = (undefined4)temp_result;\n    temp_result2 = FUN_08008640(result1,result3,0xbe8838d4,0xbda8fae9);\n    temp_result2 = FUN_080082d4((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),0xbdb4b1c4,0x3e21ee9e);\n    temp_result2 = FUN_08008640((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),result1,result3);\n    temp_result2 = FUN_080082d0((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),0x809c52ad,0x3e927e4f);\n    temp_result2 = FUN_08008640((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),result1,result3);\n    temp_result2 = FUN_080082d4((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),0x19cb1590,0x3efa01a0);\n    temp_result2 = FUN_08008640((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),result1,result3);\n    temp_result2 = FUN_080082d0((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),0x16c15177,0x3f56c16c);\n    temp_result2 = FUN_08008640((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),result1,result3);\n    temp_result2 = FUN_080082d4((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),0x5555554c,0x3fa55555);\n    temp_result2 = FUN_08008640((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),result1,result3);\n    if (0x3fd33332 < abs_input2) {\n      if (abs_input2 < 0x3fe90001) {\n        result = abs_input2 - 0x200000;\n        temp_result = FUN_080082d0(0,0x3ff00000,0,result);\n      }\n      else {\n        result = 0x3fd20000;\n        temp_result = 0x3fe7000000000000;\n      }\n      local_var4 = (undefined4)((ulonglong)temp_result >> 0x20);\n      local_var3 = (undefined4)temp_result;\n      temp_result = FUN_08008640(result1,result3,0,0x3fe00000);\n      temp_result = FUN_080082d0((int)temp_result,(int)((ulonglong)temp_result >> 0x20),0,result);\n      temp_result2 = FUN_08008640(result1,result3,(int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20));\n      temp_result3 = FUN_08008640(input1,input2,input3,input4);\n      temp_result2 = FUN_080082d0((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),(int)temp_result3,\n                           (int)((ulonglong)temp_result3 >> 0x20));\n      temp_result = FUN_080082d0((int)temp_result,(int)((ulonglong)temp_result >> 0x20),(int)temp_result2,\n                           (int)((ulonglong)temp_result2 >> 0x20));\n      result1 = FUN_080082d0(local_var3,local_var4,(int)temp_result,(int)((ulonglong)temp_result >> 0x20));\n      return result1;\n    }\n  }\n  local_var2 = (undefined4)((ulonglong)temp_result2 >> 0x20);\n  local_var1 = (undefined4)temp_result2;\n  result1 = (undefined4)((ulonglong)temp_result >> 0x20);\n  temp_result2 = FUN_08008640((int)temp_result,result1,0,0x3fe00000);\n  temp_result = FUN_08008640((int)temp_result,result1,local_var1,local_var2);\n  temp_result3 = FUN_08008640(input1,input2,input3,input4);\n  temp_result = FUN_080082d0((int)temp_result,(int)((ulonglong)temp_result >> 0x20),(int)temp_result3,\n                       (int)((ulonglong)temp_result3 >> 0x20));\n  temp_result = FUN_080082d0((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),(int)temp_result,\n                       (int)((ulonglong)temp_result >> 0x20));\n  result1 = FUN_080082d0(0,0x3ff00000,(int)temp_result,(int)((ulonglong)temp_result >> 0x20));\n  return result1;\n}\n\n",
            "current_name": "calculate_result_0800a348",
            "entrypoint": "0x0800a348",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a348": "calculate_result_0800a348",
                "iVar1": "result",
                "local_28": "local_var3",
                "local_30": "local_var1",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uStack_24": "local_var4",
                "uStack_2c": "local_var2",
                "uVar2": "result1",
                "uVar3": "result3",
                "uVar4": "abs_input2",
                "uVar5": "temp_result",
                "uVar6": "temp_result2",
                "uVar7": "temp_result3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a5a0": {
            "additional_data": {
                "FUN_0800a5a0": {
                    "calculate_function": 1,
                    "calculate_polynomial": 1,
                    "calculate_result": 2,
                    "optimized_function": 1
                },
                "bVar24": {
                    "b_var24": 1,
                    "bool_value": 1,
                    "bool_var": 7,
                    "bool_var24": 1,
                    "boolean": 1,
                    "boolean_var": 2,
                    "boolean_var_24": 1,
                    "flag": 3,
                    "flag1": 1,
                    "flag2": 1,
                    "flag_var_1": 1,
                    "has_remainder": 1,
                    "is_true": 2,
                    "temp_bool": 1,
                    "temp_boolean": 1
                },
                "cov_uVar22": {
                    "temp_buffer": 1
                },
                "iVar14": {
                    "counter": 1,
                    "counter2": 1,
                    "counter3": 1,
                    "counter_3": 2,
                    "i_var14": 1,
                    "index2": 1,
                    "index3": 1,
                    "index_var3": 1,
                    "inner_index": 2,
                    "iter_var3": 1,
                    "iter_var_3": 1,
                    "j": 1,
                    "local_var_14": 1,
                    "loop_counter_3": 1,
                    "loop_index": 1,
                    "loop_index2": 2,
                    "loop_index_3": 1,
                    "temp5": 1,
                    "temp_index": 1,
                    "temp_int3": 1,
                    "temp_var14": 1,
                    "temp_var8": 1,
                    "temp_variable8": 1,
                    "var14": 1,
                    "var_14": 1,
                    "var_7": 1,
                    "variable3": 1
                },
                "iVar15": {
                    "i_var15": 2,
                    "inner_length": 1,
                    "int_value1": 1,
                    "int_var": 1,
                    "len": 1,
                    "local_var_15": 1,
                    "ptr_length": 1,
                    "ptr_size": 1,
                    "some_var_1": 1,
                    "special_index_var": 1,
                    "stack_var4": 1,
                    "start_index_value": 1,
                    "temp_counter": 1,
                    "temp_int4": 1,
                    "temp_var1": 1,
                    "temp_var15": 1,
                    "temp_var9": 1,
                    "temp_variable9": 1,
                    "type_index": 1,
                    "value1": 1,
                    "var1": 1,
                    "var15": 2,
                    "var_15": 1,
                    "var_8": 1,
                    "var_a": 1,
                    "variable4": 1,
                    "variable_1": 1
                },
                "iVar17": {
                    "i_var17": 2,
                    "int_var_1": 1,
                    "local_var_17": 1,
                    "loop_counter1": 1,
                    "loop_index": 1,
                    "loop_index3": 2,
                    "loop_index_var": 1,
                    "outer_index": 2,
                    "some_var_2": 1,
                    "temp7": 1,
                    "temp_counter_2": 1,
                    "temp_int5": 1,
                    "temp_var10": 1,
                    "temp_var17": 1,
                    "temp_var2": 1,
                    "temp_variable10": 1,
                    "value2": 1,
                    "var17": 2,
                    "var2": 1,
                    "var_17": 1,
                    "var_9": 1,
                    "variable5": 1,
                    "variable_2": 1
                },
                "iVar18": {
                    "index": 1,
                    "loop_counter2": 1,
                    "ptr_index1": 1,
                    "temp_index2": 1,
                    "value3": 1,
                    "variable_3": 1
                },
                "iVar19": {
                    "value4": 1,
                    "variable_4": 1
                },
                "iVar20": {
                    "i_var20": 1,
                    "iteration_count_value": 1,
                    "variable_5": 1
                },
                "iVar21": {
                    "condition": 1,
                    "count_temp": 1,
                    "i_var21": 1,
                    "index": 1,
                    "int_var_2": 1,
                    "length": 1,
                    "local_var_21": 1,
                    "loop_index4": 1,
                    "remainder_degree": 1,
                    "some_var_3": 1,
                    "temp9": 1,
                    "temp_counter_3": 1,
                    "temp_index_var": 1,
                    "temp_var12": 1,
                    "temp_var21": 1,
                    "temp_var4": 1,
                    "temp_variable12": 1,
                    "total_loop_counter": 1,
                    "var21": 2,
                    "var3": 1,
                    "var_11": 1,
                    "var_21": 1,
                    "variable6": 1,
                    "variable_6": 1
                },
                "iVar22": {
                    "loop_counter3": 1,
                    "loop_index4": 1,
                    "variable_7": 1
                },
                "iVar23": {
                    "var_index": 1,
                    "variable_8": 1
                },
                "iVar25": {
                    "i_var25": 1
                },
                "iVar26": {
                    "i_var26": 1
                },
                "iVar4": {
                    "count": 1,
                    "counter": 4,
                    "counter_1": 1,
                    "i": 1,
                    "i_var4": 1,
                    "index": 6,
                    "index1": 1,
                    "index_var": 1,
                    "iter_var": 1,
                    "iter_var_1": 1,
                    "local_var_4": 1,
                    "loop_counter_1": 1,
                    "loop_index": 2,
                    "temp_index": 1,
                    "temp_int": 1,
                    "temp_var2": 1,
                    "temp_variable2": 1,
                    "var4": 1,
                    "var_1": 1,
                    "variable1": 1
                },
                "iVar9": {
                    "count": 1,
                    "counter": 2,
                    "counter1": 1,
                    "counter_2": 1,
                    "i_var9": 2,
                    "index": 1,
                    "index2": 1,
                    "index_var2": 1,
                    "iter_var2": 1,
                    "iter_var_2": 1,
                    "iteration": 1,
                    "local_var_9": 1,
                    "loop_counter_2": 1,
                    "loop_index1": 1,
                    "loop_index_2": 1,
                    "size_index": 1,
                    "start_index": 1,
                    "temp_count": 1,
                    "temp_degree": 1,
                    "temp_index": 1,
                    "temp_int2": 1,
                    "temp_var5": 1,
                    "temp_var9": 1,
                    "temp_variable5": 1,
                    "var9": 1,
                    "var_4": 1,
                    "var_9": 1,
                    "variable2": 1
                },
                "local_140": {
                    "temp_value3": 1
                },
                "local_148": {
                    "temp_result4": 1
                },
                "local_15c": {
                    "temp_int9": 1
                },
                "local_160": {
                    "array1": 1,
                    "array3": 1,
                    "array4": 1,
                    "array_2": 1,
                    "index_array": 1,
                    "local_array2": 1,
                    "local_array3": 1,
                    "local_array4": 3,
                    "local_array_160": 1,
                    "local_array_2": 1,
                    "local_array_4": 1,
                    "local_array_var3": 1,
                    "local_temp6": 1,
                    "local_temp_array": 1,
                    "local_var_array_2": 1,
                    "local_variable_160": 1,
                    "local_variable_6": 1,
                    "stack_arr3": 1,
                    "temp_array": 2,
                    "temp_array2": 2,
                    "temp_array3": 1,
                    "temp_buffer3": 1,
                    "temp_conditions": 1,
                    "temp_int_array": 1,
                    "temp_local_array": 1
                },
                "local_168": {
                    "local_struct1": 1,
                    "local_temp5": 1,
                    "local_temp_var": 1,
                    "local_var": 1,
                    "local_var4": 2,
                    "local_var5": 1,
                    "local_var_168": 1,
                    "local_var_5": 1,
                    "local_variable5": 2,
                    "local_variable_168": 1,
                    "local_variable_4": 1,
                    "local_variable_5": 1,
                    "output_buffer": 1,
                    "output_temp": 1,
                    "result_array": 1,
                    "result_var": 1,
                    "stack_var6": 1,
                    "temp_local_var": 1,
                    "temp_result6": 1,
                    "temp_result_array": 1,
                    "temp_value2": 1,
                    "temp_value7": 1,
                    "temp_var": 1,
                    "temp_var_12": 1,
                    "temp_variable20": 1,
                    "var_168": 1,
                    "variable1": 1
                },
                "local_208": {
                    "local_variable_7": 1
                },
                "local_258": {
                    "array2": 2,
                    "array3": 1,
                    "array_1": 1,
                    "array_temp": 1,
                    "calculation_array": 1,
                    "data_array": 1,
                    "local_array": 1,
                    "local_array1": 1,
                    "local_array2": 1,
                    "local_array3": 4,
                    "local_array_1": 1,
                    "local_array_2": 1,
                    "local_array_3": 1,
                    "local_array_var2": 1,
                    "local_result": 1,
                    "local_variable_258": 1,
                    "result_array": 5,
                    "stack_arr2": 1,
                    "temp_array2": 1,
                    "updated_array": 1
                },
                "local_260": {
                    "array1": 1,
                    "array2": 1,
                    "array_data": 1,
                    "array_local": 1,
                    "local_array": 1,
                    "local_array1": 1,
                    "local_array2": 4,
                    "local_array_1": 1,
                    "local_array_2": 1,
                    "local_array_var": 1,
                    "local_pointer_array": 2,
                    "local_variable_260": 1,
                    "remainder_array": 1,
                    "result_array": 1,
                    "stack_arr1": 1,
                    "temp_array": 1,
                    "temp_array1": 1,
                    "temp_array_ptr": 1,
                    "type_array_ptr": 1,
                    "var_array": 1
                },
                "local_26c": {
                    "length1": 1,
                    "local_a": 1,
                    "local_counter_3": 1,
                    "local_temp3": 1,
                    "local_var1": 1,
                    "local_var3": 2,
                    "local_var4": 2,
                    "local_var_26c": 1,
                    "local_var_4": 1,
                    "local_variable3": 1,
                    "local_variable4": 1,
                    "local_variable_26c": 1,
                    "local_variable_3": 1,
                    "local_variable_4": 1,
                    "temp_count2": 1,
                    "temp_int8": 1,
                    "temp_local3": 1,
                    "temp_size": 1,
                    "temp_size2": 1,
                    "temp_value12": 1,
                    "temp_var": 1,
                    "temp_var_10": 1,
                    "temp_variable18": 1,
                    "var_26c": 1,
                    "var_size": 1
                },
                "local_270": {
                    "array_end": 1,
                    "array_size_value": 1,
                    "local_b": 1,
                    "local_counter_2": 1,
                    "local_length": 1,
                    "local_size_var2": 1,
                    "local_var2": 2,
                    "local_var3": 2,
                    "local_var_270": 1,
                    "local_var_3": 1,
                    "local_variable2": 1,
                    "local_variable3": 1,
                    "local_variable_2": 1,
                    "local_variable_270": 1,
                    "local_variable_3": 1,
                    "size1": 1,
                    "stack_var3": 1,
                    "temp_counter2": 1,
                    "temp_degree2": 1,
                    "temp_int7": 1,
                    "temp_length": 1,
                    "temp_local2": 1,
                    "temp_size": 1,
                    "temp_var_9": 1,
                    "temp_variable17": 1,
                    "var_270": 1,
                    "var_size": 1
                },
                "local_280": {
                    "inner_len": 1,
                    "length2": 1,
                    "local_counter": 1,
                    "local_size_var": 1,
                    "local_temp2": 1,
                    "local_var1": 2,
                    "local_var2": 2,
                    "local_var_1": 1,
                    "local_var_2": 1,
                    "local_var_280": 1,
                    "local_variable1": 1,
                    "local_variable2": 1,
                    "local_variable_1": 1,
                    "local_variable_2": 1,
                    "local_variable_280": 1,
                    "stack_var2": 1,
                    "temp_count": 1,
                    "temp_counter1": 1,
                    "temp_int6": 1,
                    "temp_local": 1,
                    "temp_size": 1,
                    "temp_value11": 1,
                    "temp_var": 1,
                    "temp_var_8": 1,
                    "temp_variable16": 1,
                    "var_280": 1,
                    "var_size": 1
                },
                "local_284": {
                    "array1": 1,
                    "local_array1": 4,
                    "local_array_1": 1,
                    "local_ptr_array_284": 1,
                    "local_temp": 1,
                    "local_var1": 2,
                    "local_var_1": 1,
                    "local_var_2": 1,
                    "local_var_array": 1,
                    "local_variable1": 1,
                    "local_variable_1": 1,
                    "local_variable_284": 1,
                    "pointer_array2": 1,
                    "ptr6": 1,
                    "ptr_data3": 1,
                    "ptr_local": 1,
                    "remainder_pointer2": 1,
                    "stack_var1": 1,
                    "temp_array": 3,
                    "temp_buffer2": 1,
                    "temp_list": 1,
                    "temp_output_ptr": 1,
                    "var_array": 1
                },
                "param_1": {
                    "coefficients": 1,
                    "first_param": 1,
                    "input": 5,
                    "input1": 3,
                    "input_1": 2,
                    "input_data": 1,
                    "input_int": 1,
                    "input_param": 7,
                    "input_param1": 1,
                    "input_param_1": 4,
                    "input_value": 2,
                    "param1": 1,
                    "parameter_1": 1
                },
                "param_2": {
                    "array": 1,
                    "array_param": 4,
                    "data_array": 1,
                    "input2": 3,
                    "input_2": 2,
                    "input_param2": 1,
                    "input_param_2": 4,
                    "output": 4,
                    "output_array": 1,
                    "output_data": 1,
                    "output_param": 3,
                    "param2": 1,
                    "parameter_2": 1,
                    "pointer_array": 1,
                    "result": 1,
                    "result_array": 1
                },
                "param_3": {
                    "array_length": 4,
                    "array_size": 1,
                    "data_size": 1,
                    "input3": 3,
                    "input_3": 2,
                    "input_param3": 1,
                    "input_param_3": 4,
                    "input_size": 2,
                    "length": 3,
                    "length_param": 1,
                    "param3": 1,
                    "parameter_3": 1,
                    "size": 4,
                    "size_param": 2
                },
                "param_4": {
                    "conditions": 1,
                    "counter": 1,
                    "degree": 1,
                    "index": 1,
                    "index_param": 2,
                    "input4": 3,
                    "input_4": 2,
                    "input_param4": 1,
                    "input_param_4": 4,
                    "iteration_count": 2,
                    "loop_param_1": 1,
                    "num_iterations": 1,
                    "offset": 2,
                    "param4": 2,
                    "param_4": 2,
                    "parameter_4": 1,
                    "size_param": 1,
                    "start_index": 1,
                    "var_4": 1
                },
                "param_5": {
                    "condition_param": 1,
                    "flag": 2,
                    "flag_param": 1,
                    "input5": 3,
                    "input_5": 2,
                    "input_param5": 1,
                    "input_param_5": 4,
                    "iteration_count": 1,
                    "loop_param": 1,
                    "loop_param_2": 1,
                    "loop_type": 1,
                    "num_operations": 1,
                    "operation": 1,
                    "option": 1,
                    "param": 1,
                    "param5": 2,
                    "param_5": 2,
                    "param_a": 1,
                    "parameter_5": 1,
                    "type": 1,
                    "var_5": 1
                },
                "param_6": {
                    "array_index": 1,
                    "array_pointer": 1,
                    "constants": 1,
                    "data": 1,
                    "data_index": 1,
                    "data_param": 1,
                    "input6": 3,
                    "input_6": 2,
                    "input_array": 1,
                    "input_param6": 1,
                    "input_param_6": 4,
                    "loop_param_3": 1,
                    "number_param": 1,
                    "offset": 1,
                    "offset_param": 1,
                    "param6": 2,
                    "param_6": 2,
                    "param_b": 1,
                    "parameter_6": 1,
                    "value": 1,
                    "values": 1,
                    "var_6": 1
                },
                "ppuVar7": {
                    "double_pointer": 3,
                    "double_pointer_array": 1,
                    "double_pointer_var_1": 1,
                    "double_ptr_var": 1,
                    "double_ptr_var7": 1,
                    "pointer3": 1,
                    "pointer_pointer": 2,
                    "pointer_pointer_var": 1,
                    "pointer_pointer_var_1": 1,
                    "pointer_to_pointer_u_var7": 1,
                    "pointer_to_pointer_var": 1,
                    "pptr": 1,
                    "ptr_ptr": 3,
                    "ptr_ptr_arr1": 1,
                    "ptr_ptr_var": 2,
                    "ptr_to_ptr_var_7": 1,
                    "temp_pointer_list": 1,
                    "var_pointer_array": 1
                },
                "puVar1": {
                    "pointer": 1,
                    "pointer1": 4,
                    "pointer_1": 1,
                    "pointer_to_u_var1": 1,
                    "pointer_var": 1,
                    "pointer_var1": 2,
                    "pointer_var_1": 2,
                    "ptr1": 4,
                    "ptr_temp": 1,
                    "ptr_var1": 3,
                    "ptr_var_1": 2,
                    "temp_pointer1": 1,
                    "var1": 1
                },
                "puVar10": {
                    "coefficient_pointer": 1,
                    "input_ptr": 1,
                    "param8": 1,
                    "pointer": 1,
                    "pointer3": 3,
                    "pointer4": 1,
                    "pointer_3": 1,
                    "pointer_arr": 1,
                    "pointer_to_u_var10": 1,
                    "pointer_var3": 2,
                    "pointer_var_3": 2,
                    "ptr": 1,
                    "ptr1": 1,
                    "ptr2": 1,
                    "ptr3": 3,
                    "ptr_temp2": 1,
                    "ptr_var10": 1,
                    "ptr_var3": 2,
                    "ptr_var_10": 1,
                    "ptr_var_3": 1,
                    "temp_pointer": 1,
                    "temp_pointer3": 1,
                    "temp_ptr": 1
                },
                "puVar11": {
                    "ptr_var_4": 1
                },
                "puVar13": {
                    "pointer4": 3,
                    "pointer5": 1,
                    "pointer_4": 1,
                    "pointer_arr_2": 1,
                    "pointer_to_u_var13": 1,
                    "pointer_var4": 2,
                    "pointer_var_4": 2,
                    "ptr2": 1,
                    "ptr3": 1,
                    "ptr4": 3,
                    "ptr_1": 1,
                    "ptr_data2": 1,
                    "ptr_var13": 1,
                    "ptr_var4": 2,
                    "ptr_var_13": 1,
                    "ptr_var_5": 1,
                    "remainder_pointer": 1,
                    "temp_pointer": 1,
                    "temp_pointer2": 1,
                    "temp_pointer4": 1,
                    "temp_ptr": 2,
                    "var_pointer": 1
                },
                "puVar16": {
                    "output_ptr": 1,
                    "pointer2": 1,
                    "pointer5": 2,
                    "pointer_5": 1,
                    "pointer_var5": 1,
                    "ptr3": 1,
                    "ptr5": 1,
                    "ptr_var_16": 1,
                    "temp_pointer": 2
                },
                "puVar18": {
                    "pointer6": 2,
                    "pointer_6": 1,
                    "pointer_to_u_var18": 1,
                    "pointer_var5": 1,
                    "pointer_var_5": 1,
                    "ptr": 1,
                    "ptr4": 1,
                    "ptr5": 1,
                    "ptr_2": 1,
                    "ptr_var_18": 1,
                    "temp_pointer2": 1,
                    "temp_pointer5": 1,
                    "temp_pointer_arr": 1
                },
                "puVar19": {
                    "output_ptr": 1,
                    "pointer_7": 1,
                    "ptr_var_19": 1,
                    "temp_pointer": 1,
                    "temp_pointer6": 1,
                    "temp_pointer_2": 1,
                    "temp_ptr2": 1,
                    "temp_result_pointer": 1
                },
                "puVar20": {
                    "pointer": 1
                },
                "puVar22": {
                    "pointer5": 1,
                    "pointer6": 1,
                    "pointer7": 2,
                    "pointer_to_u_var22": 1,
                    "pointer_var6": 2,
                    "pointer_var_6": 1,
                    "ptr5": 2,
                    "ptr6": 1,
                    "ptr_3": 1,
                    "ptr_var_6": 1,
                    "temp_coefficient_pointer": 1,
                    "temp_pointer": 1,
                    "temp_pointer7": 1,
                    "temp_pointer_3": 1
                },
                "puVar23": {
                    "param_ptr": 1,
                    "pointer6": 1,
                    "pointer7": 1,
                    "pointer8": 2,
                    "pointer_to_u_var23": 1,
                    "pointer_var7": 2,
                    "pointer_var_7": 1,
                    "ptr6": 1,
                    "ptr7": 2,
                    "ptr_4": 1,
                    "ptr_var23": 1,
                    "ptr_var_23": 1,
                    "ptr_var_7": 1,
                    "temp_pointer3": 1,
                    "temp_pointer8": 1,
                    "temp_pointer_arr_2": 1,
                    "temp_ptr3": 1,
                    "temp_result_pointer2": 1
                },
                "puVar28": {
                    "pointer_8": 1
                },
                "puVar5": {
                    "array_ptr": 1,
                    "pointer": 1,
                    "pointer2": 4,
                    "pointer_2": 1,
                    "pointer_array": 1,
                    "pointer_to_u_var5": 1,
                    "pointer_var2": 2,
                    "pointer_var_2": 2,
                    "ptr2": 3,
                    "ptr_arr1": 1,
                    "ptr_data": 1,
                    "ptr_var2": 2,
                    "ptr_var5": 1,
                    "ptr_var_2": 1,
                    "temp_pointer2": 1,
                    "temp_ptr": 1,
                    "var_array": 1
                },
                "uStack_208": {
                    "local_struct2": 1,
                    "local_temp4": 1,
                    "local_variable4": 1,
                    "local_variable_8": 1,
                    "result_stack": 1,
                    "stack_var1": 2,
                    "stack_var5": 1,
                    "stack_var_1": 2,
                    "stack_var_208": 1,
                    "stack_variable_1": 1,
                    "temp7": 1,
                    "temp8": 1,
                    "temp_result5": 1,
                    "temp_stack_var": 1,
                    "temp_stack_var1": 2,
                    "temp_value13": 1,
                    "temp_value3": 1,
                    "temp_var": 2,
                    "temp_var9": 1,
                    "temp_var_11": 1,
                    "temp_variable19": 1,
                    "u_stack_208": 1,
                    "var_u_stack_208": 1
                },
                "uStack_c8": {
                    "input_temp": 1,
                    "local_struct3": 1,
                    "local_temp7": 1,
                    "local_variable6": 1,
                    "local_variable_9": 1,
                    "stack_var2": 2,
                    "stack_var7": 1,
                    "stack_var_2": 2,
                    "stack_var_c8": 1,
                    "stack_variable_2": 1,
                    "temp8": 1,
                    "temp9": 1,
                    "temp_result7": 1,
                    "temp_stack": 1,
                    "temp_stack_var2": 3,
                    "temp_value": 1,
                    "temp_value14": 1,
                    "temp_var": 2,
                    "temp_var10": 1,
                    "temp_var_13": 1,
                    "temp_variable21": 1,
                    "u_stack_c8": 1,
                    "var_u_stack_c8": 1
                },
                "uVar11": {
                    "result_var_3": 1,
                    "temp3": 6,
                    "temp4": 2,
                    "temp_coefficient": 1,
                    "temp_data_11": 1,
                    "temp_value3": 2,
                    "temp_var": 2,
                    "temp_var11": 1,
                    "temp_var3": 3,
                    "temp_var4": 1,
                    "temp_var6": 1,
                    "temp_var_2": 1,
                    "temp_var_3": 1,
                    "temp_var_4": 1,
                    "temp_variable6": 1,
                    "u_var11": 1,
                    "value": 1,
                    "var11": 1,
                    "var_5": 1
                },
                "uVar12": {
                    "remainder": 1,
                    "temp4": 5,
                    "temp5": 2,
                    "temp_data_12": 1,
                    "temp_uint": 1,
                    "temp_value": 1,
                    "temp_value4": 1,
                    "temp_var": 3,
                    "temp_var12": 1,
                    "temp_var4": 3,
                    "temp_var5": 1,
                    "temp_var7": 1,
                    "temp_var_3": 2,
                    "temp_var_4": 2,
                    "temp_var_8": 1,
                    "temp_variable7": 1,
                    "u_var12": 1,
                    "var12": 1,
                    "var_6": 1
                },
                "uVar16": {
                    "temp_value5": 1,
                    "u_var16": 1,
                    "var_b": 1
                },
                "uVar18": {
                    "temp_var18": 1
                },
                "uVar19": {
                    "temp6": 1,
                    "temp_value6": 1,
                    "temp_var19": 1,
                    "u_var19": 1
                },
                "uVar2": {
                    "output": 1,
                    "output_variable": 1,
                    "result": 21,
                    "result1": 1,
                    "result_size": 1,
                    "result_var": 1,
                    "result_var_1": 2,
                    "result_var_2": 1,
                    "return_value": 1
                },
                "uVar20": {
                    "temp4": 1,
                    "temp5": 2,
                    "temp6": 1,
                    "temp7": 1,
                    "temp8": 1,
                    "temp_data_20": 1,
                    "temp_var": 1,
                    "temp_var11": 1,
                    "temp_var20": 1,
                    "temp_var5": 1,
                    "temp_var_4": 1,
                    "temp_var_5": 1,
                    "temp_var_7": 1,
                    "temp_variable11": 1,
                    "var": 1,
                    "var20": 1,
                    "var_10": 1
                },
                "uVar21": {
                    "temp_value7": 1,
                    "u_var21": 1
                },
                "uVar22": {
                    "temp_var22": 1
                },
                "uVar25": {
                    "temp10": 1,
                    "temp5": 2,
                    "temp6": 2,
                    "temp8": 1,
                    "temp_data": 1,
                    "temp_value2": 1,
                    "temp_value4": 1,
                    "temp_value8": 1,
                    "temp_var": 2,
                    "temp_var13": 1,
                    "temp_var2": 2,
                    "temp_var25": 1,
                    "temp_var5": 1,
                    "temp_var6": 2,
                    "temp_var_4": 1,
                    "temp_var_5": 2,
                    "temp_var_6": 2,
                    "temp_variable13": 1,
                    "u_var25": 1,
                    "var25": 1,
                    "var_12": 1
                },
                "uVar26": {
                    "result": 1,
                    "result1": 1,
                    "temp11": 1,
                    "temp6": 2,
                    "temp_result2": 3,
                    "temp_value5": 1,
                    "temp_value9": 1,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "temp_var14": 1,
                    "temp_var26": 1,
                    "temp_var6": 1,
                    "temp_var7": 2,
                    "temp_var_5": 1,
                    "temp_var_6": 2,
                    "temp_var_7": 1,
                    "temp_variable14": 1,
                    "u_var26": 1,
                    "updated_data": 1,
                    "var26": 1,
                    "var_13": 1
                },
                "uVar27": {
                    "result2": 1,
                    "temp12": 1,
                    "temp7": 3,
                    "temp_result3": 2,
                    "temp_value10": 1,
                    "temp_value6": 1,
                    "temp_var": 2,
                    "temp_var15": 1,
                    "temp_var2": 1,
                    "temp_var27": 1,
                    "temp_var7": 1,
                    "temp_var8": 2,
                    "temp_var_6": 1,
                    "temp_var_7": 2,
                    "temp_var_8": 1,
                    "temp_var_9": 1,
                    "temp_variable15": 1,
                    "u_var27": 1,
                    "var27": 1,
                    "var_14": 1
                },
                "uVar3": {
                    "result2": 1,
                    "result_var_2": 2,
                    "temp": 3,
                    "temp1": 1,
                    "temp_output": 1,
                    "temp_result": 9,
                    "temp_value": 1,
                    "temp_var": 4,
                    "temp_var1": 1,
                    "temp_var_1": 1,
                    "temp_variable1": 1,
                    "u_var3": 1,
                    "var3": 1
                },
                "uVar6": {
                    "result_hi": 1,
                    "temp": 1,
                    "temp1": 5,
                    "temp2": 2,
                    "temp_data_6": 1,
                    "temp_result": 1,
                    "temp_value": 1,
                    "temp_value1": 1,
                    "temp_var": 2,
                    "temp_var1": 3,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temp_var6": 1,
                    "temp_var_1": 3,
                    "temp_var_2": 2,
                    "temp_variable3": 1,
                    "u_var6": 1,
                    "var6": 1,
                    "var_2": 1
                },
                "uVar8": {
                    "result_lo": 1,
                    "temp": 1,
                    "temp2": 6,
                    "temp3": 2,
                    "temp_data_8": 1,
                    "temp_value2": 2,
                    "temp_var": 1,
                    "temp_var2": 3,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "temp_var8": 1,
                    "temp_var_2": 2,
                    "temp_var_3": 2,
                    "temp_variable4": 1,
                    "u_var8": 1,
                    "var8": 1,
                    "var_3": 1
                }
            },
            "called": [
                "FUN_0800b2e8",
                "FUN_08008ba0",
                "FUN_08008b10",
                "FUN_08008b4c",
                "FUN_080082d4",
                "FUN_08008640",
                "FUN_080082d0",
                "FUN_0800856c",
                "FUN_080094c0"
            ],
            "calling": [
                "FUN_08009d78"
            ],
            "code": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nuint calculate_result_0800a5a0(int input_param,undefined8 *array_param,int array_length,int input_param_4,int input_param_5,int input_param_6)\n\n{\n  undefined4 *pointer1;\n  uint result;\n  uint temp_result;\n  int index;\n  uint *pointer2;\n  undefined4 temp1;\n  uint **ptr_ptr;\n  undefined4 temp2;\n  int counter;\n  undefined4 *ptr3;\n  undefined4 temp3;\n  uint temp4;\n  uint *pointer4;\n  int loop_index2;\n  int var15;\n  undefined8 *pointer5;\n  int var17;\n  undefined4 *pointer6;\n  undefined8 *temp_ptr2;\n  undefined4 temp5;\n  int var21;\n  undefined8 *pointer7;\n  undefined4 *ptr7;\n  bool bool_var;\n  undefined8 temp_var2;\n  undefined8 temp_result2;\n  undefined8 temp7;\n  undefined8 *local_array1;\n  int local_var1;\n  int local_var3;\n  int local_var3;\n  uint *local_array2 [2];\n  uint result_array [20];\n  undefined8 temp_var;\n  undefined8 local_var4;\n  int local_array4 [38];\n  undefined8 temp_stack_var2;\n  \n  var15 = *(int *)(&DAT_0800c060 + input_param_5 * 4);\n  counter = input_param_4 + -1;\n  local_array2[1] = (uint *)array_param;\n  if (array_length + 0x14 < 0 == SCARRY4(array_length,0x14)) {\n    local_var3 = (array_length + -3) / 0x18;\n    local_var3 = (local_var3 + 1) * -0x18;\n  }\n  else {\n    local_var3 = -0x18;\n    local_var3 = 0;\n  }\n  local_var3 = array_length + local_var3;\n  var17 = local_var3 - counter;\n  if (-1 < var15 + counter) {\n    var21 = var15 + counter + 1 + var17;\n    pointer5 = &temp_var;\n    do {\n      while (var17 < 0) {\n        var17 = var17 + 1;\n        *(undefined4 *)pointer5 = 0;\n        *(undefined4 *)((int)pointer5 + 4) = 0;\n        pointer5 = pointer5 + 1;\n        if (var17 == var21) goto LAB_0800a626;\n      }\n      temp_result2 = FUN_0800856c(*(undefined4 *)(input_param_6 + var17 * 4));\n      var17 = var17 + 1;\n      *pointer5 = temp_result2;\n      pointer5 = pointer5 + 1;\n    } while (var17 != var21);\n  }\nLAB_0800a626:\n  ptr3 = (undefined4 *)(input_param + -8);\n  if (-1 < var15) {\n    pointer7 = &temp_var + input_param_4;\n    var17 = counter;\n    pointer5 = &temp_stack_var2;\n    do {\n      if (counter < 0) {\n        temp_result2 = 0;\n      }\n      else {\n        temp_result2 = 0;\n        ptr7 = ptr3;\n        temp_ptr2 = pointer7;\n        do {\n          pointer6 = ptr7 + 2;\n          temp_var2 = FUN_08008640(*pointer6,ptr7[3],*(undefined4 *)(temp_ptr2 + -1),\n                                *(undefined4 *)((int)temp_ptr2 + -4));\n          temp_result2 = FUN_080082d4((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),(int)temp_var2,\n                                (int)((ulonglong)temp_var2 >> 0x20));\n          ptr7 = pointer6;\n          temp_ptr2 = temp_ptr2 + -1;\n        } while (pointer6 != ptr3 + input_param_4 * 2);\n      }\n      var17 = var17 + 1;\n      *pointer5 = temp_result2;\n      pointer7 = pointer7 + 1;\n      pointer5 = pointer5 + 1;\n    } while (var17 != var15 + input_param_4);\n  }\n  local_array2[0] = result_array + var15 + -1;\n  var17 = var15;\n  do {\n    temp_result2 = CONCAT44(*(undefined4 *)((int)&temp_stack_var2 + var17 * 8 + 4),\n                      *(undefined4 *)(&temp_stack_var2 + var17));\n    if (0 < var17) {\n      pointer5 = &temp_stack_var2 + var17;\n      pointer2 = result_array;\n      do {\n        temp1 = (undefined4)((ulonglong)temp_result2 >> 0x20);\n        FUN_08008640((int)temp_result2,temp1,0,0x3e700000);\n        FUN_08008ba0();\n        temp_var2 = FUN_0800856c();\n        temp2 = (undefined4)((ulonglong)temp_var2 >> 0x20);\n        temp7 = FUN_08008640((int)temp_var2,temp2,0,0x41700000);\n        FUN_080082d0((int)temp_result2,temp1,(int)temp7,(int)((ulonglong)temp7 >> 0x20));\n        result = FUN_08008ba0();\n        pointer7 = pointer5 + -1;\n        temp1 = *(undefined4 *)pointer7;\n        temp3 = *(undefined4 *)((int)pointer5 + -4);\n        *pointer2 = result;\n        temp_result2 = FUN_080082d4((int)temp_var2,temp2,temp1,temp3);\n        pointer5 = pointer7;\n        pointer2 = pointer2 + 1;\n      } while (pointer7 != &temp_stack_var2);\n    }\n    temp_result2 = FUN_0800b2e8((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),local_var3);\n    temp2 = (undefined4)((ulonglong)temp_result2 >> 0x20);\n    FUN_08008640((int)temp_result2,temp2,0,0x3fc00000);\n    temp_var2 = FUN_080094c0();\n    temp_var2 = FUN_08008640((int)temp_var2,(int)((ulonglong)temp_var2 >> 0x20),0,0x40200000);\n    temp_result2 = FUN_080082d0((int)temp_result2,temp2,(int)temp_var2,(int)((ulonglong)temp_var2 >> 0x20));\n    result = FUN_08008ba0();\n    temp_var2 = FUN_0800856c();\n    temp_result2 = FUN_080082d0((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),(int)temp_var2,\n                          (int)((ulonglong)temp_var2 >> 0x20));\n    temp1 = (undefined4)((ulonglong)temp_result2 >> 0x20);\n    temp2 = (undefined4)temp_result2;\n    if (local_var3 < 1) {\n      if (local_var3 == 0) {\n        var21 = (int)result_array[var17 + -1] >> 0x17;\n        goto joined_r0x0800a8b8;\n      }\n      var21 = FUN_08008b4c(temp2,temp1,0,0x3fe00000);\n      if (var21 != 0) {\n        result = result + 1;\n        if (var17 < 1) {\n          temp_result2 = FUN_080082d0(0,0x3ff00000,temp2,temp1);\n          var21 = 2;\n          goto LAB_0800a7a4;\n        }\n        var21 = 2;\n        goto LAB_0800a8c8;\n      }\n    }\n    else {\n      index = (int)result_array[var17 + -1] >> (0x18U - local_var3 & 0xff);\n      temp4 = result_array[var17 + -1] - (index << (0x18U - local_var3 & 0xff));\n      var21 = (int)temp4 >> (0x17U - local_var3 & 0xff);\n      result_array[var17 + -1] = temp4;\n      result = result + index;\njoined_r0x0800a8b8:\n      if (0 < var21) {\n        result = result + 1;\n        if (var17 < 1) {\n          bool_var = false;\n        }\n        else {\nLAB_0800a8c8:\n          if (result_array[0] == 0) {\n            bool_var = false;\n            if (var17 != 1) {\n              pointer2 = result_array;\n              index = 1;\n              do {\n                pointer2 = pointer2 + 1;\n                if (*pointer2 != 0) {\n                  loop_index2 = index + 1;\n                  temp4 = *pointer2;\n                  goto LAB_0800a8e2;\n                }\n                index = index + 1;\n              } while (index != var17);\n              bool_var = false;\n            }\n          }\n          else {\n            loop_index2 = 1;\n            index = 0;\n            temp4 = result_array[0];\nLAB_0800a8e2:\n            result_array[index] = 0x1000000 - temp4;\n            if (loop_index2 < var17) {\n              temp4 = result_array[loop_index2];\n              pointer2 = result_array + loop_index2;\n              while( true ) {\n                pointer4 = pointer2 + 1;\n                *pointer2 = 0xffffff - temp4;\n                if (pointer4 == result_array + var17) break;\n                temp4 = *pointer4;\n                pointer2 = pointer4;\n              }\n            }\n            bool_var = true;\n          }\n        }\n        if (0 < local_var3) {\n          if (local_var3 == 1) {\n            result_array[var17 + -1] = result_array[var17 + -1] & 0x7fffff;\n          }\n          else if (local_var3 == 2) {\n            result_array[var17 + -1] = result_array[var17 + -1] & 0x3fffff;\n          }\n        }\n        if (var21 == 2) {\n          temp_result2 = FUN_080082d0(0,0x3ff00000,temp2,temp1);\n          if (bool_var) {\n            temp_var2 = FUN_0800b2e8(0,0x3ff00000,local_var3);\n            temp_result2 = FUN_080082d0((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),(int)temp_var2,\n                                  (int)((ulonglong)temp_var2 >> 0x20));\n          }\n        }\n      }\n    }\nLAB_0800a7a4:\n    temp2 = (undefined4)((ulonglong)temp_result2 >> 0x20);\n    index = FUN_08008b10((int)temp_result2,temp2,0,0);\n    if (index == 0) {\n      temp_result2 = FUN_0800b2e8((int)temp_result2,temp2,-local_var3);\n      temp1 = (undefined4)((ulonglong)temp_result2 >> 0x20);\n      temp2 = (undefined4)temp_result2;\n      counter = FUN_08008b4c(temp2,temp1,0,0x41700000);\n      if (counter == 0) {\n        temp4 = FUN_08008ba0(temp2,temp1);\n        result_array[var17] = temp4;\n        index = var17;\n      }\n      else {\n        FUN_08008640(temp2,temp1,0,0x3e700000);\n        temp4 = FUN_08008ba0();\n        temp_result2 = FUN_0800856c();\n        temp_result2 = FUN_08008640((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),0,0x41700000);\n        FUN_080082d0(temp2,temp1,(int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20));\n        temp_result = FUN_08008ba0();\n        local_var3 = local_var3 + 0x18;\n        result_array[var17] = temp_result;\n        result_array[var17 + 1] = temp4;\n        index = var17 + 1;\n      }\n      goto LAB_0800a9f6;\n    }\n    index = var17 + -1;\n    if (var15 <= index) {\n      temp4 = 0;\n      pointer2 = result_array + var17 + 0x3fffffff;\n      do {\n        pointer4 = pointer2 + -1;\n        temp4 = temp4 | *pointer2;\n        pointer2 = pointer4;\n      } while (pointer4 != local_array2[0]);\n      if (temp4 != 0) break;\n    }\n    if (result_array[var15 + -1] == 0) {\n      local_var1 = 1;\n      ptr_ptr = local_array2 + var15;\n      do {\n        pointer2 = *ptr_ptr;\n        local_var1 = local_var1 + 1;\n        ptr_ptr = ptr_ptr + -1;\n      } while (pointer2 == (uint *)0x0);\n      local_var1 = var17 + local_var1;\n    }\n    else {\n      local_var1 = var17 + 1;\n    }\n    var21 = var17 + 1;\n    ptr7 = (undefined4 *)(input_param_6 + (var21 + local_var3 + 0x3fffffff) * 4);\n    pointer5 = &temp_var + var17 + input_param_4;\n    local_array1 = &temp_stack_var2 + var21;\n    do {\n      ptr7 = ptr7 + 1;\n      temp_result2 = FUN_0800856c(*ptr7);\n      *pointer5 = temp_result2;\n      pointer7 = pointer5 + 1;\n      if (counter < 0) {\n        temp_var2 = 0;\n      }\n      else {\n        temp_var2 = 0;\n        pointer6 = ptr3;\n        while( true ) {\n          pointer5 = pointer5 + -1;\n          pointer1 = pointer6 + 2;\n          temp_result2 = FUN_08008640((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),*pointer1,pointer6[3]);\n          temp_var2 = FUN_080082d4((int)temp_var2,(int)((ulonglong)temp_var2 >> 0x20),(int)temp_result2,\n                                (int)((ulonglong)temp_result2 >> 0x20));\n          if (pointer1 == ptr3 + input_param_4 * 2) break;\n          temp_result2 = *pointer5;\n          pointer6 = pointer1;\n        }\n      }\n      *local_array1 = temp_var2;\n      var21 = var21 + 1;\n      var17 = local_var1;\n      pointer5 = pointer7;\n      local_array1 = local_array1 + 1;\n    } while (var21 <= local_var1);\n  } while( true );\n  local_var3 = local_var3 + -0x18;\n  if (result_array[index] == 0) {\n    pointer2 = result_array + var17 + 0x3ffffffe;\n    do {\n      temp4 = *pointer2;\n      index = index + -1;\n      local_var3 = local_var3 + -0x18;\n      pointer2 = pointer2 + -1;\n    } while (temp4 == 0);\n  }\nLAB_0800a9f6:\n  temp_result2 = FUN_0800b2e8(0,0x3ff00000,local_var3);\n  if (index < 0) {\n    if (2 < input_param_5) {\n      if (input_param_5 == 3) {\n        temp_result2 = 0;\nLAB_0800abe4:\n        if (var21 == 0) {\n          *local_array2[1] = (undefined4)local_var4;\n          *(int *)((int)local_array2[1] + 4) = local_var4._4_4_;\n          *(undefined8 *)((int)local_array2[1] + 0x10) = temp_result2;\n          *(int *)((int)local_array2[1] + 8) = local_array4[0];\n          *(int *)((int)local_array2[1] + 0xc) = local_array4[1];\n          return result & 7;\n        }\n        *(int *)((int)local_array2[1] + 0x10) = (int)temp_result2;\n        *(int *)((int)local_array2[1] + 8) = local_array4[0];\n        *(int *)((int)local_array2[1] + 0x14) = (int)((ulonglong)temp_result2 >> 0x20) + -0x80000000;\n        *(int *)((int)local_array2[1] + 4) = local_var4._4_4_ + -0x80000000;\n        *(int *)((int)local_array2[1] + 0xc) = local_array4[1] + -0x80000000;\n        *local_array2[1] = (undefined4)local_var4;\n        return result & 7;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (input_param_5 < 1) {\n      if (input_param_5 != 0) goto LAB_0800ab0e;\n      temp_result2 = 0;\nLAB_0800aafc:\n      counter = (int)((ulonglong)temp_result2 >> 0x20);\n      if (var21 != 0) {\n        counter = counter + -0x80000000;\n      }\n      *local_array2[1] = (int)temp_result2;\n      *(int *)((int)local_array2[1] + 4) = counter;\nLAB_0800ab0e:\n      return result & 7;\n    }\n    temp_result2 = 0;\n  }\n  else {\n    pointer7 = &temp_stack_var2 + index;\n    pointer2 = result_array + index + 1;\n    pointer5 = &temp_stack_var2 + index + 1;\n    do {\n      temp2 = (undefined4)((ulonglong)temp_result2 >> 0x20);\n      pointer2 = pointer2 + -1;\n      temp_var2 = FUN_0800856c(*pointer2);\n      temp_var2 = FUN_08008640((int)temp_var2,(int)((ulonglong)temp_var2 >> 0x20),(int)temp_result2,temp2);\n      pointer5 = pointer5 + -1;\n      *pointer5 = temp_var2;\n      temp_result2 = FUN_08008640((int)temp_result2,temp2,0,0x3e700000);\n    } while (pointer2 != result_array);\n    counter = 0;\n    do {\n      if (var15 < 0) {\n        temp_result2 = 0;\n      }\n      else {\n        temp2 = 0x40000000;\n        temp1 = 0x3ff921fb;\n        temp_result2 = 0;\n        var17 = 0;\n        pointer5 = pointer7;\n        ptr3 = &DAT_0800c028;\n        while( true ) {\n          temp_var2 = FUN_08008640(*(undefined4 *)pointer5,*(undefined4 *)((int)pointer5 + 4),temp2,temp1\n                               );\n          temp_result2 = FUN_080082d4((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),(int)temp_var2,\n                                (int)((ulonglong)temp_var2 >> 0x20));\n          var17 = var17 + 1;\n          if ((var15 < var17) || (counter < var17)) break;\n          temp2 = *ptr3;\n          temp1 = ptr3[1];\n          pointer5 = pointer5 + 1;\n          ptr3 = ptr3 + 2;\n        }\n      }\n      bool_var = counter != index;\n      *(int *)(&local_var4 + counter) = (int)temp_result2;\n      *(int *)((int)&local_var4 + (counter * 2 + 1) * 4) = (int)((ulonglong)temp_result2 >> 0x20);\n      pointer7 = pointer7 + -1;\n      counter = counter + 1;\n    } while (bool_var);\n    if (2 < input_param_5) {\n      if (input_param_5 == 3) {\n        if (index != 0) {\n          pointer5 = &local_var4 + index;\n          temp_result2 = CONCAT44(*(undefined4 *)((int)&local_var4 + (index * 2 + 1) * 4),\n                            *(undefined4 *)pointer5);\n          do {\n            temp1 = (undefined4)((ulonglong)temp_result2 >> 0x20);\n            temp2 = (undefined4)temp_result2;\n            temp3 = *(undefined4 *)(pointer5 + -1);\n            temp5 = *(undefined4 *)((int)pointer5 + -4);\n            temp_result2 = FUN_080082d4(temp2,temp1,temp3,temp5);\n            temp_var2 = FUN_080082d0(temp3,temp5,(int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20));\n            temp_var2 = FUN_080082d4((int)temp_var2,(int)((ulonglong)temp_var2 >> 0x20),temp2,temp1);\n            *pointer5 = temp_var2;\n            pointer5 = pointer5 + -1;\n            *pointer5 = temp_result2;\n          } while (&local_var4 != pointer5);\n          if (1 < index) {\n            pointer5 = &local_var4 + index;\n            temp_result2 = CONCAT44(*(undefined4 *)((int)&local_var4 + (index * 2 + 1) * 4),\n                              *(undefined4 *)pointer5);\n            do {\n              temp1 = (undefined4)((ulonglong)temp_result2 >> 0x20);\n              temp2 = (undefined4)temp_result2;\n              temp3 = *(undefined4 *)(pointer5 + -1);\n              temp5 = *(undefined4 *)((int)pointer5 + -4);\n              temp_result2 = FUN_080082d4(temp2,temp1,temp3,temp5);\n              temp_var2 = FUN_080082d0(temp3,temp5,(int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20));\n              temp_var2 = FUN_080082d4((int)temp_var2,(int)((ulonglong)temp_var2 >> 0x20),temp2,temp1);\n              *pointer5 = temp_var2;\n              pointer5 = pointer5 + -1;\n              *pointer5 = temp_result2;\n            } while (&local_var4 + 1 != pointer5);\n            temp_result2 = 0;\n            pointer5 = &local_var4 + index + 1;\n            do {\n              pointer7 = pointer5 + -1;\n              temp_result2 = FUN_080082d4((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),\n                                    *(undefined4 *)pointer7,*(undefined4 *)((int)pointer5 + -4));\n              pointer5 = pointer7;\n            } while (&local_var4 + 2 != pointer7);\n            goto LAB_0800abe4;\n          }\n        }\n        temp_result2 = 0;\n        goto LAB_0800abe4;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (input_param_5 < 1) {\n      if (input_param_5 != 0) goto LAB_0800ab0e;\n      temp_result2 = 0;\n      pointer5 = &local_var4 + index + 1;\n      do {\n        pointer7 = pointer5 + -1;\n        temp_result2 = FUN_080082d4((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),*(undefined4 *)pointer7,\n                              *(undefined4 *)((int)pointer5 + -4));\n        pointer5 = pointer7;\n      } while (&local_var4 != pointer7);\n      goto LAB_0800aafc;\n    }\n    temp_result2 = 0;\n    pointer5 = &local_var4 + index + 1;\n    do {\n      pointer7 = pointer5 + -1;\n      temp_result2 = FUN_080082d4((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),*(undefined4 *)pointer7,\n                            *(undefined4 *)((int)pointer5 + -4));\n      pointer5 = pointer7;\n    } while (&local_var4 != pointer7);\n  }\n  counter = (int)((ulonglong)temp_result2 >> 0x20);\n  temp2 = (undefined4)temp_result2;\n  if (var21 == 0) {\n    *(undefined8 *)local_array2[1] = temp_result2;\n    temp_result2 = FUN_080082d0((undefined4)local_var4,local_var4._4_4_,temp2,counter);\n    if (index < 1) goto LAB_0800ad26;\nLAB_0800ad04:\n    counter = 1;\n    pointer5 = &local_var4;\n    do {\n      temp_result2 = FUN_080082d4((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),\n                            *(undefined4 *)(pointer5 + 1),*(undefined4 *)((int)pointer5 + 0xc));\n      counter = counter + 1;\n      pointer5 = pointer5 + 1;\n    } while (counter <= index);\n    if (var21 == 0) goto LAB_0800ad26;\n  }\n  else {\n    *local_array2[1] = temp2;\n    *(int *)((int)local_array2[1] + 4) = counter + -0x80000000;\n    temp_result2 = FUN_080082d0((undefined4)local_var4,local_var4._4_4_,temp2,counter);\n    if (0 < index) goto LAB_0800ad04;\n  }\n  temp_result2 = CONCAT44((int)((ulonglong)temp_result2 >> 0x20) + -0x80000000,(int)temp_result2);\nLAB_0800ad26:\n  *(undefined8 *)((int)local_array2[1] + 8) = temp_result2;\n  return result & 7;\n}\n\n",
            "current_name": "calculate_result_0800a5a0",
            "entrypoint": "0x0800a5a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a5a0": "calculate_result_0800a5a0",
                "bVar24": "bool_var",
                "iVar14": "loop_index2",
                "iVar15": "var15",
                "iVar17": "var17",
                "iVar21": "var21",
                "iVar4": "index",
                "iVar9": "counter",
                "local_160": "local_array4",
                "local_168": "local_var4",
                "local_258": "result_array",
                "local_260": "local_array2",
                "local_26c": "local_var3",
                "local_270": "local_var3",
                "local_280": "local_var1",
                "local_284": "local_array1",
                "param_1": "input_param",
                "param_2": "array_param",
                "param_3": "array_length",
                "param_4": "input_param_4",
                "param_5": "input_param_5",
                "param_6": "input_param_6",
                "ppuVar7": "ptr_ptr",
                "puVar1": "pointer1",
                "puVar10": "ptr3",
                "puVar13": "pointer4",
                "puVar16": "pointer5",
                "puVar18": "pointer6",
                "puVar19": "temp_ptr2",
                "puVar22": "pointer7",
                "puVar23": "ptr7",
                "puVar5": "pointer2",
                "uStack_208": "temp_var",
                "uStack_c8": "temp_stack_var2",
                "uVar11": "temp3",
                "uVar12": "temp4",
                "uVar16": "var_b",
                "uVar18": "temp_var18",
                "uVar19": "temp_value6",
                "uVar2": "result",
                "uVar20": "temp5",
                "uVar22": "temp_var22",
                "uVar25": "temp_var2",
                "uVar26": "temp_result2",
                "uVar27": "temp7",
                "uVar3": "temp_result",
                "uVar6": "temp1",
                "uVar8": "temp2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800adf0": {
            "additional_data": {
                "FUN_080082d0": {
                    "calculate_second_part": 1,
                    "perform_subfunction_d": 1,
                    "sub_function3": 1
                },
                "FUN_080082d4": {
                    "calculate_third_part": 1,
                    "perform_subfunction_b": 1,
                    "sub_function4": 1
                },
                "FUN_08008640": {
                    "calculate_first_part": 1,
                    "perform_subfunction_c": 1,
                    "sub_function2": 1
                },
                "FUN_08008ba0": {
                    "check_flag": 1,
                    "perform_subfunction_a": 1,
                    "sub_function1": 1
                },
                "FUN_0800adf0": {
                    "calculate_hash": 1,
                    "calculate_result": 11,
                    "calculate_value": 1,
                    "compute_result": 1,
                    "process_data": 5
                },
                "iVar1": {
                    "check_result": 1,
                    "check_value": 1,
                    "result": 26,
                    "status": 1,
                    "temp_result": 1
                },
                "param_1": {
                    "input": 11,
                    "input1": 3,
                    "input_1": 2,
                    "input_data": 1,
                    "input_param": 2,
                    "input_param_1": 1,
                    "input_val": 1,
                    "input_value": 6,
                    "original_state": 1,
                    "result": 2,
                    "value": 1
                },
                "param_2": {
                    "bitmask": 1,
                    "flag": 1,
                    "flags": 1,
                    "input2": 3,
                    "input_2": 2,
                    "input_flag": 1,
                    "input_param": 1,
                    "input_param_2": 1,
                    "input_size": 2,
                    "input_value": 2,
                    "length": 2,
                    "limit": 1,
                    "operand": 1,
                    "size": 8,
                    "value": 3,
                    "value1": 1
                },
                "param_3": {
                    "input1": 1,
                    "input3": 3,
                    "input_3": 1,
                    "input_param_3": 1,
                    "param1": 6,
                    "param3": 8,
                    "param_3": 2,
                    "param_a": 3,
                    "parameter3": 1,
                    "temp1": 1,
                    "temp_1": 1,
                    "temp_value_1": 1,
                    "value2": 1,
                    "var1": 1
                },
                "param_4": {
                    "input2": 1,
                    "input4": 3,
                    "input_4": 1,
                    "input_param_4": 1,
                    "param2": 6,
                    "param4": 8,
                    "param_4": 2,
                    "param_b": 3,
                    "parameter4": 1,
                    "temp2": 1,
                    "temp_2": 1,
                    "temp_value_2": 1,
                    "value3": 1,
                    "var2": 1
                },
                "param_5": {
                    "condition": 3,
                    "condition_flag": 1,
                    "flag": 17,
                    "input_param_5": 1,
                    "is_negative": 1,
                    "is_reversed": 5,
                    "option": 1,
                    "reverse_flag": 1,
                    "reverse_order": 1
                },
                "uVar2": {
                    "first_part_high_32": 1,
                    "first_result_part": 1,
                    "output1": 3,
                    "output_high": 1,
                    "output_param1": 1,
                    "part1": 1,
                    "part1_result_low": 1,
                    "partial_result_1": 1,
                    "result1": 2,
                    "result_1": 1,
                    "result_a": 1,
                    "result_a1": 1,
                    "result_low": 2,
                    "result_lower_bits": 1,
                    "temp1": 5,
                    "temp_3": 1,
                    "value1": 1,
                    "value_1": 1,
                    "var1": 4,
                    "var_a": 1
                },
                "uVar3": {
                    "first_part_low_32": 1,
                    "output2": 3,
                    "output_low": 1,
                    "output_param2": 1,
                    "part1_lower": 1,
                    "part1_result_high": 1,
                    "partial_result_2": 1,
                    "result2": 2,
                    "result_2": 1,
                    "result_b": 1,
                    "result_b1": 1,
                    "result_high": 2,
                    "result_upper_bits": 1,
                    "second_result_part": 1,
                    "temp2": 5,
                    "temp_4": 1,
                    "value2": 1,
                    "value_2": 1,
                    "var2": 4,
                    "var_b": 1
                },
                "uVar4": {
                    "output3": 3,
                    "output_param3": 1,
                    "part1_upper": 1,
                    "part2_result_low": 1,
                    "partial_result_3": 1,
                    "result3": 2,
                    "result_3": 1,
                    "result_a2": 1,
                    "result_c": 1,
                    "second_part_high_32": 1,
                    "temp1": 1,
                    "temp3": 5,
                    "temp_5": 1,
                    "temp_high": 1,
                    "temp_low": 1,
                    "temp_lower_bits": 1,
                    "third_result_part": 1,
                    "u_var4": 1,
                    "value_3": 1,
                    "var3": 4,
                    "var_c": 1
                },
                "uVar5": {
                    "fourth_result_part": 1,
                    "output4": 3,
                    "output_param4": 1,
                    "part2_lower": 1,
                    "part2_result_high": 1,
                    "partial_result_4": 1,
                    "result4": 2,
                    "result_4": 1,
                    "result_b2": 1,
                    "result_d": 1,
                    "second_part_low_32": 1,
                    "temp2": 1,
                    "temp4": 5,
                    "temp_6": 1,
                    "temp_high": 1,
                    "temp_low": 1,
                    "temp_upper_bits": 1,
                    "u_var5": 1,
                    "value_4": 1,
                    "var4": 4,
                    "var_d": 1
                },
                "uVar6": {
                    "fifth_result_part": 1,
                    "output5": 3,
                    "output_param5": 1,
                    "part2_upper": 1,
                    "partial_result_5": 1,
                    "result5": 2,
                    "result_a3": 1,
                    "result_e": 1,
                    "temp": 1,
                    "temp3": 1,
                    "temp5": 5,
                    "temp_7": 1,
                    "temp_high2": 1,
                    "temp_low_2": 1,
                    "temp_result_low": 1,
                    "temp_result_lower_bits": 1,
                    "third_part_high_32": 1,
                    "u_var6": 1,
                    "value_5": 1,
                    "var5": 4,
                    "var_e": 1
                },
                "uVar7": {
                    "calc_result": 1,
                    "calculation": 2,
                    "final_result_high": 1,
                    "result_high_32": 1,
                    "result_part1": 1,
                    "temp": 3,
                    "temp1": 7,
                    "temp4": 1,
                    "temp6": 5,
                    "temp_1": 1,
                    "temp_8": 1,
                    "temp_low2": 1,
                    "temp_result": 1,
                    "temp_result_upper_bits": 1,
                    "temp_value": 1,
                    "temp_value_1": 1,
                    "temp_var1": 1,
                    "var6": 1
                },
                "uVar8": {
                    "calc_result_high": 1,
                    "calculation_a": 1,
                    "final_result_low": 1,
                    "result_part2": 1,
                    "temp2": 10,
                    "temp5": 1,
                    "temp7": 5,
                    "temp_2": 1,
                    "temp_9": 1,
                    "temp_low3": 1,
                    "temp_result": 2,
                    "temp_result2": 1,
                    "temp_result2_lower_bits": 1,
                    "temp_value2": 1,
                    "temp_value_2": 1,
                    "temp_var2": 1,
                    "var7": 1
                }
            },
            "called": [
                "FUN_08008ba0",
                "FUN_080082d4",
                "FUN_08008640",
                "FUN_080082d0"
            ],
            "calling": [
                "FUN_08009410",
                "FUN_080096e8"
            ],
            "code": "\nundefined4\ncalculate_result_0800adf0(undefined4 input,uint size,undefined4 param3,undefined4 param4,int flag)\n\n{\n  int result;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined8 temp1;\n  undefined8 temp2;\n  \n  if (((size & 0x7fffffff) < 0x3e400000) && (result = FUN_08008ba0(), result == 0)) {\n    return input;\n  }\n  temp1 = FUN_08008640(input,size,input);\n  temp3 = (undefined4)((ulonglong)temp1 >> 0x20);\n  temp2 = (undefined4)temp1;\n  temp1 = FUN_08008640(input,size,temp2,temp3);\n  temp4 = (undefined4)((ulonglong)temp1 >> 0x20);\n  temp1 = (undefined4)temp1;\n  temp1 = FUN_08008640(temp2,temp3,0x5acfd57c,0x3de5d93a);\n  temp1 = FUN_080082d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x8a2b9ceb,0x3e5ae5e6);\n  temp1 = FUN_08008640((int)temp1,(int)((ulonglong)temp1 >> 0x20),temp2,temp3);\n  temp1 = FUN_080082d4((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x57b1fe7d,0x3ec71de3);\n  temp1 = FUN_08008640((int)temp1,(int)((ulonglong)temp1 >> 0x20),temp2,temp3);\n  temp1 = FUN_080082d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x19c161d5,0x3f2a01a0);\n  temp1 = FUN_08008640((int)temp1,(int)((ulonglong)temp1 >> 0x20),temp2,temp3);\n  temp1 = FUN_080082d4((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x1110f8a6,0x3f811111);\n  temp5 = (undefined4)((ulonglong)temp1 >> 0x20);\n  if (flag != 0) {\n    temp2 = FUN_08008640(param3,param4,0,0x3fe00000);\n    temp1 = FUN_08008640(temp1,temp4,(int)temp1,temp5);\n    temp1 = FUN_080082d0((int)temp2,(int)((ulonglong)temp2 >> 0x20),(int)temp1,\n                         (int)((ulonglong)temp1 >> 0x20));\n    temp1 = FUN_08008640((int)temp1,(int)((ulonglong)temp1 >> 0x20),temp2,temp3);\n    temp1 = FUN_080082d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),param3,param4);\n    temp2 = FUN_08008640(temp1,temp4,0x55555549,0x3fc55555);\n    temp1 = FUN_080082d4((int)temp1,(int)((ulonglong)temp1 >> 0x20),(int)temp2,\n                         (int)((ulonglong)temp2 >> 0x20));\n    temp2 = FUN_080082d0(input,size,(int)temp1,(int)((ulonglong)temp1 >> 0x20));\n    return temp2;\n  }\n  temp1 = FUN_08008640(temp2,temp3,(int)temp1,temp5);\n  temp1 = FUN_080082d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x55555549,0x3fc55555);\n  temp1 = FUN_08008640((int)temp1,(int)((ulonglong)temp1 >> 0x20),temp1,temp4);\n  temp2 = FUN_080082d4((int)temp1,(int)((ulonglong)temp1 >> 0x20),input,size);\n  return temp2;\n}\n\n",
            "current_name": "calculate_result_0800adf0",
            "entrypoint": "0x0800adf0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800adf0": "calculate_result_0800adf0",
                "iVar1": "result",
                "param_1": "input",
                "param_2": "size",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "flag",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "uVar4": "temp3",
                "uVar5": "temp4",
                "uVar6": "temp5",
                "uVar7": "temp1",
                "uVar8": "temp2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800af78": {
            "additional_data": {
                "FUNC_0800b2cc": {
                    "get_function_pointer": 1
                },
                "FUN_080082d0": {
                    "calculate_result2": 1
                },
                "FUN_080082d4": {
                    "calculate_result1": 1
                },
                "FUN_08008640": {
                    "calculate_result4": 1
                },
                "FUN_08008894": {
                    "calculate_result3": 1
                },
                "FUN_08008b60": {
                    "check_result": 1
                },
                "FUN_0800af78": {
                    "calculate_result": 12,
                    "calculate_value": 2,
                    "perform_calculation": 1
                },
                "iVar5": {
                    "output": 4,
                    "output_value": 2,
                    "result": 9,
                    "result5": 1,
                    "result_value": 1,
                    "return_value": 14
                },
                "local_2c": {
                    "local_value": 2,
                    "local_var": 10,
                    "local_variable": 11,
                    "temp10": 1,
                    "temp4": 1,
                    "temp9": 3,
                    "temp_local": 1,
                    "temp_var": 1,
                    "temp_var_local2c": 1
                },
                "param_1": {
                    "input1": 14,
                    "input_data": 1,
                    "input_param1": 2,
                    "input_parameter": 1,
                    "input_parameter1": 1,
                    "input_value": 4,
                    "input_value1": 7,
                    "input_value_1": 1
                },
                "param_2": {
                    "flags": 4,
                    "input2": 14,
                    "input_flag": 2,
                    "input_param2": 2,
                    "input_parameter2": 1,
                    "input_value2": 7,
                    "input_value_2": 1
                },
                "uVar1": {
                    "first_value": 1,
                    "output_value1": 1,
                    "result1": 17,
                    "temp1": 5,
                    "temp_value_1": 1,
                    "temp_var1": 2,
                    "temporary1": 1,
                    "value1": 1,
                    "var1": 1
                },
                "uVar2": {
                    "output_value2": 1,
                    "result2": 17,
                    "second_value": 1,
                    "temp2": 5,
                    "temp_value_2": 1,
                    "temp_var2": 2,
                    "temporary2": 1,
                    "value2": 1,
                    "var2": 1
                },
                "uVar3": {
                    "output_value3": 1,
                    "result3": 16,
                    "temp3": 5,
                    "temp_value_3": 1,
                    "temp_var3": 2,
                    "temporary3": 1,
                    "third_value": 1,
                    "value3": 1,
                    "var3": 1
                },
                "uVar4": {
                    "fourth_value": 1,
                    "output_value4": 1,
                    "result4": 17,
                    "temp4": 5,
                    "temp_value_4": 1,
                    "temp_var4": 2,
                    "temporary4": 1,
                    "value4": 1,
                    "var4": 1
                },
                "uVar6": {
                    "fifth_value": 1,
                    "result5": 8,
                    "result6": 4,
                    "temp1": 5,
                    "temp5": 4,
                    "temp6": 1,
                    "temp_value1": 1,
                    "temp_value_5": 1,
                    "temp_var6": 2,
                    "temporary5": 1,
                    "value5": 1,
                    "var6": 1
                },
                "uVar7": {
                    "abs_flags": 1,
                    "flag": 1,
                    "masked_input": 1,
                    "modified_flags": 1,
                    "modified_input2": 1,
                    "modified_input_value2": 1,
                    "positive_value": 1,
                    "temp": 1,
                    "temp1": 2,
                    "temp2": 5,
                    "temp6": 3,
                    "temp7": 1,
                    "temp_value": 1,
                    "temp_value2": 1,
                    "temp_value_6": 1,
                    "temp_var1": 1,
                    "temp_var7": 1,
                    "u_var": 1,
                    "u_var7": 1,
                    "unsigned_flag": 1,
                    "unsigned_input": 1,
                    "unsigned_input_value2": 1,
                    "var7": 1
                },
                "uVar8": {
                    "calculation_result": 2,
                    "combined_result": 1,
                    "result": 2,
                    "result6": 2,
                    "result8": 1,
                    "temp1": 3,
                    "temp2": 2,
                    "temp3": 5,
                    "temp7": 3,
                    "temp8": 1,
                    "temp_result": 1,
                    "temp_value": 1,
                    "temp_value3": 1,
                    "temp_value_7": 1,
                    "temp_var2": 1,
                    "temp_var8": 2,
                    "updated_value": 1
                },
                "uVar9": {
                    "new_value": 1,
                    "result7": 2,
                    "result9": 2,
                    "sixth_value": 1,
                    "temp2": 3,
                    "temp3": 2,
                    "temp4": 5,
                    "temp6": 1,
                    "temp8": 3,
                    "temp9": 1,
                    "temp_result": 3,
                    "temp_value4": 1,
                    "temp_value_8": 1,
                    "temp_var3": 1,
                    "temp_var9": 2,
                    "temporary6": 1
                }
            },
            "called": [
                "FUN_0800b2cc",
                "FUN_080082d4",
                "FUN_08008894",
                "FUN_08008b60",
                "FUN_08008640",
                "FUN_080082d0"
            ],
            "calling": [
                "FUN_08009990"
            ],
            "code": "\nint calculate_result_0800af78(int input1,uint input2)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined4 result3;\n  undefined4 result4;\n  int return_value;\n  undefined4 result5;\n  uint temp2;\n  undefined8 temp3;\n  undefined8 temp4;\n  undefined4 local_variable;\n  \n  temp3 = CONCAT44(input2,input1);\n  temp2 = input2 & 0x7fffffff;\n  if (temp2 < 0x44100000) {\n    if (temp2 < 0x3fdc0000) {\n      if (temp2 < 0x3e200000) {\n        temp4 = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c);\n        return_value = FUN_08008b60((int)temp4,(int)((ulonglong)temp4 >> 0x20),0,0x3ff00000);\n        if (return_value != 0) {\n          return input1;\n        }\n      }\n      return_value = -1;\n    }\n    else {\n      temp3 = FUNC_0800b2cc();\n      result4 = (undefined4)((ulonglong)temp3 >> 0x20);\n      result1 = (undefined4)temp3;\n      if (temp2 < 0x3ff30000) {\n        if (temp2 < 0x3fe60000) {\n          temp3 = FUN_080082d4(result1,result4,result1,result4);\n          temp3 = FUN_080082d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),0,0x3ff00000);\n          temp4 = FUN_080082d4(result1,result4,0,0x40000000);\n          temp3 = FUN_08008894((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp4,\n                               (int)((ulonglong)temp4 >> 0x20));\n          return_value = 0;\n        }\n        else {\n          temp3 = FUN_080082d0(result1,result4,0,0x3ff00000);\n          temp4 = FUN_080082d4(result1,result4,0,0x3ff00000);\n          temp3 = FUN_08008894((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp4,\n                               (int)((ulonglong)temp4 >> 0x20));\n          return_value = 1;\n        }\n      }\n      else if (temp2 < 0x40038000) {\n        temp3 = FUN_080082d0(result1,result4,0,0x3ff80000);\n        temp4 = FUN_08008640(result1,result4,0,0x3ff80000);\n        temp4 = FUN_080082d4((int)temp4,(int)((ulonglong)temp4 >> 0x20),0,0x3ff00000);\n        temp3 = FUN_08008894((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp4,\n                             (int)((ulonglong)temp4 >> 0x20));\n        return_value = 2;\n      }\n      else {\n        temp3 = FUN_08008894(0,0xbff00000,result1,result4);\n        return_value = 3;\n      }\n    }\n    local_variable = (undefined4)((ulonglong)temp3 >> 0x20);\n    result5 = (undefined4)temp3;\n    temp3 = FUN_08008640(result5,local_variable,result5);\n    result2 = (undefined4)((ulonglong)temp3 >> 0x20);\n    result1 = (undefined4)temp3;\n    temp3 = FUN_08008640(result1,result2,result1,result2);\n    result3 = (undefined4)((ulonglong)temp3 >> 0x20);\n    result4 = (undefined4)temp3;\n    temp3 = FUN_08008640(result4,result3,0xe322da11,0x3f90ad3a);\n    temp3 = FUN_080082d4((int)temp3,(int)((ulonglong)temp3 >> 0x20),0x24760deb,0x3fa97b4b);\n    temp3 = FUN_08008640((int)temp3,(int)((ulonglong)temp3 >> 0x20),result4,result3);\n    temp3 = FUN_080082d4((int)temp3,(int)((ulonglong)temp3 >> 0x20),0xa0d03d51,0x3fb10d66);\n    temp3 = FUN_08008640((int)temp3,(int)((ulonglong)temp3 >> 0x20),result4,result3);\n    temp3 = FUN_080082d4((int)temp3,(int)((ulonglong)temp3 >> 0x20),0xc54c206e,0x3fb745cd);\n    temp3 = FUN_08008640((int)temp3,(int)((ulonglong)temp3 >> 0x20),result4,result3);\n    temp3 = FUN_080082d4((int)temp3,(int)((ulonglong)temp3 >> 0x20),0x920083ff,0x3fc24924);\n    temp3 = FUN_08008640((int)temp3,(int)((ulonglong)temp3 >> 0x20),result4,result3);\n    temp3 = FUN_080082d4((int)temp3,(int)((ulonglong)temp3 >> 0x20),0x5555550d,0x3fd55555);\n    temp3 = FUN_08008640((int)temp3,(int)((ulonglong)temp3 >> 0x20),result1,result2);\n    result1 = (undefined4)((ulonglong)temp3 >> 0x20);\n    temp4 = FUN_08008640(result4,result3,0x2c6a6c2f,0xbfa2b444);\n    temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x52defd9a,0x3fadde2d);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),result4,result3);\n    temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),0xaf749a6d,0x3fb3b0f2);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),result4,result3);\n    temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),0xfe231671,0x3fbc71c6);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),result4,result3);\n    temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x9998ebc4,0x3fc99999);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),result4,result3);\n    result4 = (undefined4)((ulonglong)temp4 >> 0x20);\n    if (return_value == -1) {\n      temp3 = FUN_080082d4((int)temp3,result1,(int)temp4,result4);\n      temp3 = FUN_08008640((int)temp3,(int)((ulonglong)temp3 >> 0x20),result5,local_variable);\n      return_value = FUN_080082d0(result5,local_variable,(int)temp3,(int)((ulonglong)temp3 >> 0x20));\n      return return_value;\n    }\n    temp3 = FUN_080082d4((int)temp3,result1,(int)temp4,result4);\n    temp3 = FUN_08008640((int)temp3,(int)((ulonglong)temp3 >> 0x20),result5,local_variable);\n    temp3 = FUN_080082d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),\n                         *(undefined4 *)(&UNK_0800c090 + return_value * 8),\n                         *(undefined4 *)(&UNK_0800c094 + return_value * 8));\n    temp3 = FUN_080082d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),result5,local_variable);\n    return_value = FUN_080082d0(*(undefined4 *)(&UNK_0800c070 + return_value * 8),\n                         *(undefined4 *)(&UNK_0800c074 + return_value * 8),(int)temp3,\n                         (int)((ulonglong)temp3 >> 0x20));\n    if ((int)input2 < 0) {\n      return return_value;\n    }\n  }\n  else {\n    if ((0x7ff00000 < temp2) || ((temp2 == 0x7ff00000 && (input1 != 0)))) {\n      return_value = FUN_080082d4(input1,input2,input1);\n      return return_value;\n    }\n    return_value = 0x54442d18;\n  }\n  return return_value;\n}\n\n",
            "current_name": "calculate_result_0800af78",
            "entrypoint": "0x0800af78",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800af78": "calculate_result_0800af78",
                "iVar5": "return_value",
                "local_2c": "local_variable",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "uVar6": "result5",
                "uVar7": "temp2",
                "uVar8": "temp3",
                "uVar9": "temp4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800b2cc": {
            "called": [],
            "calling": [
                "FUN_08009990",
                "FUN_08009d78",
                "FUN_0800af78"
            ],
            "code": "\nvoid FUNC_0800b2cc(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800b2cc",
            "entrypoint": "0x0800b2cc",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800b2cc": "FUNC_0800b2cc"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800b2d4": {
            "additional_data": {
                "0x1f": {
                    "bit_shift": 1
                },
                "FUN_0800b2d4": {
                    "calculate_bit_count": 1,
                    "calculate_flag": 1,
                    "calculate_flag_bit": 1,
                    "calculate_positive_offset": 1,
                    "calculate_shift": 1,
                    "calculate_shift_amount": 1,
                    "convert_unsigned_int_to_signed_int": 1,
                    "extract_bit": 2,
                    "extract_most_significant_bit": 1,
                    "extract_sign_bit": 1,
                    "get_high_bit_position": 1,
                    "get_most_significant_bit": 2,
                    "get_sign_bit": 1,
                    "reverse_highest_bit": 1,
                    "set_bit_and_shift": 1,
                    "set_bit_as_most_significant": 1,
                    "set_high_bit_and_shift_right": 1,
                    "set_highest_bit": 1,
                    "set_highest_bit_to_one": 1,
                    "set_most_significant_bit": 1,
                    "set_most_significant_bit_to_one": 3,
                    "set_msb_bit_and_shift_right": 1,
                    "set_sign_bit": 1,
                    "sign_bit": 1,
                    "sign_bit_clear": 1,
                    "sign_bit_shift": 1,
                    "sign_extend": 1
                },
                "local_1": {
                    "highest_bit": 1
                },
                "local_var1": {
                    "extended_bits": 1
                },
                "local_var2": {
                    "shifted_bits": 1
                },
                "param_1": {
                    "arg1": 2,
                    "argument1": 1,
                    "context": 1,
                    "data": 1,
                    "initial_value": 1,
                    "input": 4,
                    "input_flag": 2,
                    "input_param": 1,
                    "input_status": 1,
                    "input_value": 5,
                    "param": 1,
                    "undefined": 3,
                    "undefined_param": 3,
                    "undefined_value": 2,
                    "unused_parameter": 1,
                    "value": 2
                },
                "param_2": {
                    "arg2": 1,
                    "bit_mask": 1,
                    "bit_position": 1,
                    "bit_values": 1,
                    "bitmask": 1,
                    "flag": 1,
                    "flag_value": 1,
                    "input": 2,
                    "input_mask": 1,
                    "input_number": 1,
                    "input_value": 7,
                    "num": 1,
                    "number": 4,
                    "original_value": 2,
                    "unsigned_int": 1,
                    "value": 5
                },
                "param_3": {
                    "bit_mask": 1,
                    "code": 1,
                    "new_variable_name_1": 1,
                    "output": 1,
                    "result": 1,
                    "shift_count": 1,
                    "shifted_num": 1,
                    "shifted_result": 1,
                    "shifted_value": 1,
                    "temp": 1,
                    "updated_value": 1
                },
                "param_4": {
                    "result": 2
                },
                "param_5": {
                    "bit_count": 1
                },
                "result": {
                    "calculated_flag": 1
                },
                "shiftedNum": {
                    "shifted_number": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800981c"
            ],
            "code": "\nuint set_most_significant_bit_to_one_0800b2d4(undefined4 input_value,uint input_value)\n\n{\n  return (input_value | 0x80000000) + 0x100000 >> 0x1f;\n}\n\n",
            "current_name": "set_most_significant_bit_to_one_0800b2d4",
            "entrypoint": "0x0800b2d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800b2d4": "set_most_significant_bit_to_one_0800b2d4",
                "param_1": "input_value",
                "param_2": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800b2e0": {
            "additional_data": {
                "DAT_XXXXXX": {
                    "dat_xxxxxx": 1
                },
                "FUN_0800b2e0": {
                    "clear_flags": 1,
                    "get_default_value": 4,
                    "get_result": 1,
                    "get_return_value": 2,
                    "get_zero": 1,
                    "initialize": 11,
                    "initialize_application": 5,
                    "initialize_data": 2,
                    "initialize_function": 1,
                    "initialize_program": 1,
                    "initialize_zero": 1,
                    "return_zero": 1
                },
                "PTR_0800b2e0": {
                    "data_pointer": 1
                },
                "PTR_Function": {
                    "function_pointer": 1
                },
                "PTR_XXXXXX": {
                    "ptr_xxxxxx": 1
                },
                "result": {
                    "final_result": 1
                },
                "return": {
                    "result": 2,
                    "status": 1
                },
                "undefined4": {
                    "int": 2,
                    "uint32": 1,
                    "void": 15
                }
            },
            "called": [],
            "calling": [
                "FUN_0800981c",
                "FUN_080098d0"
            ],
            "code": "\nvoid initialize_application_0800b2e0(void)\n\n{\n  result 0;\n}\n\n",
            "current_name": "initialize_application_0800b2e0",
            "entrypoint": "0x0800b2e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800b2e0": "initialize_application_0800b2e0",
                "return": "result",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800b2e8": {
            "additional_data": {
                "FUN_080082d4": {
                    "calculate_result2": 1,
                    "calculate_something": 1,
                    "calculate_sum": 1,
                    "calculate_value_a": 1,
                    "compute_result1": 1,
                    "handle_special_case": 1,
                    "helper_function1": 2,
                    "helper_function_2": 1,
                    "perform_operation1": 3,
                    "perform_operation_a": 1,
                    "process_case1": 1,
                    "recompute_value": 1,
                    "reverse_calculation": 2,
                    "reverse_operation": 2,
                    "reverse_value": 1,
                    "reversing_function": 1
                },
                "FUN_08008640": {
                    "apply_operation": 1,
                    "calculate_result": 1,
                    "calculate_result1": 1,
                    "calculate_value_b": 1,
                    "compute_result2": 1,
                    "helper_function": 1,
                    "helper_function2": 2,
                    "helper_function_1": 1,
                    "perform_calculation": 4,
                    "perform_computation": 2,
                    "perform_operation": 2,
                    "perform_operation2": 3,
                    "perform_operation_b": 1
                },
                "FUN_0800b2e8": {
                    "calculate_final_value": 1,
                    "calculate_result": 11,
                    "calculate_value": 2,
                    "decode_input": 1,
                    "perform_calculation": 2,
                    "process_input": 1
                },
                "iVar2": {
                    "combined_result": 1,
                    "modified_count": 1,
                    "modified_counter": 1,
                    "modified_modifier": 1,
                    "modified_shift_count": 1,
                    "modified_val": 1,
                    "modified_value": 3,
                    "new_counter": 1,
                    "new_limit": 1,
                    "shifted_count": 1,
                    "shifted_value_plus_parameter_3": 1,
                    "sum": 10,
                    "sum_offset_shifted": 1,
                    "sum_value": 1,
                    "temp2": 1,
                    "temp_offset": 2,
                    "updated_offset": 2,
                    "updated_param3": 1
                },
                "param_1": {
                    "input1": 19,
                    "input_1": 3,
                    "input_param": 1,
                    "input_param1": 2,
                    "input_parameter_1": 1,
                    "input_val1": 1,
                    "input_value1": 4
                },
                "param_2": {
                    "input2": 19,
                    "input_2": 3,
                    "input_param2": 2,
                    "input_parameter_2": 1,
                    "input_val2": 1,
                    "input_value2": 4,
                    "shift_param": 1
                },
                "param_3": {
                    "condition": 2,
                    "count": 1,
                    "counter": 2,
                    "increment_param": 1,
                    "input3": 1,
                    "input_modifier": 1,
                    "input_param3": 2,
                    "input_parameter_3": 1,
                    "limit": 2,
                    "modifier": 4,
                    "offset": 10,
                    "offset_value": 1,
                    "param3": 1,
                    "shift_amount": 1,
                    "shift_count": 1
                },
                "param_4": {
                    "config": 1,
                    "constant": 12,
                    "constant_value": 1,
                    "constants": 2,
                    "extra_param": 1,
                    "flag": 2,
                    "input4": 1,
                    "input_param4": 2,
                    "input_parameter_4": 1,
                    "param": 2,
                    "param4": 2,
                    "settings": 2,
                    "undefined_param": 2
                },
                "uVar1": {
                    "shift_result": 1,
                    "shifted_bits": 1,
                    "shifted_count": 1,
                    "shifted_input": 3,
                    "shifted_input1": 1,
                    "shifted_input2": 10,
                    "shifted_inputs": 1,
                    "shifted_param2": 1,
                    "shifted_val": 1,
                    "shifted_value": 10,
                    "temp1": 1
                },
                "uVar3": {
                    "concatenated_param2": 1,
                    "concatenated_value": 1,
                    "high_bits": 5,
                    "high_bits_param1": 1,
                    "high_bits_value": 1,
                    "high_part": 1,
                    "input1_upper": 1,
                    "input2_high32_bits": 1,
                    "shifted_high_value": 1,
                    "shifted_value_high": 1,
                    "temp3": 1,
                    "upper32_bits": 2,
                    "upper32bits": 1,
                    "upper_bits": 7,
                    "upper_part": 3,
                    "upper_part_of_inputs": 1,
                    "upper_shifted_input1": 1,
                    "upper_val": 1
                },
                "uVar4": {
                    "combined_input": 7,
                    "combined_input1_and2": 1,
                    "combined_inputs": 6,
                    "combined_parameters": 1,
                    "combined_params": 1,
                    "combined_val": 1,
                    "combined_value": 1,
                    "combined_values": 1,
                    "concatenated_input": 1,
                    "concatenated_inputs": 5,
                    "concatenated_params": 2,
                    "concatenated_value": 1,
                    "concatenated_values": 3
                }
            },
            "called": [
                "FUN_080082d4",
                "FUN_08008640"
            ],
            "calling": [
                "FUN_0800a5a0"
            ],
            "code": "\nuint calculate_result_0800b2e8(uint input1,uint input2,int offset,undefined4 constant)\n\n{\n  uint shifted_input2;\n  int sum;\n  uint upper_bits;\n  undefined8 combined_input;\n  \n  combined_input = CONCAT44(input2,input1);\n  shifted_input2 = (input2 << 1) >> 0x15;\n  if (shifted_input2 == 0) {\n    if ((input1 | input2 & 0x7fffffff) == 0) {\n      return input1;\n    }\n    combined_input = FUN_08008640(input1,input2,0,0x43500000);\n    if (offset < -50000) goto LAB_0800b34a;\n    shifted_input2 = ((uint)((int)((ulonglong)combined_input >> 0x20) << 1) >> 0x15) - 0x36;\n  }\n  else if (shifted_input2 == 0x7ff) {\n    shifted_input2 = FUN_080082d4(input1,input2,input1,input2,constant);\n    return shifted_input2;\n  }\n  upper_bits = (uint)((ulonglong)combined_input >> 0x20);\n  sum = shifted_input2 + offset;\n  if (sum < 0x7ff) {\n    if (0 < sum) {\n      return (uint)combined_input;\n    }\n    if (sum + 0x35 < 0 == SCARRY4(sum,0x35)) {\n      shifted_input2 = FUN_08008640((uint)combined_input,upper_bits & 0x800fffff | (sum + 0x36) * 0x100000,0,0x3c900000);\n      return shifted_input2;\n    }\n    if (offset < 0xc351) {\n      combined_input = CONCAT44(upper_bits & 0x80000000 | 0x1a56e1f,0xc2f8f359);\nLAB_0800b34a:\n      shifted_input2 = FUN_08008640((int)combined_input,(int)((ulonglong)combined_input >> 0x20),0xc2f8f359,0x1a56e1f);\n      return shifted_input2;\n    }\n  }\n  shifted_input2 = FUN_08008640(0x8800759c,upper_bits & 0x80000000 | 0x7e37e43c,0x8800759c,0x7e37e43c);\n  return shifted_input2;\n}\n\n",
            "current_name": "calculate_result_0800b2e8",
            "entrypoint": "0x0800b2e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800b2e8": "calculate_result_0800b2e8",
                "iVar2": "sum",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "offset",
                "param_4": "constant",
                "uVar1": "shifted_input2",
                "uVar3": "upper_bits",
                "uVar4": "combined_input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800b3dc": {
            "additional_data": {
                "DAT_20000018": {
                    "data": 8,
                    "data_address": 2,
                    "data_offset": 3,
                    "data_pointer": 1,
                    "data_value": 2,
                    "global_data": 3,
                    "global_variable": 2,
                    "global_variable_value": 1,
                    "memory_address": 2,
                    "result": 1
                },
                "FUN_0800b3dc": {
                    "get_dat_20000018": 1,
                    "get_data": 9,
                    "get_data_address": 2,
                    "get_data_from_memory": 1,
                    "get_data_offset": 3,
                    "get_data_pointer": 1,
                    "get_data_value": 5,
                    "get_global_data": 3,
                    "get_global_data_value": 1,
                    "get_global_variable": 2,
                    "get_global_variable_value": 1,
                    "get_memory_address": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_0800981c",
                "FUN_080098d0"
            ],
            "code": "\nundefined4 get_global_data_value_0800b3dc(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "current_name": "get_global_data_value_0800b3dc",
            "entrypoint": "0x0800b3dc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800b3dc": "get_global_data_value_0800b3dc"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800b3e8": {
            "additional_data": {
                "FUNC_080001ac": {
                    "perform_action": 1,
                    "process_data": 2
                },
                "FUNC_0800b4d0": {
                    "cleanup": 2,
                    "cleanup_function": 1,
                    "repeated_logic": 1
                },
                "FUNC_0800b5b0": {
                    "initialize": 3,
                    "initialize_function": 1,
                    "initialize_system": 2
                },
                "FUN_0800b3e8": {
                    "execute_function_sequence": 1,
                    "execute_functions": 4,
                    "execute_sub_functions": 22,
                    "execute_sub_functions_in_order": 1,
                    "execute_subfunctions": 2,
                    "process_sub_functions": 1
                },
                "analyzed_function_1": {
                    "function_1": 1
                },
                "analyzed_function_2": {
                    "function_2": 1
                },
                "iVar1": {
                    "counter": 18,
                    "index": 1,
                    "iteration_count": 11,
                    "iteration_counter": 1
                },
                "ppcVar2": {
                    "func_pointer_array": 1,
                    "function_list": 3,
                    "function_pointer": 8,
                    "function_pointer_array": 6,
                    "function_pointer_list": 1,
                    "function_pointers": 7,
                    "function_ptr": 1,
                    "pp_functions": 1,
                    "sub_function_pointer": 1,
                    "sub_function_pointers": 2
                }
            },
            "called": [
                "FUN_0800b5b0",
                "FUN_080001ac",
                "FUN_0800b4d0"
            ],
            "calling": [
                "entry"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800b3f4) */\n/* WARNING: Removing unreachable block (ram,0x0800b3f6) */\n\nvoid execute_sub_functions_in_order_0800b3e8(void)\n\n{\n  int counter;\n  code **function_pointer;\n  \n  FUNC_0800b5b0();\n  counter = 0;\n  function_pointer = (code **)&DAT_0800c0b4;\n  do {\n    counter = counter + 1;\n    (**function_pointer)();\n    function_pointer = function_pointer + 1;\n  } while (counter != 2);\n  return;\n}\n\n",
            "current_name": "execute_sub_functions_in_order_0800b3e8",
            "entrypoint": "0x0800b3e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800b3e8": "execute_sub_functions_in_order_0800b3e8",
                "iVar1": "counter",
                "ppcVar2": "function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800b430": {
            "additional_data": {
                "FUN_0800b430": {
                    "copy_byte": 1,
                    "copy_value": 2,
                    "fill_buffer": 3,
                    "fill_memory": 10,
                    "fill_memory_with_byte": 3,
                    "fill_with_byte": 1,
                    "initialize_memory": 1,
                    "memset": 4,
                    "memset_aligned_buffer": 1,
                    "memset_with_byte": 1,
                    "memset_with_mask": 1,
                    "write_pattern": 1,
                    "write_repeated_value": 1
                },
                "GIBBERISH": {
                    "fill_memory_with_byte": 1
                },
                "bVar5": {
                    "is_count_zero": 1,
                    "is_empty": 1,
                    "is_end": 1,
                    "is_end_of_block": 1,
                    "is_last": 1,
                    "is_last_chunk": 1,
                    "is_last_loop": 1,
                    "is_last_round": 1,
                    "is_length_zero": 2,
                    "is_remaining_size_zero": 1,
                    "is_remaining_zero": 1,
                    "is_size_zero": 5,
                    "is_zero": 5,
                    "is_zero_size": 3
                },
                "joined_r0x0800b4a8": {
                    "end": 1,
                    "end_loop": 1,
                    "end_of_function": 1,
                    "skip_copy": 1,
                    "skip_padding": 1
                },
                "param_1": {
                    "buffer": 7,
                    "dest": 13,
                    "destination": 7,
                    "memory": 1,
                    "memory_block": 1,
                    "output_buffer": 1
                },
                "param_2": {
                    "byte": 2,
                    "byte_to_fill": 1,
                    "byte_value": 2,
                    "fillbyte": 1,
                    "pattern": 1,
                    "value": 23
                },
                "param_3": {
                    "buffer_length": 1,
                    "byte_count": 1,
                    "count": 4,
                    "length": 4,
                    "n": 1,
                    "size": 19
                },
                "puVar1": {
                    "buffer_pointer": 1,
                    "current": 2,
                    "current_buffer": 1,
                    "current_ptr": 2,
                    "dest_aligned": 1,
                    "dest_pointer": 2,
                    "dest_ptr": 13,
                    "dest_ptr1": 1,
                    "dword_ptr": 1,
                    "ptr1": 1
                },
                "puVar2": {
                    "copy_ptr": 1,
                    "curr_ptr": 1,
                    "dest_pointer2": 1,
                    "dest_ptr2": 2,
                    "dword_ptr_2": 1,
                    "loop_var": 1,
                    "next": 3,
                    "next_buffer": 1,
                    "next_dest_ptr": 1,
                    "next_pointer": 1,
                    "next_ptr": 3,
                    "ptr2": 1,
                    "source_ptr": 1,
                    "temp_buffer_pointer": 1,
                    "temp_ptr": 6
                },
                "uVar3": {
                    "loop_count": 1,
                    "remaining": 5,
                    "remaining_bytes": 1,
                    "remaining_count": 1,
                    "remaining_length": 4,
                    "remaining_size": 10,
                    "size1": 1,
                    "temp": 1,
                    "temp_count": 1
                },
                "uVar4": {
                    "block_value": 2,
                    "combined_value": 1,
                    "concat_value": 1,
                    "concatenated_value": 1,
                    "copy_value": 1,
                    "fill_value": 7,
                    "four_byte_value": 1,
                    "new_value": 1,
                    "packed_value": 1,
                    "pattern": 1,
                    "pattern_value": 1,
                    "quad_byte": 1,
                    "value32": 2,
                    "value4": 1,
                    "value_combined": 1,
                    "value_concat": 1,
                    "word_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001ddc",
                "FUN_080005b4",
                "FUN_08005814",
                "FUN_080079c0",
                "FUN_08004d7c",
                "FUN_080024c4",
                "FUN_080002f0",
                "FUN_080004ac",
                "FUN_08002f24",
                "FUN_08001994"
            ],
            "code": "\nvoid fill_memory_with_byte_0800b430(undefined4 *dest,undefined value,uint size)\n\n{\n  undefined4 *dest_ptr;\n  undefined4 *temp_ptr;\n  uint remaining_size;\n  undefined4 fill_value;\n  bool is_zero;\n  \n  if (((uint)dest & 3) != 0) {\n    remaining_size = size - 1;\n    dest_ptr = dest;\n    if (size == 0) {\n      return;\n    }\n    while( true ) {\n      dest = (undefined4 *)((int)dest_ptr + 1);\n      *(undefined *)dest_ptr = value;\n      size = remaining_size;\n      if (((uint)dest & 3) == 0) break;\n      is_zero = remaining_size == 0;\n      remaining_size = remaining_size - 1;\n      dest_ptr = dest;\n      if (is_zero) {\n        return;\n      }\n    }\n  }\n  if (3 < size) {\n    fill_value = CONCAT22(CONCAT11(value,value),CONCAT11(value,value));\n    if (0xf < size) {\n      dest_ptr = dest + 4;\n      do {\n        dest_ptr[-4] = fill_value;\n        dest_ptr[-3] = fill_value;\n        dest_ptr[-2] = fill_value;\n        dest_ptr[-1] = fill_value;\n        dest_ptr = dest_ptr + 4;\n      } while (dest_ptr != (undefined4 *)((int)dest + (size - 0x10 & 0xfffffff0) + 0x20));\n      remaining_size = size & 0xc;\n      dest = dest + ((size - 0x10 >> 4) + 1) * 4;\n      size = size & 0xf;\n      if (remaining_size == 0) goto skip_padding;\n    }\n    dest_ptr = (undefined4 *)((size - 4 & 0xfffffffc) + 4 + (int)dest);\n    do {\n      temp_ptr = dest + 1;\n      *dest = fill_value;\n      dest = temp_ptr;\n    } while (dest_ptr != temp_ptr);\n    size = size & 3;\n    dest = dest_ptr;\n  }\nskip_padding:\n  if (size != 0) {\n    dest_ptr = dest;\n    do {\n      temp_ptr = (undefined4 *)((int)dest_ptr + 1);\n      *(undefined *)dest_ptr = value;\n      dest_ptr = temp_ptr;\n    } while ((undefined4 *)(size + (int)dest) != temp_ptr);\n  }\n  return;\n}\n\n",
            "current_name": "fill_memory_with_byte_0800b430",
            "entrypoint": "0x0800b430",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800b430": "fill_memory_with_byte_0800b430",
                "bVar5": "is_zero",
                "joined_r0x0800b4a8": "skip_padding",
                "param_1": "dest",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "dest_ptr",
                "puVar2": "temp_ptr",
                "uVar3": "remaining_size",
                "uVar4": "fill_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800b4d0": {
            "called": [
                "FUN_0800b524"
            ],
            "calling": [
                "FUN_0800b3e8"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800b4d4) */\n\nvoid FUNC_0800b4d0(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800b4d0",
            "entrypoint": "0x0800b4d0",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800b4d0": "FUNC_0800b4d0"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800b51c": {
            "called": [],
            "calling": [
                "FUN_0800b524"
            ],
            "code": "\nvoid FUNC_0800b51c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800b51c",
            "entrypoint": "0x0800b51c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800b51c": "FUNC_0800b51c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800b520": {
            "called": [],
            "calling": [
                "FUN_0800b524"
            ],
            "code": "\nvoid FUNC_0800b520(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800b520",
            "entrypoint": "0x0800b520",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800b520": "FUNC_0800b520"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800b524": {
            "additional_data": {
                "DAT_20000168": {
                    "data_ptr": 1
                },
                "DAT_2000016c": {
                    "initial_data": 1
                },
                "DAT_20000448": {
                    "data_buffer": 1
                },
                "FUNC_0800b51c": {
                    "execute_function_b": 1,
                    "initialize": 2,
                    "initialize_data": 2,
                    "initialize_data_function": 1
                },
                "FUNC_0800b520": {
                    "cleanup": 1,
                    "cleanup_data": 1,
                    "cleanup_function": 1,
                    "execute_function_a": 1,
                    "handle_data_overflow": 1
                },
                "FUN_0800b524": {
                    "process_data": 9,
                    "process_input": 2,
                    "process_parameter": 1,
                    "store_parameter": 1,
                    "store_parameter_value": 1,
                    "update_data": 14,
                    "update_function": 1,
                    "update_registry_entry": 1
                },
                "param_1": {
                    "action": 2,
                    "condition": 1,
                    "data_flag": 1,
                    "data_status": 1,
                    "entry_type": 1,
                    "flag": 2,
                    "input_flag": 1,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_type": 8,
                    "mode": 1,
                    "param_type": 1,
                    "status": 2,
                    "type": 7,
                    "value_type": 1
                },
                "param_2": {
                    "data": 8,
                    "data1": 2,
                    "data_size": 1,
                    "first_output_parameter": 1,
                    "new_data": 1,
                    "new_value": 7,
                    "value": 7,
                    "value1": 3,
                    "value_param": 1
                },
                "param_3": {
                    "data": 1,
                    "data1": 9,
                    "data2": 2,
                    "data_update1": 1,
                    "data_value": 1,
                    "entry_value": 1,
                    "extra_param1": 1,
                    "param1": 1,
                    "parameter1": 1,
                    "second_output_parameter": 1,
                    "value1": 9,
                    "value2": 3
                },
                "param_4": {
                    "additional_data": 1,
                    "data2": 9,
                    "data3": 2,
                    "data_update2": 1,
                    "extra_param2": 1,
                    "info": 1,
                    "optional_value": 1,
                    "param2": 1,
                    "parameter2": 1,
                    "third_output_parameter": 1,
                    "value2": 9,
                    "value3": 3
                },
                "puVar1": {
                    "current_data": 1,
                    "data_pointer": 3,
                    "data_ptr": 17,
                    "pointer": 2,
                    "pointer_to_data": 1,
                    "ptr": 2,
                    "ptr_data": 3,
                    "ptr_to_data": 1,
                    "registry_ptr": 1
                },
                "uVar2": {
                    "result": 8,
                    "return_value": 23
                },
                "uVar3": {
                    "bit": 1,
                    "bit_mask": 22,
                    "bit_shift_value": 1,
                    "bitmask": 3,
                    "bitwise_shift": 1,
                    "mask": 1,
                    "shifted_bit": 1,
                    "temp1": 1
                },
                "uVar4": {
                    "count": 15,
                    "counter": 3,
                    "current_count": 1,
                    "current_index": 2,
                    "current_size": 1,
                    "data_count": 3,
                    "data_index": 1,
                    "index": 1,
                    "num_elements": 1,
                    "registry_size": 1,
                    "size": 1,
                    "temp2": 1
                }
            },
            "called": [
                "FUN_0800b520",
                "FUN_0800b51c"
            ],
            "calling": [
                "FUN_0800b4d0"
            ],
            "code": "\nundefined4 update_data_0800b524(int input_type,undefined4 data,undefined4 value1,undefined4 value2)\n\n{\n  undefined *data_ptr;\n  undefined4 return_value;\n  uint bit_mask;\n  uint count;\n  \n  FUNC_0800b51c(DAT_20000448);\n  if (DAT_20000168 == (undefined *)0x0) {\n    DAT_20000168 = &DAT_2000016c;\n  }\n  data_ptr = DAT_20000168;\n  count = *(uint *)(DAT_20000168 + 4);\n  if ((int)count < 0x20) {\n    if (input_type != 0) {\n      *(undefined4 *)(DAT_20000168 + count * 4 + 0x88) = value1;\n      bit_mask = 1 << (count & 0xff);\n      *(uint *)(data_ptr + 0x188) = *(uint *)(data_ptr + 0x188) | bit_mask;\n      *(undefined4 *)(data_ptr + count * 4 + 0x108) = value2;\n      if (input_type == 2) {\n        *(uint *)(data_ptr + 0x18c) = bit_mask | *(uint *)(data_ptr + 0x18c);\n      }\n    }\n    return_value = DAT_20000448;\n    *(uint *)(data_ptr + 4) = count + 1;\n    *(undefined4 *)(data_ptr + (count + 2) * 4) = data;\n    FUNC_0800b520(return_value);\n    return_value = 0;\n  }\n  else {\n    FUNC_0800b520(DAT_20000448);\n    return_value = 0xffffffff;\n  }\n  return return_value;\n}\n\n",
            "current_name": "update_data_0800b524",
            "entrypoint": "0x0800b524",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800b524": "update_data_0800b524",
                "param_1": "input_type",
                "param_2": "data",
                "param_3": "value1",
                "param_4": "value2",
                "puVar1": "data_ptr",
                "uVar2": "return_value",
                "uVar3": "bit_mask",
                "uVar4": "count"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800b5b0": {
            "called": [],
            "calling": [
                "FUN_0800b3e8",
                "FUN_08000188",
                "FUN_080001ac"
            ],
            "code": "\nvoid FUNC_0800b5b0(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800b5b0",
            "entrypoint": "0x0800b5b0",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800b5b0": "FUNC_0800b5b0"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800b5bc": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_0800b5bc(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800b5bc",
            "entrypoint": "0x0800b5bc",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800b5bc": "FUNC_0800b5bc"
            },
            "skipped": true,
            "tags": []
        },
        "entry": {
            "called": [
                "FUN_0800b3e8",
                "FUN_0800756c",
                "FUN_08007540"
            ],
            "calling": [],
            "code": "\n/* WARNING: This function may have set the stack pointer */\n\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_2000044c; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x800c0c0);\n  }\n  for (puVar2 = &DAT_2000044c; puVar2 < &DAT_20000f20; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_0800756c();\n  FUN_0800b3e8();\n  UNRECOVERED_JUMPTABLE = (code *)0x80092fa;\n  FUN_08007540();\n                    /* WARNING: Could not recover jumptable at 0x080092fa. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "current_name": "entry",
            "entrypoint": "0x080092c4",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "thunk_FUN_08009990": {
            "additional_data": {
                "DAT_0800b2cc": {
                    "perform_another_calculation": 1
                },
                "DAT_0800be68": {
                    "data1": 1,
                    "data_1": 1,
                    "special_values_1": 1,
                    "special_values_ptr_1": 1,
                    "table_1": 1,
                    "value_1": 1
                },
                "DAT_0800be80": {
                    "data2": 1,
                    "data_2": 1,
                    "special_values_2": 1,
                    "special_values_ptr_2": 1,
                    "table_2": 1,
                    "value_2": 1
                },
                "FUNC_0800b2cc": {
                    "additional_operation": 1,
                    "another_function": 1,
                    "function3": 1,
                    "perform_operation": 2
                },
                "FUN_080082d0": {
                    "calculate_value": 2,
                    "function4": 1,
                    "perform_calculation": 1,
                    "perform_complicated_calculation": 1,
                    "process_input": 1
                },
                "FUN_080082d4": {
                    "function5": 1,
                    "handle_input_error": 1,
                    "perform_other_calculation": 1,
                    "reverse_calculation": 1,
                    "reverse_something": 1,
                    "reverse_values": 1
                },
                "FUN_08008894": {
                    "calculate_something": 1,
                    "function2": 1,
                    "perform_calculation": 1,
                    "perform_operation": 1,
                    "process_values": 1,
                    "some_function": 1
                },
                "FUN_0800af78": {
                    "calculate_result": 1,
                    "function1": 1,
                    "get_result": 1,
                    "get_special_value": 1,
                    "get_value": 2
                },
                "FUN_0800b2cc": {
                    "function3": 1
                },
                "SCARRY4": {
                    "subtract_overflow": 1
                },
                "iVar1": {
                    "diff": 1,
                    "diff_divided": 1,
                    "difference": 19,
                    "temp1": 2,
                    "temp_i_1": 1,
                    "temp_var": 2,
                    "temp_var1": 3,
                    "temp_var_1": 2
                },
                "param_1": {
                    "first_value": 1,
                    "input1": 7,
                    "input_1": 12,
                    "input_a": 1,
                    "input_one": 1,
                    "input_param1": 3,
                    "input_param_1": 1,
                    "input_value1": 3,
                    "value_1": 2
                },
                "param_2": {
                    "input2": 7,
                    "input_2": 12,
                    "input_b": 1,
                    "input_param2": 3,
                    "input_param_2": 1,
                    "input_two": 1,
                    "input_value2": 3,
                    "second_value": 1,
                    "value_2": 2
                },
                "param_3": {
                    "input3": 7,
                    "input_3": 12,
                    "input_c": 1,
                    "input_param3": 3,
                    "input_param_3": 1,
                    "input_three": 1,
                    "input_value3": 3,
                    "third_value": 1,
                    "value_3": 2
                },
                "param_4": {
                    "fourth_value": 1,
                    "input4": 7,
                    "input_4": 12,
                    "input_d": 1,
                    "input_four": 1,
                    "input_param4": 3,
                    "input_param_4": 1,
                    "input_value4": 3,
                    "value_4": 2
                },
                "thunk_FUN_08009990": {
                    "calculate_floating_point_number": 1,
                    "calculate_param": 1,
                    "calculate_result": 19,
                    "calculate_value": 1,
                    "compute_result": 1
                },
                "uVar2": {
                    "result": 3,
                    "result1": 2,
                    "result_high": 6,
                    "result_upper": 4,
                    "temp2": 2,
                    "temp_1": 1,
                    "temp_u_1": 1,
                    "temp_var2": 3,
                    "temp_var_2": 2,
                    "upper_bits": 1,
                    "upper_part": 1,
                    "upper_result": 2
                },
                "uVar3": {
                    "bitwise_operations": 1,
                    "bitwise_or": 1,
                    "cond_1": 1,
                    "condition_flag": 1,
                    "flag": 2,
                    "modified_input_value3": 1,
                    "param_flags": 1,
                    "shift_result": 1,
                    "shift_value": 1,
                    "shift_value1": 1,
                    "shifted_bits": 1,
                    "shifted_input": 3,
                    "shifted_input1": 1,
                    "shifted_inputs": 1,
                    "shifted_param": 2,
                    "shifted_value": 2,
                    "shifted_values": 1,
                    "temp3": 2,
                    "temp_2": 1,
                    "temp_u_2": 1,
                    "temp_var3": 3,
                    "temp_var_3": 2
                },
                "uVar4": {
                    "abs_param4": 1,
                    "clamped_input_4": 1,
                    "cleaned_input_4": 1,
                    "cond_2": 1,
                    "masked_input_4": 1,
                    "masked_param_4": 1,
                    "masked_value_4": 1,
                    "modified_input_4": 1,
                    "modified_input_value4": 1,
                    "normalized_input4": 1,
                    "param4_masked": 2,
                    "param_4_masked": 1,
                    "param_4_normalized": 1,
                    "param_4_positive": 1,
                    "positive_input_4": 1,
                    "positive_param_4": 1,
                    "positive_value_4": 1,
                    "result": 1,
                    "shift_value2": 1,
                    "shifted_input4": 1,
                    "shifted_param_abs": 1,
                    "temp4": 2,
                    "temp_u_3": 1,
                    "temp_var4": 3,
                    "temp_var_4": 2,
                    "unsigned_input_4": 1
                },
                "uVar5": {
                    "abs_param2": 1,
                    "absolute_value": 1,
                    "clamped_input_2": 1,
                    "cleaned_input_2": 1,
                    "cond_3": 1,
                    "masked_input_2": 1,
                    "masked_param_2": 1,
                    "masked_value_2": 1,
                    "modified_input_2": 1,
                    "modified_input_value2": 1,
                    "normalized_input2": 1,
                    "param2_masked": 2,
                    "param_2_masked": 1,
                    "param_2_normalized": 1,
                    "param_2_positive": 1,
                    "positive_input_2": 1,
                    "positive_param_2": 1,
                    "positive_value_2": 1,
                    "shift_value3": 1,
                    "shifted_input2": 1,
                    "shifted_param2": 1,
                    "temp5": 2,
                    "temp_u_4": 1,
                    "temp_var5": 3,
                    "temp_var_5": 2,
                    "unsigned_input_2": 1
                },
                "uVar6": {
                    "intermediate_result": 1,
                    "result": 17,
                    "result2": 2,
                    "temp6": 2,
                    "temp_result": 3,
                    "temp_u_5": 1,
                    "temp_var6": 3,
                    "temp_var_6": 2
                }
            },
            "called": [
                "FUN_08009990"
            ],
            "calling": [
                "FUN_08001f00"
            ],
            "code": "\nuint calculate_result_thunk_08009990(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  int difference;\n  undefined4 result_high;\n  uint shifted_input;\n  uint temp_var4;\n  uint temp_var5;\n  undefined8 result;\n  \n  temp_var4 = input_4 & 0x7fffffff;\n  if (((temp_var4 | (-input_3 | input_3) >> 0x1f) < 0x7ff00001) &&\n     (temp_var5 = input_2 & 0x7fffffff, (temp_var5 | (-input_1 | input_1) >> 0x1f) < 0x7ff00001)) {\n    if ((input_4 + 0xc0100000 | input_3) == 0) {\n      temp_var4 = FUN_0800af78();\n      return temp_var4;\n    }\n    shifted_input = (int)input_4 >> 0x1e & 2U | input_2 >> 0x1f;\n    if ((temp_var5 | input_1) == 0) {\n      if (shifted_input == 2) {\n        input_1 = 0x54442d18;\n      }\n      else if (shifted_input == 3) {\n        input_1 = 0x54442d18;\n      }\n    }\n    else {\n      if ((temp_var4 | input_3) != 0) {\n        if (temp_var4 == 0x7ff00000) {\n          shifted_input = shifted_input - 1;\n          if (temp_var5 == 0x7ff00000) {\n            if (shifted_input < 3) {\n              return *(uint *)(&DAT_0800be68 + shifted_input * 8);\n            }\n            return 0x54442d18;\n          }\n          if (shifted_input < 3) {\n            return *(uint *)(&DAT_0800be80 + shifted_input * 8);\n          }\n          return 0;\n        }\n        if (temp_var5 != 0x7ff00000) {\n          difference = (int)(temp_var5 - temp_var4) >> 0x14;\n          if ((int)(temp_var5 - temp_var4) < 0x3d00000) {\n            if (((int)input_4 < 0) && (difference + 0x3c < 0 != subtract_overflow(difference,0x3c))) {\n              result = 0;\n            }\n            else {\n              FUN_08008894(input_1,input_2,input_3,input_4,input_4);\n              FUNC_0800b2cc();\n              result = FUN_0800af78();\n            }\n          }\n          else {\n            result = 0x3ff921fb54442d18;\n          }\n          result_high = (undefined4)((ulonglong)result >> 0x20);\n          temp_var4 = (uint)result;\n          if (shifted_input == 1) {\n            return temp_var4;\n          }\n          if (shifted_input == 2) {\n            result = FUN_080082d0(temp_var4,result_high,0x33145c07,0x3ca1a626);\n            temp_var4 = FUN_080082d0(0x54442d18,0x400921fb,(int)result,(int)((ulonglong)result >> 0x20));\n            return temp_var4;\n          }\n          if (shifted_input == 0) {\n            return temp_var4;\n          }\n          result = FUN_080082d0(temp_var4,result_high,0x33145c07,0x3ca1a626);\n          temp_var4 = FUN_080082d0((int)result,(int)((ulonglong)result >> 0x20),0x54442d18,0x400921fb);\n          return temp_var4;\n        }\n      }\n      if ((int)input_2 < 0) {\n        input_1 = 0x54442d18;\n      }\n      else {\n        input_1 = 0x54442d18;\n      }\n    }\n  }\n  else {\n    input_1 = FUN_080082d4(input_3,input_4,input_1,input_2);\n  }\n  return input_1;\n}\n\n",
            "current_name": "calculate_result_thunk_08009990",
            "entrypoint": "0x08009818",
            "imported": false,
            "improved": true,
            "renaming": {
                "SCARRY4": "subtract_overflow",
                "iVar1": "difference",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "thunk_FUN_08009990": "calculate_result_thunk_08009990",
                "uVar2": "result_high",
                "uVar3": "shifted_input",
                "uVar4": "temp_var4",
                "uVar5": "temp_var5",
                "uVar6": "result"
            },
            "skipped": false,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_08000188",
            "FUN_080001ac",
            "FUN_080001f8",
            "FUN_08000210",
            "FUN_08000220",
            "FUN_08000268",
            "FUN_080002a0",
            "FUN_080002b6",
            "FUN_080002f0",
            "FUN_08000310",
            "FUN_08000340",
            "FUN_08000374",
            "FUN_080003ec",
            "FUN_08000478",
            "FUN_080004ac",
            "FUN_080004fc",
            "FUN_0800056c",
            "FUN_080005b4",
            "FUN_0800184c",
            "FUN_080018cc",
            "FUN_080018fc",
            "FUN_0800192c",
            "FUN_0800195c",
            "FUN_08001994",
            "FUN_08001d4c",
            "FUN_08001ddc",
            "FUN_08001e98",
            "FUN_08001f00",
            "FUN_08002408",
            "FUN_080024c4",
            "FUN_080025e8",
            "FUN_08002638",
            "FUN_0800283a",
            "FUN_08002870",
            "FUN_08002896",
            "FUN_080028bc",
            "FUN_08002908",
            "FUN_08002978",
            "FUN_080029d8",
            "FUN_08002a94",
            "FUN_08002afc",
            "FUN_08002ba8",
            "FUN_08002c18",
            "FUN_08002e08",
            "FUN_08002edc",
            "FUN_08002ef0",
            "FUN_08002f24",
            "FUN_08002f40",
            "FUN_08002f74",
            "FUN_08002fac",
            "FUN_08002fd4",
            "FUN_08003004",
            "FUN_080035ec",
            "FUN_08003618",
            "FUN_0800369c",
            "FUN_080036c6",
            "FUN_080036f0",
            "FUN_08003740",
            "FUN_0800375c",
            "FUN_08003778",
            "FUN_080037fc",
            "FUN_08003826",
            "FUN_08003980",
            "FUN_080039a0",
            "FUN_080039bc",
            "FUN_08003a18",
            "FUN_08003a74",
            "FUN_08003b98",
            "FUN_08003f34",
            "FUN_08004030",
            "FUN_08004148",
            "FUN_080041a0",
            "FUN_08004228",
            "FUN_0800423c",
            "FUN_08004250",
            "FUN_080044e8",
            "FUN_080046d0",
            "FUN_08004900",
            "FUN_08004940",
            "FUN_08004bc0",
            "FUN_08004bf4",
            "FUN_08004c2a",
            "FUN_08004c48",
            "FUN_08004d2c",
            "FUN_08004d7c",
            "FUN_08004dd2",
            "FUN_08004e30",
            "FUN_080051b4",
            "FUN_08005238",
            "FUN_08005250",
            "FUN_0800525c",
            "FUN_080052ac",
            "FUN_080052dc",
            "FUN_08005324",
            "FUN_08005360",
            "FUN_080053a0",
            "FUN_08005760",
            "FUN_08005778",
            "FUN_08005790",
            "FUN_080057e4",
            "FUN_08005814",
            "FUN_0800583c",
            "FUN_0800585c",
            "FUN_0800587c",
            "FUN_080058a0",
            "FUN_08005900",
            "FUN_0800597c",
            "FUN_08005984",
            "FUN_080059b4",
            "FUN_080059f8",
            "FUN_08005a68",
            "FUN_08005a84",
            "FUN_08005a98",
            "FUN_08005bdc",
            "FUN_08005c30",
            "FUN_08005cec",
            "FUN_0800618c",
            "FUN_0800640c",
            "FUN_080064ec",
            "FUN_08006628",
            "FUN_08006680",
            "FUN_080066cc",
            "FUN_08006950",
            "FUN_08006998",
            "FUN_080069b4",
            "FUN_080069e4",
            "FUN_08006a18",
            "FUN_08006a58",
            "FUN_08006a8c",
            "FUN_08006ac0",
            "FUN_08006b00",
            "FUN_08006b54",
            "FUN_08006ba0",
            "FUN_08006c04",
            "FUN_08006c70",
            "FUN_08006c9c",
            "FUN_08006ce0",
            "FUN_08006cf6",
            "FUN_08006d2e",
            "FUN_08006d4a",
            "FUN_08006d66",
            "FUN_08006d72",
            "FUN_08006d8a",
            "FUN_08006d98",
            "FUN_08006dc4",
            "FUN_08006de0",
            "FUN_08006dfe",
            "FUN_08006e1a",
            "FUN_08006e88",
            "FUN_0800733e",
            "FUN_0800738e",
            "FUN_080073d4",
            "FUN_08007402",
            "FUN_08007430",
            "FUN_08007436",
            "FUN_080074c8",
            "FUN_08007520",
            "FUN_08007540",
            "FUN_0800756c",
            "FUN_080076c8",
            "FUN_08007756",
            "FUN_0800778c",
            "FUN_08007854",
            "FUN_08007884",
            "FUN_080078f4",
            "FUN_08007930",
            "FUN_080079c0",
            "FUN_080079e0",
            "FUN_08007a10",
            "FUN_08007a70",
            "FUN_08007ad0",
            "FUN_08007b70",
            "FUN_08007bc2",
            "FUN_08007bf0",
            "FUN_08007c40",
            "FUN_08007c5e",
            "FUN_08007c7c",
            "FUN_08007d08",
            "FUN_08007da8",
            "FUN_08007e08",
            "FUN_08007e1c",
            "FUN_08007e58",
            "FUN_08007e84",
            "FUN_08007ea4",
            "FUN_08007f54",
            "FUN_08008190",
            "FUN_08008250",
            "FUN_0800826a",
            "FUN_08008286",
            "FUN_080082d0",
            "FUN_080082d4",
            "FUN_0800854c",
            "FUN_0800856c",
            "FUN_08008590",
            "FUN_08008640",
            "FUN_0800881c",
            "FUN_08008894",
            "FUN_08008a02",
            "FUN_08008a74",
            "FUN_08008af0",
            "FUN_08008b00",
            "FUN_08008b10",
            "FUN_08008b24",
            "FUN_08008b4c",
            "FUN_08008b60",
            "FUN_08008b74",
            "FUN_08008ba0",
            "FUN_08008bf0",
            "FUN_08008c30",
            "FUN_08008cd8",
            "FUN_08008cdc",
            "FUN_08008e3c",
            "FUN_08008e44",
            "FUN_08008eec",
            "FUN_08009054",
            "FUN_0800919c",
            "FUN_080091fc",
            "FUN_08009204",
            "FUN_08009214",
            "FUN_08009228",
            "FUN_0800923c",
            "FUN_08009250",
            "FUN_08009264",
            "FUN_08009278",
            "FUN_08009318",
            "FUN_08009410",
            "FUN_080094c0",
            "FUN_080095b8",
            "FUN_08009654",
            "FUN_080096e8",
            "FUN_08009798",
            "thunk_FUN_08009990",
            "FUN_0800981c",
            "FUN_080098d0",
            "FUN_08009990",
            "FUN_08009b24",
            "FUN_08009d78",
            "FUN_0800a1bc",
            "FUN_0800a348",
            "FUN_0800a5a0",
            "FUN_0800adf0",
            "FUN_0800af78",
            "FUN_0800b2d4",
            "FUN_0800b2e0",
            "FUN_0800b2e8",
            "FUN_0800b3dc",
            "FUN_0800b3e8",
            "FUN_0800b430",
            "FUN_0800b524"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 927647
}