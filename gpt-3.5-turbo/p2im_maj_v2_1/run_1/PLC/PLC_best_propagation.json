{
    "functions": {
        "FUN_080001ac": {
            "additional_data": {
                "DAT_20000104": {
                    "data_flag": 2,
                    "data_status": 1,
                    "flag": 16,
                    "flag_data": 1,
                    "flag_variable": 3,
                    "is_data_initialized": 1
                },
                "FUN_080001ac": {
                    "initialize_data": 1,
                    "initialize_data_flag": 2,
                    "initialize_data_if_empty": 1,
                    "initialize_data_if_needed": 2,
                    "initialize_flag": 17,
                    "initialize_flag_if_not_set": 2,
                    "set_flag_if_not_set": 1,
                    "set_flag_if_unset": 1,
                    "update_data_if_needed": 1,
                    "update_data_status": 1,
                    "update_flag": 1,
                    "update_flag_if_unset": 1
                },
                "param_1": {
                    "data": 1,
                    "input": 15,
                    "input_data": 3,
                    "input_flag": 2,
                    "input_param": 1,
                    "input_parameter": 4,
                    "input_value": 4,
                    "status": 1
                }
            },
            "called": [
                "FUN_080059f8"
            ],
            "calling": [],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080001b8) */\n\nundefined4 initialize_flag_if_not_set_080001ac(undefined4 input)\n\n{\n  if ((char)DAT_20000104 == '\\0') {\n    DAT_20000104._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "current_name": "initialize_flag_if_not_set_080001ac",
            "entrypoint": "0x080001ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080001ac": "initialize_flag_if_not_set_080001ac",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000230": {
            "additional_data": {
                "FUN_08000230": {
                    "decode_bytes": 1,
                    "decode_data": 1,
                    "find_byte_sequence": 25,
                    "find_next_byte": 1,
                    "find_next_match": 1,
                    "find_sequence": 1,
                    "reverse_and_find_byte_sequence": 1
                },
                "bVar1": {
                    "byte_val": 2,
                    "byte_value": 2,
                    "current_byte": 27
                },
                "bVar13": {
                    "b1": 1,
                    "bit1": 1,
                    "bit_0_xor": 1,
                    "bit_1": 1,
                    "bit_check_result_0": 1,
                    "byte1_flag2": 1,
                    "byte_1_set": 1,
                    "cond5": 1,
                    "condition_1": 1,
                    "flag5": 1,
                    "flag_1": 1,
                    "is_aligned_byte2_not_zero": 1,
                    "is_byte4_zero": 1,
                    "is_byte_4": 1,
                    "is_byte_equal_4": 1,
                    "is_byte_second_zero": 1,
                    "is_nonzero": 1,
                    "is_nonzero_1": 1,
                    "is_not_zero_8bit": 1,
                    "is_second_char_nonzero": 1,
                    "is_zero": 1,
                    "mask_bit_1": 1,
                    "mid_high_byte_condition": 1,
                    "not_zero_1": 1,
                    "second_lower_byte_set": 1,
                    "temp_flag1": 1,
                    "toggle_1": 1,
                    "var_13": 1
                },
                "bVar14": {
                    "b2": 1,
                    "bit2": 1,
                    "bit_8_xor": 1,
                    "bit_9": 1,
                    "bit_check_result_8": 1,
                    "byte2_flag2": 1,
                    "byte_2_set": 1,
                    "cond6": 1,
                    "condition_2": 1,
                    "flag6": 1,
                    "flag_2": 1,
                    "is_aligned_byte2_not_zero_in_8th_bit": 1,
                    "is_byte5_zero": 1,
                    "is_byte_5": 1,
                    "is_byte_equal_5": 1,
                    "is_byte_second_zero_second": 1,
                    "is_nonzero": 1,
                    "is_nonzero_2": 1,
                    "is_not_zero_16bit": 1,
                    "is_third_char_nonzero": 1,
                    "is_zero2": 1,
                    "mask_bit_2": 1,
                    "mid_low_byte_condition": 1,
                    "not_zero_2": 1,
                    "second_upper_byte_set": 1,
                    "temp_flag2": 1,
                    "toggle_2": 1,
                    "var_14": 1
                },
                "bVar15": {
                    "b3": 1,
                    "bit3": 1,
                    "bit_16_xor": 1,
                    "bit_17": 1,
                    "bit_check_result_16": 1,
                    "byte3_flag2": 1,
                    "byte_3_set": 1,
                    "cond7": 1,
                    "condition_3": 1,
                    "final_byte_check1": 1,
                    "flag7": 1,
                    "flag_3": 1,
                    "is_aligned_byte2_not_zero_in_16th_bit": 1,
                    "is_byte6_zero": 1,
                    "is_byte_6": 1,
                    "is_byte_equal_6": 1,
                    "is_byte_second_zero_third": 1,
                    "is_fourth_char_nonzero": 1,
                    "is_nonzero": 1,
                    "is_nonzero_3": 1,
                    "is_not_zero_24bit": 1,
                    "is_zero3": 1,
                    "low_byte_condition": 1,
                    "mask_bit_3": 1,
                    "not_zero_3": 1,
                    "temp_flag3": 1,
                    "third_upper_byte_set": 1,
                    "toggle_3": 1,
                    "var_15": 1
                },
                "bVar16": {
                    "b4": 1,
                    "bit4": 1,
                    "bit_24_xor": 1,
                    "bit_25": 1,
                    "bit_check_result_24": 1,
                    "byte4_flag2": 1,
                    "byte_4_set": 1,
                    "cond8": 1,
                    "condition_4": 1,
                    "final_byte_check2": 1,
                    "flag8": 1,
                    "flag_4": 1,
                    "fourth_upper_byte_set": 1,
                    "high_byte_condition": 1,
                    "is_aligned_byte2_not_zero_in_24th_bit": 1,
                    "is_byte7_zero": 1,
                    "is_byte_7": 1,
                    "is_byte_equal_7": 1,
                    "is_byte_second_zero_fourth": 1,
                    "is_fifth_char_nonzero": 1,
                    "is_nonzero": 1,
                    "is_nonzero_4": 1,
                    "is_not_zero_32bit": 1,
                    "is_zero4": 1,
                    "mask_bit_4": 1,
                    "not_zero_4": 1,
                    "temp_flag4": 1,
                    "toggle_4": 1,
                    "var_16": 1
                },
                "bVar17": {
                    "temp_bool_1": 1
                },
                "bVar18": {
                    "temp_bool_2": 1
                },
                "bVar19": {
                    "temp_bool_3": 1
                },
                "bVar20": {
                    "temp_bool_4": 1
                },
                "cVar2": {
                    "bit_0": 2,
                    "bit_0_result": 1,
                    "bit_check_0": 1,
                    "byte_1_flag": 1,
                    "c_var2": 1,
                    "char_cond_1": 1,
                    "cond1": 1,
                    "cond_1": 1,
                    "find_flag_1": 1,
                    "first_byte_check1": 1,
                    "first_comparison_result": 1,
                    "flag1": 1,
                    "high_byte_check": 1,
                    "is_byte0_zero": 1,
                    "is_byte_0": 1,
                    "is_byte_equal_0": 1,
                    "is_byte_zero": 1,
                    "is_first_byte_zero": 1,
                    "is_first_char_zero": 1,
                    "is_zero": 2,
                    "is_zero_1": 1,
                    "mask0": 1,
                    "mask1": 2,
                    "mask_1": 3,
                    "mask_7": 1
                },
                "cVar3": {
                    "bit_8": 2,
                    "bit_8_result": 1,
                    "bit_check_8": 1,
                    "byte_2_flag": 1,
                    "c_var3": 1,
                    "char_cond_2": 1,
                    "cond2": 1,
                    "cond_2": 1,
                    "find_flag_2": 1,
                    "first_byte_check2": 1,
                    "flag2": 1,
                    "is_byte1_zero": 1,
                    "is_byte_1": 1,
                    "is_byte_equal_1": 1,
                    "is_byte_zero_second": 1,
                    "is_second_byte_zero": 1,
                    "is_second_char_zero": 1,
                    "is_zero": 1,
                    "is_zero_2": 1,
                    "is_zero_8bit": 1,
                    "mask1": 1,
                    "mask2": 2,
                    "mask_15": 1,
                    "mask_2": 3,
                    "mid_high_byte_check": 1,
                    "second_comparison_result": 1
                },
                "cVar4": {
                    "bit_16": 2,
                    "bit_16_result": 1,
                    "bit_check_16": 1,
                    "byte_3_flag": 1,
                    "c_var4": 1,
                    "char_cond_3": 1,
                    "cond3": 1,
                    "cond_3": 1,
                    "find_flag_3": 1,
                    "first_byte_check3": 1,
                    "flag3": 1,
                    "is_byte2_zero": 1,
                    "is_byte_2": 1,
                    "is_byte_equal_2": 1,
                    "is_byte_zero_third": 1,
                    "is_third_byte_zero": 1,
                    "is_third_char_zero": 1,
                    "is_zero": 1,
                    "is_zero_16bit": 1,
                    "is_zero_3": 1,
                    "mask2": 1,
                    "mask3": 2,
                    "mask_23": 1,
                    "mask_3": 3,
                    "mid_low_byte_check": 1,
                    "third_comparison_result": 1
                },
                "cVar5": {
                    "bit_24": 2,
                    "bit_24_result": 1,
                    "bit_check_24": 1,
                    "byte_4_flag": 1,
                    "c_var5": 1,
                    "char_cond_4": 1,
                    "cond4": 1,
                    "cond_4": 1,
                    "find_flag_4": 1,
                    "first_byte_check4": 1,
                    "flag4": 1,
                    "fourth_comparison_result": 1,
                    "is_byte3_zero": 1,
                    "is_byte_3": 1,
                    "is_byte_equal_3": 1,
                    "is_byte_zero_fourth": 1,
                    "is_fourth_byte_zero": 1,
                    "is_fourth_char_zero": 1,
                    "is_zero": 1,
                    "is_zero_24bit": 1,
                    "is_zero_4": 1,
                    "low_byte_check": 1,
                    "mask3": 1,
                    "mask4": 2,
                    "mask_31": 1,
                    "mask_4": 3
                },
                "param_1": {
                    "buffer": 3,
                    "byte_sequence": 2,
                    "data": 15,
                    "data_ptr": 3,
                    "input": 1,
                    "input_array": 2,
                    "input_data": 4,
                    "source": 1
                },
                "param_2": {
                    "byte_sequence": 1,
                    "byte_to_find": 11,
                    "search_byte": 3,
                    "target": 2,
                    "target_byte": 12,
                    "target_value": 2
                },
                "param_3": {
                    "array_length": 2,
                    "buffer_size": 1,
                    "data_length": 7,
                    "data_size": 3,
                    "length": 13,
                    "sequence_length": 2,
                    "size": 3
                },
                "pbVar6": {
                    "byte_match_found": 1,
                    "byte_sequence": 1,
                    "curr_ptr": 1,
                    "current_addr": 1,
                    "current_ptr": 1,
                    "found_byte": 1,
                    "found_byte_ptr": 1,
                    "next_byte": 8,
                    "next_byte_pointer": 1,
                    "next_byte_ptr": 6,
                    "result": 7,
                    "result_pointer": 1
                },
                "pbVar8": {
                    "byte_ptr": 1,
                    "current_byte_back": 1,
                    "current_ptr": 1,
                    "found_byte_ptr": 1,
                    "found_ptr": 1,
                    "matching_byte": 2,
                    "next_byte_pointer": 1,
                    "next_byte_ptr": 1,
                    "next_pointer": 1,
                    "result": 7,
                    "result_pointer": 2,
                    "result_ptr": 7,
                    "return_addr": 1,
                    "return_byte": 1,
                    "return_ptr": 1,
                    "temp_result": 2
                },
                "puVar7": {
                    "buffer_ptr": 1,
                    "current_address": 1,
                    "current_byte": 2,
                    "current_data_ptr": 2,
                    "current_int": 1,
                    "current_pointer": 3,
                    "current_position": 1,
                    "current_ptr": 3,
                    "current_word": 1,
                    "current_word_ptr": 2,
                    "data_ptr": 4,
                    "input_ptr": 1,
                    "next_data": 1,
                    "next_ptr": 2,
                    "next_sequence": 1,
                    "next_uint_ptr": 1,
                    "p_data": 1,
                    "ptr": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1
                },
                "uVar10": {
                    "aligned_data_length": 1,
                    "aligned_data_size": 1,
                    "aligned_length": 7,
                    "aligned_size": 2,
                    "buffer_size_aligned": 1,
                    "data_length_aligned": 2,
                    "data_mod_8": 1,
                    "data_size_aligned": 1,
                    "length_aligned": 3,
                    "length_mod_8": 1,
                    "length_remainder": 2,
                    "loop_count": 1,
                    "processed_length": 1,
                    "remaining_data_length": 1,
                    "remaining_length": 3,
                    "remaining_size": 2,
                    "rounded_length": 1
                },
                "uVar11": {
                    "aligned_byte_1": 1,
                    "byte_comparison_result": 1,
                    "byte_xor_result": 1,
                    "comparison_result": 1,
                    "current_data": 1,
                    "data_xor1": 1,
                    "decrypted1": 1,
                    "first_xor_result": 1,
                    "mask1": 1,
                    "masked_val": 1,
                    "masked_value_1": 1,
                    "result": 1,
                    "temp1": 1,
                    "temp_value_1": 1,
                    "value1": 1,
                    "word1": 1,
                    "word_1": 1,
                    "xor_byte_1": 1,
                    "xor_result": 1,
                    "xor_result1": 3,
                    "xor_result_1": 7,
                    "xored_byte1": 1,
                    "xored_val_1": 1
                },
                "uVar12": {
                    "aligned_byte_2": 1,
                    "current_data_back": 1,
                    "data_xor2": 1,
                    "decrypted2": 1,
                    "high_byte_result": 1,
                    "mask2": 1,
                    "masked_val2": 1,
                    "masked_value_2": 1,
                    "second_byte_xor_result": 1,
                    "second_xor_result": 1,
                    "temp2": 1,
                    "temp_result": 1,
                    "temp_value_2": 1,
                    "value2": 1,
                    "word2": 1,
                    "word_2": 1,
                    "xor_byte_2": 1,
                    "xor_result": 2,
                    "xor_result2": 3,
                    "xor_result_2": 7,
                    "xored_byte2": 1,
                    "xored_val_2": 1
                },
                "uVar13": {
                    "bit_24_cond": 1,
                    "combined_result1": 1,
                    "mid_high_byte_result": 1,
                    "temp_1": 1
                },
                "uVar14": {
                    "bit_16_cond": 1,
                    "combined_result2": 1,
                    "mid_low_byte_result": 1,
                    "temp_2": 1
                },
                "uVar15": {
                    "bit_8_cond": 1,
                    "low_byte_result": 1,
                    "temp_3": 1
                },
                "uVar16": {
                    "bit_0_cond": 1,
                    "temp_4": 1
                },
                "uVar9": {
                    "address_remainder": 1,
                    "align_offset": 1,
                    "alignment": 8,
                    "array_alignment": 1,
                    "buffer_alignment": 1,
                    "buffer_offset": 2,
                    "data_offset": 2,
                    "input_data_aligned": 1,
                    "offset": 3,
                    "padding": 1,
                    "pointer_alignment": 1,
                    "position_mod_8": 1,
                    "ptr_alignment": 2,
                    "ptr_alignment_offset": 1,
                    "remainder": 3,
                    "sequence_alignment": 1,
                    "start_offset": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004d9c",
                "FUN_08004a84"
            ],
            "code": "\nbyte * reverse_and_find_byte_sequence_08000230(uint *data,uint target_byte,uint length)\n\n{\n  byte current_byte;\n  char mask_1;\n  char mask_2;\n  char mask_3;\n  char mask_4;\n  byte *next_byte;\n  uint *data_ptr;\n  byte *result_ptr;\n  uint alignment;\n  uint aligned_length;\n  uint xor_result_1;\n  uint xor_result_2;\n  bool bit_0_xor;\n  bool not_zero_2;\n  bool flag7;\n  bool cond8;\n  \n  target_byte = target_byte & 0xff;\n  if ((int)length < 0x10) {\njoined_r0x08000290:\n    do {\n      if (length == 0) {\n        return (byte *)0x0;\n      }\n      data_ptr = (uint *)((int)data + 1);\n      current_byte = *(byte *)data;\n      length = length - 1;\n      data = data_ptr;\n    } while (current_byte != target_byte);\n  }\n  else {\n    alignment = (uint)data & 7;\n    while( true ) {\n      if (alignment == 0) {\n        alignment = target_byte | target_byte << 8;\n        alignment = alignment | alignment << 0x10;\n        aligned_length = length & 0xfffffff8;\n        do {\n          data_ptr = data + 2;\n          aligned_length = aligned_length - 8;\n          xor_result_1 = *data ^ alignment;\n          xor_result_2 = data[1] ^ alignment;\n          mask_1 = -((char)xor_result_1 == '\\0');\n          mask_2 = -((char)(xor_result_1 >> 8) == '\\0');\n          mask_3 = -((char)(xor_result_1 >> 0x10) == '\\0');\n          mask_4 = -((char)(xor_result_1 >> 0x18) == '\\0');\n          xor_result_1 = CONCAT13(mask_4,CONCAT12(mask_3,CONCAT11(mask_2,mask_1)));\n          bit_0_xor = (char)xor_result_2 != '\\0';\n          not_zero_2 = (char)(xor_result_2 >> 8) != '\\0';\n          flag7 = (char)(xor_result_2 >> 0x10) != '\\0';\n          cond8 = (char)(xor_result_2 >> 0x18) != '\\0';\n          xor_result_2 = CONCAT13(cond8 * mask_4 - !cond8,\n                            CONCAT12(flag7 * mask_3 - !flag7,\n                                     CONCAT11(not_zero_2 * mask_2 - !not_zero_2,bit_0_xor * mask_1 - !bit_0_xor)));\n          if (xor_result_2 != 0) {\n            if (xor_result_1 == 0) {\n              result_ptr = (byte *)((int)data + 5);\n              xor_result_1 = xor_result_2;\n            }\n            else {\n              result_ptr = (byte *)((int)data + 1);\n            }\n            if ((xor_result_1 & 1) == 0) {\n              bit_0_xor = (xor_result_1 & 0x100) == 0;\n              next_byte = result_ptr + 1;\n              if (bit_0_xor) {\n                bit_0_xor = (xor_result_1 & 0x18000) == 0;\n                next_byte = result_ptr + 2;\n              }\n              result_ptr = next_byte;\n              if (bit_0_xor) {\n                result_ptr = result_ptr + 1;\n              }\n            }\n            return result_ptr + -1;\n          }\n          data = data_ptr;\n        } while (aligned_length != 0);\n        length = length & 7;\n        goto joined_r0x08000290;\n      }\n      data_ptr = (uint *)((int)data + 1);\n      length = length - 1;\n      if (*(byte *)data == target_byte) break;\n      alignment = (uint)data_ptr & 7;\n      data = data_ptr;\n      if (length == 0) {\n        return (byte *)0x0;\n      }\n    }\n  }\n  return (byte *)((int)data_ptr + -1);\n}\n\n",
            "current_name": "reverse_and_find_byte_sequence_08000230",
            "entrypoint": "0x08000230",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000230": "reverse_and_find_byte_sequence_08000230",
                "bVar1": "current_byte",
                "bVar13": "bit_0_xor",
                "bVar14": "not_zero_2",
                "bVar15": "flag7",
                "bVar16": "cond8",
                "cVar2": "mask_1",
                "cVar3": "mask_2",
                "cVar4": "mask_3",
                "cVar5": "mask_4",
                "param_1": "data",
                "param_2": "target_byte",
                "param_3": "length",
                "pbVar6": "next_byte",
                "pbVar8": "result_ptr",
                "puVar7": "data_ptr",
                "uVar10": "aligned_length",
                "uVar11": "xor_result_1",
                "uVar12": "xor_result_2",
                "uVar9": "alignment"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080002d0": {
            "additional_data": {
                "CONCAT44": {
                    "combine_results": 1
                },
                "FUN_080002d0": {
                    "calculate_dividend": 1,
                    "calculate_division": 2,
                    "calculate_final_result": 1,
                    "calculate_quotient": 1,
                    "calculate_result": 19,
                    "divide_and_combine": 1,
                    "divide_and_concat": 2,
                    "divide_and_concat_numbers": 1,
                    "divmod": 2
                },
                "FUN_08000300": {
                    "compute_divmod": 1
                },
                "__udivmoddi4": {
                    "perform_division": 2
                },
                "param_1": {
                    "dividend": 5,
                    "dividend1": 1,
                    "input1": 10,
                    "input_1": 9,
                    "input_param_1": 1,
                    "num1": 4,
                    "number1": 1
                },
                "param_2": {
                    "dividend2": 1,
                    "divisor": 4,
                    "input2": 10,
                    "input_2": 9,
                    "input_param_2": 1,
                    "num2": 4,
                    "number2": 1,
                    "remainder": 1
                },
                "param_3": {
                    "dividend1": 1,
                    "divisor1": 1,
                    "divisor_1": 1,
                    "input3": 8,
                    "input_3": 9,
                    "input_param_3": 1,
                    "num3": 2,
                    "number3": 1,
                    "param3": 3,
                    "quotient": 3,
                    "quotient_1": 1
                },
                "param_4": {
                    "dividend2": 1,
                    "divisor2": 1,
                    "divisor_2": 1,
                    "input4": 8,
                    "input_4": 9,
                    "input_param_4": 1,
                    "num4": 2,
                    "number4": 1,
                    "param4": 3,
                    "quotient_2": 1,
                    "remainder": 3
                },
                "uVar1": {
                    "quotient": 1,
                    "result": 28
                }
            },
            "called": [
                "FUN_08000300"
            ],
            "calling": [
                "FUN_080023b4"
            ],
            "code": "\nundefined8 calculate_final_result_080002d0(int input1,int input2,int input_3,int input_4)\n\n{\n  undefined8 result;\n  \n  if ((input_4 == 0) && (input_3 == 0)) {\n    if (input2 != 0 || input1 != 0) {\n      input2 = -1;\n      input1 = -1;\n    }\n    return combine_results(input2,input1);\n  }\n  result = perform_division();\n  return result;\n}\n\n",
            "current_name": "calculate_final_result_080002d0",
            "entrypoint": "0x080002d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "CONCAT44": "combine_results",
                "FUN_080002d0": "calculate_final_result_080002d0",
                "__udivmoddi4": "perform_division",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000300": {
            "additional_data": {
                "CARRY4": {
                    "is_overflow": 1
                },
                "FUN_08000300": {
                    "calculate_division_remainder_quotient": 1,
                    "calculate_quotient_and_remainder": 1,
                    "divide_and_remainder": 5,
                    "divide_numbers": 1,
                    "divide_uintegers": 1,
                    "divide_unsigned": 1,
                    "divide_unsigned_long_long": 1,
                    "divide_with_remainder": 12,
                    "divide_with_remainder_32bit": 1,
                    "division_algorithm": 1,
                    "division_with_remainder": 4,
                    "unsigned_long_division": 2
                },
                "LZCOUNT": {
                    "leading_zero_count": 1
                },
                "bVar11": {
                    "carry": 6,
                    "carry_flag": 15,
                    "has_carry": 1,
                    "is_carry": 6
                },
                "bVar12": {
                    "carry_flag": 2
                },
                "iVar10": {
                    "bit_shifting_amount": 1,
                    "bit_shifts": 1,
                    "count": 2,
                    "leading_zero_count": 1,
                    "leading_zeros": 1,
                    "shift": 5,
                    "shift_amount": 6,
                    "shift_count": 10,
                    "shiftcount": 1
                },
                "iVar11": {
                    "leading_zeros": 1,
                    "shift_count": 1
                },
                "param_1": {
                    "dividend": 31
                },
                "param_2": {
                    "dividend_bit_lower": 1,
                    "dividend_high": 11,
                    "dividend_high_word": 1,
                    "dividend_low": 5,
                    "dividend_lower": 2,
                    "dividend_lower32": 1,
                    "dividend_lower_bits": 1,
                    "dividend_upper": 1,
                    "dividend_upper_bits": 1,
                    "dividend_upper_half": 2,
                    "divisor": 3,
                    "divisor_high": 1,
                    "quotient_lo": 1
                },
                "param_3": {
                    "dividend_higher": 1,
                    "divisor": 26,
                    "divisor_high": 1,
                    "divisor_low": 1,
                    "quotient": 2
                },
                "param_4": {
                    "divisor_bit_lower": 1,
                    "divisor_high": 11,
                    "divisor_high_word": 1,
                    "divisor_higher": 1,
                    "divisor_low": 5,
                    "divisor_lower": 2,
                    "divisor_lower16": 1,
                    "divisor_upper": 1,
                    "divisor_upper_bits": 1,
                    "divisor_upper_half": 1,
                    "limit": 1,
                    "quotient_high": 1,
                    "remainder": 3,
                    "remainder_hi": 1
                },
                "param_5": {
                    "quotient": 2,
                    "quotient_and_remainder": 7,
                    "quotient_hi": 1,
                    "quotient_low": 1,
                    "remainder": 15,
                    "remainder_output": 1,
                    "remainder_pointer": 1,
                    "remainder_quotient": 1,
                    "result": 1,
                    "result_array": 1
                },
                "uVar1": {
                    "final_quotient": 1,
                    "final_result": 1,
                    "quotient": 8,
                    "quotient_high": 4,
                    "quotient_low": 2,
                    "quotient_low_word": 1,
                    "quotient_lower_bits": 1,
                    "quotient_upper": 1,
                    "result": 10,
                    "result64": 1,
                    "result_low": 1
                },
                "uVar10": {
                    "bit_shift_amount": 1,
                    "divisor_high_temp": 2,
                    "divisor_partial": 1,
                    "quotient_high_word_final_2": 1,
                    "temp_4": 1
                },
                "uVar11": {
                    "partial": 1
                },
                "uVar12": {
                    "product": 1,
                    "shifted_divisor_lower": 1
                },
                "uVar13": {
                    "dividend_higher_shifted": 1,
                    "product_partial": 1,
                    "temp": 2
                },
                "uVar14": {
                    "multiplier_temp": 1,
                    "temp_2": 1
                },
                "uVar15": {
                    "remainder_low": 1
                },
                "uVar16": {
                    "remainder_high": 1
                },
                "uVar2": {
                    "dividend_higher": 1,
                    "mul_result": 1,
                    "quotient": 4,
                    "quotient_high": 2,
                    "quotient_high_word": 1,
                    "quotient_higher": 1,
                    "quotient_low": 2,
                    "quotient_lower": 1,
                    "quotient_upper": 1,
                    "temp1": 9,
                    "temp_1": 4,
                    "temp_dividend_high": 1,
                    "temp_var": 1,
                    "temp_var_1": 1,
                    "tmp1": 1
                },
                "uVar3": {
                    "dividend_upper16": 1,
                    "mul_result_bits": 1,
                    "quotient": 1,
                    "quotient_1": 2,
                    "quotient_bits": 1,
                    "quotient_high": 1,
                    "quotient_high1": 1,
                    "quotient_high_temp": 1,
                    "quotient_lo_new": 1,
                    "quotient_low": 5,
                    "quotient_low_temp": 1,
                    "quotient_low_word_temp": 1,
                    "quotient_lower": 1,
                    "quotient_lower_half": 1,
                    "quotient_parts": 1,
                    "temp1": 3,
                    "temp2": 5,
                    "temp_2": 2,
                    "tmp2": 1
                },
                "uVar4": {
                    "mul_quotient": 1,
                    "quotient": 1,
                    "quotient_2": 1,
                    "quotient_div": 1,
                    "quotient_high": 2,
                    "quotient_high2": 1,
                    "quotient_high_temp": 1,
                    "quotient_high_word_temp": 1,
                    "quotient_low": 2,
                    "quotient_low_temp": 1,
                    "quotient_upper_half": 1,
                    "remainder_1": 1,
                    "remainder_hi_new": 1,
                    "remainder_high": 1,
                    "remainder_parts": 1,
                    "temp": 1,
                    "temp1": 1,
                    "temp2": 4,
                    "temp3": 4,
                    "temp_1": 1,
                    "temp_2": 1,
                    "temp_3": 1,
                    "tmp3": 1
                },
                "uVar5": {
                    "mul_remainder": 1,
                    "quotient": 1,
                    "quotient_low_word_final": 1,
                    "quotient_lower": 1,
                    "quotient_mul": 1,
                    "remainder": 3,
                    "remainder_low": 2,
                    "remainder_low1": 1,
                    "remainder_lower_half": 1,
                    "temp": 1,
                    "temp1": 1,
                    "temp2": 3,
                    "temp3": 3,
                    "temp4": 4,
                    "temp_2": 2,
                    "temp_3": 1,
                    "temp_4": 1,
                    "temp_remainder_high": 1,
                    "tmp4": 1,
                    "u_var5": 1
                },
                "uVar6": {
                    "quotient1": 1,
                    "quotient_1": 1,
                    "quotient_2": 1,
                    "quotient_candidate": 1,
                    "quotient_carry": 1,
                    "quotient_global": 1,
                    "quotient_high_word_final": 1,
                    "quotient_lo_temp": 1,
                    "quotient_mid": 1,
                    "quotient_middle": 1,
                    "quotient_partial": 1,
                    "quotient_temp": 1,
                    "remainder_low2": 1,
                    "remainder_upper_half": 1,
                    "temp2": 2,
                    "temp3": 3,
                    "temp4": 2,
                    "temp5": 4,
                    "temp_3": 2,
                    "temp_5": 1,
                    "temp_low": 1,
                    "tmp5": 1,
                    "u_var6": 1
                },
                "uVar7": {
                    "dividend_partial": 1,
                    "multiplier": 1,
                    "quotient1_high": 1,
                    "quotient_hi_temp": 1,
                    "quotient_high": 1,
                    "quotient_low_word_temp_2": 1,
                    "remainder_1": 1,
                    "remainder_2": 1,
                    "remainder_candidate": 1,
                    "remainder_high1": 1,
                    "remainder_middle": 1,
                    "temp1": 1,
                    "temp3": 2,
                    "temp4": 4,
                    "temp5": 2,
                    "temp6": 4,
                    "temp_4": 2,
                    "temp_6": 1,
                    "temp_high": 1,
                    "temp_var_2": 1,
                    "tmp6": 1,
                    "u_var7": 1
                },
                "uVar8": {
                    "dividend_low": 1,
                    "dividend_parts": 1,
                    "divisor_high": 3,
                    "divisor_low": 2,
                    "quotient2": 1,
                    "quotient_2": 1,
                    "quotient_high": 2,
                    "quotient_high_word_temp_2": 1,
                    "quotient_lower16": 1,
                    "remainder_high2": 1,
                    "temp2": 1,
                    "temp4": 1,
                    "temp5": 2,
                    "temp6": 2,
                    "temp7": 4,
                    "temp_3": 1,
                    "temp_5": 1,
                    "temp_7": 1,
                    "temp_divisor": 1,
                    "tmp7": 1,
                    "tmp_higher": 1,
                    "u_var8": 1
                },
                "uVar9": {
                    "divisor_low": 2,
                    "divisor_low_temp": 2,
                    "divisor_lower": 1,
                    "divisor_lower_half": 1,
                    "divisor_middle": 1,
                    "divisor_upper16": 1,
                    "quotient2_high": 1,
                    "quotient_3": 1,
                    "quotient_low_word_final_2": 1,
                    "rem_high": 1,
                    "remainder_2": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp5": 1,
                    "temp6": 2,
                    "temp7": 2,
                    "temp8": 4,
                    "temp_5": 1,
                    "temp_6": 1,
                    "temp_8": 1,
                    "temp_divisor": 1,
                    "tmp8": 1,
                    "tmp_lower": 1,
                    "u_var9": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080002d0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080005aa) */\n\nulonglong divide_with_remainder_32bit_08000300(uint dividend,uint dividend_high,uint divisor,uint divisor_high,uint *remainder)\n\n{\n  ulonglong result;\n  uint temp1;\n  uint quotient_low;\n  uint temp2;\n  uint temp4;\n  uint temp5;\n  uint temp4;\n  uint temp7;\n  uint temp8;\n  int shift_count;\n  bool carry_flag;\n  \n  if (divisor_high == 0) {\n    if (dividend_high < divisor) {\n      shift_count = leading_zero_count(divisor);\n      if (shift_count != 0) {\n        divisor = divisor << shift_count;\n        dividend_high = dividend >> (0x20U - shift_count & 0xff) | dividend_high << shift_count;\n        dividend = dividend << shift_count;\n      }\n      temp7 = divisor >> 0x10;\n      temp5 = dividend_high / temp7;\n      temp4 = dividend >> 0x10 | (dividend_high - temp7 * temp5) * 0x10000;\n      temp2 = temp5 * (divisor & 0xffff);\n      quotient_low = temp5;\n      if (temp4 <= temp2 && temp2 - temp4 != 0) {\n        carry_flag = is_overflow(temp4,divisor);\n        temp4 = temp4 + divisor;\n        quotient_low = temp5 - 1;\n        if ((carry_flag == false) && (temp4 <= temp2 && temp2 - temp4 != 0)) {\n          quotient_low = temp5 - 2;\n          temp4 = temp4 + divisor;\n        }\n      }\n      temp5 = (temp4 - temp2) / temp7;\n      temp4 = dividend & 0xffff | ((temp4 - temp2) - temp7 * temp5) * 0x10000;\n      temp7 = temp5 * (divisor & 0xffff);\n      temp2 = temp5;\n      if (temp4 <= temp7 && temp7 - temp4 != 0) {\n        carry_flag = is_overflow(temp4,divisor);\n        temp4 = temp4 + divisor;\n        temp2 = temp5 - 1;\n        if ((carry_flag == false) && (temp4 <= temp7 && temp7 - temp4 != 0)) {\n          temp2 = temp5 - 2;\n          temp4 = temp4 + divisor;\n        }\n      }\n      temp4 = temp4 - temp7;\n      temp2 = temp2 | quotient_low << 0x10;\n      quotient_low = 0;\n    }\n    else {\n      if (divisor == 0) {\n        divisor = 1 / 0;\n      }\n      shift_count = leading_zero_count(divisor);\n      if (shift_count == 0) {\n        dividend_high = dividend_high - divisor;\n        temp4 = divisor >> 0x10;\n        temp8 = divisor & 0xffff;\n        quotient_low = 1;\n      }\n      else {\n        divisor = divisor << shift_count;\n        temp4 = divisor >> 0x10;\n        temp2 = dividend_high >> (0x20U - shift_count & 0xff);\n        temp4 = dividend >> (0x20U - shift_count & 0xff) | dividend_high << shift_count;\n        quotient_low = temp2 / temp4;\n        temp8 = divisor & 0xffff;\n        temp7 = temp4 >> 0x10 | (temp2 - temp4 * quotient_low) * 0x10000;\n        temp5 = quotient_low * temp8;\n        dividend = dividend << shift_count;\n        temp2 = quotient_low;\n        if (temp7 <= temp5 && temp5 - temp7 != 0) {\n          carry_flag = is_overflow(temp7,divisor);\n          temp7 = temp7 + divisor;\n          temp2 = quotient_low - 1;\n          if ((carry_flag == false) && (temp7 <= temp5 && temp5 - temp7 != 0)) {\n            temp2 = quotient_low - 2;\n            temp7 = temp7 + divisor;\n          }\n        }\n        temp1 = (temp7 - temp5) / temp4;\n        dividend_high = temp4 & 0xffff | ((temp7 - temp5) - temp4 * temp1) * 0x10000;\n        temp5 = temp1 * temp8;\n        quotient_low = temp1;\n        if (dividend_high <= temp5 && temp5 - dividend_high != 0) {\n          carry_flag = is_overflow(dividend_high,divisor);\n          dividend_high = dividend_high + divisor;\n          quotient_low = temp1 - 1;\n          if ((carry_flag == false) && (dividend_high <= temp5 && temp5 - dividend_high != 0)) {\n            quotient_low = temp1 - 2;\n            dividend_high = dividend_high + divisor;\n          }\n        }\n        dividend_high = dividend_high - temp5;\n        quotient_low = quotient_low | temp2 << 0x10;\n      }\n      temp4 = dividend_high / temp4;\n      temp7 = dividend >> 0x10 | (dividend_high - temp4 * temp4) * 0x10000;\n      temp2 = temp8 * temp4;\n      temp5 = temp4;\n      if (temp7 <= temp2 && temp2 - temp7 != 0) {\n        carry_flag = is_overflow(temp7,divisor);\n        temp7 = temp7 + divisor;\n        temp5 = temp4 - 1;\n        if ((carry_flag == false) && (temp7 <= temp2 && temp2 - temp7 != 0)) {\n          temp5 = temp4 - 2;\n          temp7 = temp7 + divisor;\n        }\n      }\n      temp4 = (temp7 - temp2) / temp4;\n      temp4 = dividend & 0xffff | ((temp7 - temp2) - temp4 * temp4) * 0x10000;\n      temp8 = temp8 * temp4;\n      temp2 = temp4;\n      if (temp4 <= temp8 && temp8 - temp4 != 0) {\n        carry_flag = is_overflow(temp4,divisor);\n        temp4 = temp4 + divisor;\n        temp2 = temp4 - 1;\n        if ((carry_flag == false) && (temp4 <= temp8 && temp8 - temp4 != 0)) {\n          temp2 = temp4 - 2;\n          temp4 = temp4 + divisor;\n        }\n      }\n      temp4 = temp4 - temp8;\n      temp2 = temp2 | temp5 << 0x10;\n    }\n    if (remainder != (uint *)0x0) {\n      *remainder = temp4 >> shift_count;\n      remainder[1] = 0;\n      return CONCAT44(quotient_low,temp2);\n    }\n  }\n  else if (dividend_high < divisor_high) {\n    if (remainder != (uint *)0x0) {\n      *remainder = dividend;\n      remainder[1] = dividend_high;\n      return 0;\n    }\n    temp2 = 0;\n    quotient_low = 0;\n  }\n  else {\n    shift_count = leading_zero_count(divisor_high);\n    if (shift_count != 0) {\n      temp7 = 0x20 - shift_count;\n      quotient_low = divisor >> (temp7 & 0xff) | divisor_high << shift_count;\n      temp8 = quotient_low >> 0x10;\n      temp2 = dividend_high >> (temp7 & 0xff);\n      temp1 = dividend >> (temp7 & 0xff) | dividend_high << shift_count;\n      temp4 = temp2 / temp8;\n      temp5 = temp1 >> 0x10 | (temp2 - temp8 * temp4) * 0x10000;\n      temp4 = temp4 * (quotient_low & 0xffff);\n      dividend = dividend << shift_count;\n      temp2 = temp4;\n      if (temp5 <= temp4 && temp4 - temp5 != 0) {\n        carry_flag = is_overflow(temp5,quotient_low);\n        temp5 = temp5 + quotient_low;\n        temp2 = temp4 - 1;\n        if ((carry_flag == false) && (temp5 <= temp4 && temp4 - temp5 != 0)) {\n          temp2 = temp4 - 2;\n          temp5 = temp5 + quotient_low;\n        }\n      }\n      temp4 = (temp5 - temp4) / temp8;\n      temp5 = temp1 & 0xffff | ((temp5 - temp4) - temp8 * temp4) * 0x10000;\n      temp8 = temp4 * (quotient_low & 0xffff);\n      temp4 = temp4;\n      if (temp5 <= temp8 && temp8 - temp5 != 0) {\n        carry_flag = is_overflow(temp5,quotient_low);\n        temp5 = temp5 + quotient_low;\n        temp4 = temp4 - 1;\n        if ((carry_flag == false) && (temp5 <= temp8 && temp8 - temp5 != 0)) {\n          temp4 = temp4 - 2;\n          temp5 = temp5 + quotient_low;\n        }\n      }\n      temp4 = temp4 | temp2 << 0x10;\n      result = (ulonglong)temp4 * (ulonglong)(divisor << shift_count);\n      if (CONCAT44(temp5 - temp8,dividend) < result) {\n        result = result - CONCAT44(quotient_low,divisor << shift_count);\n        temp4 = temp4 - 1;\n      }\n      if (remainder != (uint *)0x0) {\n        temp2 = ((temp5 - temp8) - (int)(result >> 0x20)) - (uint)(dividend < (uint)result);\n        *remainder = temp2 << (temp7 & 0xff) | dividend - (uint)result >> shift_count;\n        remainder[1] = temp2 >> shift_count;\n      }\n      return (ulonglong)temp4;\n    }\n    if ((divisor_high < dividend_high) || (divisor <= dividend)) {\n      carry_flag = dividend < divisor;\n      dividend = dividend - divisor;\n      dividend_high = (dividend_high - divisor_high) - (uint)carry_flag;\n      temp2 = 1;\n    }\n    else {\n      temp2 = 0;\n    }\n    quotient_low = 0;\n    if (remainder != (uint *)0x0) {\n      *remainder = dividend;\n      remainder[1] = dividend_high;\n      return (ulonglong)temp2;\n    }\n  }\n  return CONCAT44(quotient_low,temp2);\n}\n\n",
            "current_name": "divide_with_remainder_32bit_08000300",
            "entrypoint": "0x08000300",
            "imported": false,
            "improved": true,
            "renaming": {
                "CARRY4": "is_overflow",
                "FUN_08000300": "divide_with_remainder_32bit_08000300",
                "LZCOUNT": "leading_zero_count",
                "bVar11": "carry_flag",
                "iVar10": "shift_count",
                "param_1": "dividend",
                "param_2": "dividend_high",
                "param_3": "divisor",
                "param_4": "divisor_high",
                "param_5": "remainder",
                "uVar1": "result",
                "uVar2": "temp1",
                "uVar3": "quotient_low",
                "uVar4": "temp2",
                "uVar5": "temp4",
                "uVar6": "temp5",
                "uVar7": "temp4",
                "uVar8": "temp7",
                "uVar9": "temp8"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080005e0": {
            "additional_data": {
                "": {
                    "": 2
                },
                "FUN_080005e0": {
                    "call_interrupt": 1,
                    "call_software_interrupt": 3,
                    "emit_interrupt": 1,
                    "execute_interrupt": 1,
                    "execute_software_interrupt": 4,
                    "execute_system_call": 3,
                    "execute_system_interrupt": 2,
                    "initiate_syscall": 1,
                    "interrupt_0x3f": 1,
                    "invoke_interrupt": 1,
                    "invoke_software_interrupt": 1,
                    "invoke_system_call": 1,
                    "invoke_system_interrupt": 1,
                    "perform_interrupt": 1,
                    "perform_system_call": 2,
                    "perform_system_interrupt": 1,
                    "read_and_process_interrupt": 1,
                    "send_interrupt": 1,
                    "send_interrupt_signal": 1,
                    "send_software_interrupt": 2,
                    "trigger_software_interrupt": 1
                },
                "NOCHANGE": {
                    "nochange": 1
                },
                "PTR_080005e0": {
                    "data_ptr": 1
                },
                "software_interrupt": {
                    "call_interrupt": 1,
                    "execute_interrupt": 4,
                    "interrupt": 1,
                    "invoke_interrupt": 5,
                    "invoke_system_call": 1,
                    "system_interrupt": 1,
                    "trigger_interrupt": 3,
                    "trigger_software_interrupt": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_080005e4"
            ],
            "code": "\nvoid execute_software_interrupt_080005e0(void)\n\n{\n  invoke_interrupt(0x3f);\n  return;\n}\n\n",
            "current_name": "execute_software_interrupt_080005e0",
            "entrypoint": "0x080005e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080005e0": "execute_software_interrupt_080005e0",
                "software_interrupt": "invoke_interrupt"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080005e4": {
            "additional_data": {
                "FUN_080005e4": {
                    "afl_call_wrapper": 2,
                    "afl_check_and_call": 1,
                    "afl_function_caller": 1,
                    "call_afl_and_wait": 1,
                    "call_afl_function": 4,
                    "call_afl_if_not_disabled": 1,
                    "call_afl_with_param": 1,
                    "execute_afl_call": 15,
                    "execute_afl_call_if_not_locked": 1,
                    "execute_function": 3,
                    "reverse_afl_call": 1
                },
                "param_1": {
                    "arg1": 4,
                    "arg_1": 2,
                    "argument1": 1,
                    "data": 2,
                    "data_input": 1,
                    "input": 4,
                    "input_data": 1,
                    "input_param": 10,
                    "input_param1": 2,
                    "input_parameter": 2,
                    "input_value": 1,
                    "value_1": 1
                },
                "param_2": {
                    "arg2": 1,
                    "argument2": 1,
                    "input_param2": 1,
                    "unimportant_param": 1,
                    "unused": 1,
                    "unused_param": 4,
                    "unused_param1": 2
                },
                "param_3": {
                    "input_param3": 1,
                    "unused": 1,
                    "unused_param1": 1,
                    "unused_param2": 5
                },
                "param_4": {
                    "additional_parameter": 2,
                    "afl_flag_param": 1,
                    "another_param": 1,
                    "arg4": 4,
                    "arg_4": 2,
                    "argument4": 1,
                    "buffer_size": 1,
                    "config": 1,
                    "flag": 1,
                    "flags": 2,
                    "input_param2": 2,
                    "input_param4": 1,
                    "output": 2,
                    "output_data": 1,
                    "output_param": 6,
                    "param_to_send": 1,
                    "unused_param3": 1,
                    "value_4": 1
                },
                "uVar1": {
                    "afl_result": 4,
                    "afl_return_value": 1,
                    "result": 7,
                    "return_value": 3
                }
            },
            "called": [
                "FUN_080005e0"
            ],
            "calling": [
                "FUN_08000c4c"
            ],
            "code": "\nundefined4 execute_afl_call_if_not_locked_080005e4(undefined4 input_param,undefined4 unused_param,undefined4 unused_param2,undefined4 output_param)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000120 != 0) {\n    return 0;\n  }\n  result = aflCall(1,input_param,0,0,output_param);\n  return result;\n}\n\n",
            "current_name": "execute_afl_call_if_not_locked_080005e4",
            "entrypoint": "0x080005e4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080005e4": "execute_afl_call_if_not_locked_080005e4",
                "param_1": "input_param",
                "param_2": "unused_param",
                "param_3": "unused_param2",
                "param_4": "output_param",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000600": {
            "additional_data": {
                "FUN_08000600": {
                    "configure_and_execute": 1,
                    "initialize_component": 2,
                    "initialize_device": 19,
                    "initialize_hardware": 3,
                    "initialize_module": 2,
                    "initialize_peripheral": 3,
                    "initialize_peripheral_device": 1
                },
                "FUN_08004110": {
                    "configure_component": 1,
                    "execute_function_b": 1,
                    "initialize_peripheral_sub_function2": 1,
                    "operation2": 1,
                    "perform_operation2": 1,
                    "sub_function2": 1
                },
                "FUN_080041bc": {
                    "execute_function_a": 1,
                    "initialize_component": 1,
                    "initialize_peripheral_sub_function1": 1,
                    "operation1": 1,
                    "perform_operation1": 1,
                    "sub_function1": 1
                },
                "FUN_08004388": {
                    "configure_pin": 1,
                    "initialize_peripheral_sub_function3": 1,
                    "operation3": 1,
                    "set_component_pin_mode": 1,
                    "set_pin_mode": 1,
                    "sub_function3": 1
                },
                "begin": {
                    "start_operation": 2
                },
                "cVar1": {
                    "char_var": 1,
                    "character": 1,
                    "config_flag": 3,
                    "config_value": 3,
                    "device_type": 9,
                    "flag": 1,
                    "hardware_status": 1,
                    "mode": 1,
                    "parameter_value": 1,
                    "peripheral_type": 2,
                    "state": 1,
                    "status": 7
                },
                "digitalWrite": {
                    "write_digital": 1,
                    "write_pin": 1
                },
                "iVar2": {
                    "execution_status": 1,
                    "function_result": 1,
                    "loop_result": 1,
                    "loop_ret_val": 1,
                    "loop_var": 1,
                    "result": 17,
                    "return_val": 1,
                    "return_value": 7,
                    "status": 1
                },
                "param_1": {
                    "component": 1,
                    "component_ptr": 1,
                    "config": 2,
                    "device": 10,
                    "device_config": 5,
                    "device_data": 1,
                    "device_info": 1,
                    "device_params": 1,
                    "device_ptr": 1,
                    "device_settings": 1,
                    "hardware_data": 2,
                    "hardware_ptr": 1,
                    "module": 1,
                    "module_data": 1,
                    "peripheral": 1,
                    "peripheral_data": 1
                },
                "param_2": {
                    "config": 2,
                    "config_param": 2,
                    "config_size": 1,
                    "config_value": 2,
                    "mode": 1,
                    "param": 19,
                    "param2": 2,
                    "param_value": 1,
                    "value": 1
                },
                "param_4": {
                    "data": 1,
                    "param": 1
                },
                "pinMode": {
                    "set_pin_mode": 2
                }
            },
            "called": [
                "FUN_080041bc",
                "FUN_08004110",
                "FUN_08004388"
            ],
            "calling": [
                "FUN_08000c4c"
            ],
            "code": "\nvoid initialize_peripheral_device_08000600(int **device,undefined4 param)\n\n{\n  char device_type;\n  int result;\n  \n  device_type = *(char *)((int)device + 5);\n  if (device_type == '\\x02') {\n    *device = &DAT_20000338;\n  }\n  else if (device_type == '\\x03') {\n    *device = &DAT_20000338;\n  }\n  else if (device_type == '\\x01') {\n    *device = &DAT_20000338;\n  }\n  else {\n    *device = &DAT_20000338;\n  }\n  start_operation(*device,param,6);\n  if (1 < *(byte *)((int)device + 6)) {\n    set_pin_mode(*(byte *)((int)device + 6),1);\n    write_digital(*(undefined *)((int)device + 6),0);\n  }\n  do {\n    result = (**(code **)(**device + 0xc))();\n  } while (-1 < result);\n  *(undefined *)((int)device + 0x49) = 0;\n  *(undefined *)((int)device + 0x4a) = 0;\n  *(undefined2 *)(device + 0x15) = 0;\n  *(undefined2 *)((int)device + 0x52) = 0;\n  *(undefined2 *)(device + 0x14) = 0;\n  return;\n}\n\n",
            "current_name": "initialize_peripheral_device_08000600",
            "entrypoint": "0x08000600",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000600": "initialize_peripheral_device_08000600",
                "begin": "start_operation",
                "cVar1": "device_type",
                "digitalWrite": "write_digital",
                "iVar2": "result",
                "param_1": "device",
                "param_2": "param",
                "pinMode": "set_pin_mode"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800066c": {
            "additional_data": {
                "5": {
                    "flag": 1
                },
                "6": {
                    "extra_data": 1
                },
                "DAT_": {
                    "dat_": 1
                },
                "FUN_0800066c": {
                    "initialize_configuration": 1,
                    "initialize_data": 5,
                    "initialize_function": 1,
                    "set_config": 1,
                    "set_configuration": 2,
                    "set_data": 1,
                    "set_initialized_values": 1,
                    "set_param_value": 1,
                    "set_param_values": 3,
                    "set_parameters": 1,
                    "store_parameters": 1,
                    "update_data": 7,
                    "update_data_entry": 1,
                    "update_data_structure": 1,
                    "update_function": 1,
                    "update_function_data": 1,
                    "update_param_info": 1
                },
                "PTR_": {
                    "ptr_": 1
                },
                "additional_data": {
                    "additional_data": 1
                },
                "char": {
                    "byte": 1
                },
                "data_ptr": {
                    "data_ptr": 1
                },
                "local_1": {
                    "limited_length": 1
                },
                "new_value": {
                    "new_value": 1
                },
                "param_1": {
                    "address": 2,
                    "base_address": 2,
                    "buffer": 3,
                    "buffer_address": 1,
                    "config": 1,
                    "config_ptr": 2,
                    "config_struct": 1,
                    "data_address": 6,
                    "data_pointer": 4,
                    "data_pointer1": 1,
                    "data_ptr": 3,
                    "data_start": 1,
                    "data_structure_address": 1,
                    "entry_ptr": 1,
                    "object_address": 1,
                    "param_info": 1
                },
                "param_2": {
                    "config_value": 1,
                    "data": 3,
                    "data_value": 1,
                    "input_value": 1,
                    "new_data": 2,
                    "new_value": 7,
                    "update_value": 1,
                    "value": 7,
                    "value1": 7,
                    "value_1": 1
                },
                "param_3": {
                    "condition": 2,
                    "data_length": 2,
                    "length": 1,
                    "limit": 18,
                    "size": 1,
                    "threshold": 1,
                    "value2": 6
                },
                "param_4": {
                    "additional_data": 8,
                    "additional_info": 1,
                    "attribute": 1,
                    "data": 4,
                    "extra_data": 3,
                    "metadata": 1,
                    "new_data": 1,
                    "new_param": 1,
                    "param": 1,
                    "parameter": 1,
                    "update_value2": 1,
                    "value2": 1,
                    "value3": 6,
                    "value_2": 1
                },
                "param_5": {
                    "entry_num": 1
                },
                "undefined2": {
                    "ushort": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08000682"
            ],
            "code": "\nvoid update_data_entry_0800066c(int data_address,undefined value1,int limit,undefined additional_data)\n\n{\n  *(undefined *)(data_address + 4) = value1;\n  if (3 < limit) {\n    limit = 0;\n  }\n  *(byte *)(data_address + 5) = (byte)limit;\n  *(undefined *)(data_address + 6) = additional_data;\n  *(ushort *)(data_address + 0x56) = 1000;\n  return;\n}\n\n",
            "current_name": "update_data_entry_0800066c",
            "entrypoint": "0x0800066c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800066c": "update_data_entry_0800066c",
                "char": "byte",
                "param_1": "data_address",
                "param_2": "value1",
                "param_3": "limit",
                "param_4": "additional_data",
                "undefined2": "ushort"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000682": {
            "additional_data": {
                "FUN_08000682": {
                    "execute_data_entry": 1,
                    "execute_update_function": 1,
                    "initialize_data_entry": 1,
                    "update_and_return": 3,
                    "update_and_return_param": 1,
                    "update_data_entry": 17,
                    "update_entry": 1,
                    "update_entry_and_return": 1,
                    "update_entry_and_return_param": 1,
                    "update_param_1": 1,
                    "update_param_and_return": 2,
                    "update_param_value": 1
                },
                "additional_data": {
                    "data": 1,
                    "entry_additional_data": 1,
                    "extra_data": 14
                },
                "data_address": {
                    "address": 10,
                    "entry_address": 4
                },
                "limit": {
                    "data_limit": 5,
                    "entry_limit": 8,
                    "limit": 1,
                    "max_limit": 2
                },
                "param_1": {
                    "data_address": 1,
                    "data_entry": 3,
                    "data_entry_param": 1,
                    "entry": 2,
                    "entry_data": 5,
                    "entry_id": 3,
                    "input": 1,
                    "input_data": 2,
                    "input_param": 4,
                    "input_parameter": 3,
                    "input_value": 3,
                    "param": 2,
                    "result": 1
                },
                "update_data_entry_0800066c": {
                    "update_data": 1,
                    "update_data_entry": 14,
                    "update_data_entry_helper": 2,
                    "update_data_entry_internal": 3,
                    "update_entry": 3,
                    "update_entry_data": 1
                },
                "value1": {
                    "entry_value": 1,
                    "entry_value1": 1,
                    "first_value": 1,
                    "new_value": 1,
                    "parameter1": 1,
                    "value": 10,
                    "value1": 1
                }
            },
            "called": [
                "FUN_0800066c"
            ],
            "calling": [
                "FUN_08000690"
            ],
            "code": "\nundefined4 update_data_entry_08000682(undefined4 entry_data)\n\n{\n  update_data_entry_08000682();\n  return entry_data;\n}\n\n",
            "current_name": "update_data_entry_08000682",
            "entrypoint": "0x08000682",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000682": "update_data_entry_08000682",
                "param_1": "entry_data",
                "update_data_entry_0800066c": "update_data_entry"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000690": {
            "additional_data": {
                "DAT_20000124": {
                    "modbus_data": 2,
                    "modbus_data_buffer": 1
                },
                "FUN_08000682": {
                    "get_modbus_value": 1,
                    "initialize_modbus": 1
                },
                "FUN_08000690": {
                    "check_and_execute_modbus": 2,
                    "check_and_modify": 1,
                    "execute_modbus_command": 1,
                    "execute_modbus_operation": 1,
                    "handle_modbus_message": 2,
                    "handle_modbus_request": 2,
                    "process_modbus": 1,
                    "process_modbus_data": 14,
                    "process_modbus_packet": 1,
                    "process_modbus_request": 2,
                    "process_param": 1,
                    "process_paramaters": 1,
                    "send_modbus_request": 1
                },
                "Modbus": {
                    "execute_modbus": 2,
                    "perform_modbus_operation": 1,
                    "send_modbus_command": 1,
                    "send_modbus_data": 5,
                    "send_modbus_packet": 1,
                    "send_modbus_request": 4
                },
                "param_1": {
                    "data_available": 1,
                    "data_flag": 2,
                    "data_type": 1,
                    "device_status": 1,
                    "error_code": 1,
                    "flag": 4,
                    "input_value": 1,
                    "message_id": 1,
                    "message_type": 1,
                    "modbus_request_type": 1,
                    "packet_status": 1,
                    "request_type": 2,
                    "status": 12,
                    "value1": 1,
                    "value_1": 1
                },
                "param_2": {
                    "data_value": 2,
                    "device_id": 1,
                    "error_code": 2,
                    "flag_value": 1,
                    "message_code": 1,
                    "modbus_address": 2,
                    "modbus_request_code": 1,
                    "modbus_value": 3,
                    "packet_value": 1,
                    "request_code": 1,
                    "value": 14,
                    "value2": 1,
                    "value_2": 1
                },
                "param_3": {
                    "param3": 3,
                    "param_3": 1,
                    "unused_1": 1,
                    "unused_param": 2,
                    "unused_param_1": 1,
                    "unused_parameter": 2,
                    "unused_parameter1": 1,
                    "value3": 1
                },
                "param_4": {
                    "callback_function": 2,
                    "callback_param": 1,
                    "config": 2,
                    "config_value": 1,
                    "data": 3,
                    "data_array": 1,
                    "data_ptr": 1,
                    "flag": 1,
                    "function_id": 1,
                    "modbus_address": 1,
                    "modbus_parameter": 1,
                    "modbus_request_data": 1,
                    "modbus_value": 1,
                    "param": 2,
                    "param4": 3,
                    "param_4": 2,
                    "result": 1,
                    "unused_2": 1,
                    "unused_param_2": 1,
                    "unused_parameter2": 1,
                    "user_id": 1,
                    "value4": 1,
                    "value_4": 1
                },
                "undefined4": {
                    "uint32_t": 1
                }
            },
            "called": [
                "FUN_08000682"
            ],
            "calling": [],
            "code": "\nvoid process_modbus_data_08000690(int status,int value,uint32_t param3,uint32_t param4)\n\n{\n  if (status != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    send_modbus_data(&DAT_20000124,1,0,0,param4);\n  }\n  return;\n}\n\n",
            "current_name": "process_modbus_data_08000690",
            "entrypoint": "0x08000690",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000690": "process_modbus_data_08000690",
                "Modbus": "send_modbus_data",
                "param_1": "status",
                "param_2": "value",
                "param_3": "param3",
                "param_4": "param4",
                "undefined4": "uint32_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080006b4": {
            "additional_data": {
                "FUN_080006b4": {
                    "extract_and_increment_value": 1,
                    "process_data": 23,
                    "reverse_and_update_data": 1,
                    "update_and_count_data": 1
                },
                "FUN_080041bc": {
                    "handle_input": 1,
                    "helper_function": 1,
                    "process_sub_function": 3,
                    "process_subfunction": 1,
                    "process_value": 3,
                    "read_data": 2,
                    "read_input_value": 1
                },
                "bVar1": {
                    "exceed_limit": 1,
                    "exceeded_limit": 2,
                    "exceeded_threshold": 2,
                    "flag": 1,
                    "has_overflow": 1,
                    "is_full": 8,
                    "is_limit_reached": 2,
                    "is_max_length_reached": 1,
                    "is_max_reached": 1,
                    "is_overflow": 11,
                    "overflow_flag": 1
                },
                "bVar4": {
                    "byte_index": 1,
                    "count": 5,
                    "counter": 8,
                    "current_byte": 1,
                    "current_index": 3,
                    "current_position": 1,
                    "data_index": 1,
                    "index": 9,
                    "num_elements": 1,
                    "position": 1
                },
                "code": {
                    "function_pointer": 2
                },
                "digitalWrite": {
                    "change_state": 1,
                    "digital_write": 1
                },
                "iVar3": {
                    "callback_result": 1,
                    "function_result": 3,
                    "iteration_count": 1,
                    "result": 13,
                    "return_value": 8,
                    "status": 5
                },
                "param_1": {
                    "byte_count": 1,
                    "data": 16,
                    "data_array": 1,
                    "data_ptr": 6,
                    "function_data": 1,
                    "input_data": 3,
                    "input_parameters": 1,
                    "param1": 1,
                    "parameter_1": 1
                },
                "param_2": {
                    "param2": 3,
                    "param_2": 1,
                    "parameter_2": 1
                },
                "param_3": {
                    "param3": 3,
                    "param_3": 1,
                    "parameter_3": 1
                },
                "param_4": {
                    "buffer": 2,
                    "output_buffer": 1,
                    "param4": 1,
                    "param_4": 1
                },
                "reverseEngineeredFunction": {
                    "return_value": 1
                },
                "uVar2": {
                    "byte_value": 1,
                    "data_byte": 1,
                    "data_element": 1,
                    "new_data": 1,
                    "new_value": 7,
                    "read_value": 1,
                    "result": 11,
                    "result_variable": 1,
                    "return_value": 2,
                    "value": 4,
                    "value_from_callback": 1
                }
            },
            "called": [
                "FUN_080041bc"
            ],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nint process_data_080006b4(int **data)\n\n{\n  bool is_overflow;\n  undefined result;\n  int result;\n  byte index;\n  \n  if (1 < *(byte *)((int)data + 6)) {\n    digital_write(*(byte *)((int)data + 6),0);\n  }\n  *(undefined *)((int)data + 0x49) = 0;\n  if (*(byte *)((int)data + 5) < 4) {\n    is_overflow = false;\n    while (result = (**(function_pointer **)(**data + 8))(), result != 0) {\n      index = *(byte *)((int)data + 0x49);\n      result = (**(function_pointer **)(**data + 0xc))();\n      *(undefined *)((int)data + index + 9) = result;\n      index = *(char *)((int)data + 0x49) + 1;\n      *(byte *)((int)data + 0x49) = index;\n      if (0x3f < index) {\n        is_overflow = true;\n      }\n    }\n  }\n  else {\n    is_overflow = false;\n  }\n  *(short *)(data + 0x14) = *(short *)(data + 0x14) + 1;\n  if (is_overflow) {\n    *(short *)(data + 0x15) = *(short *)(data + 0x15) + 1;\n    return -3;\n  }\n  return (int)*(char *)((int)data + 0x49);\n}\n\n",
            "current_name": "process_data_080006b4",
            "entrypoint": "0x080006b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080006b4": "process_data_080006b4",
                "bVar1": "is_overflow",
                "bVar4": "index",
                "code": "function_pointer",
                "digitalWrite": "digital_write",
                "iVar3": "result",
                "param_1": "data",
                "uVar2": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000728": {
            "additional_data": {
                "FUN_08000728": {
                    "calculate_checksum": 14,
                    "calculate_crc": 9,
                    "calculate_crc16": 3,
                    "checksum": 1,
                    "crc16_checksum": 2,
                    "reverse_and_swap_bytes": 1,
                    "xor_checksum": 1
                },
                "bVar1": {
                    "bit": 3,
                    "bit_count": 4,
                    "bit_counter": 9,
                    "bit_index": 3,
                    "bit_position": 2,
                    "bit_shift_counter": 1,
                    "count": 1,
                    "j": 3
                },
                "param_1": {
                    "data": 3,
                    "data_address": 8,
                    "data_pointer": 2,
                    "data_ptr": 4,
                    "data_start": 7,
                    "data_start_addr": 1,
                    "data_start_address": 5,
                    "input_data": 1
                },
                "param_2": {
                    "data_len": 1,
                    "data_length": 23,
                    "data_size": 3,
                    "length": 3,
                    "num_bytes": 1
                },
                "uVar2": {
                    "checksum": 15,
                    "checksum_value": 1,
                    "crc": 11,
                    "crc_result": 1,
                    "crc_value": 1,
                    "result": 1,
                    "temp_checksum": 1
                },
                "uVar3": {
                    "bit": 18,
                    "bit_check": 1,
                    "bit_result": 1,
                    "bit_value": 4,
                    "lsb": 6,
                    "parity_bit": 1
                },
                "uVar4": {
                    "current_index": 1,
                    "i": 19,
                    "index": 11
                }
            },
            "called": [],
            "calling": [
                "FUN_0800076c"
            ],
            "code": "\nuint calculate_checksum_08000728(int data_address,int data_length)\n\n{\n  byte bit_counter;\n  uint checksum;\n  uint bit;\n  uint i;\n  \n  checksum = 0xffff;\n  for (i = 0; (int)i < data_length; i = i + 1 & 0xff) {\n    checksum = checksum ^ *(byte *)(data_address + i + 9);\n    for (bit_counter = 1; bit_counter < 9; bit_counter = bit_counter + 1) {\n      bit = checksum & 1;\n      checksum = checksum >> 1;\n      if (bit != 0) {\n        checksum = checksum ^ 0xa001;\n      }\n    }\n  }\n  return (checksum & 0xff) << 8 | checksum >> 8;\n}\n\n",
            "current_name": "calculate_checksum_08000728",
            "entrypoint": "0x08000728",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000728": "calculate_checksum_08000728",
                "bVar1": "bit_counter",
                "param_1": "data_address",
                "param_2": "data_length",
                "uVar2": "checksum",
                "uVar3": "bit",
                "uVar4": "i"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800076c": {
            "additional_data": {
                "DIGITAL_WRITE": {
                    "digital_write_pin": 1
                },
                "FUN_08000728": {
                    "perform_operation": 1
                },
                "FUN_0800076c": {
                    "calculate_and_store_checksum": 1,
                    "calculate_and_store_crc": 1,
                    "calculate_crc": 1,
                    "calculate_crc_and_modify_param": 1,
                    "calculate_crc_and_update": 2,
                    "calculate_crc_and_write_result": 1,
                    "update_checksum": 1,
                    "update_checksum_and_count": 3,
                    "update_checksum_and_counter": 2,
                    "update_checksum_and_state": 1,
                    "update_checksum_and_timer": 1,
                    "update_crc": 1,
                    "update_crc_and_execute": 1,
                    "update_crc_and_perform_action": 1,
                    "update_crc_and_perform_actions": 2,
                    "update_crc_and_send": 1,
                    "update_crc_and_send_data": 1,
                    "update_crc_and_status": 1,
                    "update_crc_and_timer": 1,
                    "update_crc_and_timers": 1,
                    "update_crc_and_timing": 1,
                    "update_crc_and_write": 1,
                    "update_data_and_calculate_crc": 2,
                    "update_data_and_controls": 1,
                    "update_param_and_perform_tasks": 1
                },
                "FUN_080041bc": {
                    "calculate_checksum": 1
                },
                "FUN_08004204": {
                    "reset_function": 1
                },
                "calcCRC": {
                    "calculate_crc": 18
                },
                "digitalWrite": {
                    "control_output_pin": 1,
                    "set_digital_output": 7,
                    "set_digital_output_to_state": 1,
                    "set_digital_pin": 1,
                    "set_digital_pin_state": 1,
                    "set_pin": 2,
                    "set_pin_state": 6,
                    "set_pin_value": 1
                },
                "do": {
                    "while": 1
                },
                "iVar2": {
                    "loop_counter": 7,
                    "loop_index": 2,
                    "loop_variable": 3,
                    "result": 15,
                    "return_value": 1,
                    "status": 2,
                    "temp": 1
                },
                "millis": {
                    "get_current_millis": 2,
                    "get_current_time": 14,
                    "get_millis": 4,
                    "get_milliseconds": 1
                },
                "param_1": {
                    "checksum_and_counter_table": 1,
                    "data": 24,
                    "data_pointer": 1,
                    "input_data": 1,
                    "param": 1,
                    "param_array": 2
                },
                "param_2": {
                    "arg1": 1,
                    "length": 1,
                    "param": 1,
                    "param1": 3,
                    "param2": 21,
                    "param_2": 1,
                    "value1": 3
                },
                "param_3": {
                    "arg2": 1,
                    "param2": 3,
                    "param3": 22,
                    "param_3": 1,
                    "param_index": 1,
                    "value2": 3
                },
                "param_4": {
                    "arg3": 1,
                    "param3": 3,
                    "param4": 22,
                    "param_4": 1,
                    "param_count": 1,
                    "value3": 3
                },
                "uVar1": {
                    "calc_result": 1,
                    "calculated_crc": 5,
                    "crc": 9,
                    "crc_result": 13,
                    "crc_value": 3
                },
                "uVar3": {
                    "byte_index": 2,
                    "byte_value": 2,
                    "checksum_index": 2,
                    "counter": 1,
                    "crc": 1,
                    "crc_index": 2,
                    "current_byte": 1,
                    "data_index": 1,
                    "data_length": 2,
                    "index": 15,
                    "length": 1,
                    "param1": 1
                }
            },
            "called": [
                "FUN_080041bc",
                "FUN_08000728",
                "FUN_08004204"
            ],
            "calling": [
                "FUN_08000998",
                "FUN_08000b54",
                "FUN_08000a7a",
                "FUN_08000a4e",
                "FUN_08000a00",
                "FUN_08000b04",
                "FUN_080008e2"
            ],
            "code": "\nvoid update_data_and_calculate_crc_0800076c(int **data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 crc_result;\n  int result;\n  uint index;\n  \n  index = (uint)*(byte *)((int)data + 0x49);\n  crc_result = calculate_crc(data,index,param3,param4,param4);\n  *(char *)((int)data + index + 9) = (char)((ushort)crc_result >> 8);\n  index = index + 1 & 0xff;\n  *(char *)((int)data + index + 9) = (char)crc_result;\n  *(char *)((int)data + 0x49) = (char)index + '\\x01';\n  if (1 < *(byte *)((int)data + 6)) {\n    set_digital_output(*(byte *)((int)data + 6),1);\n  }\n  if (*(byte *)((int)data + 5) < 4) {\n    (**(code **)(**data + 4))(*data,(int)data + 9,*(undefined *)((int)data + 0x49));\n  }\n  if (1 < *(byte *)((int)data + 6)) {\n    set_digital_output(*(byte *)((int)data + 6),0);\n  }\n  if (*(byte *)((int)data + 5) < 4) {\n    while {\n      result = (**(code **)(**data + 0xc))();\n    } while (-1 < result);\n  }\n  *(undefined *)((int)data + 0x49) = 0;\n  result = get_current_time();\n  data[0x17] = (int *)(result + (uint)*(ushort *)((int)data + 0x56));\n  *(short *)((int)data + 0x52) = *(short *)((int)data + 0x52) + 1;\n  return;\n}\n\n",
            "current_name": "update_data_and_calculate_crc_0800076c",
            "entrypoint": "0x0800076c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800076c": "update_data_and_calculate_crc_0800076c",
                "calcCRC": "calculate_crc",
                "digitalWrite": "set_digital_output",
                "do": "while",
                "iVar2": "result",
                "millis": "get_current_time",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "crc_result",
                "uVar3": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080007f0": {
            "additional_data": {
                "FUNK_080007f0": {
                    "check_and_process_input": 1
                },
                "FUN_080007f0": {
                    "check_and_calculate_result": 1,
                    "check_and_update_value": 1,
                    "check_and_update_values": 1,
                    "check_condition": 7,
                    "check_condition_and_modify": 1,
                    "check_condition_and_return_result": 1,
                    "check_condition_and_update": 1,
                    "check_conditions": 2,
                    "check_conditions_and_perform_operation": 1,
                    "check_conditions_and_update": 1,
                    "check_device_threshold": 1,
                    "check_function_validity": 2,
                    "check_game_state": 1,
                    "check_param_validity": 1,
                    "check_parameter": 1,
                    "check_parameter_validity": 1,
                    "check_status_and_update": 1,
                    "check_value_is_valid": 1,
                    "process_data": 1,
                    "validate_and_process_data": 1,
                    "validate_input": 1,
                    "validate_operation": 1
                },
                "bVar1": {
                    "condition": 1,
                    "condition_met": 4,
                    "condition_result": 1,
                    "found_match": 4,
                    "has_valid_threshold": 1,
                    "is_found": 1,
                    "is_match": 10,
                    "is_matched": 1,
                    "is_matching": 1,
                    "is_valid": 6
                },
                "bVar2": {
                    "byte_result": 2,
                    "byte_val": 1,
                    "calculated_value": 6,
                    "combined_threshold": 1,
                    "combined_value": 1,
                    "is_less_than": 2,
                    "result": 10,
                    "result1": 1,
                    "temp_byte": 5,
                    "word": 1
                },
                "cVar3": {
                    "byte1": 1,
                    "char_result1": 1,
                    "char_val1": 1,
                    "combined": 1,
                    "computed_value": 1,
                    "converted_value1": 1,
                    "device_measurement_upper": 1,
                    "first_byte": 3,
                    "first_param": 1,
                    "first_part": 1,
                    "first_value": 1,
                    "first_word": 1,
                    "lower_byte": 1,
                    "result1": 10,
                    "result2": 1,
                    "temp_char1": 1,
                    "value1": 1,
                    "word1": 2
                },
                "cVar4": {
                    "byte2": 1,
                    "char_result2": 1,
                    "char_val2": 1,
                    "combined_2": 1,
                    "converted_value2": 1,
                    "device_measurement_lower": 1,
                    "other_computed_value": 1,
                    "result2": 10,
                    "result3": 1,
                    "second_byte": 3,
                    "second_param": 1,
                    "second_part": 1,
                    "second_value": 1,
                    "second_word": 1,
                    "temp_char2": 1,
                    "upper_byte": 1,
                    "value2": 1,
                    "word2": 2
                },
                "iVar5": {
                    "combined_measurement_upper": 1,
                    "converted_value3": 1,
                    "first_result": 2,
                    "first_val": 1,
                    "first_value": 5,
                    "int_result1": 1,
                    "int_val1": 1,
                    "lower_word": 1,
                    "result1": 1,
                    "result3": 1,
                    "result4": 1,
                    "sum": 1,
                    "temp1": 1,
                    "temp_int": 1,
                    "temp_int1": 1,
                    "value1": 6,
                    "word1": 2,
                    "word1_result": 2
                },
                "iVar6": {
                    "loop_index": 1
                },
                "iVar7": {
                    "combined_measurement_lower": 1,
                    "int_result2": 1,
                    "int_val2": 1,
                    "result": 2,
                    "result2": 1,
                    "result4": 1,
                    "result5": 1,
                    "second_result": 2,
                    "second_val": 1,
                    "second_value": 5,
                    "temp2": 1,
                    "temp_int2": 2,
                    "upper_word": 1,
                    "value2": 6,
                    "word2": 2,
                    "word2_result": 2
                },
                "makeWord": {
                    "combine_words": 1
                },
                "param_1": {
                    "address": 2,
                    "arg1": 1,
                    "data": 2,
                    "data_address": 2,
                    "data_ptr": 1,
                    "device_address": 1,
                    "func_pointer": 1,
                    "function_address": 1,
                    "function_data": 1,
                    "game_state": 1,
                    "input": 3,
                    "input_address": 3,
                    "input_data": 4,
                    "input_pointer": 1,
                    "obj_ptr": 1,
                    "operation": 1,
                    "param1": 1,
                    "param_addr": 1,
                    "param_address": 1,
                    "status_address": 1,
                    "value": 1
                },
                "param_2": {
                    "arg2": 1,
                    "count": 1,
                    "data_length": 1,
                    "device_status": 1,
                    "flags": 2,
                    "input_value": 3,
                    "length": 1,
                    "param1": 2,
                    "param2": 6,
                    "param_size": 1,
                    "param_val": 1,
                    "param_value": 1,
                    "result": 2,
                    "size": 1,
                    "some_value": 1,
                    "value": 5,
                    "value1": 1
                },
                "param_3": {
                    "arg3": 1,
                    "byte_val": 2,
                    "data": 5,
                    "data_byte": 1,
                    "data_value": 1,
                    "device_measurement": 1,
                    "input_value": 2,
                    "length": 1,
                    "param": 1,
                    "param1": 1,
                    "param2": 2,
                    "param3": 5,
                    "param_3": 1,
                    "param_value": 1,
                    "value": 4,
                    "value2": 1,
                    "value_to_check": 1
                },
                "param_4": {
                    "additional_data": 1,
                    "additional_value": 2,
                    "arg4": 1,
                    "data": 3,
                    "device_data": 1,
                    "flag": 1,
                    "info": 1,
                    "input_val": 1,
                    "other_data": 1,
                    "other_value": 1,
                    "param": 1,
                    "param2": 1,
                    "param3": 2,
                    "param4": 6,
                    "param_4": 1,
                    "param_flag": 1,
                    "param_value_2": 1,
                    "ptr": 2,
                    "size": 2,
                    "value3": 1
                },
                "uVar6": {
                    "counter": 12,
                    "index": 13,
                    "iteration": 1,
                    "iteration_counter": 1,
                    "loop_counter": 2
                }
            },
            "called": [
                "FUN_08004640"
            ],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nundefined4 check_condition_and_return_result_080007f0(int input_data,undefined4 param2,uint param3,undefined4 param4)\n\n{\n  bool is_match;\n  byte result;\n  char result1;\n  char result2;\n  int value1;\n  uint index;\n  int value2;\n  \n  index = 0;\n  do {\n    if (7 < index) {\n      is_match = false;\nLAB_0800080a:\n      if (!is_match) {\n        *(short *)(input_data + 0x54) = *(short *)(input_data + 0x54) + 1;\n        return 1;\n      }\n      value2 = *(byte *)(input_data + 10) - 1;\n      switch(*(byte *)(input_data + 10)) {\n      case 1:\n      case 2:\n      case 0xf:\n        goto switchD_08000816_caseD_1;\n      case 3:\n      case 4:\n      case 0x10:\n        result1 = combine_words(*(undefined *)(input_data + 0xb),*(undefined *)(input_data + 0xc),param3,value2,\n                         param4);\n        result2 = combine_words(*(undefined *)(input_data + 0xd),*(undefined *)(input_data + 0xe));\n        if (*(byte *)(input_data + 0x60) < (byte)(result2 + result1)) {\n          return 2;\n        }\n        return 0;\n      case 5:\n        value2 = combine_words(*(undefined *)(input_data + 0xb),*(undefined *)(input_data + 0xc),param3,value2,\n                         param4);\n        if ((uint)*(byte *)(input_data + 0x60) < (uint)(value2 << 0x14) >> 0x18) {\n          return 2;\n        }\n        return 0;\n      case 6:\n        result = combine_words(*(undefined *)(input_data + 0xb),*(undefined *)(input_data + 0xc),param3,value2,\n                         param4);\n        if (*(byte *)(input_data + 0x60) < result) {\n          return 2;\n        }\n        return 0;\n      default:\n        return 0;\n      }\n    }\n    param3 = (uint)*(byte *)(input_data + 10);\n    if ((byte)(&DAT_08005a10)[index] == param3) {\n      is_match = true;\n      goto LAB_0800080a;\n    }\n    index = index + 1 & 0xff;\n  } while( true );\nswitchD_08000816_caseD_1:\n  value2 = combine_words(*(undefined *)(input_data + 0xb),*(undefined *)(input_data + 0xc),param3,value2,param4\n                  );\n  value1 = combine_words(*(undefined *)(input_data + 0xd),*(undefined *)(input_data + 0xe));\n  if ((uint)*(byte *)(input_data + 0x60) <\n      (((uint)(value2 << 0xc) >> 0x10) + ((uint)(value1 << 0xc) >> 0x10) & 0xff)) {\n    return 2;\n  }\n  return 0;\n}\n\n",
            "current_name": "check_condition_and_return_result_080007f0",
            "entrypoint": "0x080007f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080007f0": "check_condition_and_return_result_080007f0",
                "bVar1": "is_match",
                "bVar2": "result",
                "cVar3": "result1",
                "cVar4": "result2",
                "iVar5": "value1",
                "iVar7": "value2",
                "makeWord": "combine_words",
                "param_1": "input_data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar6": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080008cc": {
            "additional_data": {
                "0x49": {
                    "constant": 1,
                    "constant_value": 2,
                    "flag": 1
                },
                "0xb": {
                    "data_offset": 1,
                    "new_value_offset": 1,
                    "param_address": 1,
                    "value_offset": 1
                },
                "10": {
                    "byte_value": 1,
                    "flag_offset": 2,
                    "xor_offset": 1
                },
                "3": {
                    "new_value": 1
                },
                "4": {
                    "source_address": 1,
                    "source_offset": 3
                },
                "9": {
                    "destination_address": 1,
                    "destination_offset": 3
                },
                "FUN_080008cc": {
                    "copy_and_modify": 1,
                    "copy_and_modify_data": 18,
                    "copy_and_modify_value": 1,
                    "copy_and_toggle_bits": 1,
                    "copy_and_update_data": 2,
                    "copy_data": 1,
                    "copy_data_and_encrypt": 1,
                    "copy_data_and_modify": 1,
                    "copy_data_and_set_flags": 1,
                    "copy_data_and_toggle_flag": 2,
                    "copy_data_with_flag": 1,
                    "copy_parameters": 1
                },
                "param_1": {
                    "base_address": 1,
                    "data": 1,
                    "data_address": 11,
                    "data_offset": 2,
                    "data_pointer": 3,
                    "data_ptr": 1,
                    "data_start_index": 1,
                    "dest_address": 2,
                    "destination": 2,
                    "destination_pointer": 1,
                    "input_buffer": 1,
                    "source": 1,
                    "source_addr": 1,
                    "source_address": 3
                },
                "param_2": {
                    "data_to_copy": 1,
                    "new_byte": 1,
                    "new_data": 7,
                    "new_param": 1,
                    "new_value": 14,
                    "source": 2,
                    "source_data": 1,
                    "value": 3,
                    "value_to_copy": 1
                },
                "param_3": {
                    "data_size": 1,
                    "length": 1
                },
                "param_4": {
                    "copy_flag": 1
                },
                "param_5": {
                    "offset": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nvoid copy_data_and_modify_080008cc(int data_address,undefined new_value)\n\n{\n  *(undefined *)(data_address + 9) = *(undefined *)(data_address + 4);\n  *(byte *)(data_address + 10) = *(byte *)(data_address + 10) ^ 0x80;\n  *(undefined *)(data_address + 0xb) = new_value;\n  *(undefined *)(data_address + 0x49) = 3;\n  return;\n}\n\n",
            "current_name": "copy_data_and_modify_080008cc",
            "entrypoint": "0x080008cc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080008cc": "copy_data_and_modify_080008cc",
                "param_1": "data_address",
                "param_2": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080008e2": {
            "additional_data": {
                "FUN_0800076c": {
                    "send_tx_buffer": 2
                },
                "FUN_080008e2": {
                    "decode_and_update_flags": 1,
                    "improve_and_send_tx_buffer": 2,
                    "improve_code": 1,
                    "parse_data": 1,
                    "process_buffer": 1,
                    "process_data": 9,
                    "reverse_and_send_buffer": 2,
                    "reverse_and_send_tx_buffer": 1,
                    "update_and_send_tx_buffer": 1,
                    "update_flag_bits": 1,
                    "update_tx_buffer": 1
                },
                "FUN_08004640": {
                    "make_word": 2
                },
                "cVar5": {
                    "bit_offset": 1,
                    "bit_shift": 1,
                    "bit_value": 6,
                    "char_value": 1,
                    "char_var": 1,
                    "count": 1,
                    "flag": 1,
                    "increment": 1,
                    "offset": 1,
                    "shifted_bit": 1,
                    "shifted_bits": 4,
                    "shifted_byte": 6,
                    "shifted_char": 4,
                    "shifted_value": 1,
                    "temp_char": 1
                },
                "iVar1": {
                    "combined_word": 2,
                    "offset": 1,
                    "result": 1,
                    "result1": 2,
                    "var1": 1,
                    "word": 7,
                    "word1": 9,
                    "word_result": 5,
                    "word_value": 3
                },
                "iVar6": {
                    "address": 5,
                    "byte_address": 2,
                    "byte_ptr": 1,
                    "byte_result": 1,
                    "byte_value": 1,
                    "current_index": 1,
                    "flag_address": 1,
                    "flag_index": 2,
                    "index": 1,
                    "offset": 8,
                    "ptr_offset": 1,
                    "ptr_value": 1,
                    "temp_var": 3,
                    "temp_variable": 1,
                    "updated_variable": 1,
                    "var6": 1
                },
                "param_1": {
                    "binary_address": 1,
                    "buffer": 8,
                    "buffer_address": 1,
                    "buffer_ptr": 1,
                    "data": 2,
                    "data_buffer": 1,
                    "data_param": 1,
                    "data_pointer": 1,
                    "data_ptr": 4,
                    "input1": 2,
                    "input_array": 4,
                    "input_buffer": 3,
                    "input_pointer": 1,
                    "ptr_param1": 1
                },
                "param_2": {
                    "buffer": 2,
                    "buffer_param": 1,
                    "buffer_pointer": 1,
                    "buffer_ptr": 4,
                    "data": 9,
                    "data_address": 2,
                    "data_array": 2,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input2": 2,
                    "input_data": 1,
                    "lookup_array": 2,
                    "lookup_table": 2,
                    "ptr_param2": 1
                },
                "param_3": {
                    "arg1": 2,
                    "param1": 3,
                    "param3": 19,
                    "param_3": 2,
                    "param_a": 2,
                    "placeholder1": 1,
                    "val1": 1,
                    "value1": 1
                },
                "param_4": {
                    "arg2": 2,
                    "param2": 3,
                    "param4": 19,
                    "param_4": 2,
                    "param_b": 2,
                    "placeholder2": 1,
                    "val2": 1,
                    "value2": 1
                },
                "uVar2": {
                    "count": 1,
                    "data_length": 1,
                    "data_value": 1,
                    "extracted_word": 1,
                    "result2": 2,
                    "upper_word": 1,
                    "var2": 1,
                    "word": 2,
                    "word1": 1,
                    "word2": 13,
                    "word_count": 1,
                    "word_result2": 1,
                    "word_value": 3,
                    "word_value2": 2
                },
                "uVar3": {
                    "counter": 12,
                    "i": 1,
                    "index": 11,
                    "loop_counter": 2,
                    "loop_index": 4,
                    "var3": 1
                },
                "uVar4": {
                    "bit_counter": 13,
                    "bit_index": 16,
                    "j": 1,
                    "var4": 1
                }
            },
            "called": [
                "FUN_08004640",
                "FUN_0800076c"
            ],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nint process_data_080008e2(int buffer,int data,undefined4 param3,undefined4 param4)\n\n{\n  int word1;\n  uint word2;\n  uint counter;\n  uint bit_index;\n  char shifted_byte;\n  int offset;\n  \n  word1 = makeWord(*(undefined *)(buffer + 0xb),*(undefined *)(buffer + 0xc),param3,param4,\n                   param4);\n  word2 = makeWord(*(undefined *)(buffer + 0xd),*(undefined *)(buffer + 0xe));\n  shifted_byte = (char)((word2 << 0x15) >> 0x18);\n  if ((word2 & 7) != 0) {\n    shifted_byte = shifted_byte + '\\x01';\n  }\n  *(char *)(buffer + 0xb) = shifted_byte;\n  *(undefined *)(buffer + 0x49) = 3;\n  bit_index = 0;\n  for (counter = 0; (int)counter < (int)word2; counter = counter + 1 & 0xffff) {\n    if (((int)(uint)*(ushort *)(data + ((counter + word1) * 0x100000 >> 0x18) * 2) >>\n         (counter + word1 & 0xf) & 1U) == 0) {\n      offset = (uint)*(byte *)(buffer + 0x49) + buffer;\n      *(byte *)(offset + 9) = *(byte *)(offset + 9) & ~(byte)(1 << bit_index);\n    }\n    else {\n      offset = (uint)*(byte *)(buffer + 0x49) + buffer;\n      *(byte *)(offset + 9) = *(byte *)(offset + 9) | (byte)(1 << bit_index);\n    }\n    bit_index = bit_index + 1 & 0xff;\n    if (7 < bit_index) {\n      *(char *)(buffer + 0x49) = *(char *)(buffer + 0x49) + '\\x01';\n      bit_index = 0;\n    }\n  }\n  if ((word2 & 7) != 0) {\n    *(char *)(buffer + 0x49) = *(char *)(buffer + 0x49) + '\\x01';\n  }\n  shifted_byte = *(char *)(buffer + 0x49);\n  sendTxBuffer(buffer);\n  return (int)(char)(shifted_byte + '\\x02');\n}\n\n",
            "current_name": "process_data_080008e2",
            "entrypoint": "0x080008e2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080008e2": "process_data_080008e2",
                "cVar5": "shifted_byte",
                "iVar1": "word1",
                "iVar6": "offset",
                "param_1": "buffer",
                "param_2": "data",
                "param_3": "param3",
                "param_4": "param4",
                "uVar2": "word2",
                "uVar3": "counter",
                "uVar4": "bit_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000998": {
            "additional_data": {
                "FUN_0800076c": {
                    "sub_function2": 1
                },
                "FUN_08000998": {
                    "decode_and_send": 1,
                    "decode_and_send_data": 4,
                    "decode_and_send_tx_buffer": 1,
                    "extract_and_send_data": 4,
                    "extract_data_from_binary": 1,
                    "extract_tx_data": 1,
                    "process_binary_data": 2,
                    "process_data": 13,
                    "process_input_data": 1,
                    "reverse_and_send_buffer": 1
                },
                "FUN_08004640": {
                    "sub_function1": 1
                },
                "bVar1": {
                    "buffer_index": 3,
                    "byte_val": 1,
                    "byte_value": 5,
                    "byte_var1": 7,
                    "counter": 6,
                    "current_byte": 1,
                    "index": 2,
                    "loop_index": 1,
                    "temp": 1,
                    "temp_byte": 3,
                    "temp_byte_1": 1
                },
                "bVar3": {
                    "byte_result": 1,
                    "byte_var2": 1,
                    "byte_var3": 6,
                    "combined_bytes": 1,
                    "temp_byte_1": 1,
                    "word1": 16,
                    "word_1": 2,
                    "word_value": 1,
                    "word_value1": 1,
                    "word_value_1": 1
                },
                "bVar4": {
                    "byte_result2": 1,
                    "byte_var3": 1,
                    "byte_var4": 6,
                    "shifted_byte": 1,
                    "temp_byte_2": 1,
                    "word2": 16,
                    "word_2": 2,
                    "word_length": 1,
                    "word_value2": 1,
                    "word_value_2": 1
                },
                "cVar2": {
                    "char_index": 1,
                    "char_val": 1,
                    "char_value": 5,
                    "char_var": 4,
                    "char_var2": 3,
                    "current_index": 1,
                    "index": 2,
                    "next_counter": 1,
                    "next_index": 4,
                    "temp_char": 9
                },
                "makeWord": {
                    "combine_bytes": 1
                },
                "param_1": {
                    "binary_address": 1,
                    "buffer": 2,
                    "buffer_address": 2,
                    "data": 1,
                    "data_address": 1,
                    "data_buffer": 9,
                    "data_pointer": 1,
                    "data_ptr": 6,
                    "data_start": 1,
                    "input": 1,
                    "input_buffer": 1,
                    "input_data": 2,
                    "input_param": 1,
                    "input_ptr": 1,
                    "tx_data": 1
                },
                "param_2": {
                    "buffer": 1,
                    "buffer_ptr": 2,
                    "data": 3,
                    "data_address": 4,
                    "data_array": 1,
                    "data_buffer": 2,
                    "data_param": 1,
                    "data_ptr": 1,
                    "input_buffer": 5,
                    "input_data": 4,
                    "input_data_ptr": 2,
                    "input_ptr": 1,
                    "source_address": 1,
                    "source_buffer": 1,
                    "source_data": 2
                },
                "param_3": {
                    "extra_param_1": 1,
                    "offset1": 1,
                    "param1": 2,
                    "param3": 17,
                    "param_3": 8,
                    "value1": 2
                },
                "param_4": {
                    "extra_param_2": 1,
                    "offset2": 1,
                    "param2": 2,
                    "param4": 17,
                    "param_4": 8,
                    "value2": 2
                },
                "sendTxBuffer": {
                    "transmit_buffer": 1
                },
                "uVar5": {
                    "counter": 2,
                    "counter_1": 1,
                    "current_idx": 1,
                    "current_index": 1,
                    "current_word": 1,
                    "i": 2,
                    "index": 5,
                    "iter": 1,
                    "loop_counter": 3,
                    "loop_index": 6,
                    "loop_var": 1,
                    "start_index": 4,
                    "uint_var5": 1,
                    "var5": 1,
                    "word_index": 1
                },
                "uVar6": {
                    "counter_2": 1,
                    "current_index": 1,
                    "incremented_idx": 1,
                    "j": 1,
                    "loop_index2": 1,
                    "modified_loop_index": 1,
                    "new_index": 5,
                    "next_byte_index": 1,
                    "next_counter": 1,
                    "next_index": 6,
                    "next_index_incremented": 1,
                    "next_word_index": 1,
                    "temp_counter": 4,
                    "temp_index": 2,
                    "temp_iter": 1,
                    "uint_var6": 1,
                    "updated_index": 1,
                    "var6": 1
                }
            },
            "called": [
                "FUN_08004640",
                "FUN_0800076c"
            ],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nint process_binary_data_08000998(int data_buffer,int input_buffer,undefined4 param3,undefined4 param4)\n\n{\n  byte byte_var1;\n  char temp_char;\n  byte word1;\n  byte word2;\n  uint loop_index;\n  uint next_index;\n  \n  word1 = combine_bytes(*(undefined *)(data_buffer + 0xb),*(undefined *)(data_buffer + 0xc),param3,param4,\n                   param4);\n  word2 = combine_bytes(*(undefined *)(data_buffer + 0xd),*(undefined *)(data_buffer + 0xe));\n  *(byte *)(data_buffer + 0xb) = word2 << 1;\n  *(undefined *)(data_buffer + 0x49) = 3;\n  for (loop_index = (uint)word1; loop_index < (uint)word1 + (uint)word2; loop_index = loop_index + 1 & 0xff) {\n    byte_var1 = *(byte *)(data_buffer + 0x49);\n    *(char *)(data_buffer + (uint)byte_var1 + 9) = (char)((ushort)*(undefined2 *)(input_buffer + loop_index * 2) >> 8)\n    ;\n    next_index = byte_var1 + 1 & 0xff;\n    temp_char = (char)next_index;\n    *(char *)(data_buffer + 0x49) = temp_char;\n    *(undefined *)(data_buffer + next_index + 9) = *(undefined *)(input_buffer + loop_index * 2);\n    *(char *)(data_buffer + 0x49) = temp_char + '\\x01';\n  }\n  temp_char = *(char *)(data_buffer + 0x49);\n  transmit_buffer(data_buffer);\n  return (int)(char)(temp_char + '\\x02');\n}\n\n",
            "current_name": "process_binary_data_08000998",
            "entrypoint": "0x08000998",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000998": "process_binary_data_08000998",
                "bVar1": "byte_var1",
                "bVar3": "word1",
                "bVar4": "word2",
                "cVar2": "temp_char",
                "makeWord": "combine_bytes",
                "param_1": "data_buffer",
                "param_2": "input_buffer",
                "param_3": "param3",
                "param_4": "param4",
                "sendTxBuffer": "transmit_buffer",
                "uVar5": "loop_index",
                "uVar6": "next_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a00": {
            "additional_data": {
                "FUN_0800076c": {
                    "initialize_params": 1,
                    "send_data": 1
                },
                "FUN_08000a00": {
                    "apply_modification": 1,
                    "toggle_bit": 1,
                    "toggle_bit_in_buffer": 1,
                    "update_bit": 3,
                    "update_bit_in_buffer": 5,
                    "update_bit_in_memory": 1,
                    "update_bit_value": 4,
                    "update_bitmask": 1,
                    "update_bits": 1,
                    "update_bits_in_buffer": 1,
                    "update_data": 2,
                    "update_flag": 1,
                    "update_flag_in_buffer": 1,
                    "update_flag_in_tx_buffer": 2,
                    "update_memory": 2,
                    "update_tx_buffer": 4
                },
                "FUN_08004640": {
                    "reverse_bits": 1
                },
                "PTR_FUN_0800076c": {
                    "data_pointer": 1,
                    "send_data": 1
                },
                "PTR_FUN_08004640": {
                    "calculate_offset": 1,
                    "compute_word_value": 1
                },
                "makeWord": {
                    "combine_bytes": 1,
                    "compose_word": 1,
                    "create_word": 1
                },
                "param_1": {
                    "buffer": 1,
                    "buffer_addr": 2,
                    "buffer_address": 8,
                    "buffer_offset": 2,
                    "buffer_pointer": 1,
                    "buffer_start": 1,
                    "data_address": 2,
                    "data_buffer": 1,
                    "data_offset": 1,
                    "data_pointer": 2,
                    "data_ptr": 2,
                    "device_address": 1,
                    "input_address": 1,
                    "input_buffer": 1,
                    "input_data": 1,
                    "input_ptr": 1,
                    "memory_address": 2,
                    "source_address": 1
                },
                "param_2": {
                    "buffer": 3,
                    "buffer_addr": 1,
                    "buffer_address": 3,
                    "buffer_base_address": 1,
                    "buffer_index": 1,
                    "buffer_offset": 2,
                    "buffer_pointer": 2,
                    "buffer_ptr": 1,
                    "buffer_size": 1,
                    "data_pointer": 1,
                    "destination": 1,
                    "destination_address": 1,
                    "memory": 1,
                    "memory_address": 1,
                    "memory_array": 1,
                    "memory_ptr": 1,
                    "output_address": 1,
                    "output_buffer": 1,
                    "output_data": 1,
                    "output_ptr": 1,
                    "tx_addr": 1,
                    "tx_buffer": 3,
                    "tx_buffer_address": 1
                },
                "param_3": {
                    "arg1": 1,
                    "byte_value": 1,
                    "input1": 1,
                    "param3": 10,
                    "param_3": 1,
                    "param_value1": 1,
                    "unknown_param1": 1,
                    "val1": 3,
                    "value1": 6,
                    "value_1": 1,
                    "value_a": 1,
                    "word1": 3,
                    "word_byte": 1
                },
                "param_4": {
                    "arg2": 1,
                    "bit_position": 1,
                    "input2": 1,
                    "param4": 10,
                    "param_4": 2,
                    "param_value2": 1,
                    "unknown_param2": 1,
                    "val2": 3,
                    "value2": 6,
                    "value_2": 1,
                    "value_b": 1,
                    "word2": 3
                },
                "sendTxBuffer": {
                    "send_buffer": 4,
                    "send_data_to_buffer": 1,
                    "send_transmit_buffer": 1,
                    "send_tx_buffer": 1,
                    "send_tx_data": 1,
                    "send_updated_tx_buffer": 1,
                    "transmit_buffer": 3,
                    "transmit_data": 1
                },
                "uVar1": {
                    "bit_value": 1,
                    "combined_bytes": 1,
                    "combined_val": 2,
                    "combined_value": 3,
                    "combined_values": 1,
                    "combined_word": 2,
                    "combined_words": 1,
                    "packed_value": 1,
                    "word": 10,
                    "word_value": 9
                },
                "uVar2": {
                    "bit_index": 1,
                    "index": 6,
                    "shift_amount": 1,
                    "shifted_index": 7,
                    "shifted_offset": 1,
                    "shifted_val": 1,
                    "shifted_value": 11,
                    "shifted_word": 2,
                    "word_index": 1
                }
            },
            "called": [
                "FUN_08004640",
                "FUN_0800076c"
            ],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nundefined4 update_bits_in_buffer_08000a00(int buffer_address,int tx_buffer,undefined4 param3,undefined4 param4)\n\n{\n  uint word;\n  uint shifted_value;\n  \n  word = create_word(*(undefined *)(buffer_address + 0xb),*(undefined *)(buffer_address + 0xc),param3,param4,\n                   param4);\n  shifted_value = (word << 0x14) >> 0x18;\n  if (*(char *)(buffer_address + 0xd) == -1) {\n    *(ushort *)(tx_buffer + shifted_value * 2) =\n         (ushort)(1 << (word & 0xf)) | *(ushort *)(tx_buffer + shifted_value * 2);\n  }\n  else {\n    *(ushort *)(tx_buffer + shifted_value * 2) =\n         *(ushort *)(tx_buffer + shifted_value * 2) & ~(ushort)(1 << (word & 0xf));\n  }\n  *(undefined *)(buffer_address + 0x49) = 6;\n  send_buffer(buffer_address);\n  return 8;\n}\n\n",
            "current_name": "update_bits_in_buffer_08000a00",
            "entrypoint": "0x08000a00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a00": "update_bits_in_buffer_08000a00",
                "makeWord": "create_word",
                "param_1": "buffer_address",
                "param_2": "tx_buffer",
                "param_3": "param3",
                "param_4": "param4",
                "sendTxBuffer": "send_buffer",
                "uVar1": "word",
                "uVar2": "shifted_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a4e": {
            "additional_data": {
                "FUN_08000a4e": {
                    "decode_and_send_data": 1,
                    "extract_and_send_word": 1,
                    "extract_data_and_send": 1,
                    "extract_word_and_store": 1,
                    "modify_and_send_buffer": 1,
                    "set_word_in_buffer": 1,
                    "store_data_and_send": 1,
                    "update_and_send_buffer": 1,
                    "update_and_send_tx": 1,
                    "update_buffer": 1,
                    "update_buffer_and_send": 1,
                    "update_send_buffer": 2,
                    "update_transmission_data": 2,
                    "update_tx_buffer": 14,
                    "update_tx_buffer_and_send": 1,
                    "update_tx_buffer_with_word": 1
                },
                "bVar1": {
                    "byte_from_params": 1,
                    "byte_value": 4,
                    "byte_var": 2,
                    "combined_bytes": 1,
                    "data_byte": 2,
                    "first_byte": 1,
                    "high_byte": 7,
                    "source_port": 1,
                    "word1": 9,
                    "word_byte": 2,
                    "word_from_bytes": 1
                },
                "param_1": {
                    "buffer": 1,
                    "buffer_address": 13,
                    "buffer_index": 1,
                    "buffer_offset": 1,
                    "buffer_ptr": 2,
                    "data_address": 2,
                    "data_pointer": 3,
                    "input_buffer": 4,
                    "input_buffer_address": 1,
                    "source_address": 1,
                    "transmission_data": 1,
                    "tx_buffer": 1
                },
                "param_2": {
                    "buffer_address": 1,
                    "buffer_index": 1,
                    "buffer_pointer": 1,
                    "destination_address": 1,
                    "new_buffer_address": 1,
                    "output_address": 2,
                    "output_buffer": 4,
                    "output_buffer_address": 1,
                    "output_pointer": 2,
                    "output_ptr": 1,
                    "result": 1,
                    "send_buffer_index": 1,
                    "tx_address": 1,
                    "tx_buffer": 2,
                    "tx_buffer_address": 7,
                    "tx_data": 2,
                    "tx_ptr": 1,
                    "updated_data": 1
                },
                "uVar2": {
                    "data_value": 1,
                    "data_word": 1,
                    "destination_port": 1,
                    "low_byte": 7,
                    "second_byte": 1,
                    "word2": 9,
                    "word_data": 1,
                    "word_from_bytes2": 1,
                    "word_from_params": 1,
                    "word_value": 6,
                    "word_var": 2
                }
            },
            "called": [
                "FUN_08004640",
                "FUN_0800076c"
            ],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nundefined4 update_tx_buffer_and_send_08000a4e(int buffer_address,int tx_buffer_address)\n\n{\n  byte word1;\n  undefined2 word2;\n  \n  word1 = makeWord(*(undefined *)(buffer_address + 0xb),*(undefined *)(buffer_address + 0xc));\n  word2 = makeWord(*(undefined *)(buffer_address + 0xd),*(undefined *)(buffer_address + 0xe));\n  *(undefined2 *)(tx_buffer_address + (uint)word1 * 2) = word2;\n  *(undefined *)(buffer_address + 0x49) = 6;\n  sendTxBuffer(buffer_address);\n  return 8;\n}\n\n",
            "current_name": "update_tx_buffer_and_send_08000a4e",
            "entrypoint": "0x08000a4e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a4e": "update_tx_buffer_and_send_08000a4e",
                "bVar1": "word1",
                "param_1": "buffer_address",
                "param_2": "tx_buffer_address",
                "uVar2": "word2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a7a": {
            "additional_data": {
                "6": {
                    "constant1": 1
                },
                "8": {
                    "constant2": 1
                },
                "FUN_08000a7a": {
                    "process_data": 4,
                    "reverse_and_send": 2,
                    "reverse_and_send_data": 3,
                    "reverse_and_store_bits": 1,
                    "reverse_binary_data": 1,
                    "reverse_bit_order": 1,
                    "reverse_bits": 2,
                    "reverse_bits_and_send_data": 1,
                    "update_bits": 1,
                    "update_bits_in_word": 1,
                    "update_buffer": 2,
                    "update_tx_buffer": 2,
                    "update_word_bits": 2
                },
                "byte": {
                    "byte_value": 1
                },
                "iVar1": {
                    "combined1": 1,
                    "combined_word": 1,
                    "combined_word1": 1,
                    "converted_value1": 1,
                    "word1": 25,
                    "word_value": 2
                },
                "iVar2": {
                    "combined2": 1,
                    "combined_word2": 1,
                    "converted_value2": 1,
                    "num_words": 3,
                    "word2": 25
                },
                "makeWord": {
                    "combine_bytes": 1
                },
                "param_1": {
                    "binary_data_ptr": 1,
                    "buffer": 3,
                    "buffer_address": 2,
                    "data": 1,
                    "data_address": 3,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "data_ptr": 4,
                    "input1": 1,
                    "input_address": 1,
                    "input_array": 4,
                    "input_buffer": 5,
                    "input_pointer": 1,
                    "source_data_ptr": 1,
                    "word_address": 1,
                    "word_buffer_addr": 1
                },
                "param_2": {
                    "buffer": 1,
                    "buffer_address": 2,
                    "buffer_ptr": 2,
                    "input2": 1,
                    "output": 2,
                    "output_addr": 1,
                    "output_address": 3,
                    "output_array": 4,
                    "output_buffer": 6,
                    "output_data_ptr": 1,
                    "output_pointer": 1,
                    "output_ptr": 3,
                    "result_address": 1,
                    "result_buffer": 1,
                    "tx_buffer": 2
                },
                "param_3": {
                    "arg1": 1,
                    "param1": 3,
                    "param3": 25,
                    "param_3": 1,
                    "param_a": 1
                },
                "param_4": {
                    "arg2": 1,
                    "param2": 3,
                    "param4": 25,
                    "param_4": 1,
                    "param_b": 1
                },
                "sendTxBuffer": {
                    "transmit_buffer": 1
                },
                "uVar3": {
                    "count1": 1,
                    "counter": 8,
                    "counter1": 4,
                    "i": 1,
                    "idx": 1,
                    "index": 7,
                    "index1": 1,
                    "iteration": 3,
                    "loop_count": 1,
                    "loop_counter": 1,
                    "loop_index": 1,
                    "word_index": 2
                },
                "uVar4": {
                    "bit": 1,
                    "bit_counter": 5,
                    "bit_idx": 1,
                    "bit_index": 15,
                    "bit_offset": 1,
                    "bit_pos": 1,
                    "bit_shift_count": 1,
                    "count2": 1,
                    "counter2": 4,
                    "shift": 1
                },
                "uVar5": {
                    "bit_index": 1,
                    "bit_offset": 8,
                    "bit_pos": 1,
                    "bit_position": 16,
                    "bit_shift_amount": 1,
                    "index2": 1,
                    "mask": 1,
                    "shift": 2
                },
                "uVar6": {
                    "array_index": 1,
                    "buffer_idx": 1,
                    "buffer_index": 7,
                    "byte_index": 8,
                    "byte_offset": 1,
                    "index": 1,
                    "index1": 1,
                    "offset": 2,
                    "temp1": 1,
                    "word_index": 6,
                    "word_offset": 2
                },
                "uVar7": {
                    "byte_idx": 1,
                    "byte_index": 15,
                    "byte_offset": 8,
                    "flag_index": 1,
                    "index2": 1,
                    "index_offset": 1,
                    "offset": 1,
                    "param_index": 1,
                    "shift_index": 1,
                    "temp2": 1
                },
                "ushort": {
                    "word_value": 1
                }
            },
            "called": [
                "FUN_08004640",
                "FUN_0800076c"
            ],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nundefined4 reverse_bits_and_send_data_08000a7a(int input_buffer,int output_buffer,undefined4 param3,undefined4 param4)\n\n{\n  int word1;\n  int word2;\n  uint counter;\n  uint bit_index;\n  uint bit_position;\n  uint byte_index;\n  uint byte_index;\n  \n  word1 = combine_bytes(*(undefined *)(input_buffer + 0xb),*(undefined *)(input_buffer + 0xc),param3,param4,\n                   param4);\n  word2 = combine_bytes(*(undefined *)(input_buffer + 0xd),*(undefined *)(input_buffer + 0xe));\n  bit_index = 0;\n  byte_index = 7;\n  for (counter = 0; (int)counter < word2; counter = counter + 1 & 0xffff) {\n    byte_index = (counter + word1) * 0x100000 >> 0x18;\n    bit_position = counter + word1 & 0xf;\n    if (((int)(uint)*(byte_value *)(input_buffer + byte_index + 9) >> bit_index & 1U) == 0) {\n      *(word_value *)(output_buffer + byte_index * 2) = *(word_value *)(output_buffer + byte_index * 2) & ~(word_value)(1 << bit_position);\n    }\n    else {\n      *(word_value *)(output_buffer + byte_index * 2) = (word_value)(1 << bit_position) | *(word_value *)(output_buffer + byte_index * 2);\n    }\n    bit_index = bit_index + 1 & 0xff;\n    if (7 < bit_index) {\n      byte_index = byte_index + 1 & 0xff;\n      bit_index = 0;\n    }\n  }\n  *(undefined *)(input_buffer + 0x49) = 6;\n  transmit_buffer(input_buffer);\n  return 8;\n}\n\n",
            "current_name": "reverse_bits_and_send_data_08000a7a",
            "entrypoint": "0x08000a7a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a7a": "reverse_bits_and_send_data_08000a7a",
                "byte": "byte_value",
                "iVar1": "word1",
                "iVar2": "word2",
                "makeWord": "combine_bytes",
                "param_1": "input_buffer",
                "param_2": "output_buffer",
                "param_3": "param3",
                "param_4": "param4",
                "sendTxBuffer": "transmit_buffer",
                "uVar3": "counter",
                "uVar4": "bit_index",
                "uVar5": "bit_position",
                "uVar6": "byte_index",
                "uVar7": "byte_index",
                "ushort": "word_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000b04": {
            "additional_data": {
                "FUN_0800076c": {
                    "send_data": 1
                },
                "FUN_08000b04": {
                    "copy_data_from_buffer": 1,
                    "decode_and_copy_data": 2,
                    "decode_and_send_data": 2,
                    "extract_and_copy_bytes": 1,
                    "extract_and_copy_data": 2,
                    "extract_and_send_data": 3,
                    "extract_bytes_from_buffer": 1,
                    "extract_data_and_send": 1,
                    "extract_data_from_array": 1,
                    "extract_data_from_binary": 1,
                    "extract_words_from_byte_array": 1,
                    "parse_and_copy_data": 1,
                    "parse_data": 1,
                    "process_data": 4,
                    "process_function": 1,
                    "reverse_and_send": 1,
                    "reverse_and_send_buffer": 2,
                    "reverse_and_send_data": 2,
                    "reverse_bytes_and_send_data": 1,
                    "transform_data": 1
                },
                "FUN_08004640": {
                    "process_data": 1
                },
                "VAR_1": {
                    "constant": 1
                },
                "VAR_2": {
                    "constant": 1
                },
                "bVar1": {
                    "byte1": 7,
                    "byte_count": 2,
                    "byte_value1": 1,
                    "byte_value_1": 1,
                    "counter": 1,
                    "current_byte": 1,
                    "data_length": 1,
                    "data_offset": 1,
                    "first_byte": 6,
                    "first_byte_value": 1,
                    "index": 1,
                    "length1": 1,
                    "num_bytes_a": 1,
                    "param_offset": 1,
                    "second_byte": 1,
                    "source_index": 1,
                    "source_length": 1,
                    "source_offset": 1,
                    "src_offset": 1
                },
                "bVar2": {
                    "backup_source_length": 1,
                    "byte2": 7,
                    "byte_value2": 1,
                    "byte_value_2": 1,
                    "data_count": 1,
                    "data_length": 1,
                    "fourth_byte": 1,
                    "length": 1,
                    "length2": 1,
                    "loop_count": 1,
                    "num_bytes": 1,
                    "num_bytes_b": 1,
                    "num_elements": 4,
                    "number_of_elements": 2,
                    "second_byte": 6,
                    "second_byte_value": 1
                },
                "cVar3": {
                    "char1": 5,
                    "char_value": 4,
                    "char_var": 1,
                    "character": 2,
                    "constant_offset": 2,
                    "counter": 1,
                    "increment_value": 1,
                    "loop_index": 1,
                    "new_char": 1,
                    "result": 8,
                    "return_value": 2,
                    "temp_char": 2,
                    "updated_offset": 1
                },
                "makeWord": {
                    "combine_bytes": 8,
                    "combine_bytes_to_word": 1,
                    "create_word": 1
                },
                "param_1": {
                    "array_pointer": 1,
                    "binary_address": 1,
                    "buffer_address": 3,
                    "byte_array": 1,
                    "data_address": 5,
                    "data_array": 3,
                    "data_array_address": 1,
                    "data_buffer": 3,
                    "data_pointer": 2,
                    "data_source": 1,
                    "data_src": 1,
                    "input_array": 4,
                    "input_buffer": 1,
                    "source": 1,
                    "source_address": 2,
                    "source_buffer": 1
                },
                "param_2": {
                    "data_dest": 1,
                    "destination": 1,
                    "destination_address": 1,
                    "destination_buffer": 1,
                    "input_value": 1,
                    "output_address": 7,
                    "output_array": 7,
                    "output_array_address": 1,
                    "output_array_pointer": 1,
                    "output_buffer": 6,
                    "output_pointer": 1,
                    "param_2": 1,
                    "result_address": 2
                },
                "sendTxBuffer": {
                    "send_transmit_buffer": 3,
                    "transmit_buffer": 3,
                    "transmit_data": 3
                },
                "uVar4": {
                    "combined_byte": 1,
                    "combined_bytes": 2,
                    "combined_data": 1,
                    "converted_value": 1,
                    "new_word": 1,
                    "temp_word": 1,
                    "two_bytes": 1,
                    "word": 11,
                    "word_data": 1,
                    "word_from_bytes": 1,
                    "word_value": 9,
                    "word_var": 1
                },
                "uVar5": {
                    "counter": 5,
                    "element_index": 2,
                    "i": 1,
                    "index": 15,
                    "iterator": 1,
                    "loop_counter": 2,
                    "loop_index": 4,
                    "loop_index_2": 1
                }
            },
            "called": [
                "FUN_08004640",
                "FUN_0800076c"
            ],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nint reverse_and_send_buffer_08000b04(int data_address,int output_address)\n\n{\n  byte byte1;\n  byte byte2;\n  char result;\n  undefined2 word;\n  uint index;\n  \n  byte1 = *(byte *)(data_address + 0xc);\n  byte2 = *(byte *)(data_address + 0xe);\n  *(undefined *)(data_address + 0xd) = 0;\n  *(byte *)(data_address + 0xe) = byte2;\n  *(undefined *)(data_address + 0x49) = 6;\n  for (index = 0; index < byte2; index = index + 1 & 0xff) {\n    word = combine_bytes(*(undefined *)(index * 2 + data_address + 0x10),\n                     *(undefined *)(data_address + (index + 4) * 2 + 9));\n    *(undefined2 *)(output_address + (byte1 + index) * 2) = word;\n  }\n  result = *(char *)(data_address + 0x49);\n  transmit_data(data_address);\n  return (int)(char)(result + '\\x02');\n}\n\n",
            "current_name": "reverse_and_send_buffer_08000b04",
            "entrypoint": "0x08000b04",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000b04": "reverse_and_send_buffer_08000b04",
                "bVar1": "byte1",
                "bVar2": "byte2",
                "cVar3": "result",
                "makeWord": "combine_bytes",
                "param_1": "data_address",
                "param_2": "output_address",
                "sendTxBuffer": "transmit_data",
                "uVar4": "word",
                "uVar5": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000b54": {
            "additional_data": {
                "FUNK_08000b54": {
                    "process_data": 1
                },
                "FUN_080006b4": {
                    "get_rx_buffer": 4
                },
                "FUN_0800076c": {
                    "build_exception": 1,
                    "build_response": 1,
                    "process_fc16": 2
                },
                "FUN_080007f0": {
                    "process_fc3": 1,
                    "process_fc5": 2,
                    "send_tx_buffer": 1
                },
                "FUN_080008cc": {
                    "build_exception": 4
                },
                "FUN_080008e2": {
                    "process_fc15": 2,
                    "process_fc16": 2
                },
                "FUN_08000998": {
                    "validate_request": 4
                },
                "FUN_08000a00": {
                    "process_fc3": 1,
                    "process_fc5": 1,
                    "process_fc6": 2
                },
                "FUN_08000a4e": {
                    "process_fc1": 2,
                    "process_fc3": 2
                },
                "FUN_08000a7a": {
                    "millis": 2,
                    "process_fc1": 2
                },
                "FUN_08000b04": {
                    "process_fc15": 2,
                    "process_fc5": 1,
                    "process_fc6": 1
                },
                "FUN_08000b54": {
                    "process_communication": 1,
                    "process_data": 2,
                    "process_message": 1,
                    "process_request": 26
                },
                "FUN_08004204": {
                    "process_fc6": 1,
                    "send_tx_buffer": 3
                },
                "bVar1": {
                    "byte_result": 1,
                    "byte_value": 8,
                    "error_code": 1,
                    "result": 13,
                    "result_byte": 2,
                    "result_code": 1,
                    "return_value": 4,
                    "status_byte": 1
                },
                "buildException": {
                    "create_exception": 7
                },
                "getRxBuffer": {
                    "fetch_received_data": 1,
                    "get_receive_buffer": 1,
                    "get_received_data": 1,
                    "read_buffer": 1,
                    "receive_buffer": 1,
                    "retrieve_data_from_rx_buffer": 1,
                    "retrieve_rx_buffer": 1
                },
                "iVar2": {
                    "result": 6,
                    "result_int": 1,
                    "result_value": 1,
                    "return_value": 1,
                    "validate_result": 1,
                    "validation_result": 20,
                    "validation_status": 1
                },
                "iVar3": {
                    "output": 1,
                    "output_value": 1,
                    "result": 6,
                    "return_value": 21,
                    "return_value2": 2
                },
                "millis": {
                    "get_current_millis": 1,
                    "get_current_time": 5,
                    "get_millisecond_count": 1
                },
                "param_1": {
                    "buffer": 1,
                    "communication_struct": 1,
                    "data": 4,
                    "data_array": 2,
                    "data_structure": 1,
                    "function_pointers": 1,
                    "input_argument": 1,
                    "message": 1,
                    "p_request": 1,
                    "param_array": 1,
                    "request": 13,
                    "request_params": 2,
                    "request_pointer": 1,
                    "request_ptr": 1
                },
                "param_2": {
                    "buffer": 12,
                    "data": 8,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input": 1,
                    "p_param": 1,
                    "param_array": 3,
                    "param_value": 1,
                    "request_data": 1,
                    "response": 1
                },
                "param_3": {
                    "code": 1,
                    "flag": 3,
                    "flags": 1,
                    "length": 1,
                    "opcode": 1,
                    "param": 11,
                    "param_flag": 1,
                    "param_value": 2,
                    "request_code": 1,
                    "size": 3,
                    "value": 6
                },
                "process_FC1": {
                    "process_function_code1": 5,
                    "process_function_code_1": 1
                },
                "process_FC15": {
                    "process_function_code15": 5,
                    "process_function_code_15": 1
                },
                "process_FC16": {
                    "process_function_code16": 5,
                    "process_function_code_16": 1
                },
                "process_FC3": {
                    "process_function_code3": 5,
                    "process_function_code_3": 1
                },
                "process_FC5": {
                    "process_function_code5": 5,
                    "process_function_code_5": 1
                },
                "process_FC6": {
                    "process_function_code6": 5,
                    "process_function_code_6": 1
                },
                "sendTxBuffer": {
                    "send_buffer": 2,
                    "send_data_to_tx_buffer": 1,
                    "send_transmit_buffer": 2,
                    "send_transmit_data": 1,
                    "transmit_tx_buffer": 1
                },
                "unaff_r5": {
                    "buffer_size": 1,
                    "count": 1,
                    "error_code": 13,
                    "error_code2": 1,
                    "int_value": 1,
                    "param": 1,
                    "response": 1,
                    "result": 3,
                    "result_length": 1,
                    "result_uint": 1,
                    "return_value": 1,
                    "return_value_as_int": 1,
                    "temp_var": 1,
                    "unaffected_r5": 1,
                    "unsigned_value": 1,
                    "value_aux": 1,
                    "value_r5": 1
                },
                "validateRequest": {
                    "check_request": 2,
                    "validate_request": 5
                }
            },
            "called": [
                "FUN_080008cc",
                "FUN_08000998",
                "FUN_08000a7a",
                "FUN_080006b4",
                "FUN_08000a4e",
                "FUN_080007f0",
                "FUN_08000a00",
                "FUN_08000b04",
                "FUN_08004204",
                "FUN_080008e2",
                "FUN_0800076c"
            ],
            "calling": [
                "FUN_08000c64"
            ],
            "code": "\nint process_request_08000b54(int **request,int *buffer,undefined4 param)\n\n{\n  byte result;\n  int validation_result;\n  uint error_code;\n  int return_value;\n  \n  request[0x13] = buffer;\n  *(char *)(request + 0x18) = (char)param;\n  if (*(byte *)((int)request + 5) < 4) {\n    result = (**(code **)(**request + 8))();\n    error_code = (uint)result;\n  }\n  if (error_code == 0) {\n    return_value = 0;\n  }\n  else if ((int)error_code < 8) {\n    return_value = 0;\n  }\n  else {\n    return_value = fetch_received_data(request);\n    *(char *)(request + 2) = (char)return_value;\n    if (*(char *)((int)request + 9) == *(char *)(request + 1)) {\n      validation_result = validate_request(request);\n      if (validation_result < 1) {\n        validation_result = get_current_time();\n        request[0x17] = (int *)((uint)*(ushort *)((int)request + 0x56) + validation_result);\n        *(undefined *)(request + 2) = 0;\n        switch(*(undefined *)((int)request + 10)) {\n        case 1:\n        case 2:\n          return_value = process_function_code1(request,buffer,param);\n          break;\n        case 3:\n        case 4:\n          return_value = process_function_code3(request,buffer,param);\n          break;\n        case 5:\n          return_value = process_function_code5(request,buffer,param);\n          break;\n        case 6:\n          return_value = process_function_code6(request,buffer,param);\n          break;\n        case 0xf:\n          return_value = process_function_code15(request,buffer,param);\n          break;\n        case 0x10:\n          return_value = process_function_code16(request,buffer,param);\n        }\n      }\n      else {\n        if (validation_result != 0xff) {\n          create_exception(request,validation_result);\n          send_buffer(request);\n        }\n        *(char *)(request + 2) = (char)validation_result;\n        return_value = (int)(char)validation_result;\n      }\n    }\n    else {\n      return_value = 0;\n    }\n  }\n  return return_value;\n}\n\n",
            "current_name": "process_request_08000b54",
            "entrypoint": "0x08000b54",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000b54": "process_request_08000b54",
                "bVar1": "result",
                "buildException": "create_exception",
                "getRxBuffer": "fetch_received_data",
                "iVar2": "validation_result",
                "iVar3": "return_value",
                "millis": "get_current_time",
                "param_1": "request",
                "param_2": "buffer",
                "param_3": "param",
                "process_FC1": "process_function_code1",
                "process_FC15": "process_function_code15",
                "process_FC16": "process_function_code16",
                "process_FC3": "process_function_code3",
                "process_FC5": "process_function_code5",
                "process_FC6": "process_function_code6",
                "sendTxBuffer": "send_buffer",
                "unaff_r5": "error_code",
                "validateRequest": "validate_request"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000c4c": {
            "additional_data": {
                "FUN_08000c4c": {
                    "initialize_and_setup": 1,
                    "initialize_and_setup_device": 1,
                    "initialize_and_start_devices": 1,
                    "initialize_and_start_forkserver": 2,
                    "initialize_and_start_peripheral_device": 1,
                    "initialize_device": 3,
                    "initialize_device_and_start_forkserver": 1,
                    "initialize_devices": 2,
                    "initialize_fork_and_device": 1,
                    "initialize_forkserver": 8,
                    "initialize_peripheral_device": 10
                },
                "device": {
                    "device": 5,
                    "device_ptr": 1,
                    "peripheral_device": 6
                },
                "execute_afl_call_if_not_locked_080005e4": {
                    "call_afl_if_not_locked": 1,
                    "execute_afl_call": 8,
                    "execute_afl_call_if_not_locked": 11,
                    "execute_afl_if_not_locked": 1
                },
                "initialize_peripheral_device_08000600": {
                    "initialize_device": 13,
                    "initialize_peripheral_device": 16
                },
                "input_param": {
                    "input": 11,
                    "input_param": 2,
                    "input_parameter": 1
                },
                "output_param": {
                    "output": 11,
                    "output_param": 2,
                    "output_parameter": 1
                },
                "param": {
                    "device": 1,
                    "device_param": 3,
                    "device_parameter": 1,
                    "initial_parameter": 1,
                    "parameter": 8
                },
                "unused_param": {
                    "unused": 4,
                    "unused1": 3,
                    "unused_param": 1,
                    "unused_parameter": 1
                },
                "unused_param2": {
                    "unused2": 7,
                    "unused_param2": 1,
                    "unused_parameter2": 1
                }
            },
            "called": [
                "FUN_080005e4",
                "FUN_08000600"
            ],
            "calling": [
                "FUN_08004658"
            ],
            "code": "\nvoid initialize_and_start_peripheral_device_08000c4c(void)\n\n{\n  startForkserver(0);\n  initialize_peripheral_device(&DAT_20000124,0x4b00);\n  return;\n}\n\n",
            "current_name": "initialize_and_start_peripheral_device_08000c4c",
            "entrypoint": "0x08000c4c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000c4c": "initialize_and_start_peripheral_device_08000c4c",
                "device": "peripheral_device",
                "initialize_peripheral_device_08000600": "initialize_peripheral_device"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000c64": {
            "additional_data": {
                "FUN_08000b54": {
                    "analyze_input": 1,
                    "check_device_status": 1,
                    "check_status": 1,
                    "extract_ptr": 1,
                    "process_data": 12,
                    "process_input": 3,
                    "reverse_data": 1,
                    "sub_function": 1,
                    "update_poll_info": 1
                },
                "FUN_08000c64": {
                    "poll_and_return": 1,
                    "poll_data": 22,
                    "poll_device_status": 1,
                    "poll_devices": 1,
                    "poll_implementation": 1,
                    "polling": 1,
                    "polling_function": 4
                },
                "in_r3": {
                    "argument1": 1,
                    "input_value": 1,
                    "param": 2,
                    "parameter": 1,
                    "register_value": 3,
                    "timeout": 2,
                    "undefined_arg": 1,
                    "unused_param": 1,
                    "unused_value": 1
                },
                "param_1": {
                    "data": 1,
                    "data_array": 6,
                    "data_list": 2,
                    "data_pointers": 1,
                    "data_ptr": 3,
                    "data_ptrs": 1,
                    "device_list": 1,
                    "input_array": 3,
                    "input_data": 1,
                    "input_list": 2,
                    "input_param": 1,
                    "param_array": 1,
                    "pointer_array": 3,
                    "pointer_list": 1,
                    "ptr_array": 1
                },
                "param_2": {
                    "buffer": 1,
                    "data": 1,
                    "data_pointer": 4,
                    "data_ptr": 3,
                    "data_value": 1,
                    "input_pointer": 1,
                    "input_ptr": 2,
                    "input_value": 1,
                    "int_pointer": 2,
                    "integer_pointer": 3,
                    "output": 1,
                    "output_data": 1,
                    "output_param": 1,
                    "output_ptr": 1,
                    "param_ptr": 1,
                    "result_ptr": 1,
                    "size_ptr": 1,
                    "status": 1,
                    "value_ptr": 1
                },
                "param_3": {
                    "additional_param": 1,
                    "data_length": 2,
                    "data_size": 4,
                    "data_value": 1,
                    "input_flag": 1,
                    "input_value": 4,
                    "param": 1,
                    "param3": 1,
                    "param_3": 1,
                    "param_three": 1,
                    "param_val": 1,
                    "param_value": 1,
                    "parameter": 1,
                    "parameter_3": 1,
                    "size": 6,
                    "timeout": 1
                }
            },
            "called": [
                "FUN_08000b54"
            ],
            "calling": [
                "FUN_08004658"
            ],
            "code": "\nvoid poll_data_08000c64(void)\n\n{\n  undefined4 register_value;\n  \n  poll(&DAT_20000124,&DAT_20000004,0x10,register_value,register_value);\n  return;\n}\n\n",
            "current_name": "poll_data_08000c64",
            "entrypoint": "0x08000c64",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000c64": "poll_data_08000c64",
                "in_r3": "register_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000c8c": {
            "additional_data": {
                "FUN_08000c8c": {
                    "configure_system": 1,
                    "configure_system_clock": 2,
                    "initialize_hardware": 7,
                    "initialize_system": 21
                },
                "FUN_08000e60": {
                    "configure_clock": 1,
                    "configure_sys_tick": 3,
                    "configure_systick": 1,
                    "initialize_clock": 1,
                    "set_clock": 1,
                    "set_oscillator_config": 1
                },
                "FUN_08000ee0": {
                    "config_clock": 1,
                    "configure_nvic": 1,
                    "halt_system": 1,
                    "set_nvic_priority": 1,
                    "set_priority": 3,
                    "set_sys_tick_config": 1
                },
                "FUN_08000f2c": {
                    "configure_sys_tick": 1,
                    "configure_systick": 1,
                    "configure_systick_clk": 1,
                    "load_config": 1,
                    "set_nvic_priority": 1,
                    "set_power_config": 1,
                    "set_priority": 2
                },
                "FUN_08001f9c": {
                    "configure_clock": 2,
                    "enable_over_drive": 4,
                    "enable_overdrive": 2
                },
                "FUN_0800201c": {
                    "configure_power": 3,
                    "configure_pwr_ex": 1,
                    "enable_over_drive": 2,
                    "get_power_config": 1,
                    "set_power_config": 1
                },
                "FUN_08002488": {
                    "configure_osc": 1,
                    "configure_oscillator": 6,
                    "set_oscillator_config": 1
                },
                "FUN_080025e0": {
                    "get_hclk_freq": 8
                },
                "HAL_NVIC_SetPriority": {
                    "set_priority": 2
                },
                "HAL_PWREx_EnableOverDrive": {
                    "enable_over_drive": 2
                },
                "HAL_RCC_ClockConfig": {
                    "config_clock": 1,
                    "configure_clock": 1
                },
                "HAL_RCC_GetHCLKFreq": {
                    "get_hclk_frequency": 2
                },
                "HAL_RCC_OscConfig": {
                    "config_oscillator": 1,
                    "configure_oscillator": 1
                },
                "HAL_SYSTICK_CLKSourceConfig": {
                    "config_sys_tick_clock_source": 1,
                    "configure_sys_tick_clock_source": 1
                },
                "HAL_SYSTICK_Config": {
                    "config_sys_tick": 1,
                    "configure_sys_tick": 1
                },
                "local_14": {
                    "apb2_clock_config": 1,
                    "apb2_prescaler": 1,
                    "apb_divider": 1,
                    "clk_pclk_config": 1,
                    "clock_cclk": 1,
                    "clock_config": 1,
                    "clock_config11": 1,
                    "clock_config4": 1,
                    "clock_config6": 1,
                    "clock_config7": 1,
                    "clock_config_arg5": 1,
                    "clock_config_argument5": 1,
                    "clock_config_param5": 2,
                    "clock_config_pclk": 1,
                    "clock_config_value5": 2,
                    "clock_init_param9": 1,
                    "config12": 1,
                    "config_value13": 1,
                    "flash_latency": 1,
                    "irq_sub_priority": 1,
                    "nvic_priority_group_config": 1,
                    "pclk1_config": 1,
                    "pclk2_config": 1,
                    "pclk2_prescaler": 1,
                    "pclk_prescaler": 1,
                    "pll_source": 1,
                    "ppre1": 1,
                    "priority_config": 1,
                    "systick_config": 1
                },
                "local_18": {
                    "aclk_config": 1,
                    "ahb_divider": 1,
                    "apb1_clock_config": 1,
                    "apb1_prescaler": 1,
                    "apb2_divider": 1,
                    "clk_hclk_config": 1,
                    "clock_config": 1,
                    "clock_config10": 1,
                    "clock_config3": 1,
                    "clock_config5": 1,
                    "clock_config6": 1,
                    "clock_config_arg4": 1,
                    "clock_config_argument4": 1,
                    "clock_config_hclk": 1,
                    "clock_config_param4": 2,
                    "clock_config_value4": 2,
                    "clock_hclk": 1,
                    "clock_init_param8": 1,
                    "config11": 1,
                    "config_value12": 1,
                    "hclk_prescaler": 1,
                    "hpre": 1,
                    "interrupt_config": 1,
                    "irq_priority_group": 1,
                    "nvic_interrupt_config": 1,
                    "pclk1_config": 1,
                    "pclk1_prescaler": 1,
                    "pll_multiplication": 1
                },
                "local_1c": {
                    "apb1_divider": 1,
                    "apb2_prescaler": 1,
                    "clk_cpu_divider": 1,
                    "clock_config": 1,
                    "clock_config4": 1,
                    "clock_config5": 1,
                    "clock_config9": 1,
                    "clock_config_arg3": 1,
                    "clock_config_argument3": 1,
                    "clock_config_mco": 1,
                    "clock_config_param3": 2,
                    "clock_config_value3": 2,
                    "clock_init_param7": 1,
                    "clock_pll": 1,
                    "config_value11": 1,
                    "flash_latency_config": 2,
                    "hclk_config": 2,
                    "nvic_priority_config": 1,
                    "sys_tick_exception_priority": 1,
                    "voltage_scaling": 1
                },
                "local_20": {
                    "ahb_divider": 1,
                    "apb1_prescaler": 1,
                    "clk_pll_config": 1,
                    "clock_config": 1,
                    "clock_config2": 1,
                    "clock_config3": 1,
                    "clock_config4": 1,
                    "clock_config8": 1,
                    "clock_config_arg2": 1,
                    "clock_config_argument2": 1,
                    "clock_config_clock": 1,
                    "clock_config_flag": 1,
                    "clock_config_param2": 2,
                    "clock_config_value2": 2,
                    "clock_init_param6": 1,
                    "clock_source": 1,
                    "config10": 1,
                    "config_value10": 1,
                    "flash_latency": 1,
                    "hclk_prescaler": 1,
                    "interrupt_priority_config": 1,
                    "pllp": 1,
                    "power_voltage_scale": 1,
                    "priorities_config": 1,
                    "priority_config": 1,
                    "sys_clk_prescaler": 1,
                    "sys_tick_clock_source": 1,
                    "sys_tick_priority_config": 1,
                    "sysclk_source": 1
                },
                "local_24": {
                    "clk_sysclk_config": 1,
                    "clock_config": 3,
                    "clock_config1": 1,
                    "clock_config2": 1,
                    "clock_config3": 1,
                    "clock_config7": 1,
                    "clock_config_arg1": 1,
                    "clock_config_argument1": 1,
                    "clock_config_param1": 2,
                    "clock_config_params": 1,
                    "clock_config_struct": 1,
                    "clock_config_value1": 2,
                    "clock_configuration": 1,
                    "clock_init_param5": 1,
                    "clock_source_config": 4,
                    "clock_type_def": 1,
                    "config9": 1,
                    "config_value9": 1,
                    "flash_latency": 1,
                    "plln": 1,
                    "sys_clk_source_config": 1,
                    "sysclk_config": 1,
                    "sysclk_source": 2
                },
                "local_28": {
                    "ahb_prescaler": 1,
                    "apb1_prescaler": 1,
                    "apb2_prescaler": 2,
                    "clock_config6": 1,
                    "clock_init_param4": 1,
                    "config8": 2,
                    "config_arg8": 1,
                    "config_param8": 2,
                    "config_value8": 3,
                    "flash_latency": 1,
                    "interrupt_priority": 2,
                    "nvic_group_config": 1,
                    "osc_config_argument7": 1,
                    "over_drive_config": 1,
                    "priority_config": 1,
                    "priority_group_config": 1,
                    "sys_tick_clock_source_config": 1,
                    "sys_tick_priority": 2,
                    "system_core_clock": 1,
                    "systick_priority": 1
                },
                "local_2c": {
                    "ahb_prescaler": 1,
                    "apb1_prescaler": 2,
                    "apb2_prescaler": 1,
                    "clock_config2": 1,
                    "clock_config5": 1,
                    "clock_init_param3": 1,
                    "config7": 2,
                    "config_arg7": 1,
                    "config_param7": 2,
                    "config_value7": 3,
                    "interrupt_priority": 1,
                    "nvic_priority_config": 1,
                    "osc_config_argument6": 1,
                    "pll_mux": 1,
                    "priority_config": 2,
                    "sys_tick_clk_source": 1,
                    "sys_tick_clock_source": 1,
                    "sys_tick_config": 1,
                    "systick_clock_config": 1,
                    "systick_clock_source_config": 1,
                    "systick_source": 1
                },
                "local_30": {
                    "ahb_prescaler": 2,
                    "apb1_prescaler": 1,
                    "clock_config4": 1,
                    "clock_config_divider": 1,
                    "clock_init_param2": 1,
                    "config6": 2,
                    "config_arg6": 1,
                    "config_param6": 2,
                    "config_value6": 3,
                    "flash_config": 1,
                    "hclk_config": 1,
                    "hclk_divider": 1,
                    "interrupt_config": 1,
                    "msi_config": 1,
                    "osc_config_argument5": 1,
                    "pll_q": 1,
                    "priority_config": 1,
                    "sys_clock_source": 1,
                    "sys_tick_period": 2,
                    "systick_clk_config": 1,
                    "systick_config": 1,
                    "systick_prescaler": 1
                },
                "local_34": {
                    "apb2_prescaler": 1,
                    "clk_pll_source": 1,
                    "clock_config3": 1,
                    "clock_config_source": 1,
                    "clock_config_type": 1,
                    "clock_divider": 1,
                    "clock_init_param1": 1,
                    "clock_scale_config": 1,
                    "clock_source": 1,
                    "config5": 2,
                    "config_arg5": 1,
                    "config_param5": 2,
                    "config_value5": 3,
                    "flash_latency": 1,
                    "hse_pll_div": 1,
                    "interrupt_priority_config": 1,
                    "nvic_priority": 1,
                    "osc_config_argument4": 1,
                    "pll_p": 1,
                    "sys_tick_config": 1,
                    "sys_tick_priority": 1,
                    "systick_config": 3,
                    "systick_reload": 1
                },
                "local_38": {
                    "clk_sysclk_source": 1,
                    "clock_config": 3,
                    "clock_config2": 1,
                    "clock_config_type": 1,
                    "clock_source_config": 4,
                    "config4": 2,
                    "config_arg4": 1,
                    "config_param4": 2,
                    "config_value4": 3,
                    "flash_latency": 1,
                    "gpio_config": 1,
                    "osc_config_argument3": 1,
                    "oscillator_frequency": 2,
                    "over_drive_config": 1,
                    "over_drive_voltage_range": 1,
                    "pll_n": 1,
                    "power_init_param2": 1,
                    "sys_tick_config_struct": 1,
                    "voltage_config": 1
                },
                "local_3c": {
                    "clk_config_struct": 1,
                    "clk_msi_range": 1,
                    "clock_config": 6,
                    "clock_config1": 1,
                    "clock_config_option": 1,
                    "clock_enable_config": 1,
                    "clock_source": 2,
                    "config3": 2,
                    "config_arg3": 1,
                    "config_param3": 2,
                    "config_value3": 3,
                    "hse_divider": 1,
                    "osc_config_argument2": 1,
                    "oscillator_init_parameters2": 1,
                    "oscillator_type": 3,
                    "over_drive_params": 1,
                    "pll_m": 1,
                    "power_config": 1,
                    "voltage_scaling": 1
                },
                "local_50": {
                    "clock_config": 1,
                    "clock_source": 1,
                    "config2": 2,
                    "config_arg2": 1,
                    "config_param2": 2,
                    "config_value2": 3,
                    "div_factor": 1,
                    "gpioc": 1,
                    "osc_config_argument1": 1,
                    "oscillator_config": 1,
                    "peripheral_clock": 1,
                    "pll_config": 1,
                    "power_config": 11,
                    "power_ex_config": 1,
                    "power_init_param1": 1,
                    "pwr_ex_config_struct": 1,
                    "voltage_config": 1
                },
                "local_54": {
                    "config1": 2,
                    "config_arg1": 1,
                    "config_param1": 2,
                    "config_value1": 3,
                    "os_config": 1,
                    "osc_config": 2,
                    "osc_config_struct": 1,
                    "osc_config_type": 1,
                    "oscillator_config": 15,
                    "oscillator_init_parameters": 1,
                    "oscillator_type": 2
                },
                "param_1": {
                    "config_params": 1,
                    "delay": 1,
                    "halrcc_get_hclk_freq_result": 1,
                    "pointer1": 1,
                    "pointer_to_config": 1,
                    "ptr1": 1,
                    "ptr_to_some_data": 1
                },
                "param_1_0": {
                    "fatrfs_connect_parameter2": 1
                },
                "param_1_1": {
                    "fatrfs_connect_parameter1": 1
                },
                "param_1_2": {
                    "fatrfs_connect": 1
                },
                "param_2": {
                    "config_value": 2,
                    "data_size": 1,
                    "halrcc_systick_config_argument2": 1,
                    "length": 1,
                    "param2": 1,
                    "period": 1
                },
                "param_3": {
                    "data_value": 1,
                    "halrcc_systick_clk_source_config_argument2": 1,
                    "param3": 1,
                    "reload_value": 1,
                    "value": 1
                },
                "param_4": {
                    "param1": 1,
                    "some_condition": 1
                },
                "uVar1": {
                    "hclk_freq": 1,
                    "hclk_frequency": 3,
                    "sys_tick_frequency": 1
                }
            },
            "called": [
                "FUN_08002488",
                "FUN_0800201c",
                "FUN_08001f9c",
                "FUN_08000e60",
                "FUN_08000f2c",
                "FUN_080025e0",
                "FUN_08000ee0"
            ],
            "calling": [
                "FUN_080034ce"
            ],
            "code": "\n\n\nvoid initialize_system_08000c8c(void)\n\n{\n  uint hclk_frequency;\n  undefined4 oscillator_config;\n  undefined4 power_config;\n  undefined4 clock_config;\n  undefined4 clock_source_config;\n  undefined4 config_value5;\n  undefined4 config_value6;\n  undefined4 config_value7;\n  undefined4 config_value8;\n  undefined4 clock_source_config;\n  undefined4 clock_config_value2;\n  undefined4 flash_latency_config;\n  undefined4 clock_config_value4;\n  undefined4 clock_config_value5;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0xc000;\n  oscillator_config = 1;\n  power_config = 0x50000;\n  clock_config = 2;\n  clock_source_config = 0x400000;\n  config_value5 = 8;\n  config_value6 = 0x150;\n  config_value7 = 2;\n  config_value8 = 7;\n  config_oscillator(&oscillator_config);\n  enable_over_drive();\n  clock_source_config = 0xf;\n  clock_config_value2 = 2;\n  flash_latency_config = 0;\n  clock_config_value4 = 0x1400;\n  clock_config_value5 = 0x1000;\n  configure_clock(&clock_source_config,5);\n  hclk_frequency = get_hclk_frequency();\n  configure_sys_tick(hclk_frequency / 1000);\n  config_sys_tick_clock_source(4);\n  set_priority(0xffffffff,0,0);\n  return;\n}\n\n",
            "current_name": "initialize_system_08000c8c",
            "entrypoint": "0x08000c8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000c8c": "initialize_system_08000c8c",
                "HAL_NVIC_SetPriority": "set_priority",
                "HAL_PWREx_EnableOverDrive": "enable_over_drive",
                "HAL_RCC_ClockConfig": "configure_clock",
                "HAL_RCC_GetHCLKFreq": "get_hclk_frequency",
                "HAL_RCC_OscConfig": "config_oscillator",
                "HAL_SYSTICK_CLKSourceConfig": "config_sys_tick_clock_source",
                "HAL_SYSTICK_Config": "configure_sys_tick",
                "local_14": "clock_config_value5",
                "local_18": "clock_config_value4",
                "local_1c": "flash_latency_config",
                "local_20": "clock_config_value2",
                "local_24": "clock_source_config",
                "local_28": "config_value8",
                "local_2c": "config_value7",
                "local_30": "config_value6",
                "local_34": "config_value5",
                "local_38": "clock_source_config",
                "local_3c": "clock_config",
                "local_50": "power_config",
                "local_54": "oscillator_config",
                "uVar1": "hclk_frequency"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000d3c": {
            "additional_data": {
                "FUN_08000d3c": {
                    "initialize_and_execute": 3,
                    "initialize_and_start_program": 1,
                    "initialize_program": 7,
                    "initialize_system": 20
                },
                "FUN_080035bc": {
                    "configure_system": 1,
                    "initialize_libc_array": 1,
                    "initialize_library": 2,
                    "perform_action3": 1
                },
                "FUN_08004658": {
                    "copy_data": 3,
                    "copy_memory": 1,
                    "perform_action1": 1
                },
                "FUN_08004884": {
                    "clear_memory": 4,
                    "perform_action2": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "jmp_table": 3,
                    "jump_table": 21,
                    "jump_table_fn": 1,
                    "unrecovered_jump_table": 1,
                    "unrecovered_jumptable": 1
                },
                "iVar1": {
                    "counter": 3,
                    "i": 1,
                    "index": 23
                },
                "puVar2": {
                    "array_pointer": 2,
                    "current_pointer": 1,
                    "data_pointer": 5,
                    "data_ptr": 2,
                    "p_data": 1,
                    "pointer": 2,
                    "ptr": 12,
                    "ptr_data": 2
                }
            },
            "called": [
                "FUN_08004658",
                "FUN_08004884",
                "FUN_080035bc"
            ],
            "calling": [],
            "code": "\n/* WARNING: This function may have set the stack pointer */\n\nvoid initialize_system_08000d3c(void)\n\n{\n  int index;\n  undefined4 *ptr;\n  code *jump_table;\n  \n  for (index = 0; (undefined4 *)(index + 0x20000000) < &DAT_20000104; index = index + 4) {\n    *(undefined4 *)(index + 0x20000000) = *(undefined4 *)(index + 0x8006034);\n  }\n  for (ptr = &DAT_20000104; ptr < &DAT_20000678; ptr = ptr + 1) {\n    *ptr = 0;\n  }\n  SystemInit();\n  __libc_init_array();\n  jump_table = (code *)0x8000d72;\n  main();\n                    /* WARNING: Could not recover jumptable at 0x08000d72. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "initialize_system_08000d3c",
            "entrypoint": "0x08000d3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000d3c": "initialize_system_08000d3c",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "iVar1": "index",
                "puVar2": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000d8e": {
            "additional_data": {
                "FUN_08000d8e": {
                    "init_hardware_config": 1,
                    "initialize_hardware": 3,
                    "initialize_hardware_config": 10,
                    "initialize_hardware_configuration": 15,
                    "initialize_hw_config": 2
                },
                "FUN_080034ce": {
                    "configure_hardware": 5,
                    "execute_additional_setup": 1,
                    "hardware_config_subfunction": 1,
                    "init_secondary_components": 1,
                    "init_sub_function": 1,
                    "initialize_additional_features": 1,
                    "initialize_hw_subcomponent": 1,
                    "initialize_subcomponent": 1,
                    "initialize_subsystem": 1,
                    "load_configuration": 1,
                    "perform_additional_configuration": 3,
                    "perform_additional_initialization": 4,
                    "perform_additional_operations": 1,
                    "perform_additional_setup": 3,
                    "perform_additional_tasks": 2,
                    "perform_auxiliary_process": 1,
                    "perform_subfunction": 1
                },
                "hw_config_init": {
                    "initialize_hardware": 3,
                    "initialize_hardware_configuration": 1
                }
            },
            "called": [
                "FUN_080034ce"
            ],
            "calling": [
                "FUN_08004648"
            ],
            "code": "\nvoid initialize_hardware_configuration_08000d8e(void)\n\n{\n  initialize_hardware();\n  return;\n}\n\n",
            "current_name": "initialize_hardware_configuration_08000d8e",
            "entrypoint": "0x08000d8e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000d8e": "initialize_hardware_configuration_08000d8e",
                "hw_config_init": "initialize_hardware"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000d96": {
            "called": [],
            "calling": [
                "FUN_08000de4"
            ],
            "code": "\nvoid FUNC_08000d96(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08000d96",
            "entrypoint": "0x08000d96",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08000d96": "FUNC_08000d96"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08000d98": {
            "additional_data": {
                "0xf": {
                    "max_priority": 1
                },
                "DAT_20000024": {
                    "delay_ms": 1,
                    "desired_frequency": 1,
                    "milliseconds": 1,
                    "period": 1,
                    "sys_tick_frequency": 2,
                    "sys_tick_resolution": 1,
                    "systick_freq": 1,
                    "systick_hz": 1,
                    "tick_period": 1,
                    "time_per_millisecond": 1
                },
                "DAT_20000028": {
                    "current_priority": 4,
                    "global_priority": 1,
                    "interrupt_priority": 7
                },
                "DAT_2000002c": {
                    "sys_tick_clock": 1,
                    "sys_tick_frequency": 2,
                    "sys_tick_reload_value": 3,
                    "systick_frequency": 1,
                    "systick_interval": 1,
                    "systick_reload_value": 1,
                    "tick_frequency": 1,
                    "timer_frequency": 1
                },
                "FUN_08000d98": {
                    "config_systick_and_set_priority": 1,
                    "configure_sys_tick": 14,
                    "configure_systick": 1,
                    "configure_systick_and_nvic": 1,
                    "configure_systick_and_priority": 1,
                    "configure_systick_timer": 1,
                    "initialize_sys_tick": 2,
                    "initialize_sys_tick_timer": 1,
                    "initialize_system": 1,
                    "initialize_system_tick": 1,
                    "initialize_systick": 2,
                    "initialize_systick_timer": 2,
                    "initialize_timer": 2
                },
                "FUN_08000e60": {
                    "configure_periph_a": 1,
                    "configure_systick": 1,
                    "set_sys_tick_config": 2,
                    "some_function1": 1
                },
                "FUN_08000ee0": {
                    "configure_periph_b": 1,
                    "get_return_value": 1,
                    "set_nvic_priority": 2,
                    "some_function2": 1
                },
                "F_UNK_08000d98": {
                    "configure_sys_tick": 1
                },
                "HAL_NVIC_SetPriority": {
                    "set_interrupt_priority": 7,
                    "set_nvic_priority": 1,
                    "set_priority": 2,
                    "set_priority_nvic": 1
                },
                "HAL_SYSTICK_Config": {
                    "configure_sys_tick": 5,
                    "configure_sys_tick_frequency": 1,
                    "configure_sys_tick_interval": 1,
                    "configure_sys_tick_reload": 1,
                    "configure_sys_tick_timer": 2,
                    "configure_sys_tick_timing": 1
                },
                "iVar1": {
                    "config_result": 7,
                    "config_status": 7,
                    "result": 9,
                    "status": 3,
                    "systick_config_result": 2,
                    "systick_config_status": 1
                },
                "param_1": {
                    "ir_qn": 1,
                    "param1": 1,
                    "priority": 8,
                    "priority_level": 20,
                    "status": 1
                },
                "param_2": {
                    "param2": 1,
                    "reload_value": 1,
                    "tick_value": 1
                },
                "param_3": {
                    "clock_frequency": 1,
                    "param3": 1,
                    "tick_interval": 1
                }
            },
            "called": [
                "FUN_08000e60",
                "FUN_08000ee0"
            ],
            "calling": [
                "FUN_08002488",
                "FUN_08000de4"
            ],
            "code": "\nundefined4 configure_sys_tick_08000d98(uint priority_level)\n\n{\n  int result;\n  \n  result = configure_sys_tick_08000d98(DAT_2000002c / (1000 / DAT_20000024));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < priority_level) {\n    return 1;\n  }\n  set_interrupt_priority(0xffffffff,priority_level,0);\n  DAT_20000028 = priority_level;\n  return 0;\n}\n\n",
            "current_name": "configure_sys_tick_08000d98",
            "entrypoint": "0x08000d98",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000d98": "configure_sys_tick_08000d98",
                "HAL_NVIC_SetPriority": "set_interrupt_priority",
                "HAL_SYSTICK_Config": "configure_sys_tick",
                "iVar1": "result",
                "param_1": "priority_level"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000de4": {
            "additional_data": {
                "FUNC_08000d96": {
                    "initialize_gpio": 1,
                    "initialize_hal_msp": 1,
                    "initialize_hal_pins": 1,
                    "initialize_hardware": 1,
                    "initialize_hardware_in_low_power_mode": 1,
                    "initialize_msp": 4,
                    "initialize_periph": 3,
                    "initialize_peripheral": 5,
                    "initialize_peripherals": 5,
                    "initialize_system": 2,
                    "perform_additional_initialization": 1,
                    "perform_start_up_tasks": 1
                },
                "FUN_08000d98": {
                    "configurate_nvic": 1,
                    "configure_interrupt": 3,
                    "configure_interrupts": 2,
                    "configure_irq": 1,
                    "configure_nvic_priority": 1,
                    "configure_peripheral": 2,
                    "configure_priority": 1,
                    "do_something": 1,
                    "initialize_nvic": 1,
                    "perform_initialization": 1,
                    "process_input": 1,
                    "process_parameter": 1,
                    "set_nvic_priority": 1,
                    "set_priority": 7,
                    "set_register": 1,
                    "update_priority_group": 1
                },
                "FUN_08000de4": {
                    "initialize": 2,
                    "initialize_and_configure": 2,
                    "initialize_hal": 5,
                    "initialize_hal_components": 1,
                    "initialize_hardware": 13,
                    "initialize_peripheral": 2,
                    "initialize_system": 6
                },
                "FUN_08000e3c": {
                    "configure_device": 2,
                    "configure_peripheral": 1,
                    "configure_system": 1,
                    "configure_tick": 5,
                    "configure_ticker": 1,
                    "execute_task": 1,
                    "init_tick": 1,
                    "initialize_tick": 7,
                    "set_peripheral_state": 1,
                    "set_system_tick": 1,
                    "set_tick": 2,
                    "set_tick_frequency": 1,
                    "set_tick_interval": 1,
                    "set_timer": 1
                },
                "HAL_InitTick": {
                    "initialize_system_tick": 1,
                    "initialize_tick": 5
                },
                "HAL_MspInit": {
                    "initialize_msp": 3,
                    "initialize_periph": 2,
                    "initialize_peripherals": 1
                },
                "HAL_NVIC_SetPriorityGrouping": {
                    "configure_interrupt_priority": 1,
                    "set_interrupt_priority_group": 3,
                    "set_interrupt_priority_grouping": 1,
                    "set_nvic_priority_grouping": 1
                },
                "_DAT_40023c00": {
                    "irq_flags": 1
                },
                "param_1": {
                    "config_flags": 1,
                    "config_param": 1,
                    "config_value": 2,
                    "data": 1,
                    "input": 1,
                    "input_value": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08000d98",
                "FUN_08000e3c",
                "FUN_08000d96"
            ],
            "calling": [
                "FUN_080034ce"
            ],
            "code": "\n\n\nundefined4 initialize_hardware_08000de4(void)\n\n{\n  _DAT_40023c00 = _DAT_40023c00 | 0x700;\n  set_interrupt_priority_group(3);\n  initialize_tick(0xf);\n  initialize_msp();\n  return 0;\n}\n\n",
            "current_name": "initialize_hardware_08000de4",
            "entrypoint": "0x08000de4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000de4": "initialize_hardware_08000de4",
                "HAL_InitTick": "initialize_tick",
                "HAL_MspInit": "initialize_msp",
                "HAL_NVIC_SetPriorityGrouping": "set_interrupt_priority_group"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000e18": {
            "additional_data": {
                "DAT_20000024": {
                    "data": 1,
                    "increment_value": 1,
                    "input": 4,
                    "input_number": 2,
                    "input_value": 12,
                    "new_number": 1,
                    "new_value": 1,
                    "number_to_add": 1,
                    "operand": 1,
                    "sum_value": 1,
                    "value": 2,
                    "value_to_add": 2
                },
                "DAT_20000670": {
                    "accumulated_value": 2,
                    "accumulator": 1,
                    "counter": 1,
                    "current_sum": 1,
                    "result": 10,
                    "sum": 10,
                    "total": 1,
                    "updated_sum": 1,
                    "updated_value": 2
                },
                "FUN_08000e18": {
                    "accumulate_value": 1,
                    "accumulate_values": 2,
                    "add_and_update_values": 1,
                    "add_data_to_counter": 1,
                    "add_data_to_global_variable": 1,
                    "add_data_to_variable": 1,
                    "add_unsigned_integers": 2,
                    "add_value_to_sum": 1,
                    "addition": 2,
                    "addition_function": 1,
                    "addition_operation": 1,
                    "addition_with_previous_sum": 1,
                    "addition_wrapper": 1,
                    "calculate_sum": 4,
                    "increment_and_store_value": 1,
                    "increment_global_variable": 1,
                    "increment_sum": 1,
                    "update_sum": 6,
                    "update_value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08003476"
            ],
            "code": "\nvoid update_sum_08000e18(void)\n\n{\n  DAT_20000670 = (uint)DAT_20000024 + DAT_20000670;\n  return;\n}\n\n",
            "current_name": "update_sum_08000e18",
            "entrypoint": "0x08000e18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000e18": "update_sum_08000e18"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000e30": {
            "additional_data": {
                "DAT_20000670": {
                    "constant_value": 1,
                    "dat_value": 1,
                    "data": 9,
                    "data_constant": 1,
                    "data_from_memory": 1,
                    "global_data": 3,
                    "global_value": 1,
                    "global_variable": 2,
                    "global_variable_value": 3
                },
                "FUN_08000e30": {
                    "get_constant_value": 3,
                    "get_dat20000670": 1,
                    "get_dat_value": 1,
                    "get_data": 10,
                    "get_data_constant": 1,
                    "get_data_from_memory": 1,
                    "get_data_value": 5,
                    "get_global_data": 3,
                    "get_global_value": 1,
                    "get_global_variable": 2,
                    "get_global_variable_value": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08002d0c",
                "FUN_08002488",
                "FUN_0800201c",
                "FUN_08003d18",
                "FUN_08002dd0",
                "FUN_08001f9c",
                "FUN_0800346c"
            ],
            "code": "\nundefined4 get_data_value_08000e30(void)\n\n{\n  return DAT_20000670;\n}\n\n",
            "current_name": "get_data_value_08000e30",
            "entrypoint": "0x08000e30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000e30": "get_data_value_08000e30"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000e3c": {
            "additional_data": {
                "0x5fa0000": {
                    "constant": 1,
                    "setting_value": 1
                },
                "0xf8ff": {
                    "clear_mask": 1,
                    "mask": 1
                },
                "FUN_08000e3c": {
                    "set_config_register": 1,
                    "set_register_bits": 1,
                    "update_bits": 1,
                    "update_config": 3,
                    "update_config_value": 1,
                    "update_configuration": 6,
                    "update_data": 3,
                    "update_data_register": 1,
                    "update_data_value": 1,
                    "update_flags": 1,
                    "update_memory_address": 1,
                    "update_memory_configuration": 1,
                    "update_register_value": 6,
                    "update_value_in_memory": 1,
                    "update_value_in_register": 1,
                    "update_value_with_flags": 1,
                    "update_value_with_mask": 1
                },
                "_DAT_e000ed0c": {
                    "config": 1,
                    "config_register": 1,
                    "config_value": 1,
                    "configuration": 1,
                    "configuration_data": 1,
                    "configuration_value": 1,
                    "current_config": 2,
                    "current_value": 2,
                    "data": 3,
                    "data_register": 2,
                    "existing_config": 1,
                    "flags": 1,
                    "memory_address": 1,
                    "memory_config": 1,
                    "memory_value": 1,
                    "register": 1,
                    "register_value": 6
                },
                "param_1": {
                    "config_flags": 1,
                    "config_value": 3,
                    "data": 1,
                    "data_value": 1,
                    "flags": 1,
                    "input": 4,
                    "input_config": 1,
                    "input_value": 14,
                    "new_value": 1,
                    "value": 4
                },
                "param_2": {
                    "unused_parameter": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004648",
                "FUN_08000de4"
            ],
            "code": "\n\n\nvoid update_value_in_memory_08000e3c(uint input_value)\n\n{\n  _DAT_e000ed0c = (input_value & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "current_name": "update_value_in_memory_08000e3c",
            "entrypoint": "0x08000e3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000e3c": "update_value_in_memory_08000e3c",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000e60": {
            "additional_data": {
                "1": {
                    "bit_mask": 1
                },
                "3": {
                    "shift_threshold": 1
                },
                "4": {
                    "max_shift": 1
                },
                "7": {
                    "shift_limit": 1
                },
                "FUN_08000e60": {
                    "apply_bitwise_operations": 1,
                    "apply_mask_and_shift": 1,
                    "process_data": 1,
                    "set_char_value": 1,
                    "store_data_in_memory": 1,
                    "update_byte_at_offset": 1,
                    "update_char_in_memory": 1,
                    "update_char_value": 1,
                    "update_character": 6,
                    "update_character_buffer": 1,
                    "update_character_color": 1,
                    "update_data": 4,
                    "update_display": 1,
                    "update_memory": 5,
                    "update_memory_location": 1,
                    "update_register_value": 2,
                    "write_to_memory": 2
                },
                "char": {
                    "byte": 1
                },
                "param_1": {
                    "address": 9,
                    "character_index": 7,
                    "character_offset": 1,
                    "data_address": 1,
                    "data_index": 1,
                    "data_offset": 1,
                    "display_address": 1,
                    "index": 1,
                    "memory_location": 1,
                    "offset": 2,
                    "offset_address": 1,
                    "output_address": 1,
                    "position": 1,
                    "register_address": 1,
                    "register_index": 1,
                    "value": 1
                },
                "param_1_final": {
                    "target_address": 1
                },
                "param_1_temp": {
                    "temp_address": 1
                },
                "param_2": {
                    "bit_mask": 3,
                    "bitmask1": 1,
                    "color_bit_mask": 1,
                    "control_bits": 1,
                    "current_character": 1,
                    "data": 6,
                    "data1": 1,
                    "mask": 8,
                    "mask1": 1,
                    "mask_value": 1,
                    "old_value": 1,
                    "original_value": 1,
                    "param1": 1,
                    "register_value": 1,
                    "value": 2,
                    "value1": 1
                },
                "param_3": {
                    "bit_value": 1,
                    "bitmask2": 1,
                    "color_data": 1,
                    "data": 9,
                    "data2": 1,
                    "data_bits": 1,
                    "input_value": 1,
                    "mask": 8,
                    "mask2": 1,
                    "mask_value": 1,
                    "new_character": 1,
                    "new_value": 2,
                    "param2": 1,
                    "value": 1,
                    "value2": 1
                },
                "uVar1": {
                    "bit_shift": 1,
                    "masked_bits": 1,
                    "masked_value": 1,
                    "result": 1,
                    "shift": 2,
                    "shift_amount": 12,
                    "shift_amount1": 1,
                    "shift_factor": 1,
                    "shift_value": 1,
                    "shifted_bits": 5,
                    "shifted_data": 1,
                    "shifted_mask": 1,
                    "shifted_value": 1,
                    "value": 1
                },
                "uVar1_2": {
                    "shifted_masked_value": 1
                },
                "uVar1_final": {
                    "masked_data": 1
                },
                "uVar1_masked": {
                    "masked_with_mask2": 1
                },
                "uVar1_modified": {
                    "bit_offset": 1
                },
                "uVar1_shifted": {
                    "shifted_mask1": 1
                },
                "uVar1_temp": {
                    "temp1": 1
                },
                "uVar1_updated": {
                    "adjusted_shift_amount": 1,
                    "shift_mask": 1
                },
                "uVar2": {
                    "adjusted_shift": 1,
                    "adjusted_shift_amount": 1,
                    "bit_mask": 1,
                    "bit_position": 2,
                    "bit_shift": 1,
                    "difference": 1,
                    "limit": 1,
                    "num_bits_to_keep": 1,
                    "offset": 3,
                    "remaining_bits": 4,
                    "remaining_shift": 1,
                    "shift_amount": 1,
                    "shift_amount2": 1,
                    "shift_count": 2,
                    "shift_difference": 1,
                    "shifted_amount": 1,
                    "shifted_bits": 2,
                    "shifted_data": 1,
                    "shifted_difference": 1,
                    "shifted_mask": 1,
                    "shifted_value": 2
                },
                "uVar2_modified": {
                    "num_bits": 1
                },
                "uVar2_updated": {
                    "adjusted_bit_position": 1
                },
                "uVar3": {
                    "adjusted_shifted_bits": 1,
                    "limit": 1,
                    "mask1": 1,
                    "temp1": 1,
                    "temp_var": 1,
                    "tmp": 1
                },
                "uVar4": {
                    "adjusted_color_data": 1,
                    "mask": 1,
                    "mask2": 1,
                    "shift_result": 1,
                    "shifted_value": 1,
                    "temp2": 1
                },
                "uVar5": {
                    "final_result": 1,
                    "mask": 1,
                    "masked_value": 2,
                    "result": 1
                },
                "uVar6": {
                    "result": 1,
                    "shifted_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003e54",
                "FUN_08000d98",
                "FUN_08003eac",
                "FUN_08000c8c"
            ],
            "code": "\n\n\nvoid update_character_buffer_08000e60(uint address,uint mask,uint data)\n\n{\n  uint shift_amount;\n  uint remaining_bits;\n  \n  shift_amount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  remaining_bits = 7 - shift_amount;\n  if (3 < remaining_bits) {\n    remaining_bits = 4;\n  }\n  if (shift_amount + 4 < 7) {\n    shift_amount = 0;\n  }\n  else {\n    shift_amount = shift_amount - 3;\n  }\n  shift_amount = (mask & (1 << (remaining_bits & 0xff)) - 1U) << (shift_amount & 0xff) |\n          (1 << (shift_amount & 0xff)) - 1U & data;\n  if ((int)address < 0) {\n    *(byte *)((address & 0xf) + 0xe000ed14) = (byte)(shift_amount << 4);\n  }\n  else {\n    *(byte *)(address + 0xe000e400) = (byte)(shift_amount << 4);\n  }\n  return;\n}\n\n",
            "current_name": "update_character_buffer_08000e60",
            "entrypoint": "0x08000e60",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000e60": "update_character_buffer_08000e60",
                "char": "byte",
                "param_1": "address",
                "param_2": "mask",
                "param_3": "data",
                "uVar1": "shift_amount",
                "uVar2": "remaining_bits"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000ec4": {
            "additional_data": {
                "FUN_08000ec4": {
                    "set_bit": 7,
                    "set_bit_at_index": 5,
                    "set_bit_at_position": 1,
                    "set_bit_in_array": 12,
                    "set_bit_in_integer_array": 1,
                    "set_bit_in_memory": 1,
                    "set_bit_value": 4
                },
                "int": {
                    "array_index": 1,
                    "bits": 1,
                    "int": 1,
                    "integer": 1
                },
                "new_variable_name_1": {
                    "bit_mask": 1
                },
                "param_1": {
                    "bit_index": 12,
                    "bit_position": 4,
                    "index": 13,
                    "position": 2
                },
                "param_1_old": {
                    "bit_index": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003e54",
                "FUN_08003eac"
            ],
            "code": "\nvoid set_bit_in_integer_array_08000ec4(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)((index >> 5) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "current_name": "set_bit_in_integer_array_08000ec4",
            "entrypoint": "0x08000ec4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000ec4": "set_bit_in_integer_array_08000ec4",
                "param_1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000ee0": {
            "additional_data": {
                "DAT_e000ed23": {
                    "config_status": 1,
                    "constant_flag": 1,
                    "constant_value": 8,
                    "device_status": 1,
                    "flag": 1,
                    "flags": 1,
                    "heap_threshold": 1,
                    "initial_value": 1,
                    "memory_value": 1,
                    "register_status": 1,
                    "status": 6,
                    "status_flag": 4
                },
                "FUN_08000ee0": {
                    "initialize_config": 1,
                    "initialize_data": 6,
                    "initialize_device": 1,
                    "initialize_memory": 7,
                    "initialize_parameters": 3,
                    "initialize_settings": 1,
                    "initialize_values": 1,
                    "initialize_variables": 1,
                    "set_initial_values": 1,
                    "set_parameters": 5,
                    "set_register_values": 1,
                    "set_registers": 1,
                    "update_data": 1,
                    "update_memory_info": 1
                },
                "_DAT_8000e014": {
                    "lower_bound": 1
                },
                "_DAT_e000e010": {
                    "bitmask": 1,
                    "buffer_size": 1,
                    "config_flag": 1,
                    "count": 1,
                    "counter": 1,
                    "device_type": 1,
                    "flag": 9,
                    "flag_value": 2,
                    "limit": 2,
                    "mode": 1,
                    "multiplier": 1,
                    "number_of_pages": 1,
                    "register_flag": 1,
                    "some_value": 1,
                    "threshold": 3,
                    "updated_value_2": 1,
                    "value_to_compare": 1,
                    "variable2": 1
                },
                "_DAT_e000e014": {
                    "adjusted_value": 1,
                    "configured_value": 1,
                    "data": 1,
                    "data_pointer": 1,
                    "device_config": 1,
                    "initialized_memory_size": 1,
                    "memory_address": 3,
                    "memory_index": 1,
                    "memory_pointer": 1,
                    "modified_input": 2,
                    "modified_value": 5,
                    "new_value": 1,
                    "param_minus_one": 1,
                    "register_value": 2,
                    "result": 1,
                    "start_address": 1,
                    "stored_value": 1,
                    "updated_param": 1,
                    "updated_value": 4
                },
                "_DAT_e000e018": {
                    "additional_data": 1,
                    "counter": 16,
                    "device_mode": 1,
                    "flag_value": 1,
                    "heap_size": 1,
                    "initialized_flag": 1,
                    "initialized_value": 2,
                    "register_counter": 1,
                    "reserved_value": 1,
                    "reset_value": 1,
                    "sub_parameter": 1,
                    "unused_value": 1,
                    "unused_variable": 1,
                    "updated_value_1": 1,
                    "variable1": 1
                },
                "param_1": {
                    "device_id": 1,
                    "input": 1,
                    "input_size": 1,
                    "input_value": 10,
                    "memory_size": 2,
                    "number": 1,
                    "size": 2,
                    "value": 13
                }
            },
            "called": [],
            "calling": [
                "FUN_08000d98",
                "FUN_08000c8c"
            ],
            "code": "\n\n\nundefined4 initialize_memory_08000ee0(int value)\n\n{\n  if (value - 1U < 0x1000000) {\n    _DAT_e000e014 = value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_memory_08000ee0",
            "entrypoint": "0x08000ee0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000ee0": "initialize_memory_08000ee0",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000f0c": {
            "additional_data": {
                "0x1f": {
                    "bit_position": 1
                },
                "0x1fff1f00": {
                    "array_address": 1
                },
                "0x60": {
                    "array_base_offset": 1,
                    "base_offset": 1
                },
                "1": {
                    "bit_mask": 1
                },
                "FUN_08000f0c": {
                    "set_bit": 9,
                    "set_bit_at_index": 1,
                    "set_bit_at_position": 2,
                    "set_bit_in_array": 11,
                    "set_bit_in_memory": 5,
                    "set_bit_value": 1,
                    "set_bit_with_value": 1,
                    "store_bitwise_value": 1
                },
                "inputValue": {
                    "input_value": 1
                },
                "int": {
                    "bit_array": 1,
                    "integer": 1
                },
                "param_1": {
                    "bit_index": 12,
                    "bit_number": 1,
                    "bit_position": 5,
                    "index": 9,
                    "position": 2,
                    "value": 2
                },
                "value": {
                    "input_value": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid set_bit_in_array_08000f0c(ubit_array bit_index)\n\n{\n  if (-1 < (bit_array)bit_index) {\n    *(bit_array *)(((bit_index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (bit_index & 0x1f);\n  }\n  return;\n}\n\n",
            "current_name": "set_bit_in_array_08000f0c",
            "entrypoint": "0x08000f0c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000f0c": "set_bit_in_array_08000f0c",
                "int": "bit_array",
                "param_1": "bit_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000f2c": {
            "additional_data": {
                "FUN_08000f2c": {
                    "check_param_and_modify_dat_e000e010": 1,
                    "configure_peripheral": 1,
                    "set_bit_in_reg": 1,
                    "set_control_bit": 1,
                    "set_flag": 5,
                    "set_flag_based_on_param": 1,
                    "set_flag_if_param_equals_four": 1,
                    "set_flag_value": 1,
                    "update_configuration": 1,
                    "update_control_register": 2,
                    "update_data_flag": 1,
                    "update_e000e010_flag": 1,
                    "update_flag": 3,
                    "update_flag_based_on_param": 1,
                    "update_flag_value": 1,
                    "update_flags": 1,
                    "update_register_status": 2,
                    "update_status": 5,
                    "update_status_bits": 1
                },
                "_DAT_e000e010": {
                    "configuration_register": 1,
                    "control_register": 2,
                    "data_register": 1,
                    "flag": 1,
                    "flag_register": 10,
                    "flag_value": 1,
                    "register": 3,
                    "register_status": 1,
                    "register_value": 2,
                    "status_flag": 1,
                    "status_reg": 1,
                    "status_register": 5
                },
                "param_1": {
                    "bit_position": 1,
                    "bit_value": 1,
                    "configuration": 1,
                    "flag": 3,
                    "flag_value": 7,
                    "input": 3,
                    "input_value": 4,
                    "param": 2,
                    "peripheral_index": 1,
                    "status": 8
                },
                "param_2": {
                    "new_bit_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08000c8c"
            ],
            "code": "\n\n\nvoid update_register_status_08000f2c(int status)\n\n{\n  if (status != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "current_name": "update_register_status_08000f2c",
            "entrypoint": "0x08000f2c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000f2c": "update_register_status_08000f2c",
                "param_1": "status"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000f4c": {
            "called": [],
            "calling": [
                "FUN_08000f4e"
            ],
            "code": "\nvoid FUNC_08000f4c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08000f4c",
            "entrypoint": "0x08000f4c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08000f4c": "FUNC_08000f4c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08000f4e": {
            "additional_data": {
                "FUNC_08000f4c": {
                    "init_sys_tick": 1,
                    "initialize_sys_tick": 2,
                    "initialize_system": 1,
                    "initialize_system_tick": 1,
                    "initialize_systick": 1,
                    "perform_additional_operations": 1,
                    "perform_callback": 1,
                    "perform_f4c": 1,
                    "perform_halt_operation": 1,
                    "perform_task": 1
                },
                "FUN_08000f4e": {
                    "execute_hal_systick_callback": 1,
                    "execute_sys_tick_callback": 2,
                    "execute_systick_callback": 4,
                    "handle_sys_tick": 2,
                    "handle_sys_tick_callback": 3,
                    "handle_sys_tick_interrupt": 2,
                    "handle_system_tick": 1,
                    "initialize_system": 1,
                    "initialize_system_tick": 2,
                    "initialize_systick": 2,
                    "initialize_systick_callback": 1,
                    "perform_systick_callback": 2,
                    "process_sys_tick_interrupt": 1,
                    "update_system_tick": 2,
                    "update_system_tick_callback": 4,
                    "update_systick_callback": 1
                },
                "HAL_SYSTICK_Callback": {
                    "call_systick_callback": 1,
                    "handle_sys_tick": 1,
                    "handle_sys_tick_callback": 2,
                    "handle_sys_tick_interrupt": 1,
                    "handle_system_tick": 6,
                    "handle_systick_interrupt": 1,
                    "perform_sys_tick_callback": 1,
                    "perform_system_tick_callback": 1,
                    "process_sys_tick_event": 1,
                    "systick_callback": 1
                }
            },
            "called": [
                "FUN_08000f4c"
            ],
            "calling": [
                "FUN_08003476"
            ],
            "code": "\nvoid update_system_tick_callback_08000f4e(void)\n\n{\n  handle_system_tick();\n  return;\n}\n\n",
            "current_name": "update_system_tick_callback_08000f4e",
            "entrypoint": "0x08000f4e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000f4e": "update_system_tick_callback_08000f4e",
                "HAL_SYSTICK_Callback": "handle_system_tick"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000f56": {
            "additional_data": {
                "FUN_08000f56": {
                    "clear_audio_configuration": 1,
                    "deinit_dac": 2,
                    "deinitialize_dac": 1,
                    "init_dac": 1,
                    "initialize_audio": 1,
                    "initialize_dac": 13,
                    "initialize_device": 7,
                    "initialize_widget": 1,
                    "reset_dac": 1,
                    "reset_dac_settings": 1,
                    "reset_device": 1,
                    "update_device_settings": 1
                },
                "FUN_080033c8": {
                    "disable_dac_interrupts": 1,
                    "helper_function": 1,
                    "some_function": 1
                },
                "HAL_DAC_MspDeInit": {
                    "deinit_dac_msp": 1,
                    "deinit_dac_peripheral": 1,
                    "deinitialize_dac": 17,
                    "deinitialize_dac_gpio": 1,
                    "deinitialize_dac_msp": 3,
                    "deinitialize_dac_peripherals": 2,
                    "deinitialize_haldac": 1
                },
                "param_1": {
                    "audio_config": 1,
                    "audio_handle": 1,
                    "dac_address": 7,
                    "dac_base_address": 1,
                    "dac_handle": 5,
                    "dac_instance": 1,
                    "dac_ptr": 3,
                    "dac_setting_ptr": 1,
                    "device_address": 3,
                    "device_data": 1,
                    "device_id": 2,
                    "device_pointer": 1,
                    "device_ptr": 2,
                    "param_1": 1,
                    "widget": 1
                },
                "undefined": {
                    "void": 1
                }
            },
            "called": [
                "FUN_080033c8"
            ],
            "calling": [
                "FUN_080033d8"
            ],
            "code": "\nvoid4 initialize_dac_08000f56(int dac_address)\n\n{\n  if (dac_address != 0) {\n    *(void *)(dac_address + 4) = 2;\n    deinitialize_dac_08000f56();\n    *(void4 *)(dac_address + 0x10) = 0;\n    *(void *)(dac_address + 4) = 0;\n    *(void *)(dac_address + 5) = 0;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_dac_08000f56",
            "entrypoint": "0x08000f56",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000f56": "initialize_dac_08000f56",
                "HAL_DAC_MspDeInit": "deinitialize_dac",
                "param_1": "dac_address",
                "undefined": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000f72": {
            "additional_data": {
                "FUN_08000f72": {
                    "clear_bit_and_set_flag": 23,
                    "clear_bit_and_update_status": 1,
                    "clear_bit_in_pointer": 1,
                    "set_bit_to_zero": 2,
                    "update_bit": 1,
                    "update_bit_and_set_flag": 3
                },
                "param_1": {
                    "array_pointer": 1,
                    "bit_address": 1,
                    "bit_array": 7,
                    "bit_pointer": 4,
                    "bit_vector": 1,
                    "bits": 1,
                    "data": 3,
                    "data_pointer": 1,
                    "input": 2,
                    "input_array": 1,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "p_pointer": 1,
                    "param_array": 1,
                    "pointer": 1,
                    "pointer_to_value": 2,
                    "ptr_to_value": 1,
                    "values": 1
                },
                "param_1_0": {
                    "target_value": 1
                },
                "param_1_1": {
                    "flag_value": 1
                },
                "param_2": {
                    "bit_index": 11,
                    "bit_position": 20
                },
                "undefined4": {
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080033d8"
            ],
            "code": "\nresult clear_bit_and_set_flag_08000f72(uint **bit_array,uint bit_position)\n\n{\n  **bit_array = **bit_array & ~(1 << (bit_position & 0xff));\n  *(undefined *)(bit_array + 1) = 1;\n  return 0;\n}\n\n",
            "current_name": "clear_bit_and_set_flag_08000f72",
            "entrypoint": "0x08000f72",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000f72": "clear_bit_and_set_flag_08000f72",
                "param_1": "bit_array",
                "param_2": "bit_position",
                "undefined4": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000f8c": {
            "additional_data": {
                "0x02": {
                    "expected_status": 1
                },
                "0x15": {
                    "constant_value": 1
                },
                "0x35": {
                    "condition_address": 1,
                    "flag_offset": 1
                },
                "0x80": {
                    "default_data": 1,
                    "new_value": 1
                },
                "0xfffffffe": {
                    "bit_mask": 2,
                    "mask": 2
                },
                "5": {
                    "new_status_flag": 1,
                    "new_value": 1,
                    "updated_status": 1
                },
                "DAT_08000000": {
                    "mask": 1
                },
                "DAT_08001035": {
                    "status": 1
                },
                "FUN_08000f8c": {
                    "change_param_and_check_validity": 1,
                    "check_and_update_parameter": 1,
                    "check_and_update_value": 1,
                    "update_and_check_value": 2,
                    "update_data": 3,
                    "update_data_if_flag_set": 1,
                    "update_flag_and_value": 1,
                    "update_flag_value": 1,
                    "update_param": 3,
                    "update_param_and_return_status": 1,
                    "update_param_status": 2,
                    "update_param_value": 2,
                    "update_parameter": 6,
                    "update_parameter_value": 1,
                    "update_status": 2,
                    "update_value": 2,
                    "update_value_if_condition_met": 1
                },
                "PTR_08001035": {
                    "status_ptr": 1
                },
                "PTR_param_1": {
                    "param_ptr": 1
                },
                "char_1": {
                    "character": 1
                },
                "param_1": {
                    "array_pointer": 1,
                    "data": 5,
                    "input": 1,
                    "input_array": 1,
                    "input_ptr": 1,
                    "param": 2,
                    "param_array": 5,
                    "param_list": 1,
                    "parameter": 6,
                    "parameter_array": 1,
                    "parameter_list": 1,
                    "parameters": 3,
                    "params": 2,
                    "status": 1
                },
                "uint": {
                    "updated_value": 1
                },
                "uint_1": {
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001ab0",
                "FUN_08002ffc"
            ],
            "code": "\nundefined4 update_flag_and_value_08000f8c(updated_value **parameter)\n\n{\n  if (*(char *)((int)parameter + 0x35) != '\\x02') {\n    parameter[0x15] = (updated_value *)0x80;\n    return 1;\n  }\n  *(undefined *)((int)parameter + 0x35) = 5;\n  **parameter = **parameter & 0xfffffffe;\n  return 0;\n}\n\n",
            "current_name": "update_flag_and_value_08000f8c",
            "entrypoint": "0x08000f8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000f8c": "update_flag_and_value_08000f8c",
                "param_1": "parameter",
                "uint": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000fb4": {
            "additional_data": {
                "FUN_08000fb4": {
                    "reverse_binary_data": 1,
                    "update_bits": 2,
                    "update_data": 1,
                    "update_memory": 2,
                    "update_memory_values": 1,
                    "update_parameters": 1,
                    "update_params": 2,
                    "update_registers": 18,
                    "update_registers_and_flags": 1
                },
                "_DAT_40013800": {
                    "reg_address": 1
                },
                "_DAT_40013c00": {
                    "register_value1": 2
                },
                "_DAT_40013c04": {
                    "register_value2": 2
                },
                "_DAT_40013c08": {
                    "register_value3": 2
                },
                "_DAT_40013c0c": {
                    "global_var1": 1,
                    "register_value": 1,
                    "register_value4": 1
                },
                "_DAT_40023844": {
                    "global_var2": 1
                },
                "iVar6": {
                    "array_index": 1,
                    "array_index1": 1,
                    "byte_idx": 1,
                    "first_index": 1,
                    "group_index": 1,
                    "high_index": 1,
                    "index1": 8,
                    "index_div8": 1,
                    "index_var1": 1,
                    "index_var_1": 1,
                    "offset1": 1,
                    "reg_index": 2,
                    "register_index": 4,
                    "register_index1": 3,
                    "row_index": 1,
                    "target_index": 1,
                    "temp3": 1,
                    "temp_var6": 1
                },
                "iVar8": {
                    "array_index2": 1,
                    "bit_index": 1,
                    "bit_offset": 2,
                    "bit_shift": 2,
                    "bit_shift3": 1,
                    "bit_shift_offset": 1,
                    "col_index": 1,
                    "high_shift": 1,
                    "index2": 3,
                    "index3": 5,
                    "index_mod8": 1,
                    "index_var2": 1,
                    "index_var_2": 1,
                    "offset3": 1,
                    "register_index2": 2,
                    "second_index": 1,
                    "shift": 1,
                    "shift_amount": 2,
                    "shifted_bits": 1,
                    "temp5": 1,
                    "temp_var8": 1
                },
                "param_1": {
                    "data_array1": 1,
                    "destination": 1,
                    "input_params": 2,
                    "old_values": 1,
                    "output_array": 1,
                    "output_data": 2,
                    "output_params": 1,
                    "register1": 2,
                    "register_array": 2,
                    "register_array1": 4,
                    "register_array_1": 1,
                    "register_set": 1,
                    "register_values": 1,
                    "registers": 7,
                    "source_registers": 1,
                    "target": 1,
                    "target_array": 1,
                    "target_memory": 1
                },
                "param_2": {
                    "config_params": 1,
                    "data_array2": 1,
                    "flags": 1,
                    "input": 2,
                    "input_array": 2,
                    "input_data": 5,
                    "input_params": 1,
                    "input_values": 1,
                    "new_values": 1,
                    "register2": 2,
                    "register_array2": 4,
                    "register_array_2": 1,
                    "source": 2,
                    "source_array": 1,
                    "source_memory": 1,
                    "update_data": 1,
                    "update_values": 1,
                    "values": 3
                },
                "uVar1": {
                    "bit_mask": 1,
                    "bits_to_shift": 1,
                    "condition": 1,
                    "current_value": 1,
                    "mask": 2,
                    "mask1": 2,
                    "new_value1": 1,
                    "old_data": 1,
                    "register1": 1,
                    "register_value1": 1,
                    "temp1": 10,
                    "temp_var1": 8,
                    "temp_var_1": 1
                },
                "uVar2": {
                    "bit": 2,
                    "bit_mask": 4,
                    "bit_shift": 1,
                    "check_bit": 1,
                    "mask2": 2,
                    "register2": 1,
                    "register_value2": 1,
                    "temp2": 10,
                    "temp_var2": 8,
                    "temp_var_2": 1
                },
                "uVar3": {
                    "bit_position": 1,
                    "count": 1,
                    "flag_index": 1,
                    "i": 5,
                    "index": 13,
                    "iteration_count": 1,
                    "iterator": 1,
                    "loop_count": 1,
                    "loop_counter": 3,
                    "loop_index": 3,
                    "temp_var3": 1
                },
                "uVar4": {
                    "bit": 1,
                    "bit_and": 1,
                    "bit_check": 3,
                    "bit_flag": 1,
                    "bit_mask": 11,
                    "bit_mask_check": 1,
                    "bit_result": 1,
                    "flag_bit": 1,
                    "mask": 6,
                    "temp1": 1,
                    "temp3": 1,
                    "temp_var3": 1,
                    "temp_var4": 2
                },
                "uVar5": {
                    "data": 1,
                    "encoded_value": 1,
                    "flag_value": 1,
                    "input_value": 1,
                    "operation": 1,
                    "operation_result": 1,
                    "param1_value": 1,
                    "param2_value": 2,
                    "param_2_value": 1,
                    "source_val": 1,
                    "source_value": 1,
                    "temp2": 1,
                    "temp3": 3,
                    "temp4": 1,
                    "temp5": 1,
                    "temp_var4": 1,
                    "temp_var5": 5,
                    "temp_var_3": 1,
                    "value": 6
                },
                "uVar7": {
                    "bit_shift": 2,
                    "bit_shift2": 1,
                    "index2": 5,
                    "index_shifted": 1,
                    "offset": 1,
                    "offset2": 1,
                    "register_index2": 1,
                    "shift": 2,
                    "shifted": 1,
                    "shifted_index": 7,
                    "temp3": 3,
                    "temp4": 1,
                    "temp_var5": 1,
                    "temp_var7": 3,
                    "temp_var_4": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003486",
                "FUN_08003978"
            ],
            "code": "\n\n\nvoid update_registers_and_flags_08000fb4(uint *registers,uint *input_data)\n\n{\n  uint temp1;\n  uint temp2;\n  uint index;\n  uint bit_mask;\n  uint value;\n  int index1;\n  uint shifted_index;\n  int index3;\n  \n  for (index = 0; index < 0x10; index = index + 1) {\n    temp2 = 1 << (index & 0xff);\n    bit_mask = temp2 & *input_data;\n    temp1 = _DAT_40013c0c;\n    if (temp2 == bit_mask) {\n      if ((input_data[1] == 2) || (input_data[1] == 0x12)) {\n        index1 = (index >> 3) + 8;\n        index3 = (index & 7) << 2;\n        registers[index1] = registers[index1] & ~(0xf << index3) | input_data[4] << index3;\n      }\n      shifted_index = index << 1;\n      temp1 = ~(3 << (shifted_index & 0xff));\n      *registers = *registers & temp1 | (input_data[1] & 3) << (shifted_index & 0xff);\n      value = input_data[1];\n      if (((value - 1 < 2) || (value == 0x11)) || (value == 0x12)) {\n        registers[2] = registers[2] & temp1 | input_data[3] << (shifted_index & 0xff);\n        registers[1] = registers[1] & ~temp2 | ((input_data[1] << 0x1b) >> 0x1f) << (index & 0xff);\n      }\n      registers[3] = temp1 & registers[3] | input_data[2] << (shifted_index & 0xff);\n      temp1 = _DAT_40013c0c;\n      if ((input_data[1] & 0x10000000) != 0) {\n        _DAT_40023844 = _DAT_40023844 | 0x4000;\n        index3 = (index & 3) << 2;\n        if (registers == (uint *)0x40020000) {\n          index1 = 0;\n        }\n        else if (registers == (uint *)0x40020400) {\n          index1 = 1;\n        }\n        else if (registers == (uint *)0x40020800) {\n          index1 = 2;\n        }\n        else if (registers == (uint *)0x40020c00) {\n          index1 = 3;\n        }\n        else if (registers == (uint *)0x40021000) {\n          index1 = 4;\n        }\n        else if (registers == (uint *)0x40021400) {\n          index1 = 5;\n        }\n        else if (registers == (uint *)0x40021800) {\n          index1 = 6;\n        }\n        else if (registers == (uint *)0x40021c00) {\n          index1 = 7;\n        }\n        else if (registers == (uint *)0x40022000) {\n          index1 = 8;\n        }\n        else if (registers == (uint *)0x40022400) {\n          index1 = 9;\n        }\n        else {\n          index1 = 10;\n        }\n        *(uint *)(((index >> 2) + 2) * 4 + 0x40013800) =\n             *(uint *)(((index >> 2) + 2) * 4 + 0x40013800) & ~(0xf << index3) | index1 << index3;\n        temp1 = ~bit_mask;\n        temp2 = _DAT_40013c00 & temp1;\n        if ((input_data[1] & 0x10000) != 0) {\n          temp2 = bit_mask | _DAT_40013c00;\n        }\n        value = temp1 & _DAT_40013c04;\n        if ((input_data[1] & 0x20000) != 0) {\n          value = bit_mask | _DAT_40013c04;\n        }\n        shifted_index = temp1 & _DAT_40013c08;\n        if ((input_data[1] & 0x100000) != 0) {\n          shifted_index = bit_mask | _DAT_40013c08;\n        }\n        _DAT_40013c00 = temp2;\n        _DAT_40013c04 = value;\n        _DAT_40013c08 = shifted_index;\n        temp1 = temp1 & _DAT_40013c0c;\n        if ((input_data[1] & 0x200000) != 0) {\n          temp1 = bit_mask | _DAT_40013c0c;\n        }\n      }\n    }\n    _DAT_40013c0c = temp1;\n  }\n  return;\n}\n\n",
            "current_name": "update_registers_and_flags_08000fb4",
            "entrypoint": "0x08000fb4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000fb4": "update_registers_and_flags_08000fb4",
                "iVar6": "index1",
                "iVar8": "index3",
                "param_1": "registers",
                "param_2": "input_data",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "index",
                "uVar4": "bit_mask",
                "uVar5": "value",
                "uVar7": "shifted_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001198": {
            "additional_data": {
                "0x10": {
                    "shift_amount": 1
                },
                "FUN_08001198": {
                    "set_flag": 1,
                    "set_param": 2,
                    "set_param_2": 2,
                    "set_param_value": 14,
                    "set_parameter_value": 2,
                    "set_value": 2,
                    "update_param": 1,
                    "update_parameter": 2,
                    "update_parameter_value": 3,
                    "update_value": 2
                },
                "PTR_08001198": {
                    "original_function_pointer": 1
                },
                "param_1": {
                    "base_address": 13,
                    "container_address": 1,
                    "input_buffer": 1,
                    "obj": 1,
                    "obj_address": 1,
                    "object_address": 12,
                    "object_pointer": 1,
                    "target_address": 1
                },
                "param_2": {
                    "data": 1,
                    "new_value": 13,
                    "param_value": 1,
                    "value": 15,
                    "value_to_update": 1
                },
                "param_3": {
                    "is_shifted": 23,
                    "is_shifting": 1,
                    "shift_flag": 1,
                    "shift_required": 1,
                    "shift_value": 5
                }
            },
            "called": [],
            "calling": [
                "FUN_080034b6"
            ],
            "code": "\nvoid set_param_value_08001198(int base_address,int value,int is_shifted)\n\n{\n  if (is_shifted == 0) {\n    *(int *)(base_address + 0x18) = value << 0x10;\n    return;\n  }\n  *(int *)(base_address + 0x18) = value;\n  return;\n}\n\n",
            "current_name": "set_param_value_08001198",
            "entrypoint": "0x08001198",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001198": "set_param_value_08001198",
                "param_1": "base_address",
                "param_2": "value",
                "param_3": "is_shifted"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080011a4": {
            "additional_data": {
                "FUN_080011a4": {
                    "check_and_call_gpio_exti_callback": 1,
                    "check_and_update_gpio": 1,
                    "check_and_update_gpio_interrupt": 2,
                    "check_and_update_interrupt": 1,
                    "check_and_update_param": 1,
                    "handle_gpio_interrupt": 1,
                    "handle_gpio_wakeup_event": 1,
                    "handle_interrupt": 1,
                    "process_interrupt": 1,
                    "update_and_trigger_callback": 1,
                    "update_gpio": 1,
                    "update_gpio_exti": 3,
                    "update_gpio_exti_callback": 1,
                    "update_gpio_exti_callback_if_flag_set": 1,
                    "update_gpio_exti_if_bit_set": 1,
                    "update_gpio_if_bit_set": 1,
                    "update_gpio_if_flag_set": 1,
                    "update_gpio_if_set": 1,
                    "update_gpio_interrupt": 2,
                    "update_gpio_on_condition": 1,
                    "update_gpio_on_external_interrupt": 1,
                    "update_gpio_state": 3,
                    "update_gpio_with_param1": 1,
                    "update_param_and_execute_callback": 1
                },
                "FUN_080047d0": {
                    "perform_additional_operations": 1,
                    "reset_gpio": 1,
                    "reset_interrupt_state": 1
                },
                "HAL_GPIO_EXTI_Callback": {
                    "execute_gpio_exti_callback": 1,
                    "handle_external_interrupt": 1,
                    "handle_exti_callback": 1,
                    "handle_gpio_exti": 2,
                    "handle_gpio_exti_callback": 3,
                    "handle_gpio_interrupt": 6,
                    "invoke_exti_callback": 1,
                    "perform_callback": 1,
                    "process_gpio_interrupt": 1
                },
                "_DAT_40013c14": {
                    "exti_gpio_mask": 1,
                    "flag": 1,
                    "global_param": 1,
                    "gpio_data_register": 1,
                    "gpio_exti_flag": 1,
                    "gpio_exti_register": 1,
                    "gpio_exti_status_register": 1,
                    "gpio_interrupt_register": 2,
                    "gpio_interrupt_status": 1,
                    "gpio_reg": 1,
                    "gpio_register": 6,
                    "gpio_state": 3,
                    "gpio_status": 2,
                    "old_state": 1
                },
                "param_1": {
                    "bit_mask": 2,
                    "condition": 1,
                    "flag": 2,
                    "flags": 2,
                    "gpio_mask": 1,
                    "gpio_value": 3,
                    "input_mask": 1,
                    "input_param": 2,
                    "input_value": 2,
                    "interrupt_flag": 2,
                    "interrupt_flags": 2,
                    "interrupt_mask": 4,
                    "mask": 1,
                    "new_bit_mask": 1,
                    "new_state": 3,
                    "param_flags": 1,
                    "state": 1
                }
            },
            "called": [
                "FUN_080047d0"
            ],
            "calling": [],
            "code": "\n\n\nvoid update_gpio_on_condition_080011a4(uint interrupt_mask)\n\n{\n  if ((_DAT_40013c14 & interrupt_mask) != 0) {\n    _DAT_40013c14 = interrupt_mask;\n    handle_gpio_interrupt();\n  }\n  return;\n}\n\n",
            "current_name": "update_gpio_on_condition_080011a4",
            "entrypoint": "0x080011a4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080011a4": "update_gpio_on_condition_080011a4",
                "HAL_GPIO_EXTI_Callback": "handle_gpio_interrupt",
                "param_1": "interrupt_mask"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080011c0": {
            "additional_data": {
                "FUN_080011c0": {
                    "calculate_control_code": 1,
                    "compute_flag_value": 1,
                    "configure_access_control": 1,
                    "set_flag_based_on_condition": 2,
                    "set_flag_based_on_conditions": 2,
                    "set_flag_value": 1,
                    "set_mode": 1,
                    "set_permission_flag": 1,
                    "update_config": 1,
                    "update_control_register": 1,
                    "update_data_value": 1,
                    "update_flag": 2,
                    "update_flag_value": 6,
                    "update_flags": 1,
                    "update_flags_based_on_conditions": 2,
                    "update_parameter": 3,
                    "update_permission": 1,
                    "update_permissions": 1,
                    "update_status": 1
                },
                "data": {
                    "data": 1
                },
                "param_1": {
                    "access_control_params": 1,
                    "config": 1,
                    "data": 3,
                    "flag_array": 1,
                    "flag_info": 1,
                    "input": 3,
                    "input_array": 5,
                    "input_data": 4,
                    "mode_settings": 1,
                    "parameter": 1,
                    "parameter_array": 1,
                    "parameter_list": 1,
                    "parameters": 3,
                    "permissions": 3,
                    "register_values": 1,
                    "status_data": 1
                },
                "pointer": {
                    "pointer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 update_flag_value_080011c0(int *input_array)\n\n{\n  if (*(char *)((int)input_array + 0x3e) == '@') {\n    if (input_array[0x14] == 0) {\n      *(uint *)(*input_array + 0x10) = input_array[0x11] & 0xfe;\n    }\n    else {\n      *(uint *)(*input_array + 0x10) = input_array[0x11] & 0xffU | 1;\n    }\n  }\n  else if (input_array[4] == 0x4000) {\n    if (*(char *)((int)input_array + 0x3d) == '!') {\n      *(uint *)(*input_array + 0x10) = input_array[0x11] & 0xfe;\n    }\n    else {\n      *(uint *)(*input_array + 0x10) = input_array[0x11] & 0xffU | 1;\n    }\n  }\n  else if (input_array[0x14] == 0) {\n    *(uint *)(*input_array + 0x10) = (uint)(input_array[0x11] << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (input_array[0x14] == 1) {\n    *(uint *)(*input_array + 0x10) = (uint)(input_array[0x11] << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_flag_value_080011c0",
            "entrypoint": "0x080011c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080011c0": "update_flag_value_080011c0",
                "param_1": "input_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800124a": {
            "additional_data": {
                "0x10": {
                    "offset": 3
                },
                "0xff": {
                    "bit_mask": 1,
                    "mask": 2
                },
                "DAT_": {
                    "": 1
                },
                "FUN_0800124a": {
                    "assign_param_value": 1,
                    "copy_value_to_memory": 1,
                    "extract_and_assign_byte": 1,
                    "extract_and_store_last_byte": 1,
                    "extract_byte_from_array": 1,
                    "set_byte_from_param": 1,
                    "set_byte_in_memory": 1,
                    "set_byte_value": 2,
                    "set_lowest_byte": 1,
                    "set_param_value": 8,
                    "set_parameter_value": 1,
                    "set_value_in_memory": 1,
                    "store_parameter_value": 1,
                    "store_parameter_value_in_memory": 1,
                    "update_header_value": 1,
                    "update_param_value": 1,
                    "update_parameter": 3,
                    "update_parameter_value": 2,
                    "update_value": 1,
                    "write_byte_to_address": 1
                },
                "PTR_": {
                    "": 1
                },
                "param_1": {
                    "address": 1,
                    "array": 2,
                    "data_array": 1,
                    "data_ptr": 1,
                    "header_pointer": 1,
                    "input": 1,
                    "input_array": 3,
                    "input_ptr": 1,
                    "memory_address": 1,
                    "param_array": 7,
                    "param_list": 2,
                    "param_pointer": 1,
                    "parameter": 6,
                    "parameter_list": 2,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 set_param_value_0800124a(int *param_array)\n\n{\n  *(uint *)(*param_array + 0x10) = param_array[0x11] & 0xff;\n  return 0;\n}\n\n",
            "current_name": "set_param_value_0800124a",
            "entrypoint": "0x0800124a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800124a": "set_param_value_0800124a",
                "param_1": "param_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001256": {
            "additional_data": {
                "0x0": {
                    "null": 1,
                    "null_value": 1
                },
                "0x100": {
                    "constant_flag_1": 1
                },
                "0x1000": {
                    "bitmask4": 1,
                    "constant_flag_6": 1
                },
                "0x12": {
                    "constant_value_4": 1
                },
                "0x2": {
                    "constant_value_5": 1
                },
                "0x200": {
                    "constant_flag_2": 1
                },
                "0x4": {
                    "constant_value_2": 1
                },
                "0x400": {
                    "bitmask2": 1,
                    "constant_flag_3": 1
                },
                "0x8": {
                    "constant_value_3": 1
                },
                "0x800": {
                    "bitmask3": 1,
                    "constant_flag_4": 1
                },
                "0xb": {
                    "index": 1
                },
                "0xc000": {
                    "const_value": 1,
                    "constant_value_6": 1
                },
                "0xffff0000": {
                    "constant_value": 1,
                    "specific_value1": 1
                },
                "0xfffffbff": {
                    "bitmask1": 1,
                    "constant_flag_5": 1
                },
                "FUN_08001256": {
                    "apply_flags": 1,
                    "apply_permissions": 1,
                    "check_and_modify_flags": 1,
                    "check_and_update_flag": 1,
                    "parse_input": 1,
                    "process_data": 1,
                    "process_flags": 2,
                    "process_input": 1,
                    "process_param": 1,
                    "process_params": 2,
                    "set_flag": 1,
                    "set_flags": 1,
                    "set_flags_based_on_condition": 1,
                    "set_flags_based_on_conditions": 2,
                    "update_flag": 1,
                    "update_flags": 8,
                    "update_permission": 1,
                    "update_permissions": 1,
                    "update_settings": 1,
                    "update_state": 1,
                    "validate_input": 1
                },
                "param_1": {
                    "arguments": 1,
                    "data": 2,
                    "flags": 1,
                    "input": 1,
                    "input_params": 1,
                    "param": 1,
                    "param_array": 1,
                    "param_list": 1,
                    "parameter": 1,
                    "parameters": 12,
                    "params": 8,
                    "settings": 1
                },
                "puVar1": {
                    "current_param": 1,
                    "flag": 1,
                    "flag_ptr": 1,
                    "flag_value": 1,
                    "permission_bit": 1,
                    "pointer": 1,
                    "pointer1": 1,
                    "pointer_to_param_1b": 1,
                    "pointer_var1": 1,
                    "ptr": 4,
                    "ptr1": 1,
                    "ptr_flag": 1,
                    "ptr_value": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "temp_var": 3,
                    "temp_var1": 1,
                    "value": 8,
                    "var1": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 update_flags_08001256(uint **parameters)\n\n{\n  uint *value;\n  \n  value = parameters[0xb];\n  if ((*(char *)((int)parameters + 0x3d) == '\\\"') &&\n     ((parameters[0x14] != (uint *)0x0 || (*(char *)((int)parameters + 0x3e) != '@')))) {\n    if ((parameters[0x14] == (uint *)0x0) && (parameters[4] == (uint *)0xc000)) {\n      **parameters = **parameters | 0x100;\n      parameters[0x14] = (uint *)((int)parameters[0x14] + 1);\n    }\n    else {\n      if (*(short *)((int)parameters + 0x2a) == 0) {\n        **parameters = **parameters | 0x200;\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 1) {\n        if (value == (uint *)0xffff0000) {\n          **parameters = **parameters & 0xfffffbff;\n          value = *parameters;\n          if ((value[1] & 0x800) == 0) {\n            *value = *value | 0x200;\n          }\n          else {\n            *value = *value & 0xfffffbff;\n          }\n        }\n        else if (((value == (uint *)0x4) || (value == (uint *)0x8)) ||\n                (parameters[0xc] == (uint *)0x12)) {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x200;\n        }\n        else if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 2) {\n        if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x800;\n        }\n        value = *parameters;\n        if ((value[1] & 0x800) != 0) {\n          value[1] = value[1] | 0x1000;\n        }\n      }\n      else {\n        **parameters = **parameters | 0x400;\n        value = *parameters;\n        if ((value[1] & 0x800) != 0) {\n          value[1] = value[1] | 0x1000;\n        }\n      }\n      parameters[0x14] = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "update_flags_08001256",
            "entrypoint": "0x08001256",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001256": "update_flags_08001256",
                "param_1": "parameters",
                "puVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001420": {
            "additional_data": {
                "FUN_08001420": {
                    "decode_byte": 1,
                    "update_array": 1,
                    "update_array_element": 1,
                    "update_array_value": 1,
                    "update_byte_array": 1,
                    "update_byte_array_item": 1,
                    "update_byte_data": 1,
                    "update_byte_value": 2,
                    "update_data": 9,
                    "update_param_and_decrement": 1,
                    "update_parameter_value": 1,
                    "update_pointer": 3,
                    "update_pointer_value": 3,
                    "update_value": 1,
                    "update_value_and_decrement_counter": 1,
                    "update_value_in_array": 2,
                    "update_values": 1
                },
                "param_1": {
                    "array": 8,
                    "data": 9,
                    "data_array": 1,
                    "input_array": 3,
                    "param": 1,
                    "param_array": 2,
                    "pointer": 3,
                    "pointer_array": 3,
                    "values": 1
                },
                "pbVar1": {
                    "byte_buffer": 1,
                    "byte_data": 1,
                    "byte_pointer": 17,
                    "byte_ptr": 10,
                    "current_byte": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 update_byte_data_08001420(int *data)\n\n{\n  byte *byte_pointer;\n  \n  if (*(short *)((int)data + 0x2a) != 0) {\n    byte_pointer = (byte *)data[9];\n    data[9] = (int)(byte_pointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*byte_pointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_byte_data_08001420",
            "entrypoint": "0x08001420",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001420": "update_byte_data_08001420",
                "param_1": "data",
                "pbVar1": "byte_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001440": {
            "additional_data": {
                "FUN_08001440": {
                    "decrement_and_copy_value_to_memory": 1,
                    "increment_value_and_copy": 1,
                    "increment_value_and_decrement_counter": 1,
                    "update_array_element": 4,
                    "update_char": 1,
                    "update_char_array": 1,
                    "update_char_from_pointer": 1,
                    "update_character_data": 1,
                    "update_data": 6,
                    "update_data_array": 1,
                    "update_parameter": 1,
                    "update_parameter_value_if_non_zero": 1,
                    "update_pointer": 2,
                    "update_value": 6,
                    "update_value_and_decrement_counter": 1,
                    "update_value_if_non_zero": 1,
                    "update_value_in_array": 1
                },
                "param_1": {
                    "array": 15,
                    "character_data": 1,
                    "data": 6,
                    "data_array": 2,
                    "input_array": 1,
                    "parameter_array": 1,
                    "parameters": 1,
                    "pointer": 2,
                    "pointer_array": 1,
                    "values": 1
                },
                "puVar1": {
                    "char_pointer": 1,
                    "char_ptr": 2,
                    "current_element": 2,
                    "current_pointer": 2,
                    "current_ptr": 1,
                    "current_value": 1,
                    "data_pointer": 2,
                    "element": 1,
                    "element_pointer": 1,
                    "element_ptr": 1,
                    "next_character": 1,
                    "next_element_ptr": 1,
                    "pointer": 1,
                    "pointer_to_data": 2,
                    "pointer_to_parameter": 1,
                    "ptr": 5,
                    "ptr_to_data": 1,
                    "ptr_to_value": 1,
                    "target_pointer": 1,
                    "target_value": 1,
                    "temp_pointer": 1,
                    "value_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 update_parameter_value_if_non_zero_08001440(int *array)\n\n{\n  undefined *ptr;\n  \n  if (*(short *)((int)array + 0x2a) != 0) {\n    ptr = (undefined *)array[9];\n    array[9] = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*array + 0x10);\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_parameter_value_if_non_zero_08001440",
            "entrypoint": "0x08001440",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001440": "update_parameter_value_if_non_zero_08001440",
                "param_1": "array",
                "puVar1": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001460": {
            "additional_data": {
                "0x20": {
                    "new_char_2": 1
                },
                "0x29": {
                    "new_char_1": 1
                },
                "0x700": {
                    "new_value": 1
                },
                "FUN_08001460": {
                    "check_param_validity": 1,
                    "check_params": 1,
                    "extract_info": 1,
                    "initialize_parameter": 1,
                    "parse_function": 1,
                    "parse_input": 1,
                    "process_command": 1,
                    "process_data": 3,
                    "process_param": 1,
                    "process_parameters": 3,
                    "process_params": 4,
                    "process_request": 1,
                    "update_configuration": 1,
                    "update_settings": 1,
                    "validate_input": 5,
                    "validate_parameters": 2,
                    "validate_params": 2,
                    "verify_permission": 1
                },
                "param_1": {
                    "command": 1,
                    "config": 1,
                    "config_ptr": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "first_param": 1,
                    "info": 1,
                    "input": 1,
                    "input_buffer": 1,
                    "input_data": 3,
                    "input_params": 1,
                    "input_ptr": 1,
                    "param_array": 6,
                    "param_list": 2,
                    "param_ptr": 1,
                    "parameter_array": 1,
                    "permission": 1,
                    "pointer_array": 2,
                    "ptr_array": 1,
                    "request": 1,
                    "settings": 1
                },
                "param_2": {
                    "data": 3,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "input_1": 1,
                    "input_array": 1,
                    "input_ptr": 4,
                    "option1": 1,
                    "param": 1,
                    "param1": 2,
                    "param2": 1,
                    "param_counter": 1,
                    "param_pointer": 2,
                    "param_ptr": 4,
                    "param_value": 1,
                    "ptr": 1,
                    "ptr_data": 1,
                    "second_param": 1,
                    "target_pointer": 1,
                    "value_ptr": 1
                },
                "param_3": {
                    "count": 4,
                    "data_length": 3,
                    "data_size": 2,
                    "input_2": 1,
                    "input_len": 1,
                    "input_length": 1,
                    "input_size": 1,
                    "length": 1,
                    "option2": 1,
                    "param2": 2,
                    "param3": 1,
                    "param_count": 1,
                    "param_length": 1,
                    "param_size": 4,
                    "size": 5,
                    "third_param": 1,
                    "value_size": 1
                },
                "param_4": {
                    "data_ptr": 3,
                    "fourth_param": 1,
                    "input_3": 1,
                    "option3": 1,
                    "output_array": 1,
                    "output_ptr": 5,
                    "param": 1,
                    "param2": 1,
                    "param3": 2,
                    "param4": 1,
                    "param_array2": 1,
                    "param_buffer": 1,
                    "param_data": 2,
                    "param_flag": 1,
                    "ptr2": 1,
                    "ptr_result": 1,
                    "response": 1,
                    "result_pointer": 1,
                    "result_ptr": 3,
                    "source_pointer": 1,
                    "target": 1
                },
                "puVar2": {
                    "array_ptr": 1,
                    "first_elem_of_ptr_array": 1,
                    "flag_ptr": 1,
                    "ptr": 18,
                    "ptr_config": 1,
                    "ptr_first_int": 1,
                    "ptr_permission": 1,
                    "ptr_var": 2,
                    "temp_pointer": 2,
                    "temp_ptr": 3
                },
                "uVar1": {
                    "result": 23,
                    "return_value": 5,
                    "status": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08003880"
            ],
            "code": "\nundefined4 validate_input_08001460(uint **param_array,uint *input_ptr,int size,uint *output_ptr)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)param_array + 0x3d) == '(') {\n    if (input_ptr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (size == 0) {\n      result = 1;\n    }\n    else if (*(char *)(param_array + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(param_array + 0xf) = 1;\n      ptr = *param_array;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **param_array = **param_array & 0xfffff7ff;\n      *(undefined *)((int)param_array + 0x3d) = 0x29;\n      *(undefined *)((int)param_array + 0x3e) = 0x20;\n      result = 0;\n      param_array[0x10] = (uint *)0x0;\n      param_array[9] = input_ptr;\n      *(short *)((int)param_array + 0x2a) = (short)size;\n      param_array[0xb] = output_ptr;\n      *(undefined2 *)(param_array + 10) = *(undefined2 *)((int)param_array + 0x2a);\n      *(undefined *)(param_array + 0xf) = 0;\n      (*param_array)[1] = (*param_array)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "current_name": "validate_input_08001460",
            "entrypoint": "0x08001460",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001460": "validate_input_08001460",
                "param_1": "param_array",
                "param_2": "input_ptr",
                "param_3": "size",
                "param_4": "output_ptr",
                "puVar2": "ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080014ec": {
            "additional_data": {
                "FUN_080014ec": {
                    "check_and_initialize": 1,
                    "check_parameters": 1,
                    "initialize_data": 1,
                    "parse_input": 1,
                    "parse_parameters": 1,
                    "prepare_param": 1,
                    "process_data": 3,
                    "process_function": 1,
                    "process_function_params": 1,
                    "process_input": 2,
                    "process_param": 2,
                    "process_parameters": 7,
                    "process_params": 4,
                    "update_function_status": 1,
                    "update_parameter": 1,
                    "validate_parameters": 2,
                    "validate_params": 1
                },
                "param_1": {
                    "config": 1,
                    "data": 1,
                    "data_buffer": 1,
                    "function_params": 1,
                    "input": 1,
                    "input_data": 1,
                    "input_param": 1,
                    "input_ptr": 1,
                    "p_input_array": 1,
                    "param1": 1,
                    "param_array": 4,
                    "param_bundle": 1,
                    "param_list": 5,
                    "param_pointer": 1,
                    "parameter_1": 1,
                    "parameter_list": 5,
                    "parameters": 1,
                    "pointer_array": 1,
                    "pointer_list": 1,
                    "status_pointer": 1
                },
                "param_2": {
                    "data": 3,
                    "data_pointer": 3,
                    "data_ptr": 2,
                    "error_code": 1,
                    "input_array": 1,
                    "input_data": 1,
                    "input_param": 2,
                    "input_pointer": 1,
                    "new_value": 1,
                    "output_parameter": 1,
                    "p_first_element": 1,
                    "param2": 2,
                    "param_2": 1,
                    "param_pointer": 3,
                    "param_ptr": 5,
                    "parameter_2": 1,
                    "pointer": 1,
                    "value1": 1
                },
                "param_3": {
                    "array_length": 1,
                    "array_size": 1,
                    "count": 3,
                    "data_length": 2,
                    "data_size": 2,
                    "flag": 1,
                    "input_length": 1,
                    "input_size": 2,
                    "length": 1,
                    "param3": 1,
                    "param_3": 1,
                    "param_int": 1,
                    "param_size": 6,
                    "param_value": 2,
                    "parameter_3": 1,
                    "size": 4,
                    "value2": 1
                },
                "param_4": {
                    "buffer": 1,
                    "data": 2,
                    "extra_data": 1,
                    "input_data": 1,
                    "output": 1,
                    "output_array": 1,
                    "output_buffer": 1,
                    "output_data": 1,
                    "output_param": 2,
                    "output_pointer": 2,
                    "output_ptr": 1,
                    "p_second_element": 1,
                    "param4": 3,
                    "param_4": 1,
                    "param_array": 1,
                    "param_buf": 1,
                    "param_buffer": 1,
                    "param_data": 3,
                    "param_ptr2": 1,
                    "parameter_4": 1,
                    "result": 1,
                    "result_pointer": 1,
                    "results": 1,
                    "value3": 1
                },
                "puVar2": {
                    "array_ptr": 1,
                    "current_parameter": 1,
                    "data_pointer": 1,
                    "first_value": 1,
                    "flag_ptr": 1,
                    "nested_status_pointer": 1,
                    "p_array_address": 1,
                    "param_ptr_value": 1,
                    "pointer": 1,
                    "pointer2": 1,
                    "pointer_to_parameter_list": 1,
                    "pointer_var": 4,
                    "ptr": 6,
                    "ptr2": 1,
                    "ptr_1": 1,
                    "ptr_to_param1": 1,
                    "ptr_var": 2,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "temp_var": 1
                },
                "uVar1": {
                    "result": 22,
                    "result_code": 1,
                    "return_value": 6
                }
            },
            "called": [],
            "calling": [
                "FUN_08003880"
            ],
            "code": "\nundefined4 process_parameters_080014ec(uint **param_list,uint *param_ptr,int param_size,uint *param_data)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)param_list + 0x3d) == '(') {\n    if (param_ptr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (param_size == 0) {\n      result = 1;\n    }\n    else if (*(char *)(param_list + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(param_list + 0xf) = 1;\n      ptr = *param_list;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **param_list = **param_list & 0xfffff7ff;\n      *(undefined *)((int)param_list + 0x3d) = 0x2a;\n      *(undefined *)((int)param_list + 0x3e) = 0x20;\n      result = 0;\n      param_list[0x10] = (uint *)0x0;\n      param_list[9] = param_ptr;\n      *(short *)((int)param_list + 0x2a) = (short)param_size;\n      param_list[0xb] = param_data;\n      *(undefined2 *)(param_list + 10) = *(undefined2 *)((int)param_list + 0x2a);\n      *(undefined *)(param_list + 0xf) = 0;\n      (*param_list)[1] = (*param_list)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "current_name": "process_parameters_080014ec",
            "entrypoint": "0x080014ec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080014ec": "process_parameters_080014ec",
                "param_1": "param_list",
                "param_2": "param_ptr",
                "param_3": "param_size",
                "param_4": "param_data",
                "puVar2": "ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001578": {
            "additional_data": {
                "DAT_": {
                    "": 1
                },
                "DAT_08001578": {
                    "space": 1
                },
                "DAT_08002038": {
                    "space_character": 1
                },
                "FUN_08001578": {
                    "fix_value_and_set_flags": 1,
                    "initialize_data": 10,
                    "initialize_flag": 1,
                    "initialize_flags": 3,
                    "initialize_parameters": 1,
                    "initialize_params": 1,
                    "process_data": 1,
                    "replace_whitespace_character": 1,
                    "set_flag_bits": 1,
                    "set_flags_and_values": 1,
                    "set_permissions": 1,
                    "update_configuration": 1,
                    "update_data": 6,
                    "update_flags_and_bits": 1,
                    "update_parameter_data": 1
                },
                "PTR_": {
                    "": 1
                },
                "PTR_DAT_08001578": {
                    "open_paren": 1
                },
                "PTR_DAT_08002030": {
                    "pointer_to_flags_1": 1
                },
                "PTR_DAT_08002034": {
                    "pointer_to_flags": 1
                },
                "param_1": {
                    "config": 1,
                    "data": 13,
                    "data_pointer": 5,
                    "flag_pointer": 1,
                    "flags": 3,
                    "param": 1,
                    "parameter": 1,
                    "parameter_data": 1,
                    "parameters": 2,
                    "params": 2,
                    "permissions": 1
                },
                "puVar1": {
                    "config_ptr": 1,
                    "current_parameter": 1,
                    "current_pointer": 1,
                    "current_value": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "first_element": 3,
                    "first_flag": 1,
                    "first_parameter": 1,
                    "first_pointer": 1,
                    "first_value": 2,
                    "flag_ptr": 1,
                    "pointer": 2,
                    "pointer1": 2,
                    "pointer_to_data": 1,
                    "pointer_to_parameters": 1,
                    "ptr": 4,
                    "ptr_data": 4,
                    "ptr_param": 1,
                    "ptr_to_data": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003900",
                "FUN_080038d0"
            ],
            "code": "\nundefined4 initialize_data_08001578(uint **data)\n\n{\n  uint *ptr_data;\n  \n  if (*(char *)((int)data + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)data + 0x3d) = 0x28;\n  ptr_data = *data;\n  if ((*ptr_data & 1) == 0) {\n    *ptr_data = *ptr_data | 1;\n  }\n  **data = **data | 0x400;\n  (*data)[1] = (*data)[1] | 0x300;\n  return 0;\n}\n\n",
            "current_name": "initialize_data_08001578",
            "entrypoint": "0x08001578",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001578": "initialize_data_08001578",
                "param_1": "data",
                "puVar1": "ptr_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080015b6": {
            "called": [],
            "calling": [
                "FUN_08001864",
                "FUN_0800171a"
            ],
            "code": "\nvoid FUNC_080015b6(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080015b6",
            "entrypoint": "0x080015b6",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080015b6": "FUNC_080015b6"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080015b8": {
            "called": [],
            "calling": [
                "FUN_08001904",
                "FUN_080019a0"
            ],
            "code": "\nvoid FUNC_080015b8(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080015b8",
            "entrypoint": "0x080015b8",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080015b8": "FUNC_080015b8"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080015ba": {
            "called": [],
            "calling": [
                "FUN_080015bc",
                "FUN_08001684"
            ],
            "code": "\nvoid FUNC_080015ba(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080015ba",
            "entrypoint": "0x080015ba",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080015ba": "FUNC_080015ba"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080015bc": {
            "additional_data": {
                "FUN_080015bc": {
                    "decode_and_process_data": 1,
                    "decode_and_transmit_data": 1,
                    "handle_data": 1,
                    "handle_i2_c_transmission": 1,
                    "process_data": 24,
                    "process_i2c_data": 1,
                    "process_input_data": 1,
                    "process_param": 1
                },
                "HAL_I2C_SlaveTxCpltCallback": {
                    "handle_i2_c_transmission_complete": 1,
                    "handle_i2_c_transmit_complete": 1,
                    "handle_i2c_transmission_complete": 1,
                    "handle_slave_transmission_complete": 1,
                    "i2_c_transmission_complete_callback": 1,
                    "transmission_complete_callback": 1
                },
                "cVar1": {
                    "char_value": 9,
                    "character": 16,
                    "character_var": 1,
                    "current_char": 1,
                    "first_char": 2,
                    "is_closing_parenthesis": 1,
                    "last_char": 1
                },
                "param_1": {
                    "data": 21,
                    "data_buffer": 1,
                    "data_ptr": 3,
                    "data_struct": 1,
                    "input_data": 3,
                    "param_array": 1,
                    "transmission_params": 1
                },
                "pbVar2": {
                    "byte_array": 1,
                    "byte_pointer": 16,
                    "byte_ptr": 12,
                    "data_pointer": 1,
                    "ptr_to_byte": 1
                }
            },
            "called": [
                "FUN_080015ba"
            ],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 decode_and_process_data_080015bc(int *data)\n\n{\n  char character;\n  byte *byte_pointer;\n  \n  character = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    byte_pointer = (byte *)data[9];\n    data[9] = (int)(byte_pointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*byte_pointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (character == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      handle_i2_c_transmission_complete();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "current_name": "decode_and_process_data_080015bc",
            "entrypoint": "0x080015bc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080015bc": "decode_and_process_data_080015bc",
                "HAL_I2C_SlaveTxCpltCallback": "handle_i2_c_transmission_complete",
                "cVar1": "character",
                "param_1": "data",
                "pbVar2": "byte_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800160c": {
            "called": [],
            "calling": [
                "FUN_0800160e",
                "FUN_08001bfc"
            ],
            "code": "\nvoid FUNC_0800160c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800160c",
            "entrypoint": "0x0800160c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800160c": "FUNC_0800160c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800160e": {
            "additional_data": {
                "FUNC_0800160c": {
                    "update_state": 1
                },
                "FUN_0800160e": {
                    "process_data": 30
                },
                "HAL_I2C_SlaveRxCpltCallback": {
                    "handle_i2_c_complete": 2,
                    "handle_i2_c_completion": 2,
                    "handle_i2_c_data_received": 1,
                    "handle_i2_c_receive_complete": 10,
                    "handle_i2_c_rx_complete": 1
                },
                "cVar1": {
                    "char_value": 10,
                    "char_var": 1,
                    "character": 7,
                    "current_char": 3,
                    "first_char": 3,
                    "flag": 7
                },
                "param_1": {
                    "data": 26,
                    "data_ptr": 1,
                    "input_array": 2,
                    "input_data": 2
                },
                "puVar2": {
                    "buffer_ptr": 1,
                    "byte_pointer": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "next_address": 1,
                    "next_available_pointer": 1,
                    "next_byte_ptr": 1,
                    "next_char": 1,
                    "next_char_addr": 1,
                    "next_position": 1,
                    "pointer": 6,
                    "ptr": 11,
                    "ptr_to_data": 2,
                    "undefined_pointer": 1,
                    "undefined_ptr": 1
                }
            },
            "called": [
                "FUN_0800160c"
            ],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 process_data_0800160e(int *data)\n\n{\n  char char_value;\n  undefined *ptr;\n  \n  char_value = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    ptr = (undefined *)data[9];\n    data[9] = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*data + 0x10);\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (char_value == '*')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x22;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      handle_i2_c_receive_complete();\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_0800160e",
            "entrypoint": "0x0800160e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800160e": "process_data_0800160e",
                "HAL_I2C_SlaveRxCpltCallback": "handle_i2_c_receive_complete",
                "cVar1": "char_value",
                "param_1": "data",
                "puVar2": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800165a": {
            "additional_data": {
                "FUN_0800165a": {
                    "decode_address_and_callback": 1,
                    "handle_i2_c_addres_callback": 1,
                    "handle_i2_c_callback": 1,
                    "i2c_address_callback": 5,
                    "i2c_callback": 1,
                    "i2c_communication_callback": 1,
                    "perform_i2_c_address_callback": 2,
                    "perform_i2_c_address_operation": 1,
                    "perform_i2_c_addressing": 1,
                    "process_i2_c": 2,
                    "process_i2_c_address": 7,
                    "process_i2_c_address_callback": 1,
                    "process_i2_c_addressing": 1,
                    "process_i2_c_callback": 2,
                    "process_i2_c_data": 1,
                    "update_i2_c_address": 1,
                    "update_i2_c_address_callback": 1
                },
                "FUN_08003880": {
                    "handle_i2_c_addressing": 1
                },
                "HAL_I2C_AddrCallback": {
                    "handle_i2_c_address_callback": 1,
                    "perform_i2_c_address_callback": 1,
                    "perform_i2_c_addressing": 1
                },
                "param_1": {
                    "address_data": 1,
                    "data": 4,
                    "data_buffer": 1,
                    "data_pointer": 2,
                    "device_data": 1,
                    "device_info": 1,
                    "i2c_address": 1,
                    "i2c_data": 10,
                    "i2c_device": 1,
                    "i2c_device_info": 1,
                    "i2c_params": 1,
                    "input_data": 1,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_parameters": 1,
                    "input_params": 2,
                    "param_list": 1
                },
                "param_2": {
                    "address_option": 1,
                    "arg1": 1,
                    "callback_enabled": 1,
                    "callback_param": 1,
                    "flag": 1,
                    "input_param2": 1,
                    "param1": 4,
                    "param2": 16,
                    "param_2": 1,
                    "parameter2": 1,
                    "unused_param_2": 1
                },
                "param_3": {
                    "arg2": 1,
                    "input_param3": 1,
                    "param2": 4,
                    "param3": 16,
                    "param_3": 1,
                    "parameter3": 1,
                    "undefined4": 1,
                    "unused_param": 2,
                    "unused_param_3": 1,
                    "val1": 1
                },
                "param_4": {
                    "arg3": 1,
                    "callback_data": 2,
                    "callback_param": 2,
                    "callback_parameter": 1,
                    "input_param4": 1,
                    "output_data": 1,
                    "param3": 3,
                    "param4": 16,
                    "param_4": 2,
                    "parameter4": 1,
                    "val2": 1
                },
                "uVar1": {
                    "addr": 1,
                    "address": 11,
                    "address_callback": 1,
                    "callback_addr": 1,
                    "callback_result": 1,
                    "callback_value": 2,
                    "chosen_address": 1,
                    "i2c_address": 1,
                    "result": 1,
                    "selected_addr": 1,
                    "selected_address": 5,
                    "selected_data": 1,
                    "selected_value": 3,
                    "target_address": 1
                },
                "uVar2": {
                    "address": 1,
                    "address_bits": 1,
                    "address_flag": 2,
                    "address_value": 7,
                    "config": 1,
                    "config_value": 1,
                    "control_byte": 1,
                    "data": 1,
                    "flag": 2,
                    "flag_value": 1,
                    "flags": 9,
                    "i2c_data_value": 1,
                    "i2c_status": 1,
                    "i2c_value": 1,
                    "status": 1
                }
            },
            "called": [
                "FUN_08003880"
            ],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 process_i2_c_address_callback_0800165a(int *i2c_data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 address;\n  uint flags;\n  \n  flags = *(uint *)(*i2c_data + 0x18);\n  if ((flags & 0x80) == 0) {\n    address = *(undefined2 *)(i2c_data + 3);\n  }\n  else {\n    address = *(undefined2 *)(i2c_data + 6);\n  }\n  perform_i2_c_addressing(i2c_data,(*(uint *)(*i2c_data + 0x18) & 4) == 0,address,flags,param4);\n  return 0;\n}\n\n",
            "current_name": "process_i2_c_address_callback_0800165a",
            "entrypoint": "0x0800165a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800165a": "process_i2_c_address_callback_0800165a",
                "HAL_I2C_AddrCallback": "perform_i2_c_addressing",
                "param_1": "i2c_data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "address",
                "uVar2": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001684": {
            "additional_data": {
                "0": {
                    "new_value_param_c": 1
                },
                "0x20": {
                    "ascii_space": 1,
                    "new_value_char_param": 1
                },
                "0x4": {
                    "ascii_open_paren": 1
                },
                "0x8": {
                    "ascii_close_paren": 1
                },
                "0xffff0000": {
                    "command_reset": 1
                },
                "0xfffff8ff": {
                    "data_mask1": 1,
                    "param1_mask": 1
                },
                "0xfffffbff": {
                    "data_mask2": 1,
                    "param5_mask": 1
                },
                "FUN_080015ba": {
                    "execute_listen_cplt_callback": 1,
                    "perform_action_a": 1
                },
                "FUN_08001684": {
                    "handle_i2_c": 1,
                    "handle_i2_c_data": 1,
                    "handle_i2_c_event": 4,
                    "handle_i2_c_events": 1,
                    "handle_i2_c_interrupt": 2,
                    "handle_i2_c_operation": 1,
                    "improve_and_handle_i2c_event": 1,
                    "initialize_i2_c": 1,
                    "perform_operation": 1,
                    "process_data": 6,
                    "process_i2_c_data": 5,
                    "process_i2_c_parameters": 1,
                    "process_param": 4,
                    "process_param1": 1,
                    "update_configuration": 1
                },
                "FUN_080038d0": {
                    "execute_slave_tx_cplt_callback": 1,
                    "perform_action_b": 1,
                    "send_slave_tx_complete_callback": 1
                },
                "HAL_I2C_ListenCpltCallback": {
                    "handle_i2_c_listen_complete": 1,
                    "handle_listen_complete": 2,
                    "i2c_listen_complete_callback": 1,
                    "on_i2_c_listen_complete": 1,
                    "on_listen_complete": 2,
                    "perform_listen_complete_callback": 1
                },
                "HAL_I2C_SlaveTxCpltCallback": {
                    "handle_i2_c_slave_tx_complete": 1,
                    "handle_slave_transmit_complete": 1,
                    "handle_slave_tx_complete": 1,
                    "i2c_slave_transmit_complete_callback": 1,
                    "on_i2_c_slave_tx_complete": 1,
                    "on_slave_transmit_complete": 1,
                    "on_slave_tx_cplt": 1,
                    "perform_slave_transmit_complete_callback": 1
                },
                "PTR_FUN_080015ba": {
                    "initialize_callback": 1
                },
                "param_1": {
                    "config_params": 1,
                    "data": 9,
                    "event_data": 4,
                    "function_params": 1,
                    "i2c_data": 1,
                    "i2c_params": 2,
                    "p_params": 1,
                    "param": 2,
                    "param_array": 2,
                    "param_list": 2,
                    "parameters": 6
                }
            },
            "called": [
                "FUN_080015ba",
                "FUN_080038d0"
            ],
            "calling": [
                "FUN_08001e68"
            ],
            "code": "\nundefined4 process_i2_c_data_08001684(uint **data)\n\n{\n  if (((data[0xb] == (uint *)0x4) || (data[0xb] == (uint *)0x8)) &&\n     (*(char *)((int)data + 0x3d) == '(')) {\n    data[0xb] = (uint *)0xffff0000;\n    (*data)[1] = (*data)[1] & 0xfffff8ff;\n    (*data)[5] = 0xfffffbff;\n    **data = **data & 0xfffffbff;\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    *(undefined *)((int)data + 0x3e) = 0;\n    handle_listen_complete();\n  }\n  else if (*(char *)((int)data + 0x3d) == '!') {\n    data[0xb] = (uint *)0xffff0000;\n    data[0xc] = (uint *)0x21;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    *(undefined *)((int)data + 0x3e) = 0;\n    (*data)[1] = (*data)[1] & 0xfffff8ff;\n    (*data)[5] = 0xfffffbff;\n    **data = **data & 0xfffffbff;\n    on_i2_c_slave_tx_complete();\n  }\n  else {\n    (*data)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_i2_c_data_08001684",
            "entrypoint": "0x08001684",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001684": "process_i2_c_data_08001684",
                "HAL_I2C_ListenCpltCallback": "handle_listen_complete",
                "HAL_I2C_SlaveTxCpltCallback": "on_i2_c_slave_tx_complete",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001718": {
            "called": [],
            "calling": [
                "FUN_08001864",
                "FUN_0800171a"
            ],
            "code": "\nvoid FUNC_08001718(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08001718",
            "entrypoint": "0x08001718",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08001718": "FUNC_08001718"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800171a": {
            "additional_data": {
                "FUCN_080015b6": {
                    "func2": 1
                },
                "FUCN_08001718": {
                    "func1": 1
                },
                "FUNC_080015b6": {
                    "another_function": 1,
                    "function_b": 1
                },
                "FUNC_08001718": {
                    "function_a": 1
                },
                "FUNK_080015b6": {
                    "other_function": 1
                },
                "FUN_080015b6": {
                    "function_b": 1
                },
                "FUN_08001718": {
                    "function_a": 1
                },
                "FUN_0800171a": {
                    "execute_command": 2,
                    "handle_i2_c_data": 1,
                    "handle_i2_c_rx_tx_operations": 1,
                    "handle_i2_c_transfer": 1,
                    "process_data": 19,
                    "process_i2_c_data": 3,
                    "process_i2_c_packet": 1,
                    "process_i2_c_transfer": 1,
                    "process_protocol_packet": 1
                },
                "HAL_I2C_MasterTxCpltCallback": {
                    "handle_i2_c_master_transmit_complete": 1,
                    "handle_i2_c_master_tx_cplt": 1,
                    "handle_master_tx_complete": 5,
                    "handle_master_tx_cplt": 7,
                    "handle_master_tx_cplt_callback": 4,
                    "master_transfer_complete_callback": 1,
                    "master_tx_callback": 1,
                    "master_tx_complete_callback": 2,
                    "master_tx_cplt_callback": 1
                },
                "HAL_I2C_MemTxCpltCallback": {
                    "handle_i2_c_mem_tx_cplt": 1,
                    "handle_i2_c_memory_transmit_complete": 1,
                    "handle_mem_tx_complete": 5,
                    "handle_mem_tx_cplt": 7,
                    "handle_mem_tx_cplt_callback": 4,
                    "mem_transfer_complete_callback": 1,
                    "mem_tx_callback": 1,
                    "mem_tx_complete_callback": 2,
                    "mem_tx_cplt_callback": 1
                },
                "PTR_xxxxxxxx": {
                    "unchanged_variable_name": 1
                },
                "cVar1": {
                    "char1": 6,
                    "char_flag": 1,
                    "char_value": 9,
                    "char_var": 2,
                    "character": 2,
                    "first_char": 9,
                    "flag": 2
                },
                "param_1": {
                    "command": 2,
                    "data": 21,
                    "data_ptr": 1,
                    "i2c_data": 1,
                    "packet": 2,
                    "parameters": 1,
                    "params": 1,
                    "transfer_data": 1
                },
                "puVar2": {
                    "param_b": 1,
                    "pointer": 2,
                    "pointer_value": 2,
                    "pointer_var": 2,
                    "ptr": 7,
                    "ptr_value": 4,
                    "ptr_var": 6,
                    "temp_pointer": 1,
                    "temp_ptr": 2,
                    "temp_var": 1,
                    "temp_variable": 1,
                    "value": 1,
                    "value_ptr": 1
                }
            },
            "called": [
                "FUN_08001718",
                "FUN_080015b6"
            ],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 process_i2_c_data_0800171a(uint **data)\n\n{\n  char char_value;\n  uint *ptr;\n  \n  char_value = *(char *)((int)data + 0x3d);\n  ptr = data[0xb];\n  if ((*(short *)(data + 10) == 0) && (char_value == '!')) {\n    if ((ptr == (uint *)0x4) || ((ptr == (uint *)0x8 || (ptr == (uint *)0xffff0000)))) {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      **data = **data | 0x200;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      if (*(char *)((int)data + 0x3e) == '@') {\n        *(undefined *)((int)data + 0x3e) = 0;\n        handle_mem_tx_cplt();\n      }\n      else {\n        *(undefined *)((int)data + 0x3e) = 0;\n        handle_master_tx_cplt();\n      }\n    }\n    else {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      data[0xc] = (uint *)0x11;\n      *(undefined *)((int)data + 0x3e) = 0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      handle_master_tx_cplt();\n    }\n  }\n  else if ((char_value == '!') || ((*(char *)((int)data + 0x3e) == '@' && (char_value == '\\\"')))) {\n    if (*(short *)((int)data + 0x2a) == 0) {\n      (*data)[1] = (*data)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)data + 0x3e) == '@') {\n      if (data[0x14] == (uint *)0x0) {\n        if (data[0x13] == (uint *)0x1) {\n          (*data)[4] = (uint)data[0x12] & 0xff;\n          data[0x14] = (uint *)((int)data[0x14] + 2);\n        }\n        else {\n          (*data)[4] = (uint)((int)data[0x12] << 0x10) >> 0x18;\n          data[0x14] = (uint *)((int)data[0x14] + 1);\n        }\n      }\n      else if (data[0x14] == (uint *)0x1) {\n        (*data)[4] = (uint)data[0x12] & 0xff;\n        data[0x14] = (uint *)((int)data[0x14] + 1);\n      }\n      else if (data[0x14] == (uint *)0x2) {\n        if (*(char *)((int)data + 0x3d) == '\\\"') {\n          **data = **data | 0x100;\n        }\n        else if (*(char *)((int)data + 0x3d) == '!') {\n          ptr = data[9];\n          data[9] = (uint *)((int)ptr + 1);\n          (*data)[4] = (uint)*(byte *)ptr;\n          *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      ptr = data[9];\n      data[9] = (uint *)((int)ptr + 1);\n      (*data)[4] = (uint)*(byte *)ptr;\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_i2_c_data_0800171a",
            "entrypoint": "0x0800171a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800171a": "process_i2_c_data_0800171a",
                "HAL_I2C_MasterTxCpltCallback": "handle_master_tx_cplt",
                "HAL_I2C_MemTxCpltCallback": "handle_mem_tx_cplt",
                "cVar1": "char_value",
                "param_1": "data",
                "puVar2": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001864": {
            "additional_data": {
                "0": {
                    "zero": 1
                },
                "0x11": {
                    "eleven": 1
                },
                "0x20": {
                    "space": 1,
                    "space_char_2": 1
                },
                "@": {
                    "at": 1
                },
                "FUN_08001864": {
                    "execute_i2_c_operation": 1,
                    "handle_data": 1,
                    "handle_i2_c_complete": 1,
                    "handle_i2_c_data": 4,
                    "handle_i2_c_event": 1,
                    "handle_i2_c_operation": 1,
                    "handle_i2_c_transfer": 2,
                    "process_data": 18,
                    "process_param": 2
                },
                "HAL_I2C_MasterTxCpltCallback": {
                    "handle_i2_c_master_tx_cplt": 1,
                    "handle_i2_c_master_tx_cplt_callback": 1,
                    "handle_master_transmit_complete": 1,
                    "handle_master_tx_complete": 5,
                    "handle_master_tx_cplt": 12,
                    "handle_master_tx_cplt_callback": 2,
                    "master_transmit_complete_callback": 1,
                    "master_transmit_completed_callback": 1
                },
                "HAL_I2C_MemTxCpltCallback": {
                    "handle_i2_c_mem_tx_cplt": 1,
                    "handle_i2_c_mem_tx_cplt_callback": 1,
                    "handle_mem_tx_complete": 4,
                    "handle_mem_tx_cplt": 12,
                    "handle_mem_tx_cplt_callback": 2,
                    "handle_memory_transmit_complete": 1,
                    "handle_memory_tx_complete": 1,
                    "mem_transmit_complete_callback": 1,
                    "memory_transmit_completed_callback": 1
                },
                "param_1": {
                    "data": 20,
                    "event_data": 1,
                    "input_data": 1,
                    "operation_data": 1,
                    "operation_params": 1,
                    "param": 1,
                    "param_list": 1,
                    "parameters": 1,
                    "params": 2,
                    "transfer_data": 1
                },
                "puVar1": {
                    "current_param": 1,
                    "flag": 1,
                    "flag_value": 1,
                    "param": 1,
                    "param_ptr": 1,
                    "ptr": 3,
                    "ptr_to_uint": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 2,
                    "temp_var": 1,
                    "transfer_length": 1,
                    "value": 17
                }
            },
            "called": [
                "FUN_08001718",
                "FUN_080015b6"
            ],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 process_data_08001864(uint **data)\n\n{\n  uint *value;\n  \n  value = data[0xb];\n  if (*(char *)((int)data + 0x3d) == '!') {\n    if (*(short *)((int)data + 0x2a) == 0) {\n      if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n        (*data)[1] = (*data)[1] & 0xfffff8ff;\n        **data = **data | 0x200;\n        data[0xc] = (uint *)0x0;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        if (*(char *)((int)data + 0x3e) == 'at') {\n          *(undefined *)((int)data + 0x3e) = 0;\n          handle_mem_tx_cplt();\n        }\n        else {\n          *(undefined *)((int)data + 0x3e) = 0;\n          handle_master_tx_cplt();\n        }\n      }\n      else {\n        (*data)[1] = (*data)[1] & 0xfffff8ff;\n        data[0xc] = (uint *)0x11;\n        *(undefined *)((int)data + 0x3e) = 0;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        handle_master_tx_cplt();\n      }\n    }\n    else {\n      value = data[9];\n      data[9] = (uint *)((int)value + 1);\n      (*data)[4] = (uint)*(byte *)value;\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_08001864",
            "entrypoint": "0x08001864",
            "imported": false,
            "improved": true,
            "renaming": {
                "@": "at",
                "FUN_08001864": "process_data_08001864",
                "HAL_I2C_MasterTxCpltCallback": "handle_master_tx_cplt",
                "HAL_I2C_MemTxCpltCallback": "handle_mem_tx_cplt",
                "param_1": "data",
                "puVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001902": {
            "called": [],
            "calling": [
                "FUN_08001904",
                "FUN_080019a0"
            ],
            "code": "\nvoid FUNC_08001902(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08001902",
            "entrypoint": "0x08001902",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08001902": "FUNC_08001902"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08001904": {
            "additional_data": {
                "FUN_08001904": {
                    "decode_data": 1,
                    "handle_i2_c_data": 1,
                    "handle_parameter": 1,
                    "parse_and_process_data": 1,
                    "process_data": 21,
                    "process_i2_c_data": 1,
                    "process_input": 1,
                    "process_input_data": 1,
                    "process_param": 2
                },
                "HAL_I2C_MasterRxCpltCallback": {
                    "handle_i2_c_master_receive_complete": 1,
                    "handle_master_read_complete": 1,
                    "handle_master_received_complete": 1,
                    "handle_master_rx_complete": 3,
                    "handle_master_rx_cplt": 8,
                    "master_rx_cplt_callback": 1
                },
                "HAL_I2C_MemRxCpltCallback": {
                    "handle_i2_c_mem_receive_complete": 1,
                    "handle_mem_read_complete": 1,
                    "handle_mem_rx_complete": 3,
                    "handle_mem_rx_cplt": 8,
                    "handle_memory_received_complete": 1,
                    "mem_rx_cplt_callback": 1
                },
                "param_1": {
                    "data": 21,
                    "data_array": 1,
                    "data_pointer": 1,
                    "input": 1,
                    "input_data": 2,
                    "input_parameters": 1,
                    "param": 1,
                    "parameter": 1,
                    "parameter_list": 1,
                    "parameters": 1
                },
                "puVar1": {
                    "pointer": 1,
                    "pointer_var": 1,
                    "ptr": 7,
                    "temp": 5,
                    "temp_pointer": 2,
                    "temp_ptr": 11,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "temp_variable_1": 1
                }
            },
            "called": [
                "FUN_08001902",
                "FUN_080015b8"
            ],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 parse_and_process_data_08001904(uint **data)\n\n{\n  uint *temp_ptr;\n  \n  if (*(char *)((int)data + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)data + 0x2a) < 4) {\n      if (*(ushort *)((int)data + 0x2a) < 2) {\n        **data = **data & 0xfffffbff;\n        (*data)[1] = (*data)[1] & 0xfffff8ff;\n        temp_ptr = data[9];\n        data[9] = (uint *)((int)temp_ptr + 1);\n        *(char *)temp_ptr = (char)(*data)[4];\n        *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        data[0xc] = (uint *)0x0;\n        if (*(char *)((int)data + 0x3e) == '@') {\n          *(undefined *)((int)data + 0x3e) = 0;\n          handle_mem_rx_cplt();\n        }\n        else {\n          *(undefined *)((int)data + 0x3e) = 0;\n          handle_master_rx_cplt();\n        }\n      }\n    }\n    else {\n      temp_ptr = data[9];\n      data[9] = (uint *)((int)temp_ptr + 1);\n      *(char *)temp_ptr = (char)(*data)[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n      if (*(short *)((int)data + 0x2a) == 3) {\n        (*data)[1] = (*data)[1] & 0xfffffbff;\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "parse_and_process_data_08001904",
            "entrypoint": "0x08001904",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001904": "parse_and_process_data_08001904",
                "HAL_I2C_MasterRxCpltCallback": "handle_master_rx_cplt",
                "HAL_I2C_MemRxCpltCallback": "handle_mem_rx_cplt",
                "param_1": "data",
                "puVar1": "temp_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080019a0": {
            "additional_data": {
                "FUNC_080015b8": {
                    "callback2": 4,
                    "callback_func2": 1
                },
                "FUNC_08001902": {
                    "callback1": 4,
                    "callback_func1": 1
                },
                "FUN_080015b8": {
                    "process_i2_c_data": 1
                },
                "FUN_08001902": {
                    "cleanup": 1
                },
                "FUN_080019a0": {
                    "process_binary_data": 1,
                    "process_data": 24,
                    "process_function": 1,
                    "process_input": 1,
                    "process_param": 1,
                    "process_parameter": 1,
                    "update_data": 1,
                    "update_value": 1
                },
                "HAL_I2C_MasterRxCpltCallback": {
                    "handle_master_rx_cplt": 9,
                    "master_receive_callback": 1,
                    "master_receive_complete_callback": 1,
                    "master_rx_cplt_callback": 1,
                    "on_master_receive_complete": 1
                },
                "HAL_I2C_MemRxCpltCallback": {
                    "handle_mem_rx_cplt": 9,
                    "mem_receive_callback": 1,
                    "mem_receive_complete_callback": 1,
                    "mem_rx_cplt_callback": 1,
                    "on_memory_receive_complete": 1
                },
                "param_1": {
                    "binary_data": 1,
                    "data": 20,
                    "data_array": 1,
                    "data_param": 1,
                    "data_ptr": 1,
                    "input_data": 1,
                    "input_params": 1,
                    "param": 2,
                    "parameter_array": 1,
                    "parameters": 2
                },
                "puVar1": {
                    "next_pointer": 1,
                    "ptr": 7,
                    "ptr1": 1,
                    "temp": 4,
                    "temp_pointer": 2,
                    "temp_ptr": 12,
                    "temp_var": 4
                }
            },
            "called": [
                "FUN_08001902",
                "FUN_080015b8"
            ],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 process_binary_data_080019a0(uint **data)\n\n{\n  uint *temp_ptr;\n  \n  if (*(short *)((int)data + 0x2a) == 4) {\n    (*data)[1] = (*data)[1] & 0xfffffbff;\n    temp_ptr = data[9];\n    data[9] = (uint *)((int)temp_ptr + 1);\n    *(char *)temp_ptr = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  else if (*(short *)((int)data + 0x2a) == 3) {\n    (*data)[1] = (*data)[1] & 0xfffffbff;\n    **data = **data & 0xfffffbff;\n    temp_ptr = data[9];\n    data[9] = (uint *)((int)temp_ptr + 1);\n    *(char *)temp_ptr = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  else if (*(short *)((int)data + 0x2a) == 2) {\n    if ((int)data[0xb] - 1U < 2) {\n      **data = **data & 0xfffffbff;\n      **data = **data | 0x100;\n    }\n    else {\n      **data = **data | 0x200;\n    }\n    temp_ptr = data[9];\n    data[9] = (uint *)((int)temp_ptr + 1);\n    *(char *)temp_ptr = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    temp_ptr = data[9];\n    data[9] = (uint *)((int)temp_ptr + 1);\n    *(char *)temp_ptr = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    (*data)[1] = (*data)[1] & 0xfffffcff;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    data[0xc] = (uint *)0x0;\n    if (*(char *)((int)data + 0x3e) == '@') {\n      *(undefined *)((int)data + 0x3e) = 0;\n      handle_mem_rx_cplt();\n    }\n    else {\n      *(undefined *)((int)data + 0x3e) = 0;\n      handle_master_rx_cplt();\n    }\n  }\n  else {\n    temp_ptr = data[9];\n    data[9] = (uint *)((int)temp_ptr + 1);\n    *(char *)temp_ptr = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_binary_data_080019a0",
            "entrypoint": "0x080019a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080019a0": "process_binary_data_080019a0",
                "HAL_I2C_MasterRxCpltCallback": "handle_master_rx_cplt",
                "HAL_I2C_MemRxCpltCallback": "handle_mem_rx_cplt",
                "param_1": "data",
                "puVar1": "temp_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001aac": {
            "called": [],
            "calling": [
                "FUN_08001ab0"
            ],
            "code": "\nvoid FUNC_08001aac(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08001aac",
            "entrypoint": "0x08001aac",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08001aac": "FUNC_08001aac"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08001ab0": {
            "additional_data": {
                "FUNC_08001aac": {
                    "some_function": 1
                },
                "FUN_08000f8c": {
                    "process_data": 1
                },
                "FUN_08001ab0": {
                    "handle_i2_c_event": 15,
                    "handle_i2_c_interrupt": 2,
                    "handle_i2_c_operation": 1,
                    "handle_i2_c_response": 1,
                    "handle_i2c_event": 2,
                    "handle_i2c_transfer": 2,
                    "process_data": 3,
                    "process_i2_c_data": 4
                },
                "FUN_080038d0": {
                    "cleanup_function": 1
                },
                "FUN_08003900": {
                    "initialize_function": 1
                },
                "HAL_DMA_Abort_IT": {
                    "abort_dma": 7,
                    "abort_dma_it": 1,
                    "abort_dma_transfer": 1,
                    "dma_abort_it": 2
                },
                "HAL_I2C_AbortCpltCallback": {
                    "abort_complete_callback": 2,
                    "abort_i2_c_complete_callback": 1,
                    "handle_i2_c_abort_complete": 4,
                    "i2c_abort_complete_callback": 1,
                    "notify_abort_complete": 1,
                    "on_i2_c_abort_complete": 2
                },
                "HAL_I2C_ErrorCallback": {
                    "error_callback": 2,
                    "error_i2_c_callback": 1,
                    "handle_i2_c_error": 4,
                    "i2c_error_callback": 1,
                    "notify_error": 1,
                    "on_i2_c_error": 2
                },
                "HAL_I2C_ListenCpltCallback": {
                    "handle_i2_c_listen_complete": 4,
                    "i2c_listen_complete_callback": 1,
                    "listen_complete_callback": 1,
                    "listen_i2_c_complete_callback": 1,
                    "notify_listen_complete": 1,
                    "on_i2_c_listen_complete": 2
                },
                "LAB_08001f3c_1": {
                    "dma_abort_callback": 1,
                    "dma_abort_handler": 1,
                    "dma_callback": 1,
                    "dma_callback_function": 1,
                    "function_label": 1,
                    "lab_function": 1,
                    "some_callback": 1
                },
                "iVar1": {
                    "dma_result": 4,
                    "error_code": 2,
                    "index": 1,
                    "result": 20,
                    "return_value": 2,
                    "status": 2
                },
                "param_1": {
                    "data": 4,
                    "data_pointer": 1,
                    "event": 1,
                    "event_data": 12,
                    "event_data_ptr": 1,
                    "function_parameters": 1,
                    "i2c_event_data": 1,
                    "i2c_params": 2,
                    "input_params": 1,
                    "param": 3,
                    "params": 1,
                    "response": 1,
                    "transfer_data": 2
                },
                "puVar2": {
                    "buffer_pointer": 1,
                    "buffer_ptr": 1,
                    "byte_ptr": 1,
                    "char_buffer": 1,
                    "char_pointer": 2,
                    "char_ptr": 1,
                    "characters_ptr": 1,
                    "counter": 1,
                    "counter_var": 1,
                    "data_ptr": 2,
                    "data_ptr2": 1,
                    "iteration_ptr": 1,
                    "ptr": 4,
                    "ptr1": 3,
                    "ptr2": 2,
                    "ptr_temp": 1,
                    "ptr_var2": 1,
                    "pu_data": 1,
                    "pu_var": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 2,
                    "write_buffer": 1
                },
                "puVar3": {
                    "config": 1,
                    "data_ptr": 1,
                    "data_ptr3": 1,
                    "event": 2,
                    "event_data": 1,
                    "event_data_pointer": 1,
                    "event_data_ptr": 3,
                    "event_pointer": 1,
                    "event_ptr": 6,
                    "i2c_event_ptr": 1,
                    "i2c_reg": 1,
                    "ptr2": 4,
                    "ptr3": 2,
                    "ptr_param": 1,
                    "ptr_var3": 1,
                    "response_pointer": 1,
                    "temp_pointer2": 1,
                    "temp_ptr2": 2
                }
            },
            "called": [
                "FUN_08003900",
                "FUN_08000f8c",
                "FUN_08001aac",
                "FUN_080038d0"
            ],
            "calling": [
                "FUN_08001e68",
                "FUN_08001bfc"
            ],
            "code": "\nvoid handle_i2_c_event_08001ab0(uint **event_data)\n\n{\n  int result;\n  uint *ptr;\n  uint *event_ptr;\n  \n  if (*(byte *)((int)event_data + 0x3d) - 0x29 < 2) {\n    event_data[0xc] = (uint *)0x0;\n    *(undefined *)((int)event_data + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)event_data + 0x3d) != '`') && (((*event_data)[1] & 0x800) == 0)) {\n      *(undefined *)((int)event_data + 0x3d) = 0x20;\n    }\n    event_data[0xc] = (uint *)0x0;\n    *(undefined *)((int)event_data + 0x3e) = 0;\n  }\n  **event_data = **event_data & 0xfffff7ff;\n  event_ptr = *event_data;\n  if ((event_ptr[1] & 0x800) == 0) {\n    if (*(char *)((int)event_data + 0x3d) == '`') {\n      *(undefined *)((int)event_data + 0x3d) = 0x20;\n      event_data[0x10] = (uint *)0x0;\n      if ((event_ptr[5] & 0x40) != 0) {\n        ptr = event_data[9];\n        event_data[9] = (uint *)((int)ptr + 1);\n        *(char *)ptr = (char)event_ptr[4];\n      }\n      **event_data = **event_data & 0xfffffffe;\n      handle_i2_c_abort_complete(event_data);\n    }\n    else {\n      if ((event_ptr[5] & 0x40) != 0) {\n        ptr = event_data[9];\n        event_data[9] = (uint *)((int)ptr + 1);\n        *(char *)ptr = (char)event_ptr[4];\n      }\n      handle_i2_c_error(event_data);\n    }\n  }\n  else {\n    event_ptr[1] = event_ptr[1] & 0xfffff7ff;\n    if (*(char *)((int)event_data[0xd] + 0x35) == '\\x01') {\n      event_data[0xe][0x14] = (uint)&dma_abort_handler;\n      result = abort_dma(event_data[0xe]);\n      if (result != 0) {\n        if (((*event_data)[5] & 0x40) != 0) {\n          event_ptr = event_data[9];\n          event_data[9] = (uint *)((int)event_ptr + 1);\n          *(char *)event_ptr = (char)(*event_data)[4];\n        }\n        **event_data = **event_data & 0xfffffffe;\n        *(undefined *)((int)event_data + 0x3d) = 0x20;\n        (*(code *)event_data[0xe][0x14])();\n      }\n    }\n    else {\n      event_data[0xd][0x14] = (uint)&dma_abort_handler;\n      result = abort_dma(event_data[0xd]);\n      if (result != 0) {\n        **event_data = **event_data & 0xfffffffe;\n        *(undefined *)((int)event_data + 0x3d) = 0x20;\n        (*(code *)event_data[0xd][0x14])();\n      }\n    }\n  }\n  if ((*(char *)((int)event_data + 0x3d) == '(') && (((uint)event_data[0x10] & 4) != 0)) {\n    event_data[0xb] = (uint *)0xffff0000;\n    event_data[0xc] = (uint *)0x0;\n    *(undefined *)((int)event_data + 0x3d) = 0x20;\n    *(undefined *)((int)event_data + 0x3e) = 0;\n    handle_i2_c_listen_complete(event_data);\n  }\n  return;\n}\n\n",
            "current_name": "handle_i2_c_event_08001ab0",
            "entrypoint": "0x08001ab0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001ab0": "handle_i2_c_event_08001ab0",
                "HAL_DMA_Abort_IT": "abort_dma",
                "HAL_I2C_AbortCpltCallback": "handle_i2_c_abort_complete",
                "HAL_I2C_ErrorCallback": "handle_i2_c_error",
                "HAL_I2C_ListenCpltCallback": "handle_i2_c_listen_complete",
                "LAB_08001f3c_1": "dma_abort_handler",
                "iVar1": "result",
                "param_1": "event_data",
                "puVar2": "ptr",
                "puVar3": "event_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001bfc": {
            "additional_data": {
                "FUNC_0800160c": {
                    "i2_c_listen_cplt_callback": 1
                },
                "FUN_08001ab0": {
                    "parse_header": 1
                },
                "FUN_08001bfc": {
                    "handle_i2_c_event": 2,
                    "handle_i2_c_operation": 1,
                    "process_data": 12,
                    "process_function": 1,
                    "process_i2_c_data": 10,
                    "process_i2_c_packet": 2,
                    "update_flags_and_execute_callbacks": 1
                },
                "FUN_080038d0": {
                    "i2_c_it_error": 1
                },
                "cVar1": {
                    "c": 1,
                    "char1": 3,
                    "char_value": 7,
                    "char_var": 1,
                    "char_variable": 1,
                    "character": 9,
                    "current_char": 1,
                    "event_char": 1,
                    "first_char": 6,
                    "packet_char": 1
                },
                "param_1": {
                    "data": 16,
                    "data_ptr": 2,
                    "event_data": 2,
                    "i2c_data": 2,
                    "i2c_params": 1,
                    "input_array": 1,
                    "input_data": 2,
                    "packet": 2,
                    "parameter": 1,
                    "parameters": 2
                },
                "puVar2": {
                    "data_ptr": 1,
                    "event_data_ptr": 1,
                    "first_pointer": 1,
                    "header": 1,
                    "pointer": 2,
                    "pointer1": 4,
                    "pointer_1": 1,
                    "pointer_var1": 1,
                    "pointer_variable_1": 1,
                    "ptr": 1,
                    "ptr1": 12,
                    "ptr_1": 1,
                    "ptr_value1": 1,
                    "temp": 1,
                    "temp_pointer": 2
                },
                "puVar3": {
                    "data_ptr": 1,
                    "payload": 1,
                    "pointer2": 6,
                    "pointer_2": 1,
                    "pointer_var2": 1,
                    "pointer_variable_2": 1,
                    "ptr2": 13,
                    "ptr_2": 1,
                    "ptr_value2": 1,
                    "second_pointer": 1,
                    "temp2": 1,
                    "temp_pointer2": 2,
                    "temp_ptr": 1
                }
            },
            "called": [
                "FUN_08001ab0",
                "FUN_0800160c",
                "FUN_080038d0"
            ],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 process_i2_c_data_08001bfc(uint **data)\n\n{\n  char character;\n  uint *ptr1;\n  uint *ptr2;\n  \n  character = *(char *)((int)data + 0x3d);\n  (*data)[1] = (*data)[1] & 0xfffff8ff;\n  **data = **data | 1;\n  **data = **data & 0xfffffbff;\n  ptr1 = *data;\n  if ((ptr1[1] & 0x800) != 0) {\n    if ((*(char *)((int)data + 0x3d) == '\\\"') || (*(char *)((int)data + 0x3d) == '*')) {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xe] + 4);\n    }\n    else {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)data + 0x2a) != 0) {\n    if ((ptr1[5] & 4) != 0) {\n      ptr2 = data[9];\n      data[9] = (uint *)((int)ptr2 + 1);\n      *(char *)ptr2 = (char)ptr1[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    if (((*data)[5] & 0x40) != 0) {\n      ptr1 = data[9];\n      data[9] = (uint *)((int)ptr1 + 1);\n      *(char *)ptr1 = (char)(*data)[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    data[0x10] = (uint *)((uint)data[0x10] | 4);\n  }\n  if (data[0x10] == (uint *)0x0) {\n    if (((character == '(') || (character == '*')) || (character == ')')) {\n      data[0xb] = (uint *)0xffff0000;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      HAL_I2C_ListenCpltCallback();\n    }\n    else if ((data[0xc] == (uint *)0x22) || (character == '\\\"')) {\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      HAL_I2C_SlaveRxCpltCallback();\n    }\n  }\n  else {\n    I2C_ITError();\n  }\n  return 0;\n}\n\n",
            "current_name": "process_i2_c_data_08001bfc",
            "entrypoint": "0x08001bfc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001bfc": "process_i2_c_data_08001bfc",
                "cVar1": "character",
                "param_1": "data",
                "puVar2": "ptr1",
                "puVar3": "ptr2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001d00": {
            "additional_data": {
                "FUN_08001d00": {
                    "handle_i2_c_communication": 1,
                    "handle_i2_c_event": 2,
                    "handle_i2_c_events": 1,
                    "handle_i2_c_master_slave_mode": 1,
                    "handle_i2_c_operation": 2,
                    "handle_i2c_operations": 1,
                    "perform_i2_c_communication": 1,
                    "perform_i2_c_transaction": 1,
                    "process_i2_c": 1,
                    "process_i2_c_control": 1,
                    "process_i2_c_data": 5,
                    "process_i2_c_event": 1,
                    "process_i2_c_events": 2,
                    "process_i2_c_interrupt": 1,
                    "process_i2_c_operation": 9,
                    "process_i2_c_packet": 1
                },
                "I2C_MasterReceive_BTF": {
                    "handle_master_receive_btf": 1,
                    "perform_master_receive_btf_operation": 1
                },
                "I2C_MasterReceive_RXNE": {
                    "handle_master_receive_rxne": 1,
                    "perform_master_receive_rxne_operation": 1
                },
                "I2C_MasterTransmit_BTF": {
                    "handle_master_transmit_btf": 1,
                    "perform_master_transmit_btf_operation": 1
                },
                "I2C_MasterTransmit_TXE": {
                    "handle_master_transmit_txe": 1,
                    "perform_master_transmit_txe_operation": 1
                },
                "I2C_Master_ADD10": {
                    "handle_master_add10": 1,
                    "perform_master_add10_operation": 1
                },
                "I2C_Master_ADDR": {
                    "handle_master_address": 1,
                    "perform_master_addr_operation": 1
                },
                "I2C_Master_SB": {
                    "handle_master_start_byte": 1,
                    "perform_master_sb_operation": 1
                },
                "I2C_SlaveReceive_BTF": {
                    "handle_slave_receive_btf": 1,
                    "perform_slave_receive_btf_operation": 1
                },
                "I2C_SlaveReceive_RXNE": {
                    "handle_slave_receive_rxne": 1,
                    "perform_slave_receive_rxne_operation": 1
                },
                "I2C_SlaveTransmit_BTF": {
                    "handle_slave_transmit_btf": 1,
                    "perform_slave_transmit_btf_operation": 1
                },
                "I2C_SlaveTransmit_TXE": {
                    "handle_slave_transmit_txe": 1,
                    "perform_slave_transmit_txe_operation": 1
                },
                "I2C_Slave_ADDR": {
                    "handle_slave_address": 1,
                    "perform_slave_addr_operation": 1
                },
                "I2C_Slave_STOPF": {
                    "handle_slave_stop_f": 1,
                    "perform_slave_stopf_operation": 1
                },
                "iVar1": {
                    "address": 2,
                    "current_value": 1,
                    "data": 2,
                    "data_index": 1,
                    "data_pointer": 3,
                    "data_ptr": 1,
                    "data_ptr_value": 1,
                    "data_value": 1,
                    "event": 1,
                    "event_data_pointer": 1,
                    "event_data_value": 2,
                    "event_info": 1,
                    "i2c_data_ptr": 1,
                    "i2c_data_value": 1,
                    "operation": 1,
                    "operation_param_value": 1,
                    "operation_ptr": 1,
                    "packet": 1,
                    "param_value": 1,
                    "ptr": 1,
                    "ptr_control": 1,
                    "ptr_data": 1,
                    "ptr_to_data": 1,
                    "selected_event": 1,
                    "transaction_ptr": 1,
                    "value": 1
                },
                "param_1": {
                    "control_data": 1,
                    "data": 4,
                    "data_ptr": 1,
                    "event_data": 5,
                    "events": 1,
                    "i2c_data": 8,
                    "i2c_params": 1,
                    "input": 1,
                    "input_data": 1,
                    "interrupt_data": 1,
                    "operation_data": 2,
                    "operation_params": 1,
                    "packet_data": 1,
                    "param": 1,
                    "transaction_data": 1
                },
                "uVar2": {
                    "condition1": 1,
                    "condition_flags1": 1,
                    "control_reg": 2,
                    "data_value1": 1,
                    "event_data_value1": 1,
                    "event_flag": 1,
                    "event_flags": 2,
                    "event_status_flag1": 1,
                    "flag1": 3,
                    "flags": 1,
                    "flags1": 2,
                    "register_value1": 2,
                    "status": 1,
                    "status1": 2,
                    "status_flag1": 1,
                    "status_reg": 1,
                    "status_reg1": 1,
                    "status_var1": 2,
                    "value1": 4,
                    "value_2": 1
                },
                "uVar3": {
                    "condition2": 1,
                    "condition_flags2": 1,
                    "config_reg": 1,
                    "control": 1,
                    "control_flag": 1,
                    "data_value2": 1,
                    "event_data_value2": 1,
                    "event_status_flag2": 1,
                    "flag2": 3,
                    "flags2": 2,
                    "register_value2": 2,
                    "status": 1,
                    "status2": 2,
                    "status_flag2": 1,
                    "status_flags": 2,
                    "status_reg": 2,
                    "status_reg2": 1,
                    "status_var2": 2,
                    "value2": 4,
                    "value_3": 1
                },
                "uVar4": {
                    "condition3": 1,
                    "condition_flags3": 1,
                    "config": 1,
                    "control_flags": 1,
                    "control_reg": 1,
                    "data_value3": 1,
                    "event_data_value3": 1,
                    "event_status_flag3": 1,
                    "flag3": 3,
                    "flag_reg": 1,
                    "flags3": 2,
                    "interrupt_flags": 1,
                    "interrupt_reg": 1,
                    "more_flags": 1,
                    "read_reg": 1,
                    "register_value3": 2,
                    "status3": 2,
                    "status_flag": 1,
                    "status_flag3": 1,
                    "status_var3": 2,
                    "value3": 4,
                    "value_1": 1
                }
            },
            "called": [
                "FUN_08001904",
                "FUN_08001440",
                "FUN_080011c0",
                "FUN_0800160e",
                "FUN_080015bc",
                "FUN_0800165a",
                "FUN_0800171a",
                "FUN_08001864",
                "FUN_0800124a",
                "FUN_08001bfc",
                "FUN_08001256",
                "FUN_08001420",
                "FUN_080019a0"
            ],
            "calling": [],
            "code": "\nvoid process_i2_c_operation_08001d00(int *i2c_data)\n\n{\n  int data_pointer;\n  uint value1;\n  uint value2;\n  uint value3;\n  \n  data_pointer = *i2c_data;\n  value3 = *(uint *)(data_pointer + 0x18);\n  value1 = *(uint *)(data_pointer + 0x14);\n  value2 = *(uint *)(data_pointer + 4);\n  if ((*(char *)((int)i2c_data + 0x3e) == '\\x10') || (*(char *)((int)i2c_data + 0x3e) == '@')) {\n    if (((value1 & 0x10001) == 0) || ((value2 & 0x200) == 0)) {\n      if (((value1 & 0x10008) == 0) || ((value2 & 0x200) == 0)) {\n        if (((value1 & 0x10002) != 0) && ((value2 & 0x200) != 0)) {\n          perform_master_addr_operation(i2c_data);\n        }\n      }\n      else {\n        perform_master_add10_operation(i2c_data);\n      }\n    }\n    else {\n      perform_master_sb_operation(i2c_data);\n    }\n    if ((value3 & 0x100004) == 0) {\n      if ((((value1 & 0x10040) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        perform_master_receive_rxne_operation(i2c_data);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        perform_master_receive_btf_operation(i2c_data);\n        return;\n      }\n    }\n    else {\n      if ((((value1 & 0x10080) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        perform_master_transmit_txe_operation(i2c_data);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        perform_master_transmit_btf_operation(i2c_data);\n        return;\n      }\n    }\n  }\n  else {\n    if (((value1 & 0x10002) != 0) && ((value2 & 0x200) != 0)) {\n      perform_slave_addr_operation();\n      return;\n    }\n    if (((value1 & 0x10010) != 0) && ((value2 & 0x200) != 0)) {\n      handle_slave_stop_f(i2c_data);\n      return;\n    }\n    if ((value3 & 0x100004) == 0) {\n      if ((((value1 & 0x10040) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        perform_slave_receive_rxne_operation(i2c_data);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        perform_slave_receive_btf_operation(i2c_data);\n      }\n    }\n    else {\n      if ((((value1 & 0x10080) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        perform_slave_transmit_txe_operation(i2c_data);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        handle_slave_transmit_btf(i2c_data);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_i2_c_operation_08001d00",
            "entrypoint": "0x08001d00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001d00": "process_i2_c_operation_08001d00",
                "I2C_MasterReceive_BTF": "perform_master_receive_btf_operation",
                "I2C_MasterReceive_RXNE": "perform_master_receive_rxne_operation",
                "I2C_MasterTransmit_BTF": "perform_master_transmit_btf_operation",
                "I2C_MasterTransmit_TXE": "perform_master_transmit_txe_operation",
                "I2C_Master_ADD10": "perform_master_add10_operation",
                "I2C_Master_ADDR": "perform_master_addr_operation",
                "I2C_Master_SB": "perform_master_sb_operation",
                "I2C_SlaveReceive_BTF": "perform_slave_receive_btf_operation",
                "I2C_SlaveReceive_RXNE": "perform_slave_receive_rxne_operation",
                "I2C_SlaveTransmit_BTF": "handle_slave_transmit_btf",
                "I2C_SlaveTransmit_TXE": "perform_slave_transmit_txe_operation",
                "I2C_Slave_ADDR": "perform_slave_addr_operation",
                "I2C_Slave_STOPF": "handle_slave_stop_f",
                "iVar1": "data_pointer",
                "param_1": "i2c_data",
                "uVar2": "value1",
                "uVar3": "value2",
                "uVar4": "value3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001e68": {
            "additional_data": {
                "FUN_08001684": {
                    "process_sub_function": 1
                },
                "FUN_08001e68": {
                    "check_and_modify_flags": 1,
                    "check_and_set_flags": 1,
                    "configure_i2_c_interface": 1,
                    "process_flags": 2,
                    "process_i2_c_data": 1,
                    "process_i2_c_packets": 1,
                    "process_parameters": 1,
                    "update_flags_and_call_i2_c_functions": 1,
                    "update_flags_and_check_errors": 1,
                    "update_flags_and_errors": 1,
                    "update_flags_and_trigger_events": 1,
                    "update_i2_c_flags": 2,
                    "update_i2_c_settings": 3,
                    "update_i2_c_status": 9,
                    "update_i2_c_status_flags": 1,
                    "update_status_bits": 1,
                    "update_status_flags": 2
                },
                "I2C_ITError": {
                    "handle_i2_c_error": 1,
                    "handle_i2_cit_error": 1
                },
                "I2C_Slave_AF": {
                    "handle_i2_c_slave_af": 1,
                    "process_i2_c_slave_af": 1
                },
                "cVar1": {
                    "char1": 4,
                    "char_value": 6,
                    "char_var": 1,
                    "char_var1": 1,
                    "character": 13,
                    "character1": 2,
                    "character_var": 1,
                    "current_char": 2,
                    "temp_char": 1
                },
                "param_1": {
                    "data": 5,
                    "flags": 2,
                    "i2c_data": 1,
                    "i2c_params": 4,
                    "i2c_status": 2,
                    "i2c_status_ptr": 1,
                    "input": 1,
                    "input_data": 2,
                    "input_params": 1,
                    "interface_params": 1,
                    "param": 1,
                    "parameters": 7,
                    "settings": 3
                },
                "puVar2": {
                    "current_param": 1,
                    "current_setting": 1,
                    "data_pointer": 1,
                    "i2c_ptr": 2,
                    "i2c_status_ptr": 1,
                    "param_pointer": 1,
                    "param_ptr": 1,
                    "pointer": 4,
                    "pointer1": 1,
                    "pointer2": 1,
                    "pointer_value": 1,
                    "pointer_var": 1,
                    "pointer_var1": 1,
                    "ptr": 6,
                    "ptr2": 1,
                    "ptr_param": 1,
                    "ptr_to_data": 1,
                    "ptr_to_interface": 1,
                    "ptr_to_param": 1,
                    "ptr_value": 1,
                    "status_pointer": 1
                },
                "uVar3": {
                    "flag1": 4,
                    "flag3": 1,
                    "flag_value": 2,
                    "flag_value1": 1,
                    "flags": 1,
                    "i2c_status": 1,
                    "interface_flag1": 1,
                    "setting1": 1,
                    "status": 2,
                    "status1": 3,
                    "status_flag": 1,
                    "status_var1": 1,
                    "status_word": 1,
                    "val1": 1,
                    "value1": 7,
                    "value3": 2
                },
                "uVar4": {
                    "control_flag": 1,
                    "flag": 3,
                    "flag1": 1,
                    "flag2": 4,
                    "flag_mask": 1,
                    "flag_value2": 1,
                    "interface_flag2": 1,
                    "mask_value": 1,
                    "other_status": 1,
                    "setting2": 1,
                    "status2": 3,
                    "status_var2": 1,
                    "val2": 1,
                    "value": 1,
                    "value2": 7,
                    "value4": 2
                },
                "uint": {
                    "uint": 1
                }
            },
            "called": [
                "FUN_08001ab0",
                "FUN_08001684"
            ],
            "calling": [],
            "code": "\nvoid update_i2_c_status_flags_08001e68(uint **parameters)\n\n{\n  char character;\n  uint *ptr;\n  uint value1;\n  uint value2;\n  \n  ptr = *parameters;\n  value1 = ptr[5];\n  value2 = ptr[1];\n  if (((value1 & 0x10100) != 0) && ((value2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 1);\n    ptr[5] = 0xfffffeff;\n  }\n  if (((value1 & 0x10200) != 0) && ((value2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 2);\n    (*parameters)[5] = 0xfffffdff;\n  }\n  if (((value1 & 0x10400) != 0) && ((value2 & 0x100) != 0)) {\n    character = *(char *)((int)parameters + 0x3d);\n    if (((*(char *)((int)parameters + 0x3e) == ' ') && (*(short *)((int)parameters + 0x2a) == 0)) &&\n       (((character == '!' || (character == ')')) || ((character == '(' && (parameters[0xc] == (uint *)0x21)))))) {\n      process_i2_c_slave_af(parameters);\n    }\n    else {\n      parameters[0x10] = (uint *)((uint)parameters[0x10] | 4);\n      if (*(char *)((int)parameters + 0x3e) == '\\x10') {\n        **parameters = **parameters | 0x200;\n      }\n      (*parameters)[5] = 0xfffffbff;\n    }\n  }\n  if (((value1 & 0x10800) != 0) && ((value2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 8);\n    (*parameters)[5] = 0xfffff7ff;\n  }\n  if (parameters[0x10] != (uint *)0x0) {\n    handle_i2_c_error(parameters);\n  }\n  return;\n}\n\n",
            "current_name": "update_i2_c_status_flags_08001e68",
            "entrypoint": "0x08001e68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001e68": "update_i2_c_status_flags_08001e68",
                "I2C_ITError": "handle_i2_c_error",
                "I2C_Slave_AF": "process_i2_c_slave_af",
                "cVar1": "character",
                "param_1": "parameters",
                "puVar2": "ptr",
                "uVar3": "value1",
                "uVar4": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001f9c": {
            "additional_data": {
                "FUN_08000e30": {
                    "get_tick": 1
                },
                "FUN_08001f9c": {
                    "check_and_update_status": 1,
                    "check_communication_status": 1,
                    "check_for_action": 1,
                    "check_for_completion": 2,
                    "check_for_initialization": 1,
                    "check_for_interrupt": 1,
                    "check_hardware_status": 1,
                    "check_interrupt_status": 2,
                    "check_time_and_status": 1,
                    "initialize_and_check": 1,
                    "initialize_communication": 1,
                    "initialize_device": 2,
                    "initialize_hardware": 3,
                    "initialize_state_machine": 1,
                    "initialize_system": 2,
                    "polling_function": 2,
                    "update_and_check_status": 1,
                    "wait_for_flag": 2,
                    "wait_for_input": 1,
                    "wait_for_interrupt": 1,
                    "wait_for_signal": 1
                },
                "HAL_GetTick": {
                    "get_current_tick": 1,
                    "get_current_time": 3
                },
                "_DAT_40007004": {
                    "communication_status2": 1,
                    "device_reg": 1,
                    "status_register": 1
                },
                "_DAT_40023840": {
                    "communication_flag": 1,
                    "control_reg": 1,
                    "flag_register": 1,
                    "status_register": 1
                },
                "_DAT_420e0040": {
                    "communication_status1": 1,
                    "flag_1": 1,
                    "init_flag": 1,
                    "status_reg": 1
                },
                "_DAT_420e0044": {
                    "communication_status3": 1,
                    "error_flag": 1,
                    "flag": 1,
                    "flag_2": 1
                },
                "_FUN_08001f9c": {
                    "initialize_device": 1
                },
                "iVar1": {
                    "current_time": 1,
                    "start_tick": 3,
                    "start_time": 26
                },
                "iVar2": {
                    "current_tick": 3,
                    "current_time": 26,
                    "time_elapsed": 1
                }
            },
            "called": [
                "FUN_08000e30"
            ],
            "calling": [
                "FUN_08000c8c"
            ],
            "code": "\n\n\nundefined4 initialize_hardware_08001f9c(void)\n\n{\n  int start_time;\n  int current_time;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_420e0040 = 1;\n  start_time = get_current_time();\n  do {\n    if ((_DAT_40007004 & 0x10000) != 0) {\n      _DAT_420e0044 = 1;\n      start_time = get_current_time();\n      do {\n        if ((_DAT_40007004 & 0x20000) != 0) {\n          return 0;\n        }\n        current_time = get_current_time();\n      } while ((uint)(current_time - start_time) < 0x3e9);\n      return 3;\n    }\n    current_time = get_current_time();\n  } while ((uint)(current_time - start_time) < 0x3e9);\n  return 3;\n}\n\n",
            "current_name": "initialize_hardware_08001f9c",
            "entrypoint": "0x08001f9c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001f9c": "initialize_hardware_08001f9c",
                "HAL_GetTick": "get_current_time",
                "iVar1": "start_time",
                "iVar2": "current_time"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800201c": {
            "additional_data": {
                "5000": {
                    "timeout_2": 1
                },
                "FUN_08000e30": {
                    "get_peripheral_state": 1,
                    "initialize_uart": 1,
                    "sub_function": 1
                },
                "FUN_0800201c": {
                    "check_and_control": 3,
                    "check_and_control_device": 3,
                    "check_and_control_peripheral": 2,
                    "check_and_control_process": 1,
                    "check_and_set_flags": 1,
                    "check_status": 3,
                    "check_status_and_control": 1,
                    "handle_action": 1,
                    "handle_param": 1,
                    "perform_action": 2,
                    "process_params": 2,
                    "process_status": 1
                },
                "HAL_GetTick": {
                    "get_current_time": 7,
                    "get_system_tick": 1,
                    "get_tick": 3,
                    "get_tick_count": 1,
                    "get_ticks": 1,
                    "get_timestamp": 1
                },
                "PTR_FUN_08000e30": {
                    "get_status": 1
                },
                "_DAT_40007000": {
                    "control_register3": 1,
                    "device_setting_5": 1,
                    "device_status_reg2": 1,
                    "device_uart_config_register": 1,
                    "reg5": 1,
                    "register5": 1,
                    "register7": 1,
                    "register8": 1,
                    "register_5": 1,
                    "register_8": 1,
                    "register_h": 2,
                    "register_value6": 1,
                    "timer_control_register": 1
                },
                "_DAT_40023800": {
                    "control_register": 3,
                    "control_register1": 1,
                    "device_control_1": 1,
                    "device_control_reg2": 1,
                    "device_control_register": 1,
                    "peripheral_control_register1": 1,
                    "reg3": 1,
                    "register3": 3,
                    "register_3": 2,
                    "register_c": 1
                },
                "_DAT_40023800_2": {
                    "peripheral_control_register1_value": 1
                },
                "_DAT_40023804": {
                    "device_status_2": 1,
                    "device_status_reg": 1,
                    "device_status_register2": 1,
                    "flag_register2": 1,
                    "peripheral2": 1,
                    "reg2": 1,
                    "register2": 5,
                    "register_2": 2,
                    "register_b": 1,
                    "register_value2": 1
                },
                "_DAT_40023808": {
                    "device_control_reg": 1,
                    "device_status_1": 1,
                    "device_status_register1": 1,
                    "flag_register1": 1,
                    "peripheral1": 1,
                    "reg1": 1,
                    "register1": 5,
                    "register_1": 2,
                    "register_a": 1,
                    "register_value1": 1
                },
                "_DAT_40023810": {
                    "flag1": 1,
                    "register_6": 1
                },
                "_DAT_40023814": {
                    "register_7": 1
                },
                "_DAT_40023818": {
                    "flag2": 1,
                    "register_8": 1
                },
                "_DAT_4002381c": {
                    "flag3": 1,
                    "register_12": 1
                },
                "_DAT_40023820": {
                    "flag4": 1
                },
                "_DAT_40023824": {
                    "flag5": 1,
                    "register_17": 1
                },
                "_DAT_40023828": {
                    "flag6": 1,
                    "register_18": 1
                },
                "_DAT_4002382c": {
                    "flag7": 1,
                    "register_19": 1
                },
                "_DAT_40023830": {
                    "flag8": 1,
                    "register_9": 1
                },
                "_DAT_40023834": {
                    "flag9": 1,
                    "register_10": 1
                },
                "_DAT_40023838": {
                    "flag10": 1,
                    "register_11": 1
                },
                "_DAT_4002383c": {
                    "flag11": 1
                },
                "_DAT_40023840": {
                    "control_register2": 1,
                    "device_config_register": 1,
                    "device_control_reg3": 1,
                    "device_setting_4": 1,
                    "peripheral_status_register": 1,
                    "reg4": 1,
                    "register4": 1,
                    "register6": 1,
                    "register7": 1,
                    "register_27": 1,
                    "register_7": 1,
                    "register_g": 2,
                    "register_value5": 1
                },
                "_DAT_40023844": {
                    "reg18": 1
                },
                "_DAT_40023848": {
                    "reg11": 1
                },
                "_DAT_4002384c": {
                    "reg12": 1
                },
                "_DAT_40023850": {
                    "reg13": 1,
                    "register_20": 1
                },
                "_DAT_40023854": {
                    "register_21": 1
                },
                "_DAT_40023858": {
                    "reg17": 1,
                    "register_22": 1
                },
                "_DAT_4002385c": {
                    "reg19": 1
                },
                "_DAT_40023860": {
                    "control_register_4": 1,
                    "reg20": 1
                },
                "_DAT_40023864": {
                    "control_register_5": 1,
                    "reg14": 1
                },
                "_DAT_40023868": {
                    "control_register_6": 1,
                    "reg15": 1
                },
                "_DAT_4002386c": {
                    "control_register_7": 1,
                    "reg16": 1
                },
                "_DAT_40023870": {
                    "control_register4": 1,
                    "control_register_2": 1,
                    "device_control_reg4": 1,
                    "device_setting_6": 1,
                    "device_uart_control_register": 1,
                    "reg9": 1,
                    "register5": 1,
                    "register6": 1,
                    "register9": 1,
                    "register_9": 1,
                    "register_i": 2,
                    "register_value7": 1,
                    "timer_status_register": 1
                },
                "_DAT_40023870_2": {
                    "timer_status_register_value": 1
                },
                "_DAT_40023874": {
                    "control_register5": 1,
                    "control_register_3": 1,
                    "device_power_register": 1,
                    "device_setting_2": 1,
                    "device_status_reg3": 1,
                    "peripheral_control_register2": 1,
                    "reg7": 1,
                    "register6": 1,
                    "register7": 1,
                    "register8": 1,
                    "register_6": 1,
                    "register_e": 1,
                    "register_f": 1,
                    "register_value4": 1
                },
                "_DAT_40023874_2": {
                    "peripheral_control_register2_value": 1
                },
                "_DAT_40023880": {
                    "register_13": 1
                },
                "_DAT_40023884": {
                    "register_14": 1
                },
                "_DAT_40023888": {
                    "register_15": 1
                },
                "_DAT_4002388c": {
                    "register_16": 1
                },
                "_DAT_40023890": {
                    "register_23": 1
                },
                "_DAT_40023894": {
                    "register_24": 1
                },
                "_DAT_40023898": {
                    "register_25": 1
                },
                "_DAT_4002389c": {
                    "register_26": 1
                },
                "_DAT_400238A4": {
                    "register_28": 1
                },
                "_DAT_400238A8": {
                    "register_29": 1
                },
                "_DAT_400238B0": {
                    "register_30": 1
                },
                "_DAT_42470000": {
                    "device_setting_1": 1,
                    "flag1": 1,
                    "reg6": 1,
                    "register3": 1,
                    "register4": 2,
                    "register8": 1,
                    "register_4": 2,
                    "register_d": 2,
                    "register_value3": 1,
                    "timer_config1": 1,
                    "uart_status1": 1
                },
                "_DAT_42470060": {
                    "device_setting_7": 1,
                    "flag3": 1,
                    "reg21": 1,
                    "register10": 1,
                    "register5": 2,
                    "register_31": 1,
                    "register_5": 1,
                    "register_e": 1,
                    "register_j": 1,
                    "register_value9": 1,
                    "timer_config2": 1,
                    "uart_status3": 1
                },
                "_DAT_42470070": {
                    "register_32": 1
                },
                "_DAT_42470080": {
                    "register_33": 1
                },
                "_DAT_42470090": {
                    "register_34": 1
                },
                "_DAT_424700a0": {
                    "register_35": 1
                },
                "_DAT_42470e80": {
                    "device_setting_3": 1,
                    "flag2": 1,
                    "reg8": 1,
                    "register4": 1,
                    "register9": 1,
                    "register_f": 1,
                    "register_value8": 1,
                    "uart_status2": 1
                },
                "__DAT_40023800": {
                    "register_c": 1
                },
                "__DAT_40023804": {
                    "register_b": 1
                },
                "__DAT_40023808": {
                    "register_a": 1
                },
                "bVar4": {
                    "check_flag": 2,
                    "flag": 9,
                    "is_bit_set": 2,
                    "is_condition_met": 4,
                    "is_condition_true": 1,
                    "is_flag_modified": 1,
                    "is_flag_set": 9,
                    "is_reset": 1,
                    "is_var_set": 1,
                    "need_to_restore_bit": 1
                },
                "iVar1": {
                    "current_time": 1,
                    "initial_time": 2,
                    "start_tick": 3,
                    "start_time": 24,
                    "ticks_start": 1
                },
                "iVar2": {
                    "current_tick": 3,
                    "current_time": 25,
                    "elapsed_time": 1,
                    "end_time": 1,
                    "ticks_current": 1
                },
                "param_1": {
                    "action_params": 3,
                    "config": 2,
                    "control_flags": 1,
                    "device_config": 1,
                    "device_params": 1,
                    "flags": 1,
                    "input": 2,
                    "input_array": 1,
                    "input_data": 2,
                    "input_params": 2,
                    "param": 2,
                    "param_ptr": 1,
                    "parameters": 2,
                    "params": 5,
                    "status": 3,
                    "status_and_control": 1,
                    "status_flags": 1
                },
                "uVar3": {
                    "result": 22,
                    "return_code": 1,
                    "return_value": 3,
                    "status": 1
                },
                "unk_var1": {
                    "waiting_time": 1
                },
                "unk_var2": {
                    "timeout": 1
                }
            },
            "called": [
                "FUN_08000e30"
            ],
            "calling": [
                "FUN_08000c8c"
            ],
            "code": "\n\n\nundefined4 check_status_and_control_0800201c(uint *params)\n\n{\n  int start_time;\n  int current_time;\n  undefined4 result;\n  bool is_flag_set;\n  \n  if (params == (uint *)0x0) {\n    return 1;\n  }\n  if ((*params & 1) != 0) {\n    if (((_DAT_40023808 & 0xc) == 4) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) != 0)))) {\n      if (((_DAT_40023800 & 0x20000) != 0) && (params[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      if (params[1] == 0x10000) {\n        _DAT_40023800 = _DAT_40023800 | 0x10000;\n      }\n      else if (params[1] == 0x50000) {\n        _DAT_40023800 = _DAT_40023800 | 0x50000;\n      }\n      else {\n        _DAT_40023800 = _DAT_40023800 & 0xfffaffff;\n      }\n      if (params[1] == 0) {\n        start_time = get_current_time();\n        while ((_DAT_40023800 & 0x20000) != 0) {\n          current_time = get_current_time();\n          if (100 < (uint)(current_time - start_time)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        start_time = get_current_time();\n        while ((_DAT_40023800 & 0x20000) == 0) {\n          current_time = get_current_time();\n          if (100 < (uint)(current_time - start_time)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*params & 2) != 0) {\n    if (((_DAT_40023808 & 0xc) == 0) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0)))) {\n      if (((_DAT_40023800 & 2) != 0) && (params[3] != 1)) {\n        return 1;\n      }\n      _DAT_40023800 = _DAT_40023800 & 0xffffff07 | params[4] << 3;\n    }\n    else if (params[3] == 0) {\n      _DAT_42470000 = 0;\n      start_time = get_current_time();\n      while ((_DAT_40023800 & 2) != 0) {\n        current_time = get_current_time();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470000 = 1;\n      start_time = get_current_time();\n      while ((_DAT_40023800 & 2) == 0) {\n        current_time = get_current_time();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = _DAT_40023800 & 0xffffff07 | params[4] << 3;\n    }\n  }\n  if ((*params & 8) != 0) {\n    if (params[5] == 0) {\n      _DAT_42470e80 = 0;\n      start_time = get_current_time();\n      while ((_DAT_40023874 & 2) != 0) {\n        current_time = get_current_time();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470e80 = 1;\n      start_time = get_current_time();\n      while ((_DAT_40023874 & 2) == 0) {\n        current_time = get_current_time();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*params & 4) != 0) {\n    is_flag_set = (_DAT_40023840 & 0x10000000) == 0;\n    if (is_flag_set) {\n      _DAT_40023840 = _DAT_40023840 | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      start_time = get_current_time();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        current_time = get_current_time();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    if (params[2] == 1) {\n      _DAT_40023870 = _DAT_40023870 | 1;\n    }\n    else if (params[2] == 5) {\n      _DAT_40023870 = _DAT_40023870 | 5;\n    }\n    else {\n      _DAT_40023870 = _DAT_40023870 & 0xfffffffa;\n    }\n    if (params[2] == 0) {\n      start_time = get_current_time();\n      while ((_DAT_40023870 & 2) != 0) {\n        current_time = get_current_time();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      start_time = get_current_time();\n      while ((_DAT_40023870 & 2) == 0) {\n        current_time = get_current_time();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    if (is_flag_set) {\n      _DAT_40023840 = _DAT_40023840 & 0xefffffff;\n    }\n  }\n  if (params[6] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40023808 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (params[6] == 2) {\n    _DAT_42470060 = 0;\n    start_time = get_current_time();\n    do {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        _DAT_40023804 =\n             params[7] | params[8] | params[9] << 6 | ((params[10] >> 1) - 1) * 0x10000 |\n             params[0xb] << 0x18;\n        _DAT_42470060 = 1;\n        start_time = get_current_time();\n        do {\n          if ((_DAT_40023800 & 0x2000000) != 0) {\n            return 0;\n          }\n          current_time = get_current_time();\n        } while ((uint)(current_time - start_time) < 3);\n        return 3;\n      }\n      current_time = get_current_time();\n    } while ((uint)(current_time - start_time) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42470060 = 0;\n    start_time = get_current_time();\n    do {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        return 0;\n      }\n      current_time = get_current_time();\n    } while ((uint)(current_time - start_time) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "current_name": "check_status_and_control_0800201c",
            "entrypoint": "0x0800201c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800201c": "check_status_and_control_0800201c",
                "HAL_GetTick": "get_current_time",
                "bVar4": "is_flag_set",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "param_1": "params",
                "uVar3": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080023b4": {
            "additional_data": {
                "CARRY4": {
                    "calculate_carry": 1,
                    "check_carry": 3
                },
                "FUN_080023b4": {
                    "calculate_clock_frequency": 3,
                    "calculate_clock_rate": 1,
                    "calculate_clock_speed": 11,
                    "calculate_divisor": 2,
                    "calculate_frequency": 13
                },
                "PARAM_1": {
                    "register_value": 1
                },
                "_DAT_40023804": {
                    "config_register_2": 1,
                    "control_register": 1,
                    "data2": 2,
                    "data_register": 1,
                    "input_value": 1,
                    "multiplier_register": 1,
                    "register2": 15,
                    "register_value2": 4,
                    "register_value_2": 2,
                    "status_register_2": 1,
                    "timer_control_register": 1
                },
                "_DAT_40023808": {
                    "clock_config_register": 1,
                    "config_register": 1,
                    "config_register_1": 1,
                    "data1": 2,
                    "flag_register": 1,
                    "input_flag": 1,
                    "register1": 15,
                    "register_value1": 4,
                    "register_value_1": 2,
                    "status_register_1": 1,
                    "system_control_register": 1
                },
                "_FUN_080023b4": {
                    "calculate_frequency": 1
                },
                "__aeabi_uldivmod": {
                    "divide_and_modulo": 1,
                    "divmod": 1,
                    "perform_division": 1,
                    "unsigned_long_div_mod": 1
                },
                "_aeabi_uldivmod": {
                    "divide_and_calculate_remainder": 1
                },
                "_in_r3": {
                    "input_param": 1
                },
                "_uVar1": {
                    "result": 1
                },
                "in_r3": {
                    "additional_param": 1,
                    "carry_flag": 2,
                    "divisor": 3,
                    "extra_data": 1,
                    "input_argument": 1,
                    "input_param": 3,
                    "input_parameter": 5,
                    "input_value": 2,
                    "param": 3,
                    "param1": 5,
                    "processor_config": 1,
                    "unused_param": 2
                },
                "param_1": {
                    "input_flag": 1
                },
                "param_2": {
                    "divisor": 1,
                    "input_value": 1
                },
                "param_3": {
                    "remainder": 1
                },
                "param_4": {
                    "shift_amount": 1
                },
                "uVar1": {
                    "clock_frequency": 2,
                    "clock_rate": 1,
                    "clock_speed": 4,
                    "dividend": 3,
                    "frequency": 8,
                    "input_value": 1,
                    "multiplier": 1,
                    "quotient": 1,
                    "result": 7
                }
            },
            "called": [
                "FUN_080002d0"
            ],
            "calling": [
                "FUN_08002488"
            ],
            "code": "\n\n\nuint calculate_clock_frequency_080023b4(void)\n\n{\n  undefined4 input_parameter;\n  uint frequency;\n  \n  if ((_DAT_40023808 & 0xc) == 4) {\n    return 8000000;\n  }\n  if ((_DAT_40023808 & 0xc) != 8) {\n    return 16000000;\n  }\n  if ((_DAT_40023804 & 0x400000) == 0) {\n    frequency = (_DAT_40023804 << 0x11) >> 0x17;\n    frequency = divide_and_modulo(frequency * 16000000,\n                             (((uint)(frequency * 0x20 < frequency) * -0x3f -\n                              (uint)(frequency * 0x7c0 < frequency * 0x1f)) * 8 +\n                             (uint)check_carry(frequency * 0x3d08,frequency)) * 0x400 | frequency * 0x3d09 >> 0x16,\n                             _DAT_40023804 & 0x3f,0,input_parameter);\n  }\n  else {\n    frequency = (_DAT_40023804 << 0x11) >> 0x17;\n    frequency = divide_and_modulo(frequency * 8000000,\n                             (((uint)(frequency * 0x20 < frequency) * -0x3f -\n                              (uint)(frequency * 0x7c0 < frequency * 0x1f)) * 8 +\n                             (uint)check_carry(frequency * 0x3d08,frequency)) * 0x200,_DAT_40023804 & 0x3f,0,\n                             input_parameter);\n  }\n  return frequency / ((((_DAT_40023804 << 0xe) >> 0x1e) + 1) * 2);\n}\n\n",
            "current_name": "calculate_clock_frequency_080023b4",
            "entrypoint": "0x080023b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "CARRY4": "check_carry",
                "FUN_080023b4": "calculate_clock_frequency_080023b4",
                "__aeabi_uldivmod": "divide_and_modulo",
                "_aeabi_uldivmod": "divide_and_calculate_remainder",
                "in_r3": "input_parameter",
                "uVar1": "frequency"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002488": {
            "additional_data": {
                "5000": {
                    "max_time": 1
                },
                "CONCAT31": {
                    "combine": 1
                },
                "DAT_08005dfc": {
                    "lookup_table": 1,
                    "sys_clock_offsets": 1
                },
                "DAT_2000002c": {
                    "clock_frequency_divisor": 1,
                    "sys_clock_div": 1,
                    "sys_clock_freq": 2,
                    "sys_clock_frequency_divisor": 1
                },
                "DAT_40023c00_1": {
                    "current_config_flag": 1,
                    "current_setting_1": 1,
                    "mask": 1
                },
                "FUN_08000d98": {
                    "check_setting": 1,
                    "check_system_capability": 1,
                    "check_tick": 1,
                    "function_d": 1
                },
                "FUN_08000e30": {
                    "function_e": 1,
                    "initialize_peripherals": 1,
                    "initialize_tick": 2
                },
                "FUN_080023b4": {
                    "function_f": 1,
                    "get_device_status": 1,
                    "get_sys_clock_freq": 2
                },
                "FUN_08002488": {
                    "configure_device": 2,
                    "configure_system_clock": 1,
                    "init_device": 1,
                    "initialize_device": 7,
                    "initialize_hardware": 3,
                    "initialize_peripheral": 3,
                    "initialize_peripherals": 1,
                    "initialize_system": 13
                },
                "HAL_GetTick": {
                    "get_current_tick": 3,
                    "get_current_time": 3
                },
                "HAL_InitTick": {
                    "init_tick": 1,
                    "initialize_system_tick": 1,
                    "initialize_tick": 2
                },
                "HAL_RCC_GetSysClockFreq": {
                    "get_sys_clock_freq": 2,
                    "get_sys_clock_frequency": 2,
                    "get_system_clock_frequency": 2
                },
                "_DAT_40023800": {
                    "system_status": 1
                },
                "_DAT_40023808": {
                    "device_register": 1,
                    "peripheral_config": 1,
                    "peripheral_register": 1,
                    "system_control": 1,
                    "system_register": 1
                },
                "_DAT_40023c00": {
                    "current_config_size": 1,
                    "current_setting": 1,
                    "peripheral_config": 1,
                    "sys_config": 1,
                    "system_config": 1
                },
                "iVar1": {
                    "start_tick": 2,
                    "start_time": 26
                },
                "iVar2": {
                    "current_tick": 2,
                    "current_time": 26
                },
                "param_1": {
                    "config": 6,
                    "config_array": 1,
                    "config_data": 2,
                    "config_params": 12,
                    "configuration": 2,
                    "configurations": 1,
                    "device_config": 3,
                    "device_settings": 2,
                    "peripheral_settings": 1,
                    "settings": 1
                },
                "param_2": {
                    "config_array_size": 1,
                    "config_length": 4,
                    "config_size": 9,
                    "num_configs": 1,
                    "num_configurations": 2,
                    "num_params": 9,
                    "num_peripherals": 1,
                    "num_settings": 1,
                    "param": 1,
                    "setting_count": 2
                },
                "uVar3": {
                    "clock_freq": 1,
                    "freq": 1,
                    "sys_clk_freq": 1,
                    "sys_clock_freq": 23,
                    "sysclock_freq": 1,
                    "system_clock_freq": 1,
                    "temp_variable": 1
                }
            },
            "called": [
                "FUN_08000e30",
                "FUN_08000d98",
                "FUN_080023b4"
            ],
            "calling": [
                "FUN_08000c8c"
            ],
            "code": "\n\n\nundefined4 initialize_system_08002488(uint *config_params,uint config_size)\n\n{\n  int start_time;\n  int current_time;\n  uint sys_clock_freq;\n  \n  if (config_params == (uint *)0x0) {\n    return 1;\n  }\n  if ((_DAT_40023c00 & 0xf) < config_size) {\n    _DAT_40023c00 = combine(DAT_40023c00_1,(char)config_size);\n    if (config_size != (config_size & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*config_params & 2) != 0) {\n    if ((*config_params & 4) != 0) {\n      _DAT_40023808 = _DAT_40023808 | 0x1c00;\n    }\n    if ((*config_params & 8) != 0) {\n      _DAT_40023808 = _DAT_40023808 | 0xe000;\n    }\n    _DAT_40023808 = _DAT_40023808 & 0xffffff0f | config_params[2];\n  }\n  if ((*config_params & 1) != 0) {\n    sys_clock_freq = config_params[1];\n    if (sys_clock_freq == 1) {\n      if ((_DAT_40023800 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if (sys_clock_freq - 2 < 2) {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        return 1;\n      }\n    }\n    else if ((_DAT_40023800 & 2) == 0) {\n      return 1;\n    }\n    _DAT_40023808 = sys_clock_freq | _DAT_40023808 & 0xfffffffc;\n    start_time = get_current_tick();\n    while( true ) {\n      if ((_DAT_40023808 & 0xc) == config_params[1] * 4) break;\n      current_time = get_current_tick();\n      if (5000 < (uint)(current_time - start_time)) {\n        return 3;\n      }\n    }\n  }\n  if (config_size < (_DAT_40023c00 & 0xf)) {\n    _DAT_40023c00 = combine(DAT_40023c00_1,(char)config_size);\n    if (config_size != (config_size & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*config_params & 4) != 0) {\n    _DAT_40023808 = _DAT_40023808 & 0xffffe3ff | config_params[3];\n  }\n  if ((*config_params & 8) != 0) {\n    _DAT_40023808 = _DAT_40023808 & 0xffff1fff | config_params[4] << 3;\n  }\n  sys_clock_freq = get_system_clock_frequency();\n  DAT_2000002c = sys_clock_freq >> (&DAT_08005dfc)[(_DAT_40023808 << 0x18) >> 0x1c];\n  initialize_tick(0xf);\n  return 0;\n}\n\n",
            "current_name": "initialize_system_08002488",
            "entrypoint": "0x08002488",
            "imported": false,
            "improved": true,
            "renaming": {
                "CONCAT31": "combine",
                "FUN_08002488": "initialize_system_08002488",
                "HAL_GetTick": "get_current_tick",
                "HAL_InitTick": "initialize_tick",
                "HAL_RCC_GetSysClockFreq": "get_system_clock_frequency",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "param_1": "config_params",
                "param_2": "config_size",
                "uVar3": "sys_clock_freq"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080025e0": {
            "additional_data": {
                "DAT_2000002c": {
                    "constant_value": 1,
                    "dat_value": 1,
                    "data": 9,
                    "data_offset": 2,
                    "global_value": 1,
                    "global_variable": 2,
                    "global_variable_value": 1
                },
                "D_2000002c": {
                    "data": 1
                },
                "FUN_080025e0": {
                    "get_constant_value": 1,
                    "get_dat_2000002c": 1,
                    "get_dat_value": 1,
                    "get_data": 12,
                    "get_data_from_address": 1,
                    "get_data_offset": 2,
                    "get_data_value": 8,
                    "get_global_value": 1,
                    "get_global_variable": 2,
                    "get_global_variable_value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_080025ec",
                "FUN_08000c8c",
                "FUN_0800260c"
            ],
            "code": "\nundefined4 get_data_value_080025e0(void)\n\n{\n  return DAT_2000002c;\n}\n\n",
            "current_name": "get_data_value_080025e0",
            "entrypoint": "0x080025e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080025e0": "get_data_value_080025e0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080025ec": {
            "additional_data": {
                "DAT_08005e0c": {
                    "adjustment_table": 1,
                    "bit_shift_array": 1,
                    "frequency_shifts": 1,
                    "lookup_table": 2,
                    "shift_amount": 3,
                    "shift_array": 4,
                    "shift_values": 1
                },
                "FUN_080025e0": {
                    "get_hclk_freq": 4,
                    "get_hclk_frequency": 1
                },
                "FUN_080025ec": {
                    "calculate_adjusted_frequency": 1,
                    "calculate_adjusted_hclk_freq": 3,
                    "calculate_clock_frequency": 1,
                    "calculate_hclk_frequency_shifted": 1,
                    "get_adjusted_clock_speed": 1,
                    "get_adjusted_frequency": 1,
                    "get_adjusted_hclk_freq": 12,
                    "get_clock_frequency": 2,
                    "get_hclk_frequency": 9
                },
                "HAL_RCC_GetHCLKFreq": {
                    "get_hclk_freq": 8,
                    "get_hclk_frequency": 2,
                    "get_system_core_clock": 1
                },
                "_DAT_08005e0c": {
                    "lookup_table": 1,
                    "shift_array": 1
                },
                "_DAT_40023808": {
                    "": 1,
                    "config_value": 1,
                    "constant": 1,
                    "data": 1,
                    "data_variable": 1,
                    "gpio_base_addr": 1,
                    "hal_rcc_get_hclk_freq_result": 1,
                    "hclk_value": 1,
                    "input_val": 1,
                    "input_value": 9,
                    "parameter_a": 1,
                    "reg_value": 1,
                    "register_value": 3,
                    "some_value": 2,
                    "value": 1
                },
                "uVar1": {
                    "adjusted_freq": 2,
                    "adjusted_hclk_freq": 1,
                    "clock_frequency": 2,
                    "clock_speed": 1,
                    "frequency": 3,
                    "hclk_freq": 12,
                    "hclk_frequency": 6
                }
            },
            "called": [
                "FUN_080025e0"
            ],
            "calling": [
                "FUN_080029c8"
            ],
            "code": "\n\n\nuint get_adjusted_hclk_freq_080025ec(void)\n\n{\n  uint hclk_freq;\n  \n  hclk_freq = get_hclk_freq();\n  return hclk_freq >> (&DAT_08005e0c)[(uint)(_DAT_40023808 << 0x13) >> 0x1d];\n}\n\n",
            "current_name": "get_adjusted_hclk_freq_080025ec",
            "entrypoint": "0x080025ec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080025ec": "get_adjusted_hclk_freq_080025ec",
                "HAL_RCC_GetHCLKFreq": "get_hclk_freq",
                "uVar1": "hclk_freq"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800260c": {
            "additional_data": {
                "DAT_08005e0c": {
                    "dat_arr": 1,
                    "data_arr": 1,
                    "frequency_shift_table": 1,
                    "frequency_table": 1,
                    "hclk_freq_offset": 1,
                    "shift_amount": 1,
                    "shift_array": 1,
                    "shift_table": 2,
                    "shift_value": 1,
                    "shift_values": 2
                },
                "FUN_080025e0": {
                    "get_hclk_config": 1,
                    "get_system_clock_frequency": 1
                },
                "FUN_0800260c": {
                    "calculate_adjusted_frequency": 1,
                    "calculate_hclk_frequency": 1,
                    "get_adjusted_clock_frequency": 3,
                    "get_adjusted_frequency": 1,
                    "get_adjusted_hclk_freq": 19,
                    "get_adjusted_hclk_frequency": 1,
                    "get_clock_frequency": 1,
                    "get_hclk_frequency": 4
                },
                "HAL_RCC_GetHCLKFreq": {
                    "get_clock_frequency": 1,
                    "get_current_clock_frequency": 1,
                    "get_current_hclk_freq": 3,
                    "get_hclk": 1,
                    "get_hclk_freq": 13,
                    "get_hclk_frequency": 1
                },
                "_DAT_40023808": {
                    "clock_register": 1,
                    "dat_var": 1,
                    "data": 1,
                    "data_reg": 1,
                    "data_val": 1,
                    "input_data": 1,
                    "input_value": 10,
                    "param": 1,
                    "parameter1": 2,
                    "rcc_config_value": 1,
                    "register_value": 1,
                    "shift_param": 1,
                    "shift_value": 1,
                    "source_value": 1
                },
                "uVar1": {
                    "clock_frequency": 3,
                    "frequency": 2,
                    "hclk_freq": 15,
                    "hclk_frequency": 2,
                    "original_hclk_freq": 1
                }
            },
            "called": [
                "FUN_080025e0"
            ],
            "calling": [
                "FUN_080029c8"
            ],
            "code": "\n\n\nuint get_adjusted_hclk_freq_0800260c(void)\n\n{\n  uint hclk_freq;\n  \n  hclk_freq = get_hclk_freq();\n  return hclk_freq >> (&DAT_08005e0c)[(uint)(_DAT_40023808 << 0x10) >> 0x1d];\n}\n\n",
            "current_name": "get_adjusted_hclk_freq_0800260c",
            "entrypoint": "0x0800260c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800260c": "get_adjusted_hclk_freq_0800260c",
                "HAL_RCC_GetHCLKFreq": "get_hclk_freq",
                "uVar1": "hclk_freq"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800262c": {
            "additional_data": {
                "0x100": {
                    "alarm_a_event": 1
                },
                "0x1000": {
                    "alarm_b_event": 1
                },
                "0x200": {
                    "alarm_a_callback": 1
                },
                "0x2000": {
                    "alarm_b_callback": 1
                },
                "0xfffffd7f": {
                    "alarm_b_flag_mask": 1
                },
                "0xfffffe7f": {
                    "alarm_a_flag_mask": 1
                },
                "FUN_0800262c": {
                    "check_alarm_events": 1,
                    "check_and_handle_alarm_events": 1,
                    "check_and_handle_alarms": 1,
                    "handle_alarm_event": 1,
                    "handle_alarm_events": 5,
                    "handle_alarms": 1,
                    "handle_rtc_alarm_events": 1,
                    "handle_rtc_alarms": 2,
                    "initialize_alarm": 1,
                    "perform_alarm_operations": 1,
                    "process_alarm": 1,
                    "process_alarm_callbacks": 1,
                    "process_alarm_events": 2,
                    "process_rtc_alarm_events": 1,
                    "set_alarm": 1,
                    "update_alarm_configuration": 2,
                    "update_alarm_flags": 1,
                    "update_alarm_settings": 4,
                    "update_alarm_status": 2,
                    "update_rtc_alarm": 1
                },
                "HAL_RTCEx_AlarmBEventCallback": {
                    "handle_alarm_b": 1,
                    "handle_alarm_b_callback": 8,
                    "handle_alarm_b_event": 20,
                    "handle_rtc_alarm_b_event": 1
                },
                "HAL_RTC_AlarmAEventCallback": {
                    "handle_alarm_a": 1,
                    "handle_alarm_a_callback": 8,
                    "handle_alarm_a_event": 20,
                    "handle_rtc_alarm_a_event": 1
                },
                "PTR_0800268c": {
                    "function_ptr2": 1
                },
                "PTR_08003594": {
                    "function_ptr1": 1
                },
                "_DAT_40013c14": {
                    "address": 1,
                    "control_register": 1,
                    "device_status": 1,
                    "interrupt_flag": 2,
                    "some_value": 1,
                    "status_register": 3,
                    "uart_flag": 1
                },
                "param_1": {
                    "alarm_config": 4,
                    "alarm_data": 10,
                    "alarm_param": 1,
                    "alarm_params": 2,
                    "alarm_pointer": 1,
                    "alarm_ptr": 4,
                    "alarm_settings": 4,
                    "alarm_status": 1,
                    "input_params": 1,
                    "rtc_config": 1,
                    "settings": 1,
                    "status": 1
                },
                "undefined": {
                    "alarm_flag": 1
                }
            },
            "called": [
                "FUN_08003594",
                "FUN_0800268c"
            ],
            "calling": [],
            "code": "\n\n\nvoid handle_rtc_alarm_events_0800262c(int *alarm_data)\n\n{\n  if (((*(uint *)(*alarm_data + 0xc) & 0x100) != 0) && ((*(uint *)(*alarm_data + 8) & 0x1000) != 0)) {\n    handle_alarm_a_event();\n    *(uint *)(*alarm_data + 0xc) = *(uint *)(*alarm_data + 0xc) & 0xff | 0xfffffe7f;\n  }\n  if (((*(uint *)(*alarm_data + 0xc) & 0x200) != 0) && ((*(uint *)(*alarm_data + 8) & 0x2000) != 0)) {\n    handle_alarm_b_event(alarm_data);\n    *(uint *)(*alarm_data + 0xc) = *(uint *)(*alarm_data + 0xc) & 0xff | 0xfffffd7f;\n  }\n  _DAT_40013c14 = 0x20000;\n  *(alarm_flag *)((int)alarm_data + 0x1d) = 1;\n  return;\n}\n\n",
            "current_name": "handle_rtc_alarm_events_0800262c",
            "entrypoint": "0x0800262c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800262c": "handle_rtc_alarm_events_0800262c",
                "HAL_RTCEx_AlarmBEventCallback": "handle_alarm_b_event",
                "HAL_RTC_AlarmAEventCallback": "handle_alarm_a_event",
                "param_1": "alarm_data",
                "undefined": "alarm_flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800268c": {
            "called": [],
            "calling": [
                "FUN_0800262c"
            ],
            "code": "\nvoid FUNC_0800268c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800268c",
            "entrypoint": "0x0800268c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800268c": "FUNC_0800268c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800268e": {
            "additional_data": {
                "0x1111": {
                    "condition_1": 1
                },
                "0x39": {
                    "status_flag": 1
                },
                "0x444": {
                    "condition_2": 1
                },
                "0xfffffffe": {
                    "bit_mask": 1
                },
                "FUN_0800268e": {
                    "deinit_pwm": 9,
                    "deinit_pwm_tim": 4,
                    "deinit_pwm_timer": 3,
                    "deinitialize_pwm": 6,
                    "deinitialize_pwm_timer": 1,
                    "deinitialize_pwm_timers": 1,
                    "disable_pwm_signal": 1,
                    "initialize_pwm": 1,
                    "pwm_deinitialize": 1,
                    "pwm_parameter_init": 1,
                    "reset_and_deinit_pwm": 1,
                    "stop_pwm_output": 1,
                    "update_pwm_gpio_init": 1
                },
                "HAL_TIM_PWM_MspDeInit": {
                    "deinit_hal_tim_pwm": 2,
                    "deinit_pwm_controller": 1,
                    "deinit_pwm_hal": 1,
                    "deinit_pwm_msp": 2,
                    "deinit_tim_pwm": 3,
                    "deinitialize_pwm": 3,
                    "deinitialize_pwm_gpio": 1,
                    "deinitialize_pwm_peripheral": 1,
                    "deinitialize_pwm_peripherals": 1,
                    "deinitialize_tim_pwm": 4,
                    "hal_deinit_pwm_timers": 1
                },
                "param_1": {
                    "config": 1,
                    "input_data": 1,
                    "input_params": 3,
                    "p_param": 5,
                    "p_param_1": 1,
                    "p_params": 1,
                    "p_pwm": 2,
                    "p_pwm_config": 2,
                    "p_pwm_param": 1,
                    "p_pwm_params": 1,
                    "param": 4,
                    "parameter": 2,
                    "params": 1,
                    "pointer": 1,
                    "pwm_params": 1,
                    "pwm_timer": 1,
                    "timer": 1,
                    "timer_handle": 1,
                    "timer_ptr": 1
                },
                "puVar1": {
                    "data": 1,
                    "data_ptr": 1,
                    "p_buf": 1,
                    "p_data": 2,
                    "p_ptr1": 1,
                    "p_pwm": 1,
                    "p_pwm_data": 2,
                    "p_pwm_settings": 1,
                    "p_timer_reg": 1,
                    "p_value": 2,
                    "p_var1": 2,
                    "param_ptr": 2,
                    "pointer": 2,
                    "pointer_1": 1,
                    "ptr": 3,
                    "ptr_input_params": 1,
                    "ptr_p_param": 1,
                    "ptr_param": 1,
                    "temp_ptr": 1,
                    "timer": 1,
                    "timer_config": 1,
                    "timer_data": 1,
                    "timer_value": 1
                }
            },
            "called": [
                "FUN_0800340c"
            ],
            "calling": [
                "FUN_08003414"
            ],
            "code": "\nvoid deinit_pwm_tim_0800268e(uint **p_param)\n\n{\n  uint *ptr;\n  \n  *(undefined *)((int)p_param + 0x39) = 2;\n  ptr = *p_param;\n  if ((ptr[8] & 0x1111) == 0) {\n    if ((ptr[8] & 0x444) == 0) {\n      *ptr = *ptr & 0xfffffffe;\n    }\n  }\n  deinitialize_tim_pwm(p_param);\n  *(undefined *)((int)p_param + 0x39) = 0;\n  *(undefined *)(p_param + 0xe) = 0;\n  return;\n}\n\n",
            "current_name": "deinit_pwm_tim_0800268e",
            "entrypoint": "0x0800268e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800268e": "deinit_pwm_tim_0800268e",
                "HAL_TIM_PWM_MspDeInit": "deinitialize_tim_pwm",
                "param_1": "p_param",
                "puVar1": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080026c8": {
            "called": [],
            "calling": [
                "FUN_080026ce"
            ],
            "code": "\nvoid FUNC_080026c8(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080026c8",
            "entrypoint": "0x080026c8",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080026c8": "FUNC_080026c8"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080026ca": {
            "called": [],
            "calling": [
                "FUN_080026ce"
            ],
            "code": "\nvoid FUNC_080026ca(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080026ca",
            "entrypoint": "0x080026ca",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080026ca": "FUNC_080026ca"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080026cc": {
            "called": [],
            "calling": [
                "FUN_080026ce"
            ],
            "code": "\nvoid FUNC_080026cc(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080026cc",
            "entrypoint": "0x080026cc",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080026cc": "FUNC_080026cc"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080026ce": {
            "additional_data": {
                "0x10": {
                    "status_register": 2
                },
                "0x18": {
                    "configuration_register": 1
                },
                "0x1c": {
                    "interrupt_mask_register": 1
                },
                "0xc": {
                    "control_register": 1,
                    "enable_register": 1
                },
                "0xffffff7f": {
                    "interrupt_flag_value6": 1,
                    "status_flag_break": 1
                },
                "0xffffffbf": {
                    "interrupt_flag_value7": 1,
                    "status_flag_trigger": 1
                },
                "0xffffffdf": {
                    "interrupt_flag_value8": 1,
                    "status_flag_commutation": 1
                },
                "0xffffffef": {
                    "interrupt_flag_value4": 1,
                    "status_flag_8": 1
                },
                "0xfffffff7": {
                    "interrupt_flag_value3": 1,
                    "status_flag_4": 1
                },
                "0xfffffffb": {
                    "interrupt_flag_value2": 1,
                    "status_flag_2": 1
                },
                "0xfffffffd": {
                    "interrupt_flag_value1": 1,
                    "status_flag_1": 1
                },
                "0xfffffffe": {
                    "interrupt_flag_value5": 1,
                    "status_flag_period_elapsed": 1
                },
                "1": {
                    "status_set": 1
                },
                "2": {
                    "status2_set": 1
                },
                "4": {
                    "status4_set": 1
                },
                "6": {
                    "status_offset": 1
                },
                "8": {
                    "status8_set": 1
                },
                "FUNC_080026c8": {
                    "hal_tim_trigger_callback": 1
                },
                "FUNC_080026ca": {
                    "hal_tim_ex_break_callback": 1
                },
                "FUNC_080026cc": {
                    "hal_tim_pwm_pulse_finished_callback": 1
                },
                "FUNC_0800293c": {
                    "hal_tim_oc_delay_elapsed_callback": 1
                },
                "FUNC_0800293e": {
                    "hal_tim_ex_commutation_callback": 1
                },
                "FUN_080026ce": {
                    "callback_handler": 1,
                    "handle_callback": 1,
                    "handle_interrupt": 1,
                    "handle_tim_callbacks": 1,
                    "handle_tim_events": 3,
                    "handle_tim_interrupts": 1,
                    "handle_timer_interrupt": 2,
                    "handle_timers": 6,
                    "process_callback": 1,
                    "process_callbacks": 3,
                    "process_interrupt": 1,
                    "process_tim_callback": 1,
                    "process_timers": 7,
                    "timers_callback": 1,
                    "trigger_callbacks": 1
                },
                "FUN_08003754": {
                    "hal_tim_ic_capture_callback": 1
                },
                "FUN_0800376e": {
                    "hal_tim_period_elapsed_callback": 1
                },
                "HAL_TIMEx_BreakCallback": {
                    "break_callback": 1,
                    "handle_break": 7,
                    "handle_break_callback": 9,
                    "handle_ex_break_callback": 2,
                    "handle_tim_ex_break_callback": 1
                },
                "HAL_TIMEx_CommutationCallback": {
                    "commutation_callback": 1,
                    "handle_commutation": 7,
                    "handle_commutation_callback": 9,
                    "handle_ex_commutation_callback": 2,
                    "handle_tim_ex_commutation_callback": 1
                },
                "HAL_TIM_IC_CaptureCallback": {
                    "handle_capture_callback": 3,
                    "handle_ic_capture": 7,
                    "handle_ic_capture_callback": 8,
                    "handle_tim_ic_capture_callback": 1,
                    "ic_capture_callback": 1
                },
                "HAL_TIM_OC_DelayElapsedCallback": {
                    "handle_delay_elapsed_callback": 3,
                    "handle_oc_delay_elapsed": 7,
                    "handle_oc_delay_elapsed_callback": 8,
                    "handle_tim_oc_delay_elapsed_callback": 1,
                    "oc_delay_elapsed_callback": 1
                },
                "HAL_TIM_PWM_PulseFinishedCallback": {
                    "handle_pulse_finished_callback": 3,
                    "handle_pwm_pulse_finished": 7,
                    "handle_pwm_pulse_finished_callback": 8,
                    "handle_tim_pwm_pulse_finished_callback": 1,
                    "pwm_pulse_finished_callback": 1
                },
                "HAL_TIM_PeriodElapsedCallback": {
                    "handle_period_elapsed": 7,
                    "handle_period_elapsed_callback": 11,
                    "handle_tim_period_elapsed_callback": 1,
                    "period_elapsed_callback": 1
                },
                "HAL_TIM_TriggerCallback": {
                    "handle_tim_trigger_callback": 1,
                    "handle_trigger": 7,
                    "handle_trigger_callback": 11,
                    "trigger_callback": 1
                },
                "iVar1": {
                    "current_timer": 4,
                    "current_timer_data": 1,
                    "data": 1,
                    "data_value": 1,
                    "temp_var1": 1,
                    "tim_reg_value": 1,
                    "tim_value": 1,
                    "timer": 1,
                    "timer_data": 3,
                    "timer_register": 1,
                    "timer_value": 10,
                    "timer_var": 1,
                    "value": 3
                },
                "param_1": {
                    "callback_data": 5,
                    "interrupt_data": 1,
                    "tim_handle": 2,
                    "tim_param": 1,
                    "timer": 5,
                    "timer_array": 2,
                    "timer_data": 7,
                    "timer_info": 1,
                    "timer_params": 2,
                    "timers": 3,
                    "timers_array": 1
                }
            },
            "called": [
                "FUN_0800293c",
                "FUN_080026cc",
                "FUN_08003754",
                "FUN_0800376e",
                "FUN_080026ca",
                "FUN_080026c8",
                "FUN_0800293e"
            ],
            "calling": [
                "FUN_0800377c"
            ],
            "code": "\nvoid process_timers_080026ce(int *timer_data)\n\n{\n  int timer_value;\n  \n  timer_value = *timer_data;\n  if (((*(uint *)(timer_value + 0x10) & 2) != 0) && ((*(uint *)(timer_value + 0xc) & 2) != 0)) {\n    *(undefined4 *)(timer_value + 0x10) = 0xfffffffd;\n    *(undefined *)(timer_data + 6) = 1;\n    if ((*(uint *)(*timer_data + 0x18) & 3) == 0) {\n      handle_oc_delay_elapsed_callback();\n      handle_pwm_pulse_finished_callback(timer_data);\n    }\n    else {\n      handle_ic_capture_callback();\n    }\n    *(undefined *)(timer_data + 6) = 0;\n  }\n  timer_value = *timer_data;\n  if (((*(uint *)(timer_value + 0x10) & 4) != 0) && ((*(uint *)(timer_value + 0xc) & 4) != 0)) {\n    *(undefined4 *)(timer_value + 0x10) = 0xfffffffb;\n    *(undefined *)(timer_data + 6) = 2;\n    if ((*(uint *)(*timer_data + 0x18) & 0x300) == 0) {\n      handle_oc_delay_elapsed_callback(timer_data);\n      handle_pwm_pulse_finished_callback(timer_data);\n    }\n    else {\n      handle_ic_capture_callback(timer_data);\n    }\n    *(undefined *)(timer_data + 6) = 0;\n  }\n  timer_value = *timer_data;\n  if (((*(uint *)(timer_value + 0x10) & 8) != 0) && ((*(uint *)(timer_value + 0xc) & 8) != 0)) {\n    *(undefined4 *)(timer_value + 0x10) = 0xfffffff7;\n    *(undefined *)(timer_data + 6) = 4;\n    if ((*(uint *)(*timer_data + 0x1c) & 3) == 0) {\n      handle_oc_delay_elapsed_callback(timer_data);\n      handle_pwm_pulse_finished_callback(timer_data);\n    }\n    else {\n      handle_ic_capture_callback(timer_data);\n    }\n    *(undefined *)(timer_data + 6) = 0;\n  }\n  timer_value = *timer_data;\n  if (((*(uint *)(timer_value + 0x10) & 0x10) != 0) && ((*(uint *)(timer_value + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(timer_value + 0x10) = 0xffffffef;\n    *(undefined *)(timer_data + 6) = 8;\n    if ((*(uint *)(*timer_data + 0x1c) & 0x300) == 0) {\n      handle_oc_delay_elapsed_callback(timer_data);\n      handle_pwm_pulse_finished_callback(timer_data);\n    }\n    else {\n      handle_ic_capture_callback(timer_data);\n    }\n    *(undefined *)(timer_data + 6) = 0;\n  }\n  timer_value = *timer_data;\n  if (((*(uint *)(timer_value + 0x10) & 1) != 0) && ((*(uint *)(timer_value + 0xc) & 1) != 0)) {\n    *(undefined4 *)(timer_value + 0x10) = 0xfffffffe;\n    handle_period_elapsed_callback(timer_data);\n  }\n  timer_value = *timer_data;\n  if (((*(uint *)(timer_value + 0x10) & 0x80) != 0) && ((*(uint *)(timer_value + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(timer_value + 0x10) = 0xffffff7f;\n    handle_break_callback(timer_data);\n  }\n  timer_value = *timer_data;\n  if (((*(uint *)(timer_value + 0x10) & 0x40) != 0) && ((*(uint *)(timer_value + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(timer_value + 0x10) = 0xffffffbf;\n    handle_trigger_callback(timer_data);\n  }\n  timer_value = *timer_data;\n  if (((*(uint *)(timer_value + 0x10) & 0x20) != 0) && ((*(uint *)(timer_value + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(timer_value + 0x10) = 0xffffffdf;\n    handle_commutation_callback(timer_data);\n  }\n  return;\n}\n\n",
            "current_name": "process_timers_080026ce",
            "entrypoint": "0x080026ce",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080026ce": "process_timers_080026ce",
                "HAL_TIMEx_BreakCallback": "handle_break_callback",
                "HAL_TIMEx_CommutationCallback": "handle_commutation_callback",
                "HAL_TIM_IC_CaptureCallback": "handle_ic_capture_callback",
                "HAL_TIM_OC_DelayElapsedCallback": "handle_oc_delay_elapsed_callback",
                "HAL_TIM_PWM_PulseFinishedCallback": "handle_pwm_pulse_finished_callback",
                "HAL_TIM_PeriodElapsedCallback": "handle_period_elapsed_callback",
                "HAL_TIM_TriggerCallback": "handle_trigger_callback",
                "iVar1": "timer_value",
                "param_1": "timer_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002848": {
            "additional_data": {
                "FUN_08002848": {
                    "update_bit": 11,
                    "update_bit_array": 1,
                    "update_bit_field": 1,
                    "update_bit_value": 6,
                    "update_bit_with_param": 1,
                    "update_bitfield": 1,
                    "update_bits": 6,
                    "update_bitwise_value": 2,
                    "update_register": 1,
                    "update_value_at_bit_position": 1
                },
                "param_1": {
                    "address": 1,
                    "base_addr": 1,
                    "base_address": 19,
                    "bit_array": 1,
                    "bitfield": 1,
                    "data": 5,
                    "obj": 1,
                    "parameter1": 1,
                    "register_ptr": 1
                },
                "param_2": {
                    "bit_index": 6,
                    "bit_offset": 1,
                    "bit_pos": 2,
                    "bit_position": 22
                },
                "param_3": {
                    "bit_value": 9,
                    "new_data": 1,
                    "new_value": 16,
                    "value": 5
                }
            },
            "called": [],
            "calling": [
                "FUN_08002864"
            ],
            "code": "\nvoid update_value_at_bit_position_08002848(int base_address,uint bit_position,int new_value)\n\n{\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & ~(1 << (bit_position & 0xff));\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) | new_value << (bit_position & 0xff);\n  return;\n}\n\n",
            "current_name": "update_value_at_bit_position_08002848",
            "entrypoint": "0x08002848",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002848": "update_value_at_bit_position_08002848",
                "param_1": "base_address",
                "param_2": "bit_position",
                "param_3": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002864": {
            "additional_data": {
                "FUN_08002864": {
                    "configure_c_cx_channel": 1,
                    "configure_tim_c_cx_channel": 12,
                    "configure_tim_channel": 5,
                    "configure_timer_channel": 6,
                    "initialize_ccx_channel": 1,
                    "initialize_tim_c_cx_channel": 1,
                    "initialize_tim_channel": 2,
                    "set_tim_c_cx_channel_cmd": 1,
                    "toggle_timer_channel_and_clear_flags": 1
                },
                "PTR_DAT_08004848": {
                    "configure_tim_c_cx_channel_subfunction": 1
                },
                "TIM_CCxChannelCmd": {
                    "configure_c_cx_channel_command": 1,
                    "set_channel_command": 1,
                    "set_timer_channel_cmd": 1
                },
                "bVar1": {
                    "is_address_valid": 2,
                    "is_base_address_valid": 1,
                    "is_correct_address": 1,
                    "is_special_address": 2,
                    "is_special_case": 2,
                    "is_special_channel": 4,
                    "is_special_register": 1,
                    "is_specific_tim": 1,
                    "is_timer_base": 1,
                    "is_valid": 4,
                    "is_valid_address": 5,
                    "is_valid_channel": 5,
                    "is_valid_config": 1,
                    "is_valid_configuration": 1
                },
                "param_1": {
                    "channel": 1,
                    "channel_config": 1,
                    "channel_pointer": 1,
                    "channel_ptr": 7,
                    "channel_settings": 1,
                    "config": 2,
                    "config_array": 1,
                    "config_data": 1,
                    "config_ptr": 2,
                    "input_array": 1,
                    "tim_channel": 1,
                    "tim_channel_ptr": 1,
                    "tim_registers": 1,
                    "timer": 1,
                    "timer_channel": 3,
                    "timer_channel_config": 1,
                    "timer_config": 3,
                    "timer_configuration": 1,
                    "timer_registers": 1
                },
                "param_2": {
                    "channel": 1,
                    "channel_cmd": 3,
                    "channel_command": 2,
                    "channel_config": 2,
                    "channel_mode": 3,
                    "channel_num": 2,
                    "channel_number": 5,
                    "channel_param": 3,
                    "channel_value": 1,
                    "command": 3,
                    "config_value": 1,
                    "mode": 1,
                    "param_value": 3,
                    "value": 1
                },
                "ptr1": {
                    "channel": 1
                },
                "ptr2": {
                    "register_address": 1
                },
                "ptr3": {
                    "register_value": 1
                },
                "puVar2": {
                    "base_address": 4,
                    "channel": 1,
                    "channel_address": 1,
                    "channel_data": 4,
                    "channel_pointer": 2,
                    "channel_ptr": 1,
                    "channel_ptr_value": 2,
                    "config_ptr": 2,
                    "current_address": 1,
                    "current_register": 1,
                    "register_ptr": 1,
                    "tim_ptr": 1,
                    "tim_reg": 1,
                    "tim_register_value": 1,
                    "timer_base": 1,
                    "timer_base_address": 1,
                    "timer_channel_data": 1,
                    "timer_channel_ptr": 2,
                    "timer_register": 1,
                    "timer_registers": 2
                }
            },
            "called": [
                "FUN_08002848"
            ],
            "calling": [
                "FUN_08003414"
            ],
            "code": "\nundefined4 configure_tim_c_cx_channel_08002864(uint **channel_ptr,undefined4 channel_number)\n\n{\n  bool is_valid_channel;\n  uint *base_address;\n  \n  set_timer_channel_cmd(*channel_ptr,channel_number,0);\n  base_address = *channel_ptr;\n  if (base_address == (uint *)0x40010000) {\n    is_valid_channel = true;\n  }\n  else if (base_address == (uint *)0x40010400) {\n    is_valid_channel = true;\n  }\n  else {\n    is_valid_channel = false;\n  }\n  if (((is_valid_channel) && ((base_address[8] & 0x1111) == 0)) && ((base_address[8] & 0x444) == 0)) {\n    base_address[0x11] = base_address[0x11] & 0xffff7fff;\n  }\n  base_address = *channel_ptr;\n  if (((base_address[8] & 0x1111) == 0) && ((base_address[8] & 0x444) == 0)) {\n    *base_address = *base_address & 0xfffffffe;\n  }\n  *(undefined *)((int)channel_ptr + 0x39) = 1;\n  return 0;\n}\n\n",
            "current_name": "configure_tim_c_cx_channel_08002864",
            "entrypoint": "0x08002864",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002864": "configure_tim_c_cx_channel_08002864",
                "TIM_CCxChannelCmd": "set_timer_channel_cmd",
                "bVar1": "is_valid_channel",
                "param_1": "channel_ptr",
                "param_2": "channel_number",
                "puVar2": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080028d4": {
            "additional_data": {
                "FUN_080028d4": {
                    "apply_bitmask": 2,
                    "set_bit_in_value": 1,
                    "update_bit": 1,
                    "update_bit_fields": 1,
                    "update_bit_range": 1,
                    "update_bit_value": 2,
                    "update_bitfield": 1,
                    "update_bits": 5,
                    "update_bitwise_flags": 1,
                    "update_bitwise_operators": 1,
                    "update_bitwise_value": 5,
                    "update_data": 1,
                    "update_field_value": 1,
                    "update_param_value": 2,
                    "update_parameter_value": 1,
                    "update_register": 2,
                    "update_value": 3
                },
                "param_1": {
                    "base_address": 18,
                    "data": 1,
                    "data_address": 2,
                    "data_ptr": 1,
                    "field_address": 1,
                    "object_address": 2,
                    "param": 1,
                    "register_address": 2,
                    "struct_address": 1,
                    "struct_base_address": 1,
                    "value_address": 1
                },
                "param_2": {
                    "bit_index": 2,
                    "bit_offset": 10,
                    "bit_position": 16,
                    "position": 1,
                    "shift_bits": 1,
                    "shift_value": 1
                },
                "param_3": {
                    "bit_value": 3,
                    "data": 2,
                    "field_value": 1,
                    "insert_value": 1,
                    "new_bits": 1,
                    "new_data": 1,
                    "new_value": 16,
                    "value": 5,
                    "value_to_set": 1
                },
                "uint": {
                    "unsigned_integer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080028f0"
            ],
            "code": "\nvoid update_bitwise_value_080028d4(int base_address,unsigned_integer bit_position,int new_value)\n\n{\n  *(unsigned_integer *)(base_address + 0x20) = *(unsigned_integer *)(base_address + 0x20) & ~(4 << (bit_position & 0xff));\n  *(unsigned_integer *)(base_address + 0x20) = *(unsigned_integer *)(base_address + 0x20) | new_value << (bit_position & 0xff);\n  return;\n}\n\n",
            "current_name": "update_bitwise_value_080028d4",
            "entrypoint": "0x080028d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080028d4": "update_bitwise_value_080028d4",
                "param_1": "base_address",
                "param_2": "bit_position",
                "param_3": "new_value",
                "uint": "unsigned_integer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080028f0": {
            "additional_data": {
                "0x1111": {
                    "bit_mask_1": 1,
                    "mask_1": 1
                },
                "0x444": {
                    "bit_mask_2": 1,
                    "mask_2": 1
                },
                "FUN_080028d4": {
                    "configure_channel": 1,
                    "configure_tim_c_cx_n_channel_cmd": 2,
                    "configure_tim_channel": 1,
                    "configure_timer": 1,
                    "configure_timer_channel": 1,
                    "set_tim_c_cx_n_channel": 1,
                    "update_tim_c_cx_n_channel_cmd": 1
                },
                "FUN_080028f0": {
                    "configure_and_reset_timer": 1,
                    "configure_tim_c_cx_n_channel": 13,
                    "configure_tim_cc_channel": 1,
                    "configure_tim_channel": 1,
                    "configure_timc_cx_n_channel": 1,
                    "configure_timer_channel": 1,
                    "disable_tim_c_cx_n_channel": 1,
                    "disable_timer_channel": 1,
                    "initialize_tim_c_cx_n_channel": 2,
                    "initialize_tim_channel": 1,
                    "initialize_timer_channel": 2,
                    "initialize_timers": 2,
                    "reverse_tim_c_cx_n_channel_cmd": 1,
                    "set_tim_c_cx_n_channel_cmd": 1,
                    "set_timer_channel": 1
                },
                "TIM_CCxNChannelCmd": {
                    "configure_channel": 1,
                    "set_tim_c_cx_n_channel_command": 1
                },
                "param_1": {
                    "channel": 3,
                    "channel_address": 1,
                    "channel_config": 2,
                    "channel_ptr": 3,
                    "channel_settings": 1,
                    "config_ptr": 1,
                    "input_data": 1,
                    "param_1": 3,
                    "ptr_to_ptr": 1,
                    "tim_ccxn_channel": 1,
                    "tim_channel": 1,
                    "tim_channel_ptr": 1,
                    "timer": 2,
                    "timer_channel": 4,
                    "timer_channels": 1,
                    "timer_config_ptr": 1,
                    "timer_data": 1,
                    "timer_pointer": 1,
                    "timer_registers": 1,
                    "timers": 1
                },
                "param_2": {
                    "channel": 4,
                    "channel_cmd": 2,
                    "channel_command": 1,
                    "channel_mode": 1,
                    "channel_num": 1,
                    "channel_number": 5,
                    "channel_param": 1,
                    "channel_value": 3,
                    "command": 2,
                    "param": 3,
                    "param_2": 3,
                    "param_value": 3,
                    "timer_settings": 1,
                    "value": 1
                },
                "param_3": {
                    "param_3": 5,
                    "unknown_param": 1,
                    "unused_param": 1,
                    "value": 1
                },
                "puVar1": {
                    "channel": 2,
                    "channel_data": 6,
                    "channel_pointer": 1,
                    "channel_ptr": 1,
                    "channel_ptr_data": 1,
                    "config_ptr": 2,
                    "current_param": 1,
                    "pointer": 1,
                    "ptr": 1,
                    "register_pointer": 1,
                    "registers": 1,
                    "tim_array": 1,
                    "tim_ccxn_channel": 1,
                    "tim_channel_ptr": 1,
                    "timer_channel_ptr": 2,
                    "timer_data": 4,
                    "timer_data_pointer": 1,
                    "timer_info_ptr": 1,
                    "timer_ptr": 1,
                    "timer_registers": 1
                }
            },
            "called": [
                "FUN_080028d4"
            ],
            "calling": [
                "FUN_08003414"
            ],
            "code": "\nundefined4 configure_tim_c_cx_n_channel_080028f0(uint **timer_channel,undefined4 channel_number)\n\n{\n  uint *channel_data;\n  \n  configure_channel(*timer_channel,channel_number,0);\n  channel_data = *timer_channel;\n  if (((channel_data[8] & 0x1111) == 0) && ((channel_data[8] & 0x444) == 0)) {\n    channel_data[0x11] = channel_data[0x11] & 0xffff7fff;\n  }\n  channel_data = *timer_channel;\n  if (((channel_data[8] & 0x1111) == 0) && ((channel_data[8] & 0x444) == 0)) {\n    *channel_data = *channel_data & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "current_name": "configure_tim_c_cx_n_channel_080028f0",
            "entrypoint": "0x080028f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080028f0": "configure_tim_c_cx_n_channel_080028f0",
                "TIM_CCxNChannelCmd": "configure_channel",
                "param_1": "timer_channel",
                "param_2": "channel_number",
                "puVar1": "channel_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800293c": {
            "called": [],
            "calling": [
                "FUN_080026ce"
            ],
            "code": "\nvoid FUNC_0800293c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800293c",
            "entrypoint": "0x0800293c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800293c": "FUNC_0800293c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800293e": {
            "called": [],
            "calling": [
                "FUN_080026ce"
            ],
            "code": "\nvoid FUNC_0800293e(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800293e",
            "entrypoint": "0x0800293e",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800293e": "FUNC_0800293e"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002940": {
            "additional_data": {
                "0x14": {
                    "address_offset2": 1,
                    "bitmask2_offset": 1,
                    "element2_offset": 1,
                    "flag2_offset": 1,
                    "flag_address2": 1,
                    "mask2": 2,
                    "mask_value2": 1
                },
                "0x20": {
                    "character": 1,
                    "space_byte": 1
                },
                "0x3a": {
                    "character_offset": 1,
                    "flag": 1
                },
                "0xc": {
                    "address_offset": 1,
                    "bitmask1_offset": 1,
                    "element1_offset": 1,
                    "flag1_offset": 1,
                    "flag_address1": 1,
                    "mask1": 2,
                    "mask_value1": 1
                },
                "0xfffffedf": {
                    "bitmask1": 1,
                    "clear_bit_mask": 2
                },
                "0xfffffffe": {
                    "bitmask2": 1,
                    "clear_bit_mask2": 1,
                    "even_bit_clear_mask": 1
                },
                "FUN_08002940": {
                    "apply_bitwise_operations": 1,
                    "clear_bit_mask": 1,
                    "clear_bit_values": 1,
                    "clear_bitmask_and_set_character": 1,
                    "clear_bits_and_set_flag": 1,
                    "clear_bits_and_set_space": 2,
                    "clear_flags": 6,
                    "clear_flags_and_set_space": 1,
                    "clear_flags_and_set_space_character": 1,
                    "reset_certain_bits": 1,
                    "set_bit_clear_bit": 1,
                    "set_bits_and_value": 1,
                    "set_flags_and_value": 1,
                    "update_data": 2,
                    "update_flags": 1,
                    "update_flags_and_value": 2,
                    "update_flags_and_values": 2,
                    "update_memory": 1,
                    "update_memory_values": 3,
                    "update_values": 1
                },
                "inputArray": {
                    "input_array": 1
                },
                "param_1": {
                    "arg": 1,
                    "array": 1,
                    "data": 2,
                    "data_pointer": 3,
                    "flag_pointer": 1,
                    "flags": 3,
                    "flags_array": 1,
                    "flags_pointer": 1,
                    "input": 2,
                    "input_array": 4,
                    "input_params": 1,
                    "memory_address": 1,
                    "memory_pointer": 2,
                    "memory_ptr": 1,
                    "pointer": 4,
                    "ptr": 1
                },
                "uint": {
                    "unsigned_int": 1
                },
                "undefined": {
                    "undefined_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ffc"
            ],
            "code": "\nvoid clear_flags_and_set_space_character_08002940(int *input_array)\n\n{\n  *(unsigned_int *)(*input_array + 0xc) = *(unsigned_int *)(*input_array + 0xc) & 0xfffffedf;\n  *(unsigned_int *)(*input_array + 0x14) = *(unsigned_int *)(*input_array + 0x14) & 0xfffffffe;\n  *(undefined_value *)((int)input_array + 0x3a) = 0x20;\n  return;\n}\n\n",
            "current_name": "clear_flags_and_set_space_character_08002940",
            "entrypoint": "0x08002940",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002940": "clear_flags_and_set_space_character_08002940",
                "param_1": "input_array",
                "uint": "unsigned_int",
                "undefined": "undefined_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800295c": {
            "additional_data": {
                "FUN_0800295c": {
                    "check_and_update_values": 1,
                    "decode_and_update": 1,
                    "extract_and_update": 1,
                    "extract_data": 1,
                    "extract_data_from_binary": 1,
                    "extract_info": 1,
                    "parse_data": 2,
                    "parse_input": 1,
                    "process_data": 19,
                    "process_input": 1,
                    "process_param": 1,
                    "process_parameter": 1
                },
                "param_1": {
                    "data": 18,
                    "data_array": 4,
                    "data_ptr": 3,
                    "info_ptr": 1,
                    "input": 1,
                    "input_data": 2,
                    "param_array": 1,
                    "parameter": 1
                },
                "pbVar2": {
                    "byte_pointer": 8,
                    "byte_pointer_to_data": 1,
                    "byte_ptr": 17,
                    "current_byte": 3,
                    "data_ptr": 1
                },
                "sVar1": {
                    "count": 8,
                    "counter": 6,
                    "iteration_count": 1,
                    "iterations_remaining": 1,
                    "remaining_count": 2,
                    "remaining_iteration_count": 2,
                    "remaining_iterations": 9,
                    "remaining_loops": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ffc"
            ],
            "code": "\nundefined4 process_data_0800295c(int *data)\n\n{\n  short remaining_iterations;\n  byte *byte_ptr;\n  \n  if (*(char *)((int)data + 0x39) != '!') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    *(uint *)(*data + 4) = *(ushort *)data[8] & 0x1ff;\n    if (data[4] == 0) {\n      data[8] = data[8] + 2;\n    }\n    else {\n      data[8] = data[8] + 1;\n    }\n  }\n  else {\n    byte_ptr = (byte *)data[8];\n    data[8] = (int)(byte_ptr + 1);\n    *(uint *)(*data + 4) = (uint)*byte_ptr;\n  }\n  remaining_iterations = *(short *)((int)data + 0x26) + -1;\n  *(short *)((int)data + 0x26) = remaining_iterations;\n  if (remaining_iterations == 0) {\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffff7f;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_0800295c",
            "entrypoint": "0x0800295c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800295c": "process_data_0800295c",
                "param_1": "data",
                "pbVar2": "byte_ptr",
                "sVar1": "remaining_iterations"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080029c8": {
            "additional_data": {
                "FUN_080025ec": {
                    "calculate_value1": 1
                },
                "FUN_0800260c": {
                    "calculate_value2": 1
                },
                "FUN_080029c8": {
                    "calculate_and_update_clock_config": 1,
                    "calculate_clock_config": 4,
                    "calculate_clock_configuration": 3,
                    "calculate_clock_divider": 1,
                    "calculate_clock_frequency": 11,
                    "calculate_clock_speed": 1,
                    "calculate_clock_value": 3,
                    "calculate_frequency": 2,
                    "calculate_pclk": 2,
                    "calculate_pclk_delta": 1,
                    "set_clock_frequency": 1,
                    "update_clock_settings": 1
                },
                "HAL_RCC_GetPCLK1Freq": {
                    "get_pclk1_freq": 2,
                    "get_pclk1_frequency": 5
                },
                "HAL_RCC_GetPCLK2Freq": {
                    "get_pclk2_freq": 2,
                    "get_pclk2_frequency": 5
                },
                "iVar1": {
                    "pclk1_freq": 16,
                    "pclk1_freq1": 13,
                    "pclk1_frequency": 1,
                    "pclk_freq1": 1
                },
                "iVar10": {
                    "address": 1,
                    "base_addr": 1,
                    "base_address": 8,
                    "clock": 1,
                    "clock_addr": 1,
                    "clock_address": 1,
                    "clock_base_addr": 1,
                    "clock_config_base_address": 1,
                    "clock_param": 1,
                    "config_base_address": 1,
                    "device_address": 1,
                    "hal_rcc": 1,
                    "param1_val5": 1,
                    "param1_value": 2,
                    "param1_value5": 1,
                    "pclk_addr": 1,
                    "ptr": 2,
                    "rcc_base": 1,
                    "rcc_base_addr": 1,
                    "var1": 2
                },
                "iVar2": {
                    "pclk1_freq": 6,
                    "pclk1_freq2": 16,
                    "pclk1_freq_2": 2,
                    "pclk1_frequency2": 1,
                    "pclk2_freq": 5,
                    "pclk_freq2": 1
                },
                "iVar3": {
                    "pclk1_freq": 8,
                    "pclk1_freq2": 2,
                    "pclk1_freq3": 16,
                    "pclk1_freq_2": 1,
                    "pclk1_freq_3": 2,
                    "pclk1_frequency3": 1,
                    "pclk_freq3": 1
                },
                "iVar4": {
                    "pclk1_freq": 6,
                    "pclk1_freq4": 16,
                    "pclk1_freq_4": 2,
                    "pclk1_frequency4": 1,
                    "pclk2_freq": 2,
                    "pclk2_freq2": 2,
                    "pclk2_freq_2": 1,
                    "pclk_freq4": 1
                },
                "iVar5": {
                    "pclk1_freq": 8,
                    "pclk1_freq3": 2,
                    "pclk1_freq5": 16,
                    "pclk1_freq_3": 1,
                    "pclk1_freq_5": 2,
                    "pclk1_frequency5": 1,
                    "pclk_freq5": 1
                },
                "iVar6": {
                    "clock": 1,
                    "clock_div": 1,
                    "clock_multiplier": 1,
                    "clock_param1": 2,
                    "config_value": 2,
                    "param1_1": 4,
                    "param1_val1": 1,
                    "param1_value": 2,
                    "pclk1_freq6": 1,
                    "pclk1_freq_4": 1,
                    "pclk2_freq": 5,
                    "pclk2_freq1": 9
                },
                "iVar7": {
                    "clock": 1,
                    "clock_multiplier2": 1,
                    "clock_param1_2": 1,
                    "clock_param2": 1,
                    "config_value": 1,
                    "config_value2": 1,
                    "param1_1": 3,
                    "param1_1_2": 1,
                    "param1_val2": 1,
                    "param1_value": 1,
                    "param1_value2": 1,
                    "pclk1_freq": 2,
                    "pclk1_freq7": 1,
                    "pclk1_freq_5": 1,
                    "pclk2_freq": 1,
                    "pclk2_freq2": 10,
                    "pclk2_freq_2": 2
                },
                "iVar8": {
                    "clock": 1,
                    "clock_multiplier3": 1,
                    "clock_param1_3": 1,
                    "clock_param3": 1,
                    "config_value": 1,
                    "config_value3": 1,
                    "param1_1": 3,
                    "param1_1_3": 1,
                    "param1_val3": 1,
                    "param1_value": 1,
                    "param1_value3": 1,
                    "pclk1_freq8": 1,
                    "pclk2_freq": 3,
                    "pclk2_freq3": 10,
                    "pclk2_freq_3": 3
                },
                "iVar9": {
                    "clock": 1,
                    "clock_multiplier4": 1,
                    "clock_param1_4": 1,
                    "clock_param4": 1,
                    "config_value": 1,
                    "config_value4": 1,
                    "param1_1": 3,
                    "param1_1_4": 1,
                    "param1_val4": 1,
                    "param1_value": 1,
                    "param1_value4": 1,
                    "pclk1_freq": 2,
                    "pclk1_freq9": 1,
                    "pclk2_freq": 1,
                    "pclk2_freq4": 10,
                    "pclk2_freq_4": 3
                },
                "param_1": {
                    "clock_config": 3,
                    "clock_config_ptr": 1,
                    "clock_parameters": 1,
                    "clock_params": 10,
                    "clock_settings": 2,
                    "config": 4,
                    "config_params": 2,
                    "config_values": 1,
                    "function_params": 1,
                    "input_parameters": 1,
                    "input_params": 4,
                    "input_values": 1
                }
            },
            "called": [
                "FUN_080025ec",
                "FUN_0800260c"
            ],
            "calling": [
                "FUN_08002d72"
            ],
            "code": "\nvoid calculate_clock_frequency_080029c8(int *clock_params)\n\n{\n  int pclk1_freq;\n  int pclk1_freq2;\n  int pclk1_freq3;\n  int pclk1_freq4;\n  int pclk1_freq5;\n  int pclk2_freq1;\n  int pclk2_freq2;\n  int pclk2_freq3;\n  int pclk2_freq4;\n  int base_address;\n  \n  *(uint *)(*clock_params + 0x10) = *(uint *)(*clock_params + 0x10) & 0xffffcfff | clock_params[3];\n  *(uint *)(*clock_params + 0xc) =\n       *(uint *)(*clock_params + 0xc) & 0xffff69f3 | clock_params[2] | clock_params[4] | clock_params[5] | clock_params[7];\n  *(uint *)(*clock_params + 0x14) = *(uint *)(*clock_params + 0x14) & 0xfffffcff | clock_params[6];\n  if (clock_params[7] == 0x8000) {\n    base_address = *clock_params;\n    if ((base_address != 0x40011000) && (base_address != 0x40011400)) {\n      pclk1_freq = get_pclk1_frequency();\n      pclk2_freq1 = clock_params[1];\n      pclk1_freq2 = get_pclk1_frequency();\n      pclk2_freq2 = clock_params[1];\n      pclk1_freq3 = get_pclk1_frequency();\n      pclk2_freq3 = clock_params[1];\n      pclk1_freq4 = get_pclk1_frequency();\n      pclk2_freq4 = clock_params[1];\n      pclk1_freq5 = get_pclk1_frequency();\n      *(uint *)(base_address + 8) =\n           ((uint)((int)((ulonglong)\n                         (((uint)(pclk1_freq4 * 0x19) / (uint)(pclk2_freq4 << 1) +\n                          (int)(((ulonglong)(uint)(pclk1_freq5 * 0x19) /\n                                (ulonglong)(uint)(clock_params[1] << 1)) / 100) * -100) * 8 + 0x32) *\n                         0x51eb851f >> 0x20) << 0x18) >> 0x1d) +\n           ((((uint)(pclk1_freq2 * 0x19) / (uint)(pclk2_freq2 << 1) +\n             (int)(((ulonglong)(uint)(pclk1_freq3 * 0x19) / (ulonglong)(uint)(pclk2_freq3 << 1)) / 100) * -100)\n             * 8 + 0x32) / 100 & 0xf8) * 2 +\n           (int)(((ulonglong)(uint)(pclk1_freq * 0x19) / (ulonglong)(uint)(pclk2_freq1 << 1)) / 100) * 0x10;\n      return;\n    }\n    pclk1_freq = get_pclk2_frequency();\n    pclk2_freq1 = clock_params[1];\n    pclk1_freq2 = get_pclk2_frequency();\n    pclk2_freq2 = clock_params[1];\n    pclk1_freq3 = get_pclk2_frequency();\n    pclk2_freq3 = clock_params[1];\n    pclk1_freq4 = get_pclk2_frequency();\n    pclk2_freq4 = clock_params[1];\n    pclk1_freq5 = get_pclk2_frequency();\n    *(uint *)(base_address + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(pclk1_freq4 * 0x19) / (uint)(pclk2_freq4 << 1) +\n                        (int)(((ulonglong)(uint)(pclk1_freq5 * 0x19) / (ulonglong)(uint)(clock_params[1] << 1))\n                             / 100) * -100) * 8 + 0x32) * 0x51eb851f >> 0x20) << 0x18) >> 0x1d) +\n         ((((uint)(pclk1_freq2 * 0x19) / (uint)(pclk2_freq2 << 1) +\n           (int)(((ulonglong)(uint)(pclk1_freq3 * 0x19) / (ulonglong)(uint)(pclk2_freq3 << 1)) / 100) * -100) *\n           8 + 0x32) / 100 & 0xf8) * 2 +\n         (int)(((ulonglong)(uint)(pclk1_freq * 0x19) / (ulonglong)(uint)(pclk2_freq1 << 1)) / 100) * 0x10;\n    return;\n  }\n  base_address = *clock_params;\n  if ((base_address != 0x40011000) && (base_address != 0x40011400)) {\n    pclk1_freq = get_pclk1_frequency();\n    pclk2_freq1 = clock_params[1];\n    pclk1_freq2 = get_pclk1_frequency();\n    pclk2_freq2 = clock_params[1];\n    pclk1_freq3 = get_pclk1_frequency();\n    pclk2_freq3 = clock_params[1];\n    pclk1_freq4 = get_pclk1_frequency();\n    pclk2_freq4 = clock_params[1];\n    pclk1_freq5 = get_pclk1_frequency();\n    *(uint *)(base_address + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(pclk1_freq4 * 0x19) / (uint)(pclk2_freq4 << 2) +\n                        (int)(((ulonglong)(uint)(pclk1_freq5 * 0x19) / (ulonglong)(uint)(clock_params[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(pclk1_freq2 * 0x19) / (uint)(pclk2_freq2 << 2) +\n           (int)(((ulonglong)(uint)(pclk1_freq3 * 0x19) / (ulonglong)(uint)(pclk2_freq3 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(pclk1_freq * 0x19) / (ulonglong)(uint)(pclk2_freq1 << 2)) / 100) * 0x10;\n    return;\n  }\n  pclk1_freq = get_pclk2_frequency();\n  pclk2_freq1 = clock_params[1];\n  pclk1_freq2 = get_pclk2_frequency();\n  pclk2_freq2 = clock_params[1];\n  pclk1_freq3 = get_pclk2_frequency();\n  pclk2_freq3 = clock_params[1];\n  pclk1_freq4 = get_pclk2_frequency();\n  pclk2_freq4 = clock_params[1];\n  pclk1_freq5 = get_pclk2_frequency();\n  *(uint *)(base_address + 8) =\n       ((uint)((int)((ulonglong)\n                     (((uint)(pclk1_freq4 * 0x19) / (uint)(pclk2_freq4 << 2) +\n                      (int)(((ulonglong)(uint)(pclk1_freq5 * 0x19) / (ulonglong)(uint)(clock_params[1] << 2)) /\n                           100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n       ((((uint)(pclk1_freq2 * 0x19) / (uint)(pclk2_freq2 << 2) +\n         (int)(((ulonglong)(uint)(pclk1_freq3 * 0x19) / (ulonglong)(uint)(pclk2_freq3 << 2)) / 100) * -100) *\n         0x10 + 0x32) / 100 & 0xf0) +\n       (int)(((ulonglong)(uint)(pclk1_freq * 0x19) / (ulonglong)(uint)(pclk2_freq1 << 2)) / 100) * 0x10;\n  return;\n}\n\n",
            "current_name": "calculate_clock_frequency_080029c8",
            "entrypoint": "0x080029c8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080029c8": "calculate_clock_frequency_080029c8",
                "HAL_RCC_GetPCLK1Freq": "get_pclk1_frequency",
                "HAL_RCC_GetPCLK2Freq": "get_pclk2_frequency",
                "iVar1": "pclk1_freq",
                "iVar10": "base_address",
                "iVar2": "pclk1_freq2",
                "iVar3": "pclk1_freq3",
                "iVar4": "pclk1_freq4",
                "iVar5": "pclk1_freq5",
                "iVar6": "pclk2_freq1",
                "iVar7": "pclk2_freq2",
                "iVar8": "pclk2_freq3",
                "iVar9": "pclk2_freq4",
                "param_1": "clock_params"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002d0c": {
            "additional_data": {
                "FUN_08000e30": {
                    "get_tick": 2
                },
                "FUN_08002d0c": {
                    "check_and_modify_data": 1,
                    "check_and_modify_params": 2,
                    "check_and_modify_settings": 1,
                    "check_and_modify_values": 1,
                    "check_and_process_data": 1,
                    "check_and_update_flags": 1,
                    "check_and_update_parameters": 1,
                    "check_bitmask": 1,
                    "check_condition_and_modify": 1,
                    "check_condition_and_update": 3,
                    "check_conditions": 2,
                    "check_conditions_and_update": 1,
                    "check_flag_validity": 1,
                    "check_flags": 1,
                    "check_parameters": 2,
                    "check_params": 3,
                    "process_data": 1,
                    "process_params": 1,
                    "sanitize_data": 1,
                    "validate_and_update": 1,
                    "validate_parameters": 2,
                    "validate_params": 1
                },
                "iVar1": {
                    "current_tick": 9,
                    "current_ticks": 3,
                    "current_time": 12,
                    "elapsed_time": 1,
                    "tick_difference": 1
                },
                "param_1": {
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "data": 1,
                    "data_pointer": 3,
                    "data_ptr": 1,
                    "flag": 1,
                    "flags": 1,
                    "input_array": 3,
                    "param_array": 5,
                    "param_list": 1,
                    "parameter_array": 2,
                    "parameters": 1,
                    "pointer_array": 5,
                    "pointer_to_params": 1,
                    "pointer_to_uint": 1,
                    "ptr_array": 1,
                    "settings": 1,
                    "uint_ptr_ptr": 1
                },
                "param_2": {
                    "bit_mask": 2,
                    "bitmask": 1,
                    "check_value": 1,
                    "condition": 1,
                    "condition_flag": 1,
                    "flag": 7,
                    "flag_bits": 1,
                    "flags": 1,
                    "input_uint_1": 1,
                    "mask": 4,
                    "mask_value": 1,
                    "test_flags": 1,
                    "uint_value": 1,
                    "value": 1,
                    "value1": 3,
                    "value_1": 2,
                    "value_to_check": 2
                },
                "param_3": {
                    "bool_condition": 1,
                    "check_flag": 1,
                    "check_result": 1,
                    "condition": 5,
                    "condition_flag": 1,
                    "desired_flag": 1,
                    "expected": 1,
                    "expected_flag": 2,
                    "expected_result": 4,
                    "expected_value": 1,
                    "flag": 3,
                    "input_uint_2": 1,
                    "is_bit_set": 1,
                    "is_set": 1,
                    "is_true": 3,
                    "is_valid": 1,
                    "value2": 1,
                    "value_2": 2
                },
                "param_4": {
                    "base_time": 1,
                    "current_time": 1,
                    "init_value": 1,
                    "initial_time": 1,
                    "previous_tick": 1,
                    "reference_time": 1,
                    "reference_value": 1,
                    "start_tick": 6,
                    "start_ticks": 3,
                    "start_time": 12,
                    "tick_start": 1,
                    "time_difference": 1,
                    "time_reference": 1
                },
                "param_5": {
                    "max_tick_diff": 1,
                    "max_time_difference": 2,
                    "max_wait_time": 1,
                    "time_limit": 4,
                    "time_threshold": 1,
                    "timeout": 22
                }
            },
            "called": [
                "FUN_08000e30"
            ],
            "calling": [
                "FUN_08002dd0"
            ],
            "code": "\nundefined4 check_and_modify_params_08002d0c(uint **pointer_array,uint flag,uint condition,int start_time,uint timeout)\n\n{\n  int current_time;\n  \n  do {\n    if (((flag & ~**pointer_array) == 0) != condition) {\n      return 0;\n    }\n  } while ((timeout == 0xffffffff) ||\n          ((timeout != 0 && (current_time = HAL_GetTick(), (uint)(current_time - start_time) <= timeout))));\n  (*pointer_array)[3] = (*pointer_array)[3] & 0xfffffe5f;\n  (*pointer_array)[5] = (*pointer_array)[5] & 0xfffffffe;\n  *(undefined *)((int)pointer_array + 0x39) = 0x20;\n  *(undefined *)((int)pointer_array + 0x3a) = 0x20;\n  *(undefined *)(pointer_array + 0xe) = 0;\n  return 3;\n}\n\n",
            "current_name": "check_and_modify_params_08002d0c",
            "entrypoint": "0x08002d0c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002d0c": "check_and_modify_params_08002d0c",
                "iVar1": "current_time",
                "param_1": "pointer_array",
                "param_2": "flag",
                "param_3": "condition",
                "param_4": "start_time",
                "param_5": "timeout"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002d70": {
            "called": [],
            "calling": [
                "FUN_08002d72"
            ],
            "code": "\nvoid FUNC_08002d70(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002d70",
            "entrypoint": "0x08002d70",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002d70": "FUNC_08002d70"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002d72": {
            "additional_data": {
                "0": {
                    "success": 1
                },
                "0x0": {
                    "null_pointer": 1
                },
                "0x20": {
                    "uart_buffer_constant2": 1
                },
                "0x2000": {
                    "uart_control_mask2": 1
                },
                "0x24": {
                    "uart_buffer_constant1": 1
                },
                "0x39": {
                    "uart_buffer_offset2": 1
                },
                "0x3a": {
                    "uart_buffer_offset3": 1
                },
                "0xe": {
                    "uart_buffer_offset1": 1
                },
                "0xffffb7ff": {
                    "uart_status_mask": 1
                },
                "0xffffdfff": {
                    "uart_control_mask1": 1
                },
                "0xffffffd5": {
                    "uart_other_mask": 1
                },
                "1": {
                    "failure": 1
                },
                "FUNC_08002d70": {
                    "disable_device": 1,
                    "empty_function": 1,
                    "initialize_uart_buffer": 1,
                    "initialize_uart_configuration": 1,
                    "initialize_uart_driver": 1,
                    "initialize_uart_module": 1,
                    "initialize_uart_msp_init": 1,
                    "initialize_uart_peripherals": 2,
                    "initialize_uart_pins": 1,
                    "no_operation": 1,
                    "not_relevant_function": 1,
                    "not_used": 1,
                    "reset_flags": 1,
                    "reset_uart_config": 1,
                    "reset_uart_configuration": 1,
                    "reverse_bits": 1,
                    "some_other_function": 1,
                    "uart_msp_init": 1,
                    "unknown_function": 1,
                    "unspecified_function": 1,
                    "unused_function": 2
                },
                "FUN_080029c8": {
                    "check_uart_handle_null": 1,
                    "check_uart_state": 1,
                    "init_device": 1,
                    "init_uart_handle": 1,
                    "init_uart_peripheral": 1,
                    "initialize_uart": 7,
                    "initialize_uart_buffer": 1,
                    "initialize_uart_config": 1,
                    "initialize_uart_gpio": 1,
                    "initialize_uart_handle": 1,
                    "initialize_uart_instance": 2,
                    "initialize_uart_interface_helper": 1,
                    "initialize_uart_msp": 2,
                    "initialize_uart_params": 1,
                    "initialize_uart_peripheral": 1,
                    "initialize_uart_peripherals": 1,
                    "initialize_uart_pins": 1
                },
                "FUN_08002d72": {
                    "init_uart_configuration": 1,
                    "init_uart_device": 1,
                    "initialize_uart": 25,
                    "initialize_uart_configuration": 1,
                    "initialize_uart_connection": 2,
                    "initialize_uart_interface": 1
                },
                "HAL_UART_MspInit": {
                    "initialize_uart_gpio_pins": 2,
                    "initialize_uart_hardware": 4,
                    "initialize_uart_peripheral": 4,
                    "initialize_uart_peripherals": 15,
                    "initialize_uart_pins": 3,
                    "initialize_uart_pins_and_peripherals": 1
                },
                "UART_SetConfig": {
                    "configure_uart": 12,
                    "set_uart_config": 4,
                    "set_uart_configuration": 11
                },
                "initialize_UART": {
                    "initialize_uart": 1
                },
                "initialize_uart_peripherals": {
                    "initialize_peripherals": 1
                },
                "param_1": {
                    "device_ptr": 1,
                    "uart_config": 12,
                    "uart_device": 1,
                    "uart_handle": 6,
                    "uart_instance": 8,
                    "uart_interface": 1,
                    "uart_params": 2
                },
                "set_uart_config": {
                    "config_uart": 1
                },
                "uart_handle": {
                    "uart_handle": 1
                },
                "uint": {
                    "unsigned_integer": 1
                }
            },
            "called": [
                "FUN_080029c8",
                "FUN_08002d70"
            ],
            "calling": [
                "FUN_08003978"
            ],
            "code": "\nundefined4 initialize_uart_connection_08002d72(int *uart_config)\n\n{\n  if (uart_config != (int *)0x0) {\n    if (*(char *)((int)uart_config + 0x39) == '\\0') {\n      *(undefined *)(uart_config + 0xe) = 0;\n      initialize_uart_peripherals();\n    }\n    *(undefined *)((int)uart_config + 0x39) = 0x24;\n    *(unsigned_integer *)(*uart_config + 0xc) = *(unsigned_integer *)(*uart_config + 0xc) & 0xffffdfff;\n    configure_uart(uart_config);\n    *(unsigned_integer *)(*uart_config + 0x10) = *(unsigned_integer *)(*uart_config + 0x10) & 0xffffb7ff;\n    *(unsigned_integer *)(*uart_config + 0x14) = *(unsigned_integer *)(*uart_config + 0x14) & 0xffffffd5;\n    *(unsigned_integer *)(*uart_config + 0xc) = *(unsigned_integer *)(*uart_config + 0xc) | 0x2000;\n    uart_config[0xf] = 0;\n    *(undefined *)((int)uart_config + 0x39) = 0x20;\n    *(undefined *)((int)uart_config + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_uart_connection_08002d72",
            "entrypoint": "0x08002d72",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002d72": "initialize_uart_connection_08002d72",
                "HAL_UART_MspInit": "initialize_uart_peripherals",
                "UART_SetConfig": "configure_uart",
                "param_1": "uart_config",
                "uint": "unsigned_integer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002dd0": {
            "additional_data": {
                "FUN_08002dd0": {
                    "process_data": 30,
                    "transfer_data": 1
                },
                "HAL_GetTick": {
                    "get_current_tick": 1,
                    "get_current_time": 1,
                    "get_tick_value": 1,
                    "get_timestamp": 1
                },
                "UART_WaitOnFlagUntilTimeout": {
                    "wait_for_flag": 1,
                    "wait_for_flag_until_timeout": 1,
                    "wait_on_flag": 1,
                    "wait_on_flag_until_timeout": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "result": 24,
                    "status": 4,
                    "wait_result": 2
                },
                "param_1": {
                    "buffer": 2,
                    "data": 6,
                    "data_array": 2,
                    "data_buffer": 10,
                    "data_params": 1,
                    "data_ptr": 6,
                    "input_array": 1,
                    "input_data": 2,
                    "uart_config": 1
                },
                "param_2": {
                    "buffer": 5,
                    "buffer_ptr": 3,
                    "byte_array": 1,
                    "byte_buffer": 1,
                    "data": 9,
                    "data_buffer": 3,
                    "data_stream": 1,
                    "input_buffer": 4,
                    "input_data": 3,
                    "input_ptr": 1
                },
                "param_3": {
                    "buffer_length": 4,
                    "buffer_size": 11,
                    "byte_array_size": 1,
                    "data_length": 9,
                    "input_len": 1,
                    "input_length": 1,
                    "input_size": 1,
                    "length": 2,
                    "num_bytes": 1
                },
                "param_4": {
                    "param4": 2,
                    "param_4": 2,
                    "tick_value": 3,
                    "time": 1,
                    "timeout": 23
                },
                "uVar2": {
                    "result": 4,
                    "return_code": 1,
                    "return_value": 14,
                    "status": 11,
                    "status_code": 1
                }
            },
            "called": [
                "FUN_08000e30",
                "FUN_08002d0c"
            ],
            "calling": [
                "FUN_08003d18"
            ],
            "code": "\nundefined4 process_data_08002dd0(int *data_buffer,ushort *data,int buffer_size,undefined4 timeout)\n\n{\n  int result;\n  undefined4 return_value;\n  \n  if (*(char *)((int)data_buffer + 0x39) == ' ') {\n    if (data == (ushort *)0x0) {\n      return_value = 1;\n    }\n    else if (buffer_size == 0) {\n      return_value = 1;\n    }\n    else if (*(char *)(data_buffer + 0xe) == '\\x01') {\n      return_value = 2;\n    }\n    else {\n      *(undefined *)(data_buffer + 0xe) = 1;\n      data_buffer[0xf] = 0;\n      *(undefined *)((int)data_buffer + 0x39) = 0x21;\n      return_value = get_current_tick();\n      *(short *)(data_buffer + 9) = (short)buffer_size;\n      *(short *)((int)data_buffer + 0x26) = (short)buffer_size;\n      while (*(short *)((int)data_buffer + 0x26) != 0) {\n        *(short *)((int)data_buffer + 0x26) = *(short *)((int)data_buffer + 0x26) + -1;\n        if (data_buffer[2] == 0x1000) {\n          result = wait_for_flag(data_buffer,0x80,0,return_value,timeout);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_buffer + 4) = *data & 0x1ff;\n          if (data_buffer[4] == 0) {\n            data = data + 1;\n          }\n          else {\n            data = (ushort *)((int)data + 1);\n          }\n        }\n        else {\n          result = wait_for_flag(data_buffer,0x80,0,return_value,timeout);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_buffer + 4) = (uint)*(byte *)data;\n          data = (ushort *)((int)data + 1);\n        }\n      }\n      result = wait_for_flag(data_buffer,0x40,0,return_value,timeout);\n      if (result == 0) {\n        *(undefined *)((int)data_buffer + 0x39) = 0x20;\n        *(undefined *)(data_buffer + 0xe) = 0;\n        return_value = 0;\n      }\n      else {\n        return_value = 3;\n      }\n    }\n  }\n  else {\n    return_value = 2;\n  }\n  return return_value;\n}\n\n",
            "current_name": "process_data_08002dd0",
            "entrypoint": "0x08002dd0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002dd0": "process_data_08002dd0",
                "HAL_GetTick": "get_current_tick",
                "UART_WaitOnFlagUntilTimeout": "wait_for_flag",
                "iVar1": "result",
                "param_1": "data_buffer",
                "param_2": "data",
                "param_3": "buffer_size",
                "param_4": "timeout",
                "uVar2": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002eb2": {
            "additional_data": {
                "0x26": {
                    "flag_value": 1,
                    "short1": 1
                },
                "0x39": {
                    "char1": 1,
                    "flag": 1,
                    "space_char": 1
                },
                "0x80": {
                    "flag": 1
                },
                "0xe": {
                    "char2": 1,
                    "flag": 1
                },
                "0xf": {
                    "char3": 1,
                    "counter": 2
                },
                "DAT_08002eb2": {
                    "data_08002eb2": 1
                },
                "FUN_08002eb2": {
                    "check_and_update_params": 1,
                    "check_and_update_values": 2,
                    "check_parameters": 1,
                    "initialize_data": 2,
                    "process_data": 5,
                    "process_input": 3,
                    "process_parameters": 1,
                    "update_data": 3,
                    "update_parameters": 1,
                    "update_profile_data": 1,
                    "validate_and_store_data": 1,
                    "validate_input": 6,
                    "validate_inputs": 1,
                    "validate_parameters": 2,
                    "verify_input": 1
                },
                "PTR_fun_08002eb2": {
                    "fun_08002eb2_pointer": 1
                },
                "data": {
                    "data": 1
                },
                "input": {
                    "input_array": 1
                },
                "input_array": {
                    "array": 1
                },
                "length": {
                    "length": 1
                },
                "param_1": {
                    "arr": 1,
                    "array": 4,
                    "data": 9,
                    "data_arr": 1,
                    "input": 1,
                    "input_array": 10,
                    "input_list": 1,
                    "input_ptr": 1,
                    "parameters": 1,
                    "parameters_array": 1,
                    "profile_data": 1
                },
                "param_2": {
                    "length": 2,
                    "new_value_1": 1,
                    "param_2": 1,
                    "param_2_value": 1,
                    "size": 3,
                    "val1": 1,
                    "value1": 18,
                    "value_1": 4
                },
                "param_3": {
                    "length": 1,
                    "new_value_2": 1,
                    "param_3": 1,
                    "param_3_value": 1,
                    "val2": 1,
                    "value": 4,
                    "value2": 18,
                    "value_2": 4
                },
                "parameters": {
                    "array": 1
                },
                "parameters_array": {
                    "parameters_array": 1
                },
                "parameters_array_offset_0xe": {
                    "parameters_array_offset_0xe": 1
                },
                "return": {
                    "result": 1
                },
                "short": {
                    "short_value": 1
                },
                "size": {
                    "size": 1
                },
                "uint": {
                    "unsigned_int": 1
                },
                "value1": {
                    "new_value1": 1,
                    "size_value": 1,
                    "value1": 1
                },
                "value2": {
                    "length_value": 1,
                    "new_value2": 1,
                    "value2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003f48",
                "FUN_08003eac"
            ],
            "code": "\nundefined4 validate_input_08002eb2(int *input_array,int value1,int value2)\n\n{\n  if (*(char *)((int)input_array + 0x39) != ' ') {\n    result 2;\n  }\n  if (value1 == 0) {\n    result 1;\n  }\n  if (value2 == 0) {\n    result 1;\n  }\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    input_array[8] = value1;\n    *(short_value *)(input_array + 9) = (short_value)value2;\n    *(short_value *)((int)input_array + 0x26) = (short_value)value2;\n    input_array[0xf] = 0;\n    *(undefined *)((int)input_array + 0x39) = 0x21;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(unsigned_int *)(*input_array + 0xc) = *(unsigned_int *)(*input_array + 0xc) | 0x80;\n    result 0;\n  }\n  result 2;\n}\n\n",
            "current_name": "validate_input_08002eb2",
            "entrypoint": "0x08002eb2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002eb2": "validate_input_08002eb2",
                "param_1": "input_array",
                "param_2": "value1",
                "param_3": "value2",
                "return": "result",
                "short": "short_value",
                "uint": "unsigned_int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002efa": {
            "additional_data": {
                "0x14": {
                    "bitmask1": 1,
                    "config_ptr_value1": 1,
                    "uint_at_20": 1
                },
                "0x22": {
                    "new_config_flag_value": 1,
                    "space_character": 1
                },
                "0x2e": {
                    "config_value_copy": 1,
                    "short_at_46": 1,
                    "short_value2": 1
                },
                "0x3a": {
                    "char_at_58": 1,
                    "config_flag": 1,
                    "property_flag": 1
                },
                "0xb": {
                    "config_value": 1,
                    "short_value1": 1
                },
                "0xc": {
                    "bitmask2": 1,
                    "config_ptr_value2": 1,
                    "uint_at_12": 1
                },
                "0xe": {
                    "flag": 1,
                    "status_flag": 1
                },
                "0xf": {
                    "counter": 1,
                    "zero": 1
                },
                "10": {
                    "config_index": 1,
                    "property_index": 1
                },
                "FUN_08002efa": {
                    "initialize_data": 6,
                    "initialize_parameters": 3,
                    "prepare_data": 1,
                    "process_data": 4,
                    "process_parameters": 1,
                    "process_params": 1,
                    "set_data_values": 1,
                    "update_config": 1,
                    "update_configuration": 1,
                    "update_data": 4,
                    "update_param_values": 1,
                    "update_parameters": 3,
                    "validate_and_set_properties": 1,
                    "validate_input": 3
                },
                "char": {
                    "byte": 1
                },
                "char_1": {
                    "flag1": 1
                },
                "char_2": {
                    "flag2": 1
                },
                "dataPointer": {
                    "data": 1
                },
                "data_ptr": {
                    "data_ptr": 1
                },
                "int": {
                    "integer": 1,
                    "integer_value": 1
                },
                "int_1": {
                    "int_value1": 1
                },
                "int_2": {
                    "int_value2": 1
                },
                "int_value": {
                    "update_value": 1
                },
                "param_1": {
                    "array": 1,
                    "config": 2,
                    "data": 9,
                    "data_pointer": 4,
                    "data_ptr": 2,
                    "input": 1,
                    "input_array": 2,
                    "param_array": 1,
                    "parameter_array": 1,
                    "parameters": 5,
                    "params": 2,
                    "property_list": 1
                },
                "param_2": {
                    "input1": 1,
                    "new_param1": 1,
                    "param2": 1,
                    "size": 1,
                    "size_of_param_1": 1,
                    "value1": 21,
                    "value_1": 5
                },
                "param_3": {
                    "input2": 1,
                    "new_param2": 1,
                    "param3": 1,
                    "size_of_param_2": 1,
                    "value": 1,
                    "value2": 21,
                    "value_2": 5
                },
                "short": {
                    "short_integer": 1,
                    "short_value": 1
                },
                "short_1": {
                    "short_value1": 1
                },
                "short_2": {
                    "short_value2": 1
                },
                "uint_1": {
                    "uint_value1": 1
                },
                "uint_2": {
                    "uint_value2": 1
                },
                "undefined4": {
                    "error_code": 1
                },
                "undefined_1": {
                    "undefined_value1": 1
                },
                "undefined_2": {
                    "undefined_value2": 1
                },
                "value_1": {
                    "initial_value": 1,
                    "value_1": 1
                },
                "value_2": {
                    "secondary_value": 1,
                    "value_2": 1
                },
                "x": {
                    "data_value": 1
                },
                "y": {
                    "data_value2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003e54",
                "FUN_08003e18"
            ],
            "code": "\nerror_code initialize_data_08002efa(integer *data,integer value1,integer value2)\n\n{\n  if (*(byte *)((integer)data + 0data_value3a) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(byte *)(data + 0data_valuee) != '\\data_value01') {\n    data[10] = value1;\n    *(short_integer *)(data + 0data_valueb) = (short_integer)value2;\n    *(short_integer *)((integer)data + 0data_value2e) = (short_integer)value2;\n    data[0data_valuef] = 0;\n    *(undefined *)((integer)data + 0data_value3a) = 0data_value22;\n    *(undefined *)(data + 0data_valuee) = 0;\n    *(uinteger *)(*data + 0data_value14) = *(uinteger *)(*data + 0data_value14) | 1;\n    *(uinteger *)(*data + 0data_valuec) = *(uinteger *)(*data + 0data_valuec) | 0data_value120;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "current_name": "initialize_data_08002efa",
            "entrypoint": "0x08002efa",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002efa": "initialize_data_08002efa",
                "char": "byte",
                "int": "integer",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "short": "short_integer",
                "undefined4": "error_code",
                "x": "data_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f4c": {
            "additional_data": {
                "FUN_08002f4c": {
                    "adjust_uart_settings": 1,
                    "modify_uart_settings": 1,
                    "set_bit_and_callback": 1,
                    "set_uart_transmission_mode": 1,
                    "transmit_data": 1,
                    "update_flag_and_send_data": 1,
                    "update_parameters": 1,
                    "update_register_and_callback": 1,
                    "update_status": 1,
                    "update_uart_config": 6,
                    "update_uart_configs": 1,
                    "update_uart_configuration": 3,
                    "update_uart_control": 1,
                    "update_uart_flags": 1,
                    "update_uart_parameters": 1,
                    "update_uart_settings": 6,
                    "update_uart_status": 1,
                    "update_uart_transmit": 1,
                    "update_uart_tx_config": 1
                },
                "HAL_UART_TxCpltCallback": {
                    "handle_transmit_complete": 2,
                    "handle_uart_complete": 1,
                    "handle_uart_transmission_complete": 4,
                    "handle_uart_transmit_completion": 2,
                    "handle_uart_tx_complete": 2,
                    "transmission_complete_callback": 4,
                    "transmit_complete_callback": 1,
                    "uart_transmission_complete_callback": 1
                },
                "param_1": {
                    "buffer_ptr": 1,
                    "config_params": 1,
                    "config_pointer": 1,
                    "config_ptr": 6,
                    "data": 1,
                    "data_pointer": 1,
                    "input_params": 1,
                    "input_ptr": 1,
                    "register_ptr": 1,
                    "settings": 2,
                    "status_ptr": 1,
                    "uart_config": 1,
                    "uart_config_ptr": 2,
                    "uart_control_ptr": 1,
                    "uart_data": 1,
                    "uart_descriptor": 1,
                    "uart_flags": 1,
                    "uart_params": 1,
                    "uart_settings": 5,
                    "uart_status": 1
                },
                "undefined": {
                    "void": 1
                }
            },
            "called": [
                "FUN_08003f48"
            ],
            "calling": [
                "FUN_08002ffc"
            ],
            "code": "\nvoid4 update_uart_tx_config_08002f4c(int *config_ptr)\n\n{\n  *(uint *)(*config_ptr + 0xc) = *(uint *)(*config_ptr + 0xc) & 0xffffffbf;\n  *(void *)((int)config_ptr + 0x39) = 0x20;\n  transmission_complete_callback();\n  return 0;\n}\n\n",
            "current_name": "update_uart_tx_config_08002f4c",
            "entrypoint": "0x08002f4c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f4c": "update_uart_tx_config_08002f4c",
                "HAL_UART_TxCpltCallback": "transmission_complete_callback",
                "param_1": "config_ptr",
                "undefined": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f66": {
            "additional_data": {
                "FUN_08002f66": {
                    "decode_data": 1,
                    "extract_and_process_data": 1,
                    "parse_and_process_data": 1,
                    "parse_data": 1,
                    "parse_input": 6,
                    "parse_quote": 1,
                    "process_binary_data": 4,
                    "process_data": 11,
                    "process_input": 4,
                    "process_input_data": 1
                },
                "HAL_UART_RxCpltCallback": {
                    "handle_uart_rx_complete": 1,
                    "uart_receive_complete_callback": 1
                },
                "param_1": {
                    "binary_data": 1,
                    "data": 12,
                    "data_array": 3,
                    "data_ptr": 2,
                    "input": 2,
                    "input_array": 1,
                    "input_buffer": 1,
                    "input_data": 9
                },
                "pbVar1": {
                    "byte_buffer": 1,
                    "byte_data": 1,
                    "byte_pointer": 10,
                    "byte_ptr": 13,
                    "data_byte_ptr": 1,
                    "output_byte": 5
                },
                "puVar3": {
                    "data_ptr": 1,
                    "output_ptr": 5,
                    "ptr": 1,
                    "ptr_data": 1,
                    "undefined_pointer": 10,
                    "undefined_ptr": 13
                },
                "sVar2": {
                    "count": 11,
                    "counter": 12,
                    "remaining_bytes": 1,
                    "remaining_count": 2,
                    "remaining_iterations": 3,
                    "remaining_size": 1,
                    "short_value": 1
                }
            },
            "called": [
                "FUN_08003f24"
            ],
            "calling": [
                "FUN_08002ffc"
            ],
            "code": "\nundefined4 process_binary_data_08002f66(int *data)\n\n{\n  byte *byte_ptr;\n  short counter;\n  undefined *undefined_ptr;\n  \n  if (*(char *)((int)data + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    if (data[4] == 0) {\n      *(ushort *)data[10] = (ushort)((uint)(*(int *)(*data + 4) << 0x17) >> 0x17);\n      data[10] = data[10] + 2;\n    }\n    else {\n      *(ushort *)data[10] = (ushort)*(undefined4 *)(*data + 4) & 0xff;\n      data[10] = data[10] + 1;\n    }\n  }\n  else if (data[4] == 0) {\n    undefined_ptr = (undefined *)data[10];\n    data[10] = (int)(undefined_ptr + 1);\n    *undefined_ptr = (char)*(undefined4 *)(*data + 4);\n  }\n  else {\n    byte_ptr = (byte *)data[10];\n    data[10] = (int)(byte_ptr + 1);\n    *byte_ptr = (byte)*(undefined4 *)(*data + 4) & 0x7f;\n  }\n  counter = *(short *)((int)data + 0x2e) + -1;\n  *(short *)((int)data + 0x2e) = counter;\n  if (counter != 0) {\n    return 0;\n  }\n  *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xfffffedf;\n  *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) & 0xfffffffe;\n  *(undefined *)((int)data + 0x3a) = 0x20;\n  uart_receive_complete_callback();\n  return 0;\n}\n\n",
            "current_name": "process_binary_data_08002f66",
            "entrypoint": "0x08002f66",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f66": "process_binary_data_08002f66",
                "HAL_UART_RxCpltCallback": "uart_receive_complete_callback",
                "param_1": "data",
                "pbVar1": "byte_ptr",
                "puVar3": "undefined_ptr",
                "sVar2": "counter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ffc": {
            "additional_data": {
                "FUN_08002ffc": {
                    "check_and_handle_uart_events": 1,
                    "check_and_handle_uart_operations": 1,
                    "check_and_handle_uart_state": 1,
                    "check_and_handle_uart_status": 1,
                    "check_and_perform_uart_operations": 1,
                    "check_and_process_flags": 1,
                    "check_and_process_uart": 1,
                    "handle_data_transmission": 1,
                    "handle_serial_communication": 1,
                    "handle_uart": 2,
                    "handle_uart_operations": 3,
                    "handle_uart_status": 1,
                    "handle_uart_transfer": 1,
                    "process_data": 7,
                    "process_input_data": 1,
                    "process_input_status": 1,
                    "process_status": 1,
                    "process_status_flags": 1,
                    "process_transfers": 1,
                    "process_uart_command": 1,
                    "process_uart_data": 2
                },
                "HAL_DMA_Abort_IT": {
                    "abort_dma": 3,
                    "abort_dma_interrupt": 2
                },
                "HAL_UART_ErrorCallback": {
                    "error_callback": 1,
                    "handle_error": 1,
                    "handle_error_callback": 1,
                    "handle_serial_error": 1,
                    "handle_uart_error": 1
                },
                "LAB_0800311c_1": {
                    "label": 1,
                    "label0800311c_1": 1,
                    "label1": 1,
                    "some_lab_value": 1
                },
                "UART_EndRxTransfer": {
                    "end_receive_transfer": 3,
                    "end_rx_transfer": 1,
                    "end_serial_rx_transfer": 1
                },
                "UART_EndTransmit_IT": {
                    "end_serial_transmit": 1,
                    "end_transmit": 1,
                    "end_transmit_data": 1,
                    "end_transmit_data_interrupt": 1,
                    "end_transmit_interrupt": 1
                },
                "UART_Receive_IT": {
                    "receive_data": 1,
                    "receive_data_interrupt": 2,
                    "start_receive": 1,
                    "start_serial_receive": 1
                },
                "UART_Transmit_IT": {
                    "start_serial_transmit": 1,
                    "start_transmit": 1,
                    "transmit_data": 1,
                    "transmit_data_interrupt": 2
                },
                "iVar1": {
                    "dma_abort_result": 2,
                    "dma_check": 1,
                    "dma_status": 1,
                    "error": 1,
                    "error_code": 1,
                    "error_status": 1,
                    "result": 17,
                    "return_code": 1,
                    "return_value": 1,
                    "status": 4
                },
                "param_1": {
                    "command_data": 1,
                    "data": 9,
                    "input_data": 1,
                    "input_status": 1,
                    "p_transfer_params": 1,
                    "param": 1,
                    "param_array": 2,
                    "param_data": 1,
                    "parameter": 2,
                    "parameters": 2,
                    "params": 1,
                    "serial_data": 1,
                    "state_ptr": 1,
                    "status_data": 1,
                    "status_flags": 1,
                    "transfer_data": 1,
                    "uart_data": 2,
                    "uart_params": 1
                },
                "puVar3": {
                    "command_data_ptr": 1,
                    "data_pointer": 1,
                    "data_ptr": 4,
                    "event_data": 1,
                    "param_1_ptr": 1,
                    "param_pointer": 1,
                    "pointer": 3,
                    "pointer_1": 1,
                    "pointer_value": 1,
                    "ptr": 6,
                    "ptr1": 1,
                    "ptr3": 1,
                    "ptr_data": 3,
                    "pu_var": 1,
                    "state_ptr_contents": 1,
                    "status_flags_pointer": 1,
                    "status_ptr": 1,
                    "transfer_data": 1,
                    "value_pointer": 1
                },
                "uVar2": {
                    "command_data_value": 1,
                    "data_flag": 1,
                    "data_value1": 1,
                    "event_mask": 1,
                    "flags": 3,
                    "input_status_bitmask": 1,
                    "param3_value": 1,
                    "param_1_value": 1,
                    "state_value2": 1,
                    "status": 2,
                    "status_3": 1,
                    "status_flag2": 1,
                    "status_value": 1,
                    "uart_flags": 1,
                    "value": 2,
                    "value1": 4,
                    "value2": 2,
                    "value_2": 2,
                    "var1": 1,
                    "var2": 3
                },
                "uVar4": {
                    "check_value": 1,
                    "condition": 2,
                    "condition_flag": 2,
                    "dma_flag": 1,
                    "flag": 6,
                    "flag1": 1,
                    "flag_check": 1,
                    "is_data_valid": 1,
                    "is_transmit_complete": 1,
                    "param_1_bit": 1,
                    "status_5": 1,
                    "status_flag4": 1,
                    "u_var4": 2,
                    "value2": 3,
                    "value_4": 2,
                    "var2": 1,
                    "var4": 3
                },
                "uVar5": {
                    "command_data_flag": 1,
                    "data_flag2": 1,
                    "data_flags": 2,
                    "flag2": 1,
                    "flag_value": 1,
                    "flags": 1,
                    "is_receive_complete": 1,
                    "mask": 2,
                    "param_1_flags": 1,
                    "state_value1": 1,
                    "status": 2,
                    "status_1": 1,
                    "status_flag5": 1,
                    "status_mask": 1,
                    "transfer_flags": 1,
                    "u_var5_value": 1,
                    "value1": 2,
                    "value2": 1,
                    "value3": 3,
                    "value_5": 2,
                    "var3": 1,
                    "var5": 3
                }
            },
            "called": [
                "FUN_0800295c",
                "FUN_08000f8c",
                "FUN_08003f94",
                "FUN_08002f66",
                "FUN_08002f4c",
                "FUN_08002940"
            ],
            "calling": [],
            "code": "\nvoid process_uart_data_08002ffc(uint **data)\n\n{\n  int result;\n  uint value1;\n  uint *ptr;\n  uint flag;\n  uint value3;\n  \n  ptr = *data;\n  value3 = *ptr;\n  value1 = ptr[3];\n  if ((((value3 & 0xf) == 0) && ((value3 & 0x20) != 0)) && ((value1 & 0x20) != 0)) {\n    receive_data_interrupt(data);\n    return;\n  }\n  if (((value3 & 0xf) == 0) || ((flag = ptr[5] & 1, flag == 0 && ((value1 & 0x120) == 0)))) {\n    if (((value3 & 0x80) != 0) && ((value1 & 0x80) != 0)) {\n      transmit_data_interrupt(data);\n      return;\n    }\n    if (((value3 & 0x40) != 0) && ((value1 & 0x40) != 0)) {\n      end_transmit(data);\n    }\n  }\n  else {\n    if (((value3 & 1) != 0) && ((value1 & 0x100) != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 1);\n    }\n    if (((value3 & 4) != 0) && (flag != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 2);\n    }\n    if (((value3 & 2) != 0) && (flag != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 4);\n    }\n    if (((value3 & 8) != 0) && (flag != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 8);\n    }\n    if (data[0xf] != (uint *)0x0) {\n      if (((value3 & 0x20) != 0) && ((value1 & 0x20) != 0)) {\n        receive_data_interrupt(data);\n      }\n      if ((((uint)data[0xf] & 8) == 0) && (((*data)[5] & 0x40) == 0)) {\n        handle_error(data);\n        data[0xf] = (uint *)0x0;\n        return;\n      }\n      end_receive_transfer(data);\n      ptr = *data;\n      if ((ptr[5] & 0x40) == 0) {\n        handle_error(data);\n        return;\n      }\n      ptr[5] = ptr[5] & 0xffffffbf;\n      if (data[0xd] == (uint *)0x0) {\n        handle_error(data);\n        return;\n      }\n      data[0xd][0x14] = (uint)&label;\n      result = abort_dma(data[0xd]);\n      if (result != 0) {\n        (*(code *)data[0xd][0x14])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_uart_data_08002ffc",
            "entrypoint": "0x08002ffc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ffc": "process_uart_data_08002ffc",
                "HAL_DMA_Abort_IT": "abort_dma",
                "HAL_UART_ErrorCallback": "handle_error",
                "LAB_0800311c_1": "label",
                "UART_EndRxTransfer": "end_receive_transfer",
                "UART_EndTransmit_IT": "end_transmit",
                "UART_Receive_IT": "receive_data_interrupt",
                "UART_Transmit_IT": "transmit_data_interrupt",
                "iVar1": "result",
                "param_1": "data",
                "puVar3": "ptr",
                "uVar2": "value1",
                "uVar4": "flag",
                "uVar5": "value3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800312c": {
            "additional_data": {
                "0x39": {
                    "byte_offset2": 1,
                    "offset2": 2,
                    "offset_2": 1
                },
                "0x3a": {
                    "byte_offset1": 1,
                    "offset1": 2,
                    "offset_1": 1
                },
                "FUN_0800312c": {
                    "combine_byte_values": 1,
                    "combine_bytes": 28,
                    "combined_bytes": 1,
                    "or_operation": 1
                },
                "local_1": {
                    "byte1": 1
                },
                "local_2": {
                    "byte2": 1
                },
                "param_1": {
                    "address": 4,
                    "base_address": 1,
                    "input": 19,
                    "input_offset": 1,
                    "input_value": 3,
                    "offset": 2,
                    "start_address": 1
                },
                "param_2": {
                    "size": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003df4",
                "FUN_08003dd0"
            ],
            "code": "\nbyte combine_bytes_0800312c(int input)\n\n{\n  return *(byte *)(input + 0x3a) | *(byte *)(input + 0x39);\n}\n\n",
            "current_name": "combine_bytes_0800312c",
            "entrypoint": "0x0800312c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800312c": "combine_bytes_0800312c",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003138": {
            "additional_data": {
                "0x18": {
                    "bit_shift_value": 1
                },
                "0x1c": {
                    "bit_mask": 1
                },
                "1": {
                    "bit_mask": 1
                },
                "DAT_": {
                    "": 2,
                    "unchanged": 1
                },
                "FUN_08003138": {
                    "check_bit": 5,
                    "check_bit_value": 1,
                    "extract_bit": 5,
                    "extract_bit_from_data": 1,
                    "extract_bit_from_integer": 1,
                    "extract_bit_from_uint": 1,
                    "extract_bit_from_uint_array": 1,
                    "extract_bit_from_word": 2,
                    "extracted_bit_value": 1,
                    "find_bit": 1,
                    "get_bit": 1,
                    "get_bit_value": 9,
                    "retrieve_bit": 1,
                    "retrieve_bit_from_uint": 1
                },
                "PTR_": {
                    "": 2,
                    "unchanged": 1
                },
                "array_base": {
                    "array": 1
                },
                "new_variable_name_1": {
                    "": 1,
                    "shifted_index": 1
                },
                "new_variable_name_2": {
                    "": 1,
                    "bit_mask": 1
                },
                "param_1": {
                    "bit_index": 1,
                    "bit_number": 1,
                    "bit_position": 2,
                    "data": 4,
                    "index": 2,
                    "input": 1,
                    "input_value": 3,
                    "mask": 1,
                    "num": 1,
                    "position": 1,
                    "value": 13,
                    "word": 1
                },
                "param_2": {
                    "address": 8,
                    "array": 5,
                    "array_address": 1,
                    "array_base": 1,
                    "array_base_address": 1,
                    "array_offset": 1,
                    "array_pointer": 2,
                    "array_ptr": 2,
                    "array_start_address": 1,
                    "base_address": 3,
                    "data_address": 1,
                    "data_array": 1,
                    "data_pointer": 1,
                    "offset": 1,
                    "ptr": 2
                },
                "param_3": {
                    "bit_mask": 1,
                    "bit_offset": 1,
                    "bit_position": 1
                },
                "param_4": {
                    "bit_position": 1
                },
                "uint": {
                    "unsigned_integer": 1
                },
                "value": {
                    "input_value": 1
                },
                "var_1": {
                    "shifted_value": 1
                },
                "var_2": {
                    "bit_masked_value": 1
                },
                "var_3": {
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004110",
                "FUN_080041bc"
            ],
            "code": "\nunsigned_integer get_bit_value_08003138(unsigned_integer value,int address)\n\n{\n  return *(unsigned_integer *)(address + ((value << 0x18) >> 0x1c) * 4) >> (value & 0xf) & 1;\n}\n\n",
            "current_name": "get_bit_value_08003138",
            "entrypoint": "0x08003138",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003138": "get_bit_value_08003138",
                "param_1": "value",
                "param_2": "address",
                "uint": "unsigned_integer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800314e": {
            "additional_data": {
                "FUN_0800314e": {
                    "set_bit": 1,
                    "set_bit_in_array": 16,
                    "set_bit_in_int_array": 1,
                    "set_bit_in_memory": 2,
                    "update_bit": 2,
                    "update_bit_in_array": 2,
                    "update_bit_value": 1,
                    "update_bit_value_at_index": 1,
                    "update_bitmap_bit": 1,
                    "update_data": 1,
                    "update_memory_value": 2,
                    "write_flag_to_memory": 1
                },
                "param_1": {
                    "bit_index": 7,
                    "bit_number": 1,
                    "bit_position": 10,
                    "element_index": 1,
                    "flag_bit": 1,
                    "index": 4,
                    "input_value": 4,
                    "value": 3
                },
                "param_2": {
                    "array": 16,
                    "array_address": 5,
                    "array_base_address": 1,
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "bitmap_address": 1,
                    "data_pointer": 1,
                    "memory_address": 5
                },
                "uVar1": {
                    "array_index": 2,
                    "bitmap_index": 1,
                    "byte_index": 4,
                    "byte_offset": 4,
                    "index": 7,
                    "shift_amount": 1,
                    "shifted_bits": 1,
                    "shifted_flag_bit": 1,
                    "shifted_index": 6,
                    "shifted_value": 1,
                    "word_index": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004110"
            ],
            "code": "\nvoid set_bit_in_int_array_0800314e(uint bit_position,int array)\n\n{\n  uint index;\n  \n  index = (bit_position << 0x18) >> 0x1c;\n  *(uint *)(array + index * 4) = *(uint *)(array + index * 4) | 1 << (bit_position & 0xf);\n  return;\n}\n\n",
            "current_name": "set_bit_in_int_array_0800314e",
            "entrypoint": "0x0800314e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800314e": "set_bit_in_int_array_0800314e",
                "param_1": "bit_position",
                "param_2": "array",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800316c": {
            "additional_data": {
                "FUN_0800316c": {
                    "mask_and_clear_bit": 1,
                    "modify_bits": 1,
                    "modify_memory_bit": 1,
                    "update_array_bit": 1,
                    "update_array_entry": 1,
                    "update_bit": 5,
                    "update_bit_in_array": 3,
                    "update_bit_in_memory": 3,
                    "update_bit_value": 3,
                    "update_bits": 3,
                    "update_bitwise_value": 1,
                    "update_data": 1,
                    "update_memory": 1,
                    "update_memory_value": 3,
                    "update_value": 1,
                    "update_value_at_offset": 1,
                    "write_bit_to_memory": 1
                },
                "param_1": {
                    "bit_index": 3,
                    "bit_position": 10,
                    "entry_index": 1,
                    "index": 1,
                    "input": 1,
                    "input_bit": 1,
                    "input_value": 3,
                    "number": 1,
                    "original_value": 1,
                    "value": 8,
                    "value_to_insert": 1
                },
                "param_2": {
                    "address": 1,
                    "array": 10,
                    "array_address": 3,
                    "array_base_address": 1,
                    "array_pointer": 1,
                    "array_ptr": 2,
                    "array_start_index": 1,
                    "data": 1,
                    "data_array": 1,
                    "data_ptr": 1,
                    "memory_address": 9
                },
                "uVar1": {
                    "array_index": 1,
                    "bit_offset": 1,
                    "byte_index": 1,
                    "byte_offset": 2,
                    "index": 9,
                    "offset": 1,
                    "shift_amount": 1,
                    "shifted_bit": 1,
                    "shifted_bit_index": 1,
                    "shifted_bit_position": 1,
                    "shifted_index": 4,
                    "shifted_position": 3,
                    "shifted_value": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08004110"
            ],
            "code": "\nvoid update_bit_in_array_0800316c(uint bit_position,int array)\n\n{\n  uint index;\n  \n  index = (bit_position << 0x18) >> 0x1c;\n  *(uint *)(array + index * 4) = *(uint *)(array + index * 4) & ~(1 << (bit_position & 0xf));\n  return;\n}\n\n",
            "current_name": "update_bit_in_array_0800316c",
            "entrypoint": "0x0800316c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800316c": "update_bit_in_array_0800316c",
                "param_1": "bit_position",
                "param_2": "array",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800318c": {
            "additional_data": {
                "0": {
                    "0x40020000": 2,
                    "address0": 1,
                    "address_0": 2,
                    "address_a": 1,
                    "base_address": 3,
                    "base_address_0": 1,
                    "coeff_1": 1,
                    "memory_address_0": 1,
                    "output0": 1,
                    "value1": 2,
                    "value_0": 3,
                    "zero": 1
                },
                "1": {
                    "0x40020400": 2,
                    "address1": 1,
                    "address_1": 2,
                    "address_b": 1,
                    "base_address_1": 1,
                    "coeff_2": 1,
                    "memory_address_1": 1,
                    "one": 1,
                    "output1": 1,
                    "value2": 2,
                    "value_1": 3
                },
                "10": {
                    "0x40022800": 2,
                    "address10": 1,
                    "address_10": 2,
                    "address_k": 1,
                    "base_address_10": 1,
                    "coeff_11": 1,
                    "memory_address_10": 1,
                    "output10": 1,
                    "ten": 1,
                    "value11": 2,
                    "value_10": 3
                },
                "2": {
                    "0x40020800": 2,
                    "address2": 1,
                    "address_2": 2,
                    "address_c": 1,
                    "base_address_2": 1,
                    "coeff_3": 1,
                    "memory_address_2": 1,
                    "output2": 1,
                    "two": 1,
                    "value3": 2,
                    "value_2": 3
                },
                "3": {
                    "0x40020c00": 2,
                    "address3": 1,
                    "address_3": 2,
                    "address_d": 1,
                    "base_address_3": 1,
                    "coeff_4": 1,
                    "memory_address_3": 1,
                    "output3": 1,
                    "three": 1,
                    "value4": 2,
                    "value_3": 3
                },
                "4": {
                    "0x40021000": 2,
                    "address4": 1,
                    "address_4": 2,
                    "address_e": 1,
                    "base_address_4": 1,
                    "coeff_5": 1,
                    "four": 1,
                    "memory_address_4": 1,
                    "output4": 1,
                    "value5": 2,
                    "value_4": 3
                },
                "5": {
                    "0x40021400": 2,
                    "address5": 1,
                    "address_5": 2,
                    "address_f": 1,
                    "base_address_5": 1,
                    "coeff_6": 1,
                    "five": 1,
                    "memory_address_5": 1,
                    "output5": 1,
                    "value6": 2,
                    "value_5": 3
                },
                "6": {
                    "0x40021800": 2,
                    "address6": 1,
                    "address_6": 2,
                    "address_g": 1,
                    "base_address_6": 1,
                    "coeff_7": 1,
                    "memory_address_6": 1,
                    "output6": 1,
                    "six": 1,
                    "value7": 2,
                    "value_6": 3
                },
                "7": {
                    "0x40021c00": 2,
                    "address7": 1,
                    "address_7": 2,
                    "address_h": 1,
                    "base_address_7": 1,
                    "coeff_8": 1,
                    "memory_address_7": 1,
                    "output7": 1,
                    "seven": 1,
                    "value8": 2,
                    "value_7": 3
                },
                "8": {
                    "0x40022000": 2,
                    "address8": 1,
                    "address_8": 2,
                    "address_i": 1,
                    "base_address_8": 1,
                    "coeff_9": 1,
                    "eight": 1,
                    "memory_address_8": 1,
                    "output8": 1,
                    "value9": 2,
                    "value_8": 3
                },
                "9": {
                    "0x40022400": 2,
                    "address9": 1,
                    "address_9": 2,
                    "address_j": 1,
                    "base_address_9": 1,
                    "coeff_10": 1,
                    "memory_address_9": 1,
                    "nine": 1,
                    "output9": 1,
                    "value10": 2,
                    "value_9": 3
                },
                "FUN_0800318c": {
                    "get_address": 2,
                    "get_address_by_index": 1,
                    "get_address_from_index": 1,
                    "get_address_from_parameter": 1,
                    "get_base_address": 1,
                    "get_memory_address": 11,
                    "get_memory_address_for_index": 1,
                    "get_offset": 1,
                    "get_value_from_index": 1,
                    "get_value_from_param": 2,
                    "get_value_from_parameter": 1,
                    "map_param_to_address": 2,
                    "map_param_to_value": 3,
                    "map_parameter_value": 2,
                    "map_value_to_address": 1
                },
                "param_1": {
                    "address_index": 1,
                    "index": 9,
                    "input": 5,
                    "input_param": 1,
                    "input_value": 4,
                    "memory_index": 1,
                    "param": 4,
                    "parameter": 3,
                    "value": 3
                },
                "return": {
                    "memory_address": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080041bc"
            ],
            "code": "\nundefined4 get_memory_address_for_index_0800318c(undefined4 index)\n\n{\n  switch(index) {\n  case 0:\n    memory_address 0x40020000;\n  case 1:\n    memory_address 0x40020400;\n  case 2:\n    memory_address 0x40020800;\n  case 3:\n    memory_address 0x40020c00;\n  case 4:\n    memory_address 0x40021000;\n  case 5:\n    memory_address 0x40021400;\n  case 6:\n    memory_address 0x40021800;\n  case 7:\n    memory_address 0x40021c00;\n  case 8:\n    memory_address 0x40022000;\n  case 9:\n    memory_address 0x40022400;\n  case 10:\n    memory_address 0x40022800;\n  default:\n    memory_address 0;\n  }\n}\n\n",
            "current_name": "get_memory_address_for_index_0800318c",
            "entrypoint": "0x0800318c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800318c": "get_memory_address_for_index_0800318c",
                "param_1": "index",
                "return": "memory_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080031fc": {
            "additional_data": {
                "FUN_080031fc": {
                    "apply_permission": 1,
                    "map_address_to_value": 1,
                    "set_bit_and_return_address": 1,
                    "set_bit_value": 1,
                    "set_data_address": 1,
                    "set_device_flag": 1,
                    "set_flag": 1,
                    "set_flag_and_return_address": 6,
                    "set_flag_value": 1,
                    "set_hardware_configuration": 1,
                    "set_memory_access_permissions": 1,
                    "set_memory_address_flags": 1,
                    "set_memory_address_offset": 1,
                    "set_memory_address_permissions": 1,
                    "set_memory_flag": 1,
                    "set_memory_mapping": 2,
                    "set_memory_region": 2,
                    "set_memory_region_access": 1,
                    "set_memory_region_permissions": 2,
                    "set_permissions": 1,
                    "update_flags": 1,
                    "update_permissions": 1,
                    "update_register": 1
                },
                "_DAT_40023830": {
                    "data_address": 1,
                    "flag_register": 1,
                    "memory_address_permissions": 1,
                    "permissions": 1,
                    "permissions_register": 1,
                    "register_value": 1
                },
                "param_1": {
                    "address_index": 3,
                    "bit_index": 1,
                    "bit_position": 1,
                    "device_index": 1,
                    "flag": 8,
                    "flag_index": 2,
                    "hardware_index": 1,
                    "input_value": 1,
                    "mapping_index": 2,
                    "offset": 1,
                    "permission": 2,
                    "permission_level": 1,
                    "permission_type": 1,
                    "region_index": 5,
                    "register_value": 1
                },
                "uVar1": {
                    "address": 7,
                    "base_address": 10,
                    "mapped_address": 1,
                    "memory_address": 2,
                    "new_address": 5,
                    "result": 2,
                    "return_value": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_08003486",
                "FUN_08003978"
            ],
            "code": "\n\n\nundefined4 set_flag_and_return_address_080031fc(undefined4 flag)\n\n{\n  undefined4 base_address;\n  \n  switch(flag) {\n  case 0:\n    _DAT_40023830 = _DAT_40023830 | 1;\n    base_address = 0x40020000;\n    break;\n  case 1:\n    _DAT_40023830 = _DAT_40023830 | 2;\n    base_address = 0x40020400;\n    break;\n  case 2:\n    _DAT_40023830 = _DAT_40023830 | 4;\n    base_address = 0x40020800;\n    break;\n  case 3:\n    _DAT_40023830 = _DAT_40023830 | 8;\n    base_address = 0x40020c00;\n    break;\n  case 4:\n    _DAT_40023830 = _DAT_40023830 | 0x10;\n    base_address = 0x40021000;\n    break;\n  case 5:\n    _DAT_40023830 = _DAT_40023830 | 0x20;\n    base_address = 0x40021400;\n    break;\n  case 6:\n    _DAT_40023830 = _DAT_40023830 | 0x40;\n    base_address = 0x40021800;\n    break;\n  case 7:\n    _DAT_40023830 = _DAT_40023830 | 0x80;\n    base_address = 0x40021c00;\n    break;\n  case 8:\n    _DAT_40023830 = _DAT_40023830 | 0x100;\n    base_address = 0x40022000;\n    break;\n  case 9:\n    _DAT_40023830 = _DAT_40023830 | 0x200;\n    base_address = 0x40022400;\n    break;\n  case 10:\n    _DAT_40023830 = _DAT_40023830 | 0x400;\n    base_address = 0x40022800;\n    break;\n  default:\n    base_address = 0;\n  }\n  return base_address;\n}\n\n",
            "current_name": "set_flag_and_return_address_080031fc",
            "entrypoint": "0x080031fc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080031fc": "set_flag_and_return_address_080031fc",
                "param_1": "flag",
                "uVar1": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003380": {
            "additional_data": {
                "FUN_08003380": {
                    "check_pin": 1,
                    "check_pin_and_return_value": 1,
                    "check_pin_function": 1,
                    "check_pinmap": 7,
                    "check_pinmap_function": 10,
                    "check_pinmap_result": 1,
                    "check_valid_pin": 1,
                    "pinmap_check": 2,
                    "validate_pin": 3,
                    "validate_pinmap": 1,
                    "validate_pinmap_function": 1,
                    "verify_pin": 1,
                    "verify_pinmap_function": 1
                },
                "FUN_0800354a": {
                    "check_param_1": 1,
                    "check_value": 1,
                    "get_pinmap_value": 1
                },
                "iVar1": {
                    "pin_result": 1,
                    "pinmap_result": 4,
                    "result": 24,
                    "result_value": 1
                },
                "param_1": {
                    "arg1": 1,
                    "device": 4,
                    "device_id": 1,
                    "input1": 2,
                    "input_1": 2,
                    "input_param": 3,
                    "input_param1": 1,
                    "input_parameter": 1,
                    "input_value": 2,
                    "pin": 9,
                    "pin_number": 1,
                    "pin_value": 1,
                    "pinmap": 1,
                    "pinmap_param1": 1,
                    "pinmap_value": 1
                },
                "param_2": {
                    "address_parameter": 1,
                    "arg2": 1,
                    "data": 3,
                    "data1": 1,
                    "data_1": 1,
                    "input2": 1,
                    "input_2": 1,
                    "param2": 2,
                    "param_2": 7,
                    "pin": 3,
                    "pinmap_address": 1,
                    "pinmap_param2": 1,
                    "unused_param": 2,
                    "unused_param_1": 1,
                    "unused_parameter": 1
                },
                "param_3": {
                    "arg1": 1,
                    "arg1_parameter": 1,
                    "arg3": 1,
                    "data2": 1,
                    "data_1": 1,
                    "data_2": 1,
                    "data_param": 1,
                    "input3": 2,
                    "input_3": 2,
                    "input_param2": 1,
                    "map_data_1": 1,
                    "param": 1,
                    "param1": 1,
                    "param3": 2,
                    "param_1": 1,
                    "param_3": 10,
                    "pinmap_data": 1,
                    "pinmap_param3": 1,
                    "unused_param_2": 1
                },
                "param_4": {
                    "arg2": 1,
                    "arg2_parameter": 1,
                    "arg4": 1,
                    "data3": 1,
                    "data_2": 1,
                    "data_3": 1,
                    "data_size": 1,
                    "input4": 2,
                    "input_4": 2,
                    "input_param3": 1,
                    "map_data_2": 1,
                    "param2": 1,
                    "param4": 2,
                    "param_2": 1,
                    "param_4": 10,
                    "param_copy": 1,
                    "pinmap_param4": 1,
                    "pinmap_size": 1,
                    "unused_param_3": 1
                }
            },
            "called": [
                "FUN_0800354a"
            ],
            "calling": [
                "FUN_080033d8"
            ],
            "code": "\nundefined4 check_pinmap_function_08003380(undefined4 pin,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  \n  result = pinmap_function(pin,&DAT_08005a18,param_3,param_4,param_4);\n  if ((uint)(result << 0xc) >> 0x1b != 2) {\n    return 0;\n  }\n  return 0x10;\n}\n\n",
            "current_name": "check_pinmap_function_08003380",
            "entrypoint": "0x08003380",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003380": "check_pinmap_function_08003380",
                "iVar1": "result",
                "param_1": "pin"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800339c": {
            "additional_data": {
                "FUN_0800339c": {
                    "calculate_shifted_value": 1,
                    "check_pin_mapping": 1,
                    "check_pinmap": 1,
                    "check_pinmap_result": 1,
                    "get_pinmap": 1,
                    "get_pinmap_result": 1,
                    "map_pin_status": 1,
                    "map_pin_to_value": 1,
                    "map_pin_value_to_return": 1,
                    "perform_pinmap_operation": 1,
                    "pinmap_analysis": 1,
                    "pinmap_check": 8,
                    "pinmap_function": 1,
                    "pinmap_function_check": 1,
                    "pinmap_function_result": 1,
                    "pinmap_function_wrapper": 3,
                    "pinmap_process": 1,
                    "pinmap_result": 1,
                    "pinmap_to_value": 2
                },
                "iVar1": {
                    "pin_result": 1,
                    "pin_status": 1,
                    "pinmap_result": 8,
                    "pinmap_result_code": 1,
                    "result": 17,
                    "result_code": 1,
                    "return_value": 1
                },
                "param_1": {
                    "arg1": 1,
                    "data1": 1,
                    "device": 1,
                    "device_id": 3,
                    "device_type": 1,
                    "input": 1,
                    "input1": 3,
                    "input_1": 3,
                    "input_param": 6,
                    "input_param1": 3,
                    "input_param_1": 2,
                    "input_pin": 2,
                    "param_1": 2,
                    "pin": 1,
                    "pin_value": 1
                },
                "param_2": {
                    "arg2": 1,
                    "data2": 1,
                    "input2": 3,
                    "input_2": 3,
                    "input_param2": 3,
                    "input_param_2": 2,
                    "param_2": 7,
                    "pin": 1,
                    "pin_config": 1,
                    "pin_mapping": 1,
                    "pin_number": 1,
                    "unknown": 1,
                    "unused_param": 6
                },
                "param_3": {
                    "arg3": 1,
                    "buffer_param": 1,
                    "callback_param": 1,
                    "data3": 1,
                    "data_param": 3,
                    "input3": 3,
                    "input_3": 3,
                    "input_param3": 3,
                    "input_param_3": 2,
                    "param_3": 11,
                    "pin_mode": 1,
                    "subfunc_param_1": 1
                },
                "param_4": {
                    "arg4": 1,
                    "data4": 1,
                    "data_param": 1,
                    "extra_param": 1,
                    "flag_param": 1,
                    "input4": 3,
                    "input_4": 3,
                    "input_param4": 3,
                    "input_param_4": 2,
                    "param_4": 11,
                    "size_param": 2,
                    "subfunc_param_2": 1,
                    "unused_param": 1
                },
                "uVar2": {
                    "masked_result": 1,
                    "shifted_pin_result": 1,
                    "shifted_result": 20,
                    "shifted_value": 8
                }
            },
            "called": [
                "FUN_0800354a"
            ],
            "calling": [
                "FUN_08003414"
            ],
            "code": "\nundefined4 pinmap_function_check_0800339c(undefined4 input_param,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  uint shifted_result;\n  \n  result = pinmap_function(input_param,&DAT_08005a3c,param_3,param_4,param_4);\n  shifted_result = (uint)(result << 0xc) >> 0x1b;\n  if (shifted_result == 3) {\n    return 8;\n  }\n  if (shifted_result != 4) {\n    if (shifted_result != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "current_name": "pinmap_function_check_0800339c",
            "entrypoint": "0x0800339c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800339c": "pinmap_function_check_0800339c",
                "iVar1": "result",
                "param_1": "input_param",
                "uVar2": "shifted_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080033c8": {
            "additional_data": {
                "FUN_080033c8": {
                    "clear_bit": 1,
                    "clear_bit_31": 1,
                    "clear_bit_in_dat40023840": 1,
                    "clear_bit_in_data": 1,
                    "clear_bit_in_data_address": 1,
                    "clear_bit_in_memory": 3,
                    "clear_bit_in_pow_register": 1,
                    "clear_bit_in_register": 4,
                    "clear_bits_in_data_variable": 1,
                    "clear_flag": 2,
                    "clear_flag_bit": 2,
                    "clear_flag_bit_in_memory": 1,
                    "clear_flagged_bits": 1,
                    "clear_flags": 4,
                    "clear_high_bit": 1,
                    "clear_memory": 2,
                    "clear_memory_bit": 1,
                    "clear_memory_flags": 2,
                    "clear_top_bit_of_memory_address": 1
                },
                "_DAT_40023840": {
                    "data": 1,
                    "data_address": 1,
                    "flag": 2,
                    "flag_register": 2,
                    "flag_value": 2,
                    "flags": 3,
                    "memory_address": 3,
                    "memory_bit": 1,
                    "memory_flag": 1,
                    "memory_location": 1,
                    "old_flags": 1,
                    "register_value": 6,
                    "status_register": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08000f56"
            ],
            "code": "\n\n\nvoid clear_flag_bit_in_memory_080033c8(void)\n\n{\n  _DAT_40023840 = _DAT_40023840 & 0xdfffffff;\n  return;\n}\n\n",
            "current_name": "clear_flag_bit_in_memory_080033c8",
            "entrypoint": "0x080033c8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080033c8": "clear_flag_bit_in_memory_080033c8"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080033d8": {
            "additional_data": {
                "DAT_08005a18": {
                    "peripheral_data": 1
                },
                "FUN_08000f56": {
                    "pinmap_peripheral": 2
                },
                "FUN_08000f72": {
                    "init_dac": 1
                },
                "FUN_08003380": {
                    "dac_stop": 1
                },
                "FUN_080033d8": {
                    "stop_and_de_init_dac": 14,
                    "stop_and_de_init_pin": 1,
                    "stop_and_deinit_dac": 13,
                    "stop_and_deinit_dac_channel": 1,
                    "stop_and_deinitialize_dac": 2
                },
                "FUN_080034f4": {
                    "get_dac_channel": 2
                },
                "HAL_DAC_DeInit": {
                    "de_init_dac": 3,
                    "deinit_dac": 1
                },
                "HAL_DAC_Stop": {
                    "stop_dac": 4
                },
                "get_dac_channel": {
                    "fetch_dac_channel": 1,
                    "get_dac_channel": 2
                },
                "iVar1": {
                    "channel": 3,
                    "dac_channel": 14,
                    "dac_channel_type": 1
                },
                "local_1c": {
                    "dac_control": 1,
                    "dac_handle": 2,
                    "dac_peripheral": 1,
                    "dac_peripherals": 1,
                    "peripheral": 1,
                    "peripheral_array": 6,
                    "peripheral_data": 3,
                    "peripheral_info": 4,
                    "peripheral_list": 2,
                    "peripheral_pin": 1,
                    "pin_array": 1,
                    "pin_mappings": 1,
                    "pinmap_array": 1,
                    "pinmap_result": 3,
                    "pinmap_results": 2,
                    "pins_array": 1
                },
                "param_1": {
                    "device": 4,
                    "input_param": 1,
                    "param": 1,
                    "peripheral": 23,
                    "peripheral_address": 2
                },
                "pinmap_peripheral": {
                    "get_peripheral": 1,
                    "get_peripheral_info": 1,
                    "get_pinmap_peripheral": 1
                }
            },
            "called": [
                "FUN_08000f56",
                "FUN_080034f4",
                "FUN_08000f72",
                "FUN_08003380"
            ],
            "calling": [
                "FUN_08004110"
            ],
            "code": "\nvoid stop_and_deinitialize_dac_080033d8(undefined4 peripheral)\n\n{\n  int dac_channel;\n  int peripheral_array [5];\n  \n  peripheral_array[0] = get_peripheral_info(peripheral,&DAT_08005a18);\n  if ((peripheral_array[0] != 0) && ((dac_channel = get_dac_channel(peripheral), dac_channel == 0 || (dac_channel == 0x10)))) {\n    stop_dac(peripheral_array,dac_channel);\n    de_init_dac(peripheral_array);\n  }\n  return;\n}\n\n",
            "current_name": "stop_and_deinitialize_dac_080033d8",
            "entrypoint": "0x080033d8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080033d8": "stop_and_deinitialize_dac_080033d8",
                "HAL_DAC_DeInit": "de_init_dac",
                "HAL_DAC_Stop": "stop_dac",
                "iVar1": "dac_channel",
                "local_1c": "peripheral_array",
                "param_1": "peripheral",
                "pinmap_peripheral": "get_peripheral_info"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800340c": {
            "additional_data": {
                "FUN_0800340c": {
                    "disable_clock": 1,
                    "disable_timer": 4,
                    "disable_timer_clock": 26
                },
                "FUN_080035fc": {
                    "disable_timer": 1,
                    "process_data": 3,
                    "process_param": 2,
                    "process_param_1": 4,
                    "process_parameter": 7,
                    "process_parameter_1": 1,
                    "process_parameters": 1,
                    "process_values": 1,
                    "update_data": 1,
                    "update_param_1": 1,
                    "update_parameter": 5
                },
                "param_1": {
                    "data": 1,
                    "input_array": 1,
                    "param": 1,
                    "parameter": 1,
                    "parameter_1": 1,
                    "ptr_parameter": 1,
                    "timer_info": 1,
                    "timer_state_array": 1,
                    "values": 1
                }
            },
            "called": [
                "FUN_080035fc"
            ],
            "calling": [
                "FUN_0800268e"
            ],
            "code": "\nvoid disable_timer_clock_0800340c(void)\n\n{\n  timer_disable_clock();\n  return;\n}\n\n",
            "current_name": "disable_timer_clock_0800340c",
            "entrypoint": "0x0800340c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800340c": "disable_timer_clock_0800340c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003414": {
            "additional_data": {
                "DAT_08005a3c": {
                    "peripheral_data": 1,
                    "peripheral_mapping_data": 1,
                    "pin_data": 1,
                    "pinmap": 1
                },
                "FUN_08003414": {
                    "disable_pwm": 1,
                    "stop_and_deinit_pwm": 1,
                    "stop_or_deinit_pwm": 1,
                    "stop_peripheral_pwm": 3,
                    "stop_pwm": 4,
                    "stop_pwm_channel": 7,
                    "stop_pwm_if_needed": 1,
                    "stop_pwm_if_valid": 1,
                    "stop_pwm_if_valid_channel": 2,
                    "stop_pwm_if_valid_peripheral_and_channel": 1,
                    "stop_pwm_if_valid_pin": 1,
                    "stop_pwm_on_peripheral": 2,
                    "stop_pwm_peripheral": 2,
                    "stop_pwm_timers": 2,
                    "stop_tim_pwm": 1,
                    "stop_tim_pwm_if_condition_met": 1
                },
                "HAL_TIMEx_PWMN_Stop": {
                    "stop_ex_pwm_n": 1,
                    "stop_pwmn_channel": 1,
                    "stop_tim_ex_pwm": 3
                },
                "HAL_TIM_PWM_DeInit": {
                    "de_init_tim_pwm": 1,
                    "deinit_pwm": 1,
                    "deinit_pwm_channel": 1,
                    "deinit_tim_pwm": 1,
                    "deinitialize_tim_pwm": 1
                },
                "HAL_TIM_PWM_Stop": {
                    "stop_pwm": 1,
                    "stop_pwm_channel": 1,
                    "stop_tim_pwm": 3
                },
                "get_pwm_channel": {
                    "get_pwm_channel": 5
                },
                "iVar1": {
                    "channel": 2,
                    "channel_value": 1,
                    "pwm_channel": 15
                },
                "local_4c": {
                    "channel": 1,
                    "peripheral_array": 1,
                    "peripheral_channels": 2,
                    "peripheral_mapping": 1,
                    "peripheral_pins": 3,
                    "pin_mappings": 1,
                    "pinmap": 1,
                    "pinmap_array": 1,
                    "pinmap_result": 2,
                    "pinmap_results": 2,
                    "pinmap_values": 1,
                    "pins": 1,
                    "pwm_array": 2,
                    "pwm_channel": 1,
                    "pwm_channel_array": 3,
                    "pwm_channel_info": 1,
                    "pwm_channels": 3,
                    "pwm_handle": 1,
                    "pwm_instance": 1,
                    "timers_arr": 1
                },
                "param_1": {
                    "channel_pin": 1,
                    "peripheral": 19,
                    "peripheral_address": 7,
                    "peripheral_id": 1,
                    "pin": 2
                },
                "param_2": {
                    "channel": 1
                },
                "pinmap_function": {
                    "get_function_pin": 1,
                    "get_pin_function": 2,
                    "get_pinmap_function": 1,
                    "map_function": 1
                },
                "pinmap_peripheral": {
                    "get_peripheral_pin": 2,
                    "get_pin_peripheral": 1,
                    "get_pinmap_peripheral": 1,
                    "map_peripheral": 1
                },
                "uVar2": {
                    "function": 2,
                    "function_map": 2,
                    "function_mapping": 1,
                    "function_pin_mapping": 1,
                    "function_result": 3,
                    "function_value": 3,
                    "pin_function": 7,
                    "pinmap_func_result": 1,
                    "pinmap_function": 2
                }
            },
            "called": [
                "FUN_080034f4",
                "FUN_0800354a",
                "FUN_080028f0",
                "FUN_0800268e",
                "FUN_0800339c",
                "FUN_08002864"
            ],
            "calling": [
                "FUN_08004110"
            ],
            "code": "\nvoid stop_pwm_if_valid_peripheral_and_channel_08003414(undefined4 peripheral)\n\n{\n  int pwm_channel;\n  uint pin_function;\n  int peripheral_pins [16];\n  \n  peripheral_pins[0] = get_peripheral_pin(peripheral,&DAT_08005a3c);\n  if ((peripheral_pins[0] != 0) &&\n     ((((pwm_channel = get_pwm_channel(peripheral), pwm_channel == 0 || (pwm_channel == 4)) || (pwm_channel == 8)) ||\n      ((pwm_channel == 0xc || (pwm_channel == 0x18)))))) {\n    pin_function = get_pin_function(peripheral,&DAT_08005a3c);\n    if ((pin_function & 0x100000) == 0) {\n      stop_tim_pwm(peripheral_pins,pwm_channel);\n    }\n    else {\n      stop_tim_ex_pwm(peripheral_pins,pwm_channel);\n    }\n    de_init_tim_pwm(peripheral_pins);\n  }\n  return;\n}\n\n",
            "current_name": "stop_pwm_if_valid_peripheral_and_channel_08003414",
            "entrypoint": "0x08003414",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003414": "stop_pwm_if_valid_peripheral_and_channel_08003414",
                "HAL_TIMEx_PWMN_Stop": "stop_tim_ex_pwm",
                "HAL_TIM_PWM_DeInit": "de_init_tim_pwm",
                "HAL_TIM_PWM_Stop": "stop_tim_pwm",
                "iVar1": "pwm_channel",
                "local_4c": "peripheral_pins",
                "param_1": "peripheral",
                "pinmap_function": "get_pin_function",
                "pinmap_peripheral": "get_peripheral_pin",
                "uVar2": "pin_function"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800346c": {
            "additional_data": {
                "FUN_08000e30": {
                    "fetch_data": 1,
                    "get_some_value": 2,
                    "get_something": 1,
                    "get_system_status": 1,
                    "get_undefined_4": 1,
                    "get_unspecified_value": 1,
                    "initialize": 2,
                    "initialize_data": 1,
                    "initialize_module": 1,
                    "initialize_system": 4,
                    "initialize_system_data": 1,
                    "retrieve_data": 8,
                    "retrieve_function_signature": 1,
                    "retrieve_system_data": 1,
                    "retrieve_value": 1
                },
                "FUN_0800346c": {
                    "get_current_tick": 15,
                    "get_current_ticks": 1,
                    "get_current_time": 12,
                    "get_system_tick": 1,
                    "get_system_ticks": 1,
                    "get_system_time": 1
                },
                "HAL_GetTick": {
                    "get_system_tick": 1,
                    "get_tick": 2,
                    "retrieve_current_tick": 2
                }
            },
            "called": [
                "FUN_08000e30"
            ],
            "calling": [
                "FUN_08004204"
            ],
            "code": "\nvoid get_current_tick_0800346c(void)\n\n{\n  get_tick();\n  return;\n}\n\n",
            "current_name": "get_current_tick_0800346c",
            "entrypoint": "0x0800346c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800346c": "get_current_tick_0800346c",
                "HAL_GetTick": "get_tick"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003474": {
            "called": [],
            "calling": [
                "FUN_08003476"
            ],
            "code": "\nvoid FUNC_08003474(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08003474",
            "entrypoint": "0x08003474",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08003474": "FUNC_08003474"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08003476": {
            "additional_data": {
                "FUNC_08003474": {
                    "do_something": 1,
                    "execute_func": 1,
                    "increment_sys_tick": 2,
                    "increment_system_tick": 7,
                    "increment_tick": 8,
                    "init_function": 1,
                    "perform_action1": 1,
                    "reset_function": 1,
                    "update_function_a": 1
                },
                "FUN_08000e18": {
                    "custom_systick_handler": 2,
                    "function_e18": 1,
                    "handle_interrupt": 1,
                    "handle_no_os_sys_tick": 2,
                    "handle_no_os_systick": 5,
                    "handler": 1,
                    "initialize_system": 1,
                    "no_os_sys_tick_handler": 1,
                    "no_os_system_tick_handler": 3,
                    "no_os_systick_handler": 3,
                    "perform_action3": 1,
                    "perform_function_c": 1,
                    "perform_operation": 1,
                    "perform_systick_handler": 1
                },
                "FUN_08000f4e": {
                    "do_something": 1,
                    "execute_function_b": 1,
                    "function_f4_e": 1,
                    "handle_sys_tick_interrupt": 4,
                    "handle_sys_tick_irq": 7,
                    "handle_system_tick_interrupt": 1,
                    "handle_system_tick_irq": 1,
                    "initialize_hardware": 1,
                    "irq_handler": 1,
                    "perform_action2": 1,
                    "perform_operation": 1,
                    "system_tick_interrupt_handler": 1,
                    "system_tick_irq_handler": 1,
                    "systick_interrupt_handler": 1,
                    "systick_irq_handler": 1
                },
                "FUN_08003476": {
                    "handle_sys_tick": 2,
                    "handle_sys_tick_interrupt": 8,
                    "handle_system_tick": 5,
                    "handle_system_tick_event": 1,
                    "handle_system_tick_interrupt": 1,
                    "handle_systick_interrupt": 2,
                    "handle_tick": 1,
                    "handle_tick_interrupt": 3,
                    "handle_tick_irq": 1,
                    "increment_tick_and_handle_sys_tick": 1,
                    "tick_interrupt_handler": 1,
                    "update_system_tick": 5
                },
                "HAL_IncTick": {
                    "increment_system_tick": 6,
                    "increment_tick": 4
                },
                "HAL_SYSTICK_IRQHandler": {
                    "handle_sys_tick_interrupt": 6,
                    "handle_sys_tick_irq": 2,
                    "handle_systick_interrupt": 2
                },
                "PTR_FUN_08000e18": {
                    "custom_systick_handler": 1
                },
                "PTR_FUN_08000f4e": {
                    "handle_sys_tick_interrupt": 1
                },
                "PTR_FUN_08003474": {
                    "tick_increment": 1
                },
                "noOsSystickHandler": {
                    "custom_systick_handler": 1,
                    "handle_no_os_sys_tick": 7,
                    "handle_no_os_systick": 2
                }
            },
            "called": [
                "FUN_08003474",
                "FUN_08000f4e",
                "FUN_08000e18"
            ],
            "calling": [],
            "code": "\nvoid handle_sys_tick_interrupt_08003476(void)\n\n{\n  increment_system_tick();\n  handle_sys_tick_interrupt_08003476();\n  handle_no_os_sys_tick();\n  return;\n}\n\n",
            "current_name": "handle_sys_tick_interrupt_08003476",
            "entrypoint": "0x08003476",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003476": "handle_sys_tick_interrupt_08003476",
                "HAL_IncTick": "increment_system_tick",
                "HAL_SYSTICK_IRQHandler": "handle_sys_tick_interrupt",
                "noOsSystickHandler": "handle_no_os_sys_tick"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003486": {
            "additional_data": {
                "FUN_08000fb4": {
                    "calculate_pin_mask": 1
                },
                "FUN_080031fc": {
                    "set_gpio_port_clock": 1
                },
                "FUN_08003486": {
                    "configure_gpio_port": 1,
                    "init_gpio_pin": 1,
                    "init_gpio_port": 3,
                    "initialize_gpio": 17,
                    "initialize_gpio_pin": 1,
                    "initialize_gpio_port": 8
                },
                "HAL_GPIO_Init": {
                    "initialize_gpio_settings": 1
                },
                "local_18": {
                    "alternate_function": 1,
                    "config_param_3": 1,
                    "default_config": 2,
                    "gpio_mode": 1,
                    "local4": 1,
                    "local_18": 1,
                    "local_param4": 1,
                    "local_param_1": 3,
                    "local_param_4": 1,
                    "local_var": 1,
                    "local_var3": 2,
                    "local_var4": 1,
                    "local_variable": 2,
                    "local_variable3": 1,
                    "num_bits": 1,
                    "param4": 1,
                    "param_4": 1,
                    "pin_mode": 1
                },
                "local_1c": {
                    "config_param3": 1,
                    "config_param_2": 1,
                    "configuration_2_copy": 1,
                    "local3": 1,
                    "local_1c": 1,
                    "local_param3": 4,
                    "local_param_3": 7,
                    "local_var2": 2,
                    "local_var3": 1,
                    "local_variable2": 1,
                    "mode_param": 1,
                    "param3": 2,
                    "param3_copy": 3,
                    "param_3": 2,
                    "param_3_copy": 2,
                    "pull_mode_new": 1
                },
                "local_20": {
                    "config_param": 1,
                    "config_param2": 1,
                    "config_param_1": 1,
                    "configuration_1_copy": 1,
                    "input_mode_new": 1,
                    "local2": 1,
                    "local_20": 1,
                    "local_param2": 4,
                    "local_param_2": 7,
                    "local_var1": 2,
                    "local_var2": 1,
                    "local_variable1": 1,
                    "param2": 2,
                    "param2_copy": 3,
                    "param_2": 2,
                    "param_2_copy": 2
                },
                "local_24": {
                    "gpio_pin": 3,
                    "gpio_pin_mask": 1,
                    "pin_bit": 1,
                    "pin_bitmask": 1,
                    "pin_mask": 24,
                    "pin_setting": 1
                },
                "param_1": {
                    "pin": 3,
                    "pin_number": 26,
                    "port_number": 2
                },
                "param_2": {
                    "config_value": 1,
                    "configuration": 1,
                    "configuration_1": 1,
                    "input_mode": 1,
                    "param2": 15,
                    "param_2": 11,
                    "param_clock": 1
                },
                "param_3": {
                    "configuration_2": 1,
                    "mode": 1,
                    "param3": 15,
                    "param_3": 11,
                    "param_init": 1,
                    "pull_mode": 1,
                    "pull_value": 1
                },
                "uVar1": {
                    "clock_setting": 2,
                    "gpio_clock": 5,
                    "gpio_port": 13,
                    "gpio_port_clock": 1,
                    "gpio_register": 1,
                    "port": 3,
                    "port_address": 1,
                    "port_clock": 4,
                    "port_number": 1
                }
            },
            "called": [
                "FUN_08000fb4",
                "FUN_080031fc"
            ],
            "calling": [
                "FUN_08004110"
            ],
            "code": "\nvoid initialize_gpio_port_08003486(uint pin_number,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 gpio_port;\n  uint pin_mask;\n  undefined4 local_param_2;\n  undefined4 local_param_3;\n  undefined4 local_param_1;\n  \n  gpio_port = set_GPIO_Port_Clock((pin_number << 0x18) >> 0x1c);\n  pin_mask = 1 << (pin_number & 0xf) & 0xffff;\n  local_param_1 = 2;\n  local_param_2 = param2;\n  local_param_3 = param3;\n  initialize_gpio_settings(gpio_port,&pin_mask);\n  return;\n}\n\n",
            "current_name": "initialize_gpio_port_08003486",
            "entrypoint": "0x08003486",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003486": "initialize_gpio_port_08003486",
                "HAL_GPIO_Init": "initialize_gpio_settings",
                "local_18": "local_param_1",
                "local_1c": "local_param_3",
                "local_20": "local_param_2",
                "local_24": "pin_mask",
                "param_1": "pin_number",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "gpio_port"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080034b6": {
            "additional_data": {
                "FUN_08001198": {
                    "configure_pin": 1,
                    "function": 1,
                    "perform_action": 1,
                    "some_function": 1
                },
                "FUN_080034b6": {
                    "control_gpio": 1,
                    "set_gpio": 1,
                    "set_gpio_level": 3,
                    "set_gpio_pin": 1,
                    "set_gpio_pin_state": 1,
                    "set_gpio_state": 2,
                    "set_pin_state": 2,
                    "toggle_gpio_pin": 1,
                    "toggle_pin_state": 2,
                    "update_gpio_pin_state": 1,
                    "update_gpio_state": 1,
                    "write_gpio": 1,
                    "write_gpio_flag": 1,
                    "write_gpio_pin": 1,
                    "write_gpio_state": 1,
                    "write_pin": 3,
                    "write_pin_based_on_condition": 2,
                    "write_pin_based_on_state": 1,
                    "write_pin_state": 4,
                    "write_pin_value": 1
                },
                "HAL_GPIO_WritePin": {
                    "set_gpio_state": 1,
                    "set_pin_state": 3,
                    "write_gpio": 1,
                    "write_gpio_state": 1,
                    "write_pin": 4,
                    "write_pin_state": 2
                },
                "param_1": {
                    "device": 1,
                    "gpio": 3,
                    "gpio_pin": 1,
                    "gpio_port": 19,
                    "param1": 1,
                    "pin_port": 1,
                    "port": 4,
                    "port_pin_param": 1
                },
                "param_2": {
                    "gpio_pin": 19,
                    "gpio_pin_state": 1,
                    "param2": 1,
                    "pin": 8,
                    "pin_number": 1,
                    "pin_param": 1
                },
                "param_3": {
                    "condition": 2,
                    "flag_param": 1,
                    "gpio_level": 1,
                    "level": 2,
                    "param3": 1,
                    "pin_state": 6,
                    "state": 16,
                    "value": 2
                },
                "param_4": {
                    "arg": 1,
                    "arg1": 1,
                    "data": 1,
                    "param": 11,
                    "param4": 5,
                    "param_4": 5,
                    "param_unused": 1,
                    "param_value": 1,
                    "pin_config": 1,
                    "pin_reset": 1,
                    "timeout": 1,
                    "unk": 1,
                    "unused_param": 1
                }
            },
            "called": [
                "FUN_08001198"
            ],
            "calling": [
                "FUN_080041bc"
            ],
            "code": "\nvoid write_pin_based_on_state_080034b6(undefined4 gpio_port,undefined2 gpio_pin,int state,undefined4 param)\n\n{\n  if (state == 0) {\n    write_pin(gpio_port,gpio_pin,0,param,param);\n    return;\n  }\n  write_pin(gpio_port,gpio_pin,1,param,param);\n  return;\n}\n\n",
            "current_name": "write_pin_based_on_state_080034b6",
            "entrypoint": "0x080034b6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080034b6": "write_pin_based_on_state_080034b6",
                "HAL_GPIO_WritePin": "write_pin",
                "param_1": "gpio_port",
                "param_2": "gpio_pin",
                "param_3": "state",
                "param_4": "param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080034ce": {
            "additional_data": {
                "FUN_08000c8c": {
                    "configure_hal": 2,
                    "configure_hardware": 2,
                    "initialize_hal": 6,
                    "initialize_hardware": 3,
                    "initialize_peripheral": 1,
                    "perform_hal_init": 1,
                    "perform_hardware_initialization": 1,
                    "perform_initialization": 3,
                    "perform_operation": 1,
                    "perform_task": 1,
                    "perform_task1": 1,
                    "sub_function_1": 1
                },
                "FUN_08000de4": {
                    "configure_system_clock": 12,
                    "get_config_value": 1,
                    "get_data": 1,
                    "get_system_clock_configuration": 1,
                    "get_system_config": 1,
                    "get_system_configuration": 1,
                    "initialize_clock": 1,
                    "perform_system_clock_config": 1,
                    "perform_task2": 1,
                    "read_data": 1,
                    "retrieve_data": 1,
                    "sub_function_2": 1
                },
                "FUN_080034ce": {
                    "initialize": 1,
                    "initialize_and_configure": 1,
                    "initialize_and_configure_system": 1,
                    "initialize_hal_and_clock": 1,
                    "initialize_hal_and_system_clock": 2,
                    "initialize_hardware": 3,
                    "initialize_hw_and_clock": 1,
                    "initialize_system": 21
                },
                "HAL_Init": {
                    "initialize_hal": 8,
                    "initialize_hardware": 2,
                    "initialize_hardware_hal": 1
                },
                "PTR_FUN_08000c8c": {
                    "initialize_hal": 1
                },
                "PTR_FUN_08000de4": {
                    "configure_system_clock": 1
                },
                "SystemClock_Config": {
                    "configure_system_clock": 12
                }
            },
            "called": [
                "FUN_08000c8c",
                "FUN_08000de4"
            ],
            "calling": [
                "FUN_08000d8e"
            ],
            "code": "\nvoid initialize_hal_and_system_clock_080034ce(void)\n\n{\n  initialize_hal();\n  configure_system_clock();\n  return;\n}\n\n",
            "current_name": "initialize_hal_and_system_clock_080034ce",
            "entrypoint": "0x080034ce",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080034ce": "initialize_hal_and_system_clock_080034ce",
                "HAL_Init": "initialize_hal",
                "SystemClock_Config": "configure_system_clock"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080034da": {
            "additional_data": {
                "DAT_": {
                    "": 1
                },
                "FUN_080034da": {
                    "find_element_index": 1,
                    "find_matching_value": 1,
                    "find_value": 3,
                    "find_value_in_array": 14,
                    "find_value_index": 11
                },
                "PTR_": {
                    "": 1
                },
                "PTR_param_2": {
                    "array_pointer": 1
                },
                "param_1": {
                    "search_value": 2,
                    "target_value": 10,
                    "value": 11,
                    "value_to_find": 7
                },
                "param_2": {
                    "array": 24,
                    "array_of_values": 3,
                    "array_ptr": 3
                },
                "param_2_1": {
                    "current_element": 1
                },
                "param_2_2": {
                    "next_element": 1
                },
                "param_2_3": {
                    "third_element": 1
                },
                "param_2_6": {
                    "sixth_element": 1
                }
            },
            "called": [
                "FUN_080034da"
            ],
            "calling": [
                "FUN_080034f4",
                "FUN_080034da"
            ],
            "code": "\nundefined4 find_value_in_array_080034da(int value,short *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (*array == value) break;\n    array = array + 6;\n  }\n  return *(undefined4 *)(array + 2);\n}\n\n",
            "current_name": "find_value_in_array_080034da",
            "entrypoint": "0x080034da",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080034da": "find_value_in_array_080034da",
                "param_1": "value",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080034f4": {
            "additional_data": {
                "FUN_080034da": {
                    "find_peripheral": 1,
                    "find_peripheral_data": 1,
                    "find_peripheral_helper": 1,
                    "find_peripheral_with_data": 1
                },
                "FUN_080034f4": {
                    "find_and_return_peripheral": 1,
                    "find_peripheral": 26,
                    "find_peripheral_by_param": 1,
                    "find_peripheral_device": 2,
                    "pinmap_resolve_peripheral": 1
                },
                "param_1": {
                    "device_id": 2,
                    "input": 5,
                    "input_param": 4,
                    "input_parameter": 1,
                    "input_value": 14,
                    "peripheral_id": 2,
                    "peripheral_index": 1,
                    "value": 2
                },
                "param_2": {
                    "data": 2,
                    "output_param": 1,
                    "result": 1
                },
                "uVar1": {
                    "peripheral": 7,
                    "peripheral_addr": 1,
                    "peripheral_address": 3,
                    "peripheral_device": 1,
                    "peripheral_found": 7,
                    "peripheral_id": 1,
                    "peripheral_result": 2,
                    "peripheral_value": 2,
                    "result": 5
                }
            },
            "called": [
                "FUN_080034da"
            ],
            "calling": [
                "FUN_080033d8",
                "FUN_08003414",
                "FUN_08003d18",
                "FUN_08003cc8",
                "FUN_08003978"
            ],
            "code": "\nundefined4 find_peripheral_device_080034f4(int input_value)\n\n{\n  undefined4 peripheral_found;\n  \n  if (input_value != -1) {\n    peripheral_found = pinmap_find_peripheral();\n    return peripheral_found;\n  }\n  return 0;\n}\n\n",
            "current_name": "find_peripheral_device_080034f4",
            "entrypoint": "0x080034f4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080034f4": "find_peripheral_device_080034f4",
                "param_1": "input_value",
                "uVar1": "peripheral_found"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003506": {
            "additional_data": {
                "FUN_08003506": {
                    "find_element": 1,
                    "find_element_by_value": 1,
                    "find_element_index": 1,
                    "find_number_in_array": 1,
                    "find_param_value": 5,
                    "find_parameter_value": 2,
                    "find_short_in_array": 1,
                    "find_target_value": 1,
                    "find_value": 3,
                    "find_value_by_id": 1,
                    "find_value_by_index": 2,
                    "find_value_in_array": 10,
                    "find_value_index": 2
                },
                "newVar_1": {
                    "current_index": 1
                },
                "newVar_2": {
                    "current_element": 1
                },
                "param_1": {
                    "element": 1,
                    "id": 1,
                    "index": 2,
                    "number_to_find": 1,
                    "search_value": 3,
                    "target": 3,
                    "target_value": 7,
                    "value": 9,
                    "value_to_find": 4
                },
                "param_2": {
                    "array": 15,
                    "array_ptr": 4,
                    "data": 4,
                    "data_array": 5,
                    "param_array": 1,
                    "parameters": 1,
                    "short_array": 1
                },
                "ptr": {
                    "array_ptr": 1
                }
            },
            "called": [
                "FUN_08003506"
            ],
            "calling": [
                "FUN_0800351e",
                "FUN_08003506"
            ],
            "code": "\nint find_value_in_array_08003506(int value,short *array)\n\n{\n  while( true ) {\n    if (*(int *)(array + 2) == 0) {\n      return -1;\n    }\n    if (*(int *)(array + 2) == value) break;\n    array = array + 6;\n  }\n  return (int)*array;\n}\n\n",
            "current_name": "find_value_in_array_08003506",
            "entrypoint": "0x08003506",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003506": "find_value_in_array_08003506",
                "param_1": "value",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800351e": {
            "additional_data": {
                "FUN_08003506": {
                    "check_validity": 1
                },
                "FUN_0800351e": {
                    "find_pin": 4,
                    "find_pin_by_id": 1,
                    "find_pin_by_param": 3,
                    "find_pin_from_param": 3,
                    "find_pin_number": 1,
                    "find_pin_or_default": 5,
                    "find_pin_or_error": 3,
                    "find_pin_or_fail": 1,
                    "find_specific_pin": 1,
                    "find_valid_pin": 8,
                    "get_pin": 1
                },
                "param_1": {
                    "input_param": 3,
                    "input_val": 1,
                    "input_value": 1,
                    "param": 1,
                    "pin": 3,
                    "pin_available": 1,
                    "pin_count": 4,
                    "pin_id": 8,
                    "pin_index": 1,
                    "pin_number": 4,
                    "pin_param": 2,
                    "pin_value": 2
                },
                "uVar1": {
                    "found_pin": 4,
                    "pin_found": 3,
                    "pin_mapping_result": 1,
                    "pin_number": 1,
                    "pin_result": 12,
                    "pin_value": 1,
                    "result": 6,
                    "valid_pin": 2
                }
            },
            "called": [
                "FUN_08003506"
            ],
            "calling": [
                "FUN_0800447c",
                "FUN_08003cc8"
            ],
            "code": "\nundefined4 find_valid_pin_0800351e(int pin_id)\n\n{\n  undefined4 pin_result;\n  \n  if (pin_id != 0) {\n    pin_result = pinmap_find_pin();\n    return pin_result;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "find_valid_pin_0800351e",
            "entrypoint": "0x0800351e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800351e": "find_valid_pin_0800351e",
                "param_1": "pin_id",
                "uVar1": "pin_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800352e": {
            "additional_data": {
                "FUN_0800352e": {
                    "find_index_by_value": 1,
                    "find_index_in_array": 1,
                    "find_matching_value": 1,
                    "find_offset": 1,
                    "find_param_in_array": 1,
                    "find_parameter_value": 1,
                    "find_value": 5,
                    "find_value_in_array": 8,
                    "find_value_in_list": 2,
                    "find_value_index": 9,
                    "find_value_position": 1
                },
                "break": {
                    "value_found": 1
                },
                "param_1": {
                    "search_value": 3,
                    "target": 2,
                    "target_value": 8,
                    "value": 10,
                    "value_to_find": 8
                },
                "param_2": {
                    "array": 20,
                    "array_of_values": 4,
                    "array_ptr": 2,
                    "array_to_search": 1,
                    "list": 2,
                    "short_array": 1,
                    "values_array": 1
                },
                "return": {
                    "found_value": 1,
                    "matching_value": 1,
                    "result": 1
                }
            },
            "called": [
                "FUN_0800352e"
            ],
            "calling": [
                "FUN_0800354a",
                "FUN_0800352e"
            ],
            "code": "\nundefined4 find_index_by_value_0800352e(int value,short *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      matching_value 0xffffffff;\n    }\n    if (*array == value) value_found;\n    array = array + 6;\n  }\n  matching_value *(undefined4 *)(array + 4);\n}\n\n",
            "current_name": "find_index_by_value_0800352e",
            "entrypoint": "0x0800352e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800352e": "find_index_by_value_0800352e",
                "break": "value_found",
                "param_1": "value",
                "param_2": "array",
                "return": "matching_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800354a": {
            "additional_data": {
                "FUN_0800354a": {
                    "find_and_return_function": 1,
                    "find_and_return_function_address": 1,
                    "find_and_return_function_result": 1,
                    "find_function": 7,
                    "find_function_address": 1,
                    "find_function_by_param": 1,
                    "find_function_entry": 1,
                    "find_function_in_pinmap": 1,
                    "find_function_mapping": 1,
                    "find_function_or_default": 1,
                    "find_function_or_error": 1,
                    "find_function_or_return_error": 1,
                    "find_function_or_return_minus_one": 2,
                    "find_function_result": 5,
                    "find_pin_function": 4,
                    "find_pinmap_function": 2
                },
                "param_1": {
                    "input": 2,
                    "input_number": 1,
                    "input_param": 5,
                    "input_parameter": 1,
                    "input_value": 16,
                    "param": 1,
                    "pin": 2,
                    "pin_id": 1,
                    "pin_number": 2
                },
                "uVar1": {
                    "found_function": 1,
                    "function": 1,
                    "function_address": 2,
                    "function_entry": 1,
                    "function_mapping": 1,
                    "function_result": 12,
                    "pin_function": 1,
                    "pinmap_function": 1,
                    "result": 9
                }
            },
            "called": [
                "FUN_0800352e"
            ],
            "calling": [
                "FUN_08003414",
                "FUN_08003380",
                "FUN_0800339c",
                "FUN_08003978"
            ],
            "code": "\nundefined4 find_and_return_function_result_0800354a(int input_value)\n\n{\n  undefined4 function_result;\n  \n  if (input_value == -1) {\n    return 0xffffffff;\n  }\n  function_result = pinmap_find_function();\n  return function_result;\n}\n\n",
            "current_name": "find_and_return_function_result_0800354a",
            "entrypoint": "0x0800354a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800354a": "find_and_return_function_result_0800354a",
                "param_1": "input_value",
                "uVar1": "function_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800355e": {
            "additional_data": {
                "FUN_0800355e": {
                    "check_if_value_exists": 1,
                    "check_match": 1,
                    "check_param": 1,
                    "check_value_in_array": 3,
                    "compare_value_with_sequence": 1,
                    "find_matching_value": 1,
                    "find_number_in_array": 2,
                    "find_value": 4,
                    "find_value_in_array": 9,
                    "find_value_in_list": 1,
                    "find_value_index": 5,
                    "linear_search": 1,
                    "lookup_value_in_array": 1
                },
                "param_1": {
                    "input_value": 2,
                    "number": 2,
                    "search_value": 4,
                    "target": 1,
                    "target_value": 1,
                    "value": 14,
                    "value_to_check": 3,
                    "value_to_find": 4
                },
                "param_2": {
                    "array": 25,
                    "array_ptr": 1,
                    "list": 1,
                    "sequence": 1,
                    "values_array": 2,
                    "values_list": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004110"
            ],
            "code": "\nundefined4 find_value_in_array_0800355e(int value,short *array)\n\n{\n  if (value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (value == *array) break;\n    array = array + 6;\n  }\n  return 1;\n}\n\n",
            "current_name": "find_value_in_array_0800355e",
            "entrypoint": "0x0800355e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800355e": "find_value_in_array_0800355e",
                "param_1": "value",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003582": {
            "additional_data": {
                "FUN_08003582": {
                    "check_and_return": 1,
                    "compare_and_return": 1,
                    "compare_and_return_equal": 1,
                    "compare_and_return_non_zero": 3,
                    "compare_and_return_smaller": 6,
                    "compare_and_return_smaller_value": 1,
                    "compare_and_return_zero": 1,
                    "compare_and_select": 1,
                    "compare_and_set_to_zero": 1,
                    "compare_values": 1,
                    "find_different_parameter": 1,
                    "find_different_value": 1,
                    "find_equal_or_zero": 1,
                    "find_non_zero_param": 1,
                    "find_non_zero_parameter": 1,
                    "find_non_zero_value": 2,
                    "find_nonzero_param": 3,
                    "find_nonzero_parameter": 1,
                    "param_check": 1,
                    "return_bigger_value": 1,
                    "return_non_zero": 1
                },
                "param_1": {
                    "first_number": 3,
                    "first_parameter": 2,
                    "input_1": 1,
                    "num1": 3,
                    "number1": 1,
                    "value1": 16,
                    "value_1": 4,
                    "value_a": 1
                },
                "param_2": {
                    "input_2": 1,
                    "num2": 3,
                    "number2": 1,
                    "second_number": 3,
                    "second_parameter": 2,
                    "value2": 16,
                    "value_2": 4,
                    "value_b": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003978"
            ],
            "code": "\nint compare_and_return_smaller_value_08003582(int value1,int value2)\n\n{\n  if (value1 != value2) {\n    if (value1 == 0) {\n      return value2;\n    }\n    if (value2 == 0) {\n      return value1;\n    }\n    value1 = 0;\n  }\n  return value1;\n}\n\n",
            "current_name": "compare_and_return_smaller_value_08003582",
            "entrypoint": "0x08003582",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003582": "compare_and_return_smaller_value_08003582",
                "param_1": "value1",
                "param_2": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003594": {
            "additional_data": {
                "DAT_20000188": {
                    "callback": 1,
                    "callback_func_ptr": 1,
                    "callback_function": 9,
                    "callback_function_pointer": 3,
                    "callback_function_ptr": 4,
                    "function_pointer": 1
                },
                "DAT_200001ac": {
                    "callback_argument": 6,
                    "callback_data": 4,
                    "callback_function_parameter": 3,
                    "callback_parameter": 5,
                    "data": 1,
                    "data_to_pass": 1,
                    "function_argument": 1
                },
                "FUN_08003594": {
                    "execute_call_back": 1,
                    "execute_callback": 18,
                    "execute_callback_function": 10,
                    "execute_callback_if_valid": 1,
                    "execute_function": 1
                },
                "PTR_FUN_08000188": {
                    "callback_function": 1
                },
                "callbackFunction": {
                    "": 1,
                    "callback": 1,
                    "callback_function": 2
                },
                "callback_data": {
                    "": 1
                },
                "callback_function": {
                    "": 1,
                    "callback_function": 2
                },
                "code": {
                    "callback": 1,
                    "callback_function": 7
                },
                "executeCallback": {
                    "execute_callback": 2
                },
                "executeCallbackFunction": {
                    "": 1
                },
                "execute_callback": {
                    "execute_callback": 2
                },
                "execute_callback_function": {
                    "execute_callback": 1
                },
                "execute_callback_function_PARAM_1": {
                    "callback_parameter": 1
                },
                "execute_callback_function_PARAM_2": {
                    "callback_parameter_2": 1
                },
                "execute_callback_if_valid": {
                    "": 1
                },
                "execute_callback_if_valid_parameter": {
                    "callback_data": 1
                },
                "resultData": {
                    "data": 1
                },
                "srcCallback": {
                    "callback_function": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800262c"
            ],
            "code": "\nvoid execute_callback_function_08003594(void)\n\n{\n  if (DAT_20000188 != (callback_function *)0x0) {\n    (*DAT_20000188)(DAT_200001ac);\n  }\n  return;\n}\n\n",
            "current_name": "execute_callback_function_08003594",
            "entrypoint": "0x08003594",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003594": "execute_callback_function_08003594",
                "code": "callback_function"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080035bc": {
            "additional_data": {
                "FUN_080035bc": {
                    "initialize_data": 2,
                    "initialize_hardware": 1,
                    "initialize_memory": 6,
                    "initialize_peripherals": 1,
                    "initialize_registers": 6,
                    "initialize_system": 14,
                    "initialize_system_function": 1
                },
                "_DAT_40023800": {
                    "config_register": 1,
                    "configuration": 1,
                    "configuration_reg": 1,
                    "configuration_register": 1,
                    "control_register": 7,
                    "memory_control_register": 1,
                    "memory_status_register": 1,
                    "peripheral_control_register": 1,
                    "register3": 2,
                    "register_config": 1,
                    "register_value": 2,
                    "sys_control_reg": 1,
                    "system_config": 3,
                    "system_configuration": 1,
                    "system_configuration_register": 1,
                    "system_control": 3,
                    "system_control_register": 1,
                    "system_status": 1
                },
                "_DAT_40023804": {
                    "base_address": 11,
                    "config_register": 1,
                    "data_address": 1,
                    "memory_address": 2,
                    "memory_base": 1,
                    "memory_base_address": 1,
                    "memory_configuration_register": 1,
                    "peripheral_base_address": 1,
                    "register2": 2,
                    "register_address": 1,
                    "screen_address": 1,
                    "sys_config_reg": 1,
                    "system_config": 2,
                    "system_config_register": 1,
                    "system_configuration": 1,
                    "system_control": 1,
                    "timer_control_register": 1,
                    "timer_reg": 1
                },
                "_DAT_40023808": {
                    "count_variable": 1,
                    "flag": 1,
                    "memory_control_register": 1,
                    "memory_value": 1,
                    "register1": 2,
                    "status_flag": 1,
                    "status_reg": 1,
                    "system_data": 1,
                    "system_initialized_flag": 1,
                    "system_status": 1,
                    "system_status_flag": 1,
                    "system_status_register": 1
                },
                "_DAT_4002380c": {
                    "additional_memory_control_register": 1,
                    "control_value": 1,
                    "counter": 3,
                    "counter_reg": 1,
                    "flag_variable": 1,
                    "interrupt_control": 1,
                    "register4": 2,
                    "system_control": 1,
                    "system_counter": 1,
                    "system_counter_register": 1,
                    "system_error": 1,
                    "system_status": 1
                },
                "_DAT_e000ed08": {
                    "exception_register": 1,
                    "interrupt_config": 3,
                    "interrupt_configuration": 1,
                    "interrupt_control": 2,
                    "interrupt_control_register": 5,
                    "interrupt_ctrl_reg": 1,
                    "interrupt_enable_flag": 1,
                    "interrupt_mask_register": 1,
                    "interrupt_reg": 1,
                    "interrupt_register": 7,
                    "register5": 2,
                    "sys_interrupt_reg": 1,
                    "system_control_register": 1,
                    "system_interrupt": 1,
                    "system_interrupt_control_register": 1,
                    "system_interrupt_flag": 1,
                    "vector_table": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08000d3c"
            ],
            "code": "\n\n\nvoid initialize_system_function_080035bc(void)\n\n{\n  _DAT_40023808 = 0;\n  _DAT_40023804 = 0x24003010;\n  _DAT_40023800 = _DAT_40023800 & 0xfef2ffff | 1;\n  _DAT_4002380c = 0;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "current_name": "initialize_system_function_080035bc",
            "entrypoint": "0x080035bc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080035bc": "initialize_system_function_080035bc"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080035fc": {
            "additional_data": {
                "0x40000000": {
                    "control_b_bit_0": 1,
                    "dma_ctrl_reg": 1,
                    "flag_2": 1
                },
                "0x40000400": {
                    "control_b_bit_1": 1,
                    "flag_3": 1,
                    "uart_ctrl_reg": 1
                },
                "0x40000800": {
                    "control_b_bit_2": 1,
                    "flag_4": 1,
                    "spi_ctrl_reg": 1
                },
                "0x40000c00": {
                    "control_b_bit_3": 1,
                    "flag_5": 1,
                    "i2_c_ctrl_reg": 1
                },
                "0x40001000": {
                    "control_b_bit_4": 1,
                    "flag_6": 1,
                    "gpio_ctrl_reg": 1
                },
                "0x40001400": {
                    "control_b_bit_5": 1,
                    "flag_7": 1,
                    "timer_ctrl_reg": 1
                },
                "0x40001800": {
                    "control_b_bit_6": 1,
                    "flag_12": 1,
                    "lcd_ctrl_reg": 1
                },
                "0x40001c00": {
                    "control_b_bit_7": 1,
                    "flag_13": 1,
                    "usb_ctrl_reg": 1
                },
                "0x40002000": {
                    "control_b_bit_8": 1,
                    "ethernet_ctrl_reg": 1,
                    "flag_14": 1
                },
                "0x40010000": {
                    "control_a_bit_0": 1,
                    "flag_1": 1,
                    "intr_ctrl_reg": 1
                },
                "0x40010400": {
                    "adc_ctrl_reg": 1,
                    "control_a_bit_1": 1,
                    "flag_8": 1
                },
                "0x40014000": {
                    "control_a_bit_2": 1,
                    "flag_9": 1,
                    "pwm_ctrl_reg": 1
                },
                "0x40014400": {
                    "control_a_bit_3": 1,
                    "dac_ctrl_reg": 1,
                    "flag_10": 1
                },
                "0x40014800": {
                    "control_a_bit_4": 1,
                    "flag_11": 1,
                    "rtc_ctrl_reg": 1
                },
                "FUN_080035fc": {
                    "apply_flag_mask": 1,
                    "clear_bit_flags": 1,
                    "clear_flags": 3,
                    "configure_registers": 1,
                    "reset_memory": 1,
                    "set_control_bits": 1,
                    "update_config": 1,
                    "update_config_values": 1,
                    "update_configs": 1,
                    "update_configuration": 1,
                    "update_configuration_values": 1,
                    "update_control_register": 1,
                    "update_data": 1,
                    "update_data_based_on_param": 1,
                    "update_data_based_on_value": 1,
                    "update_data_permissions": 1,
                    "update_flags": 1,
                    "update_flags_based_on_param": 2,
                    "update_flags_based_on_value": 2,
                    "update_memory_flags": 1,
                    "update_register_value": 1,
                    "update_register_values": 1,
                    "update_registers": 1,
                    "update_settings": 3,
                    "update_variables_based_on_value": 1
                },
                "_DAT_40023840": {
                    "config_register2": 2,
                    "control_register_1": 1,
                    "control_register_b": 1,
                    "data_2": 1,
                    "data_variable1": 1,
                    "device_config2": 1,
                    "device_config_two": 1,
                    "flag1": 1,
                    "flag2": 2,
                    "flag_b": 1,
                    "flag_register2": 1,
                    "flag_register_b": 1,
                    "flag_value2": 1,
                    "mem2": 1,
                    "memory_flag_b": 1,
                    "register_2": 2,
                    "register_b": 5,
                    "settings_a": 1,
                    "value2": 1,
                    "variable_b": 1
                },
                "_DAT_40023844": {
                    "config_register1": 2,
                    "control_register_2": 1,
                    "control_register_a": 1,
                    "data_1": 1,
                    "data_variable2": 1,
                    "device_config1": 1,
                    "device_config_one": 1,
                    "flag1": 2,
                    "flag2": 1,
                    "flag_a": 1,
                    "flag_register1": 1,
                    "flag_register_a": 1,
                    "flag_value1": 1,
                    "mem1": 1,
                    "memory_flag_a": 1,
                    "register_1": 2,
                    "register_a": 5,
                    "settings_b": 1,
                    "value1": 1,
                    "variable_a": 1
                },
                "param_1": {
                    "address": 1,
                    "config": 1,
                    "config_ptr": 1,
                    "config_value": 1,
                    "config_values": 2,
                    "configuration": 1,
                    "data_address": 1,
                    "flag": 2,
                    "flag_address": 1,
                    "input": 2,
                    "input_param": 1,
                    "input_value": 1,
                    "memory_address": 1,
                    "param": 2,
                    "register_value": 2,
                    "settings": 1,
                    "value": 9
                },
                "param_2": {
                    "mask": 1
                },
                "value": {
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800340c"
            ],
            "code": "\n\n\nvoid clear_bit_flags_080035fc(int *value)\n\n{\n  if (*value == 0x40010000) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffffffe;\n  }\n  if (*value == 0x40000000) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffe;\n  }\n  if (*value == 0x40000400) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffd;\n  }\n  if (*value == 0x40000800) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffb;\n  }\n  if (*value == 0x40000c00) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffff7;\n  }\n  if (*value == 0x40001000) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffef;\n  }\n  if (*value == 0x40001400) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffdf;\n  }\n  if (*value == 0x40010400) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffffffd;\n  }\n  if (*value == 0x40014000) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffeffff;\n  }\n  if (*value == 0x40014400) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffdffff;\n  }\n  if (*value == 0x40014800) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffbffff;\n  }\n  if (*value == 0x40001800) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffbf;\n  }\n  if (*value == 0x40001c00) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffff7f;\n  }\n  if (*value == 0x40002000) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffeff;\n  }\n  return;\n}\n\n",
            "current_name": "clear_bit_flags_080035fc",
            "entrypoint": "0x080035fc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080035fc": "clear_bit_flags_080035fc",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003750": {
            "additional_data": {
                "": {
                    "result": 1
                },
                "FUN_08003750": {
                    "decrement_param": 1,
                    "decrement_value": 1,
                    "subtract_by_four": 1,
                    "subtract_four": 27,
                    "subtract_four_from_parameter": 1
                },
                "local_1": {
                    "current_number": 1
                },
                "local_n": {
                    "new_variable_name_n": 1
                },
                "param_1": {
                    "input": 8,
                    "input_num": 5,
                    "input_number": 1,
                    "input_value": 7,
                    "num": 1,
                    "number": 2,
                    "output": 1,
                    "result": 6
                },
                "param_10": {
                    "new_param_10": 1
                },
                "param_11": {
                    "new_param_11": 1
                },
                "param_12": {
                    "new_param_12": 1
                },
                "param_13": {
                    "new_param_13": 1
                },
                "param_14": {
                    "new_param_14": 1
                },
                "param_15": {
                    "new_param_15": 1
                },
                "param_16": {
                    "new_param_16": 1
                },
                "param_17": {
                    "new_param_17": 1
                },
                "param_18": {
                    "new_param_18": 1
                },
                "param_19": {
                    "new_param_19": 1
                },
                "param_2": {
                    "new_param_2": 1,
                    "new_param_name": 1,
                    "new_parameter_name2": 1,
                    "new_parameter_name_2": 1,
                    "output": 2
                },
                "param_20": {
                    "new_param_20": 1
                },
                "param_3": {
                    "new_param_3": 1,
                    "new_param_name": 1
                },
                "param_4": {
                    "new_param_4": 1,
                    "result": 1
                },
                "param_5": {
                    "new_param_5": 1
                },
                "param_6": {
                    "new_param_6": 1
                },
                "param_7": {
                    "new_param_7": 1
                },
                "param_8": {
                    "new_param_8": 1
                },
                "param_9": {
                    "new_param_9": 1
                },
                "param_n": {
                    "new_param_name": 1,
                    "new_parameter_name_n": 2
                },
                "return": {
                    "result": 1
                },
                "var_1": {
                    "new_variable_name_1": 1,
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003754",
                "FUN_0800376e"
            ],
            "code": "\nint subtract_by_four_08003750(int input)\n\n{\n  result input + -4;\n}\n\n",
            "current_name": "subtract_by_four_08003750",
            "entrypoint": "0x08003750",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003750": "subtract_by_four_08003750",
                "param_1": "input",
                "return": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003754": {
            "additional_data": {
                "FNN_08003750": {
                    "get_timer_object": 1
                },
                "FUN_08003750": {
                    "check_param": 1,
                    "get_timer_obj": 3,
                    "get_timer_object": 2
                },
                "FUN_08003754": {
                    "call_timer_function_if_condition_is_met": 1,
                    "execute_function_if_condition_met": 1,
                    "execute_function_if_valid": 1,
                    "execute_timer": 1,
                    "execute_timer_action": 3,
                    "execute_timer_callback": 5,
                    "execute_timer_fn": 1,
                    "execute_timer_function": 15,
                    "process_timer": 1,
                    "trigger_function": 2
                },
                "code": {
                    "callback_function": 1,
                    "function_pointer": 6,
                    "function_ptr": 3,
                    "timer_callback": 1
                },
                "get_timer_obj": {
                    "get_current_timer_object": 1,
                    "get_timer_object": 10,
                    "retrieve_timer": 1,
                    "retrieve_timer_obj": 1,
                    "retrieve_timer_object": 1
                },
                "iVar1": {
                    "timer": 3,
                    "timer_handle": 2,
                    "timer_id": 1,
                    "timer_index": 1,
                    "timer_obj": 12,
                    "timer_obj_address": 1,
                    "timer_obj_pointer": 1,
                    "timer_object": 7
                },
                "param_1": {
                    "input_param": 2,
                    "parameter": 2,
                    "timer": 1,
                    "timer_handle": 3,
                    "timer_id": 2,
                    "timer_index": 7,
                    "timer_obj": 4,
                    "timer_obj_address": 1,
                    "timer_obj_pointer": 1,
                    "timer_object": 5,
                    "timer_object_index": 1,
                    "timer_param": 1,
                    "timer_parameter": 1
                }
            },
            "called": [
                "FUN_08003750"
            ],
            "calling": [
                "FUN_080026ce"
            ],
            "code": "\nvoid execute_timer_function_08003754(int timer_index)\n\n{\n  int timer_obj;\n  \n  timer_obj = get_timer_object();\n  if ((*(function_pointer **)(timer_obj + 0x48) != (function_pointer *)0x0) && (*(char *)(timer_index + 0x18) == '\\x01')) {\n    (**(function_pointer **)(timer_obj + 0x48))(timer_obj,0);\n  }\n  return;\n}\n\n",
            "current_name": "execute_timer_function_08003754",
            "entrypoint": "0x08003754",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003754": "execute_timer_function_08003754",
                "code": "function_pointer",
                "get_timer_obj": "get_timer_object",
                "iVar1": "timer_obj",
                "param_1": "timer_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800376e": {
            "additional_data": {
                "FUN_08003750": {
                    "calculate_something": 1,
                    "get_timer_obj": 15,
                    "get_timer_obj_handle": 1,
                    "get_timer_object": 1,
                    "get_timer_object_handler": 1,
                    "get_timer_value": 1,
                    "process_parameter": 1
                },
                "FUN_0800376e": {
                    "execute_timed_action": 1,
                    "execute_timer_action": 3,
                    "execute_timer_callback": 6,
                    "execute_timer_function": 18,
                    "execute_timer_logic": 1,
                    "execute_timer_object": 1
                },
                "code": {
                    "callback_function_pointer": 1,
                    "function_pointer": 1,
                    "function_ptr": 1,
                    "timer_callback_fn": 1,
                    "timer_function": 1
                },
                "get_timer_obj": {
                    "get_current_timer_obj": 1,
                    "get_timer_object": 7,
                    "retrieve_timer_object": 1
                },
                "iVar1": {
                    "obj_address": 1,
                    "timer_obj": 25,
                    "timer_object": 2
                },
                "localVar1": {
                    "timer_function": 1
                },
                "param_1": {
                    "callback_param": 1,
                    "ignored_param": 1,
                    "input_param": 1,
                    "input_parameter": 1,
                    "obj_index": 1,
                    "obj_timer": 1,
                    "some_parameter": 1,
                    "timer_id": 5,
                    "timer_index": 2,
                    "timer_obj": 1,
                    "timer_object": 1,
                    "timer_object_address": 1,
                    "timer_param": 5,
                    "unused_param": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08003750"
            ],
            "calling": [
                "FUN_080026ce"
            ],
            "code": "\nvoid execute_timer_function_0800376e(void)\n\n{\n  int timer_obj;\n  \n  timer_obj = get_timer_object();\n  if (*(function_ptr **)(timer_obj + 0x44) != (function_ptr *)0x0) {\n    (**(function_ptr **)(timer_obj + 0x44))();\n  }\n  return;\n}\n\n",
            "current_name": "execute_timer_function_0800376e",
            "entrypoint": "0x0800376e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800376e": "execute_timer_function_0800376e",
                "code": "function_ptr",
                "get_timer_obj": "get_timer_object",
                "iVar1": "timer_obj"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800377c": {
            "additional_data": {
                "DAT_200001b0": {
                    "condition_1": 1,
                    "flag_1": 1,
                    "is_first_timer_enabled": 1,
                    "timer_flag1": 1
                },
                "DAT_200001d4": {
                    "condition_2": 1,
                    "flag_2": 1,
                    "is_second_timer_enabled": 1,
                    "timer_flag2": 1
                },
                "FUN_080026ce": {
                    "handle_param1": 1,
                    "handle_specific_interrupt": 1,
                    "process_callback": 1,
                    "process_data": 5,
                    "process_input_data": 1,
                    "process_param": 3,
                    "process_parameter": 4,
                    "process_timer": 3,
                    "process_timer_interrupt": 2,
                    "process_timer_param": 1,
                    "update_param_1": 1,
                    "update_parameter": 1,
                    "update_timer": 2,
                    "update_timer_counter": 1,
                    "update_timer_params": 1,
                    "update_timer_values": 1
                },
                "FUN_0800377c": {
                    "handle_tim_events": 2,
                    "handle_tim_interrupt": 1,
                    "handle_tim_interrupts": 5,
                    "handle_tim_irq": 1,
                    "handle_tim_irq_handler": 1,
                    "handle_timer_events": 1,
                    "handle_timer_interruptions": 1,
                    "handle_timer_interrupts": 8,
                    "handle_timers": 11
                },
                "HAL_TIM_IRQHandler": {
                    "handle_tim_interrupt": 1
                },
                "param_1": {
                    "callback_data": 1,
                    "data": 2,
                    "data_array": 1,
                    "event_flags": 1,
                    "input_param": 1,
                    "input_parameter": 1,
                    "interrupt_flags": 1,
                    "param": 1,
                    "parameter": 1,
                    "parameter_array": 1,
                    "specific_interrupt_param": 1,
                    "timer_data": 1,
                    "timer_flags": 2,
                    "timer_interrupt_data": 1
                }
            },
            "called": [
                "FUN_080026ce"
            ],
            "calling": [],
            "code": "\nvoid handle_timers_0800377c(void)\n\n{\n  if (DAT_200001b0 != 0) {\n    handle_tim_interrupt();\n  }\n  if (DAT_200001d4 != 0) {\n    handle_tim_interrupt();\n  }\n  return;\n}\n\n",
            "current_name": "handle_timers_0800377c",
            "entrypoint": "0x0800377c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800377c": "handle_timers_0800377c",
                "HAL_TIM_IRQHandler": "handle_tim_interrupt"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800387c": {
            "additional_data": {
                "FUN_0800387c": {
                    "decrement_by_four": 1,
                    "subtract4": 2,
                    "subtract_4_from_param": 1,
                    "subtract_four": 26,
                    "subtract_four_from_given_number": 1
                },
                "PTR_somePointer": {
                    "some_pointer": 1
                },
                "param_1": {
                    "given_number": 1,
                    "input": 6,
                    "input_num": 2,
                    "input_number": 1,
                    "input_value": 4,
                    "num": 10,
                    "number": 2,
                    "output": 1,
                    "result": 4
                },
                "param_2": {
                    "new_num": 1,
                    "new_parameter2": 1
                },
                "param_n": {
                    "new_parameter_n": 1
                },
                "var_1": {
                    "new_variable1": 1
                },
                "var_2": {
                    "new_variable2": 1
                },
                "var_n": {
                    "new_variable_n": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003900",
                "FUN_08003880",
                "FUN_080038d0"
            ],
            "code": "\nint subtract_four_from_given_number_0800387c(int num)\n\n{\n  return num + -4;\n}\n\n",
            "current_name": "subtract_four_from_given_number_0800387c",
            "entrypoint": "0x0800387c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800387c": "subtract_four_from_given_number_0800387c",
                "param_1": "num"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003880": {
            "additional_data": {
                "FUN_08001460": {
                    "function_b": 1
                },
                "FUN_080014ec": {
                    "function_a": 1
                },
                "FUN_0800387c": {
                    "get_i2_c_object": 1
                },
                "FUN_08003880": {
                    "handle_i2_c_request": 1,
                    "i2c_data_transfer": 1,
                    "i2c_transmit": 1,
                    "perform_i2_c_operation": 3,
                    "perform_i2_c_transaction": 1,
                    "send_i2_c_data": 2,
                    "transfer_data": 1,
                    "transmit_data": 4,
                    "transmit_or_receive_data": 15,
                    "transmit_receive_data": 1
                },
                "HAL_I2C_Slave_Sequential_Receive_IT": {
                    "i2c_slave_sequential_receive_it": 1,
                    "receive_data": 9,
                    "receive_data_it": 3,
                    "receive_data_sequentially": 2,
                    "receive_data_sequentially_with_it": 1,
                    "receive_data_using_i2_c": 1,
                    "receive_data_with_interrupt": 1,
                    "receive_i2_c_data": 2,
                    "receive_i2_c_sequentially": 1,
                    "receive_i2c_data": 1,
                    "receive_sequential_data": 1,
                    "receive_sequential_it": 1,
                    "receive_sequentially_with_interrupt": 1,
                    "sequential_receive": 1
                },
                "HAL_I2C_Slave_Sequential_Transmit_IT": {
                    "i2c_slave_sequential_transmit_it": 1,
                    "sequential_transmit": 1,
                    "transmit_data": 9,
                    "transmit_data_it": 3,
                    "transmit_data_sequentially": 2,
                    "transmit_data_sequentially_with_it": 1,
                    "transmit_data_using_i2_c": 1,
                    "transmit_data_with_interrupt": 1,
                    "transmit_i2_c_data": 2,
                    "transmit_i2_c_sequentially": 1,
                    "transmit_i2c_data": 1,
                    "transmit_sequential_data": 1,
                    "transmit_sequential_it": 1,
                    "transmit_sequentially_with_interrupt": 1
                },
                "get_i2c_obj": {
                    "get_i2_c_object": 16,
                    "get_i2c_object": 4
                },
                "iVar1": {
                    "i2c_obj": 19,
                    "i2c_object": 12
                },
                "param_1": {
                    "data": 1,
                    "data_buffer": 10,
                    "data_object": 1,
                    "data_ptr": 2,
                    "data_structure": 1,
                    "device_handle": 1,
                    "i2c_address": 1,
                    "i2c_config": 1,
                    "i2c_controller": 1,
                    "i2c_device": 1,
                    "i2c_handle": 1,
                    "i2c_handler": 1,
                    "i2c_object_address": 1,
                    "input_data": 2,
                    "input_parameter1": 1,
                    "obj": 1,
                    "obj_addr": 1,
                    "param_1": 1,
                    "parameter_1": 1,
                    "request": 1
                },
                "param_2": {
                    "flag": 1,
                    "input_parameter2": 1,
                    "is_read": 1,
                    "is_receive": 6,
                    "is_receiving": 1,
                    "is_sequential_receive": 1,
                    "is_transmit": 11,
                    "parameter_2": 1,
                    "receive_flag": 2,
                    "transaction_type": 1,
                    "transfer_mode": 1,
                    "transmit_flag": 4
                },
                "param_3": {
                    "check_value": 3,
                    "compare_value": 1,
                    "condition": 1,
                    "current_param": 1,
                    "data_buffer_size": 1,
                    "data_length": 3,
                    "expected_data": 3,
                    "expected_result": 1,
                    "expected_size": 2,
                    "expected_value": 3,
                    "input_parameter3": 1,
                    "length": 2,
                    "param_3": 1,
                    "param_check": 1,
                    "param_flag": 2,
                    "param_to_compare": 1,
                    "param_value": 2,
                    "parameter_3": 1,
                    "size": 1
                },
                "param_4": {
                    "callback": 10,
                    "callback_func": 3,
                    "callback_function": 8,
                    "callback_function_address": 1,
                    "custom_data": 1,
                    "input_parameter4": 1,
                    "param": 1,
                    "param_pointer": 1,
                    "param_value": 1,
                    "parameter_4": 1,
                    "user_callback": 2,
                    "user_data": 1
                }
            },
            "called": [
                "FUN_080014ec",
                "FUN_08001460",
                "FUN_0800387c"
            ],
            "calling": [
                "FUN_0800165a"
            ],
            "code": "\nvoid transmit_or_receive_data_08003880(int data_buffer,int is_transmit,int data_length,undefined4 callback)\n\n{\n  int i2c_obj;\n  \n  i2c_obj = get_i2_c_object();\n  if (data_length == *(int *)(data_buffer + 0xc)) {\n    if (is_transmit == 0) {\n      *(undefined *)(i2c_obj + 0x88) = 0;\n      *(undefined *)(i2c_obj + 0x5e) = 0;\n      if (*(code **)(i2c_obj + 100) != (code *)0x0) {\n        (**(code **)(i2c_obj + 100))();\n      }\n      transmit_data(data_buffer,i2c_obj + 0x68,*(undefined *)(i2c_obj + 0x88),8);\n      return;\n    }\n    *(undefined *)(i2c_obj + 0x5e) = 1;\n    receive_data(data_buffer,i2c_obj + 0x68,0x20,8,callback);\n  }\n  return;\n}\n\n",
            "current_name": "transmit_or_receive_data_08003880",
            "entrypoint": "0x08003880",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003880": "transmit_or_receive_data_08003880",
                "HAL_I2C_Slave_Sequential_Receive_IT": "receive_data",
                "HAL_I2C_Slave_Sequential_Transmit_IT": "transmit_data",
                "get_i2c_obj": "get_i2_c_object",
                "iVar1": "i2c_obj",
                "param_1": "data_buffer",
                "param_2": "is_transmit",
                "param_3": "data_length",
                "param_4": "callback"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080038d0": {
            "additional_data": {
                "CHAR_1": {
                    "char_value_1": 1
                },
                "CODE_1": {
                    "function_ptr_1": 1
                },
                "CODE_2": {
                    "function_ptr_2": 1
                },
                "FUNC_08001578": {
                    "retrieve_i2c_pointer": 1
                },
                "FUN_08001578": {
                    "get_i2c_data": 1,
                    "get_i2c_obj": 6,
                    "get_i2c_obj_info": 1,
                    "get_i2c_obj_ptr": 1,
                    "get_i2c_object_handle": 1,
                    "get_param_pointer": 1,
                    "get_param_value": 1,
                    "initialize_i2c_obj": 1,
                    "parse_i2c_param": 1,
                    "process_i2c_obj": 1,
                    "process_i2c_param": 1,
                    "process_param1": 1,
                    "update_i2c_object": 1
                },
                "FUN_0800387c": {
                    "check_i2c_condition": 4,
                    "check_i2c_conditions": 2,
                    "check_i2c_obj_status": 1,
                    "check_i2c_param": 1,
                    "check_i2c_properties": 1,
                    "check_i2c_state": 1,
                    "check_i2c_status": 1,
                    "check_i2c_value": 2,
                    "enable_i2_c_listen_it": 1,
                    "enable_i2c_listen_it": 2,
                    "execute_i2c_obj_code": 1,
                    "process_param1_result": 1
                },
                "FUN_080038d0": {
                    "do_i2c_operation": 1,
                    "enable_and_listen_i2c": 1,
                    "enable_i2_c_listen_and_invoke_i2c_obj_function": 1,
                    "enable_i2_c_listen_interrupt": 1,
                    "enable_i2c_and_listen": 5,
                    "enable_i2c_and_listen_it": 1,
                    "enable_i2c_and_trigger": 1,
                    "enable_i2c_and_trigger_callback": 1,
                    "enable_i2c_communication": 3,
                    "enable_i2c_listen": 5,
                    "enable_i2c_listen_and_call": 2,
                    "enable_i2c_listen_interrupt": 1,
                    "enable_i2c_listen_mode": 1,
                    "enable_i2c_listening": 1,
                    "enable_listen_interrupt": 1,
                    "improve_and_enable_i2c_listen": 1,
                    "initialize_i2_c_and_enable_listen": 1,
                    "initialize_i2c_and_enable_listen": 2
                },
                "HAL_I2C_EnableListen_IT": {
                    "enable_i2_c_listen_interrupt": 1,
                    "enable_i2c_listen_interrupt": 16,
                    "enable_i2c_listen_interrupt_hal": 1,
                    "enable_i2c_listen_it": 2
                },
                "INT_1": {
                    "int_value_1": 1
                },
                "code": {
                    "function_pointer": 2,
                    "function_ptr": 1
                },
                "get_i2c_obj": {
                    "get_i2c_data": 1,
                    "get_i2c_object": 9,
                    "get_i2c_object_handle": 1,
                    "initialize_i2c_obj": 1,
                    "retrieve_i2c_obj": 4,
                    "retrieve_i2c_object": 5
                },
                "iVar1": {
                    "i2c_data": 1,
                    "i2c_handle": 1,
                    "i2c_obj": 24,
                    "i2c_obj_handle": 1,
                    "i2c_obj_ptr": 1,
                    "i2c_obj_result": 1,
                    "i2c_object": 2
                },
                "param_1": {
                    "check_param": 1,
                    "device_address": 2,
                    "i2c_device": 1,
                    "i2c_handle": 5,
                    "i2c_obj": 5,
                    "i2c_obj_handle": 1,
                    "i2c_obj_param": 2,
                    "i2c_object": 1,
                    "i2c_param": 2,
                    "i2c_port": 1,
                    "i2c_state": 1,
                    "input_parameter": 1,
                    "listen_param": 1,
                    "obj_handle": 1,
                    "obj_param": 1,
                    "obj_parameter": 1,
                    "param": 3,
                    "param_1": 1
                },
                "param_1_1": {
                    "i2c_obj_ptr": 1
                },
                "param_1_2": {
                    "i2c_obj_ptr": 1
                }
            },
            "called": [
                "FUN_08001578",
                "FUN_0800387c"
            ],
            "calling": [
                "FUN_08001ab0",
                "FUN_08001bfc",
                "FUN_08001684"
            ],
            "code": "\nvoid enable_i2c_listen_and_call_080038d0(undefined4 i2c_handle)\n\n{\n  int i2c_obj;\n  \n  i2c_obj = get_i2c_object();\n  if (((*(function_pointer **)(i2c_obj + 0x60) != (function_pointer *)0x0) && (*(char *)(i2c_obj + 0x5e) == '\\x01')) &&\n     (*(char *)(i2c_obj + 0x2c) != ' ')) {\n    (**(function_pointer **)(i2c_obj + 0x60))(i2c_obj + 0x68);\n  }\n  enable_i2c_listen_interrupt(i2c_handle);\n  return;\n}\n\n",
            "current_name": "enable_i2c_listen_and_call_080038d0",
            "entrypoint": "0x080038d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080038d0": "enable_i2c_listen_and_call_080038d0",
                "HAL_I2C_EnableListen_IT": "enable_i2c_listen_interrupt",
                "code": "function_pointer",
                "get_i2c_obj": "get_i2c_object",
                "iVar1": "i2c_obj",
                "param_1": "i2c_handle"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003900": {
            "additional_data": {
                "FUN_08001578": {
                    "get_i2_c_object": 3
                },
                "FUN_0800387c": {
                    "check_if_listen_enabled": 1,
                    "enable_i2_c_listen_it": 1,
                    "is_enabled": 1
                },
                "FUN_08003900": {
                    "enable_i2_c_listen": 6,
                    "enable_i2_c_listen_in_low_power_mode": 1,
                    "enable_i2_c_listen_interrupt": 7,
                    "enable_i2_c_listen_it": 2,
                    "enable_i2_c_listen_mode": 2,
                    "enable_i2_c_listening": 1,
                    "enable_i2c_listen": 3,
                    "enable_i2c_listen_interrupt": 1,
                    "enable_i2c_listen_it": 1,
                    "enable_i2c_listen_mode": 1,
                    "enable_listen": 1,
                    "enable_listen_interrupt": 3,
                    "enable_listen_mode": 1,
                    "initialize_i2_c_function": 1
                },
                "HAL_I2C_EnableListen_IT": {
                    "enable_i2_c_listen_interrupt": 4,
                    "enable_i2_c_listen_interrupt_it": 4,
                    "enable_i2_c_listen_it": 6,
                    "enable_i2c_listen_interrupt": 5,
                    "enable_i2c_listen_it": 1,
                    "enable_listen_interrupt_it": 1
                },
                "get_i2c_obj": {
                    "fetch_i2c_object": 1,
                    "get_i2_c_object": 4,
                    "get_i2c_object": 1,
                    "retrieve_i2c_object": 2
                },
                "iVar1": {
                    "i2c_address": 1,
                    "i2c_handle": 2,
                    "i2c_obj": 14,
                    "i2c_obj_address": 2,
                    "i2c_obj_pointer": 1,
                    "i2c_obj_ptr": 1,
                    "i2c_obj_value": 1,
                    "i2c_obj_variable": 1,
                    "i2c_object": 6,
                    "i2c_object_address": 1,
                    "i2c_object_index": 1
                },
                "param_1": {
                    "device_address": 1,
                    "device_handle": 1,
                    "handle": 1,
                    "i2c_address": 1,
                    "i2c_descriptor": 1,
                    "i2c_device_address": 1,
                    "i2c_handle": 7,
                    "i2c_handler": 1,
                    "i2c_obj": 3,
                    "i2c_object": 8,
                    "obj": 2,
                    "object_handle": 1,
                    "param": 3
                }
            },
            "called": [
                "FUN_08001578",
                "FUN_0800387c"
            ],
            "calling": [
                "FUN_08001ab0"
            ],
            "code": "\nvoid enable_i2_c_listen_interrupt_08003900(undefined4 i2c_object)\n\n{\n  int i2c_obj;\n  \n  i2c_obj = get_i2_c_object();\n  if (*(char *)(i2c_obj + 0x5f) == '\\0') {\n    enable_i2_c_listen_it(i2c_object);\n  }\n  return;\n}\n\n",
            "current_name": "enable_i2_c_listen_interrupt_08003900",
            "entrypoint": "0x08003900",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003900": "enable_i2_c_listen_interrupt_08003900",
                "HAL_I2C_EnableListen_IT": "enable_i2_c_listen_it",
                "get_i2c_obj": "get_i2_c_object",
                "iVar1": "i2c_obj",
                "param_1": "i2c_object"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003978": {
            "additional_data": {
                "DAT_08005c10": {
                    "pin2_mapping_data": 1
                },
                "DAT_08005ca0": {
                    "pin1_mapping_data": 1
                },
                "DAT_200002b4": {
                    "uart_cr1_register_base": 1,
                    "uart_data_array": 1
                },
                "FUN_08000fb4": {
                    "set_gpio_port_clock": 1
                },
                "FUN_08002d72": {
                    "pinmap_merge_peripheral": 1
                },
                "FUN_080031fc": {
                    "hal_uart_init": 1
                },
                "FUN_080034f4": {
                    "pinmap_peripheral1": 1
                },
                "FUN_0800354a": {
                    "pinmap_peripheral2": 1
                },
                "FUN_08003582": {
                    "pinmap_function": 1
                },
                "FUN_08003978": {
                    "configure_uart_pins": 6,
                    "init_uart_pins": 1,
                    "initialize_serial_port": 1,
                    "initialize_uart": 1,
                    "initialize_uart_peripheral": 1,
                    "initialize_uart_pin": 3,
                    "initialize_uart_pins": 18
                },
                "FUN_08004fdc": {
                    "hal_gpio_init": 1
                },
                "HAL_GPIO_Init": {
                    "initialize_gpio": 4,
                    "initialize_gpio_pin": 1,
                    "initialize_gpio_port": 1
                },
                "HAL_UART_Init": {
                    "initialize_uart": 4,
                    "initialize_uart_periph": 1
                },
                "_DAT_40023820": {
                    "gpio_mode_register": 1,
                    "uart_1_config_reg_1": 1
                },
                "_DAT_40023824": {
                    "register1": 1,
                    "uart1_cr1": 1,
                    "uart_1_misc_reg": 1,
                    "uart_interrupt_mask_register": 1,
                    "uart_register1": 1
                },
                "_DAT_40023840": {
                    "gpio_output_type_register": 1,
                    "uart_2_config_reg_1": 1
                },
                "_DAT_40023844": {
                    "register2": 1,
                    "uart1_cr3": 1,
                    "uart_2_misc_reg": 1,
                    "uart_interrupt_flag_clear_register": 1,
                    "uart_register2": 1
                },
                "byte": {
                    "pin_config_index": 1,
                    "uart_index": 1
                },
                "iVar1": {
                    "peripheral1": 15,
                    "peripheral1_result": 2,
                    "peripheral_a": 1,
                    "pin1_result": 2,
                    "uart1_peripheral": 1,
                    "uart1_pin": 2,
                    "uart_1_peripheral": 1,
                    "uart_peri1": 1,
                    "uart_periph1": 1,
                    "uart_peripheral1": 2,
                    "uart_peripheral_1": 1,
                    "uart_pin1_peripheral": 2
                },
                "iVar2": {
                    "peripheral2": 15,
                    "peripheral2_result": 2,
                    "peripheral_b": 1,
                    "pin2_result": 2,
                    "uart2_peripheral": 1,
                    "uart2_pin": 2,
                    "uart_2_peripheral": 1,
                    "uart_peri2": 1,
                    "uart_periph2": 1,
                    "uart_peripheral2": 2,
                    "uart_peripheral_2": 1,
                    "uart_pin2_peripheral": 2
                },
                "iprintf": {
                    "print_error": 3,
                    "print_error_message": 1,
                    "print_error_msg": 1
                },
                "local_1c": {
                    "alternate_function_bits": 1,
                    "alternate_function_high": 1,
                    "bit_instruction_b": 1,
                    "gpio_alternate1": 1,
                    "gpio_init4": 1,
                    "gpio_init_param4": 1,
                    "gpio_init_value4": 1,
                    "gpio_pin2_mask": 1,
                    "gpio_pin_af2": 1,
                    "gpio_pin_pull": 1,
                    "gpio_pin_pull_1": 1,
                    "gpio_pin_speed1": 2,
                    "gpio_pull": 1,
                    "gpio_pull1": 1,
                    "gpio_speed": 1,
                    "gpio_speed1": 1,
                    "gpio_speed_config1": 1,
                    "local_variable3": 1,
                    "output_speed_register_value": 1,
                    "pin4": 1,
                    "pin5": 2,
                    "pin_2_shift_2": 1,
                    "pin_alternate_function": 1,
                    "pin_conf4": 1,
                    "pin_config_mode": 1,
                    "pin_output_type": 1,
                    "pin_shift2": 1,
                    "uart_1c": 1,
                    "uart_parity": 1
                },
                "local_20": {
                    "gpio_config": 1,
                    "gpio_config1": 1,
                    "gpio_init_param3": 1,
                    "gpio_init_settings": 1,
                    "gpio_init_structure": 1,
                    "gpio_init_value3": 1,
                    "gpio_mode": 1,
                    "gpio_pin_config": 3,
                    "gpio_pin_pull1": 1,
                    "gpio_pull": 1,
                    "gpio_pull1": 1,
                    "local_variable2": 1,
                    "pin4": 2,
                    "pin_conf3": 1,
                    "pin_config": 1,
                    "pin_pull": 1,
                    "pull_up_down_bits": 1,
                    "uart_20": 1,
                    "uart_config": 1,
                    "uart_word_length": 1
                },
                "local_24": {
                    "alternate_function": 1,
                    "alternate_function1": 1,
                    "alternate_function_low": 1,
                    "alternative_function_register_value": 1,
                    "bit_instruction_a": 1,
                    "gpio_alternate_function": 1,
                    "gpio_init3": 1,
                    "gpio_init_param2": 1,
                    "gpio_init_value2": 1,
                    "gpio_mode": 1,
                    "gpio_mode1": 1,
                    "gpio_pin2_config": 1,
                    "gpio_pin_af1": 1,
                    "gpio_pin_mode1": 2,
                    "gpio_pin_speed": 1,
                    "gpio_pin_speed_1": 1,
                    "gpio_pull_config1": 1,
                    "gpio_speed1": 1,
                    "local_variable1": 1,
                    "pin3": 3,
                    "pin_2_shift": 1,
                    "pin_conf2": 1,
                    "pin_config_value": 1,
                    "pin_configuration2": 1,
                    "pin_mode_bits": 1,
                    "pin_shift1": 1,
                    "pin_speed": 1,
                    "uart_24": 1
                },
                "local_28": {
                    "alternate_function": 1,
                    "bit_settings": 1,
                    "gpio_config1": 1,
                    "gpio_configuration": 1,
                    "gpio_init2": 1,
                    "gpio_init_param1": 1,
                    "gpio_init_value1": 1,
                    "gpio_mode1": 1,
                    "gpio_pin1_config": 1,
                    "gpio_pin_config1": 3,
                    "gpio_pin_config_1": 1,
                    "gpio_pin_configuration1": 1,
                    "gpio_pin_mode": 1,
                    "mode_register_value": 1,
                    "pin2": 3,
                    "pin_2_mask": 1,
                    "pin_bit_mask2": 1,
                    "pin_conf1": 1,
                    "pin_config": 2,
                    "pin_config1": 2,
                    "pin_config_flag": 1,
                    "pin_configuration": 1,
                    "pin_configuration1": 1,
                    "pin_mask_2": 1,
                    "uart_28": 1
                },
                "local_2c": {
                    "bit_mask_a": 1,
                    "gpio_init1": 1,
                    "gpio_pin1": 1,
                    "gpio_pin1_mask": 1,
                    "gpio_pin_mask": 2,
                    "gpio_pin_mask1": 4,
                    "gpio_pin_mask_1": 1,
                    "gpio_pin_value": 1,
                    "pin1": 3,
                    "pin_1_mask": 1,
                    "pin_bit_mask": 2,
                    "pin_bit_mask1": 1,
                    "pin_bitmask": 2,
                    "pin_mask": 3,
                    "pin_mask1": 5,
                    "pin_mask_1": 1,
                    "uart_2c": 1
                },
                "param_1": {
                    "device": 1,
                    "gpio_pins": 1,
                    "pin": 1,
                    "pin_array": 1,
                    "pin_config": 3,
                    "pin_configs": 1,
                    "pin_configuration": 1,
                    "pin_mapping": 1,
                    "pin_settings": 2,
                    "pins": 1,
                    "serial_port_config": 1,
                    "uart_config": 4,
                    "uart_pin": 2,
                    "uart_pin_array": 1,
                    "uart_pins": 9
                },
                "pinmap_function": {
                    "map_pin_to_function": 1
                },
                "pinmap_merge_peripheral": {
                    "merge_mapped_peripheral": 1,
                    "merge_peripheral": 1,
                    "merge_peripheral_values": 1,
                    "merge_pinmap_peripheral": 1
                },
                "pinmap_peripheral": {
                    "get_peripheral_value": 1,
                    "get_pinmap_peripheral": 1,
                    "map_peripheral": 1,
                    "map_pin_to_peripheral": 1
                },
                "set_GPIO_Port_Clock": {
                    "configure_gpio_clock": 1,
                    "configure_gpio_port_clock": 1,
                    "set_gpio_port_clock": 2
                },
                "uVar3": {
                    "clock": 1,
                    "gpio_clock": 6,
                    "gpio_clock1": 2,
                    "gpio_clock_1": 1,
                    "gpio_init_result1": 1,
                    "gpio_port1": 2,
                    "gpio_port_c": 1,
                    "gpio_port_clock": 6,
                    "gpio_port_clock1": 6,
                    "gpio_port_clock_1": 1,
                    "gpio_port_clock_result": 1,
                    "gpio_port_send": 1,
                    "port_clock": 1,
                    "port_clock_a": 1
                },
                "uVar4": {
                    "function": 3,
                    "function1": 1,
                    "function_mapping": 1,
                    "gpio_function1": 2,
                    "gpio_init_result2": 1,
                    "gpio_pin1": 1,
                    "gpio_port2": 1,
                    "gpio_port_clock2": 1,
                    "gpio_port_clock_2": 1,
                    "pin_func": 1,
                    "pin_function": 10,
                    "pin_function1": 2,
                    "pin_function_1": 1,
                    "pinmap_function_result": 4,
                    "pinmap_value": 1
                }
            },
            "called": [
                "FUN_080034f4",
                "FUN_0800354a",
                "FUN_08002d72",
                "FUN_08000fb4",
                "FUN_08003582",
                "FUN_08004fdc",
                "FUN_080031fc"
            ],
            "calling": [
                "FUN_08004388",
                "FUN_08003cc8"
            ],
            "code": "\n\n\nvoid initialize_uart_pins_08003978(int *uart_pins)\n\n{\n  int peripheral1;\n  int peripheral2;\n  undefined4 gpio_clock;\n  uint pin_function;\n  uint pin_mask1;\n  uint pin2;\n  uint pin3;\n  undefined4 gpio_pin_config;\n  uint pin5;\n  \n  if (uart_pins != (int *)0x0) {\n    peripheral1 = map_pin_to_peripheral((int)*(short *)(uart_pins + 0x16),&DAT_08005ca0);\n    peripheral2 = map_pin_to_peripheral((int)*(short *)((int)uart_pins + 0x5a),&DAT_08005c10);\n    if ((peripheral2 == 0) || (peripheral1 == 0)) {\n      print_error(\"ERROR: at least one UART pin has no peripheral\\n\",peripheral2);\n    }\n    else {\n      peripheral1 = merge_peripheral_values(peripheral1);\n      *uart_pins = peripheral1;\n      if (peripheral1 == 0) {\n        print_error(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (peripheral1 == 0x40011000) {\n          _DAT_40023824 = _DAT_40023824 & 0xffffffef;\n          _DAT_40023844 = _DAT_40023844 | 0x10;\n          *(undefined *)(uart_pins + 0x11) = 0;\n          *(undefined *)(uart_pins + 0x17) = 0x25;\n        }\n        else if (peripheral1 == 0x40004400) {\n          _DAT_40023820 = _DAT_40023820 & 0xfffdffff;\n          _DAT_40023840 = _DAT_40023840 | 0x20000;\n          *(undefined *)(uart_pins + 0x11) = 1;\n          *(undefined *)(uart_pins + 0x17) = 0x26;\n        }\n        else if (peripheral1 == 0x40004800) {\n          _DAT_40023820 = _DAT_40023820 & 0xfffbffff;\n          _DAT_40023840 = _DAT_40023840 | 0x40000;\n          *(undefined *)(uart_pins + 0x11) = 2;\n          *(undefined *)(uart_pins + 0x17) = 0x27;\n        }\n        else if (peripheral1 == 0x40004c00) {\n          _DAT_40023820 = _DAT_40023820 & 0xfff7ffff;\n          _DAT_40023840 = _DAT_40023840 | 0x80000;\n          *(undefined *)(uart_pins + 0x11) = 3;\n          *(undefined *)(uart_pins + 0x17) = 0x34;\n        }\n        else if (peripheral1 == 0x40005000) {\n          _DAT_40023820 = _DAT_40023820 & 0xffefffff;\n          _DAT_40023840 = _DAT_40023840 | 0x100000;\n          *(undefined *)(uart_pins + 0x11) = 4;\n          *(undefined *)(uart_pins + 0x17) = 0x35;\n        }\n        else if (peripheral1 == 0x40011400) {\n          _DAT_40023824 = _DAT_40023824 & 0xffffffdf;\n          _DAT_40023844 = _DAT_40023844 | 0x20;\n          *(undefined *)(uart_pins + 0x11) = 5;\n          *(undefined *)(uart_pins + 0x17) = 0x47;\n        }\n        else if (peripheral1 == 0x40007800) {\n          _DAT_40023820 = _DAT_40023820 & 0xbfffffff;\n          _DAT_40023840 = _DAT_40023840 | 0x40000000;\n          *(undefined *)(uart_pins + 0x11) = 6;\n          *(undefined *)(uart_pins + 0x17) = 0x52;\n        }\n        else if (peripheral1 == 0x40007c00) {\n          _DAT_40023820 = _DAT_40023820 & 0x7fffffff;\n          _DAT_40023840 = _DAT_40023840 | 0x80000000;\n          *(undefined *)(uart_pins + 0x11) = 7;\n          *(undefined *)(uart_pins + 0x17) = 0x53;\n        }\n        gpio_clock = set_gpio_port_clock((uint)((int)*(short *)((int)uart_pins + 0x5a) << 0x18) >> 0x1c);\n        pin_function = map_pin_to_function((int)*(short *)((int)uart_pins + 0x5a),&DAT_08005c10);\n        pin_mask1 = 1 << (*(ushort *)((int)uart_pins + 0x5a) & 0xf) & 0xffff;\n        pin2 = (pin_function >> 3 & 1) << 4 | pin_function & 7;\n        pin3 = (pin_function << 0x1a) >> 0x1e;\n        pin5 = (pin_function << 0x11) >> 0x19;\n        gpio_pin_config = 3;\n        initialize_gpio(gpio_clock,&pin_mask1);\n        gpio_clock = set_gpio_port_clock((uint)((int)*(short *)(uart_pins + 0x16) << 0x18) >> 0x1c);\n        pin_function = map_pin_to_function((int)*(short *)(uart_pins + 0x16),&DAT_08005ca0);\n        pin_mask1 = 1 << (*(ushort *)(uart_pins + 0x16) & 0xf) & 0xffff;\n        pin2 = (pin_function >> 3 & 1) << 4 | pin_function & 7;\n        pin3 = (pin_function << 0x1a) >> 0x1e;\n        initialize_gpio(gpio_clock,&pin_mask1);\n        (&DAT_200002b4)[*(pin_config_index *)(uart_pins + 0x11)] = uart_pins + 1;\n        uart_pins[1] = *uart_pins;\n        uart_pins[2] = uart_pins[0x12];\n        uart_pins[3] = uart_pins[0x13];\n        uart_pins[4] = uart_pins[0x14];\n        uart_pins[5] = uart_pins[0x15];\n        uart_pins[6] = 0xc;\n        uart_pins[7] = 0;\n        uart_pins[8] = 0;\n        initialize_uart(uart_pins + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_uart_pins_08003978",
            "entrypoint": "0x08003978",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003978": "initialize_uart_pins_08003978",
                "HAL_GPIO_Init": "initialize_gpio",
                "HAL_UART_Init": "initialize_uart",
                "byte": "pin_config_index",
                "iVar1": "peripheral1",
                "iVar2": "peripheral2",
                "iprintf": "print_error",
                "local_1c": "pin5",
                "local_20": "gpio_pin_config",
                "local_24": "pin3",
                "local_28": "pin2",
                "local_2c": "pin_mask1",
                "param_1": "uart_pins",
                "pinmap_function": "map_pin_to_function",
                "pinmap_merge_peripheral": "merge_peripheral_values",
                "pinmap_peripheral": "map_pin_to_peripheral",
                "set_GPIO_Port_Clock": "set_gpio_port_clock",
                "uVar3": "gpio_clock",
                "uVar4": "pin_function"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003cc8": {
            "additional_data": {
                "DAT_08005c10": {
                    "pin_data": 1,
                    "pin_table": 1,
                    "pinmap_pin_value": 1
                },
                "DAT_08005ca0": {
                    "peripheral_data": 1,
                    "peripheral_table": 1,
                    "pinmap_peripheral_value": 1
                },
                "DAT_20000030": {
                    "uart_config": 1,
                    "uart_configuration": 1,
                    "uart_data": 2,
                    "uart_instance": 1,
                    "uart_parameters": 1
                },
                "DAT_20000078": {
                    "baud_rate": 8,
                    "constant1": 2,
                    "value1": 2
                },
                "DAT_2000007c": {
                    "constant3": 2,
                    "flag_2": 1,
                    "parity": 1,
                    "stop_bits": 5,
                    "value2": 1,
                    "value3": 2
                },
                "DAT_20000080": {
                    "constant4": 2,
                    "data_bits": 1,
                    "flag_3": 1,
                    "flow_control": 2,
                    "parity": 2,
                    "parity_bit": 1,
                    "value3": 1,
                    "value4": 2
                },
                "DAT_20000084": {
                    "constant2": 2,
                    "data_bits": 3,
                    "flag_1": 1,
                    "parity": 2,
                    "stop_bits": 1,
                    "value1": 1,
                    "value2": 2
                },
                "DAT_20000088": {
                    "peripheral_address": 6,
                    "peripheral_constant": 1,
                    "peripheral_id": 1,
                    "peripheral_value": 2,
                    "pin_peripheral": 1,
                    "port_number": 1
                },
                "DAT_2000008a": {
                    "pin": 5,
                    "pin_number": 5,
                    "pin_value": 2
                },
                "FUN_080034f4": {
                    "pinmap_peripheral": 3,
                    "pinmap_peripheral_check": 1
                },
                "FUN_0800351e": {
                    "pinmap_peripheral": 1,
                    "pinmap_peripheral2": 1,
                    "pinmap_peripheral_address": 1,
                    "pinmap_pin": 1
                },
                "FUN_08003978": {
                    "initialize_data": 1,
                    "initialize_peripheral": 1,
                    "initialize_uart": 1,
                    "uart_init": 1
                },
                "FUN_08003cc8": {
                    "configure_peripheral": 1,
                    "initialize_peripheral": 2,
                    "initialize_uart": 24,
                    "initialize_uart_peripheral": 4
                },
                "iVar1": {
                    "peripheral_index": 1,
                    "peripheral_result": 9,
                    "peripheral_status": 2,
                    "pin_result": 1,
                    "pinmap_result": 3,
                    "pinmap_result1": 1,
                    "result": 14
                },
                "param_1": {
                    "peripheral_address": 2,
                    "pin": 1
                },
                "uVar2": {
                    "peripheral": 5,
                    "peripheral_address": 4,
                    "peripheral_id": 1,
                    "peripheral_index2": 1,
                    "peripheral_pin_result": 1,
                    "peripheral_result": 3,
                    "peripheral_result2": 1,
                    "peripheral_result_2": 1,
                    "pin_init_result": 1,
                    "pin_number": 1,
                    "pin_peripheral": 1,
                    "pin_result": 4,
                    "pin_status": 1,
                    "pinmap_result": 4,
                    "pinmap_result2": 2
                },
                "uart_init": {
                    "configure_uart": 1,
                    "initialize_uart": 1,
                    "initialize_uart_connection": 1
                }
            },
            "called": [
                "FUN_080034f4",
                "FUN_0800351e",
                "FUN_08003978"
            ],
            "calling": [
                "FUN_08003d18"
            ],
            "code": "\nvoid initialize_uart_peripheral_08003cc8(void)\n\n{\n  int result;\n  undefined4 peripheral;\n  \n  result = pinmap_peripheral(0x38,&DAT_08005ca0);\n  if (result != 0) {\n    peripheral = pinmap_peripheral(0x38,&DAT_08005ca0);\n    DAT_2000008a = pinmap_pin(peripheral,&DAT_08005c10);\n    DAT_20000088 = 0x38;\n    DAT_20000078 = 0x2580;\n    DAT_20000084 = 0;\n    DAT_2000007c = 0;\n    DAT_20000080 = 0;\n    configure_uart(&DAT_20000030);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_uart_peripheral_08003cc8",
            "entrypoint": "0x08003cc8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003cc8": "initialize_uart_peripheral_08003cc8",
                "iVar1": "result",
                "uVar2": "peripheral",
                "uart_init": "configure_uart"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003d18": {
            "additional_data": {
                "DAT_08005ca0": {
                    "peripheral": 1,
                    "peripheral_address": 1,
                    "peripheral_data": 7,
                    "pinmap_data": 4
                },
                "DAT_20000074": {
                    "debug_level": 2,
                    "list_size": 1,
                    "uart_count": 2,
                    "uart_data_count": 1,
                    "uart_data_size": 1,
                    "uart_debug": 1,
                    "uart_device_count": 2,
                    "uart_handle_count": 1,
                    "uart_index": 1,
                    "uart_peripherals_count": 2
                },
                "DAT_200002b4": {
                    "peripheral_array": 1,
                    "peripheral_map": 1,
                    "uart_array": 2,
                    "uart_data_array": 1,
                    "uart_device_array": 1,
                    "uart_devices": 1,
                    "uart_handles": 2,
                    "uart_peripheral": 1,
                    "uart_peripherals": 2
                },
                "FUN_08003d18": {
                    "send_data": 6,
                    "transmit_data": 23,
                    "transmit_debug_data": 1,
                    "uart_transmit_data": 1
                },
                "HAL_GetTick": {
                    "get_ticks": 1
                },
                "HAL_UART_Transmit": {
                    "transmit_uart": 1
                },
                "iVar1": {
                    "current_time": 1,
                    "start_tick": 5,
                    "start_ticks": 2,
                    "start_time": 22,
                    "start_timestamp": 1
                },
                "iVar2": {
                    "peripheral": 14,
                    "peripheral_id": 6,
                    "pin_peripheral": 1,
                    "pin_return_value": 1,
                    "pin_val": 1,
                    "pinmap_result": 8
                },
                "param_1": {
                    "data": 26,
                    "data_buffer": 5
                },
                "param_2": {
                    "data_length": 5,
                    "data_size": 3,
                    "length": 14,
                    "size": 9
                },
                "param_3": {
                    "param3": 1
                },
                "param_4": {
                    "param4": 1
                },
                "pinmap_peripheral": {
                    "map_peripheral": 1
                },
                "uVar3": {
                    "counter": 1,
                    "i": 2,
                    "index": 27,
                    "peripheral_index": 1
                },
                "uart_debug_init": {
                    "initialize_debug": 1
                }
            },
            "called": [
                "FUN_080034f4",
                "FUN_08000e30",
                "FUN_08002dd0",
                "FUN_08003cc8"
            ],
            "calling": [
                "FUN_080040ec"
            ],
            "code": "\nuint transmit_debug_data_08003d18(undefined4 data,uint length)\n\n{\n  int start_time;\n  int peripheral;\n  uint index;\n  \n  start_time = get_ticks();\n  peripheral = map_peripheral(0x38,&DAT_08005ca0);\n  if (peripheral == 0) {\n    return 0;\n  }\n  for (index = 0;\n      (index < 10 &&\n      (((&DAT_200002b4)[index] == 0 ||\n       (peripheral = map_peripheral(0x38,&DAT_08005ca0), *(int *)(&DAT_200002b4)[index] != peripheral))));\n      index = index + 1 & 0xff) {\n  }\n  if (9 < index) {\n    if ((9 < DAT_20000074) && (initialize_debug(), 9 < DAT_20000074)) {\n      return 0;\n    }\n    index = (uint)DAT_20000074;\n  }\n  do {\n    peripheral = transmit_uart((&DAT_200002b4)[index],data,length & 0xffff,1000);\n    if (peripheral == 0) {\n      return length;\n    }\n    peripheral = get_ticks();\n  } while ((uint)(peripheral - start_time) < 1000);\n  return 0;\n}\n\n",
            "current_name": "transmit_debug_data_08003d18",
            "entrypoint": "0x08003d18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003d18": "transmit_debug_data_08003d18",
                "HAL_GetTick": "get_ticks",
                "HAL_UART_Transmit": "transmit_uart",
                "iVar1": "start_time",
                "iVar2": "peripheral",
                "param_1": "data",
                "param_2": "length",
                "pinmap_peripheral": "map_peripheral",
                "uVar3": "index",
                "uart_debug_init": "initialize_debug"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003dd0": {
            "additional_data": {
                "FUN_0800312c": {
                    "get_uart_state": 1,
                    "get_value_from_index": 1
                },
                "FUN_08003dd0": {
                    "check_uart_state": 10,
                    "check_uart_transmission": 2,
                    "is_uart_error": 1,
                    "is_uart_ready_to_send": 1,
                    "is_uart_state_active": 1,
                    "is_uart_state_clear": 1,
                    "is_uart_state_error": 2,
                    "is_uart_state_ready": 1,
                    "is_uart_state_valid": 6,
                    "is_uart_status_valid": 1,
                    "is_uart_transmit_complete": 1,
                    "is_uart_transmitting": 4
                },
                "HAL_UART_GetState": {
                    "get_uart_state": 11,
                    "retrieve_uart_state": 1
                },
                "byte": {
                    "byte": 1
                },
                "param_1": {
                    "data": 1,
                    "data_address": 1,
                    "data_buffer": 1,
                    "data_index": 1,
                    "device_handle": 2,
                    "device_id": 2,
                    "device_index": 2,
                    "index": 3,
                    "input": 2,
                    "input_arg": 1,
                    "input_value": 7,
                    "state_index": 1,
                    "status": 1,
                    "uart_handle": 3,
                    "uart_instance": 2,
                    "value": 1
                },
                "uVar1": {
                    "state": 1,
                    "uart_state": 30
                }
            },
            "called": [
                "FUN_0800312c"
            ],
            "calling": [
                "FUN_08003e54",
                "FUN_08003e18"
            ],
            "code": "\nbool check_uart_state_08003dd0(int input_value)\n\n{\n  uint uart_state;\n  \n  uart_state = get_uart_state((&DAT_200002b4)[*(byte *)(input_value + 0x44)]);\n  return (uart_state & 0x22) == 0x22;\n}\n\n",
            "current_name": "check_uart_state_08003dd0",
            "entrypoint": "0x08003dd0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003dd0": "check_uart_state_08003dd0",
                "HAL_UART_GetState": "get_uart_state",
                "param_1": "input_value",
                "uVar1": "uart_state"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003df4": {
            "additional_data": {
                "0x44": {
                    "offset": 1
                },
                "FUN_0800312c": {
                    "get_byte_value": 1,
                    "get_data": 1
                },
                "FUN_08003df4": {
                    "check_uart_error": 1,
                    "check_uart_state": 15,
                    "check_uart_status": 1,
                    "is_uart_idle": 1,
                    "is_uart_ready": 2,
                    "is_uart_state_bad": 1,
                    "is_uart_state_busy": 1,
                    "is_uart_state_complete": 1,
                    "is_uart_state_error": 1,
                    "is_uart_state_ok": 1,
                    "is_uart_state_valid": 2,
                    "is_uart_transmit_complete": 2,
                    "is_uart_transmitting": 2
                },
                "HAL_UART_GetState": {
                    "get_uart_state": 9
                },
                "byte": {
                    "byte": 1,
                    "byte_value": 1
                },
                "param_1": {
                    "buffer_index": 1,
                    "data": 1,
                    "data_index": 2,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "device_handle": 1,
                    "device_id": 3,
                    "device_index": 1,
                    "index": 4,
                    "input_buffer": 1,
                    "input_value": 7,
                    "state_index": 1,
                    "transmitting_port": 1,
                    "uart_handle": 3,
                    "uart_index": 1,
                    "uart_instance": 1,
                    "uart_port": 1
                },
                "uVar1": {
                    "state": 2,
                    "uart_state": 29
                }
            },
            "called": [
                "FUN_0800312c"
            ],
            "calling": [
                "FUN_080042e8"
            ],
            "code": "\nbool check_uart_state_08003df4(int input_value)\n\n{\n  uint uart_state;\n  \n  uart_state = get_uart_state((&DAT_200002b4)[*(byte_value *)(input_value + 0x44)]);\n  return (uart_state & 0x21) == 0x21;\n}\n\n",
            "current_name": "check_uart_state_08003df4",
            "entrypoint": "0x08003df4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003df4": "check_uart_state_08003df4",
                "HAL_UART_GetState": "get_uart_state",
                "byte": "byte_value",
                "param_1": "input_value",
                "uVar1": "uart_state"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003e18": {
            "additional_data": {
                "FUN_08002efa": {
                    "check_rx_active": 1,
                    "process_received_data": 1
                },
                "FUN_08003dd0": {
                    "is_serial_rx_active": 1,
                    "serial_rx_active": 1
                },
                "FUN_08003e18": {
                    "extract_and_receive_byte": 1,
                    "extract_data_from_serial": 1,
                    "extract_serial_data": 2,
                    "process_serial_rx": 1,
                    "read_serial_data": 2,
                    "receive_and_process_data": 2,
                    "receive_and_update_data": 1,
                    "receive_data": 16,
                    "receive_data_from_uart": 3,
                    "receive_serial_data": 2
                },
                "HAL_UART_Receive_IT": {
                    "receive_data": 1,
                    "receive_data_from_uart": 1,
                    "receive_data_interrupt": 2,
                    "start_uart_receive": 1
                },
                "byte": {
                    "byte_value": 1,
                    "data_index": 1
                },
                "iVar1": {
                    "is_rx_active": 16,
                    "is_serial_active": 1,
                    "is_serial_rx_active": 12
                },
                "param_1": {
                    "data": 3,
                    "data_buffer": 7,
                    "data_length": 6,
                    "data_ptr": 4,
                    "data_size": 1,
                    "device_id": 1,
                    "input_value": 1,
                    "serial_data_buffer": 1,
                    "serial_data_ptr": 1,
                    "serial_port": 1,
                    "status": 1,
                    "status_code": 1,
                    "uart_index": 1,
                    "uart_port": 2
                },
                "param_2": {
                    "buffer": 4,
                    "buffer_ptr": 1,
                    "data": 1,
                    "data_buffer": 6,
                    "output": 2,
                    "output_buffer": 3,
                    "output_data": 1,
                    "receive_buffer": 1,
                    "received_byte": 2,
                    "received_data": 9,
                    "received_data_ptr": 1
                },
                "param_3": {
                    "callback_param1": 1,
                    "config_value_1": 1,
                    "param3": 3,
                    "param_3": 22,
                    "size": 2,
                    "temp1": 1,
                    "value_1": 1
                },
                "param_4": {
                    "callback_data": 1,
                    "callback_function": 1,
                    "callback_param2": 1,
                    "config_value_2": 1,
                    "interrupt_handle": 1,
                    "param4": 3,
                    "param_4": 19,
                    "temp2": 1,
                    "timeout": 1,
                    "uart_callback": 1,
                    "value_2": 1
                },
                "serial_rx_active": {
                    "check_rx_status": 1,
                    "check_serial_rx_active": 2,
                    "check_serial_rx_activity": 1,
                    "is_serial_rx_active": 1
                }
            },
            "called": [
                "FUN_08002efa",
                "FUN_08003dd0"
            ],
            "calling": [
                "FUN_080042ac"
            ],
            "code": "\nundefined4 receive_data_from_uart_08003e18(int data_buffer,undefined *received_data,undefined4 param_3,undefined4 param_4)\n\n{\n  int is_rx_active;\n  \n  if (data_buffer == 0) {\n    return 0xffffffff;\n  }\n  is_rx_active = check_serial_rx_active();\n  if (is_rx_active == 0) {\n    *received_data = *(undefined *)(data_buffer + 0x45);\n    receive_data_interrupt((&DAT_200002b4)[*(data_index *)(data_buffer + 0x44)],data_buffer + 0x45,1,&DAT_200002b4,\n                        param_4);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "receive_data_from_uart_08003e18",
            "entrypoint": "0x08003e18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003e18": "receive_data_from_uart_08003e18",
                "HAL_UART_Receive_IT": "receive_data_interrupt",
                "byte": "data_index",
                "iVar1": "is_rx_active",
                "param_1": "data_buffer",
                "param_2": "received_data",
                "serial_rx_active": "check_serial_rx_active"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003e54": {
            "additional_data": {
                "DAT_20000214": {
                    "data_array1": 1,
                    "data_buffer": 1
                },
                "DAT_2000023c": {
                    "data_array2": 1,
                    "device_buffer": 1
                },
                "DAT_200002b4": {
                    "interrupt_handler_table": 1
                },
                "FUN_08000e60": {
                    "enable_interrupt": 1,
                    "function2": 1,
                    "perform_task2": 1,
                    "send_data": 1
                },
                "FUN_08000ec4": {
                    "function1": 1,
                    "perform_task1": 1,
                    "process_data": 1,
                    "set_priority": 1
                },
                "FUN_08002efa": {
                    "initialize_data": 1,
                    "read_data": 1,
                    "serial_rx_active": 2
                },
                "FUN_08003dd0": {
                    "function3": 1,
                    "is_interrupt_enabled": 1,
                    "is_interrupt_single_triggered": 1,
                    "is_param_zero": 1
                },
                "FUN_08003e54": {
                    "configure_serial_port": 1,
                    "handle_incoming_data": 1,
                    "handle_serial_data": 1,
                    "handle_serial_receive": 1,
                    "initialize_communication": 1,
                    "initialize_peripheral": 1,
                    "initialize_serial": 2,
                    "initialize_serial_communication": 14,
                    "initialize_serial_interrupt": 1,
                    "initialize_serial_irq": 1,
                    "initialize_serial_port": 1,
                    "initialize_serial_rx": 2,
                    "initialize_uart_interrupt": 1,
                    "initiate_uart_rx": 1,
                    "process_received_data": 1,
                    "setup_serial_interrupt": 1
                },
                "HAL_NVIC_EnableIRQ": {
                    "enable_interrupt": 7
                },
                "HAL_NVIC_SetPriority": {
                    "configure_interrupt_priority": 2,
                    "set_interrupt_priority": 5
                },
                "HAL_UART_Receive_IT": {
                    "receive_data_interrupt": 2,
                    "receive_data_interrupt_enable": 1,
                    "receive_interrupt": 2,
                    "start_async_receive": 1
                },
                "iVar1": {
                    "is_active": 4,
                    "is_rx_active": 10,
                    "is_serial_active": 1,
                    "is_serial_rx_active": 9,
                    "rx_active": 4,
                    "serial_active": 1,
                    "serial_rx_active": 1,
                    "serial_rx_status": 1
                },
                "param_1": {
                    "data": 1,
                    "data_ptr": 1,
                    "device_address": 2,
                    "device_id": 1,
                    "interrupt": 1,
                    "peripheral_address": 1,
                    "port": 1,
                    "serial_data": 1,
                    "serial_device": 1,
                    "serial_port": 17,
                    "serial_port_number": 2,
                    "serial_rx": 1,
                    "uart_handle": 1
                },
                "param_2": {
                    "baud_rate": 5,
                    "config_value": 1,
                    "data": 18,
                    "data_to_receive": 1,
                    "priority": 3,
                    "value": 2,
                    "value2": 1
                },
                "param_3": {
                    "address": 2,
                    "config_data": 1,
                    "data_bits": 5,
                    "group_priority": 1,
                    "instruction": 1,
                    "interrupt_priority": 1,
                    "length": 1,
                    "param3": 4,
                    "param_3": 4,
                    "priority": 5,
                    "unused": 1,
                    "unused1": 3,
                    "unused_param1": 1,
                    "value3": 1
                },
                "param_4": {
                    "interrupt_configuration": 1,
                    "interrupt_count": 1,
                    "interrupt_en": 1,
                    "interrupt_id": 1,
                    "interrupt_sub_priority": 1,
                    "irq_enabled": 1,
                    "irq_handler": 1,
                    "irq_param": 1,
                    "is_enabled": 1,
                    "param4": 4,
                    "param_4": 4,
                    "priority": 4,
                    "priority_level": 1,
                    "stop_bits": 5,
                    "sub_priority": 1,
                    "unused2": 2,
                    "unused_param2": 1
                },
                "serial_rx_active": {
                    "is_serial_receiving_active": 1
                },
                "uVar2": {
                    "byte_value": 3,
                    "channel_index": 1,
                    "data_index": 1,
                    "index": 9,
                    "peripheral_index": 1,
                    "port_index": 9,
                    "port_offset": 1,
                    "rx_index": 1,
                    "serial_index": 1,
                    "serial_port_index": 3,
                    "uart_id": 1
                }
            },
            "called": [
                "FUN_08002efa",
                "FUN_08000ec4",
                "FUN_08000e60",
                "FUN_08003dd0"
            ],
            "calling": [
                "FUN_08004388"
            ],
            "code": "\nvoid initialize_serial_communication_08003e54(int serial_port,undefined4 data,undefined4 priority,undefined4 stop_bits)\n\n{\n  int is_rx_active;\n  uint index;\n  \n  if (serial_port != 0) {\n    is_rx_active = is_serial_receiving_active();\n    if (is_rx_active == 0) {\n      index = (uint)*(byte *)(serial_port + 0x44);\n      *(undefined4 *)(&DAT_20000214 + index * 4) = data;\n      *(int *)(&DAT_2000023c + index * 4) = serial_port;\n      set_interrupt_priority((int)*(char *)(serial_port + 0x5c),0,1,index,stop_bits);\n      enable_interrupt((int)*(char *)(serial_port + 0x5c));\n      receive_interrupt((&DAT_200002b4)[*(byte *)(serial_port + 0x44)],serial_port + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_serial_communication_08003e54",
            "entrypoint": "0x08003e54",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003e54": "initialize_serial_communication_08003e54",
                "HAL_NVIC_EnableIRQ": "enable_interrupt",
                "HAL_NVIC_SetPriority": "set_interrupt_priority",
                "HAL_UART_Receive_IT": "receive_interrupt",
                "iVar1": "is_rx_active",
                "param_1": "serial_port",
                "param_2": "data",
                "param_3": "priority",
                "param_4": "stop_bits",
                "serial_rx_active": "is_serial_receiving_active",
                "uVar2": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003eac": {
            "additional_data": {
                "FUN_08000e60": {
                    "calculate_value": 1,
                    "enable_interrupt": 1,
                    "enable_interrupts": 1,
                    "perform_function2": 1,
                    "perform_operation": 1,
                    "transmit_data": 1
                },
                "FUN_08000ec4": {
                    "configure_interrupt": 1,
                    "initialize_peripheral": 1,
                    "perform_function1": 1,
                    "perform_operation": 1,
                    "set_interrupt_priority": 1,
                    "set_system_priority": 1
                },
                "FUN_08002eb2": {
                    "adjust_param1": 1,
                    "initialize_memory_parameters": 1,
                    "initialize_uart": 1,
                    "process_data": 2,
                    "reverse_order": 1
                },
                "FUN_08003eac": {
                    "configure_peripheral": 4,
                    "configure_uart": 1,
                    "initialize_component": 1,
                    "initialize_device": 1,
                    "initialize_hardware_component": 2,
                    "initialize_periph_and_transmit_data": 1,
                    "initialize_peripheral": 11,
                    "initialize_uart": 1,
                    "process_uart_data": 1,
                    "set_interrupt_priority_and_enable": 1,
                    "setup_peripheral": 1,
                    "transmit_data": 4,
                    "transmit_uart_data": 1,
                    "update_and_transmit_data": 1
                },
                "HAL_NVIC_EnableIRQ": {
                    "enable_interrupt": 5,
                    "enable_interrupts": 1,
                    "enable_irq": 1
                },
                "HAL_NVIC_SetPriority": {
                    "set_interrupt_priority": 5,
                    "set_priority": 2
                },
                "HAL_UART_Transmit_IT": {
                    "transmit_data": 2,
                    "transmit_data_serially": 1,
                    "transmit_data_using_uart": 1,
                    "transmit_data_via_uart": 1,
                    "transmit_uart_data": 2
                },
                "bVar1": {
                    "byte_value": 6,
                    "data_index": 1,
                    "device_index": 1,
                    "index": 5,
                    "offset": 1,
                    "peripheral_index": 14,
                    "peripheral_selector": 1,
                    "uart_index": 2
                },
                "param_1": {
                    "base_address": 1,
                    "component_address": 2,
                    "component_id": 1,
                    "data": 1,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "data_ptr": 4,
                    "device_address": 3,
                    "peripheral_address": 16,
                    "uart_handle": 1
                },
                "param_2": {
                    "component_value": 1,
                    "config_data": 1,
                    "config_value": 1,
                    "configuration_data": 1,
                    "data": 3,
                    "data_value": 2,
                    "init_value": 1,
                    "initialization_value": 1,
                    "interrupt_priority": 1,
                    "new_value": 1,
                    "param": 1,
                    "parameter_value": 1,
                    "peripheral_value": 1,
                    "priority": 5,
                    "priority_level": 4,
                    "priority_value": 2,
                    "uart_config": 1,
                    "value": 3
                },
                "param_3": {
                    "interrupt_number": 1
                }
            },
            "called": [
                "FUN_08002eb2",
                "FUN_08000ec4",
                "FUN_08000e60"
            ],
            "calling": [
                "FUN_080042e8"
            ],
            "code": "\nvoid initialize_peripheral_08003eac(int peripheral_address,undefined4 priority)\n\n{\n  byte peripheral_index;\n  \n  if (peripheral_address != 0) {\n    peripheral_index = *(byte *)(peripheral_address + 0x44);\n    *(undefined4 *)(&DAT_20000264 + (uint)peripheral_index * 4) = priority;\n    *(int *)(&DAT_2000028c + (uint)peripheral_index * 4) = peripheral_address;\n    set_interrupt_priority((int)*(char *)(peripheral_address + 0x5c),0,2);\n    enable_interrupt((int)*(char *)(peripheral_address + 0x5c));\n    transmit_data\n              ((&DAT_200002b4)[*(byte *)(peripheral_address + 0x44)],\n               *(int *)(peripheral_address + 0x68) + (uint)*(ushort *)(peripheral_address + 0x6e),1);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_peripheral_08003eac",
            "entrypoint": "0x08003eac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003eac": "initialize_peripheral_08003eac",
                "HAL_NVIC_EnableIRQ": "enable_interrupt",
                "HAL_NVIC_SetPriority": "set_interrupt_priority",
                "HAL_UART_Transmit_IT": "transmit_data",
                "bVar1": "peripheral_index",
                "param_1": "peripheral_address",
                "param_2": "priority"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f00": {
            "additional_data": {
                "DAT_200002b4": {
                    "array": 1
                },
                "FUN_08003f00": {
                    "check_input": 1,
                    "find_index": 6,
                    "find_index_in_array": 1,
                    "find_index_in_data": 1,
                    "find_index_of_value": 1,
                    "find_matching_index": 2,
                    "find_next_digit": 1,
                    "find_nth_position": 1,
                    "find_number": 1,
                    "find_number_in_array": 3,
                    "find_number_index": 1,
                    "find_param_index": 4,
                    "find_parameter_index": 1,
                    "find_value_in_array": 1,
                    "find_value_index": 5,
                    "lookup_value": 1
                },
                "param_1": {
                    "index": 2,
                    "input": 2,
                    "input_number": 1,
                    "input_param": 1,
                    "input_value": 3,
                    "num": 1,
                    "number": 7,
                    "value": 13,
                    "value_to_find": 1
                },
                "uVar1": {
                    "array_index": 1,
                    "found_index": 3,
                    "index": 21,
                    "matching_index": 1,
                    "next_digit": 1,
                    "position": 1,
                    "result": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08003f48",
                "FUN_08003f24"
            ],
            "code": "\nuint find_index_of_value_08003f00(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 10;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (9 < index) {\n        return index;\n      }\n      if (value == (&DAT_200002b4)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "current_name": "find_index_of_value_08003f00",
            "entrypoint": "0x08003f00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003f00": "find_index_of_value_08003f00",
                "param_1": "value",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f24": {
            "additional_data": {
                "DAT_20000214": {
                    "command_function_table": 1,
                    "function_table": 2,
                    "uart_operation_table": 1
                },
                "DAT_2000023c": {
                    "command_parameter_table": 1,
                    "parameter_table": 2,
                    "uart_parameter_table": 1
                },
                "FUN_08003f00": {
                    "get_uart_command": 1,
                    "get_uart_index": 13
                },
                "FUN_08003f24": {
                    "execute_selected_uart_operation": 1,
                    "execute_uart_action": 1,
                    "execute_uart_command": 10,
                    "execute_uart_function": 10,
                    "execute_uart_index": 1,
                    "execute_uart_index_function": 1,
                    "execute_uart_operation": 2,
                    "execute_uart_task": 1,
                    "handle_uart_commands": 1,
                    "perform_uart_action": 1,
                    "process_uart_command": 1,
                    "process_uart_data": 1
                },
                "param_1": {
                    "index": 6,
                    "uart_index_value": 1
                },
                "uVar1": {
                    "index": 3,
                    "uart_index": 14,
                    "uart_index_result": 9
                },
                "uart_index": {
                    "get_uart_index": 1
                }
            },
            "called": [
                "FUN_08003f00"
            ],
            "calling": [
                "FUN_08002f66"
            ],
            "code": "\nvoid execute_uart_index_function_08003f24(void)\n\n{\n  uint uart_index;\n  \n  uart_index = get_uart_index();\n  if (uart_index < 10) {\n    (**(code **)(&DAT_20000214 + uart_index * 4))(*(undefined4 *)(&DAT_2000023c + uart_index * 4));\n  }\n  return;\n}\n\n",
            "current_name": "execute_uart_index_function_08003f24",
            "entrypoint": "0x08003f24",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003f24": "execute_uart_index_function_08003f24",
                "uVar1": "uart_index",
                "uart_index": "get_uart_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f48": {
            "additional_data": {
                "FUN_08002eb2": {
                    "process_data": 4,
                    "process_uart_data": 12
                },
                "FUN_08003f00": {
                    "get_message": 1,
                    "get_uart_config": 2,
                    "get_uart_data_length": 1,
                    "get_uart_descriptor": 1,
                    "get_uart_handle": 2,
                    "get_uart_index": 8,
                    "get_uart_instance": 1
                },
                "FUN_08003f48": {
                    "transmit_data": 15,
                    "transmit_data_if_needed": 1,
                    "transmit_data_if_valid_uart": 1,
                    "transmit_data_over_uart": 2,
                    "transmit_uart_data": 12
                },
                "HAL_UART_Transmit_IT": {
                    "transmit_uart_data_it": 1,
                    "transmit_uart_data_with_it": 1
                },
                "iVar2": {
                    "result": 28,
                    "return_value": 1,
                    "status": 1,
                    "transmission_result": 1
                },
                "iVar3": {
                    "data_address": 1,
                    "data_pointer": 1,
                    "uart_address": 4,
                    "uart_config": 4,
                    "uart_data": 4,
                    "uart_data_address": 1,
                    "uart_descriptor": 1,
                    "uart_handle": 3,
                    "uart_info": 2,
                    "uart_instance": 2,
                    "uart_pointer": 5,
                    "uart_ptr": 3
                },
                "param_1": {
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "uart_data": 1,
                    "uart_handle": 1,
                    "uart_index": 1
                },
                "param_2": {
                    "buffer_size": 1,
                    "index": 1,
                    "length": 1,
                    "uart_data_size": 1
                },
                "param_3": {
                    "index": 1,
                    "length": 1,
                    "size": 1,
                    "uart_index": 1
                },
                "uVar1": {
                    "index": 2,
                    "uart_index": 29
                }
            },
            "called": [
                "FUN_08002eb2",
                "FUN_08003f00"
            ],
            "calling": [
                "FUN_08002f4c"
            ],
            "code": "\nvoid transmit_data_over_uart_08003f48(void)\n\n{\n  uint uart_index;\n  int result;\n  int uart_pointer;\n  \n  uart_index = uart_index();\n  uart_pointer = *(int *)(&DAT_2000028c + uart_index * 4);\n  if ((uart_index < 10) && (result = (**(code **)(&DAT_20000264 + uart_index * 4))(uart_pointer), result != -1)) {\n    transmit_uart_data_with_it\n              ((&DAT_200002b4)[*(byte *)(uart_pointer + 0x44)],\n               *(int *)(uart_pointer + 0x68) + (uint)*(ushort *)(uart_pointer + 0x6e),1);\n  }\n  return;\n}\n\n",
            "current_name": "transmit_data_over_uart_08003f48",
            "entrypoint": "0x08003f48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003f48": "transmit_data_over_uart_08003f48",
                "HAL_UART_Transmit_IT": "transmit_uart_data_with_it",
                "iVar2": "result",
                "iVar3": "uart_pointer",
                "uVar1": "uart_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f94": {
            "called": [],
            "calling": [
                "FUN_08002ffc"
            ],
            "code": "\nvoid FUNC_08003f94(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08003f94",
            "entrypoint": "0x08003f94",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08003f94": "FUNC_08003f94"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004094": {
            "additional_data": {
                "DAT_200002dc": {
                    "allocated_memory_start": 1,
                    "curr_pointer": 1,
                    "current_mem_pointer": 1,
                    "current_mem_ptr": 1,
                    "current_memory": 4,
                    "current_memory_block": 1,
                    "current_memory_pointer": 1,
                    "current_memory_ptr": 2,
                    "current_pointer": 6,
                    "current_position": 3,
                    "current_ptr": 1
                },
                "DAT_20000674": {
                    "error_code": 18,
                    "error_flag": 1,
                    "memory_overflow_error": 1
                },
                "DAT_20000678": {
                    "default_pointer": 1,
                    "initial_memory": 3,
                    "initial_memory_pointer": 1,
                    "initial_memory_ptr": 1,
                    "initial_pointer": 3,
                    "stack_end": 1,
                    "start_of_heap": 1,
                    "start_of_memory": 1,
                    "starting_position": 1
                },
                "FUN_08004094": {
                    "allocate_memory": 26,
                    "allocate_memory_block": 2,
                    "get_free_memory_block": 1,
                    "get_memory_block": 2
                },
                "param_1": {
                    "block_size": 1,
                    "bytes_to_allocate": 1,
                    "requested_size": 1,
                    "size": 28
                },
                "puVar1": {
                    "allocated_memory": 23,
                    "allocated_memory_ptr": 1,
                    "buffer": 1,
                    "memory_block": 4,
                    "start_address": 2
                },
                "stack0x00000000": {
                    "end_of_memory": 1,
                    "end_of_stack": 3,
                    "stack_end": 2,
                    "stack_limit": 1,
                    "stack_memory": 1,
                    "stack_pointer": 1,
                    "stack_start": 2,
                    "stack_start_address": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800500c"
            ],
            "code": "\nundefined * allocate_memory_block_08004094(int size)\n\n{\n  undefined *allocated_memory;\n  \n  if (DAT_200002dc == (undefined *)0x0) {\n    DAT_200002dc = &DAT_20000678;\n  }\n  allocated_memory = DAT_200002dc;\n  if (DAT_200002dc + size <= &end_of_stack) {\n    DAT_200002dc = DAT_200002dc + size;\n    return allocated_memory;\n  }\n  DAT_20000674 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "current_name": "allocate_memory_block_08004094",
            "entrypoint": "0x08004094",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004094": "allocate_memory_block_08004094",
                "param_1": "size",
                "puVar1": "allocated_memory",
                "stack0x00000000": "end_of_stack"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040d0": {
            "additional_data": {
                "": {
                    "": 1
                },
                "0xffffffff": {
                    "error_code": 1
                },
                "DAT_87654321": {
                    "default_error_code": 1
                },
                "FUN_080040d0": {
                    "get_default_return_value": 1,
                    "get_default_value": 7,
                    "get_error_code": 14,
                    "get_resource_status": 1,
                    "get_return_value": 2,
                    "initialize": 1,
                    "initialize_error_status": 1,
                    "initialize_return_code": 1,
                    "initialize_return_value": 2
                },
                "PTR_12345678": {
                    "error_code": 1
                },
                "undefined4": {
                    "error_code": 3,
                    "error_status": 1,
                    "int": 1,
                    "uint32_t": 4,
                    "unsigned_int": 1,
                    "void": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nuint32_t get_error_code_080040d0(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "current_name": "get_error_code_080040d0",
            "entrypoint": "0x080040d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040d0": "get_error_code_080040d0",
                "undefined4": "uint32_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040d6": {
            "additional_data": {
                "0x2000": {
                    "flag_value": 1,
                    "permission": 1
                },
                "FUN_080040d6": {
                    "initialize_memory": 13,
                    "set_buffer_size": 1,
                    "set_memory": 1,
                    "set_memory_block_size": 1,
                    "set_memory_flag": 4,
                    "set_memory_flags": 1,
                    "set_memory_page_size": 4,
                    "set_memory_permission": 1,
                    "set_memory_segment_size": 1,
                    "set_memory_size": 2,
                    "set_memory_to2000": 1,
                    "set_page_permissions": 1
                },
                "param_1": {
                    "buffer": 1,
                    "memory_address": 4,
                    "memory_pointer": 1,
                    "page_pointer": 1,
                    "param": 4,
                    "param1": 10,
                    "param_1": 2,
                    "parameter_1": 1,
                    "ptr": 1,
                    "ptr_input": 1,
                    "result": 2,
                    "unused": 1,
                    "unused_parameter": 1,
                    "value": 1
                },
                "param_2": {
                    "addr": 1,
                    "address": 4,
                    "base_address": 1,
                    "buffer": 3,
                    "buffer_address": 3,
                    "buffer_base": 1,
                    "mem_address": 1,
                    "memory_address": 9,
                    "offset": 1,
                    "page_address": 1,
                    "param2": 2,
                    "pointer_2": 1,
                    "ptr_buffer": 1,
                    "size": 1,
                    "target_address": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080056d4"
            ],
            "code": "\nundefined4 initialize_memory_080040d6(undefined4 param1,int memory_address)\n\n{\n  *(undefined4 *)(memory_address + 4) = 0x2000;\n  return 0;\n}\n\n",
            "current_name": "initialize_memory_080040d6",
            "entrypoint": "0x080040d6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040d6": "initialize_memory_080040d6",
                "param_1": "param1",
                "param_2": "memory_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040e0": {
            "additional_data": {
                "DAT_080040e0": {
                    "result": 1
                },
                "DAT_08004108": {
                    "flag": 1
                },
                "FUN_080040e0": {
                    "check_return_value": 1,
                    "check_status": 1,
                    "check_success": 2,
                    "get_default_value": 1,
                    "get_one": 3,
                    "get_result": 1,
                    "get_return_value": 5,
                    "get_status_code": 1,
                    "initialize": 6,
                    "initialize_application": 2,
                    "initialize_flag": 1,
                    "initialize_program": 2,
                    "initialize_system": 1,
                    "initialize_variable": 1,
                    "is_always_one": 1,
                    "return_one": 2
                },
                "PTR_1234": {
                    "result": 1
                },
                "original_parameter_name_1": {
                    "new_parameter_name_1": 1
                },
                "original_variable_name_1": {
                    "result": 1
                },
                "return": {
                    "status": 2
                },
                "undefined4": {
                    "bool": 1,
                    "int": 5,
                    "result": 1,
                    "status": 2,
                    "void": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_080056f8"
            ],
            "code": "\nint initialize_application_080040e0(void)\n\n{\n  status 1;\n}\n\n",
            "current_name": "initialize_application_080040e0",
            "entrypoint": "0x080040e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040e0": "initialize_application_080040e0",
                "return": "status",
                "undefined4": "int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040e4": {
            "additional_data": {
                "": {
                    "": 1
                },
                "FUN_080040e4": {
                    "clear_memory": 1,
                    "clear_screen": 2,
                    "get_default_value": 7,
                    "get_zero": 2,
                    "initialize": 11,
                    "initialize_application": 1,
                    "initialize_data": 1,
                    "initialize_program": 2,
                    "initialize_system": 1,
                    "initialize_variable": 1,
                    "more_descriptive_function": 1,
                    "return_zero": 1
                },
                "ReturnValue": {
                    "result": 1
                },
                "return_value": {
                    "result": 1
                },
                "undefined4": {
                    "int": 2,
                    "result": 1,
                    "uint32_t": 1,
                    "unsigned_int": 1,
                    "void": 10
                }
            },
            "called": [],
            "calling": [
                "FUN_08005718"
            ],
            "code": "\nvoid initialize_program_080040e4(void)\n\n{\n  return 0;\n}\n\n",
            "current_name": "initialize_program_080040e4",
            "entrypoint": "0x080040e4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040e4": "initialize_program_080040e4",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040e8": {
            "additional_data": {
                "": {
                    "": 1
                },
                "FUN_080040e8": {
                    "calculate_sum": 1,
                    "clear_registers": 1,
                    "get_default_value": 5,
                    "get_result": 1,
                    "get_zero": 1,
                    "get_zero_value": 1,
                    "initialize": 15,
                    "initialize_application": 4,
                    "initialize_program": 1,
                    "initialize_system": 1
                },
                "PTR_NULL": {
                    "ptr_null": 1
                },
                "original_parameter_name_1": {
                    "new_parameter_name_1": 1
                },
                "original_variable_name_1": {
                    "result": 1
                },
                "return": {
                    "result": 1,
                    "status": 1
                },
                "undefined4": {
                    "int": 1,
                    "uint32": 1,
                    "void": 9
                }
            },
            "called": [],
            "calling": [
                "FUN_0800573c"
            ],
            "code": "\nvoid initialize_application_080040e8(void)\n\n{\n  result 0;\n}\n\n",
            "current_name": "initialize_application_080040e8",
            "entrypoint": "0x080040e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040e8": "initialize_application_080040e8",
                "return": "result",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040ec": {
            "additional_data": {
                "FUN_08003d18": {
                    "calculate_checksum": 3,
                    "fetch_data": 1,
                    "get_message_ptr": 1,
                    "modify_data": 1,
                    "modify_uart_param": 1,
                    "process_data": 5,
                    "reverse_bytes": 2,
                    "reverse_integer": 1
                },
                "FUN_080040ec": {
                    "debug_write_uart": 1,
                    "uart_debug_print": 1,
                    "uart_debug_write_wrapper": 4,
                    "write_debug_data": 1,
                    "write_debug_info": 2,
                    "write_debug_information": 4,
                    "write_debug_message": 15,
                    "write_debug_output": 3
                },
                "data_size": {
                    "size": 1
                },
                "param_1": {
                    "arg1": 2,
                    "arg1_calculate_checksum": 1,
                    "input_data": 1,
                    "param": 1,
                    "param_1": 6,
                    "param_unused": 1,
                    "undefined1": 1,
                    "undefined4_1": 1,
                    "undefined_param_1": 1,
                    "unknown_1": 1,
                    "unknown_param": 1,
                    "unrelated_param": 1,
                    "unused": 2,
                    "unused_param": 11
                },
                "param_2": {
                    "address": 2,
                    "arg1": 1,
                    "arg2": 1,
                    "arg2_calculate_checksum": 1,
                    "buffer": 1,
                    "data": 5,
                    "data_1": 4,
                    "data_param": 1,
                    "data_param_1": 1,
                    "data_size": 1,
                    "data_start": 1,
                    "input": 1,
                    "input_length": 1,
                    "message": 3,
                    "message_1": 1,
                    "new_param": 1,
                    "param_1": 1,
                    "ptr": 1,
                    "uart_base_address": 1,
                    "uart_param": 1,
                    "undefined4_2": 1
                },
                "param_3": {
                    "arg3": 3,
                    "data_1": 1,
                    "data_2": 5,
                    "data_buffer": 1,
                    "data_end": 1,
                    "data_length": 1,
                    "data_param_2": 2,
                    "data_size": 1,
                    "length": 4,
                    "message_2": 1,
                    "new_param2": 1,
                    "param_a": 1,
                    "size": 7,
                    "uart_param_2": 1,
                    "undefined4_3": 1
                },
                "param_4": {
                    "arg4": 3,
                    "buffer": 1,
                    "buffer_start": 1,
                    "checksum": 1,
                    "data_2": 1,
                    "data_3": 4,
                    "data_param_3": 1,
                    "new_param3": 1,
                    "param4": 1,
                    "param_4": 4,
                    "param_b": 1,
                    "param_p": 1,
                    "undefined4_4": 1,
                    "undefined_param_4": 1,
                    "unknown_2": 1,
                    "unused": 2,
                    "unused_param": 6
                },
                "return_val": {
                    "output": 1
                },
                "uint": {
                    "unsigned_integer": 1
                }
            },
            "called": [
                "FUN_08003d18"
            ],
            "calling": [
                "FUN_0800562a"
            ],
            "code": "\nvoid write_debug_message_080040ec(undefined4 unused_param,undefined4 data,undefined4 size,undefined4 unused_param)\n\n{\n  uart_debug_write(data,size,size,unused_param,unused_param);\n  return;\n}\n\n",
            "current_name": "write_debug_message_080040ec",
            "entrypoint": "0x080040ec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040ec": "write_debug_message_080040ec",
                "param_1": "unused_param",
                "param_2": "data",
                "param_3": "size",
                "param_4": "unused_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040f8": {
            "additional_data": {
                "DAT_": {
                    "": 3,
                    "dat_": 1
                },
                "DAT_080040f8": {
                    "d_infinite_loop": 1
                },
                "FUN_080040f8": {
                    "do_nothing_loop": 1,
                    "infinite_loop": 27,
                    "run_infinite_loop": 3
                },
                "PTR_": {
                    "": 3,
                    "ptr_": 1
                },
                "PTR_080040f8": {
                    "p_infinite_loop": 1
                },
                "ptr_1": {
                    "unchanged_ptr_1": 1
                },
                "ptr_2": {
                    "unchanged_ptr_2": 1
                }
            },
            "called": [
                "FUN_080040f8"
            ],
            "calling": [
                "FUN_080040f8",
                "FUN_080051ac"
            ],
            "code": "\nvoid run_infinite_loop_080040f8(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "run_infinite_loop_080040f8",
            "entrypoint": "0x080040f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040f8": "run_infinite_loop_080040f8"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040fc": {
            "additional_data": {
                "": {
                    "": 2
                },
                "DAT_20000674": {
                    "counter": 3,
                    "data_size": 1,
                    "data_value": 10,
                    "global_value": 1,
                    "initial_value": 6,
                    "value": 1
                },
                "FUN_080040fc": {
                    "initialize_counter": 2,
                    "initialize_data": 20,
                    "initialize_global_variable": 1,
                    "initialize_value": 2,
                    "initialize_variable": 1,
                    "set_initial_value": 5
                },
                "return": {
                    "status": 1
                },
                "return_value": {
                    "success_flag": 1
                },
                "undefined4": {
                    "void": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080055d0"
            ],
            "code": "\nvoid initialize_data_080040fc(void)\n\n{\n  DAT_20000674 = 0x16;\n  status 0xffffffff;\n}\n\n",
            "current_name": "initialize_data_080040fc",
            "entrypoint": "0x080040fc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040fc": "initialize_data_080040fc",
                "return": "status",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800410c": {
            "additional_data": {
                "": {
                    "": 1
                },
                "DAT_XXXXXXX": {
                    "data": 1
                },
                "DAT_YYYYYYY": {
                    "result": 1
                },
                "FUN_0800410c": {
                    "check_return_status": 1,
                    "determine_success_status": 1,
                    "get_one": 2,
                    "get_return_code": 1,
                    "get_return_value": 5,
                    "get_status": 2,
                    "initialize": 12,
                    "initialize_flag": 2,
                    "initialize_program": 2,
                    "initialize_return_value": 1,
                    "initialize_value": 1,
                    "return_one": 1
                },
                "PTR_XXXXXXX": {
                    "data_pointer": 1
                },
                "PTR_YYYYYYY": {
                    "result_pointer": 1
                },
                "retVal": {
                    "result": 1
                },
                "return": {
                    "result": 2,
                    "return_value": 1,
                    "status": 2
                },
                "return_value": {
                    "result": 1
                },
                "undefined4": {
                    "bool": 1,
                    "status": 2,
                    "uint32_t": 2,
                    "void": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08005604"
            ],
            "code": "\nuint32_t initialize_flag_0800410c(void)\n\n{\n  result 1;\n}\n\n",
            "current_name": "initialize_flag_0800410c",
            "entrypoint": "0x0800410c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800410c": "initialize_flag_0800410c",
                "return": "result",
                "undefined4": "uint32_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004110": {
            "additional_data": {
                "DAT_08005a18": {
                    "pin_map_1": 1
                },
                "DAT_08005a3c": {
                    "pin_map_2": 1
                },
                "DAT_08005d3c": {
                    "pin_address_table": 1
                },
                "DAT_200002e0": {
                    "pin_configuration_data_1": 1
                },
                "DAT_2000030c": {
                    "pin_configuration_data_2": 1
                },
                "FUN_08003138": {
                    "dac_stop": 1,
                    "unknown_function6": 1
                },
                "FUN_0800314e": {
                    "pwm_stop": 1,
                    "unknown_function5": 1
                },
                "FUN_0800316c": {
                    "is_pin_configured": 1,
                    "unknown_function2": 1
                },
                "FUN_080033d8": {
                    "reset_pin_configured": 1,
                    "unknown_function1": 1
                },
                "FUN_08003414": {
                    "set_pin_configured": 1,
                    "unknown_function3": 1
                },
                "FUN_08003486": {
                    "pin_in_pinmap": 1,
                    "unknown_function4": 1
                },
                "FUN_0800355e": {
                    "digital_io_init": 1,
                    "unknown_function7": 1
                },
                "FUN_08004110": {
                    "configure_and_init_io_pin": 1,
                    "configure_and_init_pin": 3,
                    "configure_gpio_pin": 1,
                    "configure_pin": 16,
                    "init_pin_and_configure": 1,
                    "initialize_gpio": 1,
                    "initialize_io_pin": 1,
                    "initialize_pin": 6
                },
                "Freeduino_Configure_Pin": {
                    "configure_pin": 1
                },
                "dac_stop": {
                    "dac_stop": 1,
                    "stop_dac": 10
                },
                "digital_io_init": {
                    "digital_io_init": 1,
                    "init_digital_io": 2,
                    "initialize_digital_io": 8
                },
                "iVar1": {
                    "configured": 1,
                    "is_configured": 10,
                    "pin_check_result": 2,
                    "pin_config_result": 2,
                    "pin_config_status": 1,
                    "pin_configured": 6,
                    "pin_in_pin_map_result": 1,
                    "pin_map_result": 1,
                    "pin_status": 2,
                    "result": 5
                },
                "iVar3": {
                    "index": 1,
                    "mapped_pin": 1,
                    "pin": 3,
                    "pin_address_offset": 1,
                    "pin_config": 1,
                    "pin_config_data_index": 1,
                    "pin_config_index": 1,
                    "pin_config_value": 1,
                    "pin_data": 1,
                    "pin_index": 6,
                    "pin_map_index": 1,
                    "pin_mapping": 1,
                    "pin_value": 11,
                    "pinmap_value": 1
                },
                "is_dac_pin_in_pinmap": {
                    "is_dac_pin_in_pinmap": 1
                },
                "is_pin_configured": {
                    "check_if_pin_configured": 1,
                    "check_pin_configuration": 1,
                    "is_pin_configured": 8
                },
                "is_pin_in_pinmap": {
                    "is_pin_in_pinmap": 1
                },
                "is_pwm_pin_in_pinmap": {
                    "is_pwm_pin_in_pinmap": 1
                },
                "param_1": {
                    "pin_id": 5,
                    "pin_index": 15,
                    "pin_number": 11
                },
                "param_2": {
                    "config_type": 1,
                    "digital_io_type": 1,
                    "init_mode": 1,
                    "init_value": 1,
                    "io_mode": 11,
                    "io_operation": 1,
                    "io_type": 2,
                    "mode": 6,
                    "pin_mode": 7
                },
                "param_3": {
                    "arg": 1,
                    "arg1": 3,
                    "config_3": 1,
                    "config_param": 1,
                    "config_value": 2,
                    "io_mode": 1,
                    "io_option": 1,
                    "option1": 1,
                    "param": 2,
                    "param3": 4,
                    "param_3": 6,
                    "param_value": 1,
                    "parameter3": 1,
                    "pin_config": 1,
                    "pin_mode": 1,
                    "pin_mode_param": 1,
                    "pin_option": 1,
                    "pull_up_down_config": 1,
                    "value": 1
                },
                "param_4": {
                    "arg2": 2,
                    "config_data": 1,
                    "config_ptr": 1,
                    "option2": 1,
                    "param4": 1,
                    "param_4": 2,
                    "parameter4": 1,
                    "pin_config": 9,
                    "pin_config_data": 3,
                    "pin_config_ptr": 2,
                    "pin_data": 1,
                    "pin_map": 6,
                    "pinmap": 1
                },
                "pin_in_pinmap": {
                    "check_if_pin_in_pinmap": 1,
                    "check_pin_in_pinmap": 2,
                    "is_pin_in_pin_map": 2,
                    "pin_in_pin_map": 1,
                    "pin_in_pinmap": 2
                },
                "puVar2": {
                    "pin_address": 2,
                    "pin_array": 2,
                    "pin_base_address": 1,
                    "pin_config_data_ptr": 1,
                    "pin_config_ptr": 3,
                    "pin_data": 7,
                    "pin_data_address": 1,
                    "pin_data_array": 1,
                    "pin_map": 7,
                    "pin_map_address": 1,
                    "pin_map_ptr": 3,
                    "pin_mapping_ptr": 1,
                    "pinmap": 1
                },
                "pwm_stop": {
                    "pwm_stop": 1,
                    "stop_pwm": 10
                },
                "reset_pin_configured": {
                    "reset_pin_configuration": 2,
                    "reset_pin_configured": 9
                },
                "set_pin_configured": {
                    "set_pin_configuration": 2,
                    "set_pin_configured": 9
                }
            },
            "called": [
                "FUN_080033d8",
                "FUN_0800316c",
                "FUN_08003414",
                "FUN_08003486",
                "FUN_0800314e",
                "FUN_08003138",
                "FUN_0800355e"
            ],
            "calling": [
                "FUN_08000600"
            ],
            "code": "\nvoid configure_and_init_io_pin_08004110(uint pin_index,undefined4 io_mode,undefined4 param_3,undefined *pin_config)\n\n{\n  int is_configured;\n  undefined *pin_data;\n  int pin_value;\n  \n  if (pin_index < 0x60) {\n    pin_value = (int)*(short *)(&DAT_08005d3c + pin_index * 2);\n    pin_data = &DAT_08005d3c;\n  }\n  else {\n    pin_value = -1;\n    pin_data = pin_config;\n  }\n  if (pin_value != -1) {\n    is_configured = is_pin_configured(pin_value,&DAT_200002e0,param_3,pin_data,pin_config);\n    if (is_configured != 0) {\n      is_configured = pin_in_pinmap(pin_value,&DAT_08005a18);\n      if (is_configured == 0) {\n        is_configured = pin_in_pinmap(pin_value,&DAT_08005a3c);\n        if (is_configured != 0) {\n          stop_pwm(pin_value);\n        }\n      }\n      else {\n        stop_dac(pin_value);\n      }\n      reset_pin_configured(pin_value,&DAT_200002e0);\n    }\n    switch(io_mode) {\n    case 0:\n      initialize_digital_io(pin_value,0);\n      break;\n    case 1:\n      initialize_digital_io(pin_value,1,0);\n      break;\n    case 2:\n      initialize_digital_io(pin_value,0,1);\n      break;\n    case 3:\n      initialize_digital_io(pin_value,0,2);\n    }\n    set_pin_configured(pin_value,&DAT_2000030c);\n  }\n  return;\n}\n\n",
            "current_name": "configure_and_init_io_pin_08004110",
            "entrypoint": "0x08004110",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004110": "configure_and_init_io_pin_08004110",
                "dac_stop": "stop_dac",
                "digital_io_init": "initialize_digital_io",
                "iVar1": "is_configured",
                "iVar3": "pin_value",
                "param_1": "pin_index",
                "param_2": "io_mode",
                "param_4": "pin_config",
                "puVar2": "pin_data",
                "pwm_stop": "stop_pwm"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080041bc": {
            "additional_data": {
                "DAT_08005d3c": {
                    "pin_config_data": 1
                },
                "DAT_2000030c": {
                    "pin_configuration_data": 1
                },
                "FUN_08003138": {
                    "get_gpio_port": 1
                },
                "FUN_0800318c": {
                    "digital_io_write": 1
                },
                "FUN_080034b6": {
                    "is_pin_configured": 1
                },
                "FUN_080041bc": {
                    "configure_and_write_gpio": 10,
                    "configure_and_write_gpio_pin": 2,
                    "configure_and_write_pin": 3,
                    "configure_gpio": 1,
                    "configure_gpio_pin": 7,
                    "configure_pin": 4,
                    "configure_pin_and_write": 4
                },
                "digital_io_write": {
                    "digital_io_write": 1,
                    "write_digital_io": 1,
                    "write_gpio": 1,
                    "write_to_gpio": 4,
                    "write_to_gpio_pin": 1
                },
                "get_GPIO_Port": {
                    "get_gpio_port": 6,
                    "get_gpio_port_for_pin": 1,
                    "get_port": 1
                },
                "iVar1": {
                    "config_result": 1,
                    "is_configured": 13,
                    "is_pin_configured": 1,
                    "is_pin_configured_result": 4,
                    "pin_config": 1,
                    "pin_config_result": 2,
                    "pin_config_status": 3,
                    "pin_configured": 4,
                    "pin_status": 1,
                    "result": 1
                },
                "is_pin_configured": {
                    "check_pin_configuration": 6,
                    "check_pin_configured": 1,
                    "is_pin_configured": 1
                },
                "param_1": {
                    "index": 1,
                    "pin_index": 22,
                    "pin_number": 8
                },
                "param_2": {
                    "config_value": 1,
                    "data": 1,
                    "output_value": 4,
                    "param_value": 1,
                    "pin_output_value": 1,
                    "pin_state": 3,
                    "pin_value": 1,
                    "state": 1,
                    "value": 16,
                    "value_to_write": 1,
                    "write_value": 1
                },
                "param_3": {
                    "arg1": 1,
                    "config": 2,
                    "config_param": 3,
                    "config_value": 1,
                    "configuration": 2,
                    "gpio_port": 1,
                    "option": 1,
                    "param": 3,
                    "param1": 2,
                    "param3": 4,
                    "param3_value": 1,
                    "param_3": 6,
                    "param_a": 1,
                    "parameter_3": 1,
                    "pin_config": 1,
                    "port_index": 1
                },
                "param_4": {
                    "arg2": 1,
                    "base_address": 1,
                    "base_pointer": 1,
                    "buffer": 1,
                    "config_ptr": 1,
                    "data": 2,
                    "data_ptr": 1,
                    "default_config": 1,
                    "param2": 2,
                    "param4": 1,
                    "param_4": 2,
                    "param_b": 1,
                    "param_ptr": 1,
                    "pin_config": 5,
                    "pin_config_array": 2,
                    "pin_config_data": 3,
                    "pin_data": 3,
                    "port_data": 2
                },
                "puVar3": {
                    "base_address": 1,
                    "data_pointer": 3,
                    "data_ptr": 1,
                    "gpio_base": 1,
                    "gpio_config_buffer": 1,
                    "gpio_config_data": 1,
                    "gpio_ptr": 1,
                    "pin_config": 1,
                    "pin_config_address": 1,
                    "pin_config_array": 1,
                    "pin_config_data": 2,
                    "pin_config_ptr": 5,
                    "pin_config_table": 1,
                    "pin_data": 6,
                    "pin_data_ptr": 1,
                    "pin_pointer": 1,
                    "pin_ptr": 1,
                    "ptr_to_data": 1,
                    "ptr_to_gpio": 1
                },
                "uVar2": {
                    "gpio_port": 25,
                    "gpio_port_val": 1,
                    "port": 4,
                    "port_address": 1
                },
                "uVar4": {
                    "configured_pin": 1,
                    "gpio_config_value": 1,
                    "gpio_number": 1,
                    "gpio_pin": 2,
                    "pin": 1,
                    "pin_config": 1,
                    "pin_config_value": 1,
                    "pin_data": 2,
                    "pin_number": 1,
                    "pin_value": 19,
                    "u_var4": 1
                }
            },
            "called": [
                "FUN_080034b6",
                "FUN_08003138",
                "FUN_0800318c"
            ],
            "calling": [
                "FUN_08000600",
                "FUN_080006b4",
                "FUN_0800076c"
            ],
            "code": "\nvoid configure_and_write_gpio_pin_080041bc(uint pin_index,undefined4 value,undefined4 param_3,undefined *pin_config)\n\n{\n  int is_configured;\n  undefined4 gpio_port;\n  undefined *pin_data;\n  uint pin_value;\n  \n  if (pin_index < 0x60) {\n    pin_value = (uint)*(short *)(&DAT_08005d3c + pin_index * 2);\n    pin_data = &DAT_08005d3c;\n  }\n  else {\n    pin_value = 0xffffffff;\n    pin_data = pin_config;\n  }\n  if ((pin_value != 0xffffffff) &&\n     (is_configured = check_pin_configuration(pin_value,&DAT_2000030c,param_3,pin_data,pin_config), is_configured != 0)) {\n    gpio_port = get_gpio_port((pin_value << 0x18) >> 0x1c);\n    write_to_gpio(gpio_port,1 << (pin_value & 0xf) & 0xffff,value);\n  }\n  return;\n}\n\n",
            "current_name": "configure_and_write_gpio_pin_080041bc",
            "entrypoint": "0x080041bc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080041bc": "configure_and_write_gpio_pin_080041bc",
                "digital_io_write": "write_to_gpio",
                "get_GPIO_Port": "get_gpio_port",
                "iVar1": "is_configured",
                "is_pin_configured": "check_pin_configuration",
                "param_1": "pin_index",
                "param_2": "value",
                "param_4": "pin_config",
                "puVar3": "pin_data",
                "uVar2": "gpio_port",
                "uVar4": "pin_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004204": {
            "additional_data": {
                "FUN_0800346c": {
                    "calculate_elapsed_time": 1,
                    "calculate_something": 2,
                    "do_some_task": 1,
                    "do_something": 1,
                    "execute_additional_function": 1,
                    "get_current_milliseconds": 1,
                    "get_system_status": 1,
                    "get_system_time": 1,
                    "helper_function": 1,
                    "initialize": 2,
                    "initialize_data": 1,
                    "initialize_data_structures": 1,
                    "initialize_resources": 1,
                    "initialize_system": 4,
                    "initialize_variables": 2,
                    "obtain_system_information": 1,
                    "perform_some_operation": 1,
                    "print_status": 1,
                    "refresh_data": 1,
                    "retrieve_data": 1,
                    "sub_function": 1,
                    "update_timestamp": 1
                },
                "FUN_08004204": {
                    "calculate_current_milliseconds": 1,
                    "calculate_elapsed_time": 1,
                    "get_current_milli": 5,
                    "get_current_millisecond": 6,
                    "get_current_milliseconds": 7,
                    "get_current_time": 3,
                    "get_current_time_in_milliseconds": 3,
                    "get_current_time_milliseconds": 1,
                    "get_elapsed_time": 1,
                    "measure_execution_time": 2
                },
                "GetCurrentMilli": {
                    "get_current_time": 2
                }
            },
            "called": [
                "FUN_0800346c"
            ],
            "calling": [
                "FUN_08000b54",
                "FUN_0800076c"
            ],
            "code": "\nvoid get_current_time_in_milliseconds_08004204(void)\n\n{\n  get_current_time();\n  return;\n}\n\n",
            "current_name": "get_current_time_in_milliseconds_08004204",
            "entrypoint": "0x08004204",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004204": "get_current_time_in_milliseconds_08004204",
                "GetCurrentMilli": "get_current_time"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004240": {
            "additional_data": {
                "0x138": {
                    "first_offset": 1,
                    "first_value_offset": 1,
                    "offset1": 4,
                    "offset_1": 2,
                    "offset_a": 3
                },
                "0x13a": {
                    "offset2": 4,
                    "offset_2": 2,
                    "offset_b": 3,
                    "second_offset": 1,
                    "second_value_offset": 1
                },
                "0x3f": {
                    "mask": 1
                },
                "FUN_08004240": {
                    "calculate_checksum": 7,
                    "calculate_difference": 3,
                    "calculate_hash": 2,
                    "calculate_modified_value": 1,
                    "calculate_new_value": 1,
                    "calculate_offset": 10,
                    "calculate_result": 4,
                    "calculate_short_value": 1,
                    "calculate_something": 1,
                    "calculate_value": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 12,
                    "data_address": 2,
                    "input": 2,
                    "input_address": 1,
                    "input_value": 11,
                    "memory_address": 1,
                    "value": 1
                },
                "short": {
                    "ushort": 1,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004338"
            ],
            "code": "\nuushort calculate_offset_08004240(int base_address)\n\n{\n  return (*(ushort *)(base_address + 0x138) + 0x40) - *(ushort *)(base_address + 0x13a) & 0x3f;\n}\n\n",
            "current_name": "calculate_offset_08004240",
            "entrypoint": "0x08004240",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004240": "calculate_offset_08004240",
                "param_1": "base_address",
                "short": "ushort"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080042ac": {
            "additional_data": {
                "FUN_08003e18": {
                    "uart_getc": 1
                },
                "FUN_080042ac": {
                    "decode_and_store_data": 1,
                    "execute_uart_input": 1,
                    "handle_uart_input": 2,
                    "process_input": 5,
                    "process_uart_data": 3,
                    "process_uart_input": 14,
                    "read_and_store_char": 1,
                    "receive_and_store_data": 1,
                    "update_buffer": 1,
                    "update_character_buffer": 1,
                    "update_data": 1
                },
                "iVar1": {
                    "input_result": 6,
                    "input_status": 5,
                    "read_result": 3,
                    "read_status": 2,
                    "receive_status": 1,
                    "result": 5,
                    "status": 2,
                    "uart_read_result": 2,
                    "uart_result": 4,
                    "uart_status": 1
                },
                "local_9": {
                    "input_byte": 2,
                    "input_char": 6,
                    "input_character": 1,
                    "input_data": 2,
                    "received_byte": 7,
                    "received_char": 4,
                    "received_data": 9
                },
                "param_1": {
                    "buffer_address": 1,
                    "device_handle": 1,
                    "device_id": 1,
                    "input_handler": 1,
                    "uart": 1,
                    "uart_device": 12,
                    "uart_handle": 5,
                    "uart_instance": 2,
                    "uart_port": 7
                },
                "uVar2": {
                    "current_index": 2,
                    "current_position": 1,
                    "new_data_index": 1,
                    "new_index": 19,
                    "new_position": 2,
                    "next_index": 4,
                    "updated_index": 2
                }
            },
            "called": [
                "FUN_08003e18"
            ],
            "calling": [],
            "code": "\nvoid process_uart_input_080042ac(int uart_device)\n\n{\n  int input_result;\n  ushort new_index;\n  undefined received_data;\n  \n  input_result = uart_getc(uart_device,&received_data);\n  if ((input_result == 0) &&\n     (new_index = *(short *)(uart_device + 100) + 1U & 0x3f, new_index != *(ushort *)(uart_device + 0x66))) {\n    *(undefined *)(*(int *)(uart_device + 0x60) + (uint)*(ushort *)(uart_device + 100)) = received_data;\n    *(ushort *)(uart_device + 100) = new_index;\n  }\n  return;\n}\n\n",
            "current_name": "process_uart_input_080042ac",
            "entrypoint": "0x080042ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080042ac": "process_uart_input_080042ac",
                "iVar1": "input_result",
                "local_9": "received_data",
                "param_1": "uart_device",
                "uVar2": "new_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080042e8": {
            "additional_data": {
                "FUN_08003df4": {
                    "is_serial_tx_active": 1
                },
                "FUN_08003eac": {
                    "attach_tx_callback": 1
                },
                "FUN_080042e8": {
                    "initialize_and_send": 1,
                    "initialize_and_send_data": 2,
                    "initialize_and_transmit_data": 1,
                    "initialize_data": 1,
                    "initialize_data_and_send": 1,
                    "set_and_send_data": 2,
                    "set_and_transmit_data": 1,
                    "set_flag_and_send": 1,
                    "set_flag_and_send_data": 2,
                    "set_variable_and_send_data": 1,
                    "update_and_send_data": 1,
                    "update_and_transmit_data": 7,
                    "update_data": 2,
                    "update_data_and_send": 1,
                    "update_data_and_transmit": 1,
                    "update_data_in_array": 1,
                    "update_param": 1,
                    "update_param_and_send": 1,
                    "update_parameter": 2,
                    "update_value_and_transmit": 1
                },
                "bVar1": {
                    "byte1": 3,
                    "byte_value": 12,
                    "byte_value1": 1,
                    "byte_var": 1,
                    "count": 1,
                    "counter": 1,
                    "counter_byte": 2,
                    "incremented_value": 4,
                    "lower_byte": 2,
                    "new_byte_value": 1,
                    "new_value": 1,
                    "new_value_byte": 1,
                    "temp_byte": 1
                },
                "bVar2": {
                    "adjusted_byte": 1,
                    "adjusted_value": 1,
                    "byte2": 2,
                    "byte_value2": 1,
                    "clamped_value": 1,
                    "masked_byte": 4,
                    "masked_byte_value": 5,
                    "masked_byte_var": 1,
                    "masked_count": 1,
                    "masked_counter": 1,
                    "masked_counter_byte": 1,
                    "masked_value": 6,
                    "modified_byte": 1,
                    "modified_byte_value": 3,
                    "processed_value": 1,
                    "updated_value": 1
                },
                "iVar3": {
                    "count": 1,
                    "counter": 4,
                    "counter_plus_one": 1,
                    "counter_value": 1,
                    "extra_data": 1,
                    "increment": 1,
                    "incremented_value": 14,
                    "new_index": 1,
                    "serial_tx_active_result": 2,
                    "temp_val": 1,
                    "tx_active_flag": 1,
                    "updated_counter": 1,
                    "ushort_value": 1,
                    "value_plus_one": 1
                },
                "param_1": {
                    "array_ptr": 1,
                    "data": 5,
                    "data_address": 1,
                    "data_buffer": 2,
                    "data_pointer": 1,
                    "data_ptr": 7,
                    "data_struct": 2,
                    "data_struct_addr": 1,
                    "data_struct_address": 1,
                    "data_struct_ptr": 3,
                    "data_structure": 3,
                    "data_structure_address": 1,
                    "param": 1,
                    "param_base_address": 1,
                    "parameter_pointer": 1
                },
                "param_2": {
                    "data": 7,
                    "data_byte": 1,
                    "data_to_send": 1,
                    "data_to_transmit": 1,
                    "data_value": 2,
                    "new_data": 7,
                    "new_value": 4,
                    "param_data": 1,
                    "payload": 1,
                    "value": 6
                },
                "serial_tx_active": {
                    "check_serial_tx_activity": 1,
                    "is_serial_transmit_active": 2,
                    "is_serial_tx_active": 1,
                    "is_transfer_active": 1,
                    "is_transmitting": 1
                },
                "uart_attach_tx_callback": {
                    "attach_callback": 1,
                    "attach_serial_transmit_callback": 1,
                    "attach_transfer_callback": 1,
                    "attach_transmit_callback": 2,
                    "attach_tx_callback": 1
                }
            },
            "called": [
                "FUN_08003df4",
                "FUN_08003eac"
            ],
            "calling": [],
            "code": "\nundefined4 update_data_and_transmit_080042e8(int data_ptr,undefined new_data)\n\n{\n  byte byte_value;\n  byte masked_value;\n  int incremented_value;\n  \n  *(undefined *)(data_ptr + 0x10) = 1;\n  incremented_value = *(ushort *)(data_ptr + 0x140) + 1;\n  byte_value = (byte)incremented_value;\n  masked_value = byte_value & 0x7f;\n  if (incremented_value == 0) {\n    masked_value = -(-byte_value & 0x7f);\n  }\n  do {\n  } while (*(ushort *)(data_ptr + 0x142) == (ushort)masked_value);\n  *(undefined *)(*(int *)(data_ptr + 0x13c) + (uint)*(ushort *)(data_ptr + 0x140)) = new_data;\n  *(ushort *)(data_ptr + 0x140) = (ushort)masked_value;\n  incremented_value = is_serial_transmit_active(data_ptr + 0xd4);\n  if (incremented_value == 0) {\n    attach_transmit_callback(data_ptr + 0xd4,&LAB_0800420c_1);\n  }\n  return 1;\n}\n\n",
            "current_name": "update_data_and_transmit_080042e8",
            "entrypoint": "0x080042e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080042e8": "update_data_and_transmit_080042e8",
                "bVar1": "byte_value",
                "bVar2": "masked_value",
                "iVar3": "incremented_value",
                "param_1": "data_ptr",
                "param_2": "new_data",
                "serial_tx_active": "is_serial_transmit_active",
                "uart_attach_tx_callback": "attach_transmit_callback"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004338": {
            "called": [
                "FUN_08004240"
            ],
            "calling": [
                "FUN_08004658"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800433e) */\n/* WARNING: Removing unreachable block (ram,0x08004350) */\n/* WARNING: Removing unreachable block (ram,0x08004346) */\n/* WARNING: Removing unreachable block (ram,0x08004358) */\n\nvoid FUNC_08004338(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004338",
            "entrypoint": "0x08004338",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004338": "FUNC_08004338"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004364": {
            "additional_data": {
                "0x11": {
                    "constant1": 1,
                    "increment1": 1,
                    "initial_offset": 1,
                    "new_value1": 1,
                    "offset_update1": 1,
                    "value1": 2,
                    "value_a": 1
                },
                "0x134": {
                    "offset1": 8,
                    "offset_a": 1
                },
                "0x138": {
                    "offset2": 3,
                    "offset_b": 1,
                    "pointer1_offset": 1,
                    "value1": 3
                },
                "0x13a": {
                    "offset3": 3,
                    "offset_c": 1,
                    "pointer2_offset": 1,
                    "value2": 3
                },
                "0x13c": {
                    "offset2": 5,
                    "offset4": 3,
                    "offset_d": 1
                },
                "0x140": {
                    "offset5": 3,
                    "offset_e": 1,
                    "pointer3_offset": 1,
                    "value3": 3
                },
                "0x142": {
                    "offset6": 3,
                    "offset_f": 1,
                    "pointer4_offset": 1,
                    "value4": 3
                },
                "0x51": {
                    "constant2": 1,
                    "increment2": 1,
                    "initial_value": 1,
                    "new_value2": 1,
                    "offset_update2": 1,
                    "value2": 2,
                    "value_d": 1
                },
                "FUN_08004364": {
                    "initialize_data": 9,
                    "initialize_data_structure": 3,
                    "initialize_data_structures": 1,
                    "initialize_function": 4,
                    "initialize_memory": 3,
                    "initialize_parameters": 7,
                    "initialize_params": 1,
                    "set_initial_values": 1,
                    "set_parameters": 1,
                    "set_values": 1
                },
                "_param_1_134": {
                    "offset_134": 1
                },
                "_param_1_138": {
                    "offset_138": 1
                },
                "_param_1_13a": {
                    "offset_13a": 1
                },
                "_param_1_13c": {
                    "offset_13c": 1
                },
                "_param_1_140": {
                    "offset_140": 1
                },
                "_param_1_142": {
                    "offset_142": 1
                },
                "param_1": {
                    "base_address": 19,
                    "data": 1,
                    "data_address": 3,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_start_address": 1,
                    "data_structure": 1,
                    "data_structure_pointer": 1,
                    "function_param": 1,
                    "function_pointer": 1,
                    "param": 1
                },
                "param_2": {
                    "value": 1
                },
                "param_3": {
                    "value": 1
                },
                "param_4": {
                    "offset": 1
                },
                "param_5": {
                    "value": 1
                },
                "param_6": {
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800447c"
            ],
            "code": "\nvoid initialize_data_structure_08004364(int base_address)\n\n{\n  *(int *)(base_address + 0x134) = base_address + 0x11;\n  *(undefined2 *)(base_address + 0x138) = 0;\n  *(undefined2 *)(base_address + 0x13a) = 0;\n  *(int *)(base_address + 0x13c) = base_address + 0x51;\n  *(undefined2 *)(base_address + 0x140) = 0;\n  *(undefined2 *)(base_address + 0x142) = 0;\n  return;\n}\n\n",
            "current_name": "initialize_data_structure_08004364",
            "entrypoint": "0x08004364",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004364": "initialize_data_structure_08004364",
                "param_1": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004388": {
            "additional_data": {
                "FUN_08003978": {
                    "attach_rx_callback": 1,
                    "initialize_uart": 1,
                    "some_function2": 1,
                    "sub_function2": 1,
                    "validate_uart_port": 1
                },
                "FUN_08003e54": {
                    "configure_serial": 1,
                    "configure_serial_port": 1,
                    "initialize_uart_port": 1,
                    "some_function1": 1,
                    "sub_function1": 1
                },
                "FUN_08004388": {
                    "configure_serial_port": 2,
                    "configure_uart": 3,
                    "initialize_serial": 6,
                    "initialize_serial_communication": 4,
                    "initialize_serial_connection": 2,
                    "initialize_serial_port": 9,
                    "initialize_uart": 4,
                    "set_serial_settings": 1
                },
                "FUN_08004808": {
                    "assert_func": 1,
                    "assert_function": 2,
                    "some_function3": 1,
                    "sub_function3": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "callback_function": 1,
                    "indirect_jump_table": 1,
                    "jump_table": 16,
                    "jump_table_address": 1,
                    "jump_table_function": 1,
                    "jumptable": 5,
                    "jumptable_func": 1,
                    "jumptable_func_ptr": 1,
                    "recovered_jump_table": 2,
                    "unrecovered_jump_table": 1
                },
                "__assert_func": {
                    "assert_function": 2
                },
                "bVar1": {
                    "config_bit": 1,
                    "config_bit_mask": 2,
                    "config_bits": 5,
                    "config_byte_bits": 1,
                    "config_byte_masked": 2,
                    "config_flag": 1,
                    "config_flags": 2,
                    "config_mask": 4,
                    "config_mode": 1,
                    "configuration_flag": 1,
                    "configuration_mask": 1,
                    "configured_bits": 1,
                    "mode_bit": 1,
                    "mode_bits": 1,
                    "option_mask": 1,
                    "options_mask": 1,
                    "parity_bit": 1,
                    "processed_byte": 1,
                    "settings_flag": 1,
                    "settings_mask": 2
                },
                "extraout_r1": {
                    "error_code": 3,
                    "file_line": 1,
                    "jump_index": 1,
                    "num_byte": 1,
                    "return_value": 1,
                    "threshold": 1
                },
                "iVar2": {
                    "config": 1,
                    "config_count": 3,
                    "config_counter": 1,
                    "config_flag": 1,
                    "config_option": 1,
                    "config_value": 12,
                    "configuration": 1,
                    "data_bits": 1,
                    "flag_counter": 1,
                    "mode_count": 1,
                    "num_options": 1,
                    "option": 1,
                    "uart_bits": 1,
                    "uart_config": 1,
                    "uart_flags": 2,
                    "uart_mode": 1,
                    "uart_options": 1
                },
                "param_1": {
                    "base_address": 1,
                    "port": 1,
                    "port_address": 3,
                    "serial_connection": 1,
                    "serial_device": 1,
                    "serial_port": 8,
                    "serial_port_address": 10,
                    "uart_address": 2,
                    "uart_config": 1,
                    "uart_context": 1,
                    "uart_controller": 1,
                    "uart_module": 1
                },
                "param_2": {
                    "baud_rate": 30,
                    "param2": 1
                },
                "param_3": {
                    "byte_to_process": 1,
                    "config": 6,
                    "config_byte": 6,
                    "config_options": 1,
                    "configuration": 3,
                    "configuration_byte": 1,
                    "mode": 2,
                    "options": 2,
                    "serial_config": 4,
                    "serial_configuration": 1,
                    "settings": 4
                },
                "uRam0000012e": {
                    "baud_rate_setting": 1,
                    "buffer_value": 1,
                    "data": 1
                },
                "uart_attach_rx_callback": {
                    "attach_callback_to_uart": 1,
                    "attach_rx_callback": 6
                },
                "uart_init": {
                    "initialize_uart": 7
                }
            },
            "called": [
                "FUN_08003e54",
                "FUN_08003978",
                "FUN_08004808"
            ],
            "calling": [
                "FUN_08000600"
            ],
            "code": "\nvoid initialize_serial_port_08004388(int serial_port_address,undefined4 baud_rate,byte config)\n\n{\n  uint error_code;\n  byte config_bits;\n  int config_value;\n  code *jump_table;\n  \n  *(undefined4 *)(serial_port_address + 0x11c) = baud_rate;\n  *(byte *)(serial_port_address + 0x144) = config;\n  config_bits = config & 7;\n  if (config_bits == 4) {\n    config_value = 7;\n  }\n  else if (config_bits == 6) {\n    config_value = 8;\n  }\n  else if (config_bits == 2) {\n    config_value = 6;\n  }\n  else {\n    config_value = 0;\n  }\n  if ((config & 0x30) == 0x30) {\n    *(undefined4 *)(serial_port_address + 0x128) = 0x600;\n    config_value = config_value + 1;\n  }\n  else if ((config & 0x20) == 0) {\n    *(undefined4 *)(serial_port_address + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serial_port_address + 0x128) = 0x400;\n    config_value = config_value + 1;\n  }\n  if ((config & 8) == 0) {\n    *(undefined4 *)(serial_port_address + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serial_port_address + 0x124) = 0x2000;\n  }\n  if (config_value == 8) {\n    *(undefined4 *)(serial_port_address + 0x120) = 0;\n  }\n  else if (config_value == 9) {\n    *(undefined4 *)(serial_port_address + 0x120) = 0x1000;\n  }\n  else {\n    config_value = 0;\n  }\n  if (config_value != 0) {\n    initialize_uart(serial_port_address + 0xd4);\n    attach_rx_callback(serial_port_address + 0xd4,0x80042ad);\n    return;\n  }\n  jump_table = (code *)0x8004432;\n  assert_function(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n                ,299,\"void HardwareSerial::begin(long unsigned int, byte)\");\n  if (error_code < 0x60) {\n    buffer_value = *(undefined2 *)(&DAT_08005d3c + error_code * 2);\n  }\n  else {\n    buffer_value = 0xffff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08004452. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "initialize_serial_port_08004388",
            "entrypoint": "0x08004388",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004388": "initialize_serial_port_08004388",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "__assert_func": "assert_function",
                "bVar1": "config_bits",
                "extraout_r1": "error_code",
                "iVar2": "config_value",
                "param_1": "serial_port_address",
                "param_2": "baud_rate",
                "param_3": "config",
                "uRam0000012e": "buffer_value",
                "uart_attach_rx_callback": "attach_rx_callback",
                "uart_init": "initialize_uart"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004444": {
            "additional_data": {
                "FUN_08004444": {
                    "initialize_parameter": 1,
                    "initialize_value_and_jump": 1,
                    "set_default_value": 1,
                    "set_field_value_based_on_param": 1,
                    "set_function_code": 1,
                    "set_function_jump_table": 1,
                    "set_function_parameter": 2,
                    "set_jump_table_value": 1,
                    "set_param_value": 1,
                    "set_parameter_and_call_function": 1,
                    "set_parameter_value": 1,
                    "set_permission": 1,
                    "set_result_based_on_parameter": 1,
                    "set_return_value": 9,
                    "set_return_value_based_on_param": 1,
                    "set_return_value_based_on_param2": 1,
                    "set_return_value_based_on_parameter": 1,
                    "set_threshold_value": 1,
                    "update_data_value": 1,
                    "update_function": 1,
                    "update_parameter_value": 1,
                    "update_value": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "function_jump_table": 1,
                    "function_pointer": 1,
                    "function_ptr": 1,
                    "function_reference": 1,
                    "jmp_table_function": 1,
                    "jump_table": 9,
                    "jump_table_function": 1,
                    "jumptable": 2
                },
                "param_1": {
                    "address": 1,
                    "arg1": 1,
                    "base_address": 5,
                    "data_address": 1,
                    "destination": 1,
                    "destination_address": 2,
                    "field_address": 1,
                    "function_address": 2,
                    "function_pointer": 1,
                    "function_ptr": 1,
                    "obj_address": 1,
                    "object_address": 2,
                    "output_addr": 1,
                    "output_address": 2,
                    "output_value": 1,
                    "parameter1": 1,
                    "result": 1,
                    "result_address": 2,
                    "return_value_address": 2,
                    "target_address": 2
                },
                "param_2": {
                    "arg2": 1,
                    "code_index": 1,
                    "data_index": 1,
                    "index": 7,
                    "input_value": 6,
                    "jump_index": 1,
                    "jump_table_index": 1,
                    "offset": 3,
                    "param_value": 3,
                    "parameter2": 1,
                    "parameter_value": 2,
                    "permission_level": 1,
                    "value": 1,
                    "value_index": 1,
                    "value_to_compare": 1
                },
                "uVar1": {
                    "assigned_value": 1,
                    "code_value": 1,
                    "default_value": 1,
                    "field_value": 1,
                    "jump_table_value": 1,
                    "new_value": 1,
                    "permission": 1,
                    "result": 5,
                    "return_value": 13,
                    "threshold_value": 1,
                    "updated_value": 3,
                    "value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_0800447c"
            ],
            "code": "\nvoid set_return_value_based_on_parameter_08004444(int base_address,uint index)\n\n{\n  undefined2 return_value;\n  code *jump_table;\n  \n  if (index < 0x60) {\n    return_value = *(undefined2 *)(&DAT_08005d3c + index * 2);\n  }\n  else {\n    return_value = 0xffff;\n  }\n  *(undefined2 *)(base_address + 0x12e) = return_value;\n                    /* WARNING: Could not recover jumptable at 0x08004452. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "set_return_value_based_on_parameter_08004444",
            "entrypoint": "0x08004444",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004444": "set_return_value_based_on_parameter_08004444",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "param_1": "base_address",
                "param_2": "index",
                "uVar1": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004460": {
            "additional_data": {
                "300": {
                    "offset": 2,
                    "offset300": 1,
                    "threshold_address": 1
                },
                "FUN_08004460": {
                    "assign_value_to_memory_address": 1,
                    "assign_value_to_param1": 1,
                    "copy_to_index": 1,
                    "initialize_data": 1,
                    "set_correct_value": 1,
                    "set_corresponding_value": 1,
                    "set_default_value": 3,
                    "set_param_value": 1,
                    "set_parameter_value": 6,
                    "set_property_value": 1,
                    "set_result_code": 1,
                    "set_threshold_value": 3,
                    "set_value_at_offset": 1,
                    "set_value_in_memory": 1,
                    "update_data_value": 1,
                    "update_param_value": 1,
                    "update_parameter_value": 3,
                    "update_value": 2,
                    "update_value_at_offset": 1
                },
                "param_1": {
                    "address": 3,
                    "base_address": 14,
                    "destination": 1,
                    "device_address": 1,
                    "dst_address": 1,
                    "memory_address": 1,
                    "object_address": 1,
                    "output": 1,
                    "output_address": 1,
                    "parameter": 1,
                    "parameter_index": 1,
                    "result_pointer": 1,
                    "target_address": 4
                },
                "param_2": {
                    "index": 13,
                    "input_index": 1,
                    "offset": 9,
                    "param_index": 1,
                    "parameter_index": 1,
                    "property_index": 1,
                    "size": 1,
                    "source_index": 1,
                    "threshold_index": 1,
                    "value": 2
                },
                "uVar1": {
                    "corresponding_value": 1,
                    "data_array": 1,
                    "default_value": 2,
                    "new_value": 5,
                    "parameter_value": 2,
                    "property_value": 1,
                    "result_code": 1,
                    "source_value": 1,
                    "threshold": 1,
                    "threshold_value": 2,
                    "updated_value": 4,
                    "value": 8
                }
            },
            "called": [],
            "calling": [
                "FUN_0800447c"
            ],
            "code": "\nvoid set_parameter_value_08004460(int base_address,uint index)\n\n{\n  undefined2 value;\n  \n  if (index < 0x60) {\n    value = *(undefined2 *)(&DAT_08005d3c + index * 2);\n  }\n  else {\n    value = 0xffff;\n  }\n  *(undefined2 *)(base_address + 300) = value;\n  return;\n}\n\n",
            "current_name": "set_parameter_value_08004460",
            "entrypoint": "0x08004460",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004460": "set_parameter_value_08004460",
                "param_1": "base_address",
                "param_2": "index",
                "uVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800447c": {
            "additional_data": {
                "DAT_08005c10": {
                    "pin_map_data_1": 1
                },
                "DAT_08005ca0": {
                    "pin_map_data_2": 1
                },
                "DAT_20000338": {
                    "default_device": 1,
                    "default_device_data": 1
                },
                "FUN_0800351e": {
                    "do_something": 1,
                    "get_configuration": 1,
                    "get_pin_value": 1,
                    "get_return_value": 1,
                    "init": 2,
                    "initialize_hardware": 1,
                    "initialize_value": 1,
                    "perform_task": 1,
                    "pinmap_pin": 5,
                    "reverse_data": 1,
                    "unknown_function": 1
                },
                "FUN_08004364": {
                    "configure_pin2": 1,
                    "configure_pinmap_pin2": 1,
                    "configure_setting2": 1,
                    "disable_interrupts": 1,
                    "initialize": 3,
                    "reset": 1,
                    "set_pin_mapping2": 1,
                    "set_tx": 7
                },
                "FUN_08004444": {
                    "configure_pin1": 1,
                    "configure_pinmap_pin1": 1,
                    "configure_receive": 1,
                    "configure_receiver": 1,
                    "configure_rx_pin": 1,
                    "configure_setting1": 1,
                    "set_pin_mapping1": 1,
                    "set_receive": 1,
                    "set_receive_pin": 1,
                    "set_rx": 7
                },
                "FUN_08004460": {
                    "configure_pin3": 1,
                    "configure_pinmap_pin3": 1,
                    "configure_setting3": 1,
                    "configure_transmit": 1,
                    "configure_transmitter": 1,
                    "configure_tx_pin": 1,
                    "init": 5,
                    "pinmap_pin": 2,
                    "set_hardware_config": 1,
                    "set_transmit": 1,
                    "set_transmit_pin": 1
                },
                "FUN_0800447c": {
                    "initialize": 1,
                    "initialize_communication": 15,
                    "initialize_device": 12,
                    "initialize_param": 1,
                    "initialize_params": 1,
                    "initialize_peripheral": 1
                },
                "PTR_FUN_080042e8_1_08005ed4": {
                    "function_pointer": 1
                },
                "init": {
                    "initialize": 9,
                    "initialize_component": 1,
                    "initialize_device": 1,
                    "initialize_device_params": 1
                },
                "param_1": {
                    "array": 1,
                    "comm_params": 1,
                    "communication": 1,
                    "communication_buffer": 1,
                    "communication_data": 5,
                    "communication_object": 1,
                    "communication_parameters": 2,
                    "communication_params": 3,
                    "device": 7,
                    "device_config": 1,
                    "device_data": 1,
                    "device_params": 3,
                    "device_settings": 1,
                    "param_array": 1,
                    "params": 1,
                    "peripheral": 1
                },
                "param_2": {
                    "device_pin": 1,
                    "pin": 10,
                    "pin_config": 1,
                    "pin_identifier": 1,
                    "pin_index": 2,
                    "pin_number": 15,
                    "pin_value": 1
                },
                "param_3": {
                    "communication_mode": 1,
                    "flag": 1,
                    "param3": 6,
                    "param3_value": 1,
                    "param_3": 2,
                    "parameter1": 1,
                    "rx_config": 4,
                    "rx_config_value": 1,
                    "rx_data": 1,
                    "rx_param": 1,
                    "rx_pin": 1,
                    "rx_pin_config": 1,
                    "rx_size": 1,
                    "value": 5,
                    "value1": 4
                },
                "param_4": {
                    "baud_rate": 1,
                    "flag": 1,
                    "mode": 1,
                    "param": 3,
                    "param4": 6,
                    "param4_value": 1,
                    "param_4": 2,
                    "parameter2": 1,
                    "tx_config": 4,
                    "tx_config_value": 1,
                    "tx_data": 1,
                    "tx_param": 1,
                    "tx_pin": 1,
                    "tx_pin_config": 1,
                    "tx_size": 1,
                    "value": 1,
                    "value2": 4
                },
                "pinmap_pin": {
                    "get_pin_from_map": 1,
                    "get_pin_mapping": 5,
                    "get_pin_value": 1,
                    "get_pinmap_pin": 2,
                    "map_pin": 1,
                    "map_pin_to_value": 1
                },
                "setRx": {
                    "configure_receiver": 1,
                    "configure_reception": 1,
                    "configure_rx": 5,
                    "configure_rx_pin": 1,
                    "set_receive": 3,
                    "set_receive_callbacks": 1
                },
                "setTx": {
                    "configure_transmission": 1,
                    "configure_transmitter": 1,
                    "configure_tx": 5,
                    "configure_tx_pin": 1,
                    "set_transmit": 3,
                    "set_transmit_callbacks": 1
                },
                "uVar1": {
                    "mapped_pin": 2,
                    "pin": 1,
                    "pin_config": 1,
                    "pin_mapped_value": 1,
                    "pin_mapping": 1,
                    "pin_mapping_result": 2,
                    "pin_value": 10,
                    "pin_value_map": 1
                }
            },
            "called": [
                "FUN_08004444",
                "FUN_08004364",
                "FUN_0800351e",
                "FUN_08004460"
            ],
            "calling": [
                "FUN_080044d8"
            ],
            "code": "\nundefined4 *\ninitialize_communication_0800447c(undefined4 *device,undefined4 pin_number,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 pin_value;\n  \n  device[1] = 0;\n  device[2] = 1000;\n  *device = &PTR_FUN_080042e8_1_08005ed4;\n  if (device == &DAT_20000338) {\n    configure_rx(&DAT_20000338,0x4c,param3,&DAT_20000338,param4);\n    configure_tx(&DAT_20000338,0x4d);\n  }\n  else {\n    pin_value = get_pin_mapping(pin_number,&DAT_08005c10);\n    *(undefined2 *)((int)device + 0x12e) = pin_value;\n    pin_value = get_pin_mapping(pin_number,&DAT_08005ca0);\n    *(undefined2 *)(device + 0x4b) = pin_value;\n  }\n  initialize(device);\n  return device;\n}\n\n",
            "current_name": "initialize_communication_0800447c",
            "entrypoint": "0x0800447c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800447c": "initialize_communication_0800447c",
                "init": "initialize",
                "param_1": "device",
                "param_2": "pin_number",
                "param_3": "param3",
                "param_4": "param4",
                "pinmap_pin": "get_pin_mapping",
                "setRx": "configure_rx",
                "setTx": "configure_tx",
                "uVar1": "pin_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080044d8": {
            "additional_data": {
                "FUN_0800447c": {
                    "sub_function": 1
                },
                "FUN_080044d8": {
                    "initialize_hardware": 1,
                    "initialize_hardware_serial": 16,
                    "initialize_serial": 1,
                    "initialize_serial_communication": 12,
                    "initialize_serial_connection": 1
                },
                "HardwareSerial": {
                    "configure_serial": 2,
                    "configure_serial_communication": 1,
                    "configure_serial_port": 1,
                    "create_serial_connection": 1,
                    "init_hardware_serial": 1,
                    "start_communication": 1
                },
                "param_1": {
                    "check_value": 1,
                    "condition": 1,
                    "device_type": 2,
                    "error_code": 1,
                    "first_param": 1,
                    "flag": 5,
                    "initialize_flag": 1,
                    "input_flag": 1,
                    "mode": 1,
                    "mode_flag": 1,
                    "option": 1,
                    "state": 1,
                    "status": 13,
                    "status_flag": 1
                },
                "param_2": {
                    "check_value": 1,
                    "condition_flag": 1,
                    "config_flag": 1,
                    "device_id": 1,
                    "error_code": 1,
                    "flag": 2,
                    "param_value": 3,
                    "second_param": 1,
                    "status": 1,
                    "value": 19
                },
                "param_3": {
                    "address": 2,
                    "arg1": 5,
                    "baud_rate": 1,
                    "config": 2,
                    "config1": 3,
                    "config_param1": 2,
                    "init_param_1": 1,
                    "input1": 2,
                    "param1": 2,
                    "param1_value": 1,
                    "param3": 2,
                    "param_3": 3,
                    "param_a": 1,
                    "parameter1": 1,
                    "parameter_3": 1,
                    "serial_port": 1,
                    "third_param": 1
                },
                "param_4": {
                    "arg2": 5,
                    "config2": 3,
                    "config_param2": 2,
                    "config_value": 1,
                    "flag": 1,
                    "fourth_param": 1,
                    "init_param_2": 1,
                    "input2": 2,
                    "option": 3,
                    "param2": 2,
                    "param2_value": 1,
                    "param4": 2,
                    "param_4": 3,
                    "param_b": 1,
                    "parameter2": 1,
                    "parameter_4": 1,
                    "parity": 1
                }
            },
            "called": [
                "FUN_0800447c"
            ],
            "calling": [],
            "code": "\nvoid initialize_hardware_serial_080044d8(int status,int value,undefined4 arg1,undefined4 arg2)\n\n{\n  if (status != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    configure_serial(&DAT_20000338,0x40004800,arg1,0xffff,arg2);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_hardware_serial_080044d8",
            "entrypoint": "0x080044d8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080044d8": "initialize_hardware_serial_080044d8",
                "HardwareSerial": "configure_serial",
                "param_1": "status",
                "param_2": "value",
                "param_3": "arg1",
                "param_4": "arg2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004544": {
            "additional_data": {
                "FUN_08004544": {
                    "initialize_data": 24,
                    "initialize_parameters": 1,
                    "initialize_params": 1,
                    "set_data": 2,
                    "set_data_fields": 1,
                    "set_data_pointers": 1,
                    "set_param_values": 1
                },
                "param_1": {
                    "data": 1,
                    "data_pointer": 13,
                    "data_pointers": 1,
                    "data_ptr": 3,
                    "func_result": 1,
                    "output": 3,
                    "output_array": 1,
                    "output_buffer": 1,
                    "output_pointer": 5,
                    "param_array": 1,
                    "result": 1
                },
                "param_2": {
                    "byte_1": 1,
                    "field_1": 1,
                    "input1": 1,
                    "param2": 2,
                    "value1": 20,
                    "value2": 1,
                    "value_1": 5
                },
                "param_3": {
                    "byte_2": 1,
                    "field_2": 1,
                    "input2": 1,
                    "param3": 2,
                    "value2": 20,
                    "value3": 1,
                    "value_2": 5
                },
                "param_4": {
                    "byte_3": 1,
                    "field_3": 1,
                    "input3": 1,
                    "param4": 2,
                    "value3": 20,
                    "value4": 1,
                    "value_3": 5
                },
                "param_5": {
                    "byte_4": 1,
                    "field_4": 1,
                    "input4": 1,
                    "param5": 2,
                    "value4": 20,
                    "value5": 1,
                    "value_4": 5
                }
            },
            "called": [],
            "calling": [
                "FUN_08004560"
            ],
            "code": "\nvoid initialize_data_08004544(undefined4 *data_pointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *data_pointer = &DAT_08005f28;\n  *(undefined *)(data_pointer + 1) = value1;\n  *(undefined *)((int)data_pointer + 5) = value2;\n  *(undefined *)((int)data_pointer + 6) = value3;\n  *(undefined *)((int)data_pointer + 7) = value4;\n  return;\n}\n\n",
            "current_name": "initialize_data_08004544",
            "entrypoint": "0x08004544",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004544": "initialize_data_08004544",
                "param_1": "data_pointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004560": {
            "additional_data": {
                "DAT_20000480": {
                    "ip_address": 3
                },
                "FUN_08004560": {
                    "configure_ip_address": 1,
                    "initialize_ip": 1,
                    "initialize_ip_address": 25,
                    "initiate_networking_subsystem": 1,
                    "set_ip_address": 2,
                    "set_ip_address_if_conditions_met": 1
                },
                "IPAddress": {
                    "initialize_ip_address": 1,
                    "reset_ip_address": 1,
                    "set_ip": 1,
                    "set_ip_address": 6,
                    "set_ip_to_zero": 1
                },
                "param_1": {
                    "check_value1": 1,
                    "condition1": 6,
                    "condition_1": 1,
                    "connection_type": 1,
                    "flag": 4,
                    "flag1": 5,
                    "input_one": 1,
                    "is_enabled": 1,
                    "is_one": 1,
                    "option": 2,
                    "param1": 2,
                    "status": 1,
                    "status_flag": 2,
                    "value1": 3
                },
                "param_2": {
                    "check_value2": 1,
                    "condition2": 6,
                    "condition_2": 1,
                    "connection_status": 1,
                    "flag2": 5,
                    "input_two": 1,
                    "is_ffff": 1,
                    "param2": 2,
                    "value": 10,
                    "value2": 3
                }
            },
            "called": [
                "FUN_08004544"
            ],
            "calling": [],
            "code": "\nvoid initialize_ip_address_08004560(int condition1,int value)\n\n{\n  if ((condition1 == 1) && (value == 0xffff)) {\n    set_ip_address(&DAT_20000480,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_ip_address_08004560",
            "entrypoint": "0x08004560",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004560": "initialize_ip_address_08004560",
                "IPAddress": "set_ip_address",
                "param_1": "condition1",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004640": {
            "additional_data": {
                "FUN_08004640": {
                    "combine_and_shift": 1,
                    "combine_bits": 2,
                    "combine_byte_and_int": 1,
                    "combine_byte_value": 1,
                    "combine_param_and_shift": 1,
                    "combine_parameters": 2,
                    "combine_params": 5,
                    "combine_values": 14,
                    "combine_with_shift": 1,
                    "concatenate_with_shift": 1,
                    "merge_bytes": 2
                },
                "flag": {
                    "input_flag": 1
                },
                "optionalParameter": {
                    "extra_param": 1
                },
                "param_1": {
                    "byte_value": 2,
                    "first_value": 1,
                    "input1": 4,
                    "input_byte": 2,
                    "input_integer": 1,
                    "input_value": 6,
                    "parameter": 1,
                    "shifted_value": 1,
                    "value": 2,
                    "value1": 11
                },
                "param_2": {
                    "base_value": 2,
                    "bits": 1,
                    "bitwise_flag": 1,
                    "bitwise_value": 1,
                    "combined_value": 1,
                    "existing_value": 1,
                    "flag": 1,
                    "flags": 1,
                    "input2": 4,
                    "input_value": 1,
                    "int_value": 2,
                    "mask": 1,
                    "original_value": 1,
                    "second_value": 1,
                    "value": 1,
                    "value2": 11
                },
                "param_3": {
                    "offset": 1,
                    "optional_parameter": 1,
                    "result": 2
                },
                "return": {
                    "combined_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08000998",
                "FUN_08000a7a",
                "FUN_080007f0",
                "FUN_08000a4e",
                "FUN_08000a00",
                "FUN_08000b04",
                "FUN_080008e2"
            ],
            "code": "\nuint combine_values_08004640(int value1,uint value2)\n\n{\n  combined_value value2 | value1 << 8;\n}\n\n",
            "current_name": "combine_values_08004640",
            "entrypoint": "0x08004640",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004640": "combine_values_08004640",
                "param_1": "value1",
                "param_2": "value2",
                "return": "combined_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004646": {
            "called": [],
            "calling": [
                "FUN_08004658"
            ],
            "code": "\nvoid FUNC_08004646(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004646",
            "entrypoint": "0x08004646",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004646": "FUNC_08004646"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004648": {
            "additional_data": {
                "FUN_08004648": {
                    "configure_hardware": 2,
                    "initialize_and_set_priority": 1,
                    "initialize_hardware": 15,
                    "initialize_hardware_system": 1,
                    "initialize_system": 11,
                    "initialize_system_configuration": 1
                },
                "initialize_hardware_configuration_08000d8e": {
                    "configure_hardware": 6,
                    "init_hardware_config": 2,
                    "initialize_hardware": 3,
                    "initialize_hardware_config": 5,
                    "initialize_hardware_configuration": 14
                },
                "input_value": {
                    "user_input": 1,
                    "value": 4
                },
                "update_value_in_memory_08000e3c": {
                    "update_memory_value": 28,
                    "update_value_in_memory": 2
                }
            },
            "called": [
                "FUN_08000d8e",
                "FUN_08000e3c"
            ],
            "calling": [
                "FUN_08004884"
            ],
            "code": "\nvoid initialize_hardware_system_08004648(void)\n\n{\n  HAL_NVIC_SetPriorityGrouping(3);\n  initialize_hardware_configuration();\n  return;\n}\n\n",
            "current_name": "initialize_hardware_system_08004648",
            "entrypoint": "0x08004648",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004648": "initialize_hardware_system_08004648",
                "initialize_hardware_configuration_08000d8e": "initialize_hardware_configuration"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004658": {
            "additional_data": {
                "FUNC_08004338": {
                    "loop": 1,
                    "perform_action_b": 1,
                    "reverse_input": 1,
                    "setup": 21,
                    "setup_program": 1
                },
                "FUNC_08004646": {
                    "execute_loop": 2,
                    "loop": 18,
                    "main_loop": 1,
                    "perform_action": 1,
                    "perform_action_c": 1,
                    "program_loop": 1,
                    "serial_event_run": 1
                },
                "FUN_08000c4c": {
                    "init_variant": 16,
                    "initialize": 1,
                    "initialize_variant": 7,
                    "perform_action_a": 1
                },
                "FUN_08000c64": {
                    "finalize": 1,
                    "handle_serial_events": 1,
                    "perform_action_d": 1,
                    "process_serial_events": 1,
                    "run_serial_event": 6,
                    "serial_event": 1,
                    "serial_event_run": 13,
                    "setup": 1
                },
                "FUN_08004658": {
                    "execute": 1,
                    "execute_program": 1,
                    "initialize_and_run": 7,
                    "initialize_and_run_program": 1,
                    "initialize_and_setup": 2,
                    "main": 1,
                    "main_function": 1,
                    "main_loop": 6,
                    "run_application": 2,
                    "run_program": 9
                },
                "initVariant": {
                    "initialize_variant": 8
                },
                "loop": {
                    "continuous_loop": 1,
                    "execute_loop": 3,
                    "execute_program_logic": 1,
                    "main_loop": 1,
                    "run_loop": 2
                },
                "serialEventRun": {
                    "handle_serial_event": 1,
                    "handle_serial_events": 1,
                    "run_serial_event": 6
                },
                "setup": {
                    "configure": 1,
                    "configure_environment": 1,
                    "configure_hardware": 1,
                    "configure_system": 1,
                    "initial_setup": 1,
                    "perform_setup": 1,
                    "set_up": 1,
                    "set_up_environment": 1
                }
            },
            "called": [
                "FUN_08000c4c",
                "FUN_08004338",
                "FUN_08004646",
                "FUN_08000c64"
            ],
            "calling": [
                "FUN_08000d3c"
            ],
            "code": "\nvoid initialize_and_run_program_08004658(void)\n\n{\n  initialize_variant();\n  configure_hardware();\n  do {\n    execute_loop();\n    run_serial_event();\n  } while( true );\n}\n\n",
            "current_name": "initialize_and_run_program_08004658",
            "entrypoint": "0x08004658",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004658": "initialize_and_run_program_08004658",
                "initVariant": "initialize_variant",
                "loop": "execute_loop",
                "serialEventRun": "run_serial_event",
                "setup": "configure_hardware"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004678": {
            "additional_data": {
                "FUN_08004678": {
                    "count_bit_set": 1,
                    "count_bit_shifts": 1,
                    "count_bits": 8,
                    "count_bits_set": 4,
                    "count_set_bits": 16
                },
                "cVar1": {
                    "bit_count": 27,
                    "bit_shift_count": 1,
                    "bits_count": 1,
                    "count": 1,
                    "set_bits_count": 1
                },
                "param_1": {
                    "input": 1,
                    "input_num": 2,
                    "input_number": 5,
                    "n": 1,
                    "num": 8,
                    "number": 13
                }
            },
            "called": [],
            "calling": [
                "FUN_080047d0"
            ],
            "code": "\nchar count_bits_set_08004678(uint number)\n\n{\n  char bit_count;\n  \n  bit_count = '\\0';\n  for (; number != 1; number = number >> 1) {\n    bit_count = bit_count + '\\x01';\n  }\n  return bit_count;\n}\n\n",
            "current_name": "count_bits_set_08004678",
            "entrypoint": "0x08004678",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004678": "count_bits_set_08004678",
                "cVar1": "bit_count",
                "param_1": "number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080046b4": {
            "additional_data": {
                "DAT_20000488": {
                    "variable1": 1
                },
                "DAT_20000494": {
                    "variable2": 1
                },
                "DAT_2000049c": {
                    "variable3": 1
                },
                "DAT_200004a8": {
                    "variable4": 1
                },
                "DAT_200004b0": {
                    "variable5": 1
                },
                "DAT_200004bc": {
                    "variable6": 1
                },
                "DAT_200004c4": {
                    "variable7": 1
                },
                "DAT_200004d0": {
                    "variable8": 1
                },
                "DAT_200004d8": {
                    "variable9": 1
                },
                "DAT_200004e4": {
                    "variable10": 1
                },
                "DAT_200004ec": {
                    "variable11": 1
                },
                "DAT_200004f8": {
                    "variable12": 1
                },
                "DAT_20000500": {
                    "variable13": 1
                },
                "DAT_2000050c": {
                    "variable14": 1
                },
                "DAT_20000514": {
                    "variable15": 1
                },
                "DAT_20000520": {
                    "variable16": 1
                },
                "DAT_20000528": {
                    "variable17": 1
                },
                "DAT_20000534": {
                    "variable18": 1
                },
                "DAT_2000053c": {
                    "variable19": 1
                },
                "DAT_20000548": {
                    "variable20": 1
                },
                "DAT_20000550": {
                    "variable21": 1
                },
                "DAT_2000055c": {
                    "variable22": 1
                },
                "DAT_20000564": {
                    "variable23": 1
                },
                "DAT_20000570": {
                    "variable24": 1
                },
                "DAT_20000578": {
                    "variable25": 1
                },
                "DAT_20000584": {
                    "variable26": 1
                },
                "DAT_2000058c": {
                    "variable27": 1
                },
                "DAT_20000598": {
                    "variable28": 1
                },
                "DAT_200005a0": {
                    "variable29": 1
                },
                "DAT_200005ac": {
                    "variable30": 1
                },
                "DAT_200005b4": {
                    "variable31": 1
                },
                "DAT_200005c0": {
                    "variable32": 1
                },
                "FUN_080046b4": {
                    "configure_settings": 1,
                    "initialize_config": 1,
                    "initialize_constants": 2,
                    "initialize_data": 14,
                    "initialize_global_variables": 1,
                    "initialize_memory": 1,
                    "initialize_parameters": 9,
                    "initialize_params": 1,
                    "initialize_settings": 1
                },
                "FUN_080047fe": {
                    "perform_action": 1
                },
                "LAB_0800468c_1": {
                    "cleanup_function": 3,
                    "exit_function": 2,
                    "exit_handler": 4
                },
                "__aeabi_atexit": {
                    "register_cleanup_function": 8,
                    "register_exit_callback": 2,
                    "register_exit_function": 3,
                    "register_exit_handler": 4
                },
                "cleanupFunction": {
                    "cleanup_function": 1
                },
                "exitFunction": {
                    "exit_function": 1
                },
                "exitHandler": {
                    "exit_function": 1
                },
                "initializeConstants": {
                    "initialize_constants": 1
                },
                "initializeData": {
                    "initialize_data": 2
                },
                "initializeParams": {
                    "initialize_parameters": 1
                },
                "param_1": {
                    "check_value": 1,
                    "condition": 8,
                    "flag": 9,
                    "is_initialization_required": 1,
                    "param1": 1,
                    "status": 6,
                    "status_code": 1,
                    "value1": 3,
                    "value_one": 1
                },
                "param_2": {
                    "compare_value": 1,
                    "flag": 1,
                    "param2": 1,
                    "param_value": 2,
                    "value": 22,
                    "value2": 3,
                    "value_two": 1
                },
                "param_3": {
                    "param1": 2,
                    "param3": 4,
                    "param_3": 1,
                    "parameter_three": 1,
                    "unused": 1,
                    "unused1": 8,
                    "unused_param": 3,
                    "unused_param1": 7,
                    "unused_param_1": 1,
                    "value3": 1
                },
                "param_4": {
                    "callback": 3,
                    "exit_function": 2,
                    "param2": 2,
                    "param4": 4,
                    "parameter_four": 1,
                    "unused2": 8,
                    "unused_param2": 8,
                    "unused_param_2": 1,
                    "user_data": 1,
                    "value4": 1
                },
                "registerCleanupFunction": {
                    "register_cleanup_function": 1
                },
                "registerExitFunction": {
                    "register_exit_function": 1
                },
                "registerExitHandler": {
                    "register_exit_function": 1
                },
                "status": {
                    "status": 2
                },
                "value": {
                    "value": 2
                },
                "value1": {
                    "first_value": 1
                },
                "value2": {
                    "second_value": 1
                }
            },
            "called": [
                "FUN_080047fe"
            ],
            "calling": [],
            "code": "\nvoid initialize_data_080046b4(int flag,int value,undefined4 unused1,undefined4 unused2)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_20000488 = 6;\n    DAT_20000494 = 0;\n    DAT_2000049c = 7;\n    DAT_200004a8 = 0;\n    DAT_200004b0 = 8;\n    DAT_200004bc = 0;\n    DAT_200004c4 = 9;\n    DAT_200004d0 = 0;\n    DAT_200004d8 = 10;\n    DAT_200004e4 = 0;\n    DAT_200004ec = 0x17;\n    DAT_200004f8 = 0;\n    DAT_20000500 = 0x17;\n    DAT_2000050c = 0;\n    DAT_20000514 = 0x17;\n    DAT_20000520 = 0;\n    DAT_20000528 = 0x17;\n    DAT_20000534 = 0;\n    DAT_2000053c = 0x17;\n    DAT_20000548 = 0;\n    DAT_20000550 = 0x28;\n    DAT_2000055c = 0;\n    DAT_20000564 = 0x28;\n    DAT_20000570 = 0;\n    DAT_20000578 = 0x28;\n    DAT_20000584 = 0;\n    DAT_2000058c = 0x28;\n    DAT_20000598 = 0;\n    DAT_200005a0 = 0x28;\n    DAT_200005ac = 0;\n    DAT_200005b4 = 0x28;\n    DAT_200005c0 = 0;\n    register_cleanup_function(0,&exit_handler,&DAT_20000000,&DAT_20000488,unused2);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_080046b4",
            "entrypoint": "0x080046b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080046b4": "initialize_data_080046b4",
                "LAB_0800468c_1": "exit_handler",
                "__aeabi_atexit": "register_cleanup_function",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "unused1",
                "param_4": "unused2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080047c0": {
            "additional_data": {
                "FUN_080047c0": {
                    "check_and_execute_function": 4,
                    "execute_function": 6,
                    "execute_function_or_throw": 1,
                    "execute_or_throw_bad_function_call": 1,
                    "handle_function_call": 1,
                    "process_callback": 1,
                    "process_data": 1,
                    "process_function": 8,
                    "process_input": 2,
                    "process_param": 1,
                    "process_param1": 2,
                    "process_param_one": 1,
                    "process_parameter": 2
                },
                "FUN_08005760": {
                    "execute": 1,
                    "execute_action": 1,
                    "execute_sub_function": 1,
                    "execute_subfunction": 1,
                    "handle_condition": 1,
                    "handle_error": 2,
                    "handle_exception": 1,
                    "handle_pin_id": 1,
                    "other_function": 1,
                    "perform_action": 1,
                    "perform_additional_action": 1,
                    "perform_operation": 2,
                    "print_error_message": 1,
                    "reverse_operation": 1,
                    "run_sub_function": 1,
                    "secondary_process_function": 1,
                    "sub_function": 1
                },
                "get_pin_id": {
                    "retrieve_pin_id": 1
                },
                "iVar1": {
                    "pin_id": 30,
                    "pin_index": 1
                },
                "param_1": {
                    "data": 1,
                    "function_data": 2,
                    "function_pointer": 4,
                    "input": 10,
                    "input_param": 6,
                    "input_parameter": 2,
                    "input_value": 3,
                    "param": 1,
                    "parameter": 2
                }
            },
            "called": [
                "FUN_08005760"
            ],
            "calling": [
                "FUN_080047d0"
            ],
            "code": "\nvoid check_and_execute_function_080047c0(int input)\n\n{\n  int pin_id;\n  \n  if (*(int *)(input + 8) != 0) {\n    (**(code **)(input + 0xc))();\n    return;\n  }\n  __throw_bad_function_call();\n  pin_id = retrieve_pin_id();\n  if ((&DAT_20000494)[pin_id * 5] != 0) {\n    check_and_execute_function_080047c0();\n  }\n  return;\n}\n\n",
            "current_name": "check_and_execute_function_080047c0",
            "entrypoint": "0x080047c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080047c0": "check_and_execute_function_080047c0",
                "get_pin_id": "retrieve_pin_id",
                "iVar1": "pin_id",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080047d0": {
            "additional_data": {
                "DAT_20000494": {
                    "pin_data": 1,
                    "pin_status_array": 2,
                    "pin_validity_array": 1
                },
                "FUN_08004678": {
                    "check_if_pin_active": 1,
                    "check_pin_status": 1,
                    "get_pin_id": 1,
                    "get_pin_status": 2,
                    "is_valid": 1,
                    "is_valid_pin": 1,
                    "operator": 2,
                    "operator_exists": 1
                },
                "FUN_080047c0": {
                    "get_pin_id": 2,
                    "get_pin_status": 1,
                    "handle_error": 1,
                    "initialize_pin": 1,
                    "perform_operation": 1,
                    "set_pin_id": 2,
                    "update_pin_state": 1,
                    "update_pin_status": 1
                },
                "FUN_080047d0": {
                    "check_and_call_operator": 9,
                    "check_and_execute": 1,
                    "check_and_execute_operator": 6,
                    "check_and_execute_pin_action": 1,
                    "check_and_execute_pin_operation": 3,
                    "check_and_invoke_operator": 4,
                    "check_pin_and_call_operator": 2,
                    "check_pin_and_execute": 1,
                    "check_pin_and_invoke_operator": 1,
                    "check_pin_availability": 1,
                    "execute_if_pin_valid": 1,
                    "execute_if_valid_pin": 1
                },
                "get_pin_id": {
                    "fetch_pin_id": 1,
                    "get_current_pin_id": 10,
                    "get_pin_id": 4,
                    "retrieve_pin_id": 6
                },
                "iVar1": {
                    "current_pin_id": 1,
                    "pin_id": 28,
                    "pin_index": 1
                },
                "param_1": {
                    "input": 1,
                    "pin_id": 3,
                    "pin_state": 1,
                    "value": 2
                },
                "param_2": {
                    "value": 1
                }
            },
            "called": [
                "FUN_080047c0",
                "FUN_08004678"
            ],
            "calling": [
                "FUN_080011a4"
            ],
            "code": "\nvoid check_pin_and_call_operator_080047d0(void)\n\n{\n  int pin_id;\n  \n  pin_id = get_current_pin_id();\n  if ((&DAT_20000494)[pin_id * 5] != 0) {\n    operator()();\n  }\n  return;\n}\n\n",
            "current_name": "check_pin_and_call_operator_080047d0",
            "entrypoint": "0x080047d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080047d0": "check_pin_and_call_operator_080047d0",
                "get_pin_id": "get_current_pin_id",
                "iVar1": "pin_id"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080047fe": {
            "additional_data": {
                "FUN_080047fe": {
                    "initialize_at_exit_handler": 1,
                    "initialize_cleanup_handler": 1,
                    "register_at_exit_callback": 1,
                    "register_at_exit_function": 1,
                    "register_at_exit_handler": 1,
                    "register_atexit_handler": 2,
                    "register_cleanup": 1,
                    "register_cleanup_function": 4,
                    "register_exit_function": 10,
                    "register_exit_handler": 8,
                    "register_function_cleanup": 1
                },
                "FUN_08004844": {
                    "calculate_checksum": 4,
                    "calculate_result": 3,
                    "calculate_value": 1,
                    "compute_value": 2,
                    "convert_to_long_long": 1,
                    "execute_operation": 1,
                    "get_reversed_value": 1,
                    "multiply_and_return_long_long": 1,
                    "perform_action": 4,
                    "perform_long_operation": 1,
                    "perform_operation": 3,
                    "process_data": 3,
                    "reverse_bytes": 2,
                    "reverse_value": 1,
                    "translate_offset": 1
                },
                "param_1": {
                    "action_parameter": 1,
                    "cleanup_function": 2,
                    "data": 2,
                    "data_parameter": 1,
                    "data_pointer": 1,
                    "exit_func": 1,
                    "exit_function": 2,
                    "function_pointer": 1,
                    "handler_function": 2,
                    "input": 2,
                    "input_param": 2,
                    "input_parameter": 3,
                    "input_value": 5,
                    "operation_param1": 1,
                    "operation_parameter1": 1,
                    "param": 1,
                    "param_value": 1,
                    "value": 2
                },
                "param_2": {
                    "action_flag": 1,
                    "bit_mask": 1,
                    "bits": 1,
                    "bits_to_reverse": 1,
                    "bitwise_flag": 1,
                    "cleanup_handler": 1,
                    "cleanup_pointer": 1,
                    "context": 1,
                    "data_size": 1,
                    "exit_arg": 1,
                    "exit_priority": 1,
                    "flag": 6,
                    "flags": 4,
                    "length": 2,
                    "mask": 1,
                    "offset": 1,
                    "operation_param2": 1,
                    "operation_parameter": 1,
                    "operation_parameter2": 1,
                    "user_data": 1,
                    "value_modifier": 1,
                    "value_to_reverse": 1
                }
            },
            "called": [
                "FUN_08004844"
            ],
            "calling": [
                "FUN_080046b4"
            ],
            "code": "\nvoid register_at_exit_function_080047fe(undefined4 input_value,undefined4 flag)\n\n{\n  __cxa_atexit(flag,input_value);\n  return;\n}\n\n",
            "current_name": "register_at_exit_function_080047fe",
            "entrypoint": "0x080047fe",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080047fe": "register_at_exit_function_080047fe",
                "param_1": "input_value",
                "param_2": "flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004808": {
            "additional_data": {
                "FUN_08004808": {
                    "assertion_failed": 1,
                    "log_assertion_failed": 1,
                    "log_assertion_failure": 1,
                    "print_assert_failed": 1,
                    "print_assert_failure": 1,
                    "print_assertion": 1,
                    "print_assertion_error": 12,
                    "print_assertion_failed": 2,
                    "print_assertion_failed_message": 8,
                    "print_assertion_failure": 2,
                    "print_assertion_message": 1
                },
                "FUN_08004860": {
                    "print_assertion_failed_message": 1
                },
                "FUN_080051ac": {
                    "perform_abort": 1
                },
                "LAB_0800482c": {
                    "label_check_assertion": 1,
                    "no_assertion_failed": 1
                },
                "abort": {
                    "terminate_execution": 1
                },
                "fiprintf": {
                    "formatted_printf": 1,
                    "print_formatted_message": 1
                },
                "param_1": {
                    "file": 11,
                    "file_name": 18,
                    "filename": 2
                },
                "param_2": {
                    "line": 10,
                    "line_number": 21
                },
                "param_3": {
                    "assertion": 7,
                    "assertion_expression": 2,
                    "assertion_message": 2,
                    "condition": 1,
                    "empty_string": 1,
                    "expression": 2,
                    "function": 2,
                    "function_name": 14
                },
                "param_4": {
                    "additional_info": 1,
                    "additional_message": 1,
                    "assertion": 8,
                    "assertion_condition": 1,
                    "assertion_error": 1,
                    "assertion_message": 6,
                    "error_message": 1,
                    "function": 5,
                    "function_name": 6,
                    "message": 1
                },
                "pcVar2": {
                    "additional_info": 2,
                    "additional_message": 8,
                    "additional_msg": 2,
                    "additional_text": 1,
                    "append_str": 1,
                    "delimiter": 1,
                    "empty_string": 1,
                    "extra_info": 2,
                    "extra_message": 2,
                    "format_string": 1,
                    "function_name": 1,
                    "message": 2,
                    "message_suffix": 1,
                    "prefix": 3,
                    "prefix_text": 1,
                    "separator": 1,
                    "suffix": 1
                },
                "uVar1": {
                    "file": 2,
                    "file_descriptor": 9,
                    "file_output_stream": 1,
                    "file_pointer": 6,
                    "file_ptr": 4,
                    "file_stream": 1,
                    "output_file": 6,
                    "output_stream": 1,
                    "stream": 1
                },
                "uVar3": {
                    "abort_result": 17,
                    "abort_return_value": 1,
                    "result": 9,
                    "return_value": 4
                },
                "uVar4": {
                    "abort_ptr": 1,
                    "additional_info_copy": 1,
                    "assertion": 1,
                    "assertion_after_prefix": 1,
                    "assertion_copy": 1,
                    "assertion_detail": 1,
                    "assertion_error_copy": 1,
                    "assertion_message": 2,
                    "assertion_message_2": 1,
                    "assertion_message_copy": 2,
                    "assertion_param": 1,
                    "assertion_ptr": 2,
                    "assertion_result": 1,
                    "extra_arg": 1,
                    "extra_info": 2,
                    "extra_message": 1,
                    "formatted_string": 1,
                    "function_backup": 1,
                    "function_name": 1,
                    "function_name_copy": 1,
                    "function_param": 1,
                    "function_parameter": 2,
                    "function_params": 1,
                    "message_parameter": 1,
                    "suffix": 1
                }
            },
            "called": [
                "FUN_08004860",
                "FUN_080051ac"
            ],
            "calling": [
                "FUN_08004388"
            ],
            "code": "\nvoid print_assertion_error_08004808(undefined4 file_name,undefined4 line_number,char *function_name,undefined4 assertion)\n\n{\n  undefined4 file_descriptor;\n  char *additional_message;\n  undefined8 abort_result;\n  undefined4 function_parameter;\n  \n  file_descriptor = *(undefined4 *)(DAT_200000a0 + 0xc);\n  function_parameter = assertion;\n  if (function_name == (char *)0x0) goto no_assertion_failed;\n  additional_message = \", function: \";\n  do {\n    print_formatted_message(file_descriptor,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",assertion,file_name,line_number,\n             additional_message,function_name,function_parameter);\n    abort_result = terminate_execution();\n    line_number = (undefined4)((ulonglong)abort_result >> 0x20);\n    file_descriptor = (undefined4)abort_result;\nno_assertion_failed:\n    function_name = \"\";\n    additional_message = function_name;\n  } while( true );\n}\n\n",
            "current_name": "print_assertion_error_08004808",
            "entrypoint": "0x08004808",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004808": "print_assertion_error_08004808",
                "LAB_0800482c": "no_assertion_failed",
                "abort": "terminate_execution",
                "fiprintf": "print_formatted_message",
                "param_1": "file_name",
                "param_2": "line_number",
                "param_3": "function_name",
                "param_4": "assertion",
                "pcVar2": "additional_message",
                "uVar1": "file_descriptor",
                "uVar3": "abort_result",
                "uVar4": "function_parameter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004844": {
            "additional_data": {
                "FUN_08004844": {
                    "bitwise_shift": 1,
                    "convert_to64_bits": 1,
                    "left_shift64_bits": 2,
                    "left_shift_by32": 2,
                    "left_shift_by32_bits": 1,
                    "left_shift_by40_bits": 1,
                    "left_shift_multiply": 1,
                    "left_shift_param_64": 1,
                    "left_shift_param_to_longlong": 1,
                    "left_shift_uint64": 2,
                    "shift_and_extend_bits": 1,
                    "shift_left64_bits": 1,
                    "shift_left_by32": 6,
                    "shift_left_by32_bits": 4,
                    "shift_param_left": 2,
                    "shift_param_to_high_bits": 1,
                    "shift_u_int64_left": 1,
                    "shift_uint64_left": 1,
                    "shift_unsigned": 1
                },
                "param_1": {
                    "count": 1,
                    "first_param": 2,
                    "flag": 1,
                    "flags": 4,
                    "initial_value": 1,
                    "input": 3,
                    "input_param": 1,
                    "input_value": 1,
                    "int_value": 1,
                    "param": 5,
                    "param1": 3,
                    "param_uint": 1,
                    "source": 1,
                    "undefined4_param": 1,
                    "undefined_param": 1,
                    "undefined_value": 2,
                    "value": 2
                },
                "param_2": {
                    "bits": 1,
                    "input_uint": 1,
                    "input_value": 4,
                    "long_value": 1,
                    "num": 2,
                    "number": 1,
                    "shift_amount": 1,
                    "uint_param": 1,
                    "value": 15,
                    "value_to_shift": 4
                },
                "ulonglong": {
                    "unsigned_long_long": 1
                },
                "undefined4": {
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080047fe"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800484c) */\n\nlonglong left_shift_by32_bits_08004844(result param,uint value)\n\n{\n  return (unsigned_long_long)value << 0x20;\n}\n\n",
            "current_name": "left_shift_by32_bits_08004844",
            "entrypoint": "0x08004844",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004844": "left_shift_by32_bits_08004844",
                "param_1": "param",
                "param_2": "value",
                "ulonglong": "unsigned_long_long",
                "undefined4": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004860": {
            "additional_data": {
                "FUN_08004860": {
                    "formatted_print_function": 1,
                    "print_data": 5,
                    "print_formatted_data": 1,
                    "print_formatted_message": 1,
                    "print_formatted_output": 2,
                    "print_formatted_string": 2,
                    "print_formatted_text": 1,
                    "print_function": 3,
                    "print_message": 1,
                    "print_param_values": 1,
                    "print_parameters": 5,
                    "print_stack_values": 5,
                    "print_stack_variables": 3
                },
                "_vfiprintf_r": {
                    "formatted_print": 1
                },
                "param_1": {
                    "format": 1,
                    "format_string": 29,
                    "message": 1
                },
                "param_2": {
                    "arg1": 21,
                    "arg_1": 1,
                    "argument_1": 1,
                    "format_string": 1,
                    "param1": 1,
                    "param_2": 4,
                    "value_1": 1,
                    "var_arg_list": 1
                },
                "param_3": {
                    "arg2": 20,
                    "arg_2": 1,
                    "argument_2": 1,
                    "param2": 1,
                    "param3": 1,
                    "param_3": 4,
                    "value1": 1,
                    "value_2": 1,
                    "variable_1": 1
                },
                "param_4": {
                    "arg3": 20,
                    "arg_3": 1,
                    "argument_3": 1,
                    "param3": 1,
                    "param4": 1,
                    "param_4": 4,
                    "pointer_to_value": 1,
                    "value2": 1,
                    "variable_2": 1
                },
                "uStack_4": {
                    "arg3_copy": 6,
                    "arg3_cpy": 1,
                    "arg5": 3,
                    "arg_3_copy": 1,
                    "formatted_arg_2": 1,
                    "local_data_2": 1,
                    "param4_copy": 1,
                    "param_4_copy": 2,
                    "temp2": 1,
                    "value4": 1,
                    "value_4": 1
                },
                "uStack_8": {
                    "arg2_copy": 6,
                    "arg2_cpy": 1,
                    "arg4": 3,
                    "arg_2_copy": 1,
                    "formatted_arg_1": 1,
                    "local_data_1": 1,
                    "param3_copy": 1,
                    "param_3_copy": 2,
                    "temp1": 1,
                    "value3": 1,
                    "value_3": 1
                }
            },
            "called": [
                "FUN_08004a84"
            ],
            "calling": [
                "FUN_08004808"
            ],
            "code": "\nvoid print_formatted_data_08004860(undefined4 format_string,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  undefined4 arg2_copy;\n  undefined4 arg3_copy;\n  \n  arg2_copy = arg2;\n  arg3_copy = arg3;\n  formatted_print(DAT_200000a0,format_string,arg1,&arg2_copy,format_string,&arg2_copy);\n  return;\n}\n\n",
            "current_name": "print_formatted_data_08004860",
            "entrypoint": "0x08004860",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004860": "print_formatted_data_08004860",
                "_vfiprintf_r": "formatted_print",
                "param_1": "format_string",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "uStack_4": "arg3_copy",
                "uStack_8": "arg2_copy"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004884": {
            "additional_data": {
                "FUNC_080059f8": {
                    "execute_additional_code": 1,
                    "function2": 2,
                    "function_2": 1,
                    "function_b": 1,
                    "function_two": 2,
                    "handle_function_2": 1,
                    "initialize_components": 1,
                    "initialize_data": 1,
                    "initialize_system": 2,
                    "perform_action2": 1,
                    "perform_task2": 1,
                    "second_function": 1,
                    "sub_function_2": 1
                },
                "FUN_08004648": {
                    "first_function": 1,
                    "function1": 2,
                    "function_1": 1,
                    "function_a": 1,
                    "function_one": 2,
                    "handle_function_1": 1,
                    "initialize_system": 1,
                    "perform_action1": 1,
                    "perform_operation": 1,
                    "perform_task": 1,
                    "perform_task1": 1,
                    "print_info": 1,
                    "print_user_info": 1,
                    "sub_function_1": 1
                },
                "FUN_08004884": {
                    "execute_all_functions": 2,
                    "execute_function_list": 1,
                    "execute_function_sequence": 1,
                    "execute_functions": 24,
                    "execute_sub_functions": 2,
                    "execute_subroutines": 1
                },
                "iVar1": {
                    "count": 1,
                    "counter": 4,
                    "function_index": 1,
                    "i": 2,
                    "index": 15,
                    "iteration": 1,
                    "iteration_count": 1,
                    "iterator": 2
                }
            },
            "called": [
                "FUN_08004648",
                "FUN_080059f8"
            ],
            "calling": [
                "FUN_08000d3c"
            ],
            "code": "\nvoid execute_all_functions_08004884(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_08006008)[index])();\n  }\n  _init();\n  for (index = 0; index != 10; index = index + 1) {\n    (*(code *)(&DAT_08006008)[index])();\n  }\n  return;\n}\n\n",
            "current_name": "execute_all_functions_08004884",
            "entrypoint": "0x08004884",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004884": "execute_all_functions_08004884",
                "iVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080048cc": {
            "additional_data": {
                "FUN_080048cc": {
                    "fill_memory": 16,
                    "fill_memory_with": 3,
                    "fill_memory_with_byte": 1,
                    "fill_memory_with_value": 5,
                    "initialize_memory": 2,
                    "memset": 2,
                    "memset_array": 1,
                    "set_memory": 1
                },
                "param_1": {
                    "array": 1,
                    "dest": 1,
                    "destination": 15,
                    "destination_ptr": 1,
                    "memory": 8,
                    "memory_block": 1,
                    "memory_pointer": 2,
                    "memory_start": 1,
                    "start": 1
                },
                "param_2": {
                    "byte": 1,
                    "value": 27,
                    "value_to_fill": 3
                },
                "param_3": {
                    "block_size": 1,
                    "count": 2,
                    "length": 9,
                    "memory_size": 1,
                    "num_bytes": 1,
                    "size": 17
                },
                "puVar1": {
                    "end": 4,
                    "end_address": 11,
                    "end_memory": 1,
                    "end_of_memory": 2,
                    "end_pointer": 1,
                    "end_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005400",
                "FUN_08005374",
                "FUN_0800532c"
            ],
            "code": "\nvoid fill_memory_with_value_080048cc(undefined *destination,undefined value,int size)\n\n{\n  undefined *end_address;\n  \n  end_address = destination + size;\n  for (; destination != end_address; destination = destination + 1) {\n    *destination = value;\n  }\n  return;\n}\n\n",
            "current_name": "fill_memory_with_value_080048cc",
            "entrypoint": "0x080048cc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080048cc": "fill_memory_with_value_080048cc",
                "param_1": "destination",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "end_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080048dc": {
            "additional_data": {
                "DAT_200005c8": {
                    "data_pointer": 1,
                    "head": 3,
                    "head_ptr": 2,
                    "heap_data": 1,
                    "list_head": 1,
                    "start_ptr": 1
                },
                "FUNC_0800557c": {
                    "function1": 2
                },
                "FUNC_0800557e": {
                    "function2": 2
                },
                "FUN_080048dc": {
                    "add_value_to_heap": 1,
                    "allocate_memory": 3,
                    "insert_into_linked_list": 1,
                    "insert_into_list": 2,
                    "realloc_linked_list": 1,
                    "rearrange_pointers": 1,
                    "reorder_array": 1,
                    "reorder_data_blocks": 1,
                    "reorganize_pointers": 1,
                    "update_data": 1,
                    "update_data_structure": 1,
                    "update_linked_list": 9,
                    "update_list": 2,
                    "update_pointer": 1,
                    "update_pointer_array": 1,
                    "update_pointer_list": 1
                },
                "__malloc_lock": {
                    "acquire_memory_lock": 1,
                    "lock": 1,
                    "lock_memory": 3,
                    "lock_memory_allocation": 6
                },
                "__malloc_unlock": {
                    "release_memory_lock": 1,
                    "unlock": 1,
                    "unlock_memory": 3,
                    "unlock_memory_allocation": 5
                },
                "bVar6": {
                    "boolean_var": 1,
                    "condition": 7,
                    "condition_flag": 1,
                    "flag": 1,
                    "is_condition_true": 2,
                    "is_curr_ptr_equal_to_prev_ptr": 1,
                    "is_current_address_equal_to_new_node": 1,
                    "is_current_last_node": 1,
                    "is_current_ptr_same": 1,
                    "is_end": 1,
                    "is_equal": 2,
                    "is_first_element": 1,
                    "is_last_node": 2,
                    "is_match": 2,
                    "is_new_block": 1,
                    "is_new_entry": 1,
                    "is_same": 1,
                    "is_same_node": 3,
                    "is_true": 1
                },
                "extraout_r1": {
                    "extra_out": 1,
                    "extra_output": 4,
                    "extra_output1": 1,
                    "extra_ptr": 2,
                    "new_head": 1,
                    "next_node": 1,
                    "pointer2": 1,
                    "ptr2": 1,
                    "ptr_to_next_node": 1,
                    "temp2": 3,
                    "temp_pointer": 3,
                    "temp_pointer2": 1,
                    "temp_ptr": 3,
                    "temp_ptr1": 1,
                    "temp_ptr2": 2,
                    "temp_var": 1,
                    "updated_pointer": 1
                },
                "param_1": {
                    "array": 2,
                    "array_ptr": 1,
                    "error_code": 2,
                    "input_array": 1,
                    "list": 3,
                    "list_head": 1,
                    "lock_status": 1,
                    "output": 2,
                    "output_array": 1,
                    "output_message": 1,
                    "output_pointer": 1,
                    "output_ptr": 1,
                    "param": 1,
                    "pointer": 1,
                    "pointer_list": 1,
                    "ptr_to_http_status": 1,
                    "ptr_to_result": 1,
                    "result": 7,
                    "result_status": 1,
                    "status": 1
                },
                "param_2": {
                    "array_length": 2,
                    "array_size": 1,
                    "data_block_size": 1,
                    "data_size": 1,
                    "list_size": 2,
                    "num_elements": 1,
                    "num_of_nodes": 1,
                    "size": 22
                },
                "param_3": {
                    "arg3": 3,
                    "data1": 1,
                    "extra_param1": 1,
                    "param1": 3,
                    "param3": 10,
                    "param_3": 4,
                    "ptr1": 1,
                    "unused": 1,
                    "unused1": 1,
                    "value1": 1,
                    "var1": 1,
                    "var3": 3,
                    "var_3": 1
                },
                "param_4": {
                    "arg4": 3,
                    "data2": 1,
                    "extra_param2": 1,
                    "param2": 3,
                    "param4": 10,
                    "param_4": 4,
                    "ptr4": 1,
                    "unused": 1,
                    "unused2": 1,
                    "value2": 1,
                    "var2": 1,
                    "var4": 3,
                    "var_4": 1
                },
                "piVar1": {
                    "current_element": 2,
                    "current_node": 1,
                    "current_pointer": 2,
                    "current_size": 1,
                    "current_value": 3,
                    "next_ptr": 1,
                    "pointer": 1,
                    "pointer1": 1,
                    "pointer_var1": 1,
                    "previous_size": 1,
                    "ptr1": 1,
                    "temp": 5,
                    "temp1": 3,
                    "temp_pointer": 1,
                    "temp_pointer1": 1,
                    "temp_ptr": 4,
                    "temp_ptr1": 2
                },
                "ppiVar2": {
                    "curr_ptr": 1,
                    "current": 3,
                    "current_node": 3,
                    "current_pointer": 1,
                    "current_ptr": 1,
                    "pointer2": 1,
                    "pointer_pointer_var2": 1,
                    "ppi_var1": 1,
                    "prev_pointer": 1,
                    "prev_ptr": 1,
                    "previous_node": 1,
                    "previous_pointer": 1,
                    "ptr2": 1,
                    "ptr3": 1,
                    "ptr_to_current_node": 1,
                    "start_pointer": 1,
                    "temp_pointer1": 2,
                    "temp_pointer3": 1,
                    "temp_ptr": 2,
                    "temp_ptr1": 1,
                    "temp_ptr2": 1,
                    "temp_ptr3": 2,
                    "temp_ptr_2": 1,
                    "temp_var1": 1
                },
                "ppiVar3": {
                    "curr_ptr": 1,
                    "current_address": 1,
                    "current_node": 1,
                    "current_pointer": 2,
                    "current_ptr": 4,
                    "next_node": 1,
                    "next_pointer": 1,
                    "next_ptr": 1,
                    "pointer3": 1,
                    "pointer_pointer_var3": 1,
                    "prev": 1,
                    "prev_node": 1,
                    "prev_ptr": 1,
                    "previous": 2,
                    "previous_element": 1,
                    "previous_node": 2,
                    "previous_ptr": 1,
                    "ptr1": 1,
                    "ptr3": 1,
                    "ptr4": 1,
                    "ptr_to_previous_node": 1,
                    "temp_pointer1": 1,
                    "temp_pointer2": 1,
                    "temp_pointer4": 1,
                    "temp_ptr2": 1
                },
                "ppiVar4": {
                    "current_ptr_2": 1,
                    "loop_node": 1,
                    "next": 2,
                    "next_address": 1,
                    "next_pointer": 1,
                    "node_to_insert": 1,
                    "pointer4": 1,
                    "pointer_pointer_var4": 1,
                    "prev_node": 1,
                    "prev_ptr": 3,
                    "previous_node": 1,
                    "previous_pointer": 1,
                    "previous_ptr": 1,
                    "ptr2": 1,
                    "ptr4": 1,
                    "ptr5": 1,
                    "ptr_to_next_node2": 1,
                    "temp_node": 1,
                    "temp_pointer2": 2,
                    "temp_pointer3": 1,
                    "temp_pointer5": 1,
                    "temp_ptr": 1,
                    "temp_ptr1": 1,
                    "temp_ptr2": 1,
                    "temp_ptr3": 1,
                    "temp_ptr4": 1,
                    "temp_var2": 1
                },
                "ppiVar5": {
                    "block": 1,
                    "curr_ptr": 1,
                    "current_ptr": 1,
                    "end_ptr": 1,
                    "new_element": 1,
                    "new_list_node_ptr": 1,
                    "new_node": 10,
                    "new_pointer": 4,
                    "new_ptr": 4,
                    "pointer5": 1,
                    "pointer_pointer_var5": 1,
                    "ptr3": 1,
                    "ptr6": 1,
                    "ptr_to_new_node": 1,
                    "temp_pointer6": 1,
                    "temp_ptr4": 1
                }
            },
            "called": [
                "FUN_0800557c",
                "FUN_0800557e"
            ],
            "calling": [
                "FUN_080050d0",
                "FUN_080051ac"
            ],
            "code": "\nvoid update_linked_list_080048dc(undefined4 *result,int size,undefined4 param3,undefined4 param4)\n\n{\n  int *temp;\n  int **extra_output;\n  int **current_node;\n  int **current_ptr;\n  int **prev_ptr;\n  int **new_node;\n  bool condition;\n  \n  if (size == 0) {\n    return;\n  }\n  new_node = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    new_node = (int **)((int)new_node + *(int *)(size + -4));\n  }\n  lock_memory_allocation();\n  current_ptr = (int **)&DAT_200005c8;\n  if (DAT_200005c8 == (int **)0x0) {\n    new_node[1] = (int *)0x0;\n    current_node = extra_output;\n    DAT_200005c8 = new_node;\n  }\n  else {\n    current_ptr = DAT_200005c8;\n    if (new_node < DAT_200005c8) {\n      current_node = (int **)*new_node;\n      current_ptr = (int **)((int)new_node + (int)current_node);\n      condition = DAT_200005c8 == current_ptr;\n      if (condition) {\n        current_ptr = (int **)*DAT_200005c8;\n        DAT_200005c8 = (int **)DAT_200005c8[1];\n      }\n      new_node[1] = (int *)DAT_200005c8;\n      DAT_200005c8 = new_node;\n      if (condition) {\n        current_ptr = (int **)((int)current_ptr + (int)current_node);\n        *new_node = (int *)current_ptr;\n      }\n    }\n    else {\n      do {\n        prev_ptr = current_ptr;\n        current_ptr = (int **)prev_ptr[1];\n        if (current_ptr == (int **)0x0) break;\n      } while (current_ptr <= new_node);\n      current_node = (int **)*prev_ptr;\n      if ((int **)((int)prev_ptr + (int)current_node) == new_node) {\n        current_node = (int **)((int)current_node + (int)*new_node);\n        *prev_ptr = (int *)current_node;\n        if (current_ptr == (int **)((int)prev_ptr + (int)current_node)) {\n          temp = *current_ptr;\n          current_ptr = (int **)current_ptr[1];\n          prev_ptr[1] = (int *)current_ptr;\n          current_node = (int **)((int)current_node + (int)temp);\n          *prev_ptr = (int *)current_node;\n        }\n      }\n      else if (new_node < (int **)((int)prev_ptr + (int)current_node)) {\n        *result = 0xc;\n      }\n      else {\n        current_node = (int **)((int)new_node + (int)*new_node);\n        condition = current_ptr == current_node;\n        if (condition) {\n          current_node = (int **)*current_ptr;\n          current_ptr = (int **)current_ptr[1];\n        }\n        new_node[1] = (int *)current_ptr;\n        if (condition) {\n          current_node = (int **)((int)current_node + (int)*new_node);\n          *new_node = (int *)current_node;\n        }\n        prev_ptr[1] = (int *)new_node;\n      }\n    }\n  }\n  unlock_memory_allocation(result,current_node,current_ptr,param4);\n  return;\n}\n\n",
            "current_name": "update_linked_list_080048dc",
            "entrypoint": "0x080048dc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080048dc": "update_linked_list_080048dc",
                "__malloc_lock": "lock_memory_allocation",
                "__malloc_unlock": "unlock_memory_allocation",
                "bVar6": "condition",
                "extraout_r1": "extra_output",
                "param_1": "result",
                "param_2": "size",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "temp",
                "ppiVar2": "current_node",
                "ppiVar3": "current_ptr",
                "ppiVar4": "prev_ptr",
                "ppiVar5": "new_node"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004978": {
            "additional_data": {
                "DAT_200005c8": {
                    "first_block": 2,
                    "free_blocks_list": 1,
                    "head": 2,
                    "head_block": 2,
                    "heap_start": 4,
                    "memory_list": 2
                },
                "DAT_200005cc": {
                    "brk_address": 1,
                    "brk_pointer": 2,
                    "brk_ptr": 2,
                    "brk_val": 1,
                    "brk_value": 1,
                    "heap_end": 4,
                    "heap_start": 1,
                    "sbrk_result": 1
                },
                "FUNC_0800557c": {
                    "function_a": 1,
                    "initialize": 1,
                    "initialize_memory": 1,
                    "lock_memory": 1
                },
                "FUNC_0800557e": {
                    "finalize": 1,
                    "function_c": 1,
                    "unlock_memory": 2
                },
                "FUN_08004978": {
                    "allocate_memory": 28,
                    "allocate_memory_block": 3
                },
                "FUN_0800500c": {
                    "function_b": 1,
                    "initialize_memory": 1,
                    "lock_memory": 1,
                    "update_error_code": 1
                },
                "__malloc_lock": {
                    "lock_heap": 1,
                    "lock_memory": 3,
                    "malloc_lock": 2
                },
                "__malloc_unlock": {
                    "malloc_unlock": 2,
                    "unlock_heap": 1,
                    "unlock_memory": 2
                },
                "_sbrk_r": {
                    "allocate_chunk": 1,
                    "get_memory_block": 1,
                    "request_heap_memory": 1,
                    "sbrk_r": 1,
                    "sbrk_wrapper": 3
                },
                "iVar2": {
                    "block_size": 3,
                    "delta": 1,
                    "diff": 2,
                    "difference": 5,
                    "offset": 3,
                    "padding": 2,
                    "remaining_bytes": 1,
                    "remaining_size": 3,
                    "remaining_space": 9,
                    "split_size": 1
                },
                "param_1": {
                    "allocation_size": 1,
                    "buffer": 1,
                    "error_code": 2,
                    "mem_size": 1,
                    "output": 1,
                    "output_ptr": 1,
                    "p_error": 1,
                    "ptr_size": 2,
                    "result": 3,
                    "result_ptr": 1,
                    "size": 9,
                    "size_ptr": 7
                },
                "param_2": {
                    "align": 1,
                    "alignment": 9,
                    "requested_size": 4,
                    "size": 16
                },
                "ptr_size": {
                    "new_size": 1
                },
                "puVar1": {
                    "current": 5,
                    "current_block": 22,
                    "current_chunk": 2,
                    "iterator": 1
                },
                "puVar3": {
                    "block_pointer": 1,
                    "current_block": 1,
                    "next": 3,
                    "next_block": 4,
                    "prev": 1,
                    "prev_block": 2,
                    "prev_chunk": 2,
                    "previous": 1,
                    "previous_block": 15
                },
                "puVar5": {
                    "allocated_block": 1,
                    "block": 1,
                    "last_block": 1,
                    "new_block": 9,
                    "new_block_location": 1,
                    "next": 1,
                    "next_block": 1,
                    "next_chunk": 1,
                    "prev": 1,
                    "prev2": 1,
                    "prev_chunk_next": 1,
                    "previous": 2,
                    "previous_block": 6,
                    "split_block": 2,
                    "temp_block": 1
                },
                "uVar4": {
                    "block_diff": 4,
                    "block_difference": 2,
                    "block_size_difference": 3,
                    "diff": 2,
                    "diff_minus_size": 1,
                    "difference": 9,
                    "free_space": 1,
                    "remaining_size": 1,
                    "remaining_space": 1,
                    "requested_size": 1,
                    "size_diff": 2,
                    "space": 1,
                    "space_difference": 1,
                    "temp_size": 1
                },
                "uVar6": {
                    "adjusted_size": 1,
                    "aligned_size": 3,
                    "allocated_memory_size": 1,
                    "allocated_size": 16,
                    "allocation_size": 1,
                    "block_size": 4,
                    "new_size": 2,
                    "total_size": 2
                }
            },
            "called": [
                "FUN_0800557c",
                "FUN_0800500c",
                "FUN_0800557e"
            ],
            "calling": [
                "FUN_080054fc",
                "FUN_08005374"
            ],
            "code": "\nuint allocate_memory_block_08004978(undefined4 *size,uint size)\n\n{\n  uint *current_block;\n  int remaining_space;\n  uint *previous_block;\n  uint difference;\n  uint *new_block;\n  uint allocated_size;\n  \n  allocated_size = (size + 3 & 0xfffffffc) + 8;\n  if (allocated_size < 0xc) {\n    allocated_size = 0xc;\n  }\n  if (((int)allocated_size < 0) || (allocated_size < size)) {\n    *size = 0xc;\n  }\n  else {\n    lock_memory();\n    current_block = DAT_200005c8;\n    new_block = DAT_200005c8;\n    while (previous_block = current_block, previous_block != (uint *)0x0) {\n      difference = *previous_block - allocated_size;\n      if (-1 < (int)difference) {\n        if (difference < 0xc) {\n          if (new_block == previous_block) {\n            current_block = (uint *)new_block[1];\n          }\n          else {\n            current_block = (uint *)previous_block[1];\n          }\n          if (new_block != previous_block) {\n            new_block[1] = (uint)current_block;\n            new_block = previous_block;\n            current_block = DAT_200005c8;\n          }\n        }\n        else {\n          *previous_block = difference;\n          *(uint *)((int)previous_block + difference) = allocated_size;\n          new_block = (uint *)((int)previous_block + difference);\n          current_block = DAT_200005c8;\n        }\n        goto LAB_080049dc;\n      }\n      new_block = previous_block;\n      current_block = (uint *)previous_block[1];\n    }\n    if (DAT_200005cc == 0) {\n      DAT_200005cc = sbrk_wrapper(size);\n    }\n    current_block = (uint *)sbrk_wrapper(size,allocated_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((new_block = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == new_block ||\n        (remaining_space = sbrk_wrapper(size,(int)new_block - (int)current_block), remaining_space != -1)))) {\n      *new_block = allocated_size;\n      current_block = DAT_200005c8;\nLAB_080049dc:\n      DAT_200005c8 = current_block;\n      malloc_unlock(size);\n      allocated_size = (int)new_block + 0xbU & 0xfffffff8;\n      remaining_space = allocated_size - (int)(new_block + 1);\n      if (remaining_space != 0) {\n        *(int *)((int)new_block + remaining_space) = -remaining_space;\n        return allocated_size;\n      }\n      return allocated_size;\n    }\n    *size = 0xc;\n    malloc_unlock(size);\n  }\n  return 0;\n}\n\n",
            "current_name": "allocate_memory_block_08004978",
            "entrypoint": "0x08004978",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004978": "allocate_memory_block_08004978",
                "__malloc_lock": "lock_memory",
                "__malloc_unlock": "malloc_unlock",
                "_sbrk_r": "sbrk_wrapper",
                "iVar2": "remaining_space",
                "param_1": "size",
                "param_2": "size",
                "puVar1": "current_block",
                "puVar3": "previous_block",
                "puVar5": "new_block",
                "uVar4": "difference",
                "uVar6": "allocated_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004a34": {
            "additional_data": {
                "DAT_08005fa0": {
                    "dat_08005fa0": 3,
                    "dat_z": 1,
                    "data3": 1,
                    "data_ptr_3": 1
                },
                "DAT_08005fc0": {
                    "dat_08005fc0": 3,
                    "dat_x": 1,
                    "data1": 1,
                    "data_ptr_1": 1
                },
                "DAT_08005fe0": {
                    "dat_08005fe0": 3,
                    "dat_y": 1,
                    "data2": 1,
                    "data_ptr_2": 1
                },
                "FUN_08004a34": {
                    "append_byte_to_array": 2,
                    "copy_byte": 1,
                    "decode_buffer": 1,
                    "handle_input": 1,
                    "process_byte": 2,
                    "process_data": 2,
                    "process_input": 11,
                    "process_input_byte": 1,
                    "process_param": 1,
                    "reverse_and_write_byte": 1,
                    "reverse_code": 1,
                    "update_buffer": 2,
                    "write_and_flush_byte": 1,
                    "write_byte_to_buffer": 2,
                    "write_to_buffer": 1
                },
                "FUN_080050d0": {
                    "execute_func1": 1,
                    "initialize": 1,
                    "initialize_buffer": 1
                },
                "FUN_080052cc": {
                    "check_buffer": 1,
                    "execute_func2": 1,
                    "setup_buffer": 1
                },
                "FUN_080053a0": {
                    "execute_func3": 1,
                    "finalize_buffer": 1,
                    "flush_buffer": 1
                },
                "PTR_FUN_080050d0": {
                    "ptr_fun_080050d0": 1
                },
                "PTR_FUN_080052cc": {
                    "ptr_fun_080052cc": 1
                },
                "PTR_FUN_080053a0": {
                    "ptr_fun_080053a0": 1
                },
                "__sinit": {
                    "__sinit": 1,
                    "initialize": 8,
                    "initialize_file": 1,
                    "perform_initialization": 1
                },
                "__swsetup_r": {
                    "__swsetup_r": 3,
                    "perform_setup_operations": 1,
                    "setup_r": 2,
                    "setup_stream": 2,
                    "setup_switch": 1,
                    "sw_setup": 1,
                    "sw_setup_r": 1
                },
                "_fflush_r": {
                    "_fflush_r": 3,
                    "fflush_r": 2,
                    "flush_buffer": 2,
                    "flush_r": 2,
                    "flush_stream": 2
                },
                "iVar1": {
                    "byte_count": 1,
                    "i_var1": 1,
                    "index": 3,
                    "int_value": 1,
                    "result": 3,
                    "status": 1,
                    "temp1": 1,
                    "temp_int": 1,
                    "temp_var": 6,
                    "temp_var1": 8,
                    "temp_var_1": 1,
                    "tmp_int": 1,
                    "value": 1
                },
                "param_1": {
                    "arg1": 4,
                    "array": 1,
                    "binary_pointer": 1,
                    "buffer_size": 1,
                    "buffer_state": 1,
                    "context": 1,
                    "data_ptr": 1,
                    "data_structure": 1,
                    "file_descriptor": 1,
                    "input": 2,
                    "input_buffer": 1,
                    "input_data": 1,
                    "input_param": 2,
                    "input_struct": 1,
                    "param": 3,
                    "param1": 1,
                    "param_address": 1,
                    "param_file": 1,
                    "param_ptr": 2,
                    "ptr": 1,
                    "some_param": 1,
                    "some_structure": 1,
                    "source": 1
                },
                "param_2": {
                    "arg2": 1,
                    "byte_to_add": 1,
                    "byte_to_append": 1,
                    "byte_to_copy": 1,
                    "byte_to_write": 3,
                    "byte_val": 2,
                    "byte_value": 12,
                    "data_byte": 1,
                    "input_byte": 6,
                    "new_byte": 1,
                    "param2": 1,
                    "value": 1
                },
                "param_3": {
                    "arg3": 1,
                    "array_pointer": 1,
                    "buffer": 6,
                    "buffer_ptr": 2,
                    "byte_array": 3,
                    "byte_array_pointer": 1,
                    "byte_ptr": 1,
                    "byte_ptr_ptr": 2,
                    "byte_ptrs": 1,
                    "data": 1,
                    "data_buffer": 1,
                    "data_ptr": 3,
                    "input_array": 1,
                    "input_buffer": 2,
                    "input_byte_array": 1,
                    "input_data": 1,
                    "input_data_ptr": 1,
                    "param3": 1,
                    "param_list": 1
                },
                "pbVar2": {
                    "array_end": 1,
                    "buffer_ptr": 2,
                    "byte_ptr1": 1,
                    "byte_ptr_1": 1,
                    "current_byte": 5,
                    "current_element": 1,
                    "current_ptr": 1,
                    "last_byte": 1,
                    "last_byte_index": 2,
                    "last_element_index": 1,
                    "ptr": 1,
                    "ptr_minus_one": 1,
                    "temp2": 1,
                    "temp_byte_ptr": 1,
                    "temp_byte_ptr_1": 1,
                    "temp_byte_var1": 1,
                    "temp_var2": 7,
                    "temp_var_2": 1,
                    "tmp_ptr": 1
                },
                "pbVar3": {
                    "buffer1": 1,
                    "buffer_length": 1,
                    "byte_ptr2": 1,
                    "byte_ptr_2": 1,
                    "count_byte": 1,
                    "length": 1,
                    "next_byte": 2,
                    "pb_var3": 6,
                    "ptr2": 1,
                    "short_value": 1,
                    "swapped_value": 1,
                    "temp3": 1,
                    "temp_byte_ptr_2": 1,
                    "temp_byte_var2": 1,
                    "temp_ptr": 1,
                    "temp_var3": 7,
                    "temp_var_3": 1,
                    "tmp_ptr2": 1,
                    "ushort_ptr": 1
                },
                "uVar4": {
                    "byte_written_count": 1,
                    "converted_byte": 1,
                    "copied_byte": 1,
                    "result": 14,
                    "return_value": 14
                }
            },
            "called": [
                "FUN_080050d0",
                "FUN_080052cc",
                "FUN_080053a0"
            ],
            "calling": [
                "FUN_08004a60"
            ],
            "code": "\nuint process_input_byte_08004a34(int arg1,byte byte_value,byte **buffer)\n\n{\n  int temp_var1;\n  byte *temp_var2;\n  byte *temp_var3;\n  uint return_value;\n  \n  temp_var2 = buffer[2] + -1;\n  buffer[2] = temp_var2;\n  if ((-1 < (int)temp_var2) ||\n     (((int)buffer[6] <= (int)temp_var2 && (temp_var2 = (byte *)(uint)byte_value, temp_var2 != (byte *)0xa))))\n  {\n    temp_var2 = *buffer;\n    *buffer = temp_var2 + 1;\n    *temp_var2 = byte_value;\n    return (uint)byte_value;\n  }\n  if ((arg1 != 0) && (*(int *)(arg1 + 0x18) == 0)) {\n    initialize();\n  }\n  if (buffer == (byte **)&DAT_08005fc0) {\n    buffer = *(byte ***)(arg1 + 4);\n  }\n  else if (buffer == (byte **)&DAT_08005fe0) {\n    buffer = *(byte ***)(arg1 + 8);\n  }\n  else if (buffer == (byte **)&DAT_08005fa0) {\n    buffer = *(byte ***)(arg1 + 0xc);\n  }\n  buffer[2] = buffer[6];\n  temp_var3 = (byte *)(uint)*(ushort *)(buffer + 3);\n  temp_var1 = (int)temp_var3 << 0x1c;\n  if (((temp_var1 < 0) && (temp_var3 = buffer[4], temp_var3 != (byte *)0x0)) ||\n     (temp_var1 = __swsetup_r(arg1,buffer,temp_var1,temp_var3,temp_var2), temp_var1 == 0)) {\n    temp_var1 = (int)*buffer - (int)buffer[4];\n    return_value = (uint)byte_value;\n    if ((temp_var1 < (int)buffer[5]) || (temp_var1 = _fflush_r(arg1,buffer), temp_var1 == 0)) {\n      buffer[2] = buffer[2] + -1;\n      temp_var2 = *buffer;\n      *buffer = temp_var2 + 1;\n      *temp_var2 = byte_value;\n      if ((byte *)(temp_var1 + 1) != buffer[5]) {\n        if (-1 < (int)((uint)*(ushort *)(buffer + 3) << 0x1f)) {\n          return return_value;\n        }\n        if (return_value != 10) {\n          return return_value;\n        }\n      }\n      temp_var1 = _fflush_r(arg1,buffer);\n      if (temp_var1 == 0) {\n        return return_value;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "process_input_byte_08004a34",
            "entrypoint": "0x08004a34",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004a34": "process_input_byte_08004a34",
                "__sinit": "initialize",
                "iVar1": "temp_var1",
                "param_1": "arg1",
                "param_2": "byte_value",
                "param_3": "buffer",
                "pbVar2": "temp_var2",
                "pbVar3": "temp_var3",
                "uVar4": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004a60": {
            "additional_data": {
                "FUN_08004a60": {
                    "output_ascii_string": 1,
                    "output_bytes": 1,
                    "output_file": 2,
                    "print_string": 1,
                    "process_data": 1,
                    "put_string": 1,
                    "reverse_binary_data": 1,
                    "write_buffer": 1,
                    "write_bytes": 1,
                    "write_bytes_to_stream": 1,
                    "write_data": 3,
                    "write_data_to_stream": 2,
                    "write_string": 1,
                    "write_to_buffer": 1,
                    "write_to_output_stream": 1,
                    "write_to_stream": 12
                },
                "__sfputc_r": {
                    "write_byte": 1
                },
                "iVar1": {
                    "bytes_written": 4,
                    "result": 23,
                    "return_value": 1,
                    "write_count": 1,
                    "write_result": 1,
                    "write_status": 1
                },
                "iVar3": {
                    "current_index": 2,
                    "current_length": 3,
                    "current_size": 2,
                    "length_remaining": 1,
                    "remaining": 3,
                    "remaining_bytes": 3,
                    "remaining_count": 3,
                    "remaining_data_length": 1,
                    "remaining_length": 6,
                    "remaining_size": 6,
                    "string_length": 1
                },
                "param_1": {
                    "buffer_size": 1,
                    "file": 1,
                    "file_descriptor": 5,
                    "file_pointer": 2,
                    "file_stream": 1,
                    "output_stream": 1,
                    "stream": 19,
                    "stream_handle": 1
                },
                "param_2": {
                    "buffer": 2,
                    "buffer_size": 2,
                    "byte": 2,
                    "byte_buffer": 1,
                    "byte_to_write": 2,
                    "c": 1,
                    "ch": 2,
                    "char_buffer": 1,
                    "char_to_write": 1,
                    "character": 14,
                    "offset": 1,
                    "putc_flags": 1,
                    "stream": 1
                },
                "param_3": {
                    "buffer": 18,
                    "data": 5,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input_buffer": 1,
                    "src": 1,
                    "string": 4
                },
                "param_4": {
                    "buffer_size": 2,
                    "count": 3,
                    "data_length": 2,
                    "data_size": 1,
                    "input_size": 1,
                    "length": 12,
                    "num_bytes": 2,
                    "size": 7,
                    "string_length": 1
                },
                "puVar2": {
                    "buffer_end": 2,
                    "end": 2,
                    "end_addr": 1,
                    "end_buffer": 5,
                    "end_of_buffer": 8,
                    "end_of_data": 4,
                    "end_of_src": 1,
                    "end_of_string": 3,
                    "end_pointer": 1,
                    "end_ptr": 3,
                    "string_end": 1
                }
            },
            "called": [
                "FUN_08004a34"
            ],
            "calling": [
                "FUN_08004a84"
            ],
            "code": "\nint write_data_to_stream_08004a60(undefined4 stream,undefined4 character,undefined *buffer,int length)\n\n{\n  int result;\n  undefined *end_of_buffer;\n  int remaining_size;\n  \n  end_of_buffer = buffer + length;\n  remaining_size = length;\n  do {\n    if (buffer == end_of_buffer) {\n      return 0;\n    }\n    result = write_byte(stream,*buffer,character,length,remaining_size);\n    length = result + 1;\n    buffer = buffer + 1;\n  } while (length != 0);\n  return result;\n}\n\n",
            "current_name": "write_data_to_stream_08004a60",
            "entrypoint": "0x08004a60",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004a60": "write_data_to_stream_08004a60",
                "__sfputc_r": "write_byte",
                "iVar1": "result",
                "iVar3": "remaining_size",
                "param_1": "stream",
                "param_2": "character",
                "param_3": "buffer",
                "param_4": "length",
                "puVar2": "end_of_buffer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004a84": {
            "additional_data": {
                "FUN_08000230": {
                    "extract_conversion_specifiers": 1,
                    "find_conversion_specifier": 1
                },
                "FUN_08004a60": {
                    "process_width_or_precision": 1,
                    "write_to_buffer": 1
                },
                "FUN_08004a84": {
                    "format_and_print": 1,
                    "formatted_print": 1,
                    "improved_print_formatted_string": 1,
                    "improved_printf": 3,
                    "parse_and_format_string": 1,
                    "parse_format_string": 2,
                    "print_formatted": 1,
                    "print_formatted_string": 5,
                    "print_formatted_text": 2,
                    "printf_custom_format_string": 1,
                    "printf_wrapper": 1,
                    "process_format_specifier": 1,
                    "process_format_string": 2,
                    "process_printf": 1,
                    "process_printf_format_string": 1,
                    "process_printf_string": 1,
                    "read_and_format_string": 1
                },
                "FUN_08004d9c": {
                    "handle_argument": 1,
                    "process_specifier": 1
                },
                "FUN_080050d0": {
                    "find_conversion_specifier": 1,
                    "transform_flags": 1
                },
                "FUN_080053a0": {
                    "handle_unknown_format": 1,
                    "initialize_buffer": 1
                },
                "__sfputs_r": {
                    "put_string": 1,
                    "write_string_to_file": 1
                },
                "__sinit": {
                    "initialize_stdio": 1,
                    "initialize_stream": 1,
                    "initialize_streams": 1
                },
                "__swsetup_r": {
                    "set_width_and_precision": 1,
                    "setup_stream": 1
                },
                "_printf_i": {
                    "initialize_integral": 1,
                    "printf_internal": 1,
                    "process_integer": 1
                },
                "bVar3": {
                    "": 1,
                    "flag": 1,
                    "found": 2,
                    "found_digit": 5,
                    "has_digits": 1,
                    "is_decimal": 1,
                    "is_digit": 2,
                    "is_integer": 1,
                    "is_number": 8,
                    "is_numeric": 2,
                    "is_true": 1,
                    "is_valid": 1,
                    "is_valid_number": 1,
                    "isdigit": 2
                },
                "iVar1": {
                    "output_result": 1,
                    "result": 18,
                    "status": 2,
                    "write_count": 1,
                    "write_result": 7
                },
                "iVar6": {
                    "": 1,
                    "integer_value": 2,
                    "len": 1,
                    "loop_counter": 1,
                    "loop_variable": 1,
                    "num": 1,
                    "num_digits": 1,
                    "result": 1,
                    "temp": 4,
                    "temp1": 1,
                    "temp2": 1,
                    "temp_int": 1,
                    "temp_var": 7,
                    "temp_var2": 1,
                    "temp_var_1": 1,
                    "temp_variable_1": 1,
                    "tmp": 1,
                    "value": 2
                },
                "local_30": {
                    "": 1,
                    "asterisk_precision": 1,
                    "dec_point": 1,
                    "error_flag": 1,
                    "flag_hash": 1,
                    "flag_sharp": 1,
                    "hash_flag": 1,
                    "length_modifier": 2,
                    "length_specifier": 1,
                    "local_var10": 1,
                    "long_flag": 1,
                    "null_char": 1,
                    "output_size": 1,
                    "precision_set": 1,
                    "prefix": 1,
                    "punctuation_flag": 1,
                    "star_count": 1,
                    "temp_pointer": 1,
                    "temp_var3": 1,
                    "unknown_flag": 1,
                    "unused": 2,
                    "zero_flag": 2,
                    "zero_padding": 1
                },
                "local_45": {
                    "": 1,
                    "alternate": 1,
                    "alternate_index": 1,
                    "flag": 1,
                    "flag0": 1,
                    "flag_char": 1,
                    "flag_zero": 2,
                    "hash": 1,
                    "hash_char": 1,
                    "hash_flag": 1,
                    "local_var9": 1,
                    "padchar": 1,
                    "padding_char": 1,
                    "positive_sign": 1,
                    "prefix_flag": 2,
                    "sharp_flag": 1,
                    "sign": 1,
                    "sign_flag": 3,
                    "space_flag": 2,
                    "zero_flag": 2
                },
                "local_6e": {
                    "": 1,
                    "flag_plus": 4,
                    "flags2": 1,
                    "local_var8": 1,
                    "plus": 2,
                    "plus_char": 1,
                    "plus_flag": 12,
                    "plus_sign_char": 1,
                    "zero_flag": 2
                },
                "local_6f": {
                    "": 1,
                    "default_padding_char": 1,
                    "flag_space": 4,
                    "local_var7": 1,
                    "minus_flag": 1,
                    "priv": 1,
                    "space": 2,
                    "space_char": 1,
                    "space_flag": 13
                },
                "local_70": {
                    "": 1,
                    "conversion_char": 1,
                    "conversion_character": 1,
                    "conversion_specifier": 14,
                    "current_specifier_char": 1,
                    "format_specifier": 3,
                    "format_type": 1,
                    "local_var6": 1,
                    "specifier": 7
                },
                "local_74": {
                    "bytes_written": 1,
                    "char_count": 1,
                    "chars_written": 1,
                    "local_var5": 1,
                    "num_chars": 1,
                    "output_length": 2,
                    "total_bytes": 1,
                    "total_bytes_written": 5,
                    "total_characters_written": 1,
                    "total_chars": 3,
                    "total_chars_written": 2,
                    "total_len": 1,
                    "total_length": 3,
                    "total_output_length": 1,
                    "total_size": 1,
                    "total_written": 5
                },
                "local_7c": {
                    "": 1,
                    "arg_index": 3,
                    "arg_num": 2,
                    "arg_number": 1,
                    "arg_width": 1,
                    "field_width": 6,
                    "int_arg": 1,
                    "length": 1,
                    "local_var4": 1,
                    "min_field_width": 1,
                    "n_value": 1,
                    "precision_width": 1,
                    "star_width": 1,
                    "width": 7,
                    "width_arg": 1
                },
                "local_80": {
                    "": 1,
                    "arg_index": 1,
                    "arg_size": 1,
                    "base": 1,
                    "datatype": 1,
                    "format": 1,
                    "local_var3": 1,
                    "null": 1,
                    "pad_character": 1,
                    "padding": 2,
                    "precision": 5,
                    "ret": 1,
                    "temp_specifier": 1,
                    "tmp": 1,
                    "width": 11
                },
                "local_84": {
                    "": 1,
                    "decimal_places": 1,
                    "local_var2": 1,
                    "min_width": 1,
                    "precision": 22,
                    "width": 4
                },
                "local_88": {
                    "": 1,
                    "flag_bits": 1,
                    "flags": 22,
                    "format_flags": 2,
                    "format_specifiers": 1,
                    "local_var1": 1,
                    "option_flags": 1,
                    "specifier_flags": 1
                },
                "local_8c": {
                    "": 1,
                    "arg_list": 3,
                    "arg_list_pointer_current": 1,
                    "arg_list_ptr": 1,
                    "arg_ptr": 3,
                    "arg_ptr_stack": 1,
                    "arg_stack": 1,
                    "argptr2": 1,
                    "args": 1,
                    "args_iterator": 1,
                    "args_ptr": 1,
                    "count_pointer": 1,
                    "count_ptr": 1,
                    "counter_ptr": 1,
                    "current_argument": 1,
                    "current_num_args": 1,
                    "int_params": 1,
                    "int_ptr": 1,
                    "local_pointer1": 1,
                    "output_string_index": 1,
                    "p_arg": 1,
                    "param_4_ptr": 1,
                    "pointer_array": 1,
                    "ptr_list": 1,
                    "result_temp": 1,
                    "stack_args": 1
                },
                "memchr": {
                    "find_char_in_string": 1
                },
                "param_1": {
                    "arg1": 1,
                    "buffer": 1,
                    "data": 1,
                    "file_descriptor": 4,
                    "format": 1,
                    "format_specifier": 1,
                    "format_string": 11,
                    "formatting_info": 1,
                    "input": 2,
                    "input_parameter": 1,
                    "output_stream": 1,
                    "param": 1,
                    "stream": 5
                },
                "param_2": {
                    "arg2": 1,
                    "arg_list": 3,
                    "arg_ptr": 1,
                    "argptr": 1,
                    "args": 4,
                    "argument_list": 1,
                    "arguments": 1,
                    "conversion_specifiers": 1,
                    "data_parameter": 1,
                    "format": 7,
                    "format_args": 1,
                    "format_params": 1,
                    "format_specifier": 2,
                    "format_string": 4,
                    "format_string_ptr": 1,
                    "string_pointer": 1
                },
                "param_3": {
                    "arg": 1,
                    "arg3": 1,
                    "arg_list": 3,
                    "args": 1,
                    "argument_string": 1,
                    "arguments": 1,
                    "buffer": 8,
                    "format_string": 1,
                    "input_string": 2,
                    "output": 1,
                    "output_buffer": 7,
                    "source_string": 1,
                    "str": 1,
                    "string_parameter": 1,
                    "string_pointer": 1
                },
                "param_4": {
                    "arg4": 1,
                    "arg_count": 1,
                    "arg_list_pointer": 1,
                    "arg_size": 1,
                    "argptr": 2,
                    "args": 1,
                    "argument_list_length": 1,
                    "buffer_size": 2,
                    "bytes_written": 5,
                    "characters_written": 1,
                    "count": 1,
                    "count_pointer": 1,
                    "length": 1,
                    "max_length": 1,
                    "n": 2,
                    "num": 1,
                    "num_args": 1,
                    "num_chars_written": 1,
                    "output_size": 1,
                    "output_string_length": 1,
                    "param_4_ptr": 1,
                    "result": 1,
                    "result_parameter": 1,
                    "size": 1
                },
                "pbVar4": {
                    "": 1,
                    "byte_pointer1": 1,
                    "ch_ptr": 1,
                    "curr_char": 1,
                    "current_byte": 1,
                    "current_char": 13,
                    "current_char_ptr": 1,
                    "current_character": 1,
                    "current_character_ptr": 2,
                    "format_position": 1,
                    "format_ptr": 1,
                    "p_char": 1,
                    "ptr": 3,
                    "ptr1": 1
                },
                "pbVar5": {
                    "": 1,
                    "byte_pointer2": 1,
                    "char_pointer": 1,
                    "current_char": 1,
                    "format_next_position": 1,
                    "next_byte": 1,
                    "next_char": 11,
                    "next_char_ptr": 1,
                    "next_character": 1,
                    "next_character_ptr": 1,
                    "p_char2": 1,
                    "previous_character_ptr": 1,
                    "ptr2": 4,
                    "start_char": 1,
                    "start_of_conversion": 1,
                    "start_of_format": 1
                },
                "piVar2": {
                    "": 1,
                    "arg": 2,
                    "arg_array": 1,
                    "arg_index": 1,
                    "arg_list_pointer": 1,
                    "arg_list_pointer_temp": 1,
                    "arg_ptr": 3,
                    "argptr2": 1,
                    "argptr_temp": 1,
                    "args": 1,
                    "args_ptr": 1,
                    "count_ptr": 1,
                    "counter_ptr": 1,
                    "current_arg": 1,
                    "current_argument": 1,
                    "current_argument_ptr": 1,
                    "int_pointer": 1,
                    "param_4_ptr": 1,
                    "pointer": 1,
                    "pointer_var": 1,
                    "ptr": 2,
                    "result_pointer": 1,
                    "stack_args": 1,
                    "temp": 1,
                    "temp_ptr": 1
                },
                "printf_i": {
                    "print_integral": 1
                },
                "unaff_r9": {
                    "": 1,
                    "align_padding": 1,
                    "alignment": 1,
                    "alignment_value": 1,
                    "arg_list_end": 1,
                    "buffer_size": 1,
                    "filename_length": 1,
                    "printf_flags": 1,
                    "return_value": 1,
                    "size": 1,
                    "some_var": 1,
                    "status": 1,
                    "str_len": 1,
                    "swappable": 1,
                    "swsetup_r_result": 1,
                    "swsetup_result": 2,
                    "temp": 3,
                    "temp_reg": 1,
                    "temp_register": 1,
                    "temp_result": 1,
                    "temp_var": 1,
                    "total_length": 1,
                    "unaff_9": 1,
                    "unaff_r9": 1,
                    "unaffected_register": 1,
                    "unused_r9": 1
                }
            },
            "called": [
                "FUN_08000230",
                "FUN_080050d0",
                "FUN_08004d9c",
                "FUN_080053a0",
                "FUN_08004a60"
            ],
            "calling": [
                "FUN_08004860",
                "FUN_08004fdc"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08004c58) */\n\nint improved_print_formatted_string_08004a84(int format_string,undefined4 *format,byte *buffer,int *bytes_written)\n\n{\n  int result;\n  int *arg_ptr;\n  bool is_number;\n  byte *current_char;\n  byte *next_char;\n  int temp;\n  int temp_var;\n  int *arg_ptr;\n  uint flags;\n  int precision;\n  undefined4 width;\n  int width;\n  int total_bytes_written;\n  byte conversion_specifier;\n  undefined space_flag;\n  undefined plus_flag;\n  undefined sign_flag;\n  undefined4 zero_flag;\n  \n  arg_ptr = bytes_written;\n  if ((format_string != 0) && (*(int *)(format_string + 0x18) == 0)) {\n    initialize_stdio();\n  }\n  if (format == &DAT_08005fc0) {\n    format = *(undefined4 **)(format_string + 4);\n  }\n  else if (format == (undefined4 *)&DAT_08005fe0) {\n    format = *(undefined4 **)(format_string + 8);\n  }\n  else if (format == (undefined4 *)&DAT_08005fa0) {\n    format = *(undefined4 **)(format_string + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(format + 3) << 0x1c)) || (format[4] == 0)) &&\n     (temp_var = setup_stream(format_string,format), temp_var != 0)) {\n    return -1;\n  }\n  total_bytes_written = 0;\n  space_flag = 0x20;\n  plus_flag = 0x30;\n  current_char = buffer;\nLAB_08004ac6:\n  next_char = current_char;\n  if (*next_char != 0) goto LAB_08004b7c;\n  goto LAB_08004ad0;\nLAB_08004b7c:\n  current_char = next_char + 1;\n  if (*next_char != 0x25) goto LAB_08004ac6;\nLAB_08004ad0:\n  temp_var = (int)next_char - (int)buffer;\n  if (temp_var != 0) {\n    result = put_string(format_string,format,buffer,temp_var);\n    if (result == -1) {\nLAB_08004c70:\n      if ((int)((uint)*(ushort *)(format + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return total_bytes_written;\n    }\n    total_bytes_written = total_bytes_written + temp_var;\n  }\n  if (*next_char == 0) goto LAB_08004c70;\n  flags = 0;\n  width = 0;\n  precision = -1;\n  width = 0;\n  sign_flag = 0;\n  zero_flag = 0;\n  current_char = next_char + 1;\n  while( true ) {\n    temp_var = find_char_in_string(\"#-0+ \",*current_char);\n    buffer = current_char + 1;\n    if (temp_var == 0) break;\n    flags = 1 << (temp_var + 0xf7ffa094U & 0xff) | flags;\n    current_char = buffer;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    sign_flag = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    sign_flag = 0x2b;\n  }\n  if (*current_char == 0x2a) {\n    arg_ptr = arg_ptr + 1;\n    temp_var = *arg_ptr;\n    arg_ptr = arg_ptr;\n    if (temp_var < 0) {\n      width = -temp_var;\n      flags = flags | 2;\n      goto LAB_08004bae;\n    }\n  }\n  else {\n    is_number = false;\n    temp_var = width;\n    buffer = current_char;\n    while( true ) {\n      if (9 < *buffer - 0x30) break;\n      temp_var = temp_var * 10 + (*buffer - 0x30);\n      is_number = true;\n      buffer = buffer + 1;\n    }\n    if (!is_number) goto LAB_08004bae;\n  }\n  width = temp_var;\nLAB_08004bae:\n  if (*buffer == 0x2e) {\n    if (buffer[1] == 0x2a) {\n      precision = *arg_ptr;\n      if (precision < 0) {\n        precision = -1;\n      }\n      buffer = buffer + 2;\n      arg_ptr = arg_ptr + 1;\n    }\n    else {\n      is_number = false;\n      precision = 0;\n      temp_var = 0;\n      while( true ) {\n        buffer = buffer + 1;\n        if (9 < *buffer - 0x30) break;\n        temp_var = temp_var * 10 + (*buffer - 0x30);\n        is_number = true;\n      }\n      if (is_number) {\n        precision = temp_var;\n      }\n    }\n  }\n  temp_var = find_char_in_string(&DAT_08005f72,*buffer,3);\n  if (temp_var != 0) {\n    flags = flags | 0x40 << (temp_var + 0xf7ffa08eU & 0xff);\n    buffer = buffer + 1;\n  }\n  conversion_specifier = *buffer;\n  buffer = buffer + 1;\n  temp_var = find_char_in_string(\"efgEFG\",conversion_specifier,6);\n  if (temp_var == 0) {\n    temp = process_integer(format_string,&flags,format,0x8004a61,&arg_ptr);\n    if (temp == -1) goto LAB_08004c70;\n  }\n  else {\n    arg_ptr = (int *)(((int)arg_ptr + 7U & 0xfffffff8) + 8);\n  }\n  total_bytes_written = total_bytes_written + temp;\n  current_char = buffer;\n  goto LAB_08004ac6;\n}\n\n",
            "current_name": "improved_print_formatted_string_08004a84",
            "entrypoint": "0x08004a84",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004a84": "improved_print_formatted_string_08004a84",
                "__sfputs_r": "put_string",
                "__sinit": "initialize_stdio",
                "__swsetup_r": "setup_stream",
                "_printf_i": "process_integer",
                "bVar3": "is_number",
                "iVar1": "result",
                "iVar6": "temp_var",
                "local_30": "zero_flag",
                "local_45": "sign_flag",
                "local_6e": "plus_flag",
                "local_6f": "space_flag",
                "local_70": "conversion_specifier",
                "local_74": "total_bytes_written",
                "local_7c": "width",
                "local_80": "width",
                "local_84": "precision",
                "local_88": "flags",
                "local_8c": "arg_ptr",
                "memchr": "find_char_in_string",
                "param_1": "format_string",
                "param_2": "format",
                "param_3": "buffer",
                "param_4": "bytes_written",
                "pbVar4": "current_char",
                "pbVar5": "next_char",
                "piVar2": "arg_ptr",
                "printf_i": "print_integral",
                "unaff_r9": "temp"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004cb0": {
            "additional_data": {
                "FUN_08004cb0": {
                    "calculate_buffer_length": 1,
                    "calculate_buffer_size": 1,
                    "calculate_data_length": 1,
                    "calculate_final_size": 1,
                    "calculate_length": 1,
                    "calculate_result": 1,
                    "decode_and_process_data": 1,
                    "decode_data": 2,
                    "expand_data": 1,
                    "extracted_binary_data": 1,
                    "parse_data": 2,
                    "process_binary_data": 1,
                    "process_data": 14
                },
                "bVar5": {
                    "bool_flag": 1,
                    "check_flag": 1,
                    "condition": 1,
                    "condition_result": 1,
                    "flag": 1,
                    "has_flag": 2,
                    "is_case4": 1,
                    "is_condition_met": 6,
                    "is_condition_true": 3,
                    "is_flag_set": 10,
                    "is_set": 1,
                    "is_special_case": 1,
                    "is_zero": 2
                },
                "iVar1": {
                    "count": 1,
                    "counter1": 2,
                    "i": 1,
                    "idx": 1,
                    "index": 16,
                    "index1": 1,
                    "iteration": 3,
                    "loop_counter": 2,
                    "loop_counter1": 1,
                    "loop_counter_1": 1,
                    "loop_index": 1,
                    "result": 1
                },
                "iVar2": {
                    "callback_result": 1,
                    "counter2": 1,
                    "function_result": 1,
                    "index2": 1,
                    "j": 1,
                    "loop_result": 2,
                    "process_result": 1,
                    "result": 18,
                    "return_val": 1,
                    "return_value": 2,
                    "temp_value": 1,
                    "tmp_index": 1
                },
                "param_1": {
                    "arg1": 1,
                    "data": 6,
                    "data_pointer": 2,
                    "data_ptr": 2,
                    "input": 9,
                    "input1": 1,
                    "input_data": 2,
                    "input_param": 2,
                    "input_value": 5,
                    "param1": 1
                },
                "param_2": {
                    "buffer": 3,
                    "config": 1,
                    "config_array": 1,
                    "data": 11,
                    "data_array": 4,
                    "header": 2,
                    "header_ptr": 1,
                    "info": 1,
                    "input": 4,
                    "input_data": 1,
                    "metadata": 1,
                    "parameters_array": 1
                },
                "param_3": {
                    "expanded_size": 1,
                    "output": 8,
                    "output_array": 1,
                    "output_data": 1,
                    "output_data_length": 1,
                    "output_length": 3,
                    "output_size": 7,
                    "output_size_ptr": 1,
                    "output_value": 4,
                    "result": 1,
                    "result_length": 1,
                    "result_size": 1,
                    "size": 1
                },
                "param_4": {
                    "additional_parameter": 1,
                    "arg": 1,
                    "arg4": 1,
                    "input": 1,
                    "input2": 1,
                    "param": 12,
                    "param4": 7,
                    "param_4": 7
                },
                "param_5": {
                    "callback": 19,
                    "callback_fn": 1,
                    "callback_func": 3,
                    "callback_function": 4,
                    "data_processing_fn": 1,
                    "data_processor": 2,
                    "extracted_binary_code": 1
                },
                "uVar3": {
                    "expanded": 1,
                    "length": 2,
                    "max_buffer_length": 1,
                    "max_len": 1,
                    "max_length": 2,
                    "max_output_length": 1,
                    "max_result_length": 1,
                    "max_size": 7,
                    "max_value": 8,
                    "min_length": 1,
                    "size": 1,
                    "temp_size": 1,
                    "temp_value": 2,
                    "temp_var1": 1,
                    "updated_output": 1
                },
                "uVar4": {
                    "count": 11,
                    "counter": 12,
                    "counter2": 1,
                    "i": 1,
                    "iteration_count": 1,
                    "loop_counter": 1,
                    "loop_counter_2": 1,
                    "processed_count": 1,
                    "processed_length": 1,
                    "temp_var2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004d9c"
            ],
            "code": "\nundefined4\ndecode_and_process_data_08004cb0(undefined4 input,uint *data,uint *output,undefined4 param,code *callback)\n\n{\n  int index;\n  int result;\n  uint max_value;\n  uint counter;\n  bool is_flag_set;\n  \n  max_value = data[4];\n  if ((int)data[4] < (int)data[2]) {\n    max_value = data[2];\n  }\n  *output = max_value;\n  if (*(char *)((int)data + 0x43) != '\\0') {\n    *output = max_value + 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *output = *output + 2;\n  }\n  if ((*data & 6) == 0) {\n    for (index = 0; index < (int)(data[3] - *output); index = index + 1) {\n      result = (*callback)(input,param,(int)data + 0x19,1);\n      if (result == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  max_value = (uint)*(byte *)((int)data + 0x43);\n  if (max_value != 0) {\n    max_value = 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *(undefined *)((int)data + max_value + 0x43) = 0x30;\n    *(undefined *)((int)data + max_value + 0x44) = *(undefined *)((int)data + 0x45);\n    max_value = max_value + 2;\n  }\n  index = (*callback)(input,param,(int)data + 0x43,max_value);\n  if (index != -1) {\n    max_value = data[3];\n    is_flag_set = (*data & 6) == 4;\n    if (is_flag_set) {\n      max_value = max_value - *output;\n    }\n    if (is_flag_set) {\n      max_value = max_value & ~((int)max_value >> 0x1f);\n    }\n    else {\n      max_value = 0;\n    }\n    if ((int)data[4] < (int)data[2]) {\n      max_value = max_value + (data[2] - data[4]);\n    }\n    counter = 0;\n    while( true ) {\n      if (max_value == counter) {\n        return 0;\n      }\n      index = (*callback)(input,param,(int)data + 0x1a,1);\n      if (index == -1) break;\n      counter = counter + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "decode_and_process_data_08004cb0",
            "entrypoint": "0x08004cb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004cb0": "decode_and_process_data_08004cb0",
                "bVar5": "is_flag_set",
                "iVar1": "index",
                "iVar2": "result",
                "param_1": "input",
                "param_2": "data",
                "param_3": "output",
                "param_4": "param",
                "param_5": "callback",
                "uVar3": "max_value",
                "uVar4": "counter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d9c": {
            "additional_data": {
                "FUN_08004d9c": {
                    "format_and_print": 2,
                    "format_print": 1,
                    "print_formatted": 2,
                    "print_formatted_data": 1,
                    "print_formatted_output": 12,
                    "print_formatted_string": 6,
                    "print_formatted_value": 6,
                    "printf_helper": 1
                },
                "_printf_common": {
                    "print_formatted": 1
                },
                "bVar1": {
                    "byte_val": 5,
                    "byte_value": 11,
                    "char_val": 1,
                    "current_char": 1,
                    "first_argument_byte": 1,
                    "first_byte": 3,
                    "first_char": 2,
                    "flag": 2,
                    "flag_byte": 1,
                    "format_code": 1,
                    "format_flag": 1,
                    "specifier_code": 1,
                    "type": 1
                },
                "iVar2": {
                    "format_result": 1,
                    "i": 1,
                    "index": 11,
                    "loop_index": 2,
                    "loop_variable_1": 3,
                    "num_chars_printed": 1,
                    "result": 9,
                    "return_value": 1,
                    "temp_var1": 1,
                    "value": 1
                },
                "iVar4": {
                    "inner_index": 1,
                    "inner_result": 1,
                    "int_value": 1,
                    "j": 1,
                    "loop_index": 2,
                    "loop_result": 1,
                    "loop_variable_2": 3,
                    "out_byte": 1,
                    "output_result": 1,
                    "putchar_result": 1,
                    "result": 8,
                    "status": 1,
                    "temp_result": 1,
                    "temp_var2": 1,
                    "tmp": 2,
                    "tmp_result": 1,
                    "var1": 1,
                    "write_result": 3
                },
                "local_24": {
                    "arg_data": 1,
                    "buffer_size": 1,
                    "buffer_sizes": 1,
                    "chars_written": 1,
                    "conversions": 1,
                    "length_arr": 1,
                    "length_array": 1,
                    "local_array": 4,
                    "local_buffer": 2,
                    "local_params": 1,
                    "local_variables": 2,
                    "local_vars": 2,
                    "metadata_array": 1,
                    "out_buf": 1,
                    "output_buffer_length": 1,
                    "output_length": 1,
                    "output_size": 1,
                    "output_width": 1,
                    "result_len": 1,
                    "size_array": 1,
                    "temp_array": 2,
                    "temp_buffer": 2,
                    "width_array": 1
                },
                "memchr": {
                    "find_null_byte": 1
                },
                "param_1": {
                    "file_ptr": 1,
                    "format": 1,
                    "format_specifier": 1,
                    "format_str": 1,
                    "format_string": 26,
                    "param1": 1
                },
                "param_2": {
                    "arg_list": 7,
                    "arg_list_size": 1,
                    "arg_ptr": 2,
                    "args": 9,
                    "args_vector": 1,
                    "arguments": 1,
                    "arguments_array": 1,
                    "flags": 3,
                    "format_args": 2,
                    "format_ptr": 1,
                    "input_parameters": 1,
                    "param2": 1,
                    "values": 1
                },
                "param_3": {
                    "arg_count": 4,
                    "arg_size": 1,
                    "args_count": 3,
                    "args_length": 1,
                    "args_num": 1,
                    "arguments_count": 1,
                    "buffer_size": 2,
                    "flags": 1,
                    "format_args_len": 1,
                    "format_specifier": 1,
                    "max_chars": 1,
                    "num_args": 3,
                    "num_chars": 1,
                    "output_buffer": 1,
                    "output_buffer_size": 2,
                    "param3": 1,
                    "width": 6
                },
                "param_4": {
                    "arg_callback": 1,
                    "args": 1,
                    "call_function": 1,
                    "char_output": 1,
                    "func_ptr": 1,
                    "function_ptr": 1,
                    "out_func": 1,
                    "out_function": 1,
                    "outfunc": 1,
                    "output_function": 9,
                    "param4": 1,
                    "print_func": 1,
                    "printf_function": 1,
                    "putc": 1,
                    "putc_function": 1,
                    "putchar_func": 3,
                    "putchar_function": 1,
                    "specifier_func": 1,
                    "write_callback": 1,
                    "write_func": 1,
                    "write_function": 1
                },
                "param_5": {
                    "arg_callback_list": 1,
                    "arg_index": 1,
                    "arg_pointer": 1,
                    "arg_position": 1,
                    "arg_ptr": 4,
                    "arg_ptr_ptr": 2,
                    "arglist": 1,
                    "argptr": 2,
                    "args": 1,
                    "args_ptr": 1,
                    "out_arg": 1,
                    "out_arg_ptr": 1,
                    "output_arg": 1,
                    "output_args": 1,
                    "output_arguments": 1,
                    "output_data": 1,
                    "output_parameters": 2,
                    "param5": 1,
                    "pointer_to_args_vector": 1,
                    "pparam": 1,
                    "print_func_args": 1,
                    "putchar_arg": 1,
                    "write_arg_function": 1,
                    "write_count_ptr": 1,
                    "write_func_args": 1
                },
                "pcVar11": {
                    "char_pointer2": 1,
                    "char_pointer_2": 1,
                    "current_char": 1,
                    "current_digit": 3,
                    "dest_ptr": 1,
                    "digit_ptr": 1,
                    "end_ptr": 1,
                    "formatted_output": 1,
                    "formatted_result": 1,
                    "formatted_string": 4,
                    "out": 1,
                    "output": 1,
                    "output_buffer": 1,
                    "output_ptr": 2,
                    "output_str": 1,
                    "output_string": 1,
                    "pc": 1,
                    "ptr_to_str_end": 1,
                    "ptr_to_string": 1,
                    "str": 1,
                    "str_ptr": 2,
                    "string_pointer": 1,
                    "temp_char_ptr": 1,
                    "temp_ptr": 1
                },
                "pcVar12": {
                    "buffer": 1,
                    "buffer_pointer": 1,
                    "char_pointer3": 1,
                    "char_pointer_3": 1,
                    "cur_char_ptr": 1,
                    "current_buffer": 1,
                    "current_char": 1,
                    "current_character": 1,
                    "end_ptr": 1,
                    "format": 4,
                    "format_ptr": 1,
                    "format_str": 1,
                    "formatted_str": 1,
                    "formatted_string": 1,
                    "formatted_value": 1,
                    "hex_string": 1,
                    "output_buffer": 2,
                    "output_end_ptr": 1,
                    "output_ptr": 1,
                    "ptr2": 1,
                    "ptr_to_chars": 1,
                    "ptr_to_str_start": 1,
                    "result_string": 1,
                    "src_ptr": 1,
                    "start_out": 1,
                    "str": 1,
                    "temp_output": 1
                },
                "pcVar5": {
                    "char_pointer": 1,
                    "char_pointer_1": 1,
                    "char_ptr": 1,
                    "digits": 6,
                    "hex_characters": 1,
                    "hex_chars": 10,
                    "hex_digits": 7,
                    "hex_table": 1,
                    "hexadecimal": 1,
                    "hexadecimal_digits": 1,
                    "num_chars": 1
                },
                "ppcVar8": {
                    "char_pointer_array": 1,
                    "cur_str_ptr_ptr": 1,
                    "pointer_pointer_char_var": 1,
                    "temp_string_pointer": 1
                },
                "ppuVar7": {
                    "arg_pointer_array": 1,
                    "cur_arg_ptr_ptr": 1,
                    "pointer_pointer_var1": 1,
                    "temp_pointer_array": 1
                },
                "puVar3": {
                    "arg_pointer": 1,
                    "arg_pointer_temp": 1,
                    "arg_ptr": 2,
                    "argptr": 1,
                    "argptr_tmp": 1,
                    "cur_arg_ptr": 1,
                    "current_arg": 1,
                    "current_output": 1,
                    "current_value": 1,
                    "data": 1,
                    "data_ptr": 2,
                    "out_buf": 1,
                    "pointer": 3,
                    "pointer_to_arg": 1,
                    "pointer_var": 1,
                    "pointer_var1": 1,
                    "ptr": 6,
                    "ptr_arg": 1,
                    "temp_ptr": 3,
                    "tmp_ptr": 1
                },
                "uVar10": {
                    "arg_len": 1,
                    "arg_length": 1,
                    "arg_val": 2,
                    "arg_value": 1,
                    "arg_width": 1,
                    "field_width": 1,
                    "length": 5,
                    "local_value": 1,
                    "param2_copy": 1,
                    "size": 1,
                    "temp": 4,
                    "temp_value": 3,
                    "temp_var": 1,
                    "temp_var3": 1,
                    "temp_var5": 1,
                    "val2": 1,
                    "value": 2,
                    "value_3": 1,
                    "var4": 1,
                    "width": 1
                },
                "uVar6": {
                    "base": 15,
                    "base_value": 1,
                    "digit_base": 1,
                    "divisor": 2,
                    "flags": 1,
                    "format_flag": 1,
                    "format_flags": 2,
                    "mask": 1,
                    "num": 1,
                    "radix": 1,
                    "temp": 1,
                    "temp_var1": 1,
                    "temp_var3": 1,
                    "value_1": 1,
                    "var2": 1
                },
                "uVar9": {
                    "arg_num": 1,
                    "arg_value": 1,
                    "arg_width": 1,
                    "converted_value": 1,
                    "digit_value": 1,
                    "formatted_value": 1,
                    "length": 1,
                    "num": 1,
                    "num_value": 1,
                    "result": 6,
                    "size": 1,
                    "specifier_val": 1,
                    "temp_var2": 1,
                    "temp_var4": 1,
                    "val": 1,
                    "value": 9,
                    "value_2": 1,
                    "var3": 1
                },
                "ushort": {
                    "ushort_value": 1
                }
            },
            "called": [
                "FUN_08000230",
                "FUN_08004cb0"
            ],
            "calling": [
                "FUN_08004a84"
            ],
            "code": "\nuint print_formatted_output_08004d9c(undefined4 format_string,uint *args,undefined4 width,code *output_function,uint **arg_ptr)\n\n{\n  byte byte_value;\n  int index;\n  uint *ptr;\n  int result;\n  char *hex_chars;\n  uint base;\n  uint **arg_pointer_array;\n  char **temp_string_pointer;\n  uint value;\n  uint length;\n  char *formatted_string;\n  char *format;\n  uint local_array [2];\n  \n  byte_value = *(byte *)(args + 6);\n  format = (char *)((int)args + 0x43);\n  if (byte_value != 0x6e) {\n    if (byte_value < 0x6f) {\n      if (byte_value != 99) {\n        if (byte_value < 100) {\n          if (byte_value == 0) goto LAB_08004f56;\n          if (byte_value != 0x58) goto LAB_08004dcc;\n          *(undefined *)((int)args + 0x45) = 0x58;\n          hex_chars = \"0123456789ABCDEF\";\nLAB_08004ee6:\n          base = *args;\n          ptr = *arg_ptr;\n          *arg_ptr = ptr + 1;\n          if (((base & 0x80) == 0) && ((int)(base << 0x19) < 0)) {\n            value = (uint)*(ushort_value *)ptr;\n          }\n          else {\n            value = *ptr;\n          }\n          if ((int)(base << 0x1f) < 0) {\n            *args = base | 0x20;\n          }\n          if (value == 0) {\n            *args = *args & 0xffffffdf;\n          }\n          base = 0x10;\nLAB_08004e7c:\n          *(undefined *)((int)args + 0x43) = 0;\n        }\n        else {\n          if ((byte_value != 100) && (byte_value != 0x69)) goto LAB_08004dcc;\n          value = *args;\n          ptr = *arg_ptr;\n          if ((value & 0x80) == 0) {\n            *arg_ptr = ptr + 1;\n            if ((value & 0x40) == 0) goto LAB_08004dec;\n            value = (uint)(short)*(ushort_value *)ptr;\n          }\n          else {\n            *arg_ptr = ptr + 1;\nLAB_08004dec:\n            value = *ptr;\n          }\n          if ((int)value < 0) {\n            value = -value;\n            *(undefined *)((int)args + 0x43) = 0x2d;\n          }\n          hex_chars = \"0123456789ABCDEF\";\n          base = 10;\n        }\n        length = args[1];\n        args[2] = length;\n        formatted_string = format;\n        if ((int)length < 0) {\n          if (value != 0) goto LAB_08004f1a;\nLAB_08004fc8:\n          *(char *)((int)args + 0x42) = *hex_chars;\n          formatted_string = (char *)((int)args + 0x42);\n        }\n        else {\n          *args = *args & 0xfffffffb;\n          if (value == 0) {\n            if (length != 0) goto LAB_08004fc8;\n          }\n          else {\nLAB_08004f1a:\n            do {\n              length = value / base;\n              formatted_string = formatted_string + -1;\n              *formatted_string = hex_chars[value - base * length];\n              value = length;\n            } while (length != 0);\n          }\n        }\n        if (((base == 8) && ((int)(*args << 0x1f) < 0)) && ((int)args[1] <= (int)args[4]))\n        {\n          formatted_string[-1] = '0';\n          formatted_string = formatted_string + -1;\n        }\n        args[4] = (int)format - (int)formatted_string;\n        format = formatted_string;\n        goto LAB_08004ec2;\n      }\n      ptr = *arg_ptr;\n      *arg_ptr = ptr + 1;\n      *(char *)((int)args + 0x42) = (char)*ptr;\nLAB_08004e2c:\n      format = (char *)((int)args + 0x42);\n      value = 1;\n    }\n    else {\n      if (byte_value != 0x73) {\n        if (byte_value < 0x74) {\n          if (byte_value == 0x6f) {\nLAB_08004e52:\n            value = *args;\n            ptr = *arg_ptr;\n            if ((value & 0x80) == 0) {\n              *arg_ptr = ptr + 1;\n              if ((value & 0x40) == 0) goto LAB_08004e60;\n              value = (uint)*(ushort_value *)ptr;\n            }\n            else {\n              *arg_ptr = ptr + 1;\nLAB_08004e60:\n              value = *ptr;\n            }\n            hex_chars = \"0123456789ABCDEF\";\n            if (byte_value == 0x6f) {\n              base = 8;\n            }\n            else {\n              base = 10;\n            }\n            goto LAB_08004e7c;\n          }\n          if (byte_value == 0x70) {\n            *args = *args | 0x20;\nLAB_08004e12:\n            *(undefined *)((int)args + 0x45) = 0x78;\n            hex_chars = \"0123456789abcdef\";\n            goto LAB_08004ee6;\n          }\n        }\n        else {\n          if (byte_value == 0x75) goto LAB_08004e52;\n          if (byte_value == 0x78) goto LAB_08004e12;\n        }\nLAB_08004dcc:\n        *(byte *)((int)args + 0x42) = byte_value;\n        goto LAB_08004e2c;\n      }\n      temp_string_pointer = (char **)*arg_ptr;\n      *arg_ptr = (uint *)(temp_string_pointer + 1);\n      format = *temp_string_pointer;\n      index = find_null_byte(format,0,args[1]);\n      if (index != 0) {\n        args[1] = index - (int)format;\n      }\n      value = args[1];\n    }\n    args[4] = value;\n    *(undefined *)((int)args + 0x43) = 0;\n    goto LAB_08004ec2;\n  }\n  value = *args;\n  arg_pointer_array = (uint **)*arg_ptr;\n  base = args[5];\n  if ((value & 0x80) == 0) {\n    *arg_ptr = (uint *)(arg_pointer_array + 1);\n    ptr = *arg_pointer_array;\n    if ((value & 0x40) == 0) goto LAB_08004f42;\n    *(short *)ptr = (short)base;\n  }\n  else {\n    *arg_ptr = (uint *)(arg_pointer_array + 1);\n    ptr = *arg_pointer_array;\nLAB_08004f42:\n    *ptr = base;\n  }\nLAB_08004f56:\n  args[4] = 0;\nLAB_08004ec2:\n  index = print_formatted(format_string,args,local_array,width,output_function);\n  if ((index == -1) || (index = (*output_function)(format_string,width,format,args[4]), index == -1)) {\nLAB_08004ed6:\n    value = 0xffffffff;\n  }\n  else {\n    if ((int)(*args << 0x1e) < 0) {\n      for (index = 0; index < (int)(args[3] - local_array[0]); index = index + 1) {\n        result = (*output_function)(format_string,width,(int)args + 0x19,1);\n        if (result == -1) goto LAB_08004ed6;\n      }\n    }\n    value = args[3];\n    if ((int)args[3] < (int)local_array[0]) {\n      value = local_array[0];\n    }\n  }\n  return value;\n}\n\n",
            "current_name": "print_formatted_output_08004d9c",
            "entrypoint": "0x08004d9c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d9c": "print_formatted_output_08004d9c",
                "_printf_common": "print_formatted",
                "bVar1": "byte_value",
                "iVar2": "index",
                "iVar4": "result",
                "local_24": "local_array",
                "memchr": "find_null_byte",
                "param_1": "format_string",
                "param_2": "args",
                "param_3": "width",
                "param_4": "output_function",
                "param_5": "arg_ptr",
                "pcVar11": "formatted_string",
                "pcVar12": "format",
                "pcVar5": "hex_chars",
                "ppcVar8": "temp_string_pointer",
                "ppuVar7": "arg_pointer_array",
                "puVar3": "ptr",
                "uVar10": "length",
                "uVar6": "base",
                "uVar9": "value",
                "ushort": "ushort_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004fdc": {
            "additional_data": {
                "FUN_08004fdc": {
                    "execute_printf": 1,
                    "print_formatted_data": 1,
                    "print_formatted_message": 1,
                    "print_formatted_output": 11,
                    "print_formatted_string": 4,
                    "print_formatted_text": 5,
                    "print_formatted_value": 3,
                    "print_with_variables": 1,
                    "printf_wrapper": 4
                },
                "iVar1": {
                    "base_address": 2,
                    "code_address": 1,
                    "config": 1,
                    "dat_pointer": 1,
                    "data": 4,
                    "data_address": 8,
                    "data_pointer": 2,
                    "data_ptr": 4,
                    "data_struct": 1,
                    "file_descriptor": 1,
                    "global_variable": 1,
                    "stream_data": 1,
                    "vfiprintf_arg": 1
                },
                "param_1": {
                    "format_string": 29,
                    "output_file": 1,
                    "stream": 1
                },
                "param_2": {
                    "arg1": 27,
                    "arg_1": 2,
                    "param2": 1,
                    "var_2": 1
                },
                "param_3": {
                    "arg2": 27,
                    "arg_2": 2,
                    "param3": 1,
                    "var_3": 1
                },
                "param_4": {
                    "arg3": 27,
                    "arg_3": 2,
                    "param4": 1,
                    "var_4": 1
                },
                "uStack_4": {
                    "arg3_copy": 14,
                    "arg_3_copy": 1,
                    "local3": 1,
                    "param4_copy": 1,
                    "temp3": 1,
                    "tmp3": 1,
                    "var_4_copy": 1,
                    "vfiprintf_arg3": 1
                },
                "uStack_8": {
                    "arg2_copy": 14,
                    "arg_2_copy": 1,
                    "local2": 1,
                    "param3_copy": 1,
                    "temp2": 1,
                    "tmp2": 1,
                    "var_8": 1,
                    "vfiprintf_arg2": 1
                },
                "uStack_c": {
                    "arg1_copy": 14,
                    "arg_1_copy": 1,
                    "local1": 1,
                    "param2_copy": 1,
                    "temp1": 1,
                    "tmp1": 1,
                    "var_c": 1,
                    "vfiprintf_arg1": 1
                },
                "uVar2": {
                    "arg0": 1,
                    "format": 3,
                    "format_address": 1,
                    "format_ptr": 1,
                    "format_specifier": 1,
                    "format_string_address": 2,
                    "format_string_copy": 10,
                    "format_string_ptr": 1,
                    "formatted_string": 1,
                    "param1_copy": 4,
                    "param_1_copy": 2,
                    "param_1_cpy": 1
                }
            },
            "called": [
                "FUN_08004a84",
                "FUN_080053a0"
            ],
            "calling": [
                "FUN_08003978"
            ],
            "code": "\nvoid print_formatted_output_08004fdc(undefined4 format_string,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  int data_address;\n  undefined4 format_string_copy;\n  undefined4 arg1_copy;\n  undefined4 arg2_copy;\n  undefined4 arg3_copy;\n  \n  data_address = DAT_200000a0;\n  format_string_copy = format_string;\n  arg1_copy = arg1;\n  arg2_copy = arg2;\n  arg3_copy = arg3;\n  if ((DAT_200000a0 != 0) && (*(int *)(DAT_200000a0 + 0x18) == 0)) {\n    __sinit(DAT_200000a0);\n  }\n  _vfiprintf_r(data_address,*(undefined4 *)(data_address + 8),format_string,&arg1_copy,format_string_copy,&arg1_copy);\n  return;\n}\n\n",
            "current_name": "print_formatted_output_08004fdc",
            "entrypoint": "0x08004fdc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004fdc": "print_formatted_output_08004fdc",
                "iVar1": "data_address",
                "param_1": "format_string",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "uStack_4": "arg3_copy",
                "uStack_8": "arg2_copy",
                "uStack_c": "arg1_copy",
                "uVar2": "format_string_copy"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800500c": {
            "additional_data": {
                "FUN_08004094": {
                    "get_chunk_address": 1,
                    "get_memory_address": 1,
                    "get_ptr": 1
                },
                "FUN_0800500c": {
                    "allocate_and_check_memory": 1,
                    "allocate_and_set_param": 1,
                    "allocate_memory": 25,
                    "allocate_memory_and_store": 1,
                    "initialize_memory": 2,
                    "initialize_memory_allocation": 1
                },
                "_sbrk": {
                    "extend_heap": 1,
                    "increase_heap": 1
                },
                "iVar1": {
                    "alloc_result": 1,
                    "allocated_address": 5,
                    "allocated_memory": 3,
                    "allocated_size": 1,
                    "allocation_address": 1,
                    "allocation_result": 11,
                    "memory_address": 1,
                    "memory_allocation_result": 1,
                    "new_block": 1,
                    "new_memory": 1,
                    "result": 5
                },
                "param_1": {
                    "memory_address": 1,
                    "memory_location": 1,
                    "memory_pointer": 3,
                    "out_param": 1,
                    "output_address": 2,
                    "output_pointer": 2,
                    "ptr": 1,
                    "result": 13,
                    "result_address": 5,
                    "result_ptr": 2
                },
                "param_2": {
                    "allocation_size": 2,
                    "bytes_to_allocate": 1,
                    "memory_size": 2,
                    "size": 26
                }
            },
            "called": [
                "FUN_08004094"
            ],
            "calling": [
                "FUN_08004978"
            ],
            "code": "\nvoid allocate_memory_and_store_0800500c(int *result,undefined4 size)\n\n{\n  int allocation_result;\n  \n  DAT_20000674 = 0;\n  allocation_result = increase_heap(size);\n  if ((allocation_result == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return;\n}\n\n",
            "current_name": "allocate_memory_and_store_0800500c",
            "entrypoint": "0x0800500c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800500c": "allocate_memory_and_store_0800500c",
                "_sbrk": "increase_heap",
                "iVar1": "allocation_result",
                "param_1": "result",
                "param_2": "size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080050d0": {
            "additional_data": {
                "FUN_080048dc": {
                    "helper_function1": 1,
                    "initialize_array": 1,
                    "initialize_data": 2,
                    "initialize_resource": 1,
                    "initialize_stream": 1,
                    "process_data": 1,
                    "process_data_helper": 1,
                    "process_subfunction_1": 1,
                    "some_subfunction": 1,
                    "sub_function1": 1,
                    "sub_function_1": 1
                },
                "FUN_080050d0": {
                    "file_read_status": 1,
                    "parse_and_validate_param": 1,
                    "parse_param": 1,
                    "parse_parameters": 1,
                    "process_data": 19,
                    "process_input": 2,
                    "stream_read_write": 1
                },
                "FUN_080053a0": {
                    "cleanup": 1,
                    "cleanup_data": 2,
                    "cleanup_memory": 1,
                    "free_resources": 1,
                    "helper_function3": 1,
                    "initialize_buffer_data": 1,
                    "process_subfunction_3": 1,
                    "reset_data": 1,
                    "sub_function3": 1,
                    "sub_function_3": 1,
                    "yet_another_subfunction": 1
                },
                "FUN_080054fc": {
                    "another_subfunction": 1,
                    "calculate_value": 1,
                    "check_condition": 1,
                    "get_data": 1,
                    "handle_condition": 1,
                    "helper_function2": 1,
                    "process_array": 1,
                    "process_data": 1,
                    "process_subfunction_2": 1,
                    "sub_function2": 1,
                    "sub_function_2": 1,
                    "update_data": 1
                },
                "F_080048dc": {
                    "process_subfunction": 1
                },
                "F_080053a0": {
                    "subfunction_2": 1
                },
                "F_080054fc": {
                    "subfunction_1": 1
                },
                "__free_r": {
                    "release_memory": 1
                },
                "__sinit": {
                    "initialize": 4,
                    "initialize_data": 10,
                    "initialize_data_ptr": 1,
                    "initialize_data_struct": 1,
                    "initialize_static_data": 1,
                    "initialize_stream": 1
                },
                "__smakebuf_r": {
                    "create_buffer": 8,
                    "initialize_buffer": 1,
                    "make_buffer": 8,
                    "make_file_buffer": 1
                },
                "_free_r": {
                    "free_data": 1,
                    "free_memory": 11,
                    "free_resource": 2,
                    "free_resources": 1,
                    "release_memory": 2
                },
                "iVar1": {
                    "base_address": 1,
                    "constant_value": 1,
                    "dat_200000a0": 1,
                    "data": 6,
                    "data_address": 4,
                    "data_offset": 1,
                    "data_ptr": 13,
                    "data_struct": 1,
                    "data_structure": 1,
                    "stream_offset": 1,
                    "variable1": 1
                },
                "param_1": {
                    "input_buffer": 1,
                    "output": 7,
                    "output_array": 1,
                    "output_buffer": 10,
                    "output_data": 1,
                    "output_param": 6,
                    "output_ptr": 2,
                    "output_status": 1,
                    "result": 2
                },
                "param_2": {
                    "file": 1,
                    "input": 9,
                    "input_array": 1,
                    "input_buffer": 8,
                    "input_data": 3,
                    "input_param": 6,
                    "input_ptr": 2,
                    "stream": 1
                },
                "param_3": {
                    "fun_param_3": 1
                },
                "param_4": {
                    "fun_param_4": 1
                },
                "uVar2": {
                    "file_read_result": 1,
                    "length_value": 1,
                    "output_value": 1,
                    "param_value": 1,
                    "result": 22,
                    "value": 3,
                    "value1": 1,
                    "variable2": 1
                },
                "uVar3": {
                    "file_status": 1,
                    "flag": 5,
                    "flags": 13,
                    "input_value": 1,
                    "param_value2": 1,
                    "stream_flags": 1,
                    "temp": 1,
                    "temp_value": 2,
                    "value": 4,
                    "value2": 1,
                    "variable3": 1
                }
            },
            "called": [
                "FUN_080048dc",
                "FUN_080054fc",
                "FUN_080053a0"
            ],
            "calling": [
                "FUN_08004a34",
                "FUN_08004a84"
            ],
            "code": "\nuint process_data_080050d0(undefined4 *output_buffer,undefined4 *input)\n\n{\n  int data_ptr;\n  uint result;\n  ushort flags;\n  \n  data_ptr = DAT_200000a0;\n  if ((DAT_200000a0 != 0) && (*(int *)(DAT_200000a0 + 0x18) == 0)) {\n    initialize_data(DAT_200000a0);\n  }\n  if (input == &DAT_08005fc0) {\n    input = *(undefined4 **)(data_ptr + 4);\n  }\n  else if (input == (undefined4 *)&DAT_08005fe0) {\n    input = *(undefined4 **)(data_ptr + 8);\n  }\n  else if (input == (undefined4 *)&DAT_08005fa0) {\n    input = *(undefined4 **)(data_ptr + 0xc);\n  }\n  flags = *(ushort *)(input + 3);\n  result = (uint)flags;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output_buffer = 9;\n      goto LAB_08005100;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)input[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input[0xd] != input + 0x11) {\n          free_memory(output_buffer);\n        }\n        input[0xd] = 0;\n      }\n      *(ushort *)(input + 3) = *(ushort *)(input + 3) & 0xffdb;\n      input[1] = 0;\n      *input = input[4];\n    }\n    *(ushort *)(input + 3) = *(ushort *)(input + 3) | 8;\n  }\n  if ((input[4] == 0) && ((*(ushort *)(input + 3) & 0x280) != 0x200)) {\n    make_buffer(output_buffer,input);\n  }\n  flags = *(ushort *)(input + 3);\n  result = flags & 1;\n  if ((flags & 1) == 0) {\n    if (-1 < (int)((uint)flags << 0x1e)) {\n      result = input[5];\n    }\n    input[2] = result;\n  }\n  else {\n    input[2] = 0;\n    input[6] = -input[5];\n  }\n  if (input[4] == 0) {\n    flags = *(ushort *)(input + 3);\n    result = (int)(short)flags & 0x80;\n    if (result != 0) {\nLAB_08005100:\n      *(ushort *)(input + 3) = flags | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "process_data_080050d0",
            "entrypoint": "0x080050d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080050d0": "process_data_080050d0",
                "__sinit": "initialize_data",
                "__smakebuf_r": "make_buffer",
                "_free_r": "free_memory",
                "iVar1": "data_ptr",
                "param_1": "output_buffer",
                "param_2": "input",
                "uVar2": "result",
                "uVar3": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080051ac": {
            "additional_data": {
                "FUN_080040f8": {
                    "initialize": 9,
                    "initialize_data": 1,
                    "initialize_values": 1
                },
                "FUN_080048dc": {
                    "allocate_memory": 4,
                    "perform_operation": 1,
                    "process_data": 4,
                    "set_data": 1,
                    "update_parameters": 1
                },
                "FUN_080051ac": {
                    "analyze_function": 1,
                    "execute_function": 1,
                    "execute_reverse": 1,
                    "handle_binary_function": 1,
                    "handle_error": 1,
                    "handle_exception": 1
                },
                "FUN_080055d0": {
                    "calculate_value": 1,
                    "check_condition": 3,
                    "check_conditions": 1,
                    "check_data": 2,
                    "check_input": 1,
                    "check_value": 1,
                    "perform_operation": 2
                },
                "UNRECOVERED_JUMPTABLE_00": {
                    "jmp_table_var": 1,
                    "jump_table": 2,
                    "jump_table_00": 1,
                    "jump_table_pointer": 1,
                    "jump_table_var": 1,
                    "jumptable": 1,
                    "jumptable_function": 1,
                    "unknown_code_pointer": 1,
                    "unrecovered_jump_table": 5,
                    "unrecovered_jump_table_pointer": 1,
                    "unrecovered_jumptable": 2,
                    "unrecovered_jumptable_00": 1,
                    "var9": 1
                },
                "_": {
                    "temp_variable": 1
                },
                "_exit": {
                    "exit_program": 1
                },
                "_free_r": {
                    "free_memory": 1
                },
                "bVar11": {
                    "bool11": 1,
                    "bool_var": 4,
                    "bool_var11": 1,
                    "boolean_1": 1,
                    "boolean_var": 1,
                    "boolean_var11": 1,
                    "boolean_variable": 2,
                    "boolean_variable_11": 1,
                    "is_var11": 1,
                    "is_zero": 9,
                    "var6": 1
                },
                "iVar1": {
                    "i_var_temp_7": 1
                },
                "iVar100": {
                    "i_var_temp_53": 1
                },
                "iVar102": {
                    "i_var_temp_54": 1
                },
                "iVar104": {
                    "i_var_temp_55": 1
                },
                "iVar106": {
                    "i_var_temp_56": 1
                },
                "iVar108": {
                    "i_var_temp_57": 1
                },
                "iVar11": {
                    "i_var_temp_9": 1
                },
                "iVar110": {
                    "i_var_temp_58": 1
                },
                "iVar112": {
                    "i_var_temp_59": 1
                },
                "iVar114": {
                    "i_var_temp_60": 1
                },
                "iVar116": {
                    "i_var_temp_61": 1
                },
                "iVar118": {
                    "i_var_temp_62": 1
                },
                "iVar120": {
                    "i_var_temp_63": 1
                },
                "iVar122": {
                    "i_var_temp_64": 1
                },
                "iVar124": {
                    "i_var_temp_65": 1
                },
                "iVar126": {
                    "i_var_temp_66": 1
                },
                "iVar128": {
                    "i_var_temp_67": 1
                },
                "iVar130": {
                    "i_var_temp_68": 1
                },
                "iVar132": {
                    "i_var_temp_69": 1
                },
                "iVar134": {
                    "i_var_temp_70": 1
                },
                "iVar136": {
                    "i_var_temp_71": 1
                },
                "iVar138": {
                    "i_var_temp_72": 1
                },
                "iVar14": {
                    "i_var_temp_10": 1
                },
                "iVar140": {
                    "i_var_temp_73": 1
                },
                "iVar142": {
                    "i_var_temp_74": 1
                },
                "iVar144": {
                    "i_var_temp_75": 1
                },
                "iVar146": {
                    "i_var_temp_76": 1
                },
                "iVar148": {
                    "i_var_temp_77": 1
                },
                "iVar150": {
                    "i_var_temp_78": 1
                },
                "iVar152": {
                    "i_var_temp_79": 1
                },
                "iVar154": {
                    "i_var_temp_80": 1
                },
                "iVar156": {
                    "i_var_temp_81": 1
                },
                "iVar158": {
                    "i_var_temp_82": 1
                },
                "iVar16": {
                    "i_var_temp_11": 1
                },
                "iVar160": {
                    "i_var_temp_83": 1
                },
                "iVar162": {
                    "i_var_temp_84": 1
                },
                "iVar164": {
                    "i_var_temp_85": 1
                },
                "iVar166": {
                    "i_var_temp_86": 1
                },
                "iVar168": {
                    "i_var_temp_87": 1
                },
                "iVar170": {
                    "i_var_temp_88": 1
                },
                "iVar172": {
                    "i_var_temp_89": 1
                },
                "iVar174": {
                    "i_var_temp_90": 1
                },
                "iVar176": {
                    "i_var_temp_91": 1
                },
                "iVar178": {
                    "i_var_temp_92": 1
                },
                "iVar18": {
                    "i_var_temp_12": 1
                },
                "iVar180": {
                    "i_var_temp_93": 1
                },
                "iVar182": {
                    "i_var_temp_94": 1
                },
                "iVar184": {
                    "i_var_temp_95": 1
                },
                "iVar186": {
                    "i_var_temp_96": 1
                },
                "iVar188": {
                    "i_var_temp_97": 1
                },
                "iVar190": {
                    "i_var_temp_98": 1
                },
                "iVar192": {
                    "i_var_temp_99": 1
                },
                "iVar194": {
                    "i_var_temp_100": 1
                },
                "iVar196": {
                    "i_var_temp_101": 1
                },
                "iVar198": {
                    "i_var_temp_102": 1
                },
                "iVar2": {
                    "count": 1,
                    "counter": 1,
                    "exception_count": 1,
                    "i_var2": 1,
                    "int_value": 2,
                    "int_var1": 1,
                    "int_var2": 1,
                    "integer_1": 1,
                    "integer_variable": 1,
                    "integer_variable_1": 1,
                    "iteration_counter": 1,
                    "offset": 3,
                    "temp_var_1": 1,
                    "temp_variable": 2,
                    "total": 1,
                    "var2": 2,
                    "var3": 1,
                    "var_2": 1,
                    "variable2": 1,
                    "variable_2": 1
                },
                "iVar20": {
                    "i_var_temp_13": 1
                },
                "iVar200": {
                    "i_var_temp_103": 1
                },
                "iVar202": {
                    "i_var_temp_104": 1
                },
                "iVar204": {
                    "i_var_temp_105": 1
                },
                "iVar206": {
                    "i_var_temp_106": 1
                },
                "iVar208": {
                    "i_var_temp_107": 1
                },
                "iVar210": {
                    "i_var_temp_108": 1
                },
                "iVar212": {
                    "i_var_temp_109": 1
                },
                "iVar214": {
                    "i_var_temp_110": 1
                },
                "iVar216": {
                    "i_var_temp_111": 1
                },
                "iVar218": {
                    "i_var_temp_112": 1
                },
                "iVar22": {
                    "i_var_temp_14": 1
                },
                "iVar220": {
                    "i_var_temp_113": 1
                },
                "iVar222": {
                    "i_var_temp_114": 1
                },
                "iVar224": {
                    "i_var_temp_115": 1
                },
                "iVar226": {
                    "i_var_temp_116": 1
                },
                "iVar228": {
                    "i_var_temp_117": 1
                },
                "iVar230": {
                    "i_var_temp_118": 1
                },
                "iVar232": {
                    "i_var_temp_119": 1
                },
                "iVar234": {
                    "i_var_temp_120": 1
                },
                "iVar236": {
                    "i_var_temp_121": 1
                },
                "iVar238": {
                    "i_var_temp_122": 1
                },
                "iVar24": {
                    "i_var_temp_15": 1
                },
                "iVar240": {
                    "i_var_temp_123": 1
                },
                "iVar242": {
                    "i_var_temp_124": 1
                },
                "iVar244": {
                    "i_var_temp_125": 1
                },
                "iVar246": {
                    "i_var_temp_126": 1
                },
                "iVar248": {
                    "i_var_temp_127": 1
                },
                "iVar250": {
                    "i_var_temp_128": 1
                },
                "iVar252": {
                    "i_var_temp_129": 1
                },
                "iVar254": {
                    "i_var_temp_130": 1
                },
                "iVar256": {
                    "i_var_temp_131": 1
                },
                "iVar258": {
                    "i_var_temp_132": 1
                },
                "iVar26": {
                    "i_var_temp_16": 1
                },
                "iVar260": {
                    "i_var_temp_133": 1
                },
                "iVar262": {
                    "i_var_temp_134": 1
                },
                "iVar264": {
                    "i_var_temp_135": 1
                },
                "iVar266": {
                    "i_var_temp_136": 1
                },
                "iVar268": {
                    "i_var_temp_137": 1
                },
                "iVar270": {
                    "i_var_temp_138": 1
                },
                "iVar272": {
                    "i_var_temp_139": 1
                },
                "iVar274": {
                    "i_var_temp_140": 1
                },
                "iVar276": {
                    "i_var_temp_141": 1
                },
                "iVar278": {
                    "i_var_temp_142": 1
                },
                "iVar28": {
                    "i_var_temp_17": 1
                },
                "iVar280": {
                    "i_var_temp_143": 1
                },
                "iVar282": {
                    "i_var_temp_144": 1
                },
                "iVar284": {
                    "i_var_temp_145": 1
                },
                "iVar286": {
                    "i_var_temp_146": 1
                },
                "iVar288": {
                    "i_var_temp_147": 1
                },
                "iVar290": {
                    "i_var_temp_148": 1
                },
                "iVar292": {
                    "i_var_temp_149": 1
                },
                "iVar294": {
                    "i_var_temp_150": 1
                },
                "iVar296": {
                    "i_var_temp_151": 1
                },
                "iVar298": {
                    "i_var_temp_152": 1
                },
                "iVar3": {
                    "i_var_temp_5": 1
                },
                "iVar30": {
                    "i_var_temp_18": 1
                },
                "iVar300": {
                    "i_var_temp_153": 1
                },
                "iVar302": {
                    "i_var_temp_154": 1
                },
                "iVar304": {
                    "i_var_temp_155": 1
                },
                "iVar306": {
                    "i_var_temp_156": 1
                },
                "iVar308": {
                    "i_var_temp_157": 1
                },
                "iVar310": {
                    "i_var_temp_158": 1
                },
                "iVar312": {
                    "i_var_temp_159": 1
                },
                "iVar314": {
                    "i_var_temp_160": 1
                },
                "iVar316": {
                    "i_var_temp_161": 1
                },
                "iVar318": {
                    "i_var_temp_162": 1
                },
                "iVar32": {
                    "i_var_temp_19": 1
                },
                "iVar320": {
                    "i_var_temp_163": 1
                },
                "iVar322": {
                    "i_var_temp_164": 1
                },
                "iVar324": {
                    "i_var_temp_165": 1
                },
                "iVar326": {
                    "i_var_temp_166": 1
                },
                "iVar328": {
                    "i_var_temp_167": 1
                },
                "iVar330": {
                    "i_var_temp_168": 1
                },
                "iVar332": {
                    "i_var_temp_169": 1
                },
                "iVar334": {
                    "i_var_temp_170": 1
                },
                "iVar336": {
                    "i_var_temp_171": 1
                },
                "iVar338": {
                    "i_var_temp_172": 1
                },
                "iVar34": {
                    "i_var_temp_20": 1
                },
                "iVar340": {
                    "i_var_temp_173": 1
                },
                "iVar342": {
                    "i_var_temp_174": 1
                },
                "iVar344": {
                    "i_var_temp_175": 1
                },
                "iVar346": {
                    "i_var_temp_176": 1
                },
                "iVar348": {
                    "i_var_temp_177": 1
                },
                "iVar350": {
                    "i_var_temp_178": 1
                },
                "iVar352": {
                    "i_var_temp_179": 1
                },
                "iVar354": {
                    "i_var_temp_180": 1
                },
                "iVar356": {
                    "i_var_temp_181": 1
                },
                "iVar358": {
                    "i_var_temp_182": 1
                },
                "iVar36": {
                    "i_var_temp_21": 1
                },
                "iVar360": {
                    "i_var_temp_183": 1
                },
                "iVar362": {
                    "i_var_temp_184": 1
                },
                "iVar364": {
                    "i_var_temp_185": 1
                },
                "iVar366": {
                    "i_var_temp_186": 1
                },
                "iVar368": {
                    "i_var_temp_187": 1
                },
                "iVar370": {
                    "i_var_temp_188": 1
                },
                "iVar372": {
                    "i_var_temp_189": 1
                },
                "iVar374": {
                    "i_var_temp_190": 1
                },
                "iVar376": {
                    "i_var_temp_191": 1
                },
                "iVar378": {
                    "i_var_temp_192": 1
                },
                "iVar38": {
                    "i_var_temp_22": 1
                },
                "iVar380": {
                    "i_var_temp_193": 1
                },
                "iVar382": {
                    "i_var_temp_194": 1
                },
                "iVar384": {
                    "i_var_temp_195": 1
                },
                "iVar386": {
                    "i_var_temp_196": 1
                },
                "iVar388": {
                    "i_var_temp_197": 1
                },
                "iVar390": {
                    "i_var_temp_198": 1
                },
                "iVar392": {
                    "i_var_temp_199": 1
                },
                "iVar394": {
                    "i_var_temp_200": 1
                },
                "iVar396": {
                    "i_var_temp_201": 1
                },
                "iVar398": {
                    "i_var_temp_202": 1
                },
                "iVar4": {
                    "i_var_temp_2": 1,
                    "remaining": 1
                },
                "iVar40": {
                    "i_var_temp_23": 1
                },
                "iVar42": {
                    "i_var_temp_24": 1
                },
                "iVar44": {
                    "i_var_temp_25": 1
                },
                "iVar46": {
                    "i_var_temp_26": 1
                },
                "iVar48": {
                    "i_var_temp_27": 1
                },
                "iVar5": {
                    "i_var_temp_3": 1
                },
                "iVar50": {
                    "i_var_temp_28": 1
                },
                "iVar52": {
                    "i_var_temp_29": 1
                },
                "iVar54": {
                    "i_var_temp_30": 1
                },
                "iVar56": {
                    "i_var_temp_31": 1
                },
                "iVar58": {
                    "i_var_temp_32": 1
                },
                "iVar6": {
                    "i_var_temp_6": 1
                },
                "iVar60": {
                    "i_var_temp_33": 1
                },
                "iVar62": {
                    "i_var_temp_34": 1
                },
                "iVar64": {
                    "i_var_temp_35": 1
                },
                "iVar66": {
                    "i_var_temp_36": 1
                },
                "iVar68": {
                    "i_var_temp_37": 1
                },
                "iVar7": {
                    "i_var7": 1,
                    "i_var_temp": 1,
                    "int_var2": 1,
                    "int_var7": 1,
                    "integer_2": 1,
                    "integer_variable_2": 1,
                    "iteration_value": 1,
                    "loop_control_variable": 1,
                    "loop_var1": 1,
                    "loop_variable_1": 1,
                    "offset": 1,
                    "size": 1,
                    "temp2": 1,
                    "temp_value": 2,
                    "temp_var": 2,
                    "temp_var_2": 1,
                    "temp_variable1": 1,
                    "var4": 1,
                    "var7": 2,
                    "var_7": 1,
                    "variable7": 1,
                    "variable_7": 1
                },
                "iVar70": {
                    "i_var_temp_38": 1
                },
                "iVar72": {
                    "i_var_temp_39": 1
                },
                "iVar74": {
                    "i_var_temp_40": 1
                },
                "iVar76": {
                    "i_var_temp_41": 1
                },
                "iVar78": {
                    "i_var_temp_42": 1
                },
                "iVar8": {
                    "i_var_temp_8": 1
                },
                "iVar80": {
                    "i_var_temp_43": 1
                },
                "iVar82": {
                    "i_var_temp_44": 1
                },
                "iVar84": {
                    "i_var_temp_45": 1
                },
                "iVar86": {
                    "i_var_temp_46": 1
                },
                "iVar88": {
                    "i_var_temp_47": 1
                },
                "iVar9": {
                    "count": 1,
                    "i_var9": 1,
                    "int_var3": 1,
                    "int_var9": 1,
                    "integer_3": 1,
                    "integer_variable_3": 1,
                    "loop_counter": 2,
                    "loop_index": 1,
                    "loop_var2": 1,
                    "loop_variable_2": 1,
                    "size": 2,
                    "temp_value_2": 1,
                    "temp_var2": 1,
                    "temp_var_3": 1,
                    "temp_variable": 1,
                    "temp_variable2": 1,
                    "var5": 1,
                    "var9": 2,
                    "var_9": 1,
                    "variable9": 1,
                    "variable_9": 1
                },
                "iVar90": {
                    "i_var_temp_48": 1
                },
                "iVar92": {
                    "i_var_temp_49": 1
                },
                "iVar94": {
                    "i_var_temp_50": 1
                },
                "iVar96": {
                    "i_var_temp_51": 1
                },
                "iVar98": {
                    "i_var_temp_52": 1
                },
                "param_1": {
                    "input_data": 1
                },
                "pcVar8": {
                    "binary_function": 1,
                    "callback": 1,
                    "callback_function": 2,
                    "code_pointer": 2,
                    "exception_handler": 1,
                    "function_pointer": 6,
                    "function_pointer_var8": 1,
                    "function_var": 1,
                    "pointer8": 1,
                    "pointer_to_code": 2,
                    "pointer_to_code_function": 1,
                    "pointer_to_var8": 1,
                    "sub_function_pointer": 1,
                    "var8": 2
                },
                "piVar3": {
                    "array_pointer": 3,
                    "data_pointer": 2,
                    "exception_info": 1,
                    "function_data": 2,
                    "param1": 1,
                    "parameter_pointer": 1,
                    "params": 1,
                    "pointer1": 1,
                    "pointer3": 1,
                    "pointer_2": 1,
                    "pointer_array": 1,
                    "pointer_to_integer_variable_1": 1,
                    "pointer_to_var3": 1,
                    "pointer_to_variable_3": 1,
                    "pointer_to_variables": 2,
                    "pointer_to_vars": 1,
                    "pointer_var1": 1,
                    "pointer_var3": 1,
                    "ptr_array": 1,
                    "ptr_var3": 1
                },
                "piVar4": {
                    "another_array_pointer": 1,
                    "dynamic_data": 1,
                    "pointer2": 1,
                    "pointer4": 1,
                    "pointer_3": 1,
                    "pointer_to_dest": 1,
                    "pointer_to_integer_variable": 1,
                    "pointer_to_variable_4": 1,
                    "pointer_to_vars2": 1,
                    "pointer_var4": 1,
                    "ptr": 1,
                    "ptr_var4": 1,
                    "second_array_pointer": 1,
                    "temp": 1,
                    "temp_array_pointer": 1,
                    "temp_pointer": 2
                },
                "piVar9": {
                    "result_array_pointer": 1
                },
                "puVar1": {
                    "data": 1,
                    "data_pointer": 1,
                    "exception_value": 1,
                    "param": 1,
                    "param2": 1,
                    "pointer": 1,
                    "pointer1": 1,
                    "pointer3": 1,
                    "pointer_1": 1,
                    "pointer_to_u_var": 1,
                    "pointer_to_uint": 2,
                    "pointer_to_unsigned_integer_variable_1": 1,
                    "pointer_to_unsigned_variable_1": 1,
                    "pointer_to_var1": 1,
                    "pointer_var1": 1,
                    "pointer_var2": 1,
                    "ptr_value": 1,
                    "ptr_var1": 1,
                    "uint_pointer": 4,
                    "value_pointer": 2
                },
                "raise": {
                    "raise_exception": 1
                },
                "uVar10": {
                    "check_value_result": 1,
                    "original_value": 1,
                    "temp3": 1,
                    "temp_data_value": 1,
                    "temp_uint": 1,
                    "temp_uint_var": 1,
                    "temp_value": 1,
                    "temp_value2": 1,
                    "temp_value_3": 1,
                    "u_var10": 1,
                    "u_var_temp_3": 1,
                    "uint_2": 1,
                    "uint_var": 1,
                    "uint_var10": 1,
                    "unsigned_integer_variable_2": 1,
                    "unsigned_var_3": 1,
                    "value_u_var10": 1,
                    "var10": 1,
                    "variable10": 1
                },
                "uVar12": {
                    "exit_code": 3,
                    "exit_status": 2,
                    "result": 3,
                    "result_var12": 1,
                    "return_value": 2,
                    "u_var": 1,
                    "undefined8_variable": 1,
                    "undefined_8": 1,
                    "undefined_var": 1,
                    "unsigned_var_4": 1,
                    "unsigned_variable_12": 1,
                    "value_u_var12": 1,
                    "var12": 1,
                    "var7": 1,
                    "variable12": 1
                },
                "uVar5": {
                    "data_value": 1,
                    "masked_data_value": 1,
                    "u_var_temp_2": 1,
                    "uint_1": 1,
                    "uint_value": 1,
                    "unsigned_integer_variable_1": 1,
                    "unsigned_var_1": 1,
                    "unsigned_variable": 1,
                    "unsigned_variable_5": 1,
                    "ushort_converted_to_uint": 1,
                    "ushort_value": 1,
                    "ushort_var": 2,
                    "ushort_var5": 1,
                    "value": 3,
                    "value_u_var5": 1,
                    "var1": 1,
                    "var5": 2,
                    "var_5": 1,
                    "variable5": 1
                },
                "uVar6": {
                    "bitwise_var": 1,
                    "data_value": 1,
                    "exception_flags": 1,
                    "flag": 2,
                    "flags": 3,
                    "u_var_temp": 1,
                    "unsigned_short_variable_1": 1,
                    "unsigned_var_2": 1,
                    "unsigned_variable_6": 1,
                    "ushort_1": 1,
                    "ushort_result": 1,
                    "ushort_value": 3,
                    "ushort_var": 1,
                    "ushort_var6": 1,
                    "ushort_variable": 1,
                    "value_u_var6": 1,
                    "var2": 1,
                    "var6": 1,
                    "var_6": 1,
                    "variable6": 1
                }
            },
            "called": [
                "FUN_080040f8",
                "FUN_080048dc",
                "FUN_080055d0"
            ],
            "calling": [
                "FUN_08005760",
                "FUN_08004808"
            ],
            "code": "\nvoid handle_binary_function_080051ac(void)\n\n{\n  uint *uint_pointer;\n  int offset;\n  int *array_pointer;\n  int *temp_pointer;\n  uint value;\n  ushort flags;\n  int temp_value;\n  code *function_pointer;\n  int size;\n  uint u_var10;\n  code *unrecovered_jump_table;\n  bool is_zero;\n  undefined8 result;\n  \n  raise_exception(6);\n  unrecovered_jump_table = (code *)0x80051bb;\n  result = exit_program(1);\n  array_pointer = (int *)((ulonglong)result >> 0x20);\n  uint_pointer = (uint *)result;\n  flags = *(ushort *)(array_pointer + 3);\n  value = (uint)flags;\n  if ((int)(value << 0x1c) < 0) {\n    offset = array_pointer[4];\n    if (offset != 0) {\n      temp_value = value << 0x1e;\n      is_zero = temp_value == 0;\n      size = *array_pointer;\n      if (is_zero) {\n        temp_value = array_pointer[5];\n      }\n      *array_pointer = offset;\n      if (!is_zero) {\n        temp_value = 0;\n      }\n      array_pointer[2] = temp_value;\n      for (size = size - offset; 0 < size; size = size - temp_value) {\n        temp_value = (*(code *)array_pointer[10])(uint_pointer,array_pointer[8],offset,size);\n        if (temp_value < 1) {\n          flags = *(ushort *)(array_pointer + 3);\n          goto LABtemp_variable080052b2;\n        }\n        offset = offset + temp_value;\n      }\n    }\n  }\n  else if (((0 < array_pointer[1]) || (0 < array_pointer[0x10])) &&\n          (function_pointer = (code *)array_pointer[0xb], function_pointer != (code *)0x0)) {\n    u_var10 = *uint_pointer;\n    *uint_pointer = 0;\n    if ((flags & 0x1000) == 0) {\n      offset = (*function_pointer)(uint_pointer,array_pointer[8],value & 0x1000,1);\n      if ((offset == -1) && (value = *uint_pointer, value != 0)) {\n        if ((value != 0x1d) && (value != 0x16)) {\n          *(ushort *)(array_pointer + 3) = *(ushort *)(array_pointer + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x0800527c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*unrecovered_jump_table)();\n          return;\n        }\n        *uint_pointer = u_var10;\n        goto LABtemp_variable080051d6;\n      }\n    }\n    else {\n      offset = array_pointer[0x15];\n    }\n    if (((int)((uint)*(ushort *)(array_pointer + 3) << 0x1d) < 0) &&\n       (offset = offset - array_pointer[1], array_pointer[0xd] != 0)) {\n      offset = offset - array_pointer[0x10];\n    }\n    offset = (*(code *)array_pointer[0xb])(uint_pointer,array_pointer[8],offset,0);\n    flags = *(ushort *)(array_pointer + 3);\n    if ((offset == -1) &&\n       ((0x1d < *uint_pointer || (-1 < (int)((0x20400001U >> (*uint_pointer & 0xff)) << 0x1f))))) {\nLABtemp_variable080052b2:\n      *(ushort *)(array_pointer + 3) = flags | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x080052bc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*unrecovered_jump_table)(0xffffffff);\n      return;\n    }\n    array_pointer[1] = 0;\n    *array_pointer = array_pointer[4];\n    if (((int)((uint)flags << 0x13) < 0) && ((offset != -1 || (*uint_pointer == 0)))) {\n      array_pointer[0x15] = offset;\n    }\n    temp_pointer = (int *)array_pointer[0xd];\n    *uint_pointer = u_var10;\n    if (temp_pointer != (int *)0x0) {\n      if (temp_pointer != array_pointer + 0x11) {\n        free_memory(uint_pointer);\n      }\n      array_pointer[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08005252. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*unrecovered_jump_table)();\n      return;\n    }\n  }\nLABtemp_variable080051d6:\n                    /* WARNING: Could not recover jumptable at 0x080051d8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*unrecovered_jump_table)(0);\n  return;\n}\n\n",
            "current_name": "handle_binary_function_080051ac",
            "entrypoint": "0x080051ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080051ac": "handle_binary_function_080051ac",
                "UNRECOVERED_JUMPTABLE_00": "unrecovered_jump_table",
                "_": "temp_variable",
                "_exit": "exit_program",
                "_free_r": "free_memory",
                "bVar11": "is_zero",
                "iVar2": "offset",
                "iVar3": "i_var_temp_5",
                "iVar4": "remaining",
                "iVar7": "temp_value",
                "iVar9": "size",
                "pcVar8": "function_pointer",
                "piVar3": "array_pointer",
                "piVar4": "temp_pointer",
                "puVar1": "uint_pointer",
                "raise": "raise_exception",
                "uVar10": "u_var10",
                "uVar12": "result",
                "uVar5": "value",
                "uVar6": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080052cc": {
            "additional_data": {
                "FUN_080052cc": {
                    "decode_and_process_data": 1,
                    "execute_function": 2,
                    "process_data": 8,
                    "process_function": 1
                },
                "UNRECOVERED_JUMPTABLE_00": {
                    "jmp_table": 2,
                    "jump_table": 14,
                    "jump_table_1": 1,
                    "jump_table_func": 1,
                    "jumptable": 4,
                    "jumptable_function": 1,
                    "unrecovered_jump_table": 1,
                    "unrecovered_jumptable": 1
                },
                "bVar10": {
                    "bool_var": 5,
                    "cond_flag": 1,
                    "condition_flag": 2,
                    "flag": 2,
                    "is_zero": 1
                },
                "iVar2": {
                    "condition": 1,
                    "count": 2,
                    "count1": 1,
                    "counter": 2,
                    "counter1": 1,
                    "counter_1": 1,
                    "index": 3,
                    "loop_counter1": 1,
                    "num_iterations": 2,
                    "offset": 2,
                    "param_array4": 1,
                    "param_value_1": 1,
                    "size": 1,
                    "temp1": 1,
                    "temp_value_1": 1,
                    "temp_var1": 4,
                    "value": 2,
                    "value_1": 1,
                    "var1": 3
                },
                "iVar6": {
                    "count2": 1,
                    "counter2": 1,
                    "counter_2": 1,
                    "increment": 1,
                    "inner_loop_var1": 1,
                    "loop_counter2": 1,
                    "offset": 1,
                    "temp": 1,
                    "temp5": 1,
                    "temp_count": 1,
                    "temp_index": 1,
                    "temp_offset": 1,
                    "temp_value": 3,
                    "temp_value_4": 1,
                    "temp_var": 4,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "temp_var3": 2,
                    "temp_var5": 1,
                    "temp_variable": 1,
                    "value_1": 1,
                    "value_2": 1,
                    "var3": 1,
                    "var4": 1,
                    "var5": 1
                },
                "iVar8": {
                    "count": 1,
                    "counter": 2,
                    "inner_loop_var2": 1,
                    "length": 3,
                    "loop_counter": 4,
                    "loop_variable": 1,
                    "offset": 1,
                    "temp6": 1,
                    "temp_counter": 1,
                    "temp_value_3": 1,
                    "temp_value_5": 1,
                    "temp_var": 1,
                    "temp_var2": 2,
                    "temp_var3": 1,
                    "temp_var4": 2,
                    "temp_var6": 1,
                    "temp_variable": 1,
                    "temp_variable_2": 1,
                    "value_4": 1,
                    "var3": 1,
                    "var4": 1,
                    "var5": 1,
                    "var8": 1
                },
                "param_1": {
                    "array_param": 3,
                    "array_parameter": 1,
                    "buffer": 1,
                    "data": 2,
                    "data_array": 2,
                    "data_buffer": 2,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "function_data": 1,
                    "input_array": 8,
                    "input_buffer": 1,
                    "input_data": 1,
                    "param_array": 5,
                    "parameter_1": 1,
                    "pointer_1": 1
                },
                "param_2": {
                    "arguments": 1,
                    "config": 2,
                    "data_array": 1,
                    "function_data": 1,
                    "info": 1,
                    "info_array": 3,
                    "info_buffer": 1,
                    "info_ptr": 1,
                    "input_values": 1,
                    "output_array": 3,
                    "output_buffer": 1,
                    "param_array": 3,
                    "param_list": 1,
                    "param_pointer": 1,
                    "param_pointer_array": 1,
                    "param_ptr": 1,
                    "param_ptr_array": 1,
                    "parameter_2": 1,
                    "pointer_2": 1,
                    "pointer_array": 1,
                    "pointer_param": 3,
                    "pointer_parameter": 1
                },
                "pcVar7": {
                    "callback": 2,
                    "func_ptr": 2,
                    "function_pointer": 18,
                    "function_ptr": 9
                },
                "piVar3": {
                    "data_pointer": 1,
                    "dynamic_ptr": 1,
                    "param_value_2": 1,
                    "pointer": 8,
                    "pointer1": 2,
                    "pointer_1": 1,
                    "pointer_3": 1,
                    "pointer_var": 1,
                    "pointer_var1": 1,
                    "ptr": 2,
                    "ptr_data": 1,
                    "ptr_offset": 1,
                    "ptr_value": 1,
                    "ptr_var": 1,
                    "ptr_var3": 1,
                    "temp2": 1,
                    "temp_pointer": 1,
                    "temp_var2": 3,
                    "var2": 2
                },
                "uVar1": {
                    "result": 11,
                    "return_value": 18
                },
                "uVar10": {
                    "bool_flag": 2,
                    "bool_temp": 1,
                    "bool_value": 6,
                    "bool_var": 1,
                    "bool_variable": 2,
                    "boolean": 1,
                    "boolean_variable": 2,
                    "condition": 1,
                    "flag": 1,
                    "flag_var": 1,
                    "is_zero": 1,
                    "var7": 1
                },
                "uVar4": {
                    "count": 1,
                    "short_value": 1,
                    "temp": 1,
                    "temp1": 1,
                    "temp3": 1,
                    "temp_val": 1,
                    "temp_value": 3,
                    "temp_value1": 1,
                    "temp_value_2": 1,
                    "temp_var1": 1,
                    "temp_var3": 1,
                    "u1": 1,
                    "u_short_value": 1,
                    "u_value1": 1,
                    "ushort_value": 6,
                    "ushort_var": 4,
                    "value": 2,
                    "value1": 1,
                    "var2": 1,
                    "var3": 1
                },
                "uVar5": {
                    "flag": 4,
                    "flags": 1,
                    "temp2": 1,
                    "temp4": 1,
                    "temp_val_2": 1,
                    "temp_value2": 1,
                    "temp_value_2": 2,
                    "temp_value_3": 1,
                    "temp_var2": 1,
                    "temp_var4": 1,
                    "u2": 1,
                    "u_value2": 1,
                    "ushort_flag": 1,
                    "ushort_temp": 2,
                    "ushort_val": 1,
                    "ushort_value": 3,
                    "ushort_value2": 1,
                    "ushort_var2": 1,
                    "ushort_variable": 2,
                    "value": 1,
                    "value2": 1,
                    "var3": 1,
                    "var4": 1
                },
                "uVar9": {
                    "original_value": 1,
                    "temp3": 2,
                    "temp7": 1,
                    "temp_result": 1,
                    "temp_val_3": 1,
                    "temp_value": 6,
                    "temp_value2": 1,
                    "temp_value3": 1,
                    "temp_value_3": 1,
                    "temp_value_4": 1,
                    "temp_value_6": 1,
                    "temp_var": 1,
                    "temp_var3": 2,
                    "temp_var5": 1,
                    "temp_var6": 1,
                    "temp_var7": 1,
                    "u4": 1,
                    "u_value3": 1,
                    "uint_value": 3,
                    "uint_var": 1,
                    "var6": 1,
                    "var9": 1
                },
                "unaff_r4": {
                    "additional_data1": 1,
                    "arg4": 1,
                    "first_unused_register": 1,
                    "register_var1": 1,
                    "temp1": 1,
                    "temp_var1": 1,
                    "unaff1": 2,
                    "unaff_data1": 1,
                    "unaff_r4": 2,
                    "unaff_var1": 3,
                    "unaffected_reg4": 1,
                    "unaffected_register4": 1,
                    "unaffected_register_4": 2,
                    "unassigned_r4": 1,
                    "unused1": 1,
                    "unused_var1": 2,
                    "unused_variable_1": 1,
                    "value1": 2,
                    "value_2": 1,
                    "var1": 2,
                    "var6": 1,
                    "var_r4": 1,
                    "variable1": 1
                },
                "unaff_r5": {
                    "additional_data2": 1,
                    "arg5": 1,
                    "register_var2": 1,
                    "second_unused_register": 1,
                    "temp2": 1,
                    "temp_var2": 1,
                    "unaff2": 2,
                    "unaff_data2": 1,
                    "unaff_r5": 2,
                    "unaff_var2": 3,
                    "unaffected_reg5": 1,
                    "unaffected_register5": 1,
                    "unaffected_register_5": 2,
                    "unassigned_r5": 1,
                    "unused2": 1,
                    "unused_var2": 2,
                    "unused_variable_2": 1,
                    "value2": 2,
                    "value_3": 1,
                    "var2": 2,
                    "var7": 1,
                    "var_r5": 1,
                    "variable2": 1
                }
            },
            "called": [
                "FUN_080053a0"
            ],
            "calling": [
                "FUN_08004a34"
            ],
            "code": "\nundefined4 decode_and_process_data_080052cc(uint *input_array,int *info_array)\n\n{\n  undefined4 return_value;\n  int temp_var1;\n  int *pointer;\n  uint ushort_value;\n  ushort flag;\n  int temp_var;\n  undefined4 unaff_var1;\n  undefined4 unaff_var2;\n  code *function_pointer;\n  int loop_counter;\n  uint temp_value;\n  code *jump_table;\n  bool bool_var;\n  \n  if (info_array[4] != 0) {\n    if ((input_array != (uint *)0x0) && (input_array[6] == 0)) {\n      __sinit();\n    }\n    if (info_array == &DAT_08005fc0) {\n      info_array = (int *)input_array[1];\n    }\n    else if (info_array == (int *)&DAT_08005fe0) {\n      info_array = (int *)input_array[2];\n    }\n    else if (info_array == (int *)&DAT_08005fa0) {\n      info_array = (int *)input_array[3];\n    }\n    if (*(short *)(info_array + 3) != 0) {\n      flag = *(ushort *)(info_array + 3);\n      ushort_value = (uint)flag;\n      if ((int)(ushort_value << 0x1c) < 0) {\n        temp_var1 = info_array[4];\n        if (temp_var1 != 0) {\n          temp_var = ushort_value << 0x1e;\n          bool_var = temp_var == 0;\n          loop_counter = *info_array;\n          if (bool_var) {\n            temp_var = info_array[5];\n          }\n          *info_array = temp_var1;\n          if (!bool_var) {\n            temp_var = 0;\n          }\n          info_array[2] = temp_var;\n          for (loop_counter = loop_counter - temp_var1; 0 < loop_counter; loop_counter = loop_counter - temp_var) {\n            temp_var = (*(code *)info_array[10])(input_array,info_array[8],temp_var1,loop_counter,unaff_var1,unaff_var2);\n            if (temp_var < 1) {\n              flag = *(ushort *)(info_array + 3);\n              goto LAB_080052b2;\n            }\n            temp_var1 = temp_var1 + temp_var;\n          }\n        }\n      }\n      else if (((0 < info_array[1]) || (0 < info_array[0x10])) &&\n              (function_pointer = (code *)info_array[0xb], function_pointer != (code *)0x0)) {\n        temp_value = *input_array;\n        *input_array = 0;\n        if ((flag & 0x1000) == 0) {\n          temp_var1 = (*function_pointer)(input_array,info_array[8],ushort_value & 0x1000,1);\n          if ((temp_var1 == -1) && (ushort_value = *input_array, ushort_value != 0)) {\n            if ((ushort_value != 0x1d) && (ushort_value != 0x16)) {\n              *(ushort *)(info_array + 3) = *(ushort *)(info_array + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x0800527c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              return_value = (*jump_table)();\n              return return_value;\n            }\n            *input_array = temp_value;\n            goto LAB_080051d6;\n          }\n        }\n        else {\n          temp_var1 = info_array[0x15];\n        }\n        if (((int)((uint)*(ushort *)(info_array + 3) << 0x1d) < 0) &&\n           (temp_var1 = temp_var1 - info_array[1], info_array[0xd] != 0)) {\n          temp_var1 = temp_var1 - info_array[0x10];\n        }\n        temp_var1 = (*(code *)info_array[0xb])(input_array,info_array[8],temp_var1,0);\n        flag = *(ushort *)(info_array + 3);\n        if ((temp_var1 == -1) &&\n           ((0x1d < *input_array || (-1 < (int)((0x20400001U >> (*input_array & 0xff)) << 0x1f))))) {\nLAB_080052b2:\n          *(ushort *)(info_array + 3) = flag | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x080052bc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          return_value = (*jump_table)(0xffffffff);\n          return return_value;\n        }\n        info_array[1] = 0;\n        *info_array = info_array[4];\n        if (((int)((uint)flag << 0x13) < 0) && ((temp_var1 != -1 || (*input_array == 0)))) {\n          info_array[0x15] = temp_var1;\n        }\n        pointer = (int *)info_array[0xd];\n        *input_array = temp_value;\n        if (pointer != (int *)0x0) {\n          if (pointer != info_array + 0x11) {\n            _free_r(input_array);\n          }\n          info_array[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08005252. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          return_value = (*jump_table)();\n          return return_value;\n        }\n      }\nLAB_080051d6:\n                    /* WARNING: Could not recover jumptable at 0x080051d8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      return_value = (*jump_table)(0);\n      return return_value;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "decode_and_process_data_080052cc",
            "entrypoint": "0x080052cc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080052cc": "decode_and_process_data_080052cc",
                "UNRECOVERED_JUMPTABLE_00": "jump_table",
                "bVar10": "bool_var",
                "iVar2": "temp_var1",
                "iVar6": "temp_var",
                "iVar8": "loop_counter",
                "param_1": "input_array",
                "param_2": "info_array",
                "pcVar7": "function_pointer",
                "piVar3": "pointer",
                "uVar1": "return_value",
                "uVar4": "ushort_value",
                "uVar5": "flag",
                "uVar9": "temp_value",
                "unaff_r4": "unaff_var1",
                "unaff_r5": "unaff_var2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800532c": {
            "additional_data": {
                "FUN_080048cc": {
                    "helper_function": 1,
                    "initialize_data": 1,
                    "process_data": 1
                },
                "FUN_0800532c": {
                    "initialize_data": 8,
                    "initialize_data_struct": 1,
                    "initialize_data_structure": 2,
                    "initialize_data_structures": 2,
                    "initialize_function": 6,
                    "initialize_param": 1,
                    "initialize_parameters": 3,
                    "initialize_params": 5,
                    "initialize_struct": 2,
                    "set_initial_values": 1
                },
                "LAB_08005686_1": {
                    "constant_label": 1,
                    "error_label": 1,
                    "jump_label": 1,
                    "label": 3,
                    "label1": 2,
                    "label_1": 1,
                    "some_label": 5
                },
                "param_1": {
                    "array": 1,
                    "data": 9,
                    "data_array": 1,
                    "data_struct": 1,
                    "data_structure": 2,
                    "data_structures": 1,
                    "output": 1,
                    "output_array": 3,
                    "output_buffer": 1,
                    "output_values": 1,
                    "param_array": 2,
                    "parameters": 3,
                    "params": 3,
                    "struct_pointer": 2
                },
                "param_2": {
                    "input_value1": 1,
                    "param2_value": 1,
                    "param_2_val": 1,
                    "param_value1": 1,
                    "value": 2,
                    "value1": 21,
                    "value_1": 4
                },
                "param_3": {
                    "input_value2": 1,
                    "param3_value": 1,
                    "param_3_val": 1,
                    "param_value2": 1,
                    "size": 2,
                    "value2": 21,
                    "value_2": 4
                }
            },
            "called": [
                "FUN_080048cc"
            ],
            "calling": [
                "FUN_080053a0"
            ],
            "code": "\nvoid initialize_data_structures_0800532c(undefined4 *data,undefined2 value1,undefined2 value2)\n\n{\n  *data = 0;\n  data[1] = 0;\n  data[2] = 0;\n  *(undefined2 *)(data + 3) = value1;\n  data[0x19] = 0;\n  *(undefined2 *)((int)data + 0xe) = value2;\n  data[4] = 0;\n  data[5] = 0;\n  data[6] = 0;\n  memset(data + 0x17,0,8);\n  data[9] = 0x8005609;\n  data[10] = 0x800562b;\n  data[0xb] = 0x8005663;\n  data[8] = data;\n  data[0xc] = &some_label;\n  return;\n}\n\n",
            "current_name": "initialize_data_structures_0800532c",
            "entrypoint": "0x0800532c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800532c": "initialize_data_structures_0800532c",
                "LAB_08005686_1": "some_label",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005374": {
            "additional_data": {
                "FUN_080048cc": {
                    "initialize_block": 1,
                    "initialize_data": 1,
                    "initialize_data_structure": 1
                },
                "FUN_08004978": {
                    "clear_blocks": 1,
                    "clear_data": 1,
                    "fill_data_structure_with_zeros": 1
                },
                "FUN_08005374": {
                    "allocate_and_initialize": 1,
                    "allocate_and_initialize_array": 5,
                    "allocate_and_initialize_data": 1,
                    "allocate_and_initialize_memory": 1,
                    "allocate_array": 1,
                    "allocate_initialized_memory": 2,
                    "allocate_memory": 11,
                    "allocate_memory_and_initialize": 1,
                    "allocate_memory_for_data_structure": 1,
                    "allocate_memory_for_struct": 1,
                    "create_data_structure": 1,
                    "create_dynamic_array": 2,
                    "initialize_data_structure": 2,
                    "initialize_dynamic_array": 1
                },
                "_malloc_r": {
                    "allocate": 1,
                    "allocate_memory": 2,
                    "custom_malloc": 1,
                    "malloc": 1
                },
                "iVar2": {
                    "allocation_size": 1,
                    "array_offset": 1,
                    "array_size": 5,
                    "block_size": 1,
                    "buffer_size": 3,
                    "index": 1,
                    "memory_size": 1,
                    "offset": 1,
                    "total_allocation_size": 1,
                    "total_array_size": 1,
                    "total_bytes": 1,
                    "total_memory_size": 1,
                    "total_size": 13
                },
                "memset": {
                    "initialize_memory": 4
                },
                "param_1": {
                    "array_size": 2,
                    "data_structure": 1,
                    "data_structure_ptr": 1,
                    "param_size": 1,
                    "size": 12,
                    "size_of_allocation": 3,
                    "size_of_array": 1,
                    "size_of_block": 1,
                    "size_of_element": 6,
                    "size_of_memory": 2,
                    "size_of_ptr": 1
                },
                "param_2": {
                    "count": 5,
                    "element_count": 1,
                    "element_size": 1,
                    "num_blocks": 1,
                    "num_elements": 11,
                    "num_of_blocks": 1,
                    "num_of_bytes": 1,
                    "num_of_elements": 5,
                    "number_of_elements": 3,
                    "param_2": 1,
                    "total_size": 1
                },
                "param_3": {
                    "data_size": 1,
                    "length": 1,
                    "param_3": 1
                },
                "puVar1": {
                    "allocated_array": 1,
                    "allocated_buffer": 1,
                    "allocated_memory": 11,
                    "allocated_memory_ptr": 2,
                    "array": 1,
                    "array_ptr": 4,
                    "data_structure": 3,
                    "dynamic_array": 1,
                    "dynamic_array_ptr": 1,
                    "memory_block": 1,
                    "memory_ptr": 1,
                    "ptr": 2,
                    "ptr_array": 1,
                    "struct_pointer": 1
                },
                "sizeofElement": {
                    "size_of_element": 1
                },
                "totalSize": {
                    "total_size": 1
                }
            },
            "called": [
                "FUN_080048cc",
                "FUN_08004978"
            ],
            "calling": [
                "FUN_08005400"
            ],
            "code": "\nundefined4 * allocate_initialized_memory_08005374(undefined4 size,int num_elements)\n\n{\n  undefined4 *allocated_memory;\n  int total_size;\n  \n  total_size = (num_elements + -1) * 0x68;\n  allocated_memory = (undefined4 *)allocate_memory(size,total_size + 0x74);\n  if (allocated_memory != (undefined4 *)0x0) {\n    *allocated_memory = 0;\n    allocated_memory[1] = num_elements;\n    allocated_memory[2] = allocated_memory + 3;\n    initialize_memory(allocated_memory + 3,0,total_size + 0x68);\n  }\n  return allocated_memory;\n}\n\n",
            "current_name": "allocate_initialized_memory_08005374",
            "entrypoint": "0x08005374",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005374": "allocate_initialized_memory_08005374",
                "_malloc_r": "allocate_memory",
                "iVar2": "total_size",
                "memset": "initialize_memory",
                "param_1": "size",
                "param_2": "num_elements",
                "puVar1": "allocated_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080053a0": {
            "additional_data": {
                "DAT_200000a4": {
                    "default_data": 1
                },
                "FUN_0800532c": {
                    "assign_values": 2,
                    "modify_values": 1,
                    "print_info": 1,
                    "set_additional_data": 1,
                    "set_data": 1,
                    "set_parameter": 1,
                    "set_parameters": 1,
                    "set_params": 1,
                    "set_value": 1,
                    "set_values": 6,
                    "update_data": 4,
                    "update_parameters": 3
                },
                "FUN_080053a0": {
                    "initialize_data": 14,
                    "initialize_function": 3,
                    "initialize_parameters": 10,
                    "initialize_params": 4
                },
                "FUN_08005400": {
                    "calculate": 1,
                    "calculate_value": 2,
                    "calculate_values": 1,
                    "get_data": 1,
                    "get_data_pointer": 1,
                    "get_values": 1,
                    "get_values_from_parameters": 1,
                    "initialize_data_array": 1,
                    "initialize_value": 1,
                    "initialize_values": 1,
                    "process_data": 8,
                    "retrieve_data": 1,
                    "set_values": 1,
                    "update_parameter": 1
                },
                "__sfp": {
                    "allocate_memory_block": 1,
                    "calculate_some_value": 1,
                    "calculate_value": 4,
                    "get_float_from_pointer": 1,
                    "get_float_param": 1,
                    "get_float_parameter": 1,
                    "get_float_pointer": 1,
                    "get_float_value": 1,
                    "get_fp_value": 1,
                    "get_initial_value": 1,
                    "get_some_value": 2,
                    "initialize_variable": 1,
                    "parse_data": 1,
                    "set_params": 1
                },
                "param_1": {
                    "array": 1,
                    "data": 8,
                    "data_array": 2,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "function_params": 2,
                    "p_params": 1,
                    "parameters": 10,
                    "params": 4
                },
                "param_2": {
                    "data1": 1,
                    "info1": 1,
                    "new_value1": 1,
                    "param1": 6,
                    "param2": 2,
                    "value1": 3,
                    "value_1": 1
                },
                "param_3": {
                    "data2": 1,
                    "info2": 1,
                    "new_value2": 1,
                    "param2": 6,
                    "param3": 2,
                    "value2": 3,
                    "value_2": 1
                },
                "param_4": {
                    "arg3": 1,
                    "param4": 3,
                    "value3": 11
                },
                "puVar2": {
                    "data": 1,
                    "data_ptr": 1,
                    "flag_pointer": 1,
                    "p_data": 1,
                    "parameter_ptr": 1,
                    "pointer": 12,
                    "pointer_var": 1,
                    "ptr": 4,
                    "temp": 1,
                    "temp_pointer": 2,
                    "temp_ptr": 3,
                    "temp_var": 1,
                    "temporary_var": 1,
                    "var_ptr2": 1
                },
                "std_isra_0": {
                    "do_something": 1,
                    "map_data": 1,
                    "modify_block_data": 1,
                    "set_some_value": 1,
                    "set_standard": 1,
                    "set_standard_parameter": 1,
                    "set_standard_value": 1,
                    "set_variable_value": 1,
                    "standardize_data": 2,
                    "standardize_param": 1,
                    "standardize_params": 1,
                    "standardize_value": 5
                },
                "uVar1": {
                    "result": 24,
                    "return_val": 1,
                    "return_value": 4,
                    "sfp_value": 1,
                    "status": 1
                }
            },
            "called": [
                "FUN_08005400",
                "FUN_0800532c"
            ],
            "calling": [
                "FUN_080050d0",
                "FUN_08004a34",
                "FUN_08005400",
                "FUN_08004fdc",
                "FUN_080052cc",
                "FUN_08004a84"
            ],
            "code": "\nvoid initialize_data_080053a0(undefined4 *parameters)\n\n{\n  undefined4 result;\n  undefined4 *pointer;\n  \n  if (parameters[6] == 0) {\n    parameters[0x12] = 0;\n    parameters[0x13] = 0;\n    parameters[0x14] = 0;\n    pointer = &DAT_200000a4;\n    parameters[10] = &LAB_08005320_1;\n    if (parameters == &DAT_200000a4) {\n      pointer = (undefined4 *)0x1;\n    }\n    if (parameters == &DAT_200000a4) {\n      parameters[6] = pointer;\n    }\n    result = calculate_value();\n    parameters[1] = result;\n    result = calculate_value(parameters);\n    parameters[2] = result;\n    result = calculate_value(parameters);\n    parameters[3] = result;\n    standardize_value(parameters[1],4,0);\n    standardize_value(parameters[2],9,1);\n    standardize_value(parameters[3],0x12,2);\n    parameters[6] = 1;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_080053a0",
            "entrypoint": "0x080053a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080053a0": "initialize_data_080053a0",
                "__sfp": "calculate_value",
                "param_1": "parameters",
                "puVar2": "pointer",
                "std_isra_0": "standardize_value",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005400": {
            "additional_data": {
                "0xc": {
                    "error_value": 1
                },
                "0xffff": {
                    "default_short_value": 1
                },
                "DAT_200000a4": {
                    "dat_block_initializer": 1,
                    "dat_init": 1,
                    "data": 1,
                    "initialized_data": 3,
                    "static_data": 1
                },
                "DAT_200000bc": {
                    "dat_check": 1,
                    "data_flag": 1,
                    "initialization_flag": 1,
                    "initialized": 2,
                    "is_initialized": 2
                },
                "DAT_200000ec": {
                    "block_list_head": 1,
                    "dat_ptr": 1,
                    "data_list": 1,
                    "data_structure": 1,
                    "more_data": 1,
                    "more_static_data": 1,
                    "struct_list_pointer": 1
                },
                "FUNK_080048cc": {
                    "process_data": 1
                },
                "FUNK_08005374": {
                    "helper_function_1": 1
                },
                "FUNK_080053a0": {
                    "helper_function_2": 1
                },
                "FUN_080048cc": {
                    "initialize_array": 1,
                    "reverse_data": 1,
                    "set_object_properties": 1
                },
                "FUN_08005374": {
                    "allocate_memory": 2,
                    "sub_function1": 1
                },
                "FUN_080053a0": {
                    "clean_up": 1,
                    "cleanup_memory": 1,
                    "initialize_object_properties": 1,
                    "sub_function2": 1
                },
                "FUN_08005400": {
                    "find_and_initialize_objects": 1,
                    "find_initialized_array": 1,
                    "find_initialized_block": 1,
                    "initialize": 1,
                    "initialize_array": 3,
                    "initialize_data": 2,
                    "initialize_data_structure": 6,
                    "initialize_data_structures": 10,
                    "initialize_device_info": 1,
                    "initialize_function": 1,
                    "initialize_objects": 1,
                    "initialize_struct": 2
                },
                "PTR_080048cc": {
                    "initialize_sub_structure": 1
                },
                "PTR_08005374": {
                    "allocate_memory2": 1
                },
                "__sfmoreglue": {
                    "allocate_memory": 11
                },
                "__sfmoreglue_retVal": {
                    "new_ptr": 1
                },
                "__sinit": {
                    "initialize": 1,
                    "initialize_data": 1,
                    "initialize_global_data": 2,
                    "initialize_globals": 1,
                    "initialize_static_data": 5
                },
                "memset": {
                    "clear_memory": 2,
                    "fill_with_zeros": 1,
                    "initialize_memory": 4,
                    "set_memory": 1,
                    "zero_out_memory": 1
                },
                "param_1": {
                    "array_pointer": 1,
                    "error_code": 6,
                    "error_flag": 3,
                    "info_array": 1,
                    "n_ptr": 1,
                    "object_pointer": 1,
                    "out_parameter": 1,
                    "output": 1,
                    "output_array": 1,
                    "output_buffer": 1,
                    "output_ptr": 1,
                    "p_data": 1,
                    "param1": 1,
                    "param_array": 1,
                    "param_pointer": 1,
                    "pointer": 1,
                    "result": 7,
                    "status": 1
                },
                "param_2": {
                    "arg1": 2,
                    "arg2": 1,
                    "input": 1,
                    "input_1": 1,
                    "num_elements": 1,
                    "param1": 2,
                    "param2": 14,
                    "param_2": 2,
                    "size": 3,
                    "val1": 1,
                    "value1": 3
                },
                "param_3": {
                    "arg2": 2,
                    "arg3": 1,
                    "count": 2,
                    "input_2": 1,
                    "param2": 2,
                    "param3": 15,
                    "param_3": 3,
                    "property_length": 1,
                    "val2": 1,
                    "value2": 3
                },
                "param_4": {
                    "arg3": 2,
                    "arg4": 1,
                    "input_3": 1,
                    "param3": 2,
                    "param4": 15,
                    "param4_value": 1,
                    "param_4": 6,
                    "val3": 1,
                    "value3": 2
                },
                "piVar1": {
                    "array_pointer1": 1,
                    "counter": 1,
                    "current_array": 5,
                    "current_block": 1,
                    "current_buffer": 1,
                    "current_element": 1,
                    "current_object": 2,
                    "current_pointer": 3,
                    "current_ptr": 5,
                    "current_struct": 1,
                    "current_struct_ptr": 1,
                    "inner_loop_counter": 1,
                    "inner_pointer1": 1,
                    "new_pointer1": 1,
                    "p_val1": 1,
                    "pointer1": 1,
                    "pointer_1": 1,
                    "ptr": 1,
                    "temp1": 1,
                    "temp_pointer1": 1
                },
                "piVar2": {
                    "array_pointer2": 1,
                    "current_block": 1,
                    "current_data": 1,
                    "current_element": 2,
                    "current_property": 1,
                    "current_sub_pointer": 1,
                    "current_subblock": 1,
                    "inner_array": 2,
                    "inner_element": 1,
                    "inner_pointer": 2,
                    "inner_pointer2": 1,
                    "inner_ptr": 4,
                    "nested_array": 1,
                    "new_pointer2": 1,
                    "next_array": 1,
                    "next_object": 1,
                    "next_ptr": 1,
                    "next_struct_ptr": 1,
                    "p_val2": 1,
                    "pointer2": 1,
                    "pointer_2": 1,
                    "struct_pointer": 1,
                    "temp2": 1,
                    "temp_pointer2": 1,
                    "temp_ptr": 1
                },
                "ppiVar3": {
                    "array_pointer_array": 1,
                    "array_pointers": 1,
                    "array_ptr_ptr": 1,
                    "block_list": 1,
                    "data_array_ptr": 1,
                    "data_list": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_struct_list": 1,
                    "data_structure_list": 1,
                    "data_structures": 1,
                    "double_pointer": 2,
                    "list_of_lists": 1,
                    "list_of_pointers": 1,
                    "list_of_ptrs": 1,
                    "nested_arrays_list": 1,
                    "object_linked_list": 1,
                    "object_list": 1,
                    "outer_ptr": 1,
                    "pointer_array": 2,
                    "pointer_to_pointer": 1,
                    "pp_data_structures": 1,
                    "pp_val": 1,
                    "ptr_array": 1,
                    "ptr_ptr": 2,
                    "struct_array_pointer": 1,
                    "struct_list": 1,
                    "temp_ptr": 1
                },
                "short": {
                    "short_val": 1
                }
            },
            "called": [
                "FUN_080048cc",
                "FUN_08005374",
                "FUN_080053a0"
            ],
            "calling": [
                "FUN_080053a0"
            ],
            "code": "\nint * initialize_data_structures_08005400(undefined4 *result,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *current_array;\n  int *inner_ptr;\n  int **ptr_ptr;\n  \n  if (DAT_200000bc == 0) {\n    initialize_static_data(&DAT_200000a4);\n  }\n  ptr_ptr = (int **)&DAT_200000ec;\n  do {\n    inner_ptr = ptr_ptr[2];\n    current_array = ptr_ptr[1];\n    while (current_array = (int *)((int)current_array + -1), -1 < (int)current_array) {\n      if (*(short_val *)(inner_ptr + 3) == 0) {\n        *(undefined2 *)((int)inner_ptr + 0xe) = 0xffff;\n        *(undefined2 *)(inner_ptr + 3) = 1;\n        inner_ptr[0x19] = 0;\n        *inner_ptr = 0;\n        inner_ptr[2] = 0;\n        inner_ptr[1] = 0;\n        inner_ptr[4] = 0;\n        inner_ptr[5] = 0;\n        inner_ptr[6] = 0;\n        initialize_memory(inner_ptr + 0x17,0,8,1,param4);\n        inner_ptr[0xd] = 0;\n        inner_ptr[0xe] = 0;\n        inner_ptr[0x12] = 0;\n        inner_ptr[0x13] = 0;\n        return inner_ptr;\n      }\n      inner_ptr = inner_ptr + 0x1a;\n    }\n    if (*ptr_ptr == (int *)0x0) {\n      current_array = (int *)allocate_memory(result,4);\n      *ptr_ptr = current_array;\n      if (current_array == (int *)0x0) {\n        *result = 0xc;\n        return (int *)0x0;\n      }\n    }\n    ptr_ptr = (int **)*ptr_ptr;\n  } while( true );\n}\n\n",
            "current_name": "initialize_data_structures_08005400",
            "entrypoint": "0x08005400",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005400": "initialize_data_structures_08005400",
                "__sfmoreglue": "allocate_memory",
                "__sinit": "initialize_static_data",
                "memset": "initialize_memory",
                "param_1": "result",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "current_array",
                "piVar2": "inner_ptr",
                "ppiVar3": "ptr_ptr",
                "short": "short_val"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080054b4": {
            "additional_data": {
                "FUN_080054b4": {
                    "check_and_set_file_permissions": 1,
                    "check_file_access": 1,
                    "check_file_attributes": 4,
                    "check_file_permission": 4,
                    "check_file_permissions": 15,
                    "check_file_status": 2,
                    "get_file_permission": 3,
                    "validate_file_permissions": 1
                },
                "auStack_4c": {
                    "buffer": 5,
                    "file_stat": 1,
                    "file_stat_buf": 1,
                    "local_buffer": 1,
                    "permission_buffer": 1,
                    "stack_array": 3,
                    "stack_buffer": 3,
                    "stack_variable": 3,
                    "stat_buffer": 5,
                    "status_buffer": 3,
                    "temp_buffer": 3,
                    "temporary_buffer": 2
                },
                "iVar1": {
                    "file_stat_result": 2,
                    "file_status": 3,
                    "fstat_result": 3,
                    "fstat_return_value": 1,
                    "result": 12,
                    "return_value": 1,
                    "stat_result": 2,
                    "status": 7
                },
                "local_48": {
                    "file_flags": 1,
                    "file_mode": 25,
                    "file_permission": 2,
                    "file_permissions": 2,
                    "file_stat_data": 1
                },
                "param_1": {
                    "fd": 3,
                    "file_descriptor": 28
                },
                "param_2": {
                    "buffer": 1,
                    "file_info": 18,
                    "file_info_pointer": 1,
                    "file_information": 3,
                    "file_stat": 6,
                    "file_stat_buffer": 2
                },
                "param_3": {
                    "access_mode": 1,
                    "access_rights": 2,
                    "access_type": 1,
                    "file_mode": 1,
                    "file_permission": 1,
                    "file_permissions": 1,
                    "flags": 2,
                    "mode": 2,
                    "opening_mode": 1,
                    "output": 1,
                    "output_code": 1,
                    "output_flag": 1,
                    "output_result": 1,
                    "permission": 1,
                    "permission_flag": 3,
                    "permission_flags": 2,
                    "permission_result": 2,
                    "permission_value": 1,
                    "permissions": 1,
                    "result": 2,
                    "result_flag": 1,
                    "result_flags": 1,
                    "status": 1
                },
                "param_4": {
                    "file_flags": 1,
                    "file_permissions": 2,
                    "is_executable": 20,
                    "is_shared": 1,
                    "output": 1,
                    "output_flag": 2,
                    "permission_status": 1,
                    "result": 2,
                    "status": 1
                },
                "uVar2": {
                    "access_flag": 1,
                    "access_rights": 1,
                    "access_type": 1,
                    "file_access": 1,
                    "flag": 1,
                    "mode_flag": 1,
                    "new_mode": 1,
                    "permission": 2,
                    "permission_code": 3,
                    "permission_flag": 6,
                    "permission_mask": 2,
                    "permission_mode": 1,
                    "permission_value": 2,
                    "permissions": 3,
                    "permissions_flag": 1,
                    "result": 2,
                    "result_code": 1,
                    "status_value": 1
                }
            },
            "called": [
                "FUN_080056d4"
            ],
            "calling": [
                "FUN_080054fc"
            ],
            "code": "\nundefined4 check_and_set_file_permissions_080054b4(undefined4 file_descriptor,int file_info,undefined4 *permission_flag,uint *is_executable)\n\n{\n  int result;\n  undefined4 permission_flag;\n  undefined stat_buffer [4];\n  uint file_mode;\n  \n  if ((*(short *)(file_info + 0xe) < 0) ||\n     (result = _fstat_r(file_descriptor,(int)*(short *)(file_info + 0xe),stat_buffer), result < 0)) {\n    *is_executable = 0;\n    if ((int)((uint)*(ushort *)(file_info + 0xc) << 0x18) < 0) {\n      permission_flag = 0x40;\n      goto LAB_080054f4;\n    }\n  }\n  else {\n    *is_executable = (uint)((file_mode & 0xf000) == 0x2000);\n  }\n  permission_flag = 0x400;\nLAB_080054f4:\n  *permission_flag = permission_flag;\n  return 0;\n}\n\n",
            "current_name": "check_and_set_file_permissions_080054b4",
            "entrypoint": "0x080054b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080054b4": "check_and_set_file_permissions_080054b4",
                "auStack_4c": "stat_buffer",
                "iVar1": "result",
                "local_48": "file_mode",
                "param_1": "file_descriptor",
                "param_2": "file_info",
                "param_3": "permission_flag",
                "param_4": "is_executable",
                "uVar2": "permission_flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080054fc": {
            "additional_data": {
                "FUM_080056f8": {
                    "process_function_one": 1
                },
                "FUN_08004978": {
                    "extract_data": 1,
                    "is_unknown_type": 1,
                    "process_function_three": 1
                },
                "FUN_080054b4": {
                    "modify_flags": 1,
                    "perform_operation": 1,
                    "process_function_two": 1
                },
                "FUN_080054fc": {
                    "decode_and_allocate_memory": 3,
                    "initialize_buffer": 2,
                    "initialize_connection": 2,
                    "initialize_data": 1,
                    "initialize_stream": 1,
                    "parse_and_allocate_memory": 1,
                    "parse_data": 2,
                    "parse_input": 2,
                    "parse_input_data": 1,
                    "process_data": 12,
                    "process_function": 1,
                    "process_input": 1,
                    "process_parameter": 1,
                    "process_parameters": 1
                },
                "FUN_080056f8": {
                    "process_param": 1,
                    "swhatbuf_r": 1
                },
                "LAB_08005320_1": {
                    "label": 1,
                    "placeholder": 1,
                    "some_constant": 1,
                    "some_label": 1
                },
                "__swhatbuf_r": {
                    "decode_data": 2,
                    "parse_parameters": 1,
                    "process_data_helper": 1,
                    "process_input": 2
                },
                "_isatty_r": {
                    "check_if_terminal": 2,
                    "check_terminal": 3,
                    "is_terminal": 1
                },
                "_malloc_r": {
                    "allocate_memory": 6
                },
                "iVar2": {
                    "alloc_result": 1,
                    "allocated_buffer": 3,
                    "allocated_mem": 2,
                    "allocated_memory": 12,
                    "allocation": 1,
                    "allocation_flag": 1,
                    "allocation_result": 1,
                    "malloc_result": 5,
                    "memory": 1,
                    "memory_block": 2,
                    "temp2": 1
                },
                "local_14": {
                    "buffer": 3,
                    "data_array_copy": 1,
                    "data_copy": 1,
                    "local_buffer": 1,
                    "local_data": 2,
                    "local_ptr": 2,
                    "local_var2": 1,
                    "local_variable": 1,
                    "local_variable2": 1,
                    "output_array": 1,
                    "output_data": 1,
                    "param_4": 1,
                    "param_addr": 1,
                    "param_array": 1,
                    "pointer": 2,
                    "temp_array": 2,
                    "temp_buffer": 3,
                    "temp_data": 1,
                    "temp_param": 1,
                    "tmp_buffer": 1,
                    "tmp_ptr": 1,
                    "working_buffer": 1
                },
                "local_18": {
                    "data_base_copy": 1,
                    "data_size": 1,
                    "input_data": 1,
                    "input_length": 1,
                    "input_size": 1,
                    "input_size_copy": 1,
                    "length": 2,
                    "local_buffer_size": 2,
                    "local_data_length": 1,
                    "local_size": 1,
                    "local_var1": 1,
                    "local_variable1": 1,
                    "output_size": 1,
                    "param_3": 1,
                    "param_size": 3,
                    "size": 7,
                    "stream_size": 1,
                    "temp_buffer_size": 1,
                    "temp_size": 1,
                    "temp_value1": 1
                },
                "param_1": {
                    "arg1": 1,
                    "base_address": 1,
                    "buffer_size": 4,
                    "connection_handle": 1,
                    "connection_ptr": 1,
                    "context": 1,
                    "data": 2,
                    "data_base": 1,
                    "data_length": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_size": 3,
                    "input_buffer": 1,
                    "input_param": 1,
                    "input_ptr": 1,
                    "input_size": 3,
                    "input_value": 2,
                    "output_buffer": 1,
                    "param1": 2,
                    "param_1": 1,
                    "stream_pointer": 1
                },
                "param_2": {
                    "arg2": 1,
                    "buffer": 5,
                    "connection_data": 1,
                    "connection_parameters": 1,
                    "data": 6,
                    "data_array": 2,
                    "data_ptr": 1,
                    "input": 1,
                    "input_array": 4,
                    "input_data": 1,
                    "output_buffer": 2,
                    "output_ptr": 1,
                    "param2": 1,
                    "param_arr": 1,
                    "parameters": 1,
                    "ptr_to_data": 1,
                    "stream_info_pointer": 1
                },
                "uVar1": {
                    "buffer_size": 2,
                    "decoded_value": 1,
                    "flags": 2,
                    "processed_data": 1,
                    "result": 13,
                    "result_flag": 1,
                    "status": 6,
                    "status_flag": 1,
                    "sw_buffer": 1,
                    "swhatbuf_result": 1,
                    "temp1": 1
                }
            },
            "called": [
                "FUN_080056f8",
                "FUN_080054b4",
                "FUN_08004978"
            ],
            "calling": [
                "FUN_080050d0"
            ],
            "code": "\nvoid process_data_080054fc(int buffer_size,int *data)\n\n{\n  ushort result;\n  int allocated_memory;\n  int size;\n  int *buffer;\n  \n  if (-1 < (int)((uint)*(ushort *)(data + 3) << 0x1e)) {\n    size = buffer_size;\n    buffer = data;\n    result = process_input(buffer_size,data,&size,&buffer);\n    allocated_memory = allocate_memory(buffer_size,size);\n    if (allocated_memory != 0) {\n      *(undefined **)(buffer_size + 0x28) = &label;\n      *data = allocated_memory;\n      *(ushort *)(data + 3) = *(ushort *)(data + 3) | 0x80;\n      data[5] = size;\n      data[4] = allocated_memory;\n      if ((buffer != (int *)0x0) &&\n         (allocated_memory = check_terminal(buffer_size,(int)*(short *)((int)data + 0xe)), allocated_memory != 0)) {\n        *(ushort *)(data + 3) = *(ushort *)(data + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(data + 3) = result | *(ushort *)(data + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(data + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(data + 3) = *(ushort *)(data + 3) & 0xfffc | 2;\n  }\n  *data = (int)data + 0x47;\n  data[4] = (int)data + 0x47;\n  data[5] = 1;\n  return;\n}\n\n",
            "current_name": "process_data_080054fc",
            "entrypoint": "0x080054fc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080054fc": "process_data_080054fc",
                "LAB_08005320_1": "label",
                "__swhatbuf_r": "process_input",
                "_isatty_r": "check_terminal",
                "_malloc_r": "allocate_memory",
                "iVar2": "allocated_memory",
                "local_14": "buffer",
                "local_18": "size",
                "param_1": "buffer_size",
                "param_2": "data",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800557c": {
            "called": [],
            "calling": [
                "FUN_080048dc",
                "FUN_08004978"
            ],
            "code": "\nvoid FUNC_0800557c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800557c",
            "entrypoint": "0x0800557c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800557c": "FUNC_0800557c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800557e": {
            "called": [],
            "calling": [
                "FUN_080048dc",
                "FUN_08004978"
            ],
            "code": "\nvoid FUNC_0800557e(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800557e",
            "entrypoint": "0x0800557e",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800557e": "FUNC_0800557e"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080055d0": {
            "additional_data": {
                "DAT_200000a0": {
                    "array": 2,
                    "data": 1,
                    "data_array": 1,
                    "kill_data": 1,
                    "signal_array": 1
                },
                "DAT_20000674": {
                    "error_code": 2,
                    "error_value": 1,
                    "kill_result": 1,
                    "kill_signal": 1,
                    "kill_value": 1
                },
                "FUN_080040fc": {
                    "get_process_id": 1
                },
                "FUN_080055d0": {
                    "execute_syscall": 1,
                    "handle_signal": 4,
                    "kill_process": 9,
                    "perform_action": 1,
                    "process_signal": 2
                },
                "_getpid_r": {
                    "get_process_id": 3
                },
                "_kill": {
                    "kill": 1,
                    "send_signal": 1,
                    "terminate_process": 1
                },
                "iVar3": {
                    "array_element": 2,
                    "current_signal": 1,
                    "current_value": 1,
                    "data_value": 1,
                    "element": 1,
                    "element_value": 1,
                    "entry_point": 1,
                    "flag": 1,
                    "function_pointer": 1,
                    "function_ptr": 1,
                    "handler": 1,
                    "handler_addr": 1,
                    "index": 5,
                    "process_id": 2,
                    "result": 1,
                    "return_value": 1,
                    "signal_func_ptr": 1,
                    "signal_handler": 1,
                    "syscall_func": 1,
                    "temp_variable": 1,
                    "value": 3,
                    "variable1": 2
                },
                "in_lr": {
                    "constant3": 1,
                    "in_link_register": 1,
                    "in_lr": 1,
                    "in_lr_value": 1,
                    "linked_register": 1,
                    "register_lr": 1,
                    "register_value": 1,
                    "return_address": 2,
                    "unaffected_variable6": 1,
                    "unassigned_variable_3": 1,
                    "unknown_value": 1,
                    "unused": 1,
                    "unused_param": 1,
                    "unused_var3": 1,
                    "var3": 1
                },
                "param_1": {
                    "action": 1,
                    "input": 4,
                    "input_parameter": 1,
                    "input_value": 7,
                    "param": 2,
                    "pid": 1,
                    "process_code": 1,
                    "process_id": 4,
                    "signal": 2,
                    "signal_num": 1,
                    "signal_number": 6,
                    "syscall_number": 1
                },
                "pcVar4": {
                    "callback_fn": 1,
                    "code_pointer": 2,
                    "code_ptr": 1,
                    "func_pointer": 1,
                    "func_ptr": 1,
                    "function_pointer": 10,
                    "function_ptr": 11,
                    "handler": 1,
                    "p_code": 1,
                    "signal_function": 1,
                    "signal_handler": 1
                },
                "piVar1": {
                    "array_pointer": 2,
                    "array_ptr": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "error_code": 2,
                    "kill_status": 1,
                    "p_signal": 1,
                    "pointer": 1,
                    "pointer1": 2,
                    "pointer_to_signal": 1,
                    "process_list": 1,
                    "process_status": 2,
                    "ptr_to_variable1": 1,
                    "result": 3,
                    "result_pointer": 1,
                    "result_ptr": 2,
                    "ret_value": 1,
                    "signal": 1,
                    "signal_array": 1,
                    "signal_handler": 1,
                    "signal_handler_index": 1,
                    "signal_handlers": 1,
                    "status": 1
                },
                "puVar5": {
                    "array_pointer_pointer": 1,
                    "array_ptr_2": 1,
                    "data_pointer": 2,
                    "data_pointer2": 1,
                    "data_ptr": 1,
                    "error_code_ptr": 1,
                    "func_pointer_array": 1,
                    "kill_ptr": 1,
                    "p_saved_var5": 1,
                    "pointer": 2,
                    "pointer2": 2,
                    "pointer_array": 3,
                    "pointer_ptr": 1,
                    "pointer_to_array": 1,
                    "pointer_to_variable": 1,
                    "process_list_ptr": 1,
                    "process_pointer": 1,
                    "process_status_ptr": 1,
                    "ptr": 1,
                    "ptr_to_data": 1,
                    "ptr_to_variable2": 1,
                    "signal_array": 1,
                    "signal_array_ptr": 1,
                    "signal_handler_ptr": 1,
                    "signal_handler_table": 1,
                    "signal_handlers_ptr": 1
                },
                "uVar2": {
                    "current_pid": 1,
                    "current_process_id": 1,
                    "pid": 11,
                    "pid_result": 1,
                    "pid_value": 2,
                    "pid_variable": 1,
                    "process_id": 11,
                    "result": 1,
                    "return_value": 2
                },
                "unaff_r4": {
                    "constant1": 1,
                    "register4": 1,
                    "unaff_arg4": 1,
                    "unaff_resource_4": 1,
                    "unaff_value4": 1,
                    "unaffected_r4": 1,
                    "unaffected_variable4": 1,
                    "unassigned_variable_1": 1,
                    "unknown_value": 1,
                    "unused": 1,
                    "unused_param": 1,
                    "unused_var1": 2,
                    "var1": 1
                },
                "unaff_r5": {
                    "constant2": 1,
                    "register5": 1,
                    "unaff_arg5": 1,
                    "unaff_resource_5": 1,
                    "unaff_value5": 1,
                    "unaffected_r5": 1,
                    "unaffected_variable5": 1,
                    "unassigned_variable_2": 1,
                    "unknown_value": 1,
                    "unused": 1,
                    "unused_param": 1,
                    "unused_var2": 2,
                    "var2": 1
                }
            },
            "called": [
                "FUN_080040fc",
                "FUN_08005604"
            ],
            "calling": [
                "FUN_080051ac"
            ],
            "code": "\nint kill_process_080055d0(uint input_value)\n\n{\n  int *result;\n  undefined4 pid;\n  int index;\n  code *function_ptr;\n  undefined4 unused_var1;\n  undefined4 unused_var2;\n  undefined4 return_address;\n  undefined4 *pointer_array;\n  \n  result = DAT_200000a0;\n  pointer_array = &DAT_200000a0;\n  if (0x1f < input_value) {\n    *DAT_200000a0 = 0x16;\n    return -1;\n  }\n  index = DAT_200000a0[0x11];\n  if ((index != 0) && (function_ptr = *(code **)(index + input_value * 4), function_ptr != (code *)0x0)) {\n    if (function_ptr != (code *)0x1) {\n      if (function_ptr == (code *)0xffffffff) {\n        *DAT_200000a0 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(index + input_value * 4) = 0;\n      (*function_ptr)(input_value);\n    }\n    return 0;\n  }\n  pid = get_process_id(DAT_200000a0);\n  DAT_20000674 = 0;\n  index = send_signal(pid,input_value,input_value,0,pointer_array,unused_var1,unused_var2,return_address);\n  if ((index == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return index;\n}\n\n",
            "current_name": "kill_process_080055d0",
            "entrypoint": "0x080055d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080055d0": "kill_process_080055d0",
                "_getpid_r": "get_process_id",
                "_kill": "send_signal",
                "iVar3": "index",
                "in_lr": "return_address",
                "param_1": "input_value",
                "pcVar4": "function_ptr",
                "piVar1": "result",
                "puVar5": "pointer_array",
                "uVar2": "pid",
                "unaff_r4": "unused_var1",
                "unaff_r5": "unused_var2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005604": {
            "called": [
                "FUN_0800410c"
            ],
            "calling": [
                "FUN_080055d0"
            ],
            "code": "\nundefined4 _getpid(void)\n\n{\n  return 1;\n}\n\n",
            "current_name": "FUN_08005604",
            "entrypoint": "0x08005604",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "FUN_08005608": {
            "additional_data": {
                "FUN_08005608": {
                    "modify_value": 1,
                    "process_data": 3,
                    "read_and_modify_value": 1,
                    "read_and_update_counter": 1,
                    "read_and_update_data": 2,
                    "read_and_update_value": 4,
                    "read_and_update_values": 2,
                    "update_data": 16,
                    "update_read_count": 1
                },
                "FUN_0800573c": {
                    "init_struct": 1,
                    "sub_function": 1
                },
                "_read_r": {
                    "read_from_registers": 1
                },
                "bVar3": {
                    "is_positive": 4,
                    "is_positive_read": 2,
                    "is_read_successful": 10,
                    "is_success": 6,
                    "is_successful": 3,
                    "is_successful_read": 1,
                    "is_valid": 1,
                    "is_valid_read": 1,
                    "read_success": 2,
                    "read_successful": 1
                },
                "iVar1": {
                    "bytes_read": 6,
                    "num_bytes_read": 1,
                    "read_bytes": 2,
                    "read_result": 21,
                    "result": 1
                },
                "param_1": {
                    "arg1": 1,
                    "argument1": 1,
                    "buffer": 2,
                    "buffer_size": 1,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "file_descriptor": 15,
                    "ptr": 1,
                    "src": 1,
                    "stream": 7
                },
                "param_2": {
                    "arg2": 1,
                    "argument2": 1,
                    "buffer_index": 1,
                    "data": 5,
                    "data_address": 4,
                    "data_buffer": 3,
                    "data_offset": 3,
                    "data_pointer": 1,
                    "data_struct": 2,
                    "data_struct_address": 1,
                    "data_structure": 2,
                    "dst": 1,
                    "offset": 1,
                    "param_value": 1,
                    "struct_address": 3,
                    "struct_pointer": 1
                },
                "uVar2": {
                    "data": 1,
                    "modified_value": 1,
                    "new_data": 1,
                    "new_value": 4,
                    "updated_counter": 1,
                    "updated_value": 23
                }
            },
            "called": [
                "FUN_0800573c"
            ],
            "calling": [],
            "code": "\nvoid read_and_update_data_08005608(undefined4 file_descriptor,int data)\n\n{\n  int read_result;\n  uint updated_value;\n  bool is_read_successful;\n  \n  read_result = read_from_registers(file_descriptor,(int)*(short *)(data + 0xe));\n  is_read_successful = -1 < read_result;\n  if (is_read_successful) {\n    updated_value = *(int *)(data + 0x54) + read_result;\n  }\n  else {\n    updated_value = *(ushort *)(data + 0xc) & 0xffffefff;\n  }\n  if (is_read_successful) {\n    *(uint *)(data + 0x54) = updated_value;\n  }\n  if (!is_read_successful) {\n    *(short *)(data + 0xc) = (short)updated_value;\n  }\n  return;\n}\n\n",
            "current_name": "read_and_update_data_08005608",
            "entrypoint": "0x08005608",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005608": "read_and_update_data_08005608",
                "_read_r": "read_from_registers",
                "bVar3": "is_read_successful",
                "iVar1": "read_result",
                "param_1": "file_descriptor",
                "param_2": "data",
                "uVar2": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800562a": {
            "additional_data": {
                "DAT_20000674": {
                    "error_code": 1,
                    "write_error": 1
                },
                "FUN_080040ec": {
                    "check_error": 1
                },
                "FUN_0800562a": {
                    "write_data_to_file": 7,
                    "write_file": 1,
                    "write_to_file": 21,
                    "write_to_file_if_negative_offset": 1
                },
                "FUN_08005718": {
                    "set_file_offset": 1
                },
                "_lseek_r": {
                    "update_file_position": 1
                },
                "_write": {
                    "write_data": 1
                },
                "iVar1": {
                    "bytes_written": 4,
                    "result": 2,
                    "write_result": 22
                },
                "in_lr": {
                    "extra_param3": 1,
                    "link_register": 1,
                    "unused_var3": 2
                },
                "param_1": {
                    "file_descriptor": 30,
                    "output_buffer": 1
                },
                "param_2": {
                    "buffer": 4,
                    "buffer_address": 7,
                    "buffer_pointer": 1,
                    "data": 1,
                    "data_info": 1,
                    "data_pointer": 1,
                    "file_info": 3,
                    "file_info_address": 1,
                    "file_info_pointer": 1,
                    "file_info_ptr": 1,
                    "header": 1,
                    "header_address": 3,
                    "header_offset": 2,
                    "header_pointer": 1,
                    "input_buffer": 1,
                    "struct_address": 2
                },
                "param_3": {
                    "buffer": 12,
                    "buffer_address": 1,
                    "buffer_pointer": 1,
                    "data": 14,
                    "data_address": 2,
                    "data_buffer": 1
                },
                "param_4": {
                    "buffer_size": 5,
                    "count": 5,
                    "data_size": 9,
                    "size": 12
                },
                "unaff_r4": {
                    "arg4": 1,
                    "extra_param1": 1,
                    "unused_register4": 1,
                    "unused_var1": 2
                },
                "unaff_r5": {
                    "arg5": 1,
                    "extra_param2": 1,
                    "unused_register5": 1,
                    "unused_var2": 2
                }
            },
            "called": [
                "FUN_08005718",
                "FUN_080040ec"
            ],
            "calling": [],
            "code": "\nvoid write_data_to_file_0800562a(int *file_descriptor,int buffer_address,undefined4 data,undefined4 size)\n\n{\n  int write_result;\n  undefined4 unused_var1;\n  undefined4 unused_var2;\n  undefined4 unused_var3;\n  \n  if ((int)((uint)*(ushort *)(buffer_address + 0xc) << 0x17) < 0) {\n    update_file_position(file_descriptor,(int)*(short *)(buffer_address + 0xe),0,2);\n  }\n  *(ushort *)(buffer_address + 0xc) = *(ushort *)(buffer_address + 0xc) & 0xefff;\n  DAT_20000674 = 0;\n  write_result = write_data((int)*(short *)(buffer_address + 0xe),data,size,size,size,unused_var1,unused_var2,\n                 unused_var3);\n  if ((write_result == -1) && (DAT_20000674 != 0)) {\n    *file_descriptor = DAT_20000674;\n  }\n  return;\n}\n\n",
            "current_name": "write_data_to_file_0800562a",
            "entrypoint": "0x0800562a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800562a": "write_data_to_file_0800562a",
                "_lseek_r": "update_file_position",
                "_write": "write_data",
                "iVar1": "write_result",
                "in_lr": "unused_var3",
                "param_1": "file_descriptor",
                "param_2": "buffer_address",
                "param_3": "data",
                "param_4": "size",
                "unaff_r4": "unused_var1",
                "unaff_r5": "unused_var2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005662": {
            "additional_data": {
                "FUN_08005662": {
                    "check_and_modify_permissions": 1,
                    "file_operation": 1,
                    "file_seek_and_update_flag": 1,
                    "improve_func": 1,
                    "improved_seek": 1,
                    "lseek_and_set_flag": 1,
                    "lseek_and_update": 1,
                    "lseek_and_update_flag": 1,
                    "perform_file_seek": 2,
                    "perform_lseek": 2,
                    "process_file": 3,
                    "reverse_seek": 1,
                    "seek_and_set_file_pointer": 1,
                    "seek_and_set_flag": 1,
                    "seek_and_update": 1,
                    "seek_and_update_flags": 1,
                    "seek_file_and_set_flag": 1,
                    "seek_file_and_set_permissions": 1,
                    "set_file_pointer": 1,
                    "update_file_access_status": 1,
                    "update_file_offset": 2,
                    "update_file_pointer": 1,
                    "update_file_status": 1,
                    "update_seek_position": 1,
                    "verify_and_set_file_offset": 1
                },
                "_lseek_r": {
                    "seek_function": 1
                },
                "bVar3": {
                    "error_occurred": 1,
                    "is_error": 10,
                    "is_lseek_error": 2,
                    "is_seek_error": 4,
                    "is_seek_failed": 3,
                    "is_seek_successful": 1,
                    "seek_failed": 9,
                    "seek_failure": 1
                },
                "iVar1": {
                    "file_seek_result": 1,
                    "lseek_result": 2,
                    "result": 3,
                    "seek_result": 24,
                    "status": 1
                },
                "param_1": {
                    "fd": 2,
                    "file_descriptor": 26,
                    "file_handle": 1,
                    "fs_descriptor": 1,
                    "stream": 1
                },
                "param_2": {
                    "buffer_address": 2,
                    "buffer_ptr": 1,
                    "context": 3,
                    "context_ptr": 1,
                    "data": 1,
                    "data_buffer": 1,
                    "data_ptr": 1,
                    "data_struct": 2,
                    "data_struct_offset": 1,
                    "info": 1,
                    "memory_address": 1,
                    "struct_address": 4,
                    "struct_offset": 2,
                    "struct_pointer": 2,
                    "struct_ptr": 5,
                    "structure_address": 1,
                    "structure_offset": 1,
                    "structure_pointer": 1
                },
                "uVar2": {
                    "flag": 4,
                    "flags": 6,
                    "modified_flag": 5,
                    "modified_flags": 3,
                    "new_flag": 1,
                    "old_flags": 1,
                    "permission": 1,
                    "permission_flags": 1,
                    "updated_flag": 4,
                    "updated_flags": 2,
                    "updated_status": 1,
                    "updated_value": 2
                }
            },
            "called": [
                "FUN_08005718"
            ],
            "calling": [],
            "code": "\nvoid process_file_08005662(undefined4 file_descriptor,int struct_ptr)\n\n{\n  int seek_result;\n  ushort flags;\n  bool is_error;\n  \n  seek_result = seek_function(file_descriptor,(int)*(short *)(struct_ptr + 0xe));\n  is_error = seek_result == -1;\n  if (is_error) {\n    flags = *(ushort *)(struct_ptr + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(struct_ptr + 0x54) = seek_result;\n    flags = *(ushort *)(struct_ptr + 0xc) | 0x1000;\n  }\n  if (is_error) {\n    *(ushort *)(struct_ptr + 0xc) = flags;\n  }\n  if (!is_error) {\n    *(ushort *)(struct_ptr + 0xc) = flags;\n  }\n  return;\n}\n\n",
            "current_name": "process_file_08005662",
            "entrypoint": "0x08005662",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005662": "process_file_08005662",
                "_lseek_r": "seek_function",
                "bVar3": "is_error",
                "iVar1": "seek_result",
                "param_1": "file_descriptor",
                "param_2": "struct_ptr",
                "uVar2": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080056d4": {
            "additional_data": {
                "DAT_20000674": {
                    "default_status": 1,
                    "error_code_value": 1,
                    "permission_result": 1,
                    "temporary_value": 1
                },
                "FUN_080056d4": {
                    "check_and_assign_error_code": 1,
                    "check_and_assign_file_stats": 1,
                    "check_and_assign_fstat_result": 1,
                    "check_and_assign_stat_result": 1,
                    "check_and_assign_status": 1,
                    "check_and_set_param": 1,
                    "check_file_system_permissions": 1,
                    "check_fstat_and_assign": 1,
                    "file_stat": 2,
                    "file_status": 1,
                    "get_and_assign_fstat_status": 1,
                    "get_file_size_and_assign": 1,
                    "get_file_size_or_set_error_code": 1,
                    "get_file_stats": 1,
                    "get_file_status": 2,
                    "improve_file_stat": 1,
                    "set_file_permissions": 1,
                    "set_file_status": 2,
                    "set_param_if_fstat_fails": 1,
                    "update_file_permission": 1,
                    "update_file_status": 4,
                    "update_stat_info": 1,
                    "update_status": 1,
                    "update_value_if_fstat_fails": 1
                },
                "_fstat": {
                    "get_file_status": 2
                },
                "iVar1": {
                    "file_stat_error": 1,
                    "file_stat_result": 5,
                    "file_status": 3,
                    "fstat_result": 2,
                    "fstat_return_value": 1,
                    "fstat_status": 1,
                    "stat_result": 3,
                    "status": 7,
                    "status_check": 1,
                    "status_check_result": 1,
                    "status_result": 1
                },
                "param_1": {
                    "error_code": 1,
                    "error_ptr": 1,
                    "file_exists_ptr": 1,
                    "file_permission": 1,
                    "file_permissions": 1,
                    "file_stats": 1,
                    "file_status": 5,
                    "output": 3,
                    "output_data": 1,
                    "output_param": 1,
                    "output_status": 1,
                    "output_value": 1,
                    "pointer_to_status": 1,
                    "result": 6,
                    "result_pointer": 1,
                    "result_ptr": 3,
                    "return_value": 1,
                    "status_variable": 1
                },
                "param_2": {
                    "fd": 4,
                    "file_descriptor": 27
                },
                "param_3": {
                    "buf": 3,
                    "file_stat_address": 1,
                    "file_stat_buffer": 1,
                    "file_status": 1,
                    "stat_buf": 2,
                    "stat_buffer": 21,
                    "stat_structure": 1,
                    "stat_structure_pointer": 1
                },
                "param_4": {
                    "buf_size": 1,
                    "buffer_length": 1,
                    "buffer_size": 12,
                    "file_descriptor_flag": 1,
                    "file_path": 1,
                    "file_stat_size": 1,
                    "flags": 1,
                    "len": 1,
                    "length": 1,
                    "mode": 1,
                    "path": 3,
                    "size": 1,
                    "stat_buffer_length": 1,
                    "stat_buffer_size": 5
                }
            },
            "called": [
                "FUN_080040d6"
            ],
            "calling": [
                "FUN_080054b4"
            ],
            "code": "\nvoid update_file_status_080056d4(int *result,undefined4 file_descriptor,undefined4 stat_buffer,undefined4 buffer_size)\n\n{\n  int status;\n  \n  DAT_20000674 = 0;\n  status = get_file_status(file_descriptor,stat_buffer,stat_buffer,0,buffer_size);\n  if ((status == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return;\n}\n\n",
            "current_name": "update_file_status_080056d4",
            "entrypoint": "0x080056d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080056d4": "update_file_status_080056d4",
                "_fstat": "get_file_status",
                "iVar1": "status",
                "param_1": "result",
                "param_2": "file_descriptor",
                "param_3": "stat_buffer",
                "param_4": "buffer_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080056f8": {
            "additional_data": {
                "DAT_20000674": {
                    "previous_status": 1,
                    "saved_output_param": 1,
                    "saved_tty": 2,
                    "saved_tty_status": 2,
                    "saved_value": 1,
                    "terminal_result": 1,
                    "terminal_value": 1,
                    "tty_value": 2
                },
                "FUN_080056f8": {
                    "check_and_assign": 1,
                    "check_and_assign_stdout": 1,
                    "check_and_assign_tty": 2,
                    "check_and_assign_tty_status": 3,
                    "check_and_assign_tty_value": 1,
                    "check_and_assign_value": 2,
                    "check_and_save": 1,
                    "check_and_save_tty_status": 1,
                    "check_and_set_is_tty": 1,
                    "check_and_set_param": 1,
                    "check_and_set_tty": 1,
                    "check_and_set_tty_mode": 1,
                    "check_if_terminal_and_save_value": 1,
                    "check_is_terminal": 2,
                    "check_terminal_and_assign_value": 1,
                    "check_terminal_and_set_param": 1,
                    "detect_and_assign_tty": 1,
                    "find_and_set_tty_value": 1,
                    "initialize_and_copy_value": 1,
                    "isatty_and_assign": 1,
                    "set_terminal_value": 1,
                    "set_tty_value": 1,
                    "update_param_if_not_tty": 1,
                    "update_param_value": 1,
                    "update_param_with_terminal_status": 1,
                    "update_terminal_status": 1
                },
                "_isatty": {
                    "check_if_terminal": 2,
                    "check_terminal_status": 1,
                    "is_terminal_function": 1
                },
                "iVar1": {
                    "check_tty": 1,
                    "is_attty_result": 1,
                    "is_terminal": 8,
                    "is_tty": 10,
                    "is_tty_result": 2,
                    "isatty_result": 1,
                    "terminal_check_result": 1,
                    "tty_check_result": 1
                },
                "param_1": {
                    "output": 2,
                    "output_param": 1,
                    "output_pointer": 1,
                    "output_ptr": 4,
                    "output_status": 2,
                    "output_value": 4,
                    "output_variable": 1,
                    "param_array": 1,
                    "param_ptr": 1,
                    "result": 9,
                    "result_pointer": 1,
                    "result_ptr": 2,
                    "status_pointer": 1,
                    "terminal_value": 1
                },
                "param_2": {
                    "fd": 1,
                    "file_descriptor": 21,
                    "input": 1,
                    "input_param": 1,
                    "input_value": 4,
                    "stream_descriptor": 1,
                    "terminal_status": 1,
                    "tty_file_descriptor": 1
                }
            },
            "called": [
                "FUN_080040e0"
            ],
            "calling": [
                "FUN_080054fc"
            ],
            "code": "\nvoid check_and_assign_tty_status_080056f8(int *result,undefined4 file_descriptor)\n\n{\n  int is_tty;\n  \n  DAT_20000674 = 0;\n  is_tty = check_if_terminal(file_descriptor);\n  if ((is_tty == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return;\n}\n\n",
            "current_name": "check_and_assign_tty_status_080056f8",
            "entrypoint": "0x080056f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080056f8": "check_and_assign_tty_status_080056f8",
                "_isatty": "check_if_terminal",
                "iVar1": "is_tty",
                "param_1": "result",
                "param_2": "file_descriptor"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005718": {
            "additional_data": {
                "DAT_20000674": {
                    "error_flag": 1,
                    "error_value": 1
                },
                "FUN_08005718": {
                    "file_seek_and_assign_error": 1,
                    "find_and_assign_offset": 1,
                    "handle_file_operation": 1,
                    "improve_file_seek": 2,
                    "improved_file_seek": 1,
                    "initialize_seek": 1,
                    "perform_file_operation": 1,
                    "perform_file_seek": 1,
                    "perform_lseek": 1,
                    "read_and_check_seek_error": 1,
                    "read_and_set_offset": 1,
                    "read_and_set_value": 1,
                    "reposition_file_pointer": 1,
                    "seek_and_assign": 2,
                    "seek_and_assign_error": 1,
                    "seek_and_assign_value": 3,
                    "seek_and_set": 1,
                    "seek_and_set_error": 1,
                    "seek_and_set_param": 1,
                    "seek_and_set_result": 1,
                    "seek_and_set_value": 1,
                    "seek_and_store_error": 1,
                    "set_file_pointer_and_check_error": 1,
                    "update_file_pointer": 1,
                    "update_file_position": 1
                },
                "iVar1": {
                    "lseek_result": 2,
                    "result": 5,
                    "seek_result": 22
                },
                "param_1": {
                    "file_descriptor": 2,
                    "file_error": 1,
                    "file_result": 1,
                    "output": 2,
                    "output_param": 1,
                    "output_status": 1,
                    "output_value": 4,
                    "pointer_to_update": 1,
                    "result": 14,
                    "result_pointer": 3,
                    "result_ptr": 1
                },
                "param_2": {
                    "file_descriptor": 29,
                    "file_descriptor_source": 1,
                    "file_handle": 1
                },
                "param_3": {
                    "file_offset": 1,
                    "offset": 30
                },
                "param_4": {
                    "origin": 8,
                    "seek_type": 1,
                    "whence": 22
                }
            },
            "called": [
                "FUN_080040e4"
            ],
            "calling": [
                "FUN_08005662",
                "FUN_0800562a"
            ],
            "code": "\nvoid seek_and_assign_value_08005718(int *result,undefined4 file_descriptor,undefined4 offset,undefined4 whence)\n\n{\n  int seek_result;\n  \n  DAT_20000674 = 0;\n  seek_result = _lseek(file_descriptor,offset,whence,whence,whence);\n  if ((seek_result == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return;\n}\n\n",
            "current_name": "seek_and_assign_value_08005718",
            "entrypoint": "0x08005718",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005718": "seek_and_assign_value_08005718",
                "iVar1": "seek_result",
                "param_1": "result",
                "param_2": "file_descriptor",
                "param_3": "offset",
                "param_4": "whence"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800573c": {
            "additional_data": {
                "FUN_0800573c": {
                    "read_and_assign": 3,
                    "read_and_assign_error": 9,
                    "read_and_assign_error_code": 2,
                    "read_and_assign_if_error": 1,
                    "read_and_check": 1,
                    "read_and_handle_error": 2,
                    "read_and_set": 1,
                    "read_and_set_param": 2,
                    "read_and_store_data": 1,
                    "read_and_store_error": 2,
                    "read_and_store_error_code": 1,
                    "read_and_store_value": 1,
                    "read_and_update": 2,
                    "read_and_update_param": 1,
                    "read_file_and_assign_value": 2
                },
                "iVar1": {
                    "read_result": 25,
                    "read_return_value": 1,
                    "read_status": 2
                },
                "param_1": {
                    "error_code": 2,
                    "error_ptr": 1,
                    "error_value": 1,
                    "output": 5,
                    "output_data": 1,
                    "output_param": 2,
                    "output_ptr": 3,
                    "output_value": 1,
                    "result": 10,
                    "result_pointer": 1,
                    "result_ptr": 4
                },
                "param_2": {
                    "file_descriptor": 30,
                    "ptr_to_read": 1
                },
                "param_3": {
                    "buffer": 29,
                    "buffer_ptr": 1,
                    "size_to_read": 1
                },
                "param_4": {
                    "buffer_size": 2,
                    "count": 26,
                    "count_of_bytes": 1,
                    "length": 1,
                    "unused_param": 1
                }
            },
            "called": [
                "FUN_080040e8"
            ],
            "calling": [
                "FUN_08005608"
            ],
            "code": "\nvoid read_and_assign_error_code_0800573c(int *result,undefined4 file_descriptor,undefined4 buffer,undefined4 count)\n\n{\n  int read_result;\n  \n  DAT_20000674 = 0;\n  read_result = _read(file_descriptor,buffer,count,count,count);\n  if ((read_result == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return;\n}\n\n",
            "current_name": "read_and_assign_error_code_0800573c",
            "entrypoint": "0x0800573c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800573c": "read_and_assign_error_code_0800573c",
                "iVar1": "read_result",
                "param_1": "result",
                "param_2": "file_descriptor",
                "param_3": "buffer",
                "param_4": "count"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005760": {
            "additional_data": {
                "FUN_08005760": {
                    "handle_abort_function": 1,
                    "handle_binary_function": 1,
                    "handle_main_function": 1,
                    "handle_recoverable_errors": 1,
                    "initialize_and_call_function": 1,
                    "initialize_and_call_sub_functions": 1,
                    "initialize_and_handle_data": 2,
                    "initialize_binary_data": 1,
                    "initialize_data": 11,
                    "initialize_data_values": 1,
                    "initialize_flags": 4,
                    "initialize_variables": 4,
                    "reset_variables": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "jmp_table": 2,
                    "jmp_tbl": 1,
                    "jump_table": 7,
                    "jumptable": 2,
                    "jumptable_function": 1
                },
                "abort": {
                    "abort": 1
                },
                "handle_binary_function": {
                    "handle_binary_function": 1
                },
                "handle_binary_function_080051ac": {
                    "binary_function": 1,
                    "handle_binary_function": 21,
                    "handle_sub_function": 1,
                    "process_binary_function": 5,
                    "process_data": 1
                },
                "initialize_flags": {
                    "initialize_flags": 1
                }
            },
            "called": [
                "FUN_080051ac"
            ],
            "calling": [
                "FUN_080047c0"
            ],
            "code": "\nvoid initialize_and_handle_data_08005760(void)\n\n{\n  code *jump_table;\n  \n  jump_table = initialize_and_handle_data_08005760;\n  abort();\n  if (-1 < DAT_200005fc << 0x1f) {\n    DAT_200005fc = 1;\n  }\n  if (-1 < DAT_200005f8 << 0x1f) {\n    DAT_200005f8 = 1;\n  }\n  if (-1 < DAT_200005f4 << 0x1f) {\n    DAT_200005f4 = 1;\n  }\n  if (-1 < DAT_200005f0 << 0x1f) {\n    DAT_200005f0 = 1;\n  }\n  if (-1 < DAT_200005ec << 0x1f) {\n    DAT_200005ec = 1;\n  }\n  if (-1 < DAT_200005e8 << 0x1f) {\n    DAT_200005e8 = 1;\n  }\n  if (-1 < DAT_200005e4 << 0x1f) {\n    DAT_200005e4 = 1;\n  }\n  if (-1 < DAT_200005e0 << 0x1f) {\n    DAT_200005e0 = 1;\n  }\n  if (-1 < DAT_200005dc << 0x1f) {\n    DAT_200005dc = 1;\n  }\n  if (-1 < DAT_200005d8 << 0x1f) {\n    DAT_200005d8 = 1;\n  }\n  if (-1 < DAT_200005d4 << 0x1f) {\n    DAT_200005d4 = 1;\n  }\n  if (-1 < DAT_200005d0 << 0x1f) {\n    DAT_200005d0 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x080057f8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "initialize_and_handle_data_08005760",
            "entrypoint": "0x08005760",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005760": "initialize_and_handle_data_08005760",
                "UNRECOVERED_JUMPTABLE": "jump_table"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080059f8": {
            "called": [],
            "calling": [
                "FUN_080001ac",
                "FUN_08004884"
            ],
            "code": "\nvoid FUNC_080059f8(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080059f8",
            "entrypoint": "0x080059f8",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080059f8": "FUNC_080059f8"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005a04": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_08005a04(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005a04",
            "entrypoint": "0x08005a04",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005a04": "FUNC_08005a04"
            },
            "skipped": true,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_080001ac",
            "FUN_08000230",
            "FUN_080002d0",
            "FUN_08000300",
            "FUN_080005e0",
            "FUN_080005e4",
            "FUN_08000600",
            "FUN_0800066c",
            "FUN_08000690",
            "FUN_080006b4",
            "FUN_08000728",
            "FUN_0800076c",
            "FUN_080007f0",
            "FUN_080008cc",
            "FUN_080008e2",
            "FUN_08000998",
            "FUN_08000a00",
            "FUN_08000a4e",
            "FUN_08000a7a",
            "FUN_08000b04",
            "FUN_08000b54",
            "FUN_08000c64",
            "FUN_08000c8c",
            "FUN_08000d3c",
            "FUN_08000d8e",
            "FUN_08000d98",
            "FUN_08000de4",
            "FUN_08000e18",
            "FUN_08000e30",
            "FUN_08000e3c",
            "FUN_08000e60",
            "FUN_08000ec4",
            "FUN_08000ee0",
            "FUN_08000f0c",
            "FUN_08000f2c",
            "FUN_08000f4e",
            "FUN_08000f56",
            "FUN_08000f72",
            "FUN_08000f8c",
            "FUN_08000fb4",
            "FUN_08001198",
            "FUN_080011a4",
            "FUN_080011c0",
            "FUN_0800124a",
            "FUN_08001256",
            "FUN_08001420",
            "FUN_08001440",
            "FUN_08001460",
            "FUN_080014ec",
            "FUN_08001578",
            "FUN_080015bc",
            "FUN_0800160e",
            "FUN_0800165a",
            "FUN_08001684",
            "FUN_0800171a",
            "FUN_08001864",
            "FUN_08001904",
            "FUN_080019a0",
            "FUN_08001ab0",
            "FUN_08001bfc",
            "FUN_08001d00",
            "FUN_08001e68",
            "FUN_08001f9c",
            "FUN_0800201c",
            "FUN_080023b4",
            "FUN_08002488",
            "FUN_080025e0",
            "FUN_080025ec",
            "FUN_0800260c",
            "FUN_0800262c",
            "FUN_0800268e",
            "FUN_080026ce",
            "FUN_08002848",
            "FUN_08002864",
            "FUN_080028d4",
            "FUN_080028f0",
            "FUN_08002940",
            "FUN_0800295c",
            "FUN_080029c8",
            "FUN_08002d0c",
            "FUN_08002d72",
            "FUN_08002dd0",
            "FUN_08002eb2",
            "FUN_08002efa",
            "FUN_08002f4c",
            "FUN_08002f66",
            "FUN_08002ffc",
            "FUN_0800312c",
            "FUN_08003138",
            "FUN_0800314e",
            "FUN_0800316c",
            "FUN_0800318c",
            "FUN_080031fc",
            "FUN_08003380",
            "FUN_0800339c",
            "FUN_080033c8",
            "FUN_080033d8",
            "FUN_0800340c",
            "FUN_08003414",
            "FUN_0800346c",
            "FUN_08003476",
            "FUN_08003486",
            "FUN_080034b6",
            "FUN_080034ce",
            "FUN_080034da",
            "FUN_080034f4",
            "FUN_08003506",
            "FUN_0800351e",
            "FUN_0800352e",
            "FUN_0800354a",
            "FUN_0800355e",
            "FUN_08003582",
            "FUN_08003594",
            "FUN_080035bc",
            "FUN_080035fc",
            "FUN_08003750",
            "FUN_08003754",
            "FUN_0800376e",
            "FUN_0800377c",
            "FUN_0800387c",
            "FUN_08003880",
            "FUN_080038d0",
            "FUN_08003900",
            "FUN_08003978",
            "FUN_08003cc8",
            "FUN_08003d18",
            "FUN_08003dd0",
            "FUN_08003df4",
            "FUN_08003e18",
            "FUN_08003e54",
            "FUN_08003eac",
            "FUN_08003f00",
            "FUN_08003f24",
            "FUN_08003f48",
            "FUN_08004094",
            "FUN_080040d0",
            "FUN_080040d6",
            "FUN_080040e0",
            "FUN_080040e4",
            "FUN_080040e8",
            "FUN_080040ec",
            "FUN_080040f8",
            "FUN_080040fc",
            "FUN_0800410c",
            "FUN_08004110",
            "FUN_080041bc",
            "FUN_08004204",
            "FUN_08004240",
            "FUN_080042ac",
            "FUN_080042e8",
            "FUN_08004364",
            "FUN_08004388",
            "FUN_08004444",
            "FUN_08004460",
            "FUN_0800447c",
            "FUN_080044d8",
            "FUN_08004544",
            "FUN_08004560",
            "FUN_08004640",
            "FUN_08004658",
            "FUN_08004678",
            "FUN_080046b4",
            "FUN_080047d0",
            "FUN_080047fe",
            "FUN_08004808",
            "FUN_08004844",
            "FUN_08004860",
            "FUN_08004884",
            "FUN_080048cc",
            "FUN_080048dc",
            "FUN_08004978",
            "FUN_08004a34",
            "FUN_08004a60",
            "FUN_08004a84",
            "FUN_08004cb0",
            "FUN_08004d9c",
            "FUN_08004fdc",
            "FUN_0800500c",
            "FUN_080050d0",
            "FUN_080051ac",
            "FUN_080052cc",
            "FUN_0800532c",
            "FUN_08005374",
            "FUN_080053a0",
            "FUN_08005400",
            "FUN_080054b4",
            "FUN_080054fc",
            "FUN_080055d0",
            "FUN_08005608",
            "FUN_0800562a",
            "FUN_08005662",
            "FUN_080056d4",
            "FUN_080056f8",
            "FUN_08005718",
            "FUN_0800573c"
        ],
        [
            "FUN_08000682",
            "FUN_08000c4c",
            "FUN_08004648"
        ],
        [
            "FUN_080047c0",
            "FUN_08005760"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 679104
}