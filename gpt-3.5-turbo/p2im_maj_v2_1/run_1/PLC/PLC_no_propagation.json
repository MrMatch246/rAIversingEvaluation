{
    "functions": {
        "FUN_080001ac": {
            "additional_data": {
                "DAT_20000104": {
                    "data_flag": 2,
                    "flag": 18,
                    "flag_value": 1
                },
                "FUN_080001ac": {
                    "initialize_data": 2,
                    "initialize_data_flag": 3,
                    "initialize_flag": 24,
                    "initialize_flag_if_not_set": 2
                },
                "param_1": {
                    "data": 2,
                    "flag": 1,
                    "input": 14,
                    "input_data": 2,
                    "input_parameter": 1,
                    "input_value": 9,
                    "param": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_080059f8"
            ],
            "calling": [],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080001b8) */\n\nundefined4 initialize_data_flag_080001ac(undefined4 input)\n\n{\n  if ((char)DAT_20000104 == '\\0') {\n    DAT_20000104._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "current_name": "initialize_data_flag_080001ac",
            "entrypoint": "0x080001ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080001ac": "initialize_data_flag_080001ac",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000230": {
            "additional_data": {
                "FUN_08000230": {
                    "decode_data": 1,
                    "find_byte_in_buffer": 1,
                    "find_byte_sequence": 22,
                    "find_byte_sequence_offset": 1,
                    "find_first_occurrence": 1,
                    "find_last_occurrence": 2,
                    "find_next_byte_sequence": 1,
                    "find_next_occurrence": 1,
                    "reverse_find_byte": 1
                },
                "bVar1": {
                    "byte_val": 2,
                    "byte_value": 1,
                    "current_byte": 26,
                    "value": 1
                },
                "bVar13": {
                    "bit_0_2": 1,
                    "bit_0_result": 1,
                    "bool_1": 1,
                    "byte_0": 1,
                    "byte_check_1": 1,
                    "byte_flag1": 1,
                    "check1": 2,
                    "condition_1": 1,
                    "first_condition": 1,
                    "flag_1": 1,
                    "flag_5": 1,
                    "is_byte_1_nonzero": 1,
                    "is_byte_equal_xor_shifted": 1,
                    "is_byte_match2": 1,
                    "is_byte_non_zero": 1,
                    "is_byte_nonzero": 2,
                    "is_byte_set": 1,
                    "is_second_byte_match": 1,
                    "is_xor_result_1_nonzero": 1,
                    "is_xor_result_2nd_byte_nonzero": 1,
                    "not_zero_0": 1,
                    "xor_bit_0": 1,
                    "xor_byte_2_flag": 1,
                    "xor_check1": 1,
                    "xor_result2_0": 1,
                    "xor_result_8": 1
                },
                "bVar14": {
                    "bit_8_2": 1,
                    "bit_8_result": 1,
                    "bool_2": 1,
                    "byte_2_flag": 1,
                    "byte_8": 1,
                    "byte_check_2": 1,
                    "byte_flag2": 1,
                    "check2": 2,
                    "condition_2": 1,
                    "flag_6": 1,
                    "flag_9": 1,
                    "is_byte_2_nonzero": 1,
                    "is_byte_equal_xor_shifted_8": 1,
                    "is_byte_match2": 1,
                    "is_byte_non_zero_shifted8": 1,
                    "is_byte_nonzero_high": 1,
                    "is_byte_nonzero_shift8": 1,
                    "is_byte_set_2": 1,
                    "is_third_byte_match": 1,
                    "is_xor_result_1_nonzero_2": 1,
                    "is_xor_result_2nd_byte_nonzero_shifted_8": 1,
                    "not_zero_8": 1,
                    "second_condition": 1,
                    "xor_bit_8": 1,
                    "xor_check1": 1,
                    "xor_result2_1": 1,
                    "xor_result_16": 1
                },
                "bVar15": {
                    "bit_16_2": 1,
                    "bit_16_result": 1,
                    "bool_3": 1,
                    "byte_16": 1,
                    "byte_3_flag": 1,
                    "byte_check_3": 1,
                    "byte_flag3": 1,
                    "check3": 2,
                    "condition_3": 1,
                    "flag_17": 1,
                    "flag_7": 1,
                    "is_byte_3_nonzero": 1,
                    "is_byte_equal_xor_shifted_16": 1,
                    "is_byte_match2": 1,
                    "is_byte_non_zero_shifted16": 1,
                    "is_byte_nonzero_mid": 1,
                    "is_byte_nonzero_shift16": 1,
                    "is_byte_set_3": 1,
                    "is_fourth_byte_match": 1,
                    "is_xor_result_1_nonzero_3": 1,
                    "is_xor_result_2nd_byte_nonzero_shifted_16": 1,
                    "not_zero_16": 1,
                    "third_condition": 1,
                    "xor_bit_16": 1,
                    "xor_check1": 1,
                    "xor_result2_2": 1,
                    "xor_result_24": 1
                },
                "bVar16": {
                    "bit_24_2": 1,
                    "bit_24_result": 1,
                    "bool_4": 1,
                    "byte_24": 1,
                    "byte_4_flag": 1,
                    "byte_check_4": 1,
                    "byte_flag4": 1,
                    "check4": 2,
                    "condition_4": 1,
                    "flag_25": 1,
                    "flag_8": 1,
                    "fourth_condition": 1,
                    "is_aligned_match": 1,
                    "is_byte_4_nonzero": 1,
                    "is_byte_equal_xor_shifted_24": 1,
                    "is_byte_match2": 1,
                    "is_byte_non_zero_shifted24": 1,
                    "is_byte_nonzero_low": 1,
                    "is_byte_nonzero_shift24": 1,
                    "is_byte_set_4": 1,
                    "is_xor_result_1_nonzero_4": 1,
                    "is_xor_result_2nd_byte_nonzero_shifted_24": 1,
                    "not_zero_24": 1,
                    "xor_bit_24": 1,
                    "xor_check1": 1,
                    "xor_result2_3": 1,
                    "xor_result_32": 1
                },
                "bVar17": {
                    "carry_1": 1
                },
                "bVar18": {
                    "carry_2": 1
                },
                "bVar19": {
                    "carry_3": 1
                },
                "bVar20": {
                    "carry_4": 1
                },
                "cVar2": {
                    "bit_0": 6,
                    "bit_0_flag": 1,
                    "byte_1": 1,
                    "c_var2": 1,
                    "char1": 2,
                    "first_byte_check": 1,
                    "first_byte_match": 1,
                    "flag_0": 1,
                    "flag_1": 1,
                    "found_check": 1,
                    "is_byte_equal": 1,
                    "is_byte_match": 1,
                    "is_byte_zero": 5,
                    "is_current_byte_zero": 1,
                    "is_zero_1": 1,
                    "mask_0": 1,
                    "mask_1": 1,
                    "mask_8": 1,
                    "should_increment_byte_1": 1,
                    "zero_check_1": 1
                },
                "cVar3": {
                    "bit_8": 6,
                    "bit_8_flag": 1,
                    "byte_2": 1,
                    "c_var3": 1,
                    "char2": 2,
                    "flag_2": 1,
                    "flag_8": 1,
                    "found_check": 1,
                    "is_byte_8_zero": 1,
                    "is_byte_equal_shifted_8": 1,
                    "is_byte_match": 1,
                    "is_byte_zero_8th_bit": 1,
                    "is_byte_zero_high": 1,
                    "is_byte_zero_shift8": 1,
                    "is_byte_zero_shifted_8": 1,
                    "is_current_byte_zero_shifted8": 1,
                    "is_zero_2": 1,
                    "mask_16": 1,
                    "mask_2": 1,
                    "mask_8": 1,
                    "second_byte_check": 1,
                    "second_byte_match": 1,
                    "should_increment_byte_2": 1,
                    "zero_check_2": 1
                },
                "cVar4": {
                    "bit_16": 6,
                    "bit_16_flag": 1,
                    "byte_3": 1,
                    "c_var4": 1,
                    "char3": 2,
                    "flag_16": 1,
                    "flag_3": 1,
                    "found_check": 1,
                    "is_byte_16_zero": 1,
                    "is_byte_equal_shifted_16": 1,
                    "is_byte_match": 1,
                    "is_byte_zero_16th_bit": 1,
                    "is_byte_zero_mid": 1,
                    "is_byte_zero_shift16": 1,
                    "is_byte_zero_shifted_16": 1,
                    "is_current_byte_zero_shifted16": 1,
                    "is_zero_3": 1,
                    "mask_16": 1,
                    "mask_24": 1,
                    "mask_3": 1,
                    "should_increment_byte_3": 1,
                    "third_byte_check": 1,
                    "third_byte_match": 1,
                    "zero_check_3": 1
                },
                "cVar5": {
                    "bit_24": 6,
                    "bit_24_flag": 1,
                    "byte_4": 1,
                    "c_var5": 1,
                    "char4": 2,
                    "flag_24": 1,
                    "flag_4": 1,
                    "found_check": 1,
                    "fourth_byte_check": 1,
                    "fourth_byte_match": 1,
                    "is_byte_24_zero": 1,
                    "is_byte_equal_shifted_24": 1,
                    "is_byte_match": 1,
                    "is_byte_zero_24th_bit": 1,
                    "is_byte_zero_low": 1,
                    "is_byte_zero_shift24": 1,
                    "is_byte_zero_shifted_24": 1,
                    "is_current_byte_zero_shifted24": 1,
                    "is_zero_4": 1,
                    "mask_24": 1,
                    "mask_32": 1,
                    "mask_4": 1,
                    "should_increment_byte_4": 1,
                    "zero_check_4": 1
                },
                "param_1": {
                    "array": 1,
                    "buffer": 3,
                    "data": 19,
                    "data_pointer": 1,
                    "input_array": 1,
                    "input_buffer": 1,
                    "input_data": 1,
                    "input_ptr": 1,
                    "input_sequence": 1,
                    "sequence": 1,
                    "source_data": 1
                },
                "param_2": {
                    "byte": 1,
                    "byte_sequence": 1,
                    "byte_to_find": 11,
                    "search_byte": 3,
                    "target": 2,
                    "target_byte": 12,
                    "target_value": 1
                },
                "param_3": {
                    "array_length": 2,
                    "buffer_length": 3,
                    "buffer_size": 1,
                    "data_length": 8,
                    "data_size": 5,
                    "length": 9,
                    "num_bytes": 1,
                    "sequence_length": 1,
                    "size": 1
                },
                "pbVar6": {
                    "aligned_byte_address": 1,
                    "buffer": 1,
                    "byte_pointer_1": 1,
                    "current_byte": 1,
                    "current_position": 1,
                    "final_byte": 1,
                    "found_byte": 1,
                    "next_byte": 8,
                    "next_byte_address": 1,
                    "next_byte_pointer": 2,
                    "next_byte_ptr": 2,
                    "next_ptr": 1,
                    "output_array": 1,
                    "result": 4,
                    "result_pointer": 1,
                    "result_ptr": 3
                },
                "pbVar8": {
                    "byte_pointer_2": 1,
                    "current_byte_pointer": 1,
                    "end_ptr": 1,
                    "found_byte_ptr": 1,
                    "matching_byte_address": 1,
                    "next_byte": 2,
                    "next_data_ptr": 2,
                    "next_ptr": 1,
                    "next_result_pointer": 1,
                    "output_byte": 1,
                    "previous_position": 1,
                    "result": 12,
                    "result_byte_pointer": 1,
                    "result_ptr": 3,
                    "result_ptr_iter": 1,
                    "temp_result": 1
                },
                "puVar7": {
                    "current_array_element": 1,
                    "current_byte": 1,
                    "current_byte_ptr": 1,
                    "current_data": 1,
                    "current_data_pointer": 1,
                    "current_data_ptr": 3,
                    "current_pointer": 1,
                    "current_ptr": 6,
                    "current_uint": 1,
                    "current_uint_position": 1,
                    "data_ptr": 2,
                    "input_ptr_iter": 1,
                    "next_data": 1,
                    "next_int_ptr": 1,
                    "next_ptr": 1,
                    "next_uint": 2,
                    "next_uint_address": 1,
                    "next_uint_pointer": 1,
                    "pointer": 1,
                    "ptr": 2,
                    "uint_pointer": 1
                },
                "uVar10": {
                    "aligned_buffer_length": 1,
                    "aligned_data_size": 3,
                    "aligned_length": 7,
                    "aligned_size": 1,
                    "array_length_multiple": 1,
                    "buffer_aligned_length": 1,
                    "buffer_size_aligned": 1,
                    "byte_aligned_length": 1,
                    "data_length_aligned": 2,
                    "data_length_mod8": 1,
                    "data_size_mod_8": 1,
                    "length": 1,
                    "length_aligned": 2,
                    "length_mod_8": 1,
                    "length_modulo": 1,
                    "num_bytes_align": 1,
                    "num_iterations": 2,
                    "remaining_data_size": 1,
                    "remaining_length": 1,
                    "rounded_data_length": 1
                },
                "uVar11": {
                    "bitwise_result_1": 1,
                    "byte_chunk": 1,
                    "byte_xor": 1,
                    "byte_xor_result1": 1,
                    "first_align_comparison": 1,
                    "input_byte_xored": 1,
                    "masked_data_1": 1,
                    "result_8": 1,
                    "result_bit_mask": 1,
                    "temporary_1": 1,
                    "xor_1": 1,
                    "xor_byte_1": 1,
                    "xor_result": 4,
                    "xor_result1": 1,
                    "xor_result_1": 5,
                    "xor_result_1st_byte": 1,
                    "xor_result_32": 1,
                    "xored1": 1,
                    "xored_0": 1,
                    "xored_byte": 1,
                    "xored_byte1": 2,
                    "xored_byte_1": 1,
                    "xored_value": 1
                },
                "uVar12": {
                    "bitwise_result_2": 1,
                    "byte_chunk_with_flags": 1,
                    "byte_xor2": 1,
                    "byte_xor_result2": 1,
                    "input_byte_xored_2": 1,
                    "masked_data_2": 1,
                    "result_16": 1,
                    "result_byte_mask": 1,
                    "second_align_comparison": 1,
                    "temp_value": 1,
                    "temporary_2": 1,
                    "xor_2": 1,
                    "xor_byte_2": 1,
                    "xor_result2": 2,
                    "xor_result_2": 6,
                    "xor_result_24": 1,
                    "xor_result_2nd_byte": 1,
                    "xor_result_shifted": 2,
                    "xored2": 1,
                    "xored_1": 1,
                    "xored_byte2": 2,
                    "xored_byte_2": 2
                },
                "uVar13": {
                    "b_var13": 1,
                    "is_byte_8_zero_bool": 1,
                    "is_target_zero_1": 1
                },
                "uVar14": {
                    "b_var14": 1,
                    "is_byte_16_zero_bool": 1,
                    "is_target_zero_2": 1
                },
                "uVar15": {
                    "b_var15": 1,
                    "is_byte_24_zero_bool": 1,
                    "is_target_zero_3": 1
                },
                "uVar16": {
                    "b_var16": 1,
                    "input_byte_xored_2_bool": 1,
                    "is_target_zero_4": 1
                },
                "uVar9": {
                    "alignment": 2,
                    "alignment_offset": 3,
                    "array_offset": 1,
                    "buffer_aligned_offset": 1,
                    "buffer_alignment": 1,
                    "byte_alignment": 1,
                    "byte_offset": 3,
                    "data_alignment": 2,
                    "data_offset": 1,
                    "data_pointer_mod8": 1,
                    "index": 1,
                    "input_ptr_offset": 1,
                    "offset": 2,
                    "ptr_alignment": 4,
                    "ptr_mod_8": 1,
                    "ptr_offset": 1,
                    "remainder": 3,
                    "remaining_bytes": 1,
                    "source_alignment": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004d9c",
                "FUN_08004a84"
            ],
            "code": "\nbyte * find_byte_sequence_offset_08000230(uint *data,uint target_byte,uint length)\n\n{\n  byte current_byte;\n  char bit_0;\n  char bit_8;\n  char bit_16;\n  char bit_24;\n  byte *next_byte;\n  uint *current_ptr;\n  byte *result;\n  uint ptr_alignment;\n  uint aligned_length;\n  uint xor_result_1;\n  uint xor_result_2;\n  bool is_byte_nonzero;\n  bool check2;\n  bool check3;\n  bool check4;\n  \n  target_byte = target_byte & 0xff;\n  if ((int)length < 0x10) {\njoined_r0x08000290:\n    do {\n      if (length == 0) {\n        return (byte *)0x0;\n      }\n      current_ptr = (uint *)((int)data + 1);\n      current_byte = *(byte *)data;\n      length = length - 1;\n      data = current_ptr;\n    } while (current_byte != target_byte);\n  }\n  else {\n    ptr_alignment = (uint)data & 7;\n    while( true ) {\n      if (ptr_alignment == 0) {\n        ptr_alignment = target_byte | target_byte << 8;\n        ptr_alignment = ptr_alignment | ptr_alignment << 0x10;\n        aligned_length = length & 0xfffffff8;\n        do {\n          current_ptr = data + 2;\n          aligned_length = aligned_length - 8;\n          xor_result_1 = *data ^ ptr_alignment;\n          xor_result_2 = data[1] ^ ptr_alignment;\n          bit_0 = -((char)xor_result_1 == '\\0');\n          bit_8 = -((char)(xor_result_1 >> 8) == '\\0');\n          bit_16 = -((char)(xor_result_1 >> 0x10) == '\\0');\n          bit_24 = -((char)(xor_result_1 >> 0x18) == '\\0');\n          xor_result_1 = CONCAT13(bit_24,CONCAT12(bit_16,CONCAT11(bit_8,bit_0)));\n          is_byte_nonzero = (char)xor_result_2 != '\\0';\n          check2 = (char)(xor_result_2 >> 8) != '\\0';\n          check3 = (char)(xor_result_2 >> 0x10) != '\\0';\n          check4 = (char)(xor_result_2 >> 0x18) != '\\0';\n          xor_result_2 = CONCAT13(check4 * bit_24 - !check4,\n                            CONCAT12(check3 * bit_16 - !check3,\n                                     CONCAT11(check2 * bit_8 - !check2,is_byte_nonzero * bit_0 - !is_byte_nonzero)));\n          if (xor_result_2 != 0) {\n            if (xor_result_1 == 0) {\n              result = (byte *)((int)data + 5);\n              xor_result_1 = xor_result_2;\n            }\n            else {\n              result = (byte *)((int)data + 1);\n            }\n            if ((xor_result_1 & 1) == 0) {\n              is_byte_nonzero = (xor_result_1 & 0x100) == 0;\n              next_byte = result + 1;\n              if (is_byte_nonzero) {\n                is_byte_nonzero = (xor_result_1 & 0x18000) == 0;\n                next_byte = result + 2;\n              }\n              result = next_byte;\n              if (is_byte_nonzero) {\n                result = result + 1;\n              }\n            }\n            return result + -1;\n          }\n          data = current_ptr;\n        } while (aligned_length != 0);\n        length = length & 7;\n        goto joined_r0x08000290;\n      }\n      current_ptr = (uint *)((int)data + 1);\n      length = length - 1;\n      if (*(byte *)data == target_byte) break;\n      ptr_alignment = (uint)current_ptr & 7;\n      data = current_ptr;\n      if (length == 0) {\n        return (byte *)0x0;\n      }\n    }\n  }\n  return (byte *)((int)current_ptr + -1);\n}\n\n",
            "current_name": "find_byte_sequence_offset_08000230",
            "entrypoint": "0x08000230",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000230": "find_byte_sequence_offset_08000230",
                "bVar1": "current_byte",
                "bVar13": "is_byte_nonzero",
                "bVar14": "check2",
                "bVar15": "check3",
                "bVar16": "check4",
                "cVar2": "bit_0",
                "cVar3": "bit_8",
                "cVar4": "bit_16",
                "cVar5": "bit_24",
                "param_1": "data",
                "param_2": "target_byte",
                "param_3": "length",
                "pbVar6": "next_byte",
                "pbVar8": "result",
                "puVar7": "current_ptr",
                "uVar10": "aligned_length",
                "uVar11": "xor_result_1",
                "uVar12": "xor_result_2",
                "uVar9": "ptr_alignment"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080002d0": {
            "additional_data": {
                "CONCAT44": {
                    "combine_inputs": 1
                },
                "FUN_080002d0": {
                    "check_conditions_and_return_value": 1,
                    "check_for_condition": 1,
                    "check_parameters": 1,
                    "combine_params": 2,
                    "concatenate_numbers": 1,
                    "convert_params_to_u_int64": 1,
                    "decode_data": 1,
                    "extract_data": 1,
                    "extract_parameter_value": 1,
                    "extract_return_value": 1,
                    "get_concatenated_params": 1,
                    "get_concatenated_value": 1,
                    "handle_params": 1,
                    "map_coordinates": 1,
                    "merge_params": 1,
                    "process_parameters": 4,
                    "process_params": 6,
                    "transform_data": 1
                },
                "FUN_08000300": {
                    "calculate_result": 4,
                    "compute_result": 2,
                    "process_data": 1,
                    "process_subfunction": 1
                },
                "param_1": {
                    "count": 1,
                    "first_number": 1,
                    "input1": 11,
                    "input_1": 6,
                    "input_param1": 4,
                    "input_param_1": 1,
                    "num1": 1,
                    "value1": 4,
                    "var1": 1,
                    "x": 1
                },
                "param_2": {
                    "input2": 11,
                    "input_2": 6,
                    "input_param2": 4,
                    "input_param_2": 1,
                    "num2": 1,
                    "second_number": 1,
                    "value1": 1,
                    "value2": 4,
                    "var2": 1,
                    "y": 1
                },
                "param_3": {
                    "condition_1": 1,
                    "flag1": 2,
                    "flag_1": 1,
                    "input3": 9,
                    "input_3": 4,
                    "input_param3": 4,
                    "input_param_3": 1,
                    "num3": 1,
                    "param3": 1,
                    "size_of_param3": 1,
                    "third_number": 1,
                    "value2": 1,
                    "value3": 3,
                    "z": 1
                },
                "param_4": {
                    "condition_2": 1,
                    "flag2": 2,
                    "flag_2": 1,
                    "fourth_number": 1,
                    "input4": 9,
                    "input_4": 4,
                    "input_param4": 4,
                    "input_param_4": 1,
                    "num4": 1,
                    "param4": 1,
                    "size_of_param4": 1,
                    "value3": 1,
                    "value4": 3,
                    "w": 1
                },
                "uVar1": {
                    "combined_values": 2,
                    "concatenated_numbers": 1,
                    "result": 21,
                    "return_value": 3
                }
            },
            "called": [
                "FUN_08000300"
            ],
            "calling": [
                "FUN_080023b4"
            ],
            "code": "\nundefined8 process_params_080002d0(int input1,int input2,int input3,int input4)\n\n{\n  undefined8 result;\n  \n  if ((input4 == 0) && (input3 == 0)) {\n    if (input2 != 0 || input1 != 0) {\n      input2 = -1;\n      input1 = -1;\n    }\n    return combine_inputs(input2,input1);\n  }\n  result = FUN_08000300();\n  return result;\n}\n\n",
            "current_name": "process_params_080002d0",
            "entrypoint": "0x080002d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "CONCAT44": "combine_inputs",
                "FUN_080002d0": "process_params_080002d0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000300": {
            "additional_data": {
                "FUN_08000300": {
                    "calculate_division_and_remainder": 1,
                    "calculate_division_remainder": 1,
                    "calculate_division_remainder_quotient": 1,
                    "calculate_quotient_and_remainder": 2,
                    "compute_quotient_and_remainder": 1,
                    "div_with_remainder": 1,
                    "divide_and_modulo": 2,
                    "divide_and_modulus": 1,
                    "divide_and_remainder": 1,
                    "divide_unsigned": 1,
                    "divide_with_remainder": 8,
                    "division_with_remainder": 5,
                    "extended_division": 1,
                    "long_division": 1,
                    "long_long_division": 1,
                    "perform_division": 2,
                    "perform_division_with_carry": 1
                },
                "LZCOUNT": {
                    "leading_zero_count": 1,
                    "leading_zeroes_count": 1
                },
                "bVar11": {
                    "carry": 8,
                    "carry_flag": 16,
                    "is_carry": 3
                },
                "bVar12": {
                    "carry": 2,
                    "carry_flag": 1
                },
                "iVar10": {
                    "bit_count": 1,
                    "bit_shift": 3,
                    "count": 2,
                    "leading_zeros": 1,
                    "leading_zeros_count": 1,
                    "shift": 3,
                    "shift_amount": 9,
                    "shift_count": 6,
                    "temp_9": 1
                },
                "iVar11": {
                    "shift_amount": 1,
                    "shift_count": 1,
                    "temp8": 1
                },
                "param_1": {
                    "dividend": 30,
                    "numerator": 1
                },
                "param_2": {
                    "dividend_bits16": 1,
                    "dividend_high": 10,
                    "dividend_low": 2,
                    "dividend_lower": 2,
                    "dividend_lower32": 1,
                    "dividend_lsb": 1,
                    "dividend_temp": 1,
                    "dividend_upper": 5,
                    "divisor": 5,
                    "remainder": 1,
                    "remainder1": 1,
                    "remainder_high": 1
                },
                "param_3": {
                    "denominator": 1,
                    "divisor": 22,
                    "divisor_high": 1,
                    "divisor_lower": 1,
                    "divisor_msb": 1,
                    "divisor_upper": 1,
                    "op1": 1,
                    "quotient": 3
                },
                "param_4": {
                    "dividend_upper32": 1,
                    "divider": 1,
                    "divisor": 2,
                    "divisor_bits16": 1,
                    "divisor_high": 10,
                    "divisor_low": 2,
                    "divisor_lower": 2,
                    "divisor_temp": 1,
                    "divisor_upper": 4,
                    "op2": 1,
                    "quotient": 1,
                    "quotient_high": 1,
                    "remainder": 3,
                    "remainder2": 1
                },
                "param_5": {
                    "output": 1,
                    "quotient": 4,
                    "quotient_and_remainder": 5,
                    "remainder": 12,
                    "remainder_out": 1,
                    "remainder_ptr": 2,
                    "result": 5,
                    "result_array_ptr": 1
                },
                "uVar1": {
                    "combined": 2,
                    "combined_result": 1,
                    "quotient": 7,
                    "quotient_high": 3,
                    "quotient_low": 3,
                    "quotient_remainder": 1,
                    "remainder": 1,
                    "result": 11,
                    "result1": 1,
                    "result_low": 1
                },
                "uVar10": {
                    "divisor_high": 1,
                    "remainder3": 1,
                    "temp3": 1,
                    "temp6": 2,
                    "temp7": 1
                },
                "uVar11": {
                    "bit_shift": 1
                },
                "uVar12": {
                    "divisor_high": 1
                },
                "uVar13": {
                    "divisor_low": 1,
                    "temp7": 1,
                    "temp9": 1
                },
                "uVar14": {
                    "divisor_temp": 1,
                    "temp10": 1
                },
                "uVar15": {
                    "divisor_adjusted": 1
                },
                "uVar16": {
                    "divisor_multiply": 1
                },
                "uVar17": {
                    "divisor_quotient": 1
                },
                "uVar18": {
                    "divisor_shifted": 1
                },
                "uVar19": {
                    "divisor_remainder": 1
                },
                "uVar2": {
                    "dividend_low": 1,
                    "dividend_lower": 1,
                    "quotient": 1,
                    "quotient1": 1,
                    "quotient_high": 4,
                    "quotient_low": 3,
                    "quotient_temp": 1,
                    "temp1": 9,
                    "temp_1": 3,
                    "temp_result": 1,
                    "temp_var": 1,
                    "temp_var1": 2,
                    "tmp": 1,
                    "u_var2": 2
                },
                "uVar3": {
                    "dividend_low": 1,
                    "dividend_lower": 1,
                    "quotient": 3,
                    "quotient1": 1,
                    "quotient2": 1,
                    "quotient_bits16": 1,
                    "quotient_high": 3,
                    "quotient_low": 2,
                    "quotient_lower": 1,
                    "quotient_lower32": 1,
                    "quotient_temp": 1,
                    "quotient_upper": 1,
                    "remainder": 1,
                    "result_low": 1,
                    "temp1": 1,
                    "temp2": 6,
                    "temp_2": 2,
                    "temp_var2": 1,
                    "u_var3": 2
                },
                "uVar4": {
                    "divisor_lower": 1,
                    "is_subtraction_needed": 1,
                    "quotient": 2,
                    "quotient1": 1,
                    "quotient3": 1,
                    "quotient_bits32": 1,
                    "quotient_low": 3,
                    "quotient_lower": 2,
                    "quotient_remainder_temp": 1,
                    "quotient_temp": 1,
                    "quotient_upper": 1,
                    "quotient_upper32": 1,
                    "remainder": 1,
                    "result_high": 1,
                    "temp2": 3,
                    "temp3": 4,
                    "temp_3": 2,
                    "temp_var3": 1,
                    "u_var4": 3
                },
                "uVar5": {
                    "quotient1": 1,
                    "quotient2": 2,
                    "quotient_high": 1,
                    "quotient_remainder": 1,
                    "remainder_bits16": 1,
                    "remainder_high": 1,
                    "remainder_low": 1,
                    "remainder_lower32": 1,
                    "temp": 3,
                    "temp1": 5,
                    "temp3": 2,
                    "temp4": 4,
                    "temp_2": 1,
                    "temp_4": 2,
                    "temp_var2": 1,
                    "temp_var4": 1,
                    "tmp1": 1,
                    "u_var5": 2
                },
                "uVar6": {
                    "dividend1": 1,
                    "quotient": 2,
                    "quotient2": 1,
                    "quotient_lower2": 1,
                    "quotient_remainder_temp2": 1,
                    "remainder1": 1,
                    "remainder_bits32": 1,
                    "remainder_high": 1,
                    "remainder_low": 1,
                    "temp1": 2,
                    "temp2": 6,
                    "temp3": 1,
                    "temp4": 2,
                    "temp5": 3,
                    "temp_3": 1,
                    "temp_5": 2,
                    "temp_var5": 1,
                    "tmp2": 1,
                    "u_var6": 2
                },
                "uVar7": {
                    "count": 1,
                    "divisor1": 1,
                    "quotient_remainder2": 1,
                    "quotient_tmp1": 1,
                    "remainder1": 1,
                    "remainder2": 1,
                    "remainder_temp": 1,
                    "temp2": 2,
                    "temp3": 6,
                    "temp4": 1,
                    "temp5": 3,
                    "temp6": 3,
                    "temp_6": 2,
                    "temp_bits16": 1,
                    "temp_low": 1,
                    "temp_var3": 1,
                    "temp_var6": 1,
                    "tmp3": 1,
                    "u_var7": 2
                },
                "uVar8": {
                    "divisor_quotient": 1,
                    "divisor_upper_shifted": 1,
                    "partial_divisor": 1,
                    "quotient_high": 1,
                    "quotient_high_temp": 1,
                    "quotient_lower3": 1,
                    "quotient_tmp2": 1,
                    "remainder": 2,
                    "remainder2": 1,
                    "remainder3": 1,
                    "shift_amount": 1,
                    "temp3": 1,
                    "temp4": 4,
                    "temp5": 1,
                    "temp6": 2,
                    "temp7": 3,
                    "temp_7": 2,
                    "temp_bits32": 1,
                    "temp_high": 1,
                    "temp_var7": 1,
                    "tmp4": 1,
                    "u_var8": 2
                },
                "uVar9": {
                    "divisor_dividend_ratio": 1,
                    "divisor_high_temp": 1,
                    "divisor_low": 1,
                    "divisor_lower_shifted": 1,
                    "partial_quotient": 1,
                    "quotient3": 2,
                    "quotient_low": 1,
                    "quotient_remainder_temp3": 1,
                    "result_ptr": 1,
                    "temp4": 2,
                    "temp5": 4,
                    "temp6": 2,
                    "temp7": 2,
                    "temp8": 3,
                    "temp_8": 2,
                    "temp_var": 1,
                    "temp_var8": 1,
                    "tmp2": 1,
                    "u_var9": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_080002d0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080005aa) */\n\nulonglong divide_with_remainder_08000300(uint dividend,uint dividend_high,uint divisor,uint divisor_high,uint *remainder)\n\n{\n  ulonglong result;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  int shift_amount;\n  bool carry_flag;\n  \n  if (divisor_high == 0) {\n    if (dividend_high < divisor) {\n      shift_amount = leading_zeroes_count(divisor);\n      if (shift_amount != 0) {\n        divisor = divisor << shift_amount;\n        dividend_high = dividend >> (0x20U - shift_amount & 0xff) | dividend_high << shift_amount;\n        dividend = dividend << shift_amount;\n      }\n      temp4 = divisor >> 0x10;\n      temp2 = dividend_high / temp4;\n      temp1 = dividend >> 0x10 | (dividend_high - temp4 * temp2) * 0x10000;\n      temp3 = temp2 * (divisor & 0xffff);\n      temp2 = temp2;\n      if (temp1 <= temp3 && temp3 - temp1 != 0) {\n        carry_flag = CARRY4(temp1,divisor);\n        temp1 = temp1 + divisor;\n        temp2 = temp2 - 1;\n        if ((carry_flag == false) && (temp1 <= temp3 && temp3 - temp1 != 0)) {\n          temp2 = temp2 - 2;\n          temp1 = temp1 + divisor;\n        }\n      }\n      temp2 = (temp1 - temp3) / temp4;\n      temp1 = dividend & 0xffff | ((temp1 - temp3) - temp4 * temp2) * 0x10000;\n      temp4 = temp2 * (divisor & 0xffff);\n      temp3 = temp2;\n      if (temp1 <= temp4 && temp4 - temp1 != 0) {\n        carry_flag = CARRY4(temp1,divisor);\n        temp1 = temp1 + divisor;\n        temp3 = temp2 - 1;\n        if ((carry_flag == false) && (temp1 <= temp4 && temp4 - temp1 != 0)) {\n          temp3 = temp2 - 2;\n          temp1 = temp1 + divisor;\n        }\n      }\n      temp1 = temp1 - temp4;\n      temp3 = temp3 | temp2 << 0x10;\n      temp2 = 0;\n    }\n    else {\n      if (divisor == 0) {\n        divisor = 1 / 0;\n      }\n      shift_amount = leading_zeroes_count(divisor);\n      if (shift_amount == 0) {\n        dividend_high = dividend_high - divisor;\n        temp1 = divisor >> 0x10;\n        temp5 = divisor & 0xffff;\n        temp2 = 1;\n      }\n      else {\n        divisor = divisor << shift_amount;\n        temp1 = divisor >> 0x10;\n        temp3 = dividend_high >> (0x20U - shift_amount & 0xff);\n        temp3 = dividend >> (0x20U - shift_amount & 0xff) | dividend_high << shift_amount;\n        temp2 = temp3 / temp1;\n        temp5 = divisor & 0xffff;\n        temp4 = temp3 >> 0x10 | (temp3 - temp1 * temp2) * 0x10000;\n        temp2 = temp2 * temp5;\n        dividend = dividend << shift_amount;\n        temp3 = temp2;\n        if (temp4 <= temp2 && temp2 - temp4 != 0) {\n          carry_flag = CARRY4(temp4,divisor);\n          temp4 = temp4 + divisor;\n          temp3 = temp2 - 1;\n          if ((carry_flag == false) && (temp4 <= temp2 && temp2 - temp4 != 0)) {\n            temp3 = temp2 - 2;\n            temp4 = temp4 + divisor;\n          }\n        }\n        temp1 = (temp4 - temp2) / temp1;\n        dividend_high = temp3 & 0xffff | ((temp4 - temp2) - temp1 * temp1) * 0x10000;\n        temp2 = temp1 * temp5;\n        temp2 = temp1;\n        if (dividend_high <= temp2 && temp2 - dividend_high != 0) {\n          carry_flag = CARRY4(dividend_high,divisor);\n          dividend_high = dividend_high + divisor;\n          temp2 = temp1 - 1;\n          if ((carry_flag == false) && (dividend_high <= temp2 && temp2 - dividend_high != 0)) {\n            temp2 = temp1 - 2;\n            dividend_high = dividend_high + divisor;\n          }\n        }\n        dividend_high = dividend_high - temp2;\n        temp2 = temp2 | temp3 << 0x10;\n      }\n      temp3 = dividend_high / temp1;\n      temp4 = dividend >> 0x10 | (dividend_high - temp1 * temp3) * 0x10000;\n      temp3 = temp5 * temp3;\n      temp2 = temp3;\n      if (temp4 <= temp3 && temp3 - temp4 != 0) {\n        carry_flag = CARRY4(temp4,divisor);\n        temp4 = temp4 + divisor;\n        temp2 = temp3 - 1;\n        if ((carry_flag == false) && (temp4 <= temp3 && temp3 - temp4 != 0)) {\n          temp2 = temp3 - 2;\n          temp4 = temp4 + divisor;\n        }\n      }\n      temp3 = (temp4 - temp3) / temp1;\n      temp1 = dividend & 0xffff | ((temp4 - temp3) - temp1 * temp3) * 0x10000;\n      temp5 = temp5 * temp3;\n      temp3 = temp3;\n      if (temp1 <= temp5 && temp5 - temp1 != 0) {\n        carry_flag = CARRY4(temp1,divisor);\n        temp1 = temp1 + divisor;\n        temp3 = temp3 - 1;\n        if ((carry_flag == false) && (temp1 <= temp5 && temp5 - temp1 != 0)) {\n          temp3 = temp3 - 2;\n          temp1 = temp1 + divisor;\n        }\n      }\n      temp1 = temp1 - temp5;\n      temp3 = temp3 | temp2 << 0x10;\n    }\n    if (remainder != (uint *)0x0) {\n      *remainder = temp1 >> shift_amount;\n      remainder[1] = 0;\n      return CONCAT44(temp2,temp3);\n    }\n  }\n  else if (dividend_high < divisor_high) {\n    if (remainder != (uint *)0x0) {\n      *remainder = dividend;\n      remainder[1] = dividend_high;\n      return 0;\n    }\n    temp3 = 0;\n    temp2 = 0;\n  }\n  else {\n    shift_amount = leading_zeroes_count(divisor_high);\n    if (shift_amount != 0) {\n      temp4 = 0x20 - shift_amount;\n      temp2 = divisor >> (temp4 & 0xff) | divisor_high << shift_amount;\n      temp5 = temp2 >> 0x10;\n      temp3 = dividend_high >> (temp4 & 0xff);\n      temp1 = dividend >> (temp4 & 0xff) | dividend_high << shift_amount;\n      temp3 = temp3 / temp5;\n      temp2 = temp1 >> 0x10 | (temp3 - temp5 * temp3) * 0x10000;\n      temp1 = temp3 * (temp2 & 0xffff);\n      dividend = dividend << shift_amount;\n      temp3 = temp3;\n      if (temp2 <= temp1 && temp1 - temp2 != 0) {\n        carry_flag = CARRY4(temp2,temp2);\n        temp2 = temp2 + temp2;\n        temp3 = temp3 - 1;\n        if ((carry_flag == false) && (temp2 <= temp1 && temp1 - temp2 != 0)) {\n          temp3 = temp3 - 2;\n          temp2 = temp2 + temp2;\n        }\n      }\n      temp3 = (temp2 - temp1) / temp5;\n      temp2 = temp1 & 0xffff | ((temp2 - temp1) - temp5 * temp3) * 0x10000;\n      temp5 = temp3 * (temp2 & 0xffff);\n      temp1 = temp3;\n      if (temp2 <= temp5 && temp5 - temp2 != 0) {\n        carry_flag = CARRY4(temp2,temp2);\n        temp2 = temp2 + temp2;\n        temp1 = temp3 - 1;\n        if ((carry_flag == false) && (temp2 <= temp5 && temp5 - temp2 != 0)) {\n          temp1 = temp3 - 2;\n          temp2 = temp2 + temp2;\n        }\n      }\n      temp1 = temp1 | temp3 << 0x10;\n      result = (ulonglong)temp1 * (ulonglong)(divisor << shift_amount);\n      if (CONCAT44(temp2 - temp5,dividend) < result) {\n        result = result - CONCAT44(temp2,divisor << shift_amount);\n        temp1 = temp1 - 1;\n      }\n      if (remainder != (uint *)0x0) {\n        temp3 = ((temp2 - temp5) - (int)(result >> 0x20)) - (uint)(dividend < (uint)result);\n        *remainder = temp3 << (temp4 & 0xff) | dividend - (uint)result >> shift_amount;\n        remainder[1] = temp3 >> shift_amount;\n      }\n      return (ulonglong)temp1;\n    }\n    if ((divisor_high < dividend_high) || (divisor <= dividend)) {\n      carry_flag = dividend < divisor;\n      dividend = dividend - divisor;\n      dividend_high = (dividend_high - divisor_high) - (uint)carry_flag;\n      temp3 = 1;\n    }\n    else {\n      temp3 = 0;\n    }\n    temp2 = 0;\n    if (remainder != (uint *)0x0) {\n      *remainder = dividend;\n      remainder[1] = dividend_high;\n      return (ulonglong)temp3;\n    }\n  }\n  return CONCAT44(temp2,temp3);\n}\n\n",
            "current_name": "divide_with_remainder_08000300",
            "entrypoint": "0x08000300",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000300": "divide_with_remainder_08000300",
                "LZCOUNT": "leading_zeroes_count",
                "bVar11": "carry_flag",
                "iVar10": "shift_amount",
                "param_1": "dividend",
                "param_2": "dividend_high",
                "param_3": "divisor",
                "param_4": "divisor_high",
                "param_5": "remainder",
                "uVar1": "result",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "uVar4": "temp3",
                "uVar5": "temp1",
                "uVar6": "temp2",
                "uVar7": "temp3",
                "uVar8": "temp4",
                "uVar9": "temp5"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080005e0": {
            "additional_data": {
                "0x3f": {
                    "interrupt_number": 2,
                    "software_interrupt_number": 1
                },
                "FUN_080005e0": {
                    "call_interrupt": 1,
                    "call_software_interrupt": 3,
                    "execute_software_interrupt": 4,
                    "execute_syscall": 1,
                    "execute_system_call": 3,
                    "execute_system_interrupt": 3,
                    "interrupt_soft_0x3f": 1,
                    "invoke_software_interrupt": 1,
                    "invoke_system_interrupt": 3,
                    "perform_interrupt": 1,
                    "perform_software_interrupt": 1,
                    "perform_system_call": 4,
                    "perform_system_interrupt": 1,
                    "send_interrupt": 2,
                    "trigger_software_interrupt": 2
                },
                "software_interrupt": {
                    "call_interrupt": 1,
                    "call_kernel_function": 1,
                    "execute_interrupt": 3,
                    "interrupt": 1,
                    "interrupt_handler": 1,
                    "interrupt_num": 1,
                    "interrupt_number": 1,
                    "invoke_interrupt": 4,
                    "invoke_system_call": 1,
                    "system_call": 1,
                    "trigger": 1,
                    "trigger_interrupt": 2,
                    "trigger_software_interrupt": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_080005e4"
            ],
            "code": "\nvoid invoke_software_interrupt_080005e0(void)\n\n{\n  invoke_interrupt(0x3f);\n  return;\n}\n\n",
            "current_name": "invoke_software_interrupt_080005e0",
            "entrypoint": "0x080005e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080005e0": "invoke_software_interrupt_080005e0",
                "software_interrupt": "invoke_interrupt"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080005e4": {
            "additional_data": {
                "FUN_080005e0": {
                    "call_subfunction": 2
                },
                "FUN_080005e4": {
                    "check_and_call_function": 2,
                    "check_and_call_sub_function": 1,
                    "execute_function": 12,
                    "execute_function_if_data_not_set": 1,
                    "execute_operation": 1,
                    "execute_user_function": 1,
                    "handle_decompiled_function": 1,
                    "process_data": 4,
                    "process_if_not_triggered": 1,
                    "process_input": 1
                },
                "param_1": {
                    "arg1": 3,
                    "argument1": 1,
                    "argument_1": 1,
                    "data": 1,
                    "data_1": 1,
                    "input1": 8,
                    "input_1": 5,
                    "input_param": 6,
                    "input_param_1": 1,
                    "input_value": 3
                },
                "param_2": {
                    "arg2": 1,
                    "argument2": 1,
                    "argument_2": 1,
                    "input2": 5,
                    "unused_param": 6,
                    "unused_param1": 1
                },
                "param_3": {
                    "arg3": 1,
                    "argument3": 1,
                    "argument_3": 1,
                    "input3": 6,
                    "unused_param": 2,
                    "unused_param2": 2,
                    "unused_param_2": 3
                },
                "param_4": {
                    "arg4": 3,
                    "argument4": 1,
                    "argument_4": 1,
                    "config": 1,
                    "data_4": 1,
                    "input4": 8,
                    "input_4": 5,
                    "input_param_4": 1,
                    "output_param": 6,
                    "output_value": 1,
                    "return_value": 2
                },
                "uVar1": {
                    "function_result": 1,
                    "result": 23,
                    "return_value": 5
                }
            },
            "called": [
                "FUN_080005e0"
            ],
            "calling": [
                "FUN_08000c4c"
            ],
            "code": "\nundefined4 execute_function_if_data_not_set_080005e4(undefined4 input1,undefined4 unused_param,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000120 != 0) {\n    return 0;\n  }\n  result = FUN_080005e0(1,input1,0,0,input4);\n  return result;\n}\n\n",
            "current_name": "execute_function_if_data_not_set_080005e4",
            "entrypoint": "0x080005e4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080005e4": "execute_function_if_data_not_set_080005e4",
                "param_1": "input1",
                "param_2": "unused_param",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000600": {
            "additional_data": {
                "FUN_08000600": {
                    "extract_data": 1,
                    "initialize_data": 14,
                    "initialize_data_structure": 1,
                    "initialize_function": 3,
                    "initialize_param": 1,
                    "initialize_parameters": 1,
                    "set_param_and_call_other_functions": 1,
                    "set_pointer_and_call": 1,
                    "update_data": 3,
                    "update_data_and_process": 1,
                    "update_param": 1,
                    "update_param_and_call_functions": 2,
                    "update_parameters": 1
                },
                "FUN_08004110": {
                    "call_function_with_params": 1,
                    "initialize_data": 1,
                    "initialize_param_one": 1,
                    "process_byte": 2,
                    "process_sub_function1": 2,
                    "update_value1": 1
                },
                "FUN_080041bc": {
                    "call_function_with_more_params": 1,
                    "initialize_param_two": 1,
                    "process_sub_function2": 2,
                    "set_byte_value": 1,
                    "set_data": 1,
                    "update_value2": 1
                },
                "FUN_08004388": {
                    "call_another_function_with_params": 1,
                    "perform_action": 1,
                    "process_data": 5,
                    "process_parameters": 1
                },
                "cVar1": {
                    "char_value": 6,
                    "character": 2,
                    "character_value": 4,
                    "condition": 3,
                    "data_type": 5,
                    "data_value": 3,
                    "flag": 1,
                    "option": 1,
                    "param_value_char": 1,
                    "parameter_value": 1,
                    "status_value": 1,
                    "value": 3
                },
                "iVar2": {
                    "result": 15,
                    "result_value": 1,
                    "return_value": 15
                },
                "param_1": {
                    "data": 9,
                    "data_pointer": 6,
                    "data_ptr": 5,
                    "data_structure": 1,
                    "function_params": 1,
                    "param_array": 4,
                    "param_list": 1,
                    "param_ptr": 1,
                    "parameters": 2,
                    "pointer": 1
                },
                "param_2": {
                    "param": 10,
                    "param2": 1,
                    "param_flag": 1,
                    "param_val": 1,
                    "param_value": 8,
                    "value": 10
                },
                "param_3": {
                    "byte_value": 1
                },
                "param_4": {
                    "byte_pointer": 1
                }
            },
            "called": [
                "FUN_080041bc",
                "FUN_08004110",
                "FUN_08004388"
            ],
            "calling": [
                "FUN_08000c4c"
            ],
            "code": "\nvoid initialize_data_structure_08000600(int **data,undefined4 param)\n\n{\n  char char_value;\n  int return_value;\n  \n  char_value = *(char *)((int)data + 5);\n  if (char_value == '\\x02') {\n    *data = &DAT_20000338;\n  }\n  else if (char_value == '\\x03') {\n    *data = &DAT_20000338;\n  }\n  else if (char_value == '\\x01') {\n    *data = &DAT_20000338;\n  }\n  else {\n    *data = &DAT_20000338;\n  }\n  FUN_08004388(*data,param,6);\n  if (1 < *(byte *)((int)data + 6)) {\n    FUN_08004110(*(byte *)((int)data + 6),1);\n    FUN_080041bc(*(undefined *)((int)data + 6),0);\n  }\n  do {\n    return_value = (**(code **)(**data + 0xc))();\n  } while (-1 < return_value);\n  *(undefined *)((int)data + 0x49) = 0;\n  *(undefined *)((int)data + 0x4a) = 0;\n  *(undefined2 *)(data + 0x15) = 0;\n  *(undefined2 *)((int)data + 0x52) = 0;\n  *(undefined2 *)(data + 0x14) = 0;\n  return;\n}\n\n",
            "current_name": "initialize_data_structure_08000600",
            "entrypoint": "0x08000600",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000600": "initialize_data_structure_08000600",
                "cVar1": "char_value",
                "iVar2": "return_value",
                "param_1": "data",
                "param_2": "param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800066c": {
            "additional_data": {
                "FUN_0800066c": {
                    "initialize_data": 8,
                    "initialize_memory": 1,
                    "set_data": 2,
                    "set_info": 1,
                    "set_param": 1,
                    "set_param_values": 2,
                    "set_parameter_value": 1,
                    "set_parameters": 1,
                    "set_params": 2,
                    "update_and_limit_param": 1,
                    "update_configuration": 1,
                    "update_data": 9,
                    "update_memory": 1
                },
                "newValue": {
                    "new_param_value": 1
                },
                "newValue2": {
                    "new_param_value2": 1
                },
                "param_1": {
                    "base_address": 2,
                    "buffer": 1,
                    "config_address": 1,
                    "data": 2,
                    "data_address": 13,
                    "data_pointer": 3,
                    "data_ptr": 3,
                    "info_address": 1,
                    "memory_address": 2,
                    "object_address": 1,
                    "param_struct": 1,
                    "parameter_address": 1
                },
                "param_2": {
                    "data": 1,
                    "data_value": 2,
                    "info_value1": 1,
                    "input_1": 1,
                    "new_param": 1,
                    "new_value": 10,
                    "param_value": 1,
                    "parameter2": 1,
                    "value": 9,
                    "value1": 4
                },
                "param_3": {
                    "condition": 1,
                    "info_value2": 1,
                    "input_2": 1,
                    "limit": 19,
                    "limit_value": 2,
                    "max_value": 1,
                    "size": 2,
                    "value2": 4
                },
                "param_4": {
                    "additional_data": 7,
                    "additional_param": 1,
                    "another_value": 1,
                    "data": 4,
                    "extra_data": 2,
                    "extra_info": 1,
                    "info_value3": 1,
                    "input_3": 1,
                    "metadata": 1,
                    "new_value2": 2,
                    "other_data": 1,
                    "other_param": 1,
                    "other_value": 1,
                    "param_data": 1,
                    "parameter4": 1,
                    "unknown_param": 1,
                    "value3": 4
                },
                "param_5": {
                    "unknown": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08000682"
            ],
            "code": "\nvoid update_data_0800066c(int data_address,undefined new_value,int limit,undefined additional_data)\n\n{\n  *(undefined *)(data_address + 4) = new_value;\n  if (3 < limit) {\n    limit = 0;\n  }\n  *(char *)(data_address + 5) = (char)limit;\n  *(undefined *)(data_address + 6) = additional_data;\n  *(undefined2 *)(data_address + 0x56) = 1000;\n  return;\n}\n\n",
            "current_name": "update_data_0800066c",
            "entrypoint": "0x0800066c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800066c": "update_data_0800066c",
                "param_1": "data_address",
                "param_2": "new_value",
                "param_3": "limit",
                "param_4": "additional_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000682": {
            "additional_data": {
                "FUN_0800066c": {
                    "call_sub_function": 2,
                    "execute": 1,
                    "execute_initialization": 1,
                    "execute_subfunction": 4,
                    "helper_function": 2,
                    "initialize": 3,
                    "initialize_components": 1,
                    "initialize_variables": 6,
                    "perform_additional_task": 1,
                    "perform_operations": 1,
                    "preparatory_function": 1,
                    "sub_function": 1
                },
                "FUN_0800066c_param_1": {
                    "op_param_1": 1
                },
                "FUN_0800066c_param_2": {
                    "op_param_2": 1
                },
                "FUN_0800066c_param_3": {
                    "op_param_3": 1
                },
                "FUN_0800066c_param_4": {
                    "op_param_4": 1
                },
                "FUN_08000682": {
                    "execute": 1,
                    "execute_and_return": 1,
                    "execute_function": 16,
                    "execute_main_function": 2,
                    "execute_task": 1,
                    "improve_and_return": 1,
                    "initialize": 3,
                    "initialize_and_return": 1,
                    "initialize_and_return_param": 1,
                    "initialize_and_return_value": 1,
                    "initialize_param": 2,
                    "main_function": 1
                },
                "param_1": {
                    "input": 6,
                    "input_data": 1,
                    "input_param": 8,
                    "input_parameter": 4,
                    "input_value": 8,
                    "param": 1,
                    "param1": 1,
                    "task_parameter": 1,
                    "value": 1
                },
                "param_2": {
                    "component_param_1": 1,
                    "helper_param_2": 1,
                    "param2": 1,
                    "param_2": 1,
                    "subfunction_param_2": 1,
                    "subfunction_parameter_1": 1,
                    "unknown_value": 2,
                    "unused_param": 1,
                    "unused_parameter_1": 1,
                    "var_1": 1,
                    "variable_1": 1
                },
                "param_3": {
                    "component_param_2": 1,
                    "counter": 1,
                    "helper_param_3": 1,
                    "other_param": 1,
                    "param3": 1,
                    "param_3": 1,
                    "parameter_1": 1,
                    "subfunction_param_3": 1,
                    "subfunction_parameter_2": 1,
                    "unused_parameter_2": 1,
                    "var_2": 1,
                    "variable_2": 1
                },
                "param_4": {
                    "component_param_3": 1,
                    "helper_param_4": 1,
                    "param4": 1,
                    "param_4": 1,
                    "subfunction_param_4": 1,
                    "subfunction_parameter_3": 1,
                    "unknown_parameter": 2,
                    "unused_parameter_3": 1,
                    "var_3": 1,
                    "variable_3": 1
                }
            },
            "called": [
                "FUN_0800066c"
            ],
            "calling": [
                "FUN_08000690"
            ],
            "code": "\nundefined4 execute_main_function_08000682(undefined4 input_param)\n\n{\n  FUN_0800066c();\n  return input_param;\n}\n\n",
            "current_name": "execute_main_function_08000682",
            "entrypoint": "0x08000682",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000682": "execute_main_function_08000682",
                "param_1": "input_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000690": {
            "additional_data": {
                "DAT_20000124": {
                    "dat_buffer": 1,
                    "special_data": 1
                },
                "FUN_08000682": {
                    "call_sub_function": 1,
                    "call_subfunction": 2,
                    "copy_data": 1,
                    "execute_action": 1,
                    "execute_function": 2,
                    "handle_special_case": 3,
                    "perform_operation": 1,
                    "process_data": 13,
                    "process_data_changes": 1,
                    "process_value": 1,
                    "sub_function": 1
                },
                "FUN_08000690": {
                    "check_and_call_function": 3,
                    "check_and_execute": 2,
                    "check_param": 3,
                    "check_param_and_call": 3,
                    "check_param_and_call_function": 2,
                    "extract_data": 1,
                    "handle_param": 2,
                    "handle_param_1": 1,
                    "handle_param_change": 1,
                    "handle_param_changes": 1,
                    "process_input": 1,
                    "process_param": 7,
                    "process_param1_and_param2": 1,
                    "process_parameters": 3
                },
                "param_1": {
                    "check_value": 1,
                    "condition": 1,
                    "first_param": 2,
                    "flag": 2,
                    "input": 1,
                    "input_flag": 1,
                    "input_param": 2,
                    "input_value": 1,
                    "input_value_1": 1,
                    "param_1": 1,
                    "param_a": 1,
                    "param_flag": 1,
                    "param_flags": 1,
                    "param_type": 1,
                    "status": 9,
                    "status_flag": 1,
                    "value": 2,
                    "value1": 1
                },
                "param_2": {
                    "check_param": 1,
                    "condition": 1,
                    "condition_param": 1,
                    "data": 1,
                    "flag": 2,
                    "flag_value": 1,
                    "input_value": 1,
                    "input_value_2": 1,
                    "param_2": 1,
                    "param_b": 1,
                    "param_value": 3,
                    "second_param": 2,
                    "special_value": 1,
                    "target_value": 1,
                    "value": 12,
                    "value2": 1
                },
                "param_3": {
                    "arg1": 1,
                    "param_3": 2,
                    "param_c": 1,
                    "third_param": 2,
                    "unnamed_param_1": 2,
                    "unused1": 1,
                    "unused_param": 11,
                    "unused_param3": 1,
                    "unused_param_3": 1
                },
                "param_4": {
                    "additional_flag": 1,
                    "address": 1,
                    "another_unused_param": 2,
                    "arg2": 1,
                    "data": 1,
                    "fourth_param": 2,
                    "func_param": 1,
                    "optional_param": 1,
                    "output_param": 1,
                    "param": 4,
                    "param4": 1,
                    "param_4": 5,
                    "param_d": 1,
                    "param_data": 2,
                    "secondary_param": 1,
                    "unnamed_param_2": 2,
                    "unused2": 1,
                    "unused_param4": 1,
                    "unused_param_4": 1,
                    "value4": 1
                }
            },
            "called": [
                "FUN_08000682"
            ],
            "calling": [],
            "code": "\nvoid check_param_and_call_function_08000690(int status,int value,undefined4 unused_param,undefined4 param_4)\n\n{\n  if (status != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_08000682(&DAT_20000124,1,0,0,param_4);\n  }\n  return;\n}\n\n",
            "current_name": "check_param_and_call_function_08000690",
            "entrypoint": "0x08000690",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000690": "check_param_and_call_function_08000690",
                "param_1": "status",
                "param_2": "value",
                "param_3": "unused_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080006b4": {
            "additional_data": {
                "DAT_xxx": {
                    "xxx_data": 1
                },
                "FUN_080006b4": {
                    "decode_and_count": 1,
                    "decode_and_count_chars": 1,
                    "extract_data": 2,
                    "extract_data_from_binary": 1,
                    "extract_data_from_param": 1,
                    "process_bytes": 1,
                    "process_data": 14,
                    "process_param": 6,
                    "process_params": 1,
                    "reverse_and_update_data": 2
                },
                "FUN_080041bc": {
                    "decode_data": 1,
                    "extract_data_from_binary_helper": 1,
                    "initialize_data": 3,
                    "initialize_params": 1,
                    "process_data": 4,
                    "process_data_subfunction": 1,
                    "process_sub_function": 2,
                    "update_array": 1,
                    "update_data": 1
                },
                "PTR_xxx": {
                    "xxx_ptr": 1
                },
                "bVar1": {
                    "exceed_limit": 2,
                    "exceeded_limit": 7,
                    "exceeded_threshold": 4,
                    "flag": 1,
                    "has_overflow": 2,
                    "is_full": 5,
                    "is_limit_reached": 1,
                    "is_max_length_reached": 1,
                    "is_overflow": 7,
                    "is_threshold_exceeded": 1
                },
                "bVar4": {
                    "byte_counter": 1,
                    "byte_index": 1,
                    "char_index": 1,
                    "count": 1,
                    "counter": 18,
                    "current_index": 5,
                    "index": 3,
                    "previous_byte": 1
                },
                "iVar3": {
                    "error_code": 1,
                    "function_result": 2,
                    "is_valid": 1,
                    "loop_result": 2,
                    "result": 12,
                    "return_value": 9,
                    "status": 3,
                    "success": 1
                },
                "param_1": {
                    "byte_array": 1,
                    "data": 14,
                    "data_param_1": 1,
                    "data_ptr": 2,
                    "decoded_data": 1,
                    "input": 1,
                    "input_array": 1,
                    "input_data": 3,
                    "param": 3,
                    "param_array": 1,
                    "param_ptr": 1,
                    "parameter": 1,
                    "params": 1
                },
                "param_2": {
                    "data_param_2": 1,
                    "param1": 3,
                    "param_1": 1,
                    "param_2": 2,
                    "size": 1
                },
                "param_3": {
                    "data_param_3": 1,
                    "param2": 3,
                    "param3": 1,
                    "param_2": 1,
                    "param_3": 2
                },
                "param_4": {
                    "array": 1,
                    "buffer": 1,
                    "data_param_4": 1,
                    "param3": 2,
                    "param_3": 1,
                    "param_4": 1,
                    "param_array2": 1
                },
                "uVar2": {
                    "byte_value": 2,
                    "current_char": 1,
                    "data": 1,
                    "extracted_byte": 1,
                    "new_byte": 1,
                    "new_character": 1,
                    "new_value": 4,
                    "result": 15,
                    "returned_value": 1,
                    "updated_value": 1,
                    "value": 3
                }
            },
            "called": [
                "FUN_080041bc"
            ],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nint process_data_080006b4(int **data)\n\n{\n  bool exceeded_limit;\n  undefined result;\n  int result;\n  byte counter;\n  \n  if (1 < *(byte *)((int)data + 6)) {\n    FUN_080041bc(*(byte *)((int)data + 6),0);\n  }\n  *(undefined *)((int)data + 0x49) = 0;\n  if (*(byte *)((int)data + 5) < 4) {\n    exceeded_limit = false;\n    while (result = (**(code **)(**data + 8))(), result != 0) {\n      counter = *(byte *)((int)data + 0x49);\n      result = (**(code **)(**data + 0xc))();\n      *(undefined *)((int)data + counter + 9) = result;\n      counter = *(char *)((int)data + 0x49) + 1;\n      *(byte *)((int)data + 0x49) = counter;\n      if (0x3f < counter) {\n        exceeded_limit = true;\n      }\n    }\n  }\n  else {\n    exceeded_limit = false;\n  }\n  *(short *)(data + 0x14) = *(short *)(data + 0x14) + 1;\n  if (exceeded_limit) {\n    *(short *)(data + 0x15) = *(short *)(data + 0x15) + 1;\n    return -3;\n  }\n  return (int)*(char *)((int)data + 0x49);\n}\n\n",
            "current_name": "process_data_080006b4",
            "entrypoint": "0x080006b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080006b4": "process_data_080006b4",
                "bVar1": "exceeded_limit",
                "bVar4": "counter",
                "iVar3": "result",
                "param_1": "data",
                "uVar2": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000728": {
            "additional_data": {
                "FUN_08000728": {
                    "calc_checksum": 1,
                    "calculate_checksum": 18,
                    "calculate_crc": 4,
                    "calculate_crc16": 4,
                    "checksum": 1,
                    "crc16_checksum": 2,
                    "reverse_checksum": 1
                },
                "bVar1": {
                    "bit": 5,
                    "bit_count": 2,
                    "bit_counter": 9,
                    "bit_index": 9,
                    "bit_number": 1,
                    "byte_index": 1,
                    "j": 1
                },
                "param_1": {
                    "buffer_address": 1,
                    "data": 4,
                    "data_address": 17,
                    "data_start": 7,
                    "data_start_address": 2
                },
                "param_2": {
                    "buffer_length": 1,
                    "data_length": 25,
                    "data_size": 1,
                    "length": 4
                },
                "uVar2": {
                    "checksum": 19,
                    "checksum_value": 1,
                    "crc": 6,
                    "crc16": 1,
                    "crc_result": 1,
                    "crc_value": 2,
                    "result": 1
                },
                "uVar3": {
                    "bit": 17,
                    "bit_check": 1,
                    "bit_flag": 1,
                    "bit_value": 3,
                    "lsb": 7,
                    "lsb_bit": 1,
                    "parity_bit": 1
                },
                "uVar4": {
                    "byte_index": 3,
                    "i": 16,
                    "index": 12
                }
            },
            "called": [],
            "calling": [
                "FUN_0800076c"
            ],
            "code": "\nuint calculate_checksum_08000728(int data_address,int data_length)\n\n{\n  byte bit_counter;\n  uint checksum;\n  uint bit;\n  uint i;\n  \n  checksum = 0xffff;\n  for (i = 0; (int)i < data_length; i = i + 1 & 0xff) {\n    checksum = checksum ^ *(byte *)(data_address + i + 9);\n    for (bit_counter = 1; bit_counter < 9; bit_counter = bit_counter + 1) {\n      bit = checksum & 1;\n      checksum = checksum >> 1;\n      if (bit != 0) {\n        checksum = checksum ^ 0xa001;\n      }\n    }\n  }\n  return (checksum & 0xff) << 8 | checksum >> 8;\n}\n\n",
            "current_name": "calculate_checksum_08000728",
            "entrypoint": "0x08000728",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000728": "calculate_checksum_08000728",
                "bVar1": "bit_counter",
                "param_1": "data_address",
                "param_2": "data_length",
                "uVar2": "checksum",
                "uVar3": "bit",
                "uVar4": "i"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800076c": {
            "additional_data": {
                "FUN_08000728": {
                    "calculate_result": 6,
                    "calculate_value": 1,
                    "get_result": 1,
                    "get_updated_result": 3,
                    "get_updated_value": 3,
                    "get_value": 2
                },
                "FUN_0800076c": {
                    "decode_and_update_data": 1,
                    "process_data": 2,
                    "update_buffer": 2,
                    "update_character_stats": 2,
                    "update_data": 7,
                    "update_data_array": 1,
                    "update_param": 10,
                    "update_param_data": 1,
                    "update_param_values": 2,
                    "update_parameter": 2
                },
                "FUN_080041bc": {
                    "check_condition": 1,
                    "execute_function": 1,
                    "perform_action": 9,
                    "perform_task": 1,
                    "toggle_flag": 1,
                    "update_flag": 2,
                    "update_value": 1
                },
                "FUN_08004204": {
                    "calculate_offset": 3,
                    "calculate_value": 1,
                    "calculate_value_and_update": 1,
                    "finalize_process": 1,
                    "get_character_offset": 1,
                    "get_new_data": 1,
                    "get_new_value": 4,
                    "get_offset": 1,
                    "get_updated_value": 3
                },
                "iVar2": {
                    "index": 2,
                    "iteration": 3,
                    "loop_counter": 2,
                    "loop_index": 2,
                    "loop_var": 3,
                    "loop_variable": 1,
                    "result2": 6,
                    "return_value": 2,
                    "status": 6,
                    "temp_var": 2,
                    "value": 2
                },
                "param_1": {
                    "buffer": 2,
                    "character_data": 2,
                    "data": 11,
                    "data_array": 1,
                    "input": 1,
                    "param": 1,
                    "param_array": 3,
                    "param_data": 1,
                    "param_list": 3,
                    "param_ptr": 1,
                    "param_values": 1,
                    "parameter": 3,
                    "parameter_array": 1
                },
                "param_2": {
                    "arg1": 3,
                    "input_a": 1,
                    "param": 1,
                    "param1": 2,
                    "param2": 9,
                    "param_2": 4,
                    "param_a": 1,
                    "unused_param": 1,
                    "value1": 7,
                    "value_1": 1,
                    "var1": 1
                },
                "param_3": {
                    "arg2": 3,
                    "input_b": 1,
                    "param2": 2,
                    "param3": 9,
                    "param_3": 4,
                    "param_b": 1,
                    "param_index": 1,
                    "unused_param2": 1,
                    "value2": 7,
                    "value_2": 1,
                    "var2": 1
                },
                "param_4": {
                    "arg3": 3,
                    "input_c": 1,
                    "param3": 2,
                    "param4": 9,
                    "param_4": 4,
                    "param_c": 1,
                    "param_value": 1,
                    "unused_param3": 1,
                    "value3": 7,
                    "value_3": 1,
                    "var3": 1
                },
                "uVar1": {
                    "converted_value": 1,
                    "result": 23,
                    "result1": 4,
                    "result_var": 1,
                    "ushort_value": 2
                },
                "uVar3": {
                    "byte_index": 3,
                    "byte_val": 1,
                    "byte_value": 8,
                    "index": 17,
                    "length": 1,
                    "result3": 1
                }
            },
            "called": [
                "FUN_080041bc",
                "FUN_08000728",
                "FUN_08004204"
            ],
            "calling": [
                "FUN_08000998",
                "FUN_08000a7a",
                "FUN_080008e2",
                "FUN_08000b04",
                "FUN_08000a00",
                "FUN_08000b54",
                "FUN_08000a4e"
            ],
            "code": "\nvoid update_param_values_0800076c(int **data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 result;\n  int result2;\n  uint index;\n  \n  index = (uint)*(byte *)((int)data + 0x49);\n  result = FUN_08000728(data,index,param3,param4,param4);\n  *(char *)((int)data + index + 9) = (char)((ushort)result >> 8);\n  index = index + 1 & 0xff;\n  *(char *)((int)data + index + 9) = (char)result;\n  *(char *)((int)data + 0x49) = (char)index + '\\x01';\n  if (1 < *(byte *)((int)data + 6)) {\n    FUN_080041bc(*(byte *)((int)data + 6),1);\n  }\n  if (*(byte *)((int)data + 5) < 4) {\n    (**(code **)(**data + 4))(*data,(int)data + 9,*(undefined *)((int)data + 0x49));\n  }\n  if (1 < *(byte *)((int)data + 6)) {\n    FUN_080041bc(*(byte *)((int)data + 6),0);\n  }\n  if (*(byte *)((int)data + 5) < 4) {\n    do {\n      result2 = (**(code **)(**data + 0xc))();\n    } while (-1 < result2);\n  }\n  *(undefined *)((int)data + 0x49) = 0;\n  result2 = FUN_08004204();\n  data[0x17] = (int *)(result2 + (uint)*(ushort *)((int)data + 0x56));\n  *(short *)((int)data + 0x52) = *(short *)((int)data + 0x52) + 1;\n  return;\n}\n\n",
            "current_name": "update_param_values_0800076c",
            "entrypoint": "0x0800076c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800076c": "update_param_values_0800076c",
                "iVar2": "result2",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result",
                "uVar3": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080007f0": {
            "additional_data": {
                "FUN_080007f0": {
                    "check_and_modify_value": 1,
                    "check_and_perform_action": 1,
                    "check_and_process": 1,
                    "check_and_update_data": 1,
                    "check_and_update_values": 1,
                    "check_condition": 4,
                    "check_condition_and_return": 2,
                    "check_condition_and_update": 3,
                    "check_conditions": 7,
                    "check_conditions_and_calculate_result": 1,
                    "check_conditions_and_return": 3,
                    "check_conditions_and_return_status": 1,
                    "check_conditions_and_return_value": 2,
                    "check_conditions_and_update": 1,
                    "check_constraints": 1,
                    "check_value": 1
                },
                "FUN_08004640": {
                    "calculate": 1,
                    "calculate_result": 1,
                    "calculate_value": 1,
                    "do_calculation": 1
                },
                "bVar1": {
                    "condition": 2,
                    "condition_check": 1,
                    "condition_met": 9,
                    "flag": 2,
                    "found": 2,
                    "found_match": 1,
                    "has_match": 1,
                    "is_condition_met": 1,
                    "is_match": 5,
                    "is_match_found": 2,
                    "is_matched": 2,
                    "is_matching": 1,
                    "is_present": 1,
                    "is_valid": 1
                },
                "bVar2": {
                    "byte_result": 1,
                    "byte_return_value": 1,
                    "result": 24,
                    "result_byte": 2,
                    "result_flag": 1,
                    "temp_bool": 1,
                    "value": 1
                },
                "cVar3": {
                    "calc1": 1,
                    "char1": 1,
                    "char_result1": 1,
                    "char_return_value1": 1,
                    "condition_result1": 1,
                    "first": 1,
                    "first_return_value": 1,
                    "partial": 1,
                    "result1": 10,
                    "result_1": 6,
                    "result_a": 1,
                    "result_char1": 2,
                    "sub_result1": 1,
                    "temp_char1": 1,
                    "val1": 1,
                    "var1": 1
                },
                "cVar4": {
                    "calc2": 1,
                    "char2": 1,
                    "char_result2": 1,
                    "char_return_value2": 1,
                    "condition_result2": 1,
                    "partial2": 1,
                    "result2": 10,
                    "result_2": 6,
                    "result_b": 1,
                    "result_char2": 2,
                    "second": 1,
                    "second_return_value": 1,
                    "sub_result2": 1,
                    "temp_char2": 1,
                    "val2": 1,
                    "var2": 1
                },
                "iVar5": {
                    "calc_result1": 1,
                    "computed_result1": 1,
                    "first_calculation": 1,
                    "function_result1": 1,
                    "int_result1": 1,
                    "int_return_value1": 1,
                    "result": 1,
                    "result1": 6,
                    "result3": 3,
                    "result_1": 1,
                    "result_3": 4,
                    "result_a": 1,
                    "result_int1": 2,
                    "sub_result3": 1,
                    "temp_int1": 1,
                    "temp_result": 1,
                    "temp_result1": 1,
                    "temp_result_1": 1,
                    "value1": 2
                },
                "iVar7": {
                    "calc_result2": 1,
                    "computed_result2": 1,
                    "condition": 1,
                    "count": 2,
                    "counter": 3,
                    "function_result2": 1,
                    "index": 2,
                    "int_result2": 1,
                    "int_return_value2": 1,
                    "loop_var": 1,
                    "new_value": 1,
                    "result2": 2,
                    "result3": 1,
                    "result_b": 1,
                    "result_int2": 2,
                    "sub_result4": 1,
                    "temp_int2": 1,
                    "temp_result2": 1,
                    "temp_result_2": 1,
                    "value": 2,
                    "value2": 2,
                    "value_2": 1,
                    "value_4": 1
                },
                "param_1": {
                    "address": 3,
                    "arg1": 2,
                    "base_address": 2,
                    "context": 1,
                    "data": 3,
                    "function_param_1": 1,
                    "input": 6,
                    "input1": 1,
                    "input_address": 1,
                    "input_data": 3,
                    "input_param": 2,
                    "input_parameter_1": 1,
                    "input_ptr": 1,
                    "input_value": 1,
                    "param": 1,
                    "target_address": 1,
                    "value_ptr": 1
                },
                "param_2": {
                    "arg2": 2,
                    "flag": 4,
                    "flag_param": 1,
                    "function_param_2": 1,
                    "input": 1,
                    "input2": 1,
                    "input_parameter_2": 1,
                    "option": 1,
                    "param1": 1,
                    "param2": 1,
                    "param_2": 2,
                    "param_ptr1": 1,
                    "param_value": 1,
                    "some_value": 2,
                    "status": 3,
                    "unknown_param": 1,
                    "value": 6,
                    "value_1": 1
                },
                "param_3": {
                    "arg3": 2,
                    "condition": 2,
                    "count": 1,
                    "data_size": 1,
                    "function_param_3": 1,
                    "input_flag": 1,
                    "input_parameter_3": 1,
                    "length": 1,
                    "limit": 1,
                    "param2": 1,
                    "param3": 1,
                    "param_3": 3,
                    "param_val": 1,
                    "param_value": 1,
                    "size": 1,
                    "target": 1,
                    "threshold": 1,
                    "value": 6,
                    "value1": 2,
                    "value_2": 1,
                    "value_param": 1
                },
                "param_4": {
                    "additional_flag": 1,
                    "additional_value": 1,
                    "another_value": 1,
                    "arg4": 3,
                    "data_param": 1,
                    "flags": 1,
                    "function_param_4": 1,
                    "index": 1,
                    "input_parameter_4": 1,
                    "key": 1,
                    "modifier": 1,
                    "other_option": 1,
                    "param": 3,
                    "param3": 1,
                    "param4": 1,
                    "param_4": 3,
                    "param_ptr": 1,
                    "param_ptr2": 1,
                    "param_status": 1,
                    "parameter": 1,
                    "unknown_param": 1,
                    "value2": 2,
                    "value_3": 1,
                    "variable": 1
                },
                "switchD_08000816_caseD_1": {
                    "case1": 1,
                    "string_comparison_case": 1,
                    "switch_case1": 1
                },
                "uVar6": {
                    "counter": 10,
                    "i": 6,
                    "index": 7,
                    "loop_counter": 6,
                    "loop_index": 1,
                    "loop_variable": 1
                }
            },
            "called": [
                "FUN_08004640"
            ],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nundefined4 check_conditions_and_return_value_080007f0(int input,undefined4 value,uint value,undefined4 arg4)\n\n{\n  bool condition_met;\n  byte result;\n  char result1;\n  char result2;\n  int result1;\n  uint counter;\n  int counter;\n  \n  counter = 0;\n  do {\n    if (7 < counter) {\n      condition_met = false;\nLAB_0800080a:\n      if (!condition_met) {\n        *(short *)(input + 0x54) = *(short *)(input + 0x54) + 1;\n        return 1;\n      }\n      counter = *(byte *)(input + 10) - 1;\n      switch(*(byte *)(input + 10)) {\n      case 1:\n      case 2:\n      case 0xf:\n        goto string_comparison_case;\n      case 3:\n      case 4:\n      case 0x10:\n        result1 = FUN_08004640(*(undefined *)(input + 0xb),*(undefined *)(input + 0xc),value,\n                             counter,arg4);\n        result2 = FUN_08004640(*(undefined *)(input + 0xd),*(undefined *)(input + 0xe));\n        if (*(byte *)(input + 0x60) < (byte)(result2 + result1)) {\n          return 2;\n        }\n        return 0;\n      case 5:\n        counter = FUN_08004640(*(undefined *)(input + 0xb),*(undefined *)(input + 0xc),value,\n                             counter,arg4);\n        if ((uint)*(byte *)(input + 0x60) < (uint)(counter << 0x14) >> 0x18) {\n          return 2;\n        }\n        return 0;\n      case 6:\n        result = FUN_08004640(*(undefined *)(input + 0xb),*(undefined *)(input + 0xc),value,\n                             counter,arg4);\n        if (*(byte *)(input + 0x60) < result) {\n          return 2;\n        }\n        return 0;\n      default:\n        return 0;\n      }\n    }\n    value = (uint)*(byte *)(input + 10);\n    if ((byte)(&DAT_08005a10)[counter] == value) {\n      condition_met = true;\n      goto LAB_0800080a;\n    }\n    counter = counter + 1 & 0xff;\n  } while( true );\nstring_comparison_case:\n  counter = FUN_08004640(*(undefined *)(input + 0xb),*(undefined *)(input + 0xc),value,counter,\n                       arg4);\n  result1 = FUN_08004640(*(undefined *)(input + 0xd),*(undefined *)(input + 0xe));\n  if ((uint)*(byte *)(input + 0x60) <\n      (((uint)(counter << 0xc) >> 0x10) + ((uint)(result1 << 0xc) >> 0x10) & 0xff)) {\n    return 2;\n  }\n  return 0;\n}\n\n",
            "current_name": "check_conditions_and_return_value_080007f0",
            "entrypoint": "0x080007f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080007f0": "check_conditions_and_return_value_080007f0",
                "bVar1": "condition_met",
                "bVar2": "result",
                "cVar3": "result1",
                "cVar4": "result2",
                "iVar5": "result1",
                "iVar7": "counter",
                "param_1": "input",
                "param_2": "value",
                "param_3": "value",
                "param_4": "arg4",
                "switchD_08000816_caseD_1": "string_comparison_case",
                "uVar6": "counter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080008cc": {
            "additional_data": {
                "0x49": {
                    "flag": 1,
                    "new_flag_value": 1
                },
                "0x80": {
                    "bit_mask": 1
                },
                "0xb": {
                    "new_value_address": 1,
                    "src_byte": 1
                },
                "10": {
                    "destination_data_offset": 1,
                    "flag": 1
                },
                "3": {
                    "new_status": 1
                },
                "4": {
                    "source_data": 1,
                    "src_data": 1
                },
                "9": {
                    "destination_addr_offset": 1,
                    "dst_data": 1
                },
                "FUN_080008cc": {
                    "copy_and_encrypt_data": 1,
                    "copy_and_modify_data": 18,
                    "copy_and_toggle_bit": 1,
                    "copy_and_toggle_byte": 1,
                    "copy_byte": 1,
                    "copy_data": 2,
                    "copy_data_and_set_flag": 1,
                    "copy_data_and_toggle_bit": 1,
                    "copy_data_and_toggle_flag": 2,
                    "copy_data_and_xor_flag": 1,
                    "copy_data_with_modification": 1,
                    "copy_value_and_toggle_bit": 1
                },
                "param_1": {
                    "address": 1,
                    "buffer": 1,
                    "data_address": 9,
                    "data_pointer": 4,
                    "data_ptr": 1,
                    "destination": 2,
                    "destination_address": 1,
                    "dst": 1,
                    "input_pointer": 1,
                    "source": 2,
                    "source_address": 7,
                    "src_offset": 1
                },
                "param_2": {
                    "byte_value": 1,
                    "data": 3,
                    "data_value": 1,
                    "input_value": 1,
                    "new_byte_value": 1,
                    "new_data": 2,
                    "new_param": 1,
                    "new_value": 13,
                    "param2": 1,
                    "source": 1,
                    "src": 1,
                    "value": 4,
                    "value_to_set": 1
                },
                "param_3": {
                    "destination_address": 2,
                    "length": 1,
                    "original_value": 1
                },
                "param_4": {
                    "byte_offset": 1,
                    "constant_value": 1
                },
                "param_5": {
                    "result": 1,
                    "toggle_byte_value": 1
                },
                "param_6": {
                    "constant_value": 1,
                    "offset": 1
                },
                "param_7": {
                    "bit_mask": 1
                },
                "param_8": {
                    "flag_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nvoid copy_and_modify_data_080008cc(int data_address,undefined new_value)\n\n{\n  *(undefined *)(data_address + 9) = *(undefined *)(data_address + 4);\n  *(byte *)(data_address + 10) = *(byte *)(data_address + 10) ^ 0x80;\n  *(undefined *)(data_address + 0xb) = new_value;\n  *(undefined *)(data_address + 0x49) = 3;\n  return;\n}\n\n",
            "current_name": "copy_and_modify_data_080008cc",
            "entrypoint": "0x080008cc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080008cc": "copy_and_modify_data_080008cc",
                "param_1": "data_address",
                "param_2": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080008e2": {
            "additional_data": {
                "FUN_0800076c": {
                    "cleanup": 1,
                    "cleanup_data": 1,
                    "cleanup_function": 1,
                    "finalize": 1,
                    "finalize_and_print": 1,
                    "perform_operation": 1,
                    "update_data": 1
                },
                "FUN_080008e2": {
                    "calculate_checksum": 1,
                    "decode_and_count_bits": 1,
                    "decrypt_data": 1,
                    "modify_data": 1,
                    "process_binary_data": 2,
                    "process_data": 18,
                    "reverse_and_update_bits": 1,
                    "update_flags": 1,
                    "update_flags_and_return": 2,
                    "update_flags_and_return_result": 1
                },
                "FUN_08004640": {
                    "calculate_result": 2,
                    "calculate_value": 1,
                    "get_modified_value": 1,
                    "get_offset_value": 1,
                    "perform_lookup": 1,
                    "process_data": 1
                },
                "F_UNK_08004640": {
                    "calculate_value": 1
                },
                "cVar5": {
                    "bit_counter": 1,
                    "bit_shifted_value": 1,
                    "bit_value": 5,
                    "char_value": 1,
                    "char_var": 1,
                    "flag": 1,
                    "flag_value": 1,
                    "increment": 2,
                    "mask": 1,
                    "result_char": 1,
                    "shifted_bits": 4,
                    "shifted_byte": 4,
                    "shifted_char": 3,
                    "shifted_value": 3,
                    "temp_char": 1,
                    "updated_char": 1
                },
                "iVar1": {
                    "index1": 1,
                    "offset1": 1,
                    "result": 3,
                    "result1": 23,
                    "result_var1": 1,
                    "return_value1": 2
                },
                "iVar6": {
                    "address": 4,
                    "byte_address": 1,
                    "byte_index": 7,
                    "byte_offset": 1,
                    "counter": 1,
                    "loop_var3": 2,
                    "offset": 5,
                    "target_index": 1,
                    "temp_var": 7,
                    "updated_var": 1,
                    "var_index": 1
                },
                "param_1": {
                    "arg1": 1,
                    "binary_data_ptr": 1,
                    "data": 3,
                    "data1": 1,
                    "data_offset": 2,
                    "data_pointer": 6,
                    "data_ptr": 8,
                    "data_size": 2,
                    "input1": 1,
                    "input_array": 2,
                    "input_buffer": 2,
                    "input_data": 1,
                    "input_param1": 1
                },
                "param_2": {
                    "address_ptr": 1,
                    "arg2": 1,
                    "array_offset": 1,
                    "array_pointer": 4,
                    "array_ptr": 1,
                    "binary_data": 1,
                    "buffer": 2,
                    "buffer_ptr": 2,
                    "data": 2,
                    "data2": 1,
                    "data_buffer": 1,
                    "data_ptr": 1,
                    "flag_pointer": 1,
                    "input2": 1,
                    "input_param2": 1,
                    "input_ptr": 2,
                    "key_pointer": 1,
                    "lookup_ptr": 1,
                    "lookup_table": 1,
                    "output_array": 1,
                    "output_buffer": 1,
                    "param_array": 1,
                    "source_ptr": 1,
                    "values": 1
                },
                "param_3": {
                    "arg1": 1,
                    "arg3": 1,
                    "param1": 8,
                    "param3": 14,
                    "param_3": 2,
                    "param_a": 3,
                    "param_x": 1,
                    "unknown_param1": 1
                },
                "param_4": {
                    "arg2": 1,
                    "arg4": 1,
                    "param2": 8,
                    "param4": 14,
                    "param_4": 2,
                    "param_b": 3,
                    "param_y": 1,
                    "unknown_param2": 1
                },
                "uVar2": {
                    "buffer_size": 1,
                    "index2": 1,
                    "num_bits": 1,
                    "offset2": 1,
                    "result2": 23,
                    "result_var2": 1,
                    "return_value2": 2,
                    "value": 1
                },
                "uVar3": {
                    "count": 2,
                    "count1": 1,
                    "counter": 11,
                    "index": 5,
                    "iteration": 1,
                    "iterator": 1,
                    "loop_counter": 2,
                    "loop_counter1": 1,
                    "loop_index": 4,
                    "loop_var1": 2,
                    "u_var3": 1
                },
                "uVar4": {
                    "bit_counter": 12,
                    "bit_index": 12,
                    "count2": 1,
                    "flag_index": 1,
                    "index": 1,
                    "loop_counter2": 1,
                    "loop_var2": 2,
                    "u_var4": 1
                }
            },
            "called": [
                "FUN_08004640",
                "FUN_0800076c"
            ],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nint process_binary_data_080008e2(int data_ptr,int array_pointer,undefined4 param3,undefined4 param4)\n\n{\n  int result1;\n  uint result2;\n  uint counter;\n  uint bit_counter;\n  char bit_value;\n  int temp_var;\n  \n  result1 = FUN_08004640(*(undefined *)(data_ptr + 0xb),*(undefined *)(data_ptr + 0xc),param3,param4,\n                       param4);\n  result2 = FUN_08004640(*(undefined *)(data_ptr + 0xd),*(undefined *)(data_ptr + 0xe));\n  bit_value = (char)((result2 << 0x15) >> 0x18);\n  if ((result2 & 7) != 0) {\n    bit_value = bit_value + '\\x01';\n  }\n  *(char *)(data_ptr + 0xb) = bit_value;\n  *(undefined *)(data_ptr + 0x49) = 3;\n  bit_counter = 0;\n  for (counter = 0; (int)counter < (int)result2; counter = counter + 1 & 0xffff) {\n    if (((int)(uint)*(ushort *)(array_pointer + ((counter + result1) * 0x100000 >> 0x18) * 2) >>\n         (counter + result1 & 0xf) & 1U) == 0) {\n      temp_var = (uint)*(byte *)(data_ptr + 0x49) + data_ptr;\n      *(byte *)(temp_var + 9) = *(byte *)(temp_var + 9) & ~(byte)(1 << bit_counter);\n    }\n    else {\n      temp_var = (uint)*(byte *)(data_ptr + 0x49) + data_ptr;\n      *(byte *)(temp_var + 9) = *(byte *)(temp_var + 9) | (byte)(1 << bit_counter);\n    }\n    bit_counter = bit_counter + 1 & 0xff;\n    if (7 < bit_counter) {\n      *(char *)(data_ptr + 0x49) = *(char *)(data_ptr + 0x49) + '\\x01';\n      bit_counter = 0;\n    }\n  }\n  if ((result2 & 7) != 0) {\n    *(char *)(data_ptr + 0x49) = *(char *)(data_ptr + 0x49) + '\\x01';\n  }\n  bit_value = *(char *)(data_ptr + 0x49);\n  FUN_0800076c(data_ptr);\n  return (int)(char)(bit_value + '\\x02');\n}\n\n",
            "current_name": "process_binary_data_080008e2",
            "entrypoint": "0x080008e2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080008e2": "process_binary_data_080008e2",
                "cVar5": "bit_value",
                "iVar1": "result1",
                "iVar6": "temp_var",
                "param_1": "data_ptr",
                "param_2": "array_pointer",
                "param_3": "param3",
                "param_4": "param4",
                "uVar2": "result2",
                "uVar3": "counter",
                "uVar4": "bit_counter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000998": {
            "additional_data": {
                "FUN_0800076c": {
                    "cleanup_data": 1,
                    "finalize_process": 1,
                    "perform_cleanup": 2
                },
                "FUN_08000998": {
                    "decode_and_increment": 1,
                    "decode_and_process_data": 1,
                    "decode_and_update": 2,
                    "decode_and_update_array": 1,
                    "decode_and_update_data": 3,
                    "extract_and_modify_data": 1,
                    "extract_data": 4,
                    "parse_data": 1,
                    "process_binary_data": 2,
                    "process_data": 7,
                    "reverse_and_update_data": 1,
                    "reverse_binary": 1,
                    "reverse_byte_order": 1
                },
                "FUN_08004640": {
                    "calculate_result": 1,
                    "calculate_value": 1,
                    "process_data": 1,
                    "reverse_bits": 1
                },
                "bVar1": {
                    "byte1": 2,
                    "byte_1": 1,
                    "byte_val": 2,
                    "byte_val1": 1,
                    "byte_value": 3,
                    "byte_value1": 1,
                    "byte_var": 1,
                    "byte_var1": 7,
                    "byte_variable1": 1,
                    "counter": 2,
                    "current_byte": 1,
                    "flag": 1,
                    "temp_byte": 5,
                    "temp_byte1": 2,
                    "upper_byte": 1
                },
                "bVar3": {
                    "byte2": 2,
                    "byte_val2": 1,
                    "byte_val_1": 1,
                    "byte_value2": 1,
                    "byte_var1": 1,
                    "byte_var2": 1,
                    "byte_var3": 5,
                    "byte_var_1": 1,
                    "byte_variable3": 1,
                    "result": 1,
                    "result1": 10,
                    "result_1": 4,
                    "result_byte_1": 1,
                    "return_value1": 1
                },
                "bVar4": {
                    "byte3": 2,
                    "byte_val3": 1,
                    "byte_val_2": 1,
                    "byte_value3": 1,
                    "byte_var2": 1,
                    "byte_var3": 1,
                    "byte_var4": 5,
                    "byte_var_2": 1,
                    "byte_variable4": 1,
                    "input_length": 1,
                    "result2": 10,
                    "result_2": 4,
                    "result_byte_2": 1,
                    "return_value2": 1
                },
                "cVar2": {
                    "char1": 2,
                    "char_1": 1,
                    "char_val": 2,
                    "char_val1": 1,
                    "char_value": 4,
                    "char_var": 4,
                    "char_var1": 2,
                    "char_var2": 2,
                    "char_variable": 1,
                    "counter": 1,
                    "current_index": 1,
                    "data_index": 1,
                    "loop_index": 1,
                    "temp_char": 8
                },
                "param_1": {
                    "array_address": 1,
                    "binary_data": 2,
                    "data": 2,
                    "data_address": 2,
                    "data_array": 2,
                    "data_buffer": 2,
                    "data_offset": 1,
                    "data_pointer": 1,
                    "data_ptr": 6,
                    "input": 1,
                    "input_addr": 1,
                    "input_address": 1,
                    "input_array": 1,
                    "input_buffer": 1,
                    "input_data": 1,
                    "input_param": 1,
                    "input_param1": 2,
                    "input_ptr": 3
                },
                "param_2": {
                    "binary_length": 1,
                    "data": 1,
                    "data_addr": 1,
                    "data_address": 2,
                    "data_array": 4,
                    "data_buffer": 1,
                    "data_length": 1,
                    "data_param": 1,
                    "data_ptr": 3,
                    "encoded_array": 1,
                    "input": 1,
                    "input_array": 1,
                    "input_buffer": 1,
                    "input_data": 4,
                    "input_data_ptr": 1,
                    "input_param2": 2,
                    "input_pointer": 1,
                    "input_ptr": 4
                },
                "param_3": {
                    "arg1": 1,
                    "arg3_param": 1,
                    "input_param3": 1,
                    "param1": 2,
                    "param3": 16,
                    "param_3": 9,
                    "param_a": 1
                },
                "param_4": {
                    "arg2": 1,
                    "arg4_param": 1,
                    "input_param4": 1,
                    "param2": 2,
                    "param4": 16,
                    "param_4": 9,
                    "param_b": 1
                },
                "uVar5": {
                    "count": 2,
                    "counter": 2,
                    "counter1": 3,
                    "counter_1": 1,
                    "i": 1,
                    "index": 4,
                    "index1": 1,
                    "loop_counter": 3,
                    "loop_index": 1,
                    "loop_index1": 1,
                    "loop_var": 4,
                    "loop_var1": 3,
                    "start_index": 2,
                    "uint_var1": 2,
                    "uint_var5": 1
                },
                "uVar6": {
                    "counter2": 3,
                    "counter_2": 1,
                    "increment": 1,
                    "incremented_index": 1,
                    "index2": 1,
                    "loop_index2": 1,
                    "loop_var2": 3,
                    "loop_var_2": 1,
                    "new_count": 1,
                    "next_index": 5,
                    "next_var": 1,
                    "temp_counter": 5,
                    "temp_var": 1,
                    "uint_var2": 2,
                    "uint_var6": 1,
                    "update_var": 1,
                    "updated_index": 2
                }
            },
            "called": [
                "FUN_08004640",
                "FUN_0800076c"
            ],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nint process_binary_data_08000998(int data_ptr,int data_array,undefined4 param3,undefined4 param4)\n\n{\n  byte byte_var1;\n  char temp_char;\n  byte result1;\n  byte result2;\n  uint loop_var;\n  uint next_index;\n  \n  result1 = FUN_08004640(*(undefined *)(data_ptr + 0xb),*(undefined *)(data_ptr + 0xc),param3,param4,\n                       param4);\n  result2 = FUN_08004640(*(undefined *)(data_ptr + 0xd),*(undefined *)(data_ptr + 0xe));\n  *(byte *)(data_ptr + 0xb) = result2 << 1;\n  *(undefined *)(data_ptr + 0x49) = 3;\n  for (loop_var = (uint)result1; loop_var < (uint)result1 + (uint)result2; loop_var = loop_var + 1 & 0xff) {\n    byte_var1 = *(byte *)(data_ptr + 0x49);\n    *(char *)(data_ptr + (uint)byte_var1 + 9) = (char)((ushort)*(undefined2 *)(data_array + loop_var * 2) >> 8)\n    ;\n    next_index = byte_var1 + 1 & 0xff;\n    temp_char = (char)next_index;\n    *(char *)(data_ptr + 0x49) = temp_char;\n    *(undefined *)(data_ptr + next_index + 9) = *(undefined *)(data_array + loop_var * 2);\n    *(char *)(data_ptr + 0x49) = temp_char + '\\x01';\n  }\n  temp_char = *(char *)(data_ptr + 0x49);\n  FUN_0800076c(data_ptr);\n  return (int)(char)(temp_char + '\\x02');\n}\n\n",
            "current_name": "process_binary_data_08000998",
            "entrypoint": "0x08000998",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000998": "process_binary_data_08000998",
                "bVar1": "byte_var1",
                "bVar3": "result1",
                "bVar4": "result2",
                "cVar2": "temp_char",
                "param_1": "data_ptr",
                "param_2": "data_array",
                "param_3": "param3",
                "param_4": "param4",
                "uVar5": "loop_var",
                "uVar6": "next_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a00": {
            "additional_data": {
                "FUN_0800076c": {
                    "do_something_else": 1,
                    "execute_function": 1,
                    "handle_update": 1,
                    "notify_change": 1,
                    "perform_action": 5,
                    "reset_value": 1,
                    "update_buffer": 1,
                    "update_data": 1,
                    "update_flag_status": 1,
                    "update_state": 2,
                    "update_value": 1
                },
                "FUN_08000a00": {
                    "apply_bitwise_operation": 1,
                    "set_bit_in_memory": 1,
                    "store_or_update_flag_value": 1,
                    "update_array": 1,
                    "update_bit": 2,
                    "update_bit_in_memory": 2,
                    "update_bitmap": 1,
                    "update_bitmask": 2,
                    "update_bits": 3,
                    "update_data": 6,
                    "update_data_array": 1,
                    "update_flag_and_value": 1,
                    "update_flag_in_buffer": 1,
                    "update_memory": 4,
                    "update_memory_and_return": 1,
                    "update_memory_at_address": 1,
                    "update_memory_value": 1,
                    "update_storage_with_bit": 1
                },
                "FUN_08004640": {
                    "calculate_index": 1,
                    "calculate_result": 2,
                    "calculate_value": 4,
                    "compute_result": 2,
                    "get_bit_position": 1,
                    "get_bit_value": 1,
                    "get_bitmap_position": 1,
                    "get_flag_value": 1,
                    "perform_bitwise_operation": 1,
                    "process_data": 2
                },
                "param_1": {
                    "address": 4,
                    "array_index": 1,
                    "bitmap_index": 1,
                    "bitmask_address": 1,
                    "bitmask_index": 1,
                    "buffer": 1,
                    "data": 1,
                    "data_addr": 1,
                    "data_address": 1,
                    "data_array": 1,
                    "data_index": 1,
                    "data_pointer": 3,
                    "data_ptr": 2,
                    "input1": 1,
                    "input_address": 1,
                    "input_array": 1,
                    "input_value1": 1,
                    "memory_address": 4,
                    "memory_address1": 1,
                    "memory_location": 1,
                    "storage_address": 1,
                    "value1": 1
                },
                "param_2": {
                    "array": 1,
                    "array_size": 1,
                    "bit_array": 1,
                    "bitmap_data": 1,
                    "bitmask_array": 1,
                    "data": 1,
                    "data_address": 2,
                    "data_ptr": 1,
                    "flag_buffer": 1,
                    "input2": 1,
                    "input_value2": 1,
                    "memory": 2,
                    "memory_address": 1,
                    "memory_address2": 1,
                    "memory_block_address": 1,
                    "memory_buffer": 1,
                    "memory_data": 1,
                    "memory_offset": 1,
                    "output_address": 1,
                    "output_array": 2,
                    "output_pointer": 2,
                    "output_ptr": 1,
                    "result": 1,
                    "result_addr": 1,
                    "result_address": 1,
                    "result_ptr": 1,
                    "value2": 1
                },
                "param_3": {
                    "arg3": 1,
                    "flag1": 3,
                    "input_value3": 1,
                    "param1": 2,
                    "param3": 12,
                    "param_3": 1,
                    "param_a": 2,
                    "value1": 9
                },
                "param_4": {
                    "arg4": 1,
                    "flag2": 3,
                    "input_value4": 1,
                    "param2": 2,
                    "param4": 12,
                    "param_4": 1,
                    "param_b": 2,
                    "value2": 9
                },
                "uVar1": {
                    "bit_index": 1,
                    "bit_value": 1,
                    "modified_value": 1,
                    "result": 9,
                    "result1": 16,
                    "result_a": 1,
                    "shifted_value": 1,
                    "value1": 1
                },
                "uVar2": {
                    "bit_position": 1,
                    "bit_shift": 1,
                    "bitmap_offset": 1,
                    "index": 3,
                    "result2": 3,
                    "shifted_bits": 4,
                    "shifted_index": 2,
                    "shifted_result": 13,
                    "shifted_result_a": 1,
                    "shifted_value": 1,
                    "value2": 1
                }
            },
            "called": [
                "FUN_08004640",
                "FUN_0800076c"
            ],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nundefined4 update_data_array_08000a00(int memory_address,int output_pointer,undefined4 param3,undefined4 param4)\n\n{\n  uint result1;\n  uint shifted_result;\n  \n  result1 = FUN_08004640(*(undefined *)(memory_address + 0xb),*(undefined *)(memory_address + 0xc),param3,param4,\n                       param4);\n  shifted_result = (result1 << 0x14) >> 0x18;\n  if (*(char *)(memory_address + 0xd) == -1) {\n    *(ushort *)(output_pointer + shifted_result * 2) =\n         (ushort)(1 << (result1 & 0xf)) | *(ushort *)(output_pointer + shifted_result * 2);\n  }\n  else {\n    *(ushort *)(output_pointer + shifted_result * 2) =\n         *(ushort *)(output_pointer + shifted_result * 2) & ~(ushort)(1 << (result1 & 0xf));\n  }\n  *(undefined *)(memory_address + 0x49) = 6;\n  FUN_0800076c(memory_address);\n  return 8;\n}\n\n",
            "current_name": "update_data_array_08000a00",
            "entrypoint": "0x08000a00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a00": "update_data_array_08000a00",
                "param_1": "memory_address",
                "param_2": "output_pointer",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result1",
                "uVar2": "shifted_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a4e": {
            "additional_data": {
                "6": {
                    "flag_value": 1
                },
                "FUNK_08000a4e": {
                    "process_data": 1
                },
                "FUN_0800076c": {
                    "call_additional_function": 1,
                    "call_function": 1,
                    "perform_action": 3,
                    "perform_cleanup": 1,
                    "set_flag_and_call": 1,
                    "update_input_data": 1
                },
                "FUN_08000a4e": {
                    "copy_data_and_set_flag": 1,
                    "decode_and_update_values": 1,
                    "enhanced_function": 1,
                    "extract_info_and_initialize": 1,
                    "process_data": 2,
                    "process_parameters": 1,
                    "reverse_and_set_values": 1,
                    "reverse_and_update_data": 1,
                    "reverse_order_and_set": 1,
                    "update_and_return": 1,
                    "update_and_shift_values": 1,
                    "update_byte_and_return_value": 1,
                    "update_data": 2,
                    "update_data_and_return": 3,
                    "update_destination_value": 1,
                    "update_param_and_return": 1,
                    "update_parameter_and_return": 1,
                    "update_parameters": 1,
                    "update_params_and_return": 1,
                    "update_result": 1,
                    "update_result_and_call_func": 1,
                    "update_value": 1,
                    "update_value_and_call_function": 1,
                    "update_values_and_return": 1
                },
                "FUN_08004640": {
                    "calculate_value": 1,
                    "get_byte_result": 1,
                    "get_byte_value": 1,
                    "get_modified_data_value": 1,
                    "get_updated_value": 1,
                    "get_value": 1,
                    "get_value_at": 1,
                    "process_data": 1
                },
                "bVar1": {
                    "byte_result": 5,
                    "byte_val": 1,
                    "byte_value": 1,
                    "data_index": 1,
                    "first_result": 1,
                    "first_value": 1,
                    "index": 1,
                    "result": 9,
                    "result1": 6,
                    "result_1": 1,
                    "result_byte": 2
                },
                "param_1": {
                    "array_ptr": 1,
                    "data": 2,
                    "data_address": 2,
                    "data_pointer": 3,
                    "data_ptr": 1,
                    "index": 1,
                    "input1": 3,
                    "input_address": 4,
                    "input_data": 2,
                    "input_data_address": 1,
                    "input_data_ptr": 1,
                    "input_param": 3,
                    "input_param1": 2,
                    "input_parameter": 1,
                    "input_pointer": 1,
                    "source1": 1,
                    "source_address": 1,
                    "source_data": 1
                },
                "param_2": {
                    "byte_param": 1,
                    "dest_address": 1,
                    "destination": 1,
                    "input2": 1,
                    "input_param2": 1,
                    "output": 2,
                    "output_address": 5,
                    "output_data": 2,
                    "output_data_address": 1,
                    "output_data_ptr": 1,
                    "output_param": 3,
                    "output_param1": 1,
                    "output_parameter": 1,
                    "output_pointer": 1,
                    "output_ptr": 1,
                    "param2": 1,
                    "result_address": 1,
                    "result_array": 1,
                    "result_data": 1,
                    "result_pointer": 3,
                    "value": 1
                },
                "param_3": {
                    "param3": 1
                },
                "param_4": {
                    "param4": 1
                },
                "uVar2": {
                    "copied_data": 1,
                    "decoded_value": 1,
                    "result": 1,
                    "result2": 6,
                    "result_2": 1,
                    "result_value": 1,
                    "result_word": 1,
                    "second_result": 1,
                    "second_value": 1,
                    "transformed_value": 1,
                    "updated_value": 4,
                    "ushort_result": 4,
                    "value": 6
                }
            },
            "called": [
                "FUN_08004640",
                "FUN_0800076c"
            ],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nundefined4 update_data_and_return_08000a4e(int input_address,int output_address)\n\n{\n  byte result;\n  undefined2 result2;\n  \n  result = FUN_08004640(*(undefined *)(input_address + 0xb),*(undefined *)(input_address + 0xc));\n  result2 = FUN_08004640(*(undefined *)(input_address + 0xd),*(undefined *)(input_address + 0xe));\n  *(undefined2 *)(output_address + (uint)result * 2) = result2;\n  *(undefined *)(input_address + 0x49) = 6;\n  FUN_0800076c(input_address);\n  return 8;\n}\n\n",
            "current_name": "update_data_and_return_08000a4e",
            "entrypoint": "0x08000a4e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a4e": "update_data_and_return_08000a4e",
                "bVar1": "result",
                "param_1": "input_address",
                "param_2": "output_address",
                "uVar2": "result2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a7a": {
            "additional_data": {
                "FUN_0800076c": {
                    "another_function": 1,
                    "do_something": 1,
                    "finalize_and_cleanup": 1,
                    "finalize_data": 2,
                    "perform_other_task": 1,
                    "update_data": 1
                },
                "FUN_08000a7a": {
                    "extract_and_update_bits": 1,
                    "populate_data": 1,
                    "process_data": 4,
                    "reverse_and_modify_bits": 1,
                    "reverse_bits_and_set": 1,
                    "set_bits_based_on_flag": 1,
                    "update_bitmap": 1,
                    "update_bitmask": 1,
                    "update_bits": 1,
                    "update_bits_and_return": 1,
                    "update_bits_in_array": 1,
                    "update_data": 1,
                    "update_flags_and_return": 1,
                    "update_memory": 6,
                    "update_memory_array": 1,
                    "update_memory_bits": 1
                },
                "FUN_08004640": {
                    "calculate_index": 1,
                    "calculate_result": 2,
                    "calculate_value": 1,
                    "get_bit": 1,
                    "get_byte": 1,
                    "some_function": 1
                },
                "iVar1": {
                    "first_result": 2,
                    "index1": 1,
                    "length1": 1,
                    "offset": 2,
                    "offset1": 1,
                    "result1": 21,
                    "some_value_a": 1,
                    "value1": 2
                },
                "iVar2": {
                    "index2": 1,
                    "length": 1,
                    "length2": 1,
                    "offset2": 1,
                    "result2": 21,
                    "second_result": 2,
                    "size": 1,
                    "some_value_b": 1,
                    "value2": 2
                },
                "param_1": {
                    "address": 1,
                    "array": 1,
                    "array_pointer": 1,
                    "bitmap_address": 1,
                    "data": 2,
                    "data_address": 1,
                    "data_offset": 1,
                    "data_pointer": 5,
                    "data_ptr": 3,
                    "input1": 1,
                    "input_array": 4,
                    "input_buffer": 1,
                    "input_data": 3,
                    "input_param1": 2,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "source_array": 1,
                    "source_data": 1
                },
                "param_2": {
                    "bitmap_data": 1,
                    "input2": 1,
                    "input_param2": 2,
                    "memory": 2,
                    "memory_address": 1,
                    "memory_pointer": 2,
                    "output_array": 4,
                    "output_buffer": 2,
                    "output_data": 3,
                    "output_pointer": 1,
                    "output_ptr": 2,
                    "result": 2,
                    "result_pointer": 4,
                    "result_ptr": 2,
                    "target_array": 1,
                    "target_data": 1
                },
                "param_3": {
                    "flag1": 1,
                    "input_param3": 2,
                    "param1": 3,
                    "param2": 1,
                    "param3": 18,
                    "param_3": 2,
                    "param_a": 3,
                    "unused_param1": 1
                },
                "param_4": {
                    "flag2": 1,
                    "input_param4": 2,
                    "param2": 3,
                    "param3": 1,
                    "param4": 18,
                    "param_4": 2,
                    "param_b": 3,
                    "unused_param2": 1
                },
                "uVar3": {
                    "count": 1,
                    "counter": 11,
                    "counter1": 3,
                    "i": 2,
                    "index": 3,
                    "iteration": 1,
                    "iterator": 1,
                    "loop_counter": 9
                },
                "uVar4": {
                    "bit_counter": 18,
                    "bit_index": 6,
                    "bit_offset": 1,
                    "bit_position": 2,
                    "bit_shift": 1,
                    "counter2": 3
                },
                "uVar5": {
                    "bit_index": 5,
                    "bit_offset": 5,
                    "bit_position": 16,
                    "index": 1,
                    "mask": 1,
                    "position": 1,
                    "shift_amount": 1,
                    "var1": 1
                },
                "uVar6": {
                    "address_offset": 1,
                    "array_index": 4,
                    "base_address": 1,
                    "block_index": 1,
                    "byte_index": 9,
                    "byte_offset": 1,
                    "byte_position": 5,
                    "index_a": 1,
                    "multiplier": 1,
                    "offset": 1,
                    "page": 1,
                    "shift_amt": 1,
                    "shifted_index": 2,
                    "shifted_value": 1,
                    "var2": 1
                },
                "uVar7": {
                    "byte_counter": 2,
                    "byte_index": 4,
                    "byte_offset": 3,
                    "byte_position": 1,
                    "flag_index": 1,
                    "index_b": 1,
                    "loop_counter": 2,
                    "offset": 8,
                    "offset_index": 1,
                    "page_index": 1,
                    "param_index": 3,
                    "shift_index": 1,
                    "start_offset": 1,
                    "var3": 1,
                    "variable_offset": 1
                }
            },
            "called": [
                "FUN_08004640",
                "FUN_0800076c"
            ],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nundefined4 update_memory_bits_08000a7a(int data_pointer,int output_array,undefined4 param3,undefined4 param4)\n\n{\n  int result1;\n  int result2;\n  uint counter;\n  uint bit_counter;\n  uint bit_position;\n  uint byte_index;\n  uint offset;\n  \n  result1 = FUN_08004640(*(undefined *)(data_pointer + 0xb),*(undefined *)(data_pointer + 0xc),param3,param4,\n                       param4);\n  result2 = FUN_08004640(*(undefined *)(data_pointer + 0xd),*(undefined *)(data_pointer + 0xe));\n  bit_counter = 0;\n  offset = 7;\n  for (counter = 0; (int)counter < result2; counter = counter + 1 & 0xffff) {\n    byte_index = (counter + result1) * 0x100000 >> 0x18;\n    bit_position = counter + result1 & 0xf;\n    if (((int)(uint)*(byte *)(data_pointer + offset + 9) >> bit_counter & 1U) == 0) {\n      *(ushort *)(output_array + byte_index * 2) = *(ushort *)(output_array + byte_index * 2) & ~(ushort)(1 << bit_position);\n    }\n    else {\n      *(ushort *)(output_array + byte_index * 2) = (ushort)(1 << bit_position) | *(ushort *)(output_array + byte_index * 2);\n    }\n    bit_counter = bit_counter + 1 & 0xff;\n    if (7 < bit_counter) {\n      offset = offset + 1 & 0xff;\n      bit_counter = 0;\n    }\n  }\n  *(undefined *)(data_pointer + 0x49) = 6;\n  FUN_0800076c(data_pointer);\n  return 8;\n}\n\n",
            "current_name": "update_memory_bits_08000a7a",
            "entrypoint": "0x08000a7a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a7a": "update_memory_bits_08000a7a",
                "iVar1": "result1",
                "iVar2": "result2",
                "param_1": "data_pointer",
                "param_2": "output_array",
                "param_3": "param3",
                "param_4": "param4",
                "uVar3": "counter",
                "uVar4": "bit_counter",
                "uVar5": "bit_position",
                "uVar6": "byte_index",
                "uVar7": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000b04": {
            "additional_data": {
                "FUN_0800076c": {
                    "cleanup": 7,
                    "cleanup_buffer": 1,
                    "cleanup_data": 1,
                    "cleanup_memory": 1,
                    "perform_operation": 1,
                    "reverse_input_array": 1
                },
                "FUN_08000b04": {
                    "convert_and_copy_bytes": 1,
                    "copy_and_shift_data": 1,
                    "decode_and_convert": 1,
                    "decode_and_copy_data": 4,
                    "decode_and_modify": 1,
                    "decode_and_save_data": 1,
                    "decode_and_store": 1,
                    "decode_payload": 1,
                    "decrypt_and_update": 1,
                    "decrypt_data": 1,
                    "extract_and_convert_data": 2,
                    "extract_and_modify_data": 1,
                    "process_data": 4,
                    "process_input_data": 1
                },
                "FUN_08004640": {
                    "calculate_result": 1,
                    "calculate_value": 3,
                    "convert_byte_to_u_int": 1,
                    "convert_data": 1,
                    "decode_byte": 2,
                    "decode_value": 1,
                    "process_element": 1,
                    "reverse_byte_value": 1,
                    "reverse_operation": 1
                },
                "bVar1": {
                    "byte1": 6,
                    "byte_1": 1,
                    "byte_count": 1,
                    "byte_value_1": 1,
                    "counter": 1,
                    "current_value": 1,
                    "first_byte": 10,
                    "input_data_size": 1,
                    "loop_var_1": 1,
                    "num_bytes": 1,
                    "num_elements": 1,
                    "offset1": 1,
                    "payload_offset": 1,
                    "source_byte1": 2,
                    "source_data_length": 1,
                    "src_offset": 1
                },
                "bVar2": {
                    "byte2": 6,
                    "byte_2": 1,
                    "byte_value": 1,
                    "byte_value_2": 1,
                    "length": 1,
                    "loop_var_2": 1,
                    "num_elements": 2,
                    "num_iterations": 1,
                    "offset2": 1,
                    "output_data_size": 1,
                    "payload_length": 1,
                    "second_byte": 10,
                    "size_of_element": 1,
                    "source_byte2": 2,
                    "target_data_length": 1
                },
                "cVar3": {
                    "char1": 4,
                    "char_1": 1,
                    "char_value": 2,
                    "char_variable": 1,
                    "character": 2,
                    "encoded_byte": 1,
                    "initial_value": 1,
                    "modified_char": 1,
                    "modified_length": 1,
                    "result": 5,
                    "result_char": 8,
                    "resulting_char": 1,
                    "some_char": 1,
                    "third_byte": 1,
                    "third_character": 1
                },
                "param_1": {
                    "data_1": 1,
                    "data_address": 4,
                    "data_array": 3,
                    "data_array_address": 1,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_source": 1,
                    "input": 1,
                    "input_address": 1,
                    "input_array": 7,
                    "input_buffer": 2,
                    "input_data": 3,
                    "input_param": 1,
                    "input_ptr": 1,
                    "payload_ptr": 1,
                    "src_data": 1
                },
                "param_2": {
                    "data_2": 1,
                    "decoded_ptr": 1,
                    "dest_data": 1,
                    "modified_data": 1,
                    "output": 1,
                    "output_address": 4,
                    "output_array": 10,
                    "output_array_address": 1,
                    "output_buffer": 2,
                    "output_data": 3,
                    "output_param": 1,
                    "output_ptr": 2,
                    "result_address": 1,
                    "result_buffer": 1,
                    "result_pointer": 1
                },
                "uVar4": {
                    "conversion_result": 2,
                    "converted_data": 1,
                    "converted_value": 1,
                    "decoded_value": 3,
                    "decoded_word": 1,
                    "decrypted_value": 1,
                    "encoded_value": 1,
                    "function_result": 2,
                    "modified_word": 1,
                    "processed_data": 1,
                    "result": 5,
                    "result_short": 1,
                    "result_value": 4,
                    "result_word": 1,
                    "resulting_value": 1,
                    "return_value": 2,
                    "temp": 1,
                    "temp_var": 1,
                    "undefined_var": 1
                },
                "uVar5": {
                    "counter": 7,
                    "i": 3,
                    "index": 13,
                    "loop_counter": 5,
                    "loop_index": 1,
                    "loop_var_3": 1,
                    "uint_var": 1
                }
            },
            "called": [
                "FUN_08004640",
                "FUN_0800076c"
            ],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nint process_input_data_08000b04(int input_array,int output_array)\n\n{\n  byte first_byte;\n  byte second_byte;\n  char result_char;\n  undefined2 result;\n  uint index;\n  \n  first_byte = *(byte *)(input_array + 0xc);\n  second_byte = *(byte *)(input_array + 0xe);\n  *(undefined *)(input_array + 0xd) = 0;\n  *(byte *)(input_array + 0xe) = second_byte;\n  *(undefined *)(input_array + 0x49) = 6;\n  for (index = 0; index < second_byte; index = index + 1 & 0xff) {\n    result = FUN_08004640(*(undefined *)(index * 2 + input_array + 0x10),\n                         *(undefined *)(input_array + (index + 4) * 2 + 9));\n    *(undefined2 *)(output_array + (first_byte + index) * 2) = result;\n  }\n  result_char = *(char *)(input_array + 0x49);\n  FUN_0800076c(input_array);\n  return (int)(char)(result_char + '\\x02');\n}\n\n",
            "current_name": "process_input_data_08000b04",
            "entrypoint": "0x08000b04",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000b04": "process_input_data_08000b04",
                "bVar1": "first_byte",
                "bVar2": "second_byte",
                "cVar3": "result_char",
                "param_1": "input_array",
                "param_2": "output_array",
                "uVar4": "result",
                "uVar5": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000b54": {
            "additional_data": {
                "FUN_080006b4": {
                    "analyze_data": 1,
                    "calculate_sum": 1,
                    "count_elements": 1,
                    "initialize_data": 1
                },
                "FUN_0800076c": {
                    "cleanup": 2,
                    "reset_data": 1,
                    "reset_values": 1
                },
                "FUN_080007f0": {
                    "check_byte": 1,
                    "check_condition": 1,
                    "check_data": 1,
                    "check_element": 1
                },
                "FUN_080008cc": {
                    "handle_error_code": 1,
                    "handle_non_zero_result": 1,
                    "process_error": 1,
                    "show_message": 1
                },
                "FUN_080008e2": {
                    "handle_case12": 1,
                    "process_type1_and2": 2,
                    "process_type1or2": 1
                },
                "FUN_08000998": {
                    "handle_case34": 1,
                    "process_type3_and4": 2,
                    "process_type3or4": 1
                },
                "FUN_08000a00": {
                    "handle_case5": 1,
                    "process_type5": 3
                },
                "FUN_08000a4e": {
                    "handle_case6": 1,
                    "process_type6": 3
                },
                "FUN_08000a7a": {
                    "handle_case_f": 1,
                    "process_type15": 1,
                    "process_type_f": 2
                },
                "FUN_08000b04": {
                    "handle_case10": 1,
                    "process_type10": 2,
                    "process_type16": 1
                },
                "FUN_08000b54": {
                    "execute_function": 1,
                    "execute_operation": 1,
                    "perform_operation": 1,
                    "process_binary_function": 1,
                    "process_data": 19,
                    "process_input": 2
                },
                "FUN_08004204": {
                    "execute_function": 1,
                    "get_offset": 1,
                    "handle_error": 1,
                    "reset_data": 1
                },
                "bVar1": {
                    "byte_result": 1,
                    "byte_val": 1,
                    "byte_value": 5,
                    "result": 15,
                    "result1": 1,
                    "result_byte": 8
                },
                "iVar2": {
                    "error": 1,
                    "error_code": 3,
                    "func_result": 1,
                    "integer_value": 1,
                    "operation_result": 1,
                    "result": 5,
                    "result1": 1,
                    "result2": 1,
                    "result_int": 3,
                    "return_value": 5,
                    "status": 2,
                    "temp_var": 3,
                    "temp_var1": 3,
                    "var1": 1
                },
                "iVar3": {
                    "output": 3,
                    "output_value": 1,
                    "processed_value": 1,
                    "result": 3,
                    "result2": 2,
                    "result4": 1,
                    "return_value": 18,
                    "temp_var2": 1,
                    "var2": 1
                },
                "param_1": {
                    "array": 3,
                    "array_ptr": 1,
                    "binary_data": 1,
                    "data": 7,
                    "data_buffer": 1,
                    "data_container": 1,
                    "data_struct": 1,
                    "function_data": 2,
                    "function_params": 2,
                    "input": 1,
                    "input_array": 3,
                    "input_data": 4,
                    "param_array": 1,
                    "parameter1": 1,
                    "pointer_array": 1,
                    "ptr_array": 1
                },
                "param_2": {
                    "array": 1,
                    "array_pointer": 1,
                    "data": 3,
                    "data_array": 2,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_size": 1,
                    "element_ptr": 1,
                    "external_data": 1,
                    "input": 4,
                    "input_array": 3,
                    "input_data": 2,
                    "input_param": 1,
                    "integer_array": 1,
                    "param": 1,
                    "param_count": 1,
                    "parameter2": 1,
                    "pointer": 2,
                    "value": 2,
                    "values": 1
                },
                "param_3": {
                    "config_value": 1,
                    "extra_param": 1,
                    "flag": 8,
                    "input_value": 1,
                    "param": 5,
                    "param3": 1,
                    "param_value": 1,
                    "parameter3": 1,
                    "size": 2,
                    "value": 10
                },
                "unaff_r5": {
                    "byte_count": 1,
                    "byte_value": 3,
                    "byte_value_uint": 1,
                    "comparison_value": 1,
                    "condition": 2,
                    "count": 1,
                    "flag_value": 1,
                    "index": 1,
                    "length": 2,
                    "result3": 1,
                    "result_value": 1,
                    "temp": 2,
                    "temp_var2": 3,
                    "unaff": 1,
                    "unaff_data_size": 1,
                    "unprocessed_value": 1,
                    "unsigned_int": 1,
                    "unsigned_value": 1,
                    "value": 5
                }
            },
            "called": [
                "FUN_08000998",
                "FUN_08000a7a",
                "FUN_080007f0",
                "FUN_08004204",
                "FUN_080008e2",
                "FUN_08000b04",
                "FUN_0800076c",
                "FUN_08000a00",
                "FUN_080006b4",
                "FUN_08000a4e",
                "FUN_080008cc"
            ],
            "calling": [
                "FUN_08000c64"
            ],
            "code": "\nint process_data_08000b54(int **data,int *input,undefined4 value)\n\n{\n  byte result;\n  int return_value;\n  uint value;\n  int return_value;\n  \n  data[0x13] = input;\n  *(char *)(data + 0x18) = (char)value;\n  if (*(byte *)((int)data + 5) < 4) {\n    result = (**(code **)(**data + 8))();\n    value = (uint)result;\n  }\n  if (value == 0) {\n    return_value = 0;\n  }\n  else if ((int)value < 8) {\n    return_value = 0;\n  }\n  else {\n    return_value = FUN_080006b4(data);\n    *(char *)(data + 2) = (char)return_value;\n    if (*(char *)((int)data + 9) == *(char *)(data + 1)) {\n      return_value = FUN_080007f0(data);\n      if (return_value < 1) {\n        return_value = FUN_08004204();\n        data[0x17] = (int *)((uint)*(ushort *)((int)data + 0x56) + return_value);\n        *(undefined *)(data + 2) = 0;\n        switch(*(undefined *)((int)data + 10)) {\n        case 1:\n        case 2:\n          return_value = FUN_080008e2(data,input,value);\n          break;\n        case 3:\n        case 4:\n          return_value = FUN_08000998(data,input,value);\n          break;\n        case 5:\n          return_value = FUN_08000a00(data,input,value);\n          break;\n        case 6:\n          return_value = FUN_08000a4e(data,input,value);\n          break;\n        case 0xf:\n          return_value = FUN_08000a7a(data,input,value);\n          break;\n        case 0x10:\n          return_value = FUN_08000b04(data,input,value);\n        }\n      }\n      else {\n        if (return_value != 0xff) {\n          FUN_080008cc(data,return_value);\n          FUN_0800076c(data);\n        }\n        *(char *)(data + 2) = (char)return_value;\n        return_value = (int)(char)return_value;\n      }\n    }\n    else {\n      return_value = 0;\n    }\n  }\n  return return_value;\n}\n\n",
            "current_name": "process_data_08000b54",
            "entrypoint": "0x08000b54",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000b54": "process_data_08000b54",
                "bVar1": "result",
                "iVar2": "return_value",
                "iVar3": "return_value",
                "param_1": "data",
                "param_2": "input",
                "param_3": "value",
                "unaff_r5": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000c4c": {
            "additional_data": {
                "FUN_080005e4": {
                    "configure_system": 1,
                    "execute_subfunction_a": 1,
                    "function1": 1,
                    "initialize_memory": 2,
                    "initialize_subsystem": 2,
                    "load_configuration": 1,
                    "set_display": 1,
                    "set_flag": 2,
                    "set_initial_value": 5,
                    "set_initial_values": 7,
                    "set_memory": 1,
                    "set_mode": 1,
                    "set_option": 1,
                    "set_parameters": 2,
                    "set_params": 1,
                    "set_to_default_value": 1
                },
                "FUN_08000600": {
                    "allocate_memory": 7,
                    "assign_memory": 1,
                    "copy_data": 1,
                    "execute_subfunction_b": 1,
                    "function2": 1,
                    "load_configuration": 1,
                    "load_data": 12,
                    "load_data_to_memory": 1,
                    "modify_data": 1,
                    "perform_operation": 1,
                    "process_data": 3
                },
                "FUN_08000c4c": {
                    "initialize_app": 3,
                    "initialize_application": 3,
                    "initialize_binary": 1,
                    "initialize_components": 1,
                    "initialize_data": 13,
                    "initialize_function": 1,
                    "initialize_process": 1,
                    "initialize_program": 1,
                    "initialize_resources": 1,
                    "initialize_system": 6
                },
                "param_1": {
                    "buffer": 1,
                    "data_ptr": 2,
                    "param1": 2
                },
                "param_2": {
                    "data_size": 1,
                    "param2": 2,
                    "size": 2
                },
                "param_3": {
                    "param3": 2,
                    "value3": 1
                },
                "param_4": {
                    "param4": 2,
                    "value4": 1
                }
            },
            "called": [
                "FUN_080005e4",
                "FUN_08000600"
            ],
            "calling": [
                "FUN_08004658"
            ],
            "code": "\nvoid initialize_data_08000c4c(void)\n\n{\n  FUN_080005e4(0);\n  FUN_08000600(&DAT_20000124,0x4b00);\n  return;\n}\n\n",
            "current_name": "initialize_data_08000c4c",
            "entrypoint": "0x08000c4c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000c4c": "initialize_data_08000c4c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000c64": {
            "additional_data": {
                "FUN_08000b54": {
                    "call_subfunction": 1,
                    "copy_data": 9,
                    "modify_data": 1,
                    "perform_operation": 1,
                    "perform_sub_task": 1,
                    "process_data": 6,
                    "process_data_sub": 1,
                    "sub_function": 1
                },
                "FUN_08000c64": {
                    "decompiled_function": 1,
                    "execute_data_processing": 3,
                    "execute_initialization": 1,
                    "execute_some_task": 1,
                    "extract_and_process_data": 1,
                    "extract_data": 1,
                    "extract_data_from_binary": 1,
                    "initialize_data": 13,
                    "process_data": 5
                },
                "in_r3": {
                    "input": 2,
                    "input_parameter": 1,
                    "input_value": 7,
                    "output_buffer": 1,
                    "param": 4,
                    "param_in_r3": 1,
                    "parameter": 4,
                    "register_r3": 1,
                    "register_value": 1,
                    "some_variable": 1,
                    "undefined_value": 1,
                    "unused": 1,
                    "unused_argument": 1,
                    "value": 1
                },
                "param_1": {
                    "array_pointer": 1,
                    "array_ptr": 3,
                    "data": 1,
                    "data_array": 1,
                    "data_array_ptr": 1,
                    "data_pointer": 4,
                    "data_ptr": 1,
                    "dest": 1,
                    "destination": 1,
                    "input_array": 1,
                    "input_array_ptr": 1,
                    "input_pointer1": 1,
                    "pointer_array": 1,
                    "pointer_param": 1,
                    "ptr1": 1,
                    "source": 1,
                    "source_array": 1,
                    "source_data": 5
                },
                "param_2": {
                    "array_pointer": 1,
                    "buffer": 1,
                    "buffer_ptr": 1,
                    "data": 3,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 4,
                    "destination": 1,
                    "destination_array": 1,
                    "destination_data": 5,
                    "input_pointer2": 1,
                    "int_ptr": 1,
                    "integer_param": 1,
                    "output_array": 1,
                    "output_array_ptr": 1,
                    "ptr2": 1,
                    "source": 1,
                    "src": 1
                },
                "param_3": {
                    "array_size": 1,
                    "data_length": 2,
                    "data_size": 2,
                    "input_value3": 1,
                    "length": 3,
                    "param_value": 1,
                    "size": 16,
                    "undefined_param": 1
                }
            },
            "called": [
                "FUN_08000b54"
            ],
            "calling": [
                "FUN_08004658"
            ],
            "code": "\nvoid initialize_data_08000c64(void)\n\n{\n  undefined4 input_value;\n  \n  FUN_08000b54(&DAT_20000124,&DAT_20000004,0x10,input_value,input_value);\n  return;\n}\n\n",
            "current_name": "initialize_data_08000c64",
            "entrypoint": "0x08000c64",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000c64": "initialize_data_08000c64",
                "in_r3": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000c8c": {
            "additional_data": {
                "FUN_08000c8c": {
                    "configure_memory_access": 1,
                    "configure_system": 1,
                    "initialize_app": 2,
                    "initialize_hardware": 1,
                    "initialize_memory": 1,
                    "initialize_system": 25
                },
                "FUN_08000e60": {
                    "clear_data": 1,
                    "configure_system": 1,
                    "perform_task4": 1,
                    "perform_task_c": 1,
                    "reset_data": 3,
                    "reset_flags": 1,
                    "reset_system": 7,
                    "set_system_value": 1
                },
                "FUN_08000ee0": {
                    "calculate_time": 1,
                    "convert_millis_to_seconds": 1,
                    "convert_milliseconds_to_seconds": 1,
                    "convert_time": 1,
                    "convert_to_milliseconds": 1,
                    "convert_to_seconds": 1,
                    "convert_value_to_seconds": 1,
                    "delay": 1,
                    "delay_operation": 1,
                    "display_value": 1,
                    "perform_calculation": 2,
                    "process_counter": 1,
                    "process_result": 1,
                    "process_value": 1,
                    "set_timer": 1
                },
                "FUN_08000f2c": {
                    "execute_action": 1,
                    "execute_process": 1,
                    "execute_subtask": 1,
                    "execute_task": 2,
                    "perform_action": 1,
                    "perform_operation": 1,
                    "perform_task3": 1,
                    "perform_task_b": 1,
                    "print_flag": 1,
                    "process_value": 1,
                    "reset_timer": 1,
                    "set_counter": 1,
                    "set_status": 1,
                    "set_threshold": 1,
                    "task_completion": 1
                },
                "FUN_08001f9c": {
                    "configure_system_b": 1,
                    "do_process": 1,
                    "do_something": 1,
                    "execute_task1": 1,
                    "initialize_device": 1,
                    "initialize_devices": 1,
                    "perform_action": 2,
                    "perform_initial_setup": 1,
                    "perform_initialization": 3,
                    "perform_operation": 2,
                    "perform_operations": 1,
                    "perform_task1": 1
                },
                "FUN_0800201c": {
                    "configure_device": 1,
                    "configure_system_a": 1,
                    "initialize_flag": 2,
                    "initialize_hardware": 1,
                    "process_flag": 1,
                    "set_configuration": 1,
                    "set_flag": 4,
                    "set_flags": 1,
                    "setup_initial_values": 1,
                    "setup_system": 1,
                    "update_flag": 2
                },
                "FUN_08002488": {
                    "configure_mask": 1,
                    "execute_function": 1,
                    "load_data": 1,
                    "modify_data": 1,
                    "modify_flag_data": 1,
                    "perform_operation": 1,
                    "perform_task2": 1,
                    "perform_task_a": 1,
                    "process_data": 1,
                    "set_data": 2,
                    "set_parameters": 1,
                    "update_settings": 2,
                    "update_value": 1,
                    "update_values": 1
                },
                "FUN_080025e0": {
                    "calculate_value": 4,
                    "get_counter": 1,
                    "get_current_time": 2,
                    "get_current_value": 1,
                    "get_data": 1,
                    "get_elapsed_milliseconds": 1,
                    "get_result": 1,
                    "get_time": 2,
                    "get_timer": 1,
                    "get_timer_value": 1,
                    "get_value": 1
                },
                "local_14": {
                    "buffer": 1,
                    "chunk_size": 1,
                    "config_value13": 1,
                    "param4": 1,
                    "parameter9": 1,
                    "size2": 5,
                    "size6": 1,
                    "temp5": 1,
                    "value12": 5,
                    "value2": 1,
                    "value5": 3,
                    "value6": 2,
                    "value7": 3,
                    "value9": 2,
                    "value_g": 1
                },
                "local_18": {
                    "buffer_size": 1,
                    "config_value12": 1,
                    "param3": 1,
                    "parameter8": 1,
                    "range": 1,
                    "size1": 5,
                    "size5": 1,
                    "temp4": 1,
                    "value1": 1,
                    "value11": 5,
                    "value4": 3,
                    "value5": 2,
                    "value6": 3,
                    "value8": 2,
                    "value_f": 1
                },
                "local_1c": {
                    "config_value11": 1,
                    "count5": 2,
                    "count6": 1,
                    "count_e": 1,
                    "flag6": 1,
                    "initial": 1,
                    "offset": 2,
                    "option5": 1,
                    "param2": 1,
                    "param3": 1,
                    "parameter7": 1,
                    "temp3": 1,
                    "value10": 5,
                    "value3": 3,
                    "value4": 1,
                    "value5": 2,
                    "value7": 2,
                    "variable3": 1,
                    "zero": 1
                },
                "local_20": {
                    "amount": 1,
                    "bit": 1,
                    "config_value10": 1,
                    "count4": 1,
                    "count5": 1,
                    "increment": 1,
                    "option": 1,
                    "option4": 1,
                    "param1": 1,
                    "param2": 1,
                    "parameter6": 1,
                    "retry": 1,
                    "size4": 1,
                    "temp2": 1,
                    "value2": 3,
                    "value4": 2,
                    "value5": 2,
                    "value6": 2,
                    "value9": 5,
                    "value_e": 1
                },
                "local_24": {
                    "config_value9": 1,
                    "count4": 1,
                    "count_d": 1,
                    "delay": 1,
                    "flag5": 1,
                    "length": 1,
                    "limit": 1,
                    "mask": 4,
                    "mask3": 2,
                    "number": 1,
                    "param1": 1,
                    "size": 1,
                    "temp1": 1,
                    "value1": 3,
                    "value3": 3,
                    "value4": 1,
                    "value8": 5
                },
                "local_28": {
                    "config_value8": 1,
                    "constant7": 1,
                    "count2": 1,
                    "count4": 2,
                    "counter4": 2,
                    "limit": 2,
                    "limit2": 1,
                    "number": 1,
                    "param7": 1,
                    "parameter5": 1,
                    "status": 1,
                    "value2": 1,
                    "value3": 2,
                    "value4": 3,
                    "value5": 2,
                    "value7": 5,
                    "value_d": 1
                },
                "local_2c": {
                    "config_value7": 1,
                    "constant6": 1,
                    "count1": 1,
                    "count3": 4,
                    "count_c": 1,
                    "counter3": 2,
                    "flag4": 1,
                    "increment": 1,
                    "index": 1,
                    "option3": 1,
                    "param6": 1,
                    "parameter4": 1,
                    "pointer_count": 1,
                    "step": 1,
                    "value1": 1,
                    "value2": 1,
                    "value4": 2,
                    "value6": 5
                },
                "local_30": {
                    "buffer_size": 1,
                    "config_value6": 1,
                    "constant5": 1,
                    "delay": 1,
                    "limit": 1,
                    "limit1": 1,
                    "offset": 1,
                    "param5": 1,
                    "parameter3": 1,
                    "size": 2,
                    "size3": 1,
                    "time": 1,
                    "value2": 1,
                    "value3": 8,
                    "value5": 5,
                    "value_c": 1
                },
                "local_34": {
                    "config_value5": 1,
                    "constant4": 1,
                    "count": 4,
                    "count2": 4,
                    "count_b": 1,
                    "counter2": 2,
                    "flag3": 1,
                    "length": 1,
                    "loop_count": 1,
                    "option2": 1,
                    "param4": 1,
                    "parameter2": 1,
                    "size": 1,
                    "value2": 3,
                    "value4": 5
                },
                "local_38": {
                    "address": 4,
                    "config_value4": 1,
                    "constant3": 1,
                    "data_size": 1,
                    "mask2": 2,
                    "memory_address": 1,
                    "param3": 1,
                    "size2": 1,
                    "value2": 10,
                    "value3": 5,
                    "value_b": 1
                },
                "local_3c": {
                    "config_value3": 1,
                    "constant2": 1,
                    "count": 3,
                    "count1": 4,
                    "count_a": 1,
                    "counter": 1,
                    "counter1": 2,
                    "flag2": 1,
                    "number": 1,
                    "option": 2,
                    "option1": 1,
                    "param2": 1,
                    "parameter1": 1,
                    "value1": 3,
                    "value2": 5,
                    "variable2": 1
                },
                "local_50": {
                    "config_value2": 1,
                    "constant1": 1,
                    "flag_value": 1,
                    "mask1": 2,
                    "memory_address": 1,
                    "param1": 1,
                    "size1": 1,
                    "value": 3,
                    "value1": 17,
                    "value_a": 1
                },
                "local_54": {
                    "config_value1": 1,
                    "flag": 25,
                    "is_flag_set": 2,
                    "option_flag": 1
                },
                "param_1": {
                    "input": 1,
                    "milliseconds": 3,
                    "seconds": 1,
                    "value1": 1
                },
                "param_2": {
                    "value": 1,
                    "value2": 1
                },
                "param_3": {
                    "num": 1,
                    "value3": 1
                }
            },
            "called": [
                "FUN_08000ee0",
                "FUN_0800201c",
                "FUN_08001f9c",
                "FUN_08000f2c",
                "FUN_08000e60",
                "FUN_08002488",
                "FUN_080025e0"
            ],
            "calling": [
                "FUN_080034ce"
            ],
            "code": "\n\n\nvoid initialize_system_08000c8c(void)\n\n{\n  uint uVar1;\n  undefined4 flag;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value2;\n  undefined4 value4;\n  undefined4 value3;\n  undefined4 value6;\n  undefined4 value7;\n  undefined4 value8;\n  undefined4 value9;\n  undefined4 value10;\n  undefined4 value11;\n  undefined4 size2;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0xc000;\n  flag = 1;\n  value1 = 0x50000;\n  value2 = 2;\n  value2 = 0x400000;\n  value4 = 8;\n  value3 = 0x150;\n  value6 = 2;\n  value7 = 7;\n  FUN_0800201c(&flag);\n  FUN_08001f9c();\n  value8 = 0xf;\n  value9 = 2;\n  value10 = 0;\n  value11 = 0x1400;\n  size2 = 0x1000;\n  FUN_08002488(&value8,5);\n  uVar1 = FUN_080025e0();\n  FUN_08000ee0(uVar1 / 1000);\n  FUN_08000f2c(4);\n  FUN_08000e60(0xffffffff,0,0);\n  return;\n}\n\n",
            "current_name": "initialize_system_08000c8c",
            "entrypoint": "0x08000c8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000c8c": "initialize_system_08000c8c",
                "local_14": "size2",
                "local_18": "value11",
                "local_1c": "value10",
                "local_20": "value9",
                "local_24": "value8",
                "local_28": "value7",
                "local_2c": "value6",
                "local_30": "value3",
                "local_34": "value4",
                "local_38": "value2",
                "local_3c": "value2",
                "local_50": "value1",
                "local_54": "flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000d8e": {
            "additional_data": {
                "FUN_08000d8e": {
                    "execute_initialization": 9,
                    "execute_initialize_function": 1,
                    "execute_main_function": 1,
                    "initialize": 3,
                    "initialize_and_execute": 2,
                    "initialize_application": 4,
                    "initialize_components": 1,
                    "initialize_data": 1,
                    "initialize_program": 2,
                    "initialize_system": 5,
                    "run_main_function": 1,
                    "start_function": 1
                },
                "FUN_080034ce": {
                    "call_sub_function": 1,
                    "execute_initialization": 3,
                    "execute_startup_process": 1,
                    "execute_sub_function": 1,
                    "execute_subroutine": 1,
                    "execute_system_initialization": 2,
                    "helper_function": 1,
                    "initialize_data": 1,
                    "perform_action": 4,
                    "perform_additional_operations": 3,
                    "perform_critical_operation": 1,
                    "perform_data_processing": 1,
                    "perform_initial_setup": 1,
                    "perform_initialization": 7,
                    "perform_secondary_operation": 1,
                    "perform_system_checks": 1,
                    "sub_function": 1
                }
            },
            "called": [
                "FUN_080034ce"
            ],
            "calling": [
                "FUN_08004648"
            ],
            "code": "\nvoid execute_initialization_08000d8e(void)\n\n{\n  FUN_080034ce();\n  return;\n}\n\n",
            "current_name": "execute_initialization_08000d8e",
            "entrypoint": "0x08000d8e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000d8e": "execute_initialization_08000d8e"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000d96": {
            "called": [],
            "calling": [
                "FUN_08000de4"
            ],
            "code": "\nvoid FUNC_08000d96(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08000d96",
            "entrypoint": "0x08000d96",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08000d96": "FUNC_08000d96"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08000d98": {
            "additional_data": {
                "0xf": {
                    "limit": 3,
                    "max_threshold": 1,
                    "threshold": 12
                },
                "0xffffffff": {
                    "arg1": 1,
                    "constant": 2,
                    "constant3": 4,
                    "constant_value3": 1,
                    "counter1": 1,
                    "default_value": 1,
                    "operation_constant": 1,
                    "operation_param1": 2,
                    "param1": 1,
                    "parameter1": 1,
                    "value1": 1
                },
                "DAT_20000024": {
                    "constant2": 12,
                    "constant_2": 1,
                    "constant_b": 2,
                    "constant_value2": 1,
                    "data_b": 1,
                    "divisor": 3,
                    "interval": 1,
                    "threshold_divider": 1,
                    "value2": 2
                },
                "DAT_20000028": {
                    "config_value": 1,
                    "counter2": 1,
                    "current_device": 1,
                    "current_param": 1,
                    "current_size": 1,
                    "current_value": 1,
                    "data": 1,
                    "data_variable": 1,
                    "device_status": 1,
                    "output_value": 1,
                    "param_value": 2,
                    "saved_parameter": 1,
                    "stored_data": 1,
                    "stored_param": 4,
                    "stored_parameter": 1,
                    "stored_value": 5
                },
                "DAT_2000002c": {
                    "constant1": 12,
                    "constant_1": 1,
                    "constant_a": 2,
                    "constant_value1": 1,
                    "data_a": 1,
                    "dividend": 3,
                    "threshold_dividend": 1,
                    "total_time": 1,
                    "value1": 2
                },
                "FUN_08000d98": {
                    "calculate_and_set_param": 1,
                    "calculate_and_set_threshold": 1,
                    "check_and_set_data": 1,
                    "check_and_update_parameter": 1,
                    "execute_function": 1,
                    "handle_param": 1,
                    "initialize_and_get_parameter": 1,
                    "initialize_and_set_data": 1,
                    "initialize_and_set_param": 2,
                    "initialize_application": 1,
                    "initialize_data": 6,
                    "initialize_device": 2,
                    "initialize_function": 1,
                    "initialize_system": 1,
                    "initialize_variable": 1,
                    "process_input": 1,
                    "update_data": 1,
                    "validate_and_set_param": 2,
                    "validate_and_set_value": 1,
                    "validate_and_store_param": 1,
                    "validate_and_update_input": 1,
                    "validate_and_update_param": 1,
                    "validate_input_and_set_data": 1
                },
                "FUN_08000e60": {
                    "do_something": 1,
                    "execute_operation": 1,
                    "execute_process": 1,
                    "perform_operation": 9,
                    "process_data": 1,
                    "send_data": 1,
                    "set_configuration": 1,
                    "set_data": 2,
                    "set_value": 1,
                    "set_values": 5,
                    "update_counter": 1,
                    "update_values": 1
                },
                "FUN_08000ee0": {
                    "calculate": 1,
                    "calculate_division": 4,
                    "calculate_divisor": 1,
                    "calculate_factor": 1,
                    "calculate_ratio": 4,
                    "calculate_threshold": 2,
                    "calculate_timeout": 1,
                    "calculate_value": 11
                },
                "iVar1": {
                    "division_result": 1,
                    "result": 28,
                    "return_value": 2
                },
                "param_1": {
                    "data": 1,
                    "data_size": 2,
                    "data_value": 1,
                    "device_id": 1,
                    "input": 1,
                    "input_param": 6,
                    "input_value": 9,
                    "new_value": 1,
                    "param": 1,
                    "parameter": 2,
                    "value": 6
                },
                "param_2": {
                    "arg2": 1,
                    "data": 1,
                    "operation_param1": 1,
                    "operation_param2": 1,
                    "param": 1,
                    "param2": 1,
                    "value": 1,
                    "value1": 2,
                    "value2": 1
                },
                "param_3": {
                    "arg3": 1,
                    "flag": 3,
                    "operation_param2": 1,
                    "operation_param3": 1,
                    "param3": 1,
                    "value2": 2,
                    "value3": 1
                }
            },
            "called": [
                "FUN_08000ee0",
                "FUN_08000e60"
            ],
            "calling": [
                "FUN_08000de4",
                "FUN_08002488"
            ],
            "code": "\nundefined4 initialize_and_set_data_08000d98(uint input_value)\n\n{\n  int result;\n  \n  result = FUN_08000ee0(DAT_2000002c / (1000 / DAT_20000024));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < input_value) {\n    return 1;\n  }\n  FUN_08000e60(0xffffffff,input_value,0);\n  DAT_20000028 = input_value;\n  return 0;\n}\n\n",
            "current_name": "initialize_and_set_data_08000d98",
            "entrypoint": "0x08000d98",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000d98": "initialize_and_set_data_08000d98",
                "iVar1": "result",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000de4": {
            "additional_data": {
                "0x700": {
                    "enable_mask": 1
                },
                "0xf": {
                    "functionality_mask": 1,
                    "operation_param": 1
                },
                "FUNC_08000d96": {
                    "configure_system": 1,
                    "execute_initialization": 2,
                    "execute_task": 3,
                    "initialize_system": 1,
                    "perform_action": 10,
                    "perform_checks": 1,
                    "perform_cleanup": 1,
                    "perform_initialization": 3,
                    "perform_operation": 4,
                    "perform_system_tasks": 1,
                    "process_data": 1,
                    "reverse_order": 1
                },
                "FUN_08000d96": {
                    "enable_functionality": 1
                },
                "FUN_08000d98": {
                    "configure_settings": 1,
                    "perform_operation": 1,
                    "set_configuration": 9,
                    "set_flag": 5,
                    "set_flags": 2,
                    "set_interrupt_level": 1,
                    "set_log_level": 1,
                    "set_mode": 6,
                    "set_permissions": 3,
                    "set_power_level": 1,
                    "set_value": 1
                },
                "FUN_08000de4": {
                    "initialize_and_run": 2,
                    "initialize_application": 2,
                    "initialize_components": 1,
                    "initialize_data": 2,
                    "initialize_hardware": 1,
                    "initialize_peripheral": 1,
                    "initialize_program": 2,
                    "initialize_system": 17,
                    "initialize_system_configuration": 1,
                    "set_configuration": 1,
                    "setup_and_execute": 1
                },
                "FUN_08000e3c": {
                    "configure": 1,
                    "configure_component": 1,
                    "configure_device": 2,
                    "configure_peripheral": 1,
                    "configure_settings": 2,
                    "configure_subsystem": 1,
                    "configure_system": 2,
                    "display_message": 2,
                    "execute_command": 1,
                    "execute_task": 2,
                    "initialize_components": 1,
                    "initialize_module": 1,
                    "perform_action": 1,
                    "perform_operation": 1,
                    "prepare_device": 1,
                    "print_message": 2,
                    "print_status": 1,
                    "process_data": 1,
                    "set_configuration": 1,
                    "set_mode": 3,
                    "start_process": 1,
                    "update_config": 1,
                    "verify_data": 1
                },
                "_DAT_40023c00": {
                    "flag": 1,
                    "settings": 1,
                    "system_config": 1,
                    "system_configuration": 2
                },
                "param_1": {
                    "config_value": 1,
                    "configuration_value": 1,
                    "flag": 4,
                    "flags": 3,
                    "input_value": 2,
                    "level": 2,
                    "mode": 1,
                    "mode_value": 1,
                    "num": 1,
                    "number_of_iterations": 1,
                    "power_level": 1,
                    "settings": 2,
                    "task_id": 1,
                    "value": 3
                }
            },
            "called": [
                "FUN_08000d98",
                "FUN_08000d96",
                "FUN_08000e3c"
            ],
            "calling": [
                "FUN_080034ce"
            ],
            "code": "\n\n\nundefined4 initialize_system_configuration_08000de4(void)\n\n{\n  _DAT_40023c00 = _DAT_40023c00 | 0x700;\n  FUN_08000e3c(3);\n  FUN_08000d98(0xf);\n  FUNC_08000d96();\n  return 0;\n}\n\n",
            "current_name": "initialize_system_configuration_08000de4",
            "entrypoint": "0x08000de4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000de4": "initialize_system_configuration_08000de4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000e18": {
            "additional_data": {
                "DAT_20000024": {
                    "addend": 1,
                    "addition_value": 2,
                    "additional_value": 1,
                    "current_value": 1,
                    "data_value": 1,
                    "extra_data": 1,
                    "first_number": 1,
                    "input": 4,
                    "input_value": 7,
                    "number_to_add": 1,
                    "value": 7,
                    "value_to_add": 4
                },
                "DAT_20000670": {
                    "accumulated_value": 1,
                    "counter": 1,
                    "global_sum": 1,
                    "output_value": 1,
                    "result": 10,
                    "sum": 12,
                    "sum_result": 1,
                    "total": 1,
                    "total_sum": 1,
                    "updated_data": 1,
                    "updated_result": 1
                },
                "FUN_08000e18": {
                    "accumulate_values": 1,
                    "add_and_assign": 1,
                    "add_dat_20000670_to_dat_20000024": 1,
                    "add_data_and_value": 1,
                    "add_data_to_global_variable": 1,
                    "add_previous_value_to_sum": 1,
                    "add_two_numbers": 1,
                    "add_variable_to_global": 1,
                    "add_variable_to_global_sum": 1,
                    "addition": 2,
                    "addition_and_assignment": 2,
                    "addition_and_update": 2,
                    "calculate_sum": 4,
                    "increment_sum": 1,
                    "update_counter": 1,
                    "update_data": 1,
                    "update_global_variable": 1,
                    "update_sum": 6,
                    "update_total": 1,
                    "update_variable": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003476"
            ],
            "code": "\nvoid update_sum_08000e18(void)\n\n{\n  DAT_20000670 = (uint)DAT_20000024 + DAT_20000670;\n  return;\n}\n\n",
            "current_name": "update_sum_08000e18",
            "entrypoint": "0x08000e18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000e18": "update_sum_08000e18"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000e30": {
            "additional_data": {
                "DAT_20000670": {
                    "data": 13,
                    "data_offset": 1,
                    "global_data": 1,
                    "global_variable": 3,
                    "result": 1
                },
                "FUN_08000e30": {
                    "get_dat_value": 1,
                    "get_data": 14,
                    "get_data_offset": 1,
                    "get_data_value": 8,
                    "get_global_data": 1,
                    "get_global_value": 2,
                    "get_global_variable": 3,
                    "get_global_variable_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800201c",
                "FUN_08002dd0",
                "FUN_08002d0c",
                "FUN_0800346c",
                "FUN_08001f9c",
                "FUN_08002488",
                "FUN_08003d18"
            ],
            "code": "\nundefined4 get_data_value_08000e30(void)\n\n{\n  return DAT_20000670;\n}\n\n",
            "current_name": "get_data_value_08000e30",
            "entrypoint": "0x08000e30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000e30": "get_data_value_08000e30"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000e3c": {
            "additional_data": {
                "0x5fa0000": {
                    "constant": 1
                },
                "0xf8ff": {
                    "mask": 1
                },
                "FUN_08000e3c": {
                    "set_data_register": 1,
                    "update_config": 1,
                    "update_configuration": 7,
                    "update_configuration_register": 1,
                    "update_control_register": 2,
                    "update_data": 1,
                    "update_data_address": 1,
                    "update_data_and_flag": 1,
                    "update_data_bits": 1,
                    "update_data_register": 1,
                    "update_data_with_param": 1,
                    "update_data_with_parameter": 1,
                    "update_device_info": 1,
                    "update_memory_value": 1,
                    "update_register": 2,
                    "update_register_value": 5,
                    "update_status": 1,
                    "update_variable": 1,
                    "update_variable_mask": 1
                },
                "_DAT_e000ed0c": {
                    "config_data": 1,
                    "config_value": 1,
                    "configuration": 1,
                    "configuration_data": 1,
                    "configuration_register": 3,
                    "configuration_value": 1,
                    "control_register": 2,
                    "current_status": 1,
                    "data_address": 1,
                    "data_and_flag": 1,
                    "data_register": 2,
                    "data_to_update": 1,
                    "data_value": 1,
                    "device_config": 1,
                    "existing_value": 1,
                    "register": 1,
                    "register_value": 7,
                    "updated_value": 1,
                    "variable_to_update": 1
                },
                "param_1": {
                    "config": 1,
                    "config_flags": 1,
                    "config_value": 3,
                    "data": 2,
                    "device_status": 1,
                    "input": 3,
                    "input_flag": 1,
                    "input_param": 1,
                    "input_value": 16,
                    "status": 1,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08000de4",
                "FUN_08004648"
            ],
            "code": "\n\n\nvoid update_configuration_register_08000e3c(uint input_value)\n\n{\n  _DAT_e000ed0c = (input_value & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "current_name": "update_configuration_register_08000e3c",
            "entrypoint": "0x08000e3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000e3c": "update_configuration_register_08000e3c",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000e60": {
            "additional_data": {
                "FUN_08000e60": {
                    "apply_bitmask_and_shift": 1,
                    "apply_mask_and_shift_bits": 1,
                    "apply_transformation": 1,
                    "extract_and_store_bits": 1,
                    "map_and_store_data": 1,
                    "modify_data": 1,
                    "store_data": 1,
                    "update_buffer": 1,
                    "update_char": 1,
                    "update_char_value_in_memory": 1,
                    "update_character": 5,
                    "update_character_data": 2,
                    "update_data": 3,
                    "update_memory": 4,
                    "update_memory_value": 3,
                    "update_value_in_memory": 1,
                    "write_bits_to_memory": 1,
                    "write_data_to_memory": 1,
                    "write_to_memory": 1
                },
                "char": {
                    "byte": 1
                },
                "param_1": {
                    "address": 10,
                    "buffer_index": 1,
                    "character_index": 5,
                    "character_position": 1,
                    "data_index": 1,
                    "dest_offset": 1,
                    "input": 1,
                    "input_index": 3,
                    "memory_address": 3,
                    "memory_offset": 1,
                    "num_bits": 1,
                    "offset": 1,
                    "position": 1,
                    "source_address": 1
                },
                "param_2": {
                    "bit_mask": 3,
                    "bit_mask1": 1,
                    "bitmask": 2,
                    "byte_data1": 1,
                    "character_attribute": 1,
                    "character_bitmask": 1,
                    "character_mask": 1,
                    "character_value": 1,
                    "data": 3,
                    "data_mask": 1,
                    "input_value": 1,
                    "input_value1": 1,
                    "mask": 8,
                    "mask1": 1,
                    "source_data": 1,
                    "value": 2,
                    "value1": 1,
                    "value_mask": 1
                },
                "param_3": {
                    "bit_mask2": 1,
                    "bitmask": 1,
                    "byte_data2": 1,
                    "character_data": 1,
                    "character_mask": 1,
                    "character_value": 1,
                    "data": 6,
                    "data_value": 2,
                    "input_value2": 1,
                    "mask": 7,
                    "mask2": 1,
                    "original_value": 1,
                    "value": 6,
                    "value2": 1
                },
                "uVar1": {
                    "extracted_bits": 1,
                    "mask1": 2,
                    "result": 1,
                    "shift_amount": 14,
                    "shift_amount1": 1,
                    "shift_count": 2,
                    "shift_value": 1,
                    "shifted_bits": 5,
                    "shifted_mask": 1,
                    "shifted_mask1": 1,
                    "shifted_masked_data": 1,
                    "shifted_value": 1
                },
                "uVar1_2": {
                    "masked_value": 1
                },
                "uVar1_and_FF": {
                    "masked_value": 1
                },
                "uVar1_bitShifted": {
                    "shifted_value": 1
                },
                "uVar1_minus_3": {
                    "shifted_mask_length": 1
                },
                "uVar1_shifted": {
                    "shifted_bit_mask": 1
                },
                "uVar2": {
                    "adjusted_shift": 1,
                    "adjusted_shift_amount": 1,
                    "bit_count": 1,
                    "bit_mask": 1,
                    "bit_offset": 1,
                    "clamped_bits": 1,
                    "clamped_effective_bits": 1,
                    "clamped_remaining_bits": 1,
                    "mask2": 1,
                    "mask_length": 1,
                    "masked_mask2": 1,
                    "masked_value": 1,
                    "new_mask": 1,
                    "parsed_shift": 1,
                    "reduced_shift_amount": 1,
                    "remaining_bits": 10,
                    "remaining_shift_count": 1,
                    "shift_amount": 1,
                    "shift_amount2": 1,
                    "shifted_bits": 1,
                    "shifted_bits_threshold": 1,
                    "shifted_value": 1
                },
                "uVar3": {
                    "conditional_shift": 1,
                    "mask": 1,
                    "mask1": 1,
                    "shifted_byte_data1": 1,
                    "shifted_mask": 3,
                    "shifted_masked_bits": 1,
                    "shifted_value": 1,
                    "temp1": 1,
                    "temp_variable": 1,
                    "updated_bits": 1,
                    "updated_character": 1
                },
                "uVar4": {
                    "bit_mask1": 1,
                    "mask2": 1,
                    "masked_value": 1,
                    "result": 1,
                    "shifted_byte_data2": 1,
                    "shifted_data": 2,
                    "temp2": 1
                },
                "uVar5": {
                    "bit_mask2": 1,
                    "target_address": 1
                },
                "uVar6": {
                    "byte_value": 1,
                    "shifted_value": 1
                },
                "uVar7": {
                    "final_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003e54",
                "FUN_08000d98",
                "FUN_08003eac",
                "FUN_08000c8c"
            ],
            "code": "\n\n\nvoid update_character_data_08000e60(uint address,uint mask,uint mask)\n\n{\n  uint shift_amount;\n  uint remaining_bits;\n  \n  shift_amount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  remaining_bits = 7 - shift_amount;\n  if (3 < remaining_bits) {\n    remaining_bits = 4;\n  }\n  if (shift_amount + 4 < 7) {\n    shift_amount = 0;\n  }\n  else {\n    shift_amount = shift_amount - 3;\n  }\n  shift_amount = (mask & (1 << (remaining_bits & 0xff)) - 1U) << (shift_amount & 0xff) |\n          (1 << (shift_amount & 0xff)) - 1U & mask;\n  if ((int)address < 0) {\n    *(byte *)((address & 0xf) + 0xe000ed14) = (byte)(shift_amount << 4);\n  }\n  else {\n    *(byte *)(address + 0xe000e400) = (byte)(shift_amount << 4);\n  }\n  return;\n}\n\n",
            "current_name": "update_character_data_08000e60",
            "entrypoint": "0x08000e60",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000e60": "update_character_data_08000e60",
                "char": "byte",
                "param_1": "address",
                "param_2": "mask",
                "param_3": "mask",
                "uVar1": "shift_amount",
                "uVar2": "remaining_bits"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000ec4": {
            "additional_data": {
                "FUN_08000ec4": {
                    "set_bit": 7,
                    "set_bit_at_index": 2,
                    "set_bit_at_position": 2,
                    "set_bit_in_array": 15,
                    "set_bit_in_integer": 1,
                    "set_bit_in_memory": 4
                },
                "int": {
                    "bit_value": 1
                },
                "param_1": {
                    "bit_index": 14,
                    "bit_position": 6,
                    "index": 7,
                    "input": 1,
                    "position": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08003e54",
                "FUN_08003eac"
            ],
            "code": "\nvoid set_bit_in_array_08000ec4(ubit_value bit_index)\n\n{\n  if (-1 < (bit_value)bit_index) {\n    *(bit_value *)((bit_index >> 5) * 4 + -0x1fff1f00) = 1 << (bit_index & 0x1f);\n  }\n  return;\n}\n\n",
            "current_name": "set_bit_in_array_08000ec4",
            "entrypoint": "0x08000ec4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000ec4": "set_bit_in_array_08000ec4",
                "int": "bit_value",
                "param_1": "bit_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000ee0": {
            "additional_data": {
                "0xf0": {
                    "default_flag": 1
                },
                "7": {
                    "default_data": 1
                },
                "DAT_e000ed23": {
                    "config_value": 1,
                    "configuration": 1,
                    "configuration_flag": 1,
                    "constant": 1,
                    "constant_value": 3,
                    "flag": 3,
                    "memory_status": 1,
                    "register_value": 1,
                    "status": 10,
                    "status_flag": 4
                },
                "FUN_08000ee0": {
                    "initialize_data": 6,
                    "initialize_memory": 9,
                    "initialize_param": 1,
                    "initialize_parameter": 1,
                    "initialize_parameters": 1,
                    "initialize_registers": 1,
                    "initialize_values": 2,
                    "set_param_values": 1,
                    "set_parameters": 3,
                    "set_registers": 1,
                    "set_value": 1,
                    "setup_data": 1,
                    "update_settings": 1,
                    "validate_parameter": 1
                },
                "_DAT_e000e010": {
                    "access_mode": 1,
                    "bit_mask": 2,
                    "bitmask": 1,
                    "constant": 1,
                    "constant_value": 3,
                    "count": 2,
                    "counter": 2,
                    "data": 1,
                    "default_value": 1,
                    "flag": 4,
                    "flag_value": 2,
                    "flags": 1,
                    "initial_value": 1,
                    "limit": 1,
                    "memory_access_mode": 1,
                    "seven": 1,
                    "threshold": 4,
                    "variable2": 1,
                    "variable_2": 1
                },
                "_DAT_e000e014": {
                    "address": 1,
                    "adjusted_param": 1,
                    "adjusted_value": 3,
                    "base_address": 1,
                    "configured_value": 1,
                    "data_offset": 1,
                    "data_ptr": 1,
                    "initialized_value": 1,
                    "lower_bound": 1,
                    "lower_limit": 1,
                    "mem_address": 1,
                    "memory_address": 4,
                    "memory_base_address": 1,
                    "modified_input": 1,
                    "register_offset": 1,
                    "subtract_one_value": 1,
                    "target_value": 1,
                    "updated_param": 1,
                    "updated_param_1": 1,
                    "updated_value": 6,
                    "validated_value": 1
                },
                "_DAT_e000e018": {
                    "additional_value": 1,
                    "counter": 11,
                    "data_value": 1,
                    "extra_data": 1,
                    "flag": 1,
                    "initialized_flag": 1,
                    "initialized_value": 3,
                    "memory_offset": 1,
                    "offset": 1,
                    "other_data": 1,
                    "reserved": 1,
                    "reserved_value": 1,
                    "temp": 1,
                    "temp_variable": 1,
                    "unused_variable": 2,
                    "variable1": 1,
                    "variable_1": 1,
                    "zero": 1
                },
                "param_1": {
                    "input_param": 1,
                    "input_value": 10,
                    "memory_size": 2,
                    "num_iterations": 1,
                    "size": 1,
                    "value": 15
                },
                "return": {
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08000d98",
                "FUN_08000c8c"
            ],
            "code": "\n\n\nundefined4 initialize_memory_08000ee0(int value)\n\n{\n  if (value - 1U < 0x1000000) {\n    _DAT_e000e014 = value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    result 0;\n  }\n  result 1;\n}\n\n",
            "current_name": "initialize_memory_08000ee0",
            "entrypoint": "0x08000ee0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000ee0": "initialize_memory_08000ee0",
                "param_1": "value",
                "return": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000f0c": {
            "additional_data": {
                "0x1f": {
                    "bit_index": 1,
                    "bit_offset": 1
                },
                "0x1fff1f00": {
                    "array_base_address": 1
                },
                "0x60": {
                    "array_base_offset": 1,
                    "base_offset": 1
                },
                "1": {
                    "bit_mask": 2
                },
                "4": {
                    "element_size": 1
                },
                "FUN_08000f0c": {
                    "set_bit": 10,
                    "set_bit_at_position": 4,
                    "set_bit_in_array": 8,
                    "set_bit_in_memory": 8,
                    "set_bit_value": 1
                },
                "int": {
                    "array_element_type": 1,
                    "integer": 1
                },
                "param_1": {
                    "bit_index": 10,
                    "bit_position": 6,
                    "index": 10,
                    "input": 1,
                    "num": 1,
                    "position": 3
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid set_bit_in_memory_08000f0c(uarray_element_type index)\n\n{\n  if (-1 < (array_element_type)index) {\n    *(array_element_type *)(((index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "current_name": "set_bit_in_memory_08000f0c",
            "entrypoint": "0x08000f0c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000f0c": "set_bit_in_memory_08000f0c",
                "int": "array_element_type",
                "param_1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000f2c": {
            "additional_data": {
                "FUN_08000f2c": {
                    "set_bit_flag": 1,
                    "set_control_bit": 1,
                    "set_flag": 6,
                    "set_flag_based_on_param": 2,
                    "set_flag_based_on_parameter": 1,
                    "set_flag_bits": 1,
                    "set_flag_if_param_four": 1,
                    "set_flag_if_param_is_four": 1,
                    "set_flag_on_param": 1,
                    "toggle_control_bit": 1,
                    "toggle_flag": 1,
                    "update_configuration": 1,
                    "update_control_register": 4,
                    "update_data_register": 1,
                    "update_e000e010": 1,
                    "update_flag": 1,
                    "update_flag_value": 1,
                    "update_status": 5
                },
                "_DAT_e000e010": {
                    "configuration_register": 1,
                    "control_register": 5,
                    "data_register": 2,
                    "flag": 3,
                    "flag_register": 9,
                    "register": 1,
                    "register_value": 3,
                    "status_register": 5
                },
                "param_1": {
                    "bit_flag": 1,
                    "bit_value": 1,
                    "config_param": 1,
                    "flag": 1,
                    "flag_value": 8,
                    "input": 4,
                    "input_value": 1,
                    "param": 1,
                    "parameter": 1,
                    "status": 5,
                    "value": 7
                }
            },
            "called": [],
            "calling": [
                "FUN_08000c8c"
            ],
            "code": "\n\n\nvoid set_flag_based_on_param_08000f2c(int flag_value)\n\n{\n  if (flag_value != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "current_name": "set_flag_based_on_param_08000f2c",
            "entrypoint": "0x08000f2c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000f2c": "set_flag_based_on_param_08000f2c",
                "param_1": "flag_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000f4c": {
            "called": [],
            "calling": [
                "FUN_08000f4e"
            ],
            "code": "\nvoid FUNC_08000f4c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08000f4c",
            "entrypoint": "0x08000f4c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08000f4c": "FUNC_08000f4c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08000f4e": {
            "additional_data": {
                "FUNC_08000f4c": {
                    "call_function": 1,
                    "call_secondary_function": 1,
                    "call_subfunction": 3,
                    "execute_initialization": 1,
                    "execute_sub_function": 4,
                    "execute_sub_task": 1,
                    "execute_subfunction": 1,
                    "execute_subroutine": 1,
                    "func_08000f4c": 1,
                    "initialize_application": 1,
                    "initialize_component": 1,
                    "initialize_components": 2,
                    "perform_initialization": 6,
                    "perform_operation": 1,
                    "perform_subroutine": 1,
                    "perform_task": 1,
                    "sub_function": 1,
                    "subroutine": 1
                },
                "FUN_08000f4e": {
                    "execute_application": 1,
                    "execute_func_08000f4e": 1,
                    "execute_function": 8,
                    "execute_initialization": 3,
                    "execute_initialization_process": 1,
                    "execute_main_function": 9,
                    "execute_main_task": 1,
                    "execute_preprocessing_step": 1,
                    "execute_subroutine": 1,
                    "initialize": 1,
                    "initialize_application": 3,
                    "initialize_system": 1
                }
            },
            "called": [
                "FUN_08000f4c"
            ],
            "calling": [
                "FUN_08003476"
            ],
            "code": "\nvoid execute_main_function_08000f4e(void)\n\n{\n  FUNC_08000f4c();\n  return;\n}\n\n",
            "current_name": "execute_main_function_08000f4e",
            "entrypoint": "0x08000f4e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000f4e": "execute_main_function_08000f4e"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000f56": {
            "additional_data": {
                "FUN_08000f56": {
                    "initialize": 1,
                    "initialize_data": 7,
                    "initialize_data_struct": 1,
                    "initialize_data_structure": 1,
                    "initialize_device": 1,
                    "initialize_function": 1,
                    "process_param": 1,
                    "set_and_reset_values": 1,
                    "set_default_values": 2,
                    "set_initial_values": 1,
                    "set_parameter_values": 1,
                    "set_values_and_reset": 1,
                    "update_data": 6,
                    "update_data_structure": 1,
                    "update_param": 1,
                    "update_parameters": 1,
                    "update_status": 2,
                    "update_struct_values": 1
                },
                "FUN_080033c8": {
                    "do_something": 2,
                    "do_task": 1,
                    "execute_additional_function": 1,
                    "execute_additional_operation": 1,
                    "execute_function": 1,
                    "execute_sub_function": 1,
                    "execute_subfunction": 2,
                    "helper_function": 1,
                    "initialize_subdata": 1,
                    "perform_action": 2,
                    "perform_additional_actions": 1,
                    "perform_additional_operations": 1,
                    "perform_additional_setup": 1,
                    "perform_additional_task": 1,
                    "perform_additional_tasks": 3,
                    "perform_cleanup": 3,
                    "perform_initialization": 1,
                    "perform_processing": 1,
                    "perform_some_action": 1,
                    "perform_task": 3,
                    "some_function": 1
                },
                "param_1": {
                    "address": 1,
                    "data": 1,
                    "data_address": 1,
                    "data_pointer": 5,
                    "data_ptr": 7,
                    "data_struct_ptr": 1,
                    "data_structure": 1,
                    "device_address": 1,
                    "input": 4,
                    "input_parameter": 1,
                    "input_value": 3,
                    "param": 1,
                    "parameter": 1,
                    "status_ptr": 2,
                    "struct_ptr": 1
                }
            },
            "called": [
                "FUN_080033c8"
            ],
            "calling": [
                "FUN_080033d8"
            ],
            "code": "\nundefined4 initialize_data_struct_08000f56(int data_ptr)\n\n{\n  if (data_ptr != 0) {\n    *(undefined *)(data_ptr + 4) = 2;\n    FUN_080033c8();\n    *(undefined4 *)(data_ptr + 0x10) = 0;\n    *(undefined *)(data_ptr + 4) = 0;\n    *(undefined *)(data_ptr + 5) = 0;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_data_struct_08000f56",
            "entrypoint": "0x08000f56",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000f56": "initialize_data_struct_08000f56",
                "param_1": "data_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000f72": {
            "additional_data": {
                "DAT_": {
                    "data": 1
                },
                "FUN_08000f72": {
                    "clear_bit": 1,
                    "clear_bit_and_set_flag": 28,
                    "clear_bit_and_update_pointer": 1,
                    "update_bitwise_value": 1
                },
                "PTR_": {
                    "param": 1
                },
                "bitPosition": {
                    "bit_position": 1
                },
                "bitset": {
                    "bitset": 1
                },
                "param_1": {
                    "array": 1,
                    "array_pointer": 1,
                    "bit_array": 7,
                    "bit_pointer": 4,
                    "bit_value": 1,
                    "bits": 4,
                    "bits_to_modify": 1,
                    "bitset": 2,
                    "data": 2,
                    "data_pointer": 3,
                    "data_ptr": 1,
                    "output_pointer": 1,
                    "pointer": 1,
                    "target_pointer": 1,
                    "value": 1
                },
                "param_2": {
                    "bit_index": 9,
                    "bit_number": 1,
                    "bit_position": 20,
                    "position": 1
                },
                "undefined4": {
                    "status": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080033d8"
            ],
            "code": "\nstatus clear_bit_and_set_flag_08000f72(uint **bit_array,uint bit_position)\n\n{\n  **bit_array = **bit_array & ~(1 << (bit_position & 0xff));\n  *(undefined *)(bit_array + 1) = 1;\n  return 0;\n}\n\n",
            "current_name": "clear_bit_and_set_flag_08000f72",
            "entrypoint": "0x08000f72",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000f72": "clear_bit_and_set_flag_08000f72",
                "param_1": "bit_array",
                "param_2": "bit_position",
                "undefined4": "status"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000f8c": {
            "additional_data": {
                "0x02": {
                    "2": 1,
                    "valid_status": 1
                },
                "0x15": {
                    "param_offset": 1
                },
                "0x35": {
                    "flag_offset": 1
                },
                "0x80": {
                    "default_parameter_value": 1,
                    "default_value": 1
                },
                "0xfffffffe": {
                    "clear_bit_mask": 1,
                    "mask": 2
                },
                "1": {
                    "error_code": 1
                },
                "5": {
                    "new_status": 1,
                    "new_value": 1,
                    "update_value": 1,
                    "updated_flag_value": 1
                },
                "FUN_08000f8c": {
                    "change_param_value": 1,
                    "check_and_modify_parameter": 1,
                    "check_and_update_value": 2,
                    "set_flag": 2,
                    "set_flag_and_clear_bit": 1,
                    "set_flag_to5_if_not2": 1,
                    "update_and_check_value": 1,
                    "update_data": 5,
                    "update_flag_and_value": 3,
                    "update_flag_if_not_two": 1,
                    "update_param": 4,
                    "update_parameter": 1,
                    "update_parameter_value": 2,
                    "update_permissions": 1,
                    "update_pointer": 1,
                    "update_settings": 1,
                    "update_status": 1,
                    "update_value": 2
                },
                "char": {
                    "flag": 1
                },
                "param_1": {
                    "array_ptr": 1,
                    "data": 4,
                    "data_ptr": 2,
                    "flag_pointer": 1,
                    "input": 1,
                    "input_array": 4,
                    "input_parameter": 1,
                    "input_params": 1,
                    "param": 4,
                    "param_array": 1,
                    "param_list": 1,
                    "parameter": 3,
                    "parameter_array": 2,
                    "parameters": 1,
                    "permissions": 1,
                    "pointer_array": 1,
                    "settings": 1,
                    "value": 1
                },
                "uint": {
                    "pointer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001ab0",
                "FUN_08002ffc"
            ],
            "code": "\nundefined4 update_and_check_value_08000f8c(pointer **param)\n\n{\n  if (*(flag *)((int)param + 0x35) != '\\x02') {\n    param[0x15] = (pointer *)0x80;\n    return 1;\n  }\n  *(undefined *)((int)param + 0x35) = 5;\n  **param = **param & 0xfffffffe;\n  return 0;\n}\n\n",
            "current_name": "update_and_check_value_08000f8c",
            "entrypoint": "0x08000f8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000f8c": "update_and_check_value_08000f8c",
                "char": "flag",
                "param_1": "param",
                "uint": "pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000fb4": {
            "additional_data": {
                "FUN_08000fb4": {
                    "reverse_and_modify_bits": 1,
                    "update_data": 2,
                    "update_memory": 2,
                    "update_memory_registers": 1,
                    "update_param_values": 1,
                    "update_parameter_values": 1,
                    "update_parameters": 1,
                    "update_params": 1,
                    "update_register_values": 1,
                    "update_registers": 18
                },
                "_DAT_40013c00": {
                    "data2": 1,
                    "register1": 1,
                    "special_register1": 1
                },
                "_DAT_40013c04": {
                    "data3": 1,
                    "register2": 1,
                    "special_register2": 1
                },
                "_DAT_40013c08": {
                    "data4": 1,
                    "register3": 1,
                    "special_register3": 1
                },
                "_DAT_40013c0c": {
                    "data5": 1,
                    "register_mask": 1,
                    "special_register4": 1
                },
                "_DAT_40023844": {
                    "control_register": 1,
                    "reg_address1": 1,
                    "special_register": 1
                },
                "iVar6": {
                    "array_index": 1,
                    "col_idx": 1,
                    "first_index": 1,
                    "group": 1,
                    "group_index": 4,
                    "index1": 9,
                    "index2": 1,
                    "index_1": 1,
                    "index_var1": 1,
                    "offset": 2,
                    "offset1": 1,
                    "outer_index": 1,
                    "reg_index": 1,
                    "register_index": 3,
                    "row_index": 1,
                    "temp_var6": 1,
                    "upper_index": 1
                },
                "iVar8": {
                    "bit_offset": 2,
                    "bit_shift": 1,
                    "bit_shift_amount": 1,
                    "column_index": 1,
                    "index2": 6,
                    "index3": 3,
                    "index_3": 1,
                    "index_var2": 1,
                    "lower_index": 1,
                    "offset2": 1,
                    "position": 3,
                    "second_index": 1,
                    "shift": 1,
                    "shift_amount": 3,
                    "shift_amt": 2,
                    "shift_offset": 1,
                    "temp_var8": 1,
                    "var8": 1
                },
                "param_1": {
                    "data_array1": 1,
                    "data_registers": 1,
                    "data_to_update": 1,
                    "destination_registers": 1,
                    "input_array": 1,
                    "input_data": 1,
                    "memory": 1,
                    "memory_registers": 1,
                    "output": 1,
                    "output_array": 1,
                    "output_data": 1,
                    "output_params": 1,
                    "output_registers": 1,
                    "reg_arr1": 1,
                    "reg_pointer1": 1,
                    "register_array": 1,
                    "register_array1": 1,
                    "register_array_1": 1,
                    "register_table": 1,
                    "registers": 10,
                    "target_memory": 1,
                    "updated_params": 1
                },
                "param_2": {
                    "bit_array": 1,
                    "control_registers": 1,
                    "data": 3,
                    "data_array2": 1,
                    "data_to_extract": 1,
                    "input": 2,
                    "input_array": 2,
                    "input_data": 3,
                    "input_params": 2,
                    "input_registers": 1,
                    "input_values": 1,
                    "output_data": 1,
                    "params": 1,
                    "reg_arr2": 1,
                    "reg_pointer2": 1,
                    "register_array2": 1,
                    "register_array_2": 1,
                    "source_memory": 1,
                    "source_registers": 1,
                    "values": 5
                },
                "uVar1": {
                    "current_register_value": 1,
                    "mask": 5,
                    "old_value": 1,
                    "register": 1,
                    "temp1": 11,
                    "temp_var1": 10,
                    "temp_var_1": 1,
                    "value1": 1
                },
                "uVar2": {
                    "bit": 3,
                    "bit_mask": 6,
                    "temp2": 11,
                    "temp_var2": 10,
                    "temp_var_2": 1
                },
                "uVar3": {
                    "bit_index": 1,
                    "counter": 1,
                    "i": 4,
                    "idx": 1,
                    "index": 13,
                    "index1": 1,
                    "loop_counter": 1,
                    "loop_index": 6,
                    "loop_var": 1,
                    "temp3": 1,
                    "temp_var3": 1
                },
                "uVar4": {
                    "bit_and": 1,
                    "bit_check": 4,
                    "bit_flag": 1,
                    "bit_mask": 9,
                    "bit_value": 2,
                    "bitmask": 1,
                    "check": 1,
                    "check_mask": 1,
                    "flag": 1,
                    "mask": 3,
                    "mask1": 2,
                    "masked_value": 1,
                    "result": 1,
                    "temp4": 1,
                    "temp_var4": 2
                },
                "uVar5": {
                    "instruction": 1,
                    "opcode": 1,
                    "param2_value": 1,
                    "param_value": 1,
                    "status": 1,
                    "temp3": 6,
                    "temp5": 1,
                    "temp_var5": 10,
                    "temp_var_5": 1,
                    "value": 7,
                    "value2": 1
                },
                "uVar7": {
                    "index2": 3,
                    "index3": 1,
                    "index_2": 1,
                    "inner_index": 1,
                    "offset": 1,
                    "register_offset": 1,
                    "shift": 6,
                    "shift_amount": 1,
                    "shift_index": 1,
                    "shifted_index": 3,
                    "temp1": 1,
                    "temp4": 2,
                    "temp_var7": 7,
                    "u_value": 1,
                    "u_var7": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003486",
                "FUN_08003978"
            ],
            "code": "\n\n\nvoid update_memory_registers_08000fb4(uint *registers,uint *values)\n\n{\n  uint temp1;\n  uint temp2;\n  uint index;\n  uint bit_mask;\n  uint temp_var5;\n  int index1;\n  uint temp_var7;\n  int index2;\n  \n  for (index = 0; index < 0x10; index = index + 1) {\n    temp2 = 1 << (index & 0xff);\n    bit_mask = temp2 & *values;\n    temp1 = _DAT_40013c0c;\n    if (temp2 == bit_mask) {\n      if ((values[1] == 2) || (values[1] == 0x12)) {\n        index1 = (index >> 3) + 8;\n        index2 = (index & 7) << 2;\n        registers[index1] = registers[index1] & ~(0xf << index2) | values[4] << index2;\n      }\n      temp_var7 = index << 1;\n      temp1 = ~(3 << (temp_var7 & 0xff));\n      *registers = *registers & temp1 | (values[1] & 3) << (temp_var7 & 0xff);\n      temp_var5 = values[1];\n      if (((temp_var5 - 1 < 2) || (temp_var5 == 0x11)) || (temp_var5 == 0x12)) {\n        registers[2] = registers[2] & temp1 | values[3] << (temp_var7 & 0xff);\n        registers[1] = registers[1] & ~temp2 | ((values[1] << 0x1b) >> 0x1f) << (index & 0xff);\n      }\n      registers[3] = temp1 & registers[3] | values[2] << (temp_var7 & 0xff);\n      temp1 = _DAT_40013c0c;\n      if ((values[1] & 0x10000000) != 0) {\n        _DAT_40023844 = _DAT_40023844 | 0x4000;\n        index2 = (index & 3) << 2;\n        if (registers == (uint *)0x40020000) {\n          index1 = 0;\n        }\n        else if (registers == (uint *)0x40020400) {\n          index1 = 1;\n        }\n        else if (registers == (uint *)0x40020800) {\n          index1 = 2;\n        }\n        else if (registers == (uint *)0x40020c00) {\n          index1 = 3;\n        }\n        else if (registers == (uint *)0x40021000) {\n          index1 = 4;\n        }\n        else if (registers == (uint *)0x40021400) {\n          index1 = 5;\n        }\n        else if (registers == (uint *)0x40021800) {\n          index1 = 6;\n        }\n        else if (registers == (uint *)0x40021c00) {\n          index1 = 7;\n        }\n        else if (registers == (uint *)0x40022000) {\n          index1 = 8;\n        }\n        else if (registers == (uint *)0x40022400) {\n          index1 = 9;\n        }\n        else {\n          index1 = 10;\n        }\n        *(uint *)(((index >> 2) + 2) * 4 + 0x40013800) =\n             *(uint *)(((index >> 2) + 2) * 4 + 0x40013800) & ~(0xf << index2) | index1 << index2;\n        temp1 = ~bit_mask;\n        temp2 = _DAT_40013c00 & temp1;\n        if ((values[1] & 0x10000) != 0) {\n          temp2 = bit_mask | _DAT_40013c00;\n        }\n        temp_var5 = temp1 & _DAT_40013c04;\n        if ((values[1] & 0x20000) != 0) {\n          temp_var5 = bit_mask | _DAT_40013c04;\n        }\n        temp_var7 = temp1 & _DAT_40013c08;\n        if ((values[1] & 0x100000) != 0) {\n          temp_var7 = bit_mask | _DAT_40013c08;\n        }\n        _DAT_40013c00 = temp2;\n        _DAT_40013c04 = temp_var5;\n        _DAT_40013c08 = temp_var7;\n        temp1 = temp1 & _DAT_40013c0c;\n        if ((values[1] & 0x200000) != 0) {\n          temp1 = bit_mask | _DAT_40013c0c;\n        }\n      }\n    }\n    _DAT_40013c0c = temp1;\n  }\n  return;\n}\n\n",
            "current_name": "update_memory_registers_08000fb4",
            "entrypoint": "0x08000fb4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000fb4": "update_memory_registers_08000fb4",
                "iVar6": "index1",
                "iVar8": "index2",
                "param_1": "registers",
                "param_2": "values",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "index",
                "uVar4": "bit_mask",
                "uVar5": "temp_var5",
                "uVar7": "temp_var7"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001198": {
            "additional_data": {
                "0x18": {
                    "offset": 1
                },
                "DAT_": {
                    "": 1
                },
                "FUN_08001198": {
                    "assign_value_to_pointer": 1,
                    "set_param": 4,
                    "set_param_2": 2,
                    "set_param_value": 17,
                    "set_value": 1,
                    "store_value_in_memory": 1,
                    "update_data": 1,
                    "update_param_value": 1,
                    "update_parameter": 1,
                    "update_parameter_value": 1,
                    "update_value": 1
                },
                "PTR_": {
                    "": 1
                },
                "int": {
                    "value_type": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 4,
                    "context": 1,
                    "data": 1,
                    "data_pointer": 1,
                    "memory_address": 1,
                    "obj_address": 2,
                    "object": 1,
                    "object_address": 16,
                    "object_base_address": 1,
                    "object_ptr": 1,
                    "pointer": 1
                },
                "param_2": {
                    "new_value": 12,
                    "param_value": 1,
                    "value": 16,
                    "value_to_set": 2
                },
                "param_3": {
                    "flag": 1,
                    "is_shift_required": 1,
                    "is_shifted": 16,
                    "shift_flag": 5,
                    "shift_value": 3,
                    "should_shift": 1,
                    "use_bit_shift": 1,
                    "use_shift": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_080034b6"
            ],
            "code": "\nvoid set_param_value_08001198(value_type object_address,value_type value,value_type is_shifted)\n\n{\n  if (is_shifted == 0) {\n    *(value_type *)(object_address + 0x18) = value << 0x10;\n    return;\n  }\n  *(value_type *)(object_address + 0x18) = value;\n  return;\n}\n\n",
            "current_name": "set_param_value_08001198",
            "entrypoint": "0x08001198",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001198": "set_param_value_08001198",
                "int": "value_type",
                "param_1": "object_address",
                "param_2": "value",
                "param_3": "is_shifted"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080011a4": {
            "additional_data": {
                "FUN_080011a4": {
                    "set_and_execute_if_flag_is_set": 1,
                    "update_and_call_function": 2,
                    "update_and_execute_function": 1,
                    "update_and_invoke_function": 1,
                    "update_check": 1,
                    "update_data": 6,
                    "update_data_and_call": 1,
                    "update_data_and_call_function": 4,
                    "update_data_if_condition_met": 2,
                    "update_data_if_flag_set": 1,
                    "update_data_if_needed": 4,
                    "update_flag": 1,
                    "update_flag_if_set": 1,
                    "update_global_parameter": 1,
                    "update_global_variable_if_flag_set": 1,
                    "update_if_bit_set": 1,
                    "update_parameter_value": 1,
                    "update_value_and_invoke_function": 1
                },
                "FUN_080047d0": {
                    "call_function": 1,
                    "call_updated_function": 1,
                    "execute_action": 1,
                    "execute_additional_function": 1,
                    "execute_data_update": 1,
                    "execute_function": 1,
                    "execute_subfunction": 1,
                    "execute_task": 1,
                    "execute_update": 2,
                    "invoke_other_function": 1,
                    "perform_action": 7,
                    "perform_cleanup": 1,
                    "perform_task": 1,
                    "perform_update": 4,
                    "process_data": 3
                },
                "_DAT_40013c14": {
                    "current_data": 2,
                    "data": 5,
                    "data_flag": 1,
                    "data_register": 1,
                    "data_value": 3,
                    "data_variable": 1,
                    "existing_data": 1,
                    "global_data": 3,
                    "global_value": 1,
                    "global_variable": 1,
                    "original_data": 1,
                    "previous_data": 1
                },
                "param_1": {
                    "bit_mask": 1,
                    "bitmask": 1,
                    "data": 7,
                    "data_to_check": 1,
                    "data_to_update": 1,
                    "flag": 5,
                    "flags": 1,
                    "input_parameter": 1,
                    "input_value": 1,
                    "mask": 1,
                    "new_data": 4,
                    "new_parameter": 2,
                    "new_value": 1,
                    "updated_data": 1,
                    "updated_value": 1,
                    "updates": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_080047d0"
            ],
            "calling": [],
            "code": "\n\n\nvoid update_data_if_needed_080011a4(uint data)\n\n{\n  if ((_DAT_40013c14 & data) != 0) {\n    _DAT_40013c14 = data;\n    FUN_080047d0();\n  }\n  return;\n}\n\n",
            "current_name": "update_data_if_needed_080011a4",
            "entrypoint": "0x080011a4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080011a4": "update_data_if_needed_080011a4",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080011c0": {
            "additional_data": {
                "0x10": {
                    "flag_address": 1
                },
                "0x11": {
                    "value": 1
                },
                "0x14": {
                    "flag_index": 1
                },
                "0x3d": {
                    "char_constant": 1
                },
                "0x3e": {
                    "condition_char": 1
                },
                "0xfe": {
                    "mask1": 1
                },
                "FUN_080011c0": {
                    "calculate_permission_value": 1,
                    "determine_flag_value": 1,
                    "process_parameter": 1,
                    "set_control_flags": 1,
                    "set_flag_based_on_condition": 1,
                    "set_memory_flag": 1,
                    "set_permission_bit": 1,
                    "set_permissions": 2,
                    "toggle_flag_based_on_condition": 1,
                    "update_flag": 2,
                    "update_flag_based_on_conditions": 1,
                    "update_flag_based_on_param": 1,
                    "update_flag_value": 2,
                    "update_flags": 2,
                    "update_flags_based_on_conditions": 1,
                    "update_param": 1,
                    "update_param_value": 2,
                    "update_parameter": 2,
                    "update_status": 7
                },
                "char": {
                    "character": 1
                },
                "inputArray": {
                    "input_array": 1
                },
                "inputParams": {
                    "input_params": 1
                },
                "param_1": {
                    "control_data": 1,
                    "data": 1,
                    "data_array": 1,
                    "input_array": 7,
                    "input_data": 2,
                    "input_params": 1,
                    "memory_block": 1,
                    "param": 1,
                    "param_array": 1,
                    "param_list": 1,
                    "parameter": 2,
                    "parameters": 2,
                    "params": 1,
                    "permissions": 4,
                    "status": 2,
                    "status_array": 1,
                    "status_data": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 update_status_080011c0(int *input_array)\n\n{\n  if (*(character *)((int)input_array + 0x3e) == '@') {\n    if (input_array[0x14] == 0) {\n      *(uint *)(*input_array + 0x10) = input_array[0x11] & 0xfe;\n    }\n    else {\n      *(uint *)(*input_array + 0x10) = input_array[0x11] & 0xffU | 1;\n    }\n  }\n  else if (input_array[4] == 0x4000) {\n    if (*(character *)((int)input_array + 0x3d) == '!') {\n      *(uint *)(*input_array + 0x10) = input_array[0x11] & 0xfe;\n    }\n    else {\n      *(uint *)(*input_array + 0x10) = input_array[0x11] & 0xffU | 1;\n    }\n  }\n  else if (input_array[0x14] == 0) {\n    *(uint *)(*input_array + 0x10) = (uint)(input_array[0x11] << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (input_array[0x14] == 1) {\n    *(uint *)(*input_array + 0x10) = (uint)(input_array[0x11] << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_status_080011c0",
            "entrypoint": "0x080011c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080011c0": "update_status_080011c0",
                "char": "character",
                "param_1": "input_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800124a": {
            "additional_data": {
                "0x10": {
                    "byte_offset": 1
                },
                "0xff": {
                    "mask": 2,
                    "mask_value": 1
                },
                "FUN_0800124a": {
                    "decode_parameters": 1,
                    "extract_and_assign_byte": 4,
                    "extract_and_store_byte": 1,
                    "extract_byte_from_parameter": 1,
                    "extract_value_and_store": 1,
                    "set_byte_value": 6,
                    "set_param_value": 2,
                    "set_parameter_value": 2,
                    "set_uint_value": 1,
                    "store_byte_in_memory": 1,
                    "update_array_with_byte": 1,
                    "update_integer_value": 1,
                    "update_memory": 1,
                    "update_memory_value": 1,
                    "update_parameter": 1,
                    "update_parameter_value": 2,
                    "update_value": 3,
                    "update_value_in_memory": 1
                },
                "deref_uint_ptr_at_offset": {
                    "extracted_byte": 1
                },
                "input_ptr_plus_0x11": {
                    "byte_value": 1
                },
                "param_1": {
                    "array": 6,
                    "data": 2,
                    "data_array": 1,
                    "data_pointer": 1,
                    "input_array": 4,
                    "input_data": 1,
                    "input_parameters": 1,
                    "input_ptr": 1,
                    "int_pointer": 1,
                    "memory_address": 2,
                    "new_value_ptr": 1,
                    "param_array": 1,
                    "param_list": 1,
                    "parameter": 2,
                    "parameter_array": 1,
                    "parameter_list": 1,
                    "pointer_to_integer_array": 1,
                    "source": 1,
                    "target_array": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 update_value_in_memory_0800124a(int *array)\n\n{\n  *(uint *)(*array + 0x10) = array[0x11] & 0xff;\n  return 0;\n}\n\n",
            "current_name": "update_value_in_memory_0800124a",
            "entrypoint": "0x0800124a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800124a": "update_value_in_memory_0800124a",
                "param_1": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001256": {
            "additional_data": {
                "0": {
                    "zero": 1
                },
                "0x12": {
                    "value8": 1
                },
                "0x4": {
                    "value6": 1
                },
                "0x8": {
                    "value7": 1
                },
                "0xffff0000": {
                    "value5": 1
                },
                "FUN_08001256": {
                    "handle_param": 1,
                    "improve_permissions": 1,
                    "mark_flags": 1,
                    "parse_parameters": 1,
                    "process_data": 1,
                    "process_flags": 4,
                    "process_input_string": 1,
                    "process_param": 4,
                    "process_parameters": 2,
                    "set_flag": 1,
                    "set_flags": 3,
                    "set_flags_based_on_conditions": 1,
                    "update_flags": 5,
                    "update_flags_and_count": 1,
                    "update_flags_based_on_conditions": 1,
                    "update_flags_based_on_parameters": 1,
                    "update_permissions": 1
                },
                "param_1": {
                    "flags": 1,
                    "input": 1,
                    "inputs": 1,
                    "param": 1,
                    "param_array": 2,
                    "param_list": 1,
                    "parameters": 18,
                    "params": 5,
                    "permissions": 1
                },
                "puVar1": {
                    "address": 1,
                    "current_param": 1,
                    "current_pointer": 1,
                    "flag": 1,
                    "flag_pointer": 1,
                    "flag_ptr": 2,
                    "flag_value": 1,
                    "param_b": 1,
                    "permission_flags": 1,
                    "pointer": 1,
                    "pointer_var": 1,
                    "ptr": 4,
                    "ptr1": 1,
                    "ptr_to_var1": 1,
                    "ptr_value": 2,
                    "target_ptr": 1,
                    "temp_ptr": 3,
                    "temp_var": 3,
                    "value": 1,
                    "var1": 2
                },
                "uint": {
                    "uint": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 update_flags_based_on_parameters_08001256(uint **parameters)\n\n{\n  uint *ptr;\n  \n  ptr = parameters[0xb];\n  if ((*(char *)((int)parameters + 0x3d) == '\\\"') &&\n     ((parameters[0x14] != (uint *)0x0 || (*(char *)((int)parameters + 0x3e) != '@')))) {\n    if ((parameters[0x14] == (uint *)0x0) && (parameters[4] == (uint *)0xc000)) {\n      **parameters = **parameters | 0x100;\n      parameters[0x14] = (uint *)((int)parameters[0x14] + 1);\n    }\n    else {\n      if (*(short *)((int)parameters + 0x2a) == 0) {\n        **parameters = **parameters | 0x200;\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 1) {\n        if (ptr == (uint *)0xffff0000) {\n          **parameters = **parameters & 0xfffffbff;\n          ptr = *parameters;\n          if ((ptr[1] & 0x800) == 0) {\n            *ptr = *ptr | 0x200;\n          }\n          else {\n            *ptr = *ptr & 0xfffffbff;\n          }\n        }\n        else if (((ptr == (uint *)0x4) || (ptr == (uint *)0x8)) ||\n                (parameters[0xc] == (uint *)0x12)) {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x200;\n        }\n        else if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 2) {\n        if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x800;\n        }\n        ptr = *parameters;\n        if ((ptr[1] & 0x800) != 0) {\n          ptr[1] = ptr[1] | 0x1000;\n        }\n      }\n      else {\n        **parameters = **parameters | 0x400;\n        ptr = *parameters;\n        if ((ptr[1] & 0x800) != 0) {\n          ptr[1] = ptr[1] | 0x1000;\n        }\n      }\n      parameters[0x14] = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "update_flags_based_on_parameters_08001256",
            "entrypoint": "0x08001256",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001256": "update_flags_based_on_parameters_08001256",
                "param_1": "parameters",
                "puVar1": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001420": {
            "additional_data": {
                "FUN_08001420": {
                    "extract_and_decrement_value": 1,
                    "increase_pointer_and_decrement_counter": 1,
                    "increment_counter": 1,
                    "process_data": 3,
                    "update_array_element": 2,
                    "update_array_value": 1,
                    "update_buffer": 1,
                    "update_byte_value": 1,
                    "update_data": 5,
                    "update_param": 2,
                    "update_param_and_decrement": 1,
                    "update_parameter": 1,
                    "update_parameter_value": 1,
                    "update_payload": 1,
                    "update_pointer": 3,
                    "update_pointer_and_decrement_counter": 1,
                    "update_pointer_value": 1,
                    "update_value": 4
                },
                "param_1": {
                    "arg_ptr": 1,
                    "array": 5,
                    "buffer": 1,
                    "counter": 1,
                    "data": 6,
                    "data_pointer": 1,
                    "input_array": 5,
                    "param_array": 2,
                    "param_list": 1,
                    "parameter": 1,
                    "parameter_array": 1,
                    "parameters": 1,
                    "payload": 1,
                    "pointer": 2,
                    "pointer_array": 1,
                    "pointer_info": 1
                },
                "pbVar1": {
                    "byte_array": 1,
                    "byte_pointer": 21,
                    "byte_ptr": 7,
                    "current_byte": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 update_array_element_08001420(int *data)\n\n{\n  byte *byte_pointer;\n  \n  if (*(short *)((int)data + 0x2a) != 0) {\n    byte_pointer = (byte *)data[9];\n    data[9] = (int)(byte_pointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*byte_pointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_array_element_08001420",
            "entrypoint": "0x08001420",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001420": "update_array_element_08001420",
                "param_1": "data",
                "pbVar1": "byte_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001440": {
            "additional_data": {
                "FUN_08001440": {
                    "decrement_counter": 1,
                    "decrement_value_and_copy_to_buffer": 1,
                    "increment_value_and_copy_to_buffer": 1,
                    "increment_value_and_decrement_counter": 1,
                    "update_and_decrement": 1,
                    "update_and_decrement_value": 1,
                    "update_array": 3,
                    "update_array_element": 5,
                    "update_char_from_pointer": 1,
                    "update_character_count": 1,
                    "update_data": 2,
                    "update_data_array": 1,
                    "update_param_value": 1,
                    "update_parameter": 2,
                    "update_parameter_value": 3,
                    "update_short_value": 1,
                    "update_value": 2,
                    "update_value_and_decrement": 1,
                    "update_value_if_non_zero": 1,
                    "update_values": 1
                },
                "int": {
                    "integer": 1
                },
                "param_1": {
                    "array": 9,
                    "buffer": 2,
                    "character_array": 1,
                    "data": 4,
                    "data_array": 1,
                    "input_array": 3,
                    "param_array": 2,
                    "parameter": 2,
                    "parameter_array": 2,
                    "ptr_list": 1,
                    "value_pointer": 1,
                    "values": 2
                },
                "puVar1": {
                    "array_pointer": 1,
                    "buffer": 1,
                    "buffer_end": 1,
                    "buffer_ptr": 1,
                    "byte_ptr": 1,
                    "char_pointer": 1,
                    "current_byte": 1,
                    "current_byte_pointer": 1,
                    "current_character": 1,
                    "current_value": 1,
                    "destination": 1,
                    "element": 1,
                    "new_element": 2,
                    "new_value": 1,
                    "next_address": 1,
                    "next_byte_ptr": 1,
                    "next_element": 2,
                    "next_element_pointer": 1,
                    "next_param": 1,
                    "pointer": 2,
                    "pointer_to_value": 1,
                    "ptr": 3,
                    "ptr_destination": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "updated_element": 1
                },
                "short": {
                    "short_integer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 update_array_element_08001440(integer *array)\n\n{\n  undefined *ptr;\n  \n  if (*(short_integer *)((integer)array + 0x2a) != 0) {\n    ptr = (undefined *)array[9];\n    array[9] = (integer)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*array + 0x10);\n    *(short_integer *)((integer)array + 0x2a) = *(short_integer *)((integer)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_array_element_08001440",
            "entrypoint": "0x08001440",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001440": "update_array_element_08001440",
                "int": "integer",
                "param_1": "array",
                "puVar1": "ptr",
                "short": "short_integer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001460": {
            "additional_data": {
                "FUN_08001460": {
                    "check_and_process_parameters": 1,
                    "check_conditions_and_update": 1,
                    "check_validation": 1,
                    "initialize_data": 2,
                    "parse_input": 1,
                    "parse_parameters": 2,
                    "process_data": 1,
                    "process_function": 1,
                    "process_input": 2,
                    "process_parameters": 4,
                    "process_params": 6,
                    "reverse_parentheses_check": 1,
                    "update_parameter": 1,
                    "update_params": 1,
                    "validate_input": 3,
                    "validate_parameters": 1,
                    "validate_params": 1,
                    "verify_parameters": 1
                },
                "param_1": {
                    "arg1": 1,
                    "config_ptr": 1,
                    "data_pointer": 3,
                    "data_ptr": 1,
                    "function_pointer": 1,
                    "input": 1,
                    "input_array": 2,
                    "input_data": 1,
                    "input_ptr": 1,
                    "param_array": 4,
                    "param_list": 5,
                    "param_pointer": 1,
                    "param_ptr": 2,
                    "param_set": 1,
                    "parameter": 1,
                    "parameter_array": 2,
                    "parameter_list": 1,
                    "pointer_array": 2
                },
                "param_2": {
                    "arg1": 1,
                    "arg2": 1,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "input1": 1,
                    "input_data": 1,
                    "input_param": 2,
                    "input_ptr": 2,
                    "optional_param": 1,
                    "param2": 3,
                    "param_a": 1,
                    "param_pointer": 5,
                    "param_pointer2": 1,
                    "param_ptr": 3,
                    "param_value": 1,
                    "ptr1": 1,
                    "value": 1,
                    "value1": 1
                },
                "param_3": {
                    "arg2": 1,
                    "arg3": 1,
                    "count": 5,
                    "data_length": 1,
                    "data_size": 1,
                    "input2": 1,
                    "input_length": 1,
                    "length": 4,
                    "num_params": 1,
                    "optional_param_length": 1,
                    "param3": 2,
                    "param_b": 1,
                    "param_length": 2,
                    "param_size": 3,
                    "param_value": 2,
                    "size": 3,
                    "value2": 1
                },
                "param_4": {
                    "arg3": 1,
                    "arg4": 1,
                    "data": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "extra_ptr": 1,
                    "input3": 1,
                    "output_data": 1,
                    "output_param": 2,
                    "output_pointer": 2,
                    "output_ptr": 2,
                    "param4": 3,
                    "param_array": 1,
                    "param_buffer": 1,
                    "param_c": 1,
                    "param_data": 2,
                    "param_list": 1,
                    "param_pointer3": 1,
                    "ptr2": 1,
                    "result": 1,
                    "result_buffer": 1,
                    "result_ptr": 1,
                    "user_data": 1,
                    "value3": 1
                },
                "puVar2": {
                    "array_pointer": 1,
                    "first_pointer": 1,
                    "first_value": 1,
                    "inner_ptr": 1,
                    "param_ptr": 1,
                    "pointer": 2,
                    "pointer_value": 1,
                    "pointer_var": 3,
                    "ptr": 11,
                    "ptr1": 1,
                    "ptr_var": 1,
                    "temp_pointer": 2,
                    "temp_ptr": 4,
                    "value_pointer": 1
                },
                "uVar1": {
                    "result": 22,
                    "result_status": 1,
                    "return_value": 6,
                    "status": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08003880"
            ],
            "code": "\nundefined4 process_params_08001460(uint **param_list,uint *param_pointer,int count,uint *param4)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)param_list + 0x3d) == '(') {\n    if (param_pointer == (uint *)0x0) {\n      result = 1;\n    }\n    else if (count == 0) {\n      result = 1;\n    }\n    else if (*(char *)(param_list + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(param_list + 0xf) = 1;\n      ptr = *param_list;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **param_list = **param_list & 0xfffff7ff;\n      *(undefined *)((int)param_list + 0x3d) = 0x29;\n      *(undefined *)((int)param_list + 0x3e) = 0x20;\n      result = 0;\n      param_list[0x10] = (uint *)0x0;\n      param_list[9] = param_pointer;\n      *(short *)((int)param_list + 0x2a) = (short)count;\n      param_list[0xb] = param4;\n      *(undefined2 *)(param_list + 10) = *(undefined2 *)((int)param_list + 0x2a);\n      *(undefined *)(param_list + 0xf) = 0;\n      (*param_list)[1] = (*param_list)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "current_name": "process_params_08001460",
            "entrypoint": "0x08001460",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001460": "process_params_08001460",
                "param_1": "param_list",
                "param_2": "param_pointer",
                "param_3": "count",
                "param_4": "param4",
                "puVar2": "ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080014ec": {
            "additional_data": {
                "FUN_080014ec": {
                    "extract_data": 1,
                    "initialize_and_validate": 1,
                    "initialize_data": 6,
                    "initialize_parameter": 1,
                    "initialize_parameters": 2,
                    "parse_input_data": 1,
                    "parse_params": 1,
                    "parse_user_input": 1,
                    "process_data": 1,
                    "process_input": 1,
                    "process_input_data": 1,
                    "process_parameters": 5,
                    "process_params": 3,
                    "set_parameters": 1,
                    "update_data": 1,
                    "update_function": 1,
                    "update_param_info": 1,
                    "validate_and_initialize": 1,
                    "validate_params_and_initialize": 1
                },
                "param_1": {
                    "data": 3,
                    "data_buffer": 1,
                    "data_container": 1,
                    "data_pointer": 4,
                    "input_data": 3,
                    "input_ptr": 1,
                    "param1": 1,
                    "param_array": 4,
                    "param_info": 1,
                    "param_list": 2,
                    "parameter_array": 2,
                    "parameter_list": 1,
                    "parameters": 3,
                    "params": 1,
                    "pointer_array": 1,
                    "ptr_array": 1,
                    "user_input": 1
                },
                "param_2": {
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "initialization_pointer": 1,
                    "input": 1,
                    "input1": 2,
                    "input_array": 2,
                    "input_data": 2,
                    "input_parameter": 1,
                    "input_pointer": 1,
                    "input_value": 1,
                    "new_value": 1,
                    "optional_parameter": 1,
                    "optional_value": 1,
                    "param1": 3,
                    "param2": 1,
                    "param_array": 1,
                    "param_pointer": 2,
                    "param_ptr": 1,
                    "pointer": 1,
                    "source_data": 1,
                    "source_param": 1,
                    "value1": 1,
                    "value_list": 1,
                    "value_ptr": 1
                },
                "param_3": {
                    "array_size": 1,
                    "count": 3,
                    "data_length": 1,
                    "data_size": 1,
                    "input2": 1,
                    "input_length": 1,
                    "input_size": 3,
                    "length": 2,
                    "num_inputs": 1,
                    "param2": 3,
                    "param3": 1,
                    "param_size": 3,
                    "parameter_count": 1,
                    "size": 6,
                    "source_length": 1,
                    "value2": 1,
                    "value_count": 1
                },
                "param_4": {
                    "another_data_pointer": 1,
                    "array_pointer": 1,
                    "data": 1,
                    "data_ptr": 1,
                    "destination_data": 1,
                    "input2": 1,
                    "input3": 1,
                    "modification_pointer": 1,
                    "output": 1,
                    "output_array": 2,
                    "output_data": 4,
                    "output_parameter": 1,
                    "output_pointer": 1,
                    "output_ptr": 1,
                    "output_value": 1,
                    "param3": 3,
                    "param4": 1,
                    "param_array": 1,
                    "param_data": 2,
                    "param_ptr": 1,
                    "result": 1,
                    "target_array": 1,
                    "target_param": 1,
                    "value3": 1
                },
                "puVar2": {
                    "data_address": 1,
                    "data_value": 1,
                    "first_parameter": 1,
                    "first_value": 1,
                    "info_ptr": 1,
                    "param_ptr": 1,
                    "param_ptr_2": 1,
                    "pointer": 4,
                    "pointer_var": 4,
                    "ptr": 4,
                    "ptr1": 1,
                    "ptr_data": 2,
                    "ptr_to_data": 1,
                    "ptr_value": 1,
                    "ptr_var": 2,
                    "temp_pointer": 1,
                    "temp_ptr": 3
                },
                "uVar1": {
                    "result": 19,
                    "result_code": 1,
                    "return_value": 9,
                    "status": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003880"
            ],
            "code": "\nundefined4 initialize_data_080014ec(uint **data_pointer,uint *param1,int size,uint *output_data)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)data_pointer + 0x3d) == '(') {\n    if (param1 == (uint *)0x0) {\n      result = 1;\n    }\n    else if (size == 0) {\n      result = 1;\n    }\n    else if (*(char *)(data_pointer + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(data_pointer + 0xf) = 1;\n      ptr = *data_pointer;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **data_pointer = **data_pointer & 0xfffff7ff;\n      *(undefined *)((int)data_pointer + 0x3d) = 0x2a;\n      *(undefined *)((int)data_pointer + 0x3e) = 0x20;\n      result = 0;\n      data_pointer[0x10] = (uint *)0x0;\n      data_pointer[9] = param1;\n      *(short *)((int)data_pointer + 0x2a) = (short)size;\n      data_pointer[0xb] = output_data;\n      *(undefined2 *)(data_pointer + 10) = *(undefined2 *)((int)data_pointer + 0x2a);\n      *(undefined *)(data_pointer + 0xf) = 0;\n      (*data_pointer)[1] = (*data_pointer)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "current_name": "initialize_data_080014ec",
            "entrypoint": "0x080014ec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080014ec": "initialize_data_080014ec",
                "param_1": "data_pointer",
                "param_2": "param1",
                "param_3": "size",
                "param_4": "output_data",
                "puVar2": "ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001578": {
            "additional_data": {
                "0x28": {
                    "open_parentheses_ascii": 1
                },
                "0x300": {
                    "bit_mask2": 1
                },
                "0x400": {
                    "bit_mask1": 1
                },
                "FUN_08001578": {
                    "initialize_data": 12,
                    "initialize_memory": 1,
                    "modify_and_set_flags": 1,
                    "modify_param_and_bits": 1,
                    "set_flags_and_values": 1,
                    "set_permissions": 1,
                    "set_properties": 1,
                    "update_data": 4,
                    "update_data_structure": 1,
                    "update_param1": 1,
                    "update_parameter": 1,
                    "update_permissions": 2,
                    "update_settings": 1,
                    "validate_and_update_param": 1,
                    "validate_input": 1,
                    "validate_user_input": 1
                },
                "char_Value": {
                    "character_value": 1
                },
                "param_1": {
                    "data": 4,
                    "data_pointer": 10,
                    "data_ptr": 2,
                    "data_structure": 1,
                    "input_data": 1,
                    "memory": 1,
                    "param": 4,
                    "parameter": 2,
                    "permissions": 3,
                    "property": 1,
                    "settings": 1,
                    "user_input": 1
                },
                "puVar1": {
                    "current_element": 1,
                    "current_pointer": 2,
                    "current_property": 1,
                    "current_ptr": 1,
                    "current_value": 1,
                    "data": 1,
                    "first_element": 8,
                    "first_permission": 2,
                    "first_value": 2,
                    "first_value_ptr": 1,
                    "pointer": 3,
                    "pointer_to_parameter": 1,
                    "pointer_to_settings": 1,
                    "ptr": 2,
                    "ptr1": 1,
                    "ptr_param": 2,
                    "value_pointer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080038d0",
                "FUN_08003900"
            ],
            "code": "\nundefined4 initialize_data_08001578(uint **data_pointer)\n\n{\n  uint *first_element;\n  \n  if (*(char *)((int)data_pointer + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)data_pointer + 0x3d) = 0x28;\n  first_element = *data_pointer;\n  if ((*first_element & 1) == 0) {\n    *first_element = *first_element | 1;\n  }\n  **data_pointer = **data_pointer | 0x400;\n  (*data_pointer)[1] = (*data_pointer)[1] | 0x300;\n  return 0;\n}\n\n",
            "current_name": "initialize_data_08001578",
            "entrypoint": "0x08001578",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001578": "initialize_data_08001578",
                "param_1": "data_pointer",
                "puVar1": "first_element"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080015b6": {
            "called": [],
            "calling": [
                "FUN_0800171a",
                "FUN_08001864"
            ],
            "code": "\nvoid FUNC_080015b6(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080015b6",
            "entrypoint": "0x080015b6",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080015b6": "FUNC_080015b6"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080015b8": {
            "called": [],
            "calling": [
                "FUN_08001904",
                "FUN_080019a0"
            ],
            "code": "\nvoid FUNC_080015b8(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080015b8",
            "entrypoint": "0x080015b8",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080015b8": "FUNC_080015b8"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080015ba": {
            "called": [],
            "calling": [
                "FUN_080015bc",
                "FUN_08001684"
            ],
            "code": "\nvoid FUNC_080015ba(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080015ba",
            "entrypoint": "0x080015ba",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080015ba": "FUNC_080015ba"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080015bc": {
            "additional_data": {
                "FUNC_080015ba": {
                    "call_another_function": 1,
                    "call_other_function": 1,
                    "execute_function": 1,
                    "execute_helper_function": 1,
                    "perform_action": 3,
                    "perform_additional_processing": 1,
                    "perform_additional_tasks": 1,
                    "perform_task": 1
                },
                "FUN_080015bc": {
                    "decode_and_process_data": 1,
                    "decode_byte": 2,
                    "extract_and_update_byte": 1,
                    "extract_byte_and_update": 2,
                    "parse_function": 1,
                    "process_binary_data": 1,
                    "process_buffer": 2,
                    "process_data": 17,
                    "process_input": 2,
                    "process_param": 1
                },
                "cVar1": {
                    "char_value": 11,
                    "char_var": 1,
                    "char_variable": 1,
                    "character": 14,
                    "character_variable": 1,
                    "data_char": 1,
                    "last_char": 2
                },
                "param_1": {
                    "buffer": 1,
                    "buffer_data": 1,
                    "data": 13,
                    "data_array": 2,
                    "data_ptr": 2,
                    "function_params": 1,
                    "input": 3,
                    "input_array": 5,
                    "input_data": 1,
                    "parameters": 1
                },
                "pbVar2": {
                    "buffer": 1,
                    "byte_pointer": 15,
                    "byte_ptr": 13,
                    "data_ptr": 1,
                    "pointer_data": 1
                }
            },
            "called": [
                "FUN_080015ba"
            ],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 decode_and_process_data_080015bc(int *data)\n\n{\n  char character;\n  byte *byte_pointer;\n  \n  character = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    byte_pointer = (byte *)data[9];\n    data[9] = (int)(byte_pointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*byte_pointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (character == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_080015ba();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "current_name": "decode_and_process_data_080015bc",
            "entrypoint": "0x080015bc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080015bc": "decode_and_process_data_080015bc",
                "cVar1": "character",
                "param_1": "data",
                "pbVar2": "byte_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800160c": {
            "called": [],
            "calling": [
                "FUN_0800160e",
                "FUN_08001bfc"
            ],
            "code": "\nvoid FUNC_0800160c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800160c",
            "entrypoint": "0x0800160c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800160c": "FUNC_0800160c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800160e": {
            "additional_data": {
                "FUNC_0800160c": {
                    "cleanup": 2,
                    "execute_action": 1,
                    "execute_func": 1,
                    "execute_function": 4,
                    "execute_operation": 2,
                    "execute_sub_function": 1,
                    "execute_task": 1,
                    "initialize": 1,
                    "perform_action": 4,
                    "perform_additional_actions": 1,
                    "perform_cleanup": 1,
                    "perform_operation": 2,
                    "perform_task": 1
                },
                "FUN_0800160e": {
                    "extract_and_process_data": 1,
                    "extract_data": 1,
                    "handle_data": 1,
                    "handle_param": 1,
                    "process_buffer": 1,
                    "process_data": 17,
                    "process_input": 1,
                    "process_param": 2,
                    "process_parameter": 2,
                    "reverse_and_update": 1,
                    "update_char": 1,
                    "update_character": 1,
                    "update_data": 1
                },
                "cVar1": {
                    "char1": 3,
                    "char_character": 1,
                    "char_flag": 1,
                    "char_value": 9,
                    "char_var": 2,
                    "character": 5,
                    "current_char": 2,
                    "first_char": 2,
                    "flag": 3,
                    "last_char": 2,
                    "temp_char": 1
                },
                "param_1": {
                    "array": 1,
                    "buffer": 1,
                    "character": 1,
                    "data": 15,
                    "data_array": 3,
                    "data_pointer": 2,
                    "input_array": 3,
                    "param": 2,
                    "param_array": 1,
                    "param_list": 1,
                    "parameter_list": 1
                },
                "puVar2": {
                    "buffer": 1,
                    "byte_pointer": 4,
                    "current_position": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "memory_pointer": 1,
                    "next_char_pointer": 1,
                    "pointer": 5,
                    "ptr": 11,
                    "ptr_to_undefined": 1,
                    "ptr_to_write": 1,
                    "ptr_var": 1,
                    "temp_ptr": 1
                }
            },
            "called": [
                "FUN_0800160c"
            ],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 extract_and_process_data_0800160e(int *data)\n\n{\n  char char_value;\n  undefined *ptr;\n  \n  char_value = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    ptr = (undefined *)data[9];\n    data[9] = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*data + 0x10);\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (char_value == '*')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x22;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_0800160c();\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "extract_and_process_data_0800160e",
            "entrypoint": "0x0800160e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800160e": "extract_and_process_data_0800160e",
                "cVar1": "char_value",
                "param_1": "data",
                "puVar2": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800165a": {
            "additional_data": {
                "FUN_0800165a": {
                    "extract_and_call_function": 1,
                    "extract_and_process_data": 1,
                    "extract_data_and_call_function": 3,
                    "extract_data_and_invoke_function": 1,
                    "extract_parameter_and_pass": 1,
                    "get_and_call_sub_function": 1,
                    "process_data": 15,
                    "process_flag": 1,
                    "process_function": 1
                },
                "FUN_08003880": {
                    "execute_sub_function": 1,
                    "perform_action": 2,
                    "process_data": 1,
                    "process_data_and_call_subfunction": 1,
                    "process_sub_function": 1,
                    "sub_function": 1
                },
                "param_1": {
                    "array": 4,
                    "data": 9,
                    "data_array": 1,
                    "data_pointer": 4,
                    "data_ptr": 3,
                    "input_array": 10
                },
                "param_2": {
                    "flag": 3,
                    "flag1": 3,
                    "flag_1": 4,
                    "flag_param": 1,
                    "param2": 9,
                    "param_two": 1,
                    "size": 2,
                    "unused_param": 1,
                    "unused_parameter": 1,
                    "val1": 1,
                    "value1": 4,
                    "var2": 1
                },
                "param_3": {
                    "flag": 1,
                    "flag1": 1,
                    "flag2": 3,
                    "flag_2": 4,
                    "param3": 9,
                    "param_three": 1,
                    "unused": 1,
                    "unused_param": 1,
                    "unused_parameter": 1,
                    "val2": 1,
                    "value1": 2,
                    "value2": 4,
                    "value_param": 1,
                    "var3": 1
                },
                "param_4": {
                    "extracted_data": 1,
                    "flag2": 1,
                    "param": 2,
                    "param4": 11,
                    "param_4": 4,
                    "param_four": 1,
                    "param_value": 1,
                    "unknown_param": 1,
                    "unused_param": 1,
                    "val3": 1,
                    "value2": 2,
                    "value3": 4,
                    "var4": 1
                },
                "uVar1": {
                    "result": 7,
                    "selected_value": 21,
                    "value": 1,
                    "value1": 2
                },
                "uVar2": {
                    "data_flag": 1,
                    "data_value": 3,
                    "flag": 10,
                    "flag_value": 5,
                    "flags": 3,
                    "mask": 1,
                    "value": 5,
                    "value2": 2,
                    "value_with_flag": 1
                }
            },
            "called": [
                "FUN_08003880"
            ],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 extract_and_process_data_0800165a(int *input_array,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 selected_value;\n  uint flag;\n  \n  flag = *(uint *)(*input_array + 0x18);\n  if ((flag & 0x80) == 0) {\n    selected_value = *(undefined2 *)(input_array + 3);\n  }\n  else {\n    selected_value = *(undefined2 *)(input_array + 6);\n  }\n  FUN_08003880(input_array,(*(uint *)(*input_array + 0x18) & 4) == 0,selected_value,flag,param4);\n  return 0;\n}\n\n",
            "current_name": "extract_and_process_data_0800165a",
            "entrypoint": "0x0800165a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800165a": "extract_and_process_data_0800165a",
                "param_1": "input_array",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "selected_value",
                "uVar2": "flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001684": {
            "additional_data": {
                "0": {
                    "constant0": 1,
                    "null_char": 1
                },
                "0x0": {
                    "null_pointer": 1
                },
                "0x20": {
                    "constant_space": 1,
                    "new_char1": 1,
                    "replacement_char": 1,
                    "space": 2,
                    "space_char": 1
                },
                "0x21": {
                    "0x21": 1,
                    "replacement_value": 1
                },
                "0x3d": {
                    "character": 1
                },
                "0x3e": {
                    "zero": 1
                },
                "0xb": {
                    "flag": 1
                },
                "0xc": {
                    "value": 1
                },
                "0xffff0000": {
                    "0xffff0000": 1,
                    "mask": 1
                },
                "0xfffff8ff": {
                    "0x7ff": 1,
                    "clear_bit_mask": 1,
                    "filter1": 1,
                    "mask_constant": 1,
                    "param1_index1_bitwise_and_constant": 1
                },
                "0xfffffbff": {
                    "0x3ff": 1,
                    "filter2": 1,
                    "param1_bitwise_and_constant": 1,
                    "set_bit_mask": 1,
                    "update_mask": 1
                },
                "FUNC_080015ba": {
                    "do_something2": 1,
                    "execute_action2": 1,
                    "execute_func2": 1,
                    "execute_function": 1,
                    "execute_function_b": 6,
                    "handle_case_exclamation": 1,
                    "handle_exclamation": 1,
                    "handle_exclamation_case": 1,
                    "perform_action": 5,
                    "perform_operation2": 1,
                    "perform_task_b": 1,
                    "process_case_2": 1,
                    "process_case_two": 1,
                    "process_condition2": 2,
                    "process_exclamation": 1,
                    "process_helper2": 1,
                    "process_logic2": 1,
                    "reverse_condition": 1
                },
                "FUN_08001684": {
                    "handle_param_1": 1,
                    "parse_input": 1,
                    "parse_params": 1,
                    "process_data": 2,
                    "process_input": 1,
                    "process_param": 13,
                    "process_param_array": 1,
                    "process_parameter": 6,
                    "process_parameters": 2,
                    "process_params": 1,
                    "update_param_values": 1,
                    "update_parameters": 1
                },
                "FUN_080038d0": {
                    "do_something1": 1,
                    "execute_action1": 1,
                    "execute_func1": 1,
                    "execute_function_a": 6,
                    "handle_case_parentheses": 1,
                    "handle_open_paren": 1,
                    "handle_parentheses_case": 1,
                    "initialize_data": 1,
                    "initialize_parameter": 1,
                    "initialize_process": 1,
                    "initialize_values": 1,
                    "perform_operation1": 1,
                    "perform_task_a": 1,
                    "process_case_1": 1,
                    "process_case_one": 1,
                    "process_condition1": 2,
                    "process_helper1": 1,
                    "process_logic1": 1,
                    "process_parenthesis": 1,
                    "set_param": 1,
                    "set_param_to_default": 1,
                    "update_flags": 1
                },
                "param_1": {
                    "data": 1,
                    "data_pointer": 1,
                    "input_array": 1,
                    "input_params": 1,
                    "param": 10,
                    "param_array": 4,
                    "param_list": 1,
                    "parameter": 4,
                    "parameters": 6,
                    "params": 1
                }
            },
            "called": [
                "FUN_080038d0",
                "FUN_080015ba"
            ],
            "calling": [
                "FUN_08001e68"
            ],
            "code": "\nundefined4 process_param_array_08001684(uint **param)\n\n{\n  if (((param[0xb] == (uint *)0x4) || (param[0xb] == (uint *)0x8)) &&\n     (*(char *)((int)param + 0x3d) == '(')) {\n    param[0xb] = (uint *)0xffff0000;\n    (*param)[1] = (*param)[1] & 0xfffff8ff;\n    (*param)[5] = 0xfffffbff;\n    **param = **param & 0xfffffbff;\n    param[0xc] = (uint *)0x0;\n    *(undefined *)((int)param + 0x3d) = 0x20;\n    *(undefined *)((int)param + 0x3e) = 0;\n    FUN_080038d0();\n  }\n  else if (*(char *)((int)param + 0x3d) == '!') {\n    param[0xb] = (uint *)0xffff0000;\n    param[0xc] = (uint *)0x21;\n    *(undefined *)((int)param + 0x3d) = 0x20;\n    *(undefined *)((int)param + 0x3e) = 0;\n    (*param)[1] = (*param)[1] & 0xfffff8ff;\n    (*param)[5] = 0xfffffbff;\n    **param = **param & 0xfffffbff;\n    FUNC_080015ba();\n  }\n  else {\n    (*param)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_param_array_08001684",
            "entrypoint": "0x08001684",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001684": "process_param_array_08001684",
                "param_1": "param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001718": {
            "called": [],
            "calling": [
                "FUN_0800171a",
                "FUN_08001864"
            ],
            "code": "\nvoid FUNC_08001718(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08001718",
            "entrypoint": "0x08001718",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08001718": "FUNC_08001718"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800171a": {
            "additional_data": {
                "FUCN_080015b6": {
                    "handle_case1": 1
                },
                "FUC_080015b6": {
                    "handle_case1": 1
                },
                "FUC_08001718": {
                    "handle_case2": 1
                },
                "FUNC_080015b6": {
                    "action1": 1,
                    "do_something_a": 1,
                    "execute_func_2": 1,
                    "handle_case1": 2,
                    "handle_case_at": 1,
                    "handle_case_one": 1,
                    "handle_char_at": 1,
                    "handle_error": 1,
                    "handle_first_case": 1,
                    "handle_input_case1": 1,
                    "handle_invalid_data": 1,
                    "handle_special_case1": 1,
                    "handle_symbol_case": 1,
                    "perform_action1": 3,
                    "perform_task_a": 1,
                    "process_case1": 1,
                    "sub_function_1": 1
                },
                "FUNC_08001718": {
                    "action2": 1,
                    "do_something_b": 1,
                    "execute_func_1": 1,
                    "handle_at_case": 1,
                    "handle_case2": 3,
                    "handle_case_not_at": 1,
                    "handle_case_two": 1,
                    "handle_char_not_at": 1,
                    "handle_input_case2": 1,
                    "handle_second_case": 1,
                    "handle_special_case2": 1,
                    "handle_valid_data": 1,
                    "perform_action": 1,
                    "perform_action2": 3,
                    "perform_task_b": 1,
                    "process_case2": 1,
                    "sub_function_2": 1
                },
                "FUN_0800171a": {
                    "check_and_update_flags": 1,
                    "decode_and_execute": 2,
                    "decode_and_process_data": 1,
                    "improve_and_handle_input": 1,
                    "parse_function": 1,
                    "process_binary_data": 1,
                    "process_data": 10,
                    "process_input": 3,
                    "process_logic": 1,
                    "process_param": 3,
                    "process_parameter": 2,
                    "process_parameters": 1,
                    "update_function": 1,
                    "update_parameters": 1,
                    "update_params_and_execute": 1
                },
                "cVar1": {
                    "char1": 5,
                    "char_value": 9,
                    "char_var": 2,
                    "character": 8,
                    "first_char": 4,
                    "flag": 2,
                    "symbol": 1
                },
                "param_1": {
                    "data": 11,
                    "data_ptr": 2,
                    "input": 2,
                    "input_params": 1,
                    "parameter_array": 1,
                    "parameter_list": 1,
                    "parameters": 9,
                    "params": 3
                },
                "puVar2": {
                    "param2": 1,
                    "pointer": 9,
                    "pointer2": 2,
                    "pointer_value": 3,
                    "pointer_var": 1,
                    "ptr": 5,
                    "ptr2": 1,
                    "ptr_b": 1,
                    "ptr_value": 5,
                    "ptr_var": 3
                }
            },
            "called": [
                "FUN_080015b6",
                "FUN_08001718"
            ],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 decode_and_process_data_0800171a(uint **data)\n\n{\n  char char_value;\n  uint *pointer;\n  \n  char_value = *(char *)((int)data + 0x3d);\n  pointer = data[0xb];\n  if ((*(short *)(data + 10) == 0) && (char_value == '!')) {\n    if ((pointer == (uint *)0x4) || ((pointer == (uint *)0x8 || (pointer == (uint *)0xffff0000)))) {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      **data = **data | 0x200;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      if (*(char *)((int)data + 0x3e) == '@') {\n        *(undefined *)((int)data + 0x3e) = 0;\n        FUNC_08001718();\n      }\n      else {\n        *(undefined *)((int)data + 0x3e) = 0;\n        FUNC_080015b6();\n      }\n    }\n    else {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      data[0xc] = (uint *)0x11;\n      *(undefined *)((int)data + 0x3e) = 0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      FUNC_080015b6();\n    }\n  }\n  else if ((char_value == '!') || ((*(char *)((int)data + 0x3e) == '@' && (char_value == '\\\"')))) {\n    if (*(short *)((int)data + 0x2a) == 0) {\n      (*data)[1] = (*data)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)data + 0x3e) == '@') {\n      if (data[0x14] == (uint *)0x0) {\n        if (data[0x13] == (uint *)0x1) {\n          (*data)[4] = (uint)data[0x12] & 0xff;\n          data[0x14] = (uint *)((int)data[0x14] + 2);\n        }\n        else {\n          (*data)[4] = (uint)((int)data[0x12] << 0x10) >> 0x18;\n          data[0x14] = (uint *)((int)data[0x14] + 1);\n        }\n      }\n      else if (data[0x14] == (uint *)0x1) {\n        (*data)[4] = (uint)data[0x12] & 0xff;\n        data[0x14] = (uint *)((int)data[0x14] + 1);\n      }\n      else if (data[0x14] == (uint *)0x2) {\n        if (*(char *)((int)data + 0x3d) == '\\\"') {\n          **data = **data | 0x100;\n        }\n        else if (*(char *)((int)data + 0x3d) == '!') {\n          pointer = data[9];\n          data[9] = (uint *)((int)pointer + 1);\n          (*data)[4] = (uint)*(byte *)pointer;\n          *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      pointer = data[9];\n      data[9] = (uint *)((int)pointer + 1);\n      (*data)[4] = (uint)*(byte *)pointer;\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "decode_and_process_data_0800171a",
            "entrypoint": "0x0800171a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800171a": "decode_and_process_data_0800171a",
                "cVar1": "char_value",
                "param_1": "data",
                "puVar2": "pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001864": {
            "additional_data": {
                "FUNC_080015b6": {
                    "default_function": 1,
                    "execute_action2": 1,
                    "execute_case2": 1,
                    "execute_function2": 1,
                    "execute_function_b": 1,
                    "execute_if_not_at_symbol": 1,
                    "handle_at_symbol": 1,
                    "handle_case_b": 2,
                    "handle_condition2": 1,
                    "handle_default": 3,
                    "handle_default_case": 3,
                    "handle_else": 2,
                    "handle_flag_char": 1,
                    "handle_other": 1,
                    "handle_param_not_at": 1,
                    "perform_action2": 2,
                    "perform_default_action": 1,
                    "perform_operation_b": 1,
                    "process_default": 1,
                    "process_flag_b": 1
                },
                "FUNC_08001718": {
                    "execute_action1": 1,
                    "execute_case1": 1,
                    "execute_function1": 1,
                    "execute_function_a": 1,
                    "execute_if_at_symbol": 1,
                    "handle_at": 4,
                    "handle_at_symbol": 1,
                    "handle_case_a": 2,
                    "handle_case_at": 1,
                    "handle_case_at_symbol": 1,
                    "handle_char_at": 1,
                    "handle_condition1": 1,
                    "handle_exclamation": 1,
                    "handle_exclamation_point": 1,
                    "handle_flag_char_at": 1,
                    "handle_param_at": 1,
                    "perform_action1": 2,
                    "perform_action_when_at_symbol": 1,
                    "perform_operation_a": 1,
                    "process_case_at": 1,
                    "process_flag_a": 1,
                    "reset_function": 1
                },
                "FUN_08001864": {
                    "execute_control_flow": 1,
                    "handle_param_1": 1,
                    "handle_parameter": 1,
                    "process_condition": 1,
                    "process_data": 4,
                    "process_input": 2,
                    "process_param": 8,
                    "process_parameter": 6,
                    "update_flags_and_execute": 2,
                    "update_param": 1,
                    "update_parameter": 1,
                    "update_parameters": 2,
                    "update_settings": 1
                },
                "param_1": {
                    "arguments": 1,
                    "data": 4,
                    "input": 1,
                    "input_array": 1,
                    "param": 1,
                    "param_array": 1,
                    "param_list": 3,
                    "parameter": 1,
                    "parameter_list": 1,
                    "parameters": 13,
                    "params": 3,
                    "settings": 1
                },
                "puVar1": {
                    "current_param": 1,
                    "current_value": 3,
                    "flag": 1,
                    "param_value": 1,
                    "parameter_value": 1,
                    "pointer": 1,
                    "ptr": 1,
                    "ptr_arg_b": 1,
                    "ptr_value": 3,
                    "pu_var": 1,
                    "temp_pointer": 1,
                    "temp_variable": 1,
                    "value": 12,
                    "value_ptr": 2
                }
            },
            "called": [
                "FUN_08001718",
                "FUN_080015b6"
            ],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 process_param_08001864(uint **parameters)\n\n{\n  uint *value;\n  \n  value = parameters[0xb];\n  if (*(char *)((int)parameters + 0x3d) == '!') {\n    if (*(short *)((int)parameters + 0x2a) == 0) {\n      if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        **parameters = **parameters | 0x200;\n        parameters[0xc] = (uint *)0x0;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        if (*(char *)((int)parameters + 0x3e) == '@') {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08001718();\n        }\n        else {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_080015b6();\n        }\n      }\n      else {\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        parameters[0xc] = (uint *)0x11;\n        *(undefined *)((int)parameters + 0x3e) = 0;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        FUNC_080015b6();\n      }\n    }\n    else {\n      value = parameters[9];\n      parameters[9] = (uint *)((int)value + 1);\n      (*parameters)[4] = (uint)*(byte *)value;\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_param_08001864",
            "entrypoint": "0x08001864",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001864": "process_param_08001864",
                "param_1": "parameters",
                "puVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001902": {
            "called": [],
            "calling": [
                "FUN_08001904",
                "FUN_080019a0"
            ],
            "code": "\nvoid FUNC_08001902(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08001902",
            "entrypoint": "0x08001902",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08001902": "FUNC_08001902"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08001904": {
            "additional_data": {
                "FUNC_080015b8": {
                    "handle_ampersand": 1,
                    "handle_at": 2,
                    "handle_at_symbol": 3,
                    "handle_case1": 2,
                    "handle_case_at": 1,
                    "handle_char_at": 1,
                    "handle_character": 1,
                    "handle_character_at_symbol": 1,
                    "handle_invalid_input": 1,
                    "handle_normal_case": 1,
                    "process_case1": 1,
                    "process_special": 1
                },
                "FUNC_08001902": {
                    "handle_at_symbol": 1,
                    "handle_case2": 2,
                    "handle_case_default": 1,
                    "handle_character_not_at_symbol": 1,
                    "handle_default": 2,
                    "handle_exclamation_mark": 1,
                    "handle_other_character": 2,
                    "handle_quote": 1,
                    "handle_space": 1,
                    "handle_space_character": 1,
                    "process_case2": 1,
                    "process_regular": 1,
                    "process_valid_input": 1
                },
                "FUN_08001904": {
                    "extract_string_from_param": 1,
                    "parse_data": 1,
                    "parse_input": 1,
                    "parse_quotes": 1,
                    "parse_string": 2,
                    "process_data": 5,
                    "process_input": 3,
                    "process_param": 6,
                    "process_parameter": 1,
                    "process_string": 5,
                    "update_char_and_call_function": 1,
                    "update_data": 1,
                    "update_string": 2,
                    "update_string_data": 1
                },
                "param_1": {
                    "data": 6,
                    "input": 8,
                    "input_data": 1,
                    "param": 5,
                    "param_list": 1,
                    "parameter": 3,
                    "string_array": 2,
                    "string_data": 3,
                    "string_pointer": 2
                },
                "puVar1": {
                    "char_ptr": 2,
                    "character": 1,
                    "new_char_pointer": 1,
                    "next_char": 1,
                    "next_char_pointer": 1,
                    "pointer_var1": 1,
                    "ptr": 4,
                    "temp": 3,
                    "temp_pointer": 4,
                    "temp_ptr": 8,
                    "temp_ptr1": 1,
                    "temp_var": 3
                }
            },
            "called": [
                "FUN_080015b8",
                "FUN_08001902"
            ],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 process_param_08001904(uint **input)\n\n{\n  uint *temp_ptr;\n  \n  if (*(char *)((int)input + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)input + 0x2a) < 4) {\n      if (*(ushort *)((int)input + 0x2a) < 2) {\n        **input = **input & 0xfffffbff;\n        (*input)[1] = (*input)[1] & 0xfffff8ff;\n        temp_ptr = input[9];\n        input[9] = (uint *)((int)temp_ptr + 1);\n        *(char *)temp_ptr = (char)(*input)[4];\n        *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n        *(undefined *)((int)input + 0x3d) = 0x20;\n        input[0xc] = (uint *)0x0;\n        if (*(char *)((int)input + 0x3e) == '@') {\n          *(undefined *)((int)input + 0x3e) = 0;\n          FUNC_08001902();\n        }\n        else {\n          *(undefined *)((int)input + 0x3e) = 0;\n          FUNC_080015b8();\n        }\n      }\n    }\n    else {\n      temp_ptr = input[9];\n      input[9] = (uint *)((int)temp_ptr + 1);\n      *(char *)temp_ptr = (char)(*input)[4];\n      *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n      if (*(short *)((int)input + 0x2a) == 3) {\n        (*input)[1] = (*input)[1] & 0xfffffbff;\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_param_08001904",
            "entrypoint": "0x08001904",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001904": "process_param_08001904",
                "param_1": "input",
                "puVar1": "temp_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080019a0": {
            "additional_data": {
                "FUNC_080015b8": {
                    "handle_at": 1,
                    "handle_at_character": 1,
                    "handle_case1": 3,
                    "handle_condition_one": 1,
                    "handle_data_a": 1,
                    "handle_non_at_character": 2,
                    "handle_special_case": 2,
                    "process_condition1": 1,
                    "process_data": 1,
                    "process_data1": 2,
                    "process_data_case1": 1,
                    "reset_data": 1,
                    "update_data": 1,
                    "update_param": 1
                },
                "FUNC_08001902": {
                    "execute_data": 1,
                    "handle_at_character": 2,
                    "handle_case2": 3,
                    "handle_condition_two": 1,
                    "handle_data_b": 1,
                    "handle_generic_case": 1,
                    "handle_non_at_character": 1,
                    "handle_other": 1,
                    "process_condition2": 1,
                    "process_data2": 2,
                    "process_data_case2": 1,
                    "reverse_data": 2,
                    "reverse_param": 1,
                    "update_normal_case": 1
                },
                "FUN_080019a0": {
                    "decode_and_process_data": 2,
                    "modify_data": 2,
                    "modify_parameter": 1,
                    "process_data": 8,
                    "process_input": 4,
                    "process_param": 7,
                    "process_parameter": 1,
                    "process_parameters": 1,
                    "process_params": 1,
                    "update_data": 2,
                    "update_param": 1,
                    "update_parameter": 1
                },
                "param_1": {
                    "data": 10,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input": 1,
                    "input_data": 2,
                    "input_params": 1,
                    "param": 6,
                    "param_array": 2,
                    "parameter": 3,
                    "parameter_array": 1,
                    "parameters": 1,
                    "params": 1
                },
                "puVar1": {
                    "next_element": 1,
                    "next_pointer": 1,
                    "ptr": 4,
                    "ptr1": 2,
                    "temp": 3,
                    "temp_pointer": 2,
                    "temp_ptr": 13,
                    "temp_var": 4,
                    "temp_var1": 1
                }
            },
            "called": [
                "FUN_080015b8",
                "FUN_08001902"
            ],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 decode_and_process_data_080019a0(uint **data)\n\n{\n  uint *temp_ptr;\n  \n  if (*(short *)((int)data + 0x2a) == 4) {\n    (*data)[1] = (*data)[1] & 0xfffffbff;\n    temp_ptr = data[9];\n    data[9] = (uint *)((int)temp_ptr + 1);\n    *(char *)temp_ptr = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  else if (*(short *)((int)data + 0x2a) == 3) {\n    (*data)[1] = (*data)[1] & 0xfffffbff;\n    **data = **data & 0xfffffbff;\n    temp_ptr = data[9];\n    data[9] = (uint *)((int)temp_ptr + 1);\n    *(char *)temp_ptr = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  else if (*(short *)((int)data + 0x2a) == 2) {\n    if ((int)data[0xb] - 1U < 2) {\n      **data = **data & 0xfffffbff;\n      **data = **data | 0x100;\n    }\n    else {\n      **data = **data | 0x200;\n    }\n    temp_ptr = data[9];\n    data[9] = (uint *)((int)temp_ptr + 1);\n    *(char *)temp_ptr = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    temp_ptr = data[9];\n    data[9] = (uint *)((int)temp_ptr + 1);\n    *(char *)temp_ptr = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    (*data)[1] = (*data)[1] & 0xfffffcff;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    data[0xc] = (uint *)0x0;\n    if (*(char *)((int)data + 0x3e) == '@') {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08001902();\n    }\n    else {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_080015b8();\n    }\n  }\n  else {\n    temp_ptr = data[9];\n    data[9] = (uint *)((int)temp_ptr + 1);\n    *(char *)temp_ptr = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "decode_and_process_data_080019a0",
            "entrypoint": "0x080019a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080019a0": "decode_and_process_data_080019a0",
                "param_1": "data",
                "puVar1": "temp_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001aac": {
            "called": [],
            "calling": [
                "FUN_08001ab0"
            ],
            "code": "\nvoid FUNC_08001aac(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08001aac",
            "entrypoint": "0x08001aac",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08001aac": "FUNC_08001aac"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08001ab0": {
            "additional_data": {
                "FUNC_08001aac": {
                    "do_something": 1,
                    "process_data_helper1": 1,
                    "process_param1": 1,
                    "process_sub_function1": 1,
                    "reverse_data": 1,
                    "reverse_operation": 1,
                    "update_value1": 1
                },
                "FUN_08000f8c": {
                    "check_condition": 1,
                    "check_data": 1,
                    "check_status": 1,
                    "perform_operation": 1,
                    "process_data_helper2": 1,
                    "process_sub_function2": 1,
                    "update_value2": 1
                },
                "FUN_08001ab0": {
                    "check_and_process_data": 1,
                    "handle_param": 1,
                    "process_data": 8,
                    "process_function": 1,
                    "process_input": 1,
                    "process_param": 2,
                    "process_parameter": 2,
                    "process_parameters": 1,
                    "update_configuration": 1,
                    "update_flags_and_call_function": 1,
                    "update_param": 1,
                    "update_parameter": 2
                },
                "FUN_080038d0": {
                    "execute_task": 1,
                    "handle_condition1": 1,
                    "perform_action": 1,
                    "perform_action1": 1,
                    "process_data_helper3": 1,
                    "process_param2": 1,
                    "process_sub_function3": 1
                },
                "FUN_08003900": {
                    "execute_action": 1,
                    "handle_condition2": 1,
                    "perform_action": 1,
                    "perform_action2": 1,
                    "process_data_helper4": 1,
                    "process_param3": 1,
                    "process_sub_function4": 1
                },
                "iVar1": {
                    "index": 2,
                    "num_iterations": 1,
                    "result": 18,
                    "return_value": 7,
                    "status": 1,
                    "temp_int_variable": 1,
                    "variable_i": 1
                },
                "param_1": {
                    "config_data": 1,
                    "data": 8,
                    "data_ptr": 1,
                    "input": 2,
                    "input_array": 2,
                    "input_ptr": 1,
                    "param": 3,
                    "param_list": 1,
                    "parameter": 3,
                    "parameters": 9
                },
                "puVar2": {
                    "char_ptr": 2,
                    "pointer1": 2,
                    "pointer2": 1,
                    "pointer_2": 3,
                    "pointer_var": 1,
                    "pointer_var1": 1,
                    "pointer_var2": 2,
                    "pointer_var_2": 1,
                    "pointer_variable1": 1,
                    "ptr": 2,
                    "ptr1": 2,
                    "ptr2": 2,
                    "ptr_2": 1,
                    "ptr_temp": 1,
                    "ptr_var2": 1,
                    "pu_var2": 1,
                    "temp_ptr": 3,
                    "temp_ptr1": 1,
                    "temp_var1": 3
                },
                "puVar3": {
                    "data_ptr": 1,
                    "data_temp": 1,
                    "param_ptr": 2,
                    "pointer2": 2,
                    "pointer3": 1,
                    "pointer_3": 3,
                    "pointer_var2": 2,
                    "pointer_var3": 2,
                    "pointer_var_3": 1,
                    "pointer_variable2": 1,
                    "ptr2": 3,
                    "ptr3": 2,
                    "ptr_3": 1,
                    "ptr_var3": 1,
                    "pu_var3": 1,
                    "temp": 1,
                    "temp_ptr2": 3,
                    "temp_var2": 3
                }
            },
            "called": [
                "FUN_08001aac",
                "FUN_08000f8c",
                "FUN_080038d0",
                "FUN_08003900"
            ],
            "calling": [
                "FUN_08001e68",
                "FUN_08001bfc"
            ],
            "code": "\nvoid check_and_process_data_08001ab0(uint **parameters)\n\n{\n  int result;\n  uint *temp_ptr;\n  uint *temp_ptr2;\n  \n  if (*(byte *)((int)parameters + 0x3d) - 0x29 < 2) {\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)parameters + 0x3d) != '`') && (((*parameters)[1] & 0x800) == 0)) {\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n    }\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n  }\n  **parameters = **parameters & 0xfffff7ff;\n  temp_ptr2 = *parameters;\n  if ((temp_ptr2[1] & 0x800) == 0) {\n    if (*(char *)((int)parameters + 0x3d) == '`') {\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      parameters[0x10] = (uint *)0x0;\n      if ((temp_ptr2[5] & 0x40) != 0) {\n        temp_ptr = parameters[9];\n        parameters[9] = (uint *)((int)temp_ptr + 1);\n        *(char *)temp_ptr = (char)temp_ptr2[4];\n      }\n      **parameters = **parameters & 0xfffffffe;\n      FUNC_08001aac(parameters);\n    }\n    else {\n      if ((temp_ptr2[5] & 0x40) != 0) {\n        temp_ptr = parameters[9];\n        parameters[9] = (uint *)((int)temp_ptr + 1);\n        *(char *)temp_ptr = (char)temp_ptr2[4];\n      }\n      FUN_08003900(parameters);\n    }\n  }\n  else {\n    temp_ptr2[1] = temp_ptr2[1] & 0xfffff7ff;\n    if (*(char *)((int)parameters[0xd] + 0x35) == '\\x01') {\n      parameters[0xe][0x14] = (uint)&LAB_08001f3c_1;\n      result = FUN_08000f8c(parameters[0xe]);\n      if (result != 0) {\n        if (((*parameters)[5] & 0x40) != 0) {\n          temp_ptr2 = parameters[9];\n          parameters[9] = (uint *)((int)temp_ptr2 + 1);\n          *(char *)temp_ptr2 = (char)(*parameters)[4];\n        }\n        **parameters = **parameters & 0xfffffffe;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        (*(code *)parameters[0xe][0x14])();\n      }\n    }\n    else {\n      parameters[0xd][0x14] = (uint)&LAB_08001f3c_1;\n      result = FUN_08000f8c(parameters[0xd]);\n      if (result != 0) {\n        **parameters = **parameters & 0xfffffffe;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        (*(code *)parameters[0xd][0x14])();\n      }\n    }\n  }\n  if ((*(char *)((int)parameters + 0x3d) == '(') && (((uint)parameters[0x10] & 4) != 0)) {\n    parameters[0xb] = (uint *)0xffff0000;\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    FUN_080038d0(parameters);\n  }\n  return;\n}\n\n",
            "current_name": "check_and_process_data_08001ab0",
            "entrypoint": "0x08001ab0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001ab0": "check_and_process_data_08001ab0",
                "iVar1": "result",
                "param_1": "parameters",
                "puVar2": "temp_ptr",
                "puVar3": "temp_ptr2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001bfc": {
            "additional_data": {
                "FUNC_0800160c": {
                    "handle_quotes": 1,
                    "process_case2": 1
                },
                "FUN_08001ab0": {
                    "execute_function": 1,
                    "process_default": 1
                },
                "FUN_08001bfc": {
                    "parse_input": 1,
                    "process_binary": 1,
                    "process_binary_data": 1,
                    "process_data": 10,
                    "process_function": 2,
                    "process_param": 3,
                    "process_parameter": 3,
                    "process_parameters": 1,
                    "replace_characters": 1,
                    "update_flags_and_values": 2
                },
                "FUN_080038d0": {
                    "initialize_data": 1,
                    "process_case1": 1
                },
                "cVar1": {
                    "char_1": 1,
                    "char_val": 1,
                    "char_value": 12,
                    "char_var": 1,
                    "character": 9,
                    "character1": 1,
                    "character_var": 1,
                    "current_char": 2,
                    "first_char": 3
                },
                "param_1": {
                    "binary_data": 2,
                    "data": 4,
                    "data_pointer": 1,
                    "function_params": 1,
                    "input": 1,
                    "input_data": 2,
                    "input_pointer": 1,
                    "param": 5,
                    "param_list": 1,
                    "parameter": 4,
                    "parameters": 8,
                    "params": 1
                },
                "puVar2": {
                    "current_param": 1,
                    "current_ptr": 1,
                    "data_pointer": 1,
                    "pointer1": 8,
                    "pointer_var1": 4,
                    "pointer_var2": 1,
                    "pointer_var_1": 1,
                    "pointer_variable_2": 2,
                    "ptr": 2,
                    "ptr1": 4,
                    "ptr_1": 2,
                    "ptr_param": 1,
                    "ptr_value1": 1,
                    "ptr_var1": 2
                },
                "puVar3": {
                    "new_param": 1,
                    "pointer2": 8,
                    "pointer_var2": 4,
                    "pointer_var3": 1,
                    "pointer_var_2": 1,
                    "pointer_variable_3": 2,
                    "ptr2": 6,
                    "ptr_2": 2,
                    "ptr_value2": 1,
                    "ptr_var": 1,
                    "ptr_var2": 2,
                    "temp_pointer": 1,
                    "temp_ptr": 1
                }
            },
            "called": [
                "FUN_0800160c",
                "FUN_080038d0",
                "FUN_08001ab0"
            ],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 process_binary_data_08001bfc(uint **parameters)\n\n{\n  char char_value;\n  uint *pointer1;\n  uint *pointer2;\n  \n  char_value = *(char *)((int)parameters + 0x3d);\n  (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n  **parameters = **parameters | 1;\n  **parameters = **parameters & 0xfffffbff;\n  pointer1 = *parameters;\n  if ((pointer1[1] & 0x800) != 0) {\n    if ((*(char *)((int)parameters + 0x3d) == '\\\"') || (*(char *)((int)parameters + 0x3d) == '*')) {\n      *(short *)((int)parameters + 0x2a) = (short)*(undefined4 *)(*parameters[0xe] + 4);\n    }\n    else {\n      *(short *)((int)parameters + 0x2a) = (short)*(undefined4 *)(*parameters[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)parameters + 0x2a) != 0) {\n    if ((pointer1[5] & 4) != 0) {\n      pointer2 = parameters[9];\n      parameters[9] = (uint *)((int)pointer2 + 1);\n      *(char *)pointer2 = (char)pointer1[4];\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n    if (((*parameters)[5] & 0x40) != 0) {\n      pointer1 = parameters[9];\n      parameters[9] = (uint *)((int)pointer1 + 1);\n      *(char *)pointer1 = (char)(*parameters)[4];\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 4);\n  }\n  if (parameters[0x10] == (uint *)0x0) {\n    if (((char_value == '(') || (char_value == '*')) || (char_value == ')')) {\n      parameters[0xb] = (uint *)0xffff0000;\n      parameters[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      *(undefined *)((int)parameters + 0x3e) = 0;\n      FUN_080038d0();\n    }\n    else if ((parameters[0xc] == (uint *)0x22) || (char_value == '\\\"')) {\n      parameters[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      *(undefined *)((int)parameters + 0x3e) = 0;\n      FUNC_0800160c();\n    }\n  }\n  else {\n    FUN_08001ab0();\n  }\n  return 0;\n}\n\n",
            "current_name": "process_binary_data_08001bfc",
            "entrypoint": "0x08001bfc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001bfc": "process_binary_data_08001bfc",
                "cVar1": "char_value",
                "param_1": "parameters",
                "puVar2": "pointer1",
                "puVar3": "pointer2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001d00": {
            "additional_data": {
                "FUN_080011c0": {
                    "process_option3": 1,
                    "reverse_action3": 1,
                    "reverse_operation_c": 1
                },
                "FUN_0800124a": {
                    "process_option2": 1,
                    "reverse_action2": 1,
                    "reverse_operation_b": 1
                },
                "FUN_08001256": {
                    "process_option1": 1,
                    "reverse_action1": 1,
                    "reverse_operation_a": 1
                },
                "FUN_08001420": {
                    "process_option12": 1,
                    "reverse_action12": 1,
                    "reverse_operation_l": 1
                },
                "FUN_08001440": {
                    "process_option11": 1,
                    "reverse_action11": 1,
                    "reverse_operation_k": 1
                },
                "FUN_0800160e": {
                    "process_option10": 1,
                    "reverse_action10": 1,
                    "reverse_operation_j": 1
                },
                "FUN_0800165a": {
                    "process_option8": 1,
                    "reverse_action8": 1,
                    "reverse_operation_h": 1
                },
                "FUN_0800171a": {
                    "process_option6": 1,
                    "reverse_action6": 1,
                    "reverse_operation_f": 1
                },
                "FUN_08001864": {
                    "process_option7": 1,
                    "reverse_action7": 1,
                    "reverse_operation_g": 1
                },
                "FUN_08001904": {
                    "process_option4": 1,
                    "reverse_action4": 1,
                    "reverse_operation_d": 1
                },
                "FUN_080019a0": {
                    "process_option5": 1,
                    "reverse_action5": 1,
                    "reverse_operation_e": 1
                },
                "FUN_08001bfc": {
                    "process_option9": 1,
                    "reverse_action9": 1,
                    "reverse_operation_i": 1
                },
                "FUN_08001d00": {
                    "execute_command": 1,
                    "execute_function": 1,
                    "execute_function_based_on_conditions": 1,
                    "execute_operations": 1,
                    "execute_sub_function": 1,
                    "handle_action": 2,
                    "handle_function": 2,
                    "handle_param": 1,
                    "perform_action_based_on_params": 1,
                    "process_action": 1,
                    "process_data": 12,
                    "process_function": 2,
                    "process_param": 1,
                    "process_param1": 1,
                    "process_parameters": 1,
                    "process_transaction": 1
                },
                "F_UNC5432": {
                    "process_flags": 1
                },
                "iVar1": {
                    "action_ptr": 1,
                    "action_value": 1,
                    "array_element": 1,
                    "array_value": 2,
                    "cmd_address": 1,
                    "current_value": 1,
                    "data": 1,
                    "data_pointer": 1,
                    "data_val": 1,
                    "param_val": 1,
                    "param_value": 4,
                    "ptr": 1,
                    "ptr_data": 1,
                    "ptr_input": 1,
                    "transaction_address": 1,
                    "value": 10,
                    "value1": 1,
                    "var1": 1
                },
                "param_1": {
                    "action": 2,
                    "action_data": 1,
                    "command_params": 1,
                    "data": 9,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "function_data": 1,
                    "function_params": 1,
                    "input": 2,
                    "input_array": 3,
                    "input_data": 1,
                    "input_params": 1,
                    "param": 2,
                    "param_array": 1,
                    "parameters": 1,
                    "ptr": 1,
                    "transaction_data": 1
                },
                "uVar2": {
                    "condition1": 1,
                    "flag1": 12,
                    "flags": 1,
                    "flags1": 1,
                    "offset1": 1,
                    "transaction_flags": 1,
                    "value1": 7,
                    "value2": 1,
                    "var1": 4,
                    "var2": 2
                },
                "uVar3": {
                    "condition2": 1,
                    "flag2": 12,
                    "flags2": 1,
                    "offset2": 1,
                    "options": 1,
                    "transaction_status": 1,
                    "value2": 7,
                    "value3": 1,
                    "var2": 4,
                    "var3": 2
                },
                "uVar4": {
                    "condition3": 1,
                    "extra_flags": 1,
                    "flag3": 12,
                    "flags3": 1,
                    "offset3": 1,
                    "transaction_options": 1,
                    "value3": 7,
                    "value4": 1,
                    "var3": 4,
                    "var4": 2
                }
            },
            "called": [
                "FUN_0800160e",
                "FUN_08001420",
                "FUN_0800124a",
                "FUN_0800171a",
                "FUN_08001bfc",
                "FUN_08001864",
                "FUN_08001440",
                "FUN_080011c0",
                "FUN_0800165a",
                "FUN_080015bc",
                "FUN_08001904",
                "FUN_080019a0",
                "FUN_08001256"
            ],
            "calling": [],
            "code": "\nvoid process_data_08001d00(int *data)\n\n{\n  int value;\n  uint flag1;\n  uint flag2;\n  uint flag3;\n  \n  value = *data;\n  flag3 = *(uint *)(value + 0x18);\n  flag1 = *(uint *)(value + 0x14);\n  flag2 = *(uint *)(value + 4);\n  if ((*(char *)((int)data + 0x3e) == '\\x10') || (*(char *)((int)data + 0x3e) == '@')) {\n    if (((flag1 & 0x10001) == 0) || ((flag2 & 0x200) == 0)) {\n      if (((flag1 & 0x10008) == 0) || ((flag2 & 0x200) == 0)) {\n        if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n          FUN_08001256(data);\n        }\n      }\n      else {\n        FUN_0800124a(data);\n      }\n    }\n    else {\n      FUN_080011c0(data);\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08001904(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_080019a0(data);\n        return;\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_0800171a(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08001864(data);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_0800165a();\n      return;\n    }\n    if (((flag1 & 0x10010) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_08001bfc(data);\n      return;\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_0800160e(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08001440(data);\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_080015bc(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08001420(data);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08001d00",
            "entrypoint": "0x08001d00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001d00": "process_data_08001d00",
                "iVar1": "value",
                "param_1": "data",
                "uVar2": "flag1",
                "uVar3": "flag2",
                "uVar4": "flag3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001e68": {
            "additional_data": {
                "FUN_08001684": {
                    "do_something_if_conditions_met": 1,
                    "execute_action": 1,
                    "execute_action_1": 1,
                    "perform_action": 3,
                    "process_condition": 1,
                    "process_param1": 1
                },
                "FUN_08001ab0": {
                    "execute_action_2": 1,
                    "execute_function": 2,
                    "finalize_action": 1,
                    "perform_action": 1,
                    "perform_action_if_flags_set": 1,
                    "process_param2": 1,
                    "process_updated_flags": 1
                },
                "FUN_08001e68": {
                    "check_and_set_flags": 2,
                    "check_and_update_flags": 2,
                    "process_data": 1,
                    "process_flags": 5,
                    "update_flags": 6,
                    "update_flags_and_call": 1,
                    "update_flags_and_call_functions": 2,
                    "update_flags_and_check_conditions": 1,
                    "update_flags_and_status": 1,
                    "update_flags_and_values": 6,
                    "update_parameter": 1,
                    "update_permissions": 3
                },
                "cVar1": {
                    "char1": 7,
                    "char_1": 1,
                    "char_value": 5,
                    "char_var": 2,
                    "character": 15,
                    "character1": 1
                },
                "param_1": {
                    "arguments": 1,
                    "data": 1,
                    "flags": 2,
                    "input": 2,
                    "input_array": 2,
                    "param": 6,
                    "parameters": 11,
                    "params": 5,
                    "permissions": 1
                },
                "puVar2": {
                    "pointer": 9,
                    "pointer_param": 1,
                    "pointer_var": 3,
                    "pointer_var2": 2,
                    "ptr": 13,
                    "ptr_value": 1
                },
                "uVar3": {
                    "flag": 3,
                    "flag1": 5,
                    "flag_1": 2,
                    "flag_value1": 1,
                    "flag_var": 1,
                    "flag_var1": 1,
                    "param5": 1,
                    "permission_flag": 1,
                    "val1": 1,
                    "value1": 11,
                    "value3": 2,
                    "value_a": 1,
                    "variable3": 1
                },
                "uVar4": {
                    "flag2": 6,
                    "flag_2": 2,
                    "flag_mask": 1,
                    "flag_value2": 1,
                    "flag_var2": 1,
                    "param1": 1,
                    "status": 1,
                    "val2": 1,
                    "value": 2,
                    "value2": 11,
                    "value4": 2,
                    "value_b": 1,
                    "variable4": 1
                }
            },
            "called": [
                "FUN_08001684",
                "FUN_08001ab0"
            ],
            "calling": [],
            "code": "\nvoid update_flags_and_values_08001e68(uint **parameters)\n\n{\n  char character;\n  uint *ptr;\n  uint value1;\n  uint value2;\n  \n  ptr = *parameters;\n  value1 = ptr[5];\n  value2 = ptr[1];\n  if (((value1 & 0x10100) != 0) && ((value2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 1);\n    ptr[5] = 0xfffffeff;\n  }\n  if (((value1 & 0x10200) != 0) && ((value2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 2);\n    (*parameters)[5] = 0xfffffdff;\n  }\n  if (((value1 & 0x10400) != 0) && ((value2 & 0x100) != 0)) {\n    character = *(char *)((int)parameters + 0x3d);\n    if (((*(char *)((int)parameters + 0x3e) == ' ') && (*(short *)((int)parameters + 0x2a) == 0)) &&\n       (((character == '!' || (character == ')')) || ((character == '(' && (parameters[0xc] == (uint *)0x21)))))) {\n      FUN_08001684(parameters);\n    }\n    else {\n      parameters[0x10] = (uint *)((uint)parameters[0x10] | 4);\n      if (*(char *)((int)parameters + 0x3e) == '\\x10') {\n        **parameters = **parameters | 0x200;\n      }\n      (*parameters)[5] = 0xfffffbff;\n    }\n  }\n  if (((value1 & 0x10800) != 0) && ((value2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 8);\n    (*parameters)[5] = 0xfffff7ff;\n  }\n  if (parameters[0x10] != (uint *)0x0) {\n    FUN_08001ab0(parameters);\n  }\n  return;\n}\n\n",
            "current_name": "update_flags_and_values_08001e68",
            "entrypoint": "0x08001e68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001e68": "update_flags_and_values_08001e68",
                "cVar1": "character",
                "param_1": "parameters",
                "puVar2": "ptr",
                "uVar3": "value1",
                "uVar4": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001f9c": {
            "additional_data": {
                "FUN_08000e30": {
                    "check_condition_and_return": 1,
                    "check_delay": 1,
                    "check_flag": 1,
                    "check_status": 1,
                    "get_current_time": 1,
                    "get_current_value": 1,
                    "get_tick_count": 1,
                    "get_time": 2,
                    "get_time_difference": 1,
                    "get_time_since_start": 1,
                    "wait_for_value": 1
                },
                "FUN_08001f9c": {
                    "check_and_update_status": 1,
                    "initialize": 1,
                    "initialize_and_check": 3,
                    "initialize_and_check_conditions": 1,
                    "initialize_and_check_flags": 1,
                    "initialize_and_check_status": 5,
                    "initialize_application": 1,
                    "initialize_flag_and_check_timeout": 1,
                    "initialize_flags": 1,
                    "initialize_hardware": 1,
                    "initialize_peripheral": 1,
                    "initialize_system": 6,
                    "process_data": 1,
                    "update_data_and_check_status": 1,
                    "update_flag_and_check": 1,
                    "update_flags_and_check": 1,
                    "update_status": 3,
                    "update_system": 1
                },
                "_DAT_40007004": {
                    "control_flag": 1,
                    "control_register": 1,
                    "device_flags": 1,
                    "flag_3": 1,
                    "status_flags": 1,
                    "status_register": 2
                },
                "_DAT_40023840": {
                    "control_register": 1,
                    "flag1": 1,
                    "flag_1": 1,
                    "flag_register": 1,
                    "register_flag": 1,
                    "status_flag": 1,
                    "system_flags": 1
                },
                "_DAT_420e0040": {
                    "counter": 1,
                    "first_flag": 1,
                    "flag2": 1,
                    "flag_1": 1,
                    "flag_2": 1,
                    "status_flag": 1,
                    "system_status": 1
                },
                "_DAT_420e0044": {
                    "flag_2": 1,
                    "flag_4": 1,
                    "second_flag": 1,
                    "secondary_flag": 1,
                    "secondary_status_flag": 1,
                    "sub_flag": 1,
                    "subsystem_status": 1
                },
                "iVar1": {
                    "initial_delay": 1,
                    "initial_status": 1,
                    "initial_time": 5,
                    "initial_value": 14,
                    "initial_value_a": 1,
                    "start_tick_count": 1,
                    "start_time": 5,
                    "start_value": 1,
                    "timestamp": 1
                },
                "iVar2": {
                    "current_delay": 1,
                    "current_status": 1,
                    "current_tick_count": 1,
                    "current_time": 10,
                    "current_timestamp": 1,
                    "current_value": 13,
                    "initial_value_b": 1,
                    "updated_value": 2
                }
            },
            "called": [
                "FUN_08000e30"
            ],
            "calling": [
                "FUN_08000c8c"
            ],
            "code": "\n\n\nundefined4 initialize_and_check_status_08001f9c(void)\n\n{\n  int initial_value;\n  int current_value;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_420e0040 = 1;\n  initial_value = FUN_08000e30();\n  do {\n    if ((_DAT_40007004 & 0x10000) != 0) {\n      _DAT_420e0044 = 1;\n      initial_value = FUN_08000e30();\n      do {\n        if ((_DAT_40007004 & 0x20000) != 0) {\n          return 0;\n        }\n        current_value = FUN_08000e30();\n      } while ((uint)(current_value - initial_value) < 0x3e9);\n      return 3;\n    }\n    current_value = FUN_08000e30();\n  } while ((uint)(current_value - initial_value) < 0x3e9);\n  return 3;\n}\n\n",
            "current_name": "initialize_and_check_status_08001f9c",
            "entrypoint": "0x08001f9c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001f9c": "initialize_and_check_status_08001f9c",
                "iVar1": "initial_value",
                "iVar2": "current_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800201c": {
            "additional_data": {
                "FUN_08000e30": {
                    "get_current_time": 4,
                    "get_elapsed_time": 1,
                    "get_time": 2,
                    "get_time_elapsed": 1
                },
                "FUN_0800201c": {
                    "check_and_adjust_flags": 1,
                    "check_and_control": 2,
                    "check_and_control_execution": 1,
                    "check_and_control_flags": 1,
                    "check_and_control_param": 1,
                    "check_and_control_settings": 1,
                    "check_and_set_config": 1,
                    "check_and_set_flags": 1,
                    "check_device_status": 1,
                    "check_flags": 3,
                    "check_settings": 1,
                    "check_system_status": 1,
                    "handle_flags": 1,
                    "handle_param": 1,
                    "process_config": 1,
                    "process_flags": 1,
                    "process_input": 1,
                    "process_parameters": 1,
                    "validate_and_control": 1,
                    "validate_parameter_config": 1,
                    "validate_parameters": 1
                },
                "_DAT_40007000": {
                    "control_and_status_register": 1,
                    "register5": 2,
                    "register8": 1,
                    "register_val_4": 1,
                    "some_other_register": 1,
                    "status_reg": 1
                },
                "_DAT_40023800": {
                    "config_register1": 1,
                    "control_and_status_register": 1,
                    "control_reg": 1,
                    "control_reg1": 1,
                    "control_register": 2,
                    "device_control_register_1": 1,
                    "register3": 3,
                    "system_status": 1
                },
                "_DAT_40023804": {
                    "config_reg2": 1,
                    "config_register2": 1,
                    "device_register_2": 1,
                    "register2": 4,
                    "register_val_2": 1,
                    "some_register": 1,
                    "status_register": 1,
                    "system_config2": 1
                },
                "_DAT_40023808": {
                    "config_reg1": 1,
                    "config_register1": 1,
                    "control_register": 1,
                    "device_register_1": 1,
                    "flag_register": 1,
                    "register1": 4,
                    "register_val_1": 1,
                    "system_config1": 1
                },
                "_DAT_40023840": {
                    "control_and_status_register": 1,
                    "control_reg2": 1,
                    "register4": 2,
                    "register7": 1,
                    "register_val_3": 1,
                    "special_flag_register": 1
                },
                "_DAT_40023870": {
                    "control_and_status_register": 1,
                    "control_reg3": 1,
                    "flag_4": 1,
                    "register6": 1,
                    "register7": 1,
                    "register9": 1,
                    "yet_another_register": 1
                },
                "_DAT_40023874": {
                    "another_flag_register": 1,
                    "control_and_status_register": 1,
                    "flag_2": 1,
                    "register5": 1,
                    "register6": 1,
                    "register8": 1,
                    "status_reg2": 1
                },
                "_DAT_41470000": {
                    "control_and_status_register": 1
                },
                "_DAT_42470000": {
                    "buffer_1": 1,
                    "control_and_status_register": 1,
                    "flag_1": 1,
                    "internal_flag1": 1,
                    "register4": 1,
                    "register7": 1,
                    "register8": 1
                },
                "_DAT_42470060": {
                    "buffer_2": 1,
                    "control_and_status_register": 1,
                    "flag_5": 1,
                    "internal_flag3": 1,
                    "register10": 3
                },
                "_DAT_42470e80": {
                    "control_and_status_register": 1,
                    "flag_3": 1,
                    "internal_flag2": 1,
                    "register6": 1,
                    "register9": 2
                },
                "bVar4": {
                    "check_flag": 1,
                    "flag": 8,
                    "flag_changed": 1,
                    "flag_set": 1,
                    "is_bit_clear": 1,
                    "is_cond_met": 1,
                    "is_condition_met": 2,
                    "is_condition_true": 1,
                    "is_config_modified": 1,
                    "is_first_time": 2,
                    "is_flag_set": 7,
                    "need_to_change_flags": 1,
                    "need_to_restore_flag": 1,
                    "should_set_flag": 1,
                    "was_flag_set": 1
                },
                "fun_08000e30": {
                    "get_current_time": 1
                },
                "iVar1": {
                    "initial_time": 2,
                    "initial_value": 3,
                    "start": 1,
                    "start_time": 23,
                    "start_value": 1
                },
                "iVar2": {
                    "curr_time": 1,
                    "current": 1,
                    "current_time": 22,
                    "current_value": 4,
                    "end_time": 2
                },
                "param_1": {
                    "config": 2,
                    "device_flags": 1,
                    "flags": 8,
                    "flags_array": 1,
                    "input": 1,
                    "input_params": 5,
                    "param": 3,
                    "param_config": 1,
                    "parameter": 1,
                    "parameters": 2,
                    "params": 2,
                    "settings": 2,
                    "status_flags": 1
                },
                "uVar3": {
                    "result": 25,
                    "return_value": 2
                }
            },
            "called": [
                "FUN_08000e30"
            ],
            "calling": [
                "FUN_08000c8c"
            ],
            "code": "\n\n\nundefined4 check_and_adjust_flags_0800201c(uint *flags)\n\n{\n  int start_time;\n  int current_time;\n  undefined4 result;\n  bool flag;\n  \n  if (flags == (uint *)0x0) {\n    return 1;\n  }\n  if ((*flags & 1) != 0) {\n    if (((_DAT_40023808 & 0xc) == 4) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) != 0)))) {\n      if (((_DAT_40023800 & 0x20000) != 0) && (flags[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      if (flags[1] == 0x10000) {\n        _DAT_40023800 = _DAT_40023800 | 0x10000;\n      }\n      else if (flags[1] == 0x50000) {\n        _DAT_40023800 = _DAT_40023800 | 0x50000;\n      }\n      else {\n        _DAT_40023800 = _DAT_40023800 & 0xfffaffff;\n      }\n      if (flags[1] == 0) {\n        start_time = FUN_08000e30();\n        while ((_DAT_40023800 & 0x20000) != 0) {\n          current_time = FUN_08000e30();\n          if (100 < (uint)(current_time - start_time)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        start_time = FUN_08000e30();\n        while ((_DAT_40023800 & 0x20000) == 0) {\n          current_time = FUN_08000e30();\n          if (100 < (uint)(current_time - start_time)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40023808 & 0xc) == 0) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0)))) {\n      if (((_DAT_40023800 & 2) != 0) && (flags[3] != 1)) {\n        return 1;\n      }\n      _DAT_40023800 = _DAT_40023800 & 0xffffff07 | flags[4] << 3;\n    }\n    else if (flags[3] == 0) {\n      _DAT_42470000 = 0;\n      start_time = FUN_08000e30();\n      while ((_DAT_40023800 & 2) != 0) {\n        current_time = FUN_08000e30();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470000 = 1;\n      start_time = FUN_08000e30();\n      while ((_DAT_40023800 & 2) == 0) {\n        current_time = FUN_08000e30();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = _DAT_40023800 & 0xffffff07 | flags[4] << 3;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flags[5] == 0) {\n      _DAT_42470e80 = 0;\n      start_time = FUN_08000e30();\n      while ((_DAT_40023874 & 2) != 0) {\n        current_time = FUN_08000e30();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470e80 = 1;\n      start_time = FUN_08000e30();\n      while ((_DAT_40023874 & 2) == 0) {\n        current_time = FUN_08000e30();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*flags & 4) != 0) {\n    flag = (_DAT_40023840 & 0x10000000) == 0;\n    if (flag) {\n      _DAT_40023840 = _DAT_40023840 | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      start_time = FUN_08000e30();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        current_time = FUN_08000e30();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    if (flags[2] == 1) {\n      _DAT_40023870 = _DAT_40023870 | 1;\n    }\n    else if (flags[2] == 5) {\n      _DAT_40023870 = _DAT_40023870 | 5;\n    }\n    else {\n      _DAT_40023870 = _DAT_40023870 & 0xfffffffa;\n    }\n    if (flags[2] == 0) {\n      start_time = FUN_08000e30();\n      while ((_DAT_40023870 & 2) != 0) {\n        current_time = FUN_08000e30();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      start_time = FUN_08000e30();\n      while ((_DAT_40023870 & 2) == 0) {\n        current_time = FUN_08000e30();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    if (flag) {\n      _DAT_40023840 = _DAT_40023840 & 0xefffffff;\n    }\n  }\n  if (flags[6] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40023808 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (flags[6] == 2) {\n    _DAT_42470060 = 0;\n    start_time = FUN_08000e30();\n    do {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        _DAT_40023804 =\n             flags[7] | flags[8] | flags[9] << 6 | ((flags[10] >> 1) - 1) * 0x10000 |\n             flags[0xb] << 0x18;\n        _DAT_42470060 = 1;\n        start_time = FUN_08000e30();\n        do {\n          if ((_DAT_40023800 & 0x2000000) != 0) {\n            return 0;\n          }\n          current_time = FUN_08000e30();\n        } while ((uint)(current_time - start_time) < 3);\n        return 3;\n      }\n      current_time = FUN_08000e30();\n    } while ((uint)(current_time - start_time) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42470060 = 0;\n    start_time = FUN_08000e30();\n    do {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        return 0;\n      }\n      current_time = FUN_08000e30();\n    } while ((uint)(current_time - start_time) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "current_name": "check_and_adjust_flags_0800201c",
            "entrypoint": "0x0800201c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800201c": "check_and_adjust_flags_0800201c",
                "bVar4": "flag",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "param_1": "flags",
                "uVar3": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080023b4": {
            "additional_data": {
                "FUN_080002d0": {
                    "calculate_delay": 1,
                    "calculate_new_frequency": 1,
                    "calculate_threshold": 1,
                    "calculate_time_delay": 1,
                    "calculate_time_period": 1,
                    "perform_calculation": 1
                },
                "FUN_080023b4": {
                    "calculate_clock_frequency": 5,
                    "calculate_clock_speed": 12,
                    "calculate_frequency": 3,
                    "calculate_output_frequency": 1,
                    "calculate_performance": 1,
                    "calculate_refresh_rate": 1,
                    "calculate_system_clock": 1,
                    "get_clock_frequency": 1,
                    "get_clock_rate": 1,
                    "get_clock_speed": 3,
                    "get_system_clock_speed": 1
                },
                "F_080023b4": {
                    "calculate_clock_frequency": 1
                },
                "_DAT_40023804": {
                    "clock_config_2": 1,
                    "clock_config_register": 1,
                    "clock_configuration_register": 1,
                    "config_register2": 1,
                    "data2": 2,
                    "data_2": 1,
                    "data_register2": 1,
                    "data_register_2": 1,
                    "flag_value": 1,
                    "input_data2": 1,
                    "input_value2": 1,
                    "register2": 3,
                    "register_2": 4,
                    "register_value2": 5,
                    "register_value_2": 3,
                    "value2": 2
                },
                "_DAT_40023808": {
                    "clock_config_1": 1,
                    "clock_control_register": 1,
                    "config_register1": 1,
                    "data1": 2,
                    "data_1": 1,
                    "data_register1": 1,
                    "data_register_1": 1,
                    "input_data1": 1,
                    "input_value1": 1,
                    "register1": 3,
                    "register_1": 4,
                    "register_value": 1,
                    "register_value1": 5,
                    "register_value_1": 3,
                    "system_control_register": 1,
                    "value1": 2
                },
                "in_r3": {
                    "extra_param": 1,
                    "extra_parameter": 1,
                    "in_parameter": 1,
                    "initial_value": 1,
                    "input_param": 2,
                    "input_parameter": 5,
                    "input_r3": 1,
                    "input_value": 5,
                    "param": 2,
                    "param4": 1,
                    "parameter": 1,
                    "parameter1": 1,
                    "parameter_in_r3": 1,
                    "threshold_parameter": 1,
                    "unknown_parameter": 1,
                    "unused_param": 2,
                    "unused_param1": 1,
                    "unused_parameter": 1
                },
                "param_1": {
                    "config_register1": 1,
                    "old_frequency": 1
                },
                "param_2": {
                    "complex_expression1": 1,
                    "config_register2": 1
                },
                "param_3": {
                    "bit_mask": 1,
                    "config_mask": 1
                },
                "param_4": {
                    "in_r3": 1,
                    "unused_param": 1
                },
                "uVar1": {
                    "calculated_frequency": 1,
                    "calculated_rate": 1,
                    "calculated_value": 1,
                    "clock_frequency": 4,
                    "clock_multiplier": 1,
                    "clock_rate": 1,
                    "clock_speed": 10,
                    "frequency": 4,
                    "result": 8
                }
            },
            "called": [
                "FUN_080002d0"
            ],
            "calling": [
                "FUN_08002488"
            ],
            "code": "\n\n\nuint calculate_clock_speed_080023b4(void)\n\n{\n  undefined4 input_parameter;\n  uint clock_speed;\n  \n  if ((_DAT_40023808 & 0xc) == 4) {\n    return 8000000;\n  }\n  if ((_DAT_40023808 & 0xc) != 8) {\n    return 16000000;\n  }\n  if ((_DAT_40023804 & 0x400000) == 0) {\n    clock_speed = (_DAT_40023804 << 0x11) >> 0x17;\n    clock_speed = FUN_080002d0(clock_speed * 16000000,\n                         (((uint)(clock_speed * 0x20 < clock_speed) * -0x3f -\n                          (uint)(clock_speed * 0x7c0 < clock_speed * 0x1f)) * 8 +\n                         (uint)CARRY4(clock_speed * 0x3d08,clock_speed)) * 0x400 | clock_speed * 0x3d09 >> 0x16,\n                         _DAT_40023804 & 0x3f,0,input_parameter);\n  }\n  else {\n    clock_speed = (_DAT_40023804 << 0x11) >> 0x17;\n    clock_speed = FUN_080002d0(clock_speed * 8000000,\n                         (((uint)(clock_speed * 0x20 < clock_speed) * -0x3f -\n                          (uint)(clock_speed * 0x7c0 < clock_speed * 0x1f)) * 8 +\n                         (uint)CARRY4(clock_speed * 0x3d08,clock_speed)) * 0x200,_DAT_40023804 & 0x3f,0,input_parameter);\n  }\n  return clock_speed / ((((_DAT_40023804 << 0xe) >> 0x1e) + 1) * 2);\n}\n\n",
            "current_name": "calculate_clock_speed_080023b4",
            "entrypoint": "0x080023b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080023b4": "calculate_clock_speed_080023b4",
                "in_r3": "input_parameter",
                "uVar1": "clock_speed"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002488": {
            "additional_data": {
                "DAT_08005dfc": {
                    "config_flags": 1,
                    "control_bits": 1,
                    "lookup_table": 1,
                    "shift_value": 1
                },
                "DAT_2000002c": {
                    "data_register": 1,
                    "device_data": 1,
                    "output_value": 1,
                    "result": 3,
                    "status": 1
                },
                "DAT_40023800": {
                    "control_register": 1,
                    "device_register_2_2": 1,
                    "global_config": 1
                },
                "DAT_40023c00_1": {
                    "config_bitmask": 1,
                    "config_lower_bits": 1,
                    "current_config_flags": 1,
                    "device_config_1": 1,
                    "device_flags": 1,
                    "device_mask_additional": 1,
                    "device_register_1_1": 1,
                    "device_settings_1": 1,
                    "device_status1": 2,
                    "device_status_byte1": 1,
                    "global_config_size_1": 1,
                    "high_bits": 1,
                    "max_size_byte": 1
                },
                "FUM_08000d98": {
                    "log_event": 1
                },
                "FUM_08000e30": {
                    "get_current_time": 1
                },
                "FUM_080023b4": {
                    "get_device_status": 1
                },
                "FUN_08000d98": {
                    "set_configuration": 1,
                    "set_delay": 1,
                    "set_device_mode": 2,
                    "set_device_power": 1,
                    "set_flag": 1,
                    "set_interrupt_priority": 1,
                    "set_mode": 3,
                    "set_operation_mode": 1,
                    "set_peripheral_mode": 1,
                    "set_system_flag": 1,
                    "sleep": 1
                },
                "FUN_08000e30": {
                    "calculate_duration": 1,
                    "calculate_elapsed_time": 1,
                    "calculate_time": 2,
                    "calculate_time_diff": 1,
                    "delay": 1,
                    "get_current_time": 6,
                    "get_elapsed_time": 2,
                    "get_timer": 1,
                    "wait_for_delay": 1
                },
                "FUN_080023b4": {
                    "get_config_data": 1,
                    "get_config_value": 1,
                    "get_configuration_flag": 1,
                    "get_data": 2,
                    "get_device_status": 2,
                    "get_hardware_status": 1,
                    "get_peripheral_data": 1,
                    "get_register_value": 1,
                    "get_settings": 1,
                    "get_specific_value": 1,
                    "get_status": 1,
                    "read_peripheral": 1,
                    "read_sensor_data": 1,
                    "read_status": 1
                },
                "FUN_08002488": {
                    "configure_device": 6,
                    "configure_params": 1,
                    "configure_peripheral": 2,
                    "initialize_config": 2,
                    "initialize_data": 1,
                    "initialize_device": 9,
                    "initialize_device_settings": 1,
                    "initialize_hardware": 3,
                    "initialize_parameters": 1,
                    "initialize_peripheral": 1,
                    "initialize_system": 3,
                    "set_configuration": 1
                },
                "F_08000d98": {
                    "set_device_mode": 1
                },
                "F_08000e30": {
                    "get_elapsed_time": 1
                },
                "F_080023b4": {
                    "read_device_status": 1
                },
                "Fun_08000e30": {
                    "get_tick": 1
                },
                "_DAT_40023800": {
                    "global_config": 1,
                    "peripheral_status": 1
                },
                "_DAT_40023808": {
                    "control_register": 2,
                    "data_config": 1,
                    "device_config": 2,
                    "device_control": 1,
                    "device_register_2": 1,
                    "device_settings": 3,
                    "global_config_data": 1,
                    "peripheral_control": 1,
                    "system_control": 1
                },
                "_DAT_40023c00": {
                    "config_register": 1,
                    "current_config": 1,
                    "device_config": 1,
                    "device_flags": 1,
                    "device_mask": 1,
                    "device_register_1": 1,
                    "device_settings": 1,
                    "device_status": 3,
                    "global_config_size": 1,
                    "max_size": 1,
                    "system_flag": 1
                },
                "_DAT_40023c00_1": {
                    "device_register_1_1": 1,
                    "device_status1": 2
                },
                "iVar1": {
                    "initial_time": 2,
                    "start_tick": 1,
                    "start_time": 23,
                    "time_start": 1
                },
                "iVar2": {
                    "current_tick": 1,
                    "current_time": 21,
                    "end_time": 4,
                    "time_current": 1
                },
                "param_1": {
                    "config": 8,
                    "config_array": 1,
                    "config_data": 2,
                    "config_flags": 1,
                    "config_params": 6,
                    "config_settings": 1,
                    "configuration": 1,
                    "device_config": 3,
                    "device_settings": 2,
                    "hardware_config": 1,
                    "hardware_settings": 1,
                    "input_array": 1,
                    "parameters": 1,
                    "params": 1,
                    "settings": 1
                },
                "param_2": {
                    "array_size": 1,
                    "config_length": 1,
                    "config_size": 11,
                    "count": 1,
                    "num_config_flags": 1,
                    "num_config_params": 1,
                    "num_configs": 3,
                    "num_configurations": 1,
                    "num_parameters": 1,
                    "num_params": 2,
                    "num_settings": 5,
                    "number_of_settings": 1,
                    "param_count": 1,
                    "param_size": 1
                },
                "uVar3": {
                    "config_flag": 1,
                    "config_param_value": 1,
                    "config_value": 1,
                    "feature_bits": 1,
                    "flag": 1,
                    "param_value": 1,
                    "result": 1,
                    "return_value": 1,
                    "status": 19,
                    "system_config": 1,
                    "temp_var": 2
                }
            },
            "called": [
                "FUN_080023b4",
                "FUN_08000e30",
                "FUN_08000d98"
            ],
            "calling": [
                "FUN_08000c8c"
            ],
            "code": "\n\n\nundefined4 initialize_device_settings_08002488(uint *config,uint config_size)\n\n{\n  int start_time;\n  int current_time;\n  uint status;\n  \n  if (config == (uint *)0x0) {\n    return 1;\n  }\n  if ((_DAT_40023c00 & 0xf) < config_size) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)config_size);\n    if (config_size != (config_size & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*config & 2) != 0) {\n    if ((*config & 4) != 0) {\n      _DAT_40023808 = _DAT_40023808 | 0x1c00;\n    }\n    if ((*config & 8) != 0) {\n      _DAT_40023808 = _DAT_40023808 | 0xe000;\n    }\n    _DAT_40023808 = _DAT_40023808 & 0xffffff0f | config[2];\n  }\n  if ((*config & 1) != 0) {\n    status = config[1];\n    if (status == 1) {\n      if ((_DAT_40023800 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if (status - 2 < 2) {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        return 1;\n      }\n    }\n    else if ((_DAT_40023800 & 2) == 0) {\n      return 1;\n    }\n    _DAT_40023808 = status | _DAT_40023808 & 0xfffffffc;\n    start_time = FUN_08000e30();\n    while( true ) {\n      if ((_DAT_40023808 & 0xc) == config[1] * 4) break;\n      current_time = FUN_08000e30();\n      if (5000 < (uint)(current_time - start_time)) {\n        return 3;\n      }\n    }\n  }\n  if (config_size < (_DAT_40023c00 & 0xf)) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)config_size);\n    if (config_size != (config_size & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*config & 4) != 0) {\n    _DAT_40023808 = _DAT_40023808 & 0xffffe3ff | config[3];\n  }\n  if ((*config & 8) != 0) {\n    _DAT_40023808 = _DAT_40023808 & 0xffff1fff | config[4] << 3;\n  }\n  status = FUN_080023b4();\n  DAT_2000002c = status >> (&DAT_08005dfc)[(_DAT_40023808 << 0x18) >> 0x1c];\n  FUN_08000d98(0xf);\n  return 0;\n}\n\n",
            "current_name": "initialize_device_settings_08002488",
            "entrypoint": "0x08002488",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002488": "initialize_device_settings_08002488",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "param_1": "config",
                "param_2": "config_size",
                "uVar3": "status"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080025e0": {
            "additional_data": {
                "DAT_2000002c": {
                    "dat_value": 1,
                    "data": 10,
                    "data_offset": 1,
                    "data_value": 1,
                    "global_value": 1,
                    "global_variable": 3,
                    "return_value": 1
                },
                "FUN_080025e0": {
                    "get_constant_value": 2,
                    "get_dat_value": 2,
                    "get_data": 11,
                    "get_data_offset": 1,
                    "get_data_value": 7,
                    "get_global_data_value": 1,
                    "get_global_value": 2,
                    "get_global_variable": 3,
                    "get_return_value": 1,
                    "retrieve_data": 1
                },
                "undefined4": {
                    "uint32_t": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080025ec",
                "FUN_0800260c",
                "FUN_08000c8c"
            ],
            "code": "\nuint32_t get_global_data_value_080025e0(void)\n\n{\n  return DAT_2000002c;\n}\n\n",
            "current_name": "get_global_data_value_080025e0",
            "entrypoint": "0x080025e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080025e0": "get_global_data_value_080025e0",
                "undefined4": "uint32_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080025ec": {
            "additional_data": {
                "DAT_08005e0c": {
                    "data_array": 1,
                    "shift_amount": 2,
                    "shift_array": 1,
                    "shift_table": 2,
                    "shift_values": 1,
                    "shift_values_array": 1
                },
                "DAT_40023808": {
                    "constant": 1
                },
                "FUNK_080025ec": {
                    "shift_and_return": 1
                },
                "FUN_080025e0": {
                    "get_initial_value": 8,
                    "get_original_value": 1,
                    "get_return_value": 1,
                    "get_shift_value": 1,
                    "get_shifted_value": 1,
                    "get_some_value": 1,
                    "get_uint_value": 1,
                    "get_unsigned_int": 1,
                    "get_unsigned_value": 1,
                    "get_value": 5,
                    "retrieve_value": 3,
                    "sub_function": 1
                },
                "FUN_080025ec": {
                    "calculate_shifted_value": 1,
                    "extract_shifted_value": 1,
                    "get_shifted_value": 5,
                    "optimized_function": 1,
                    "reverse_and_shift": 1,
                    "reverse_bits": 1,
                    "reverse_bits_and_shift": 1,
                    "shift_and_return": 2,
                    "shift_and_return_result": 1,
                    "shift_and_return_u_int": 1,
                    "shift_and_return_value": 1,
                    "shift_left_and_return": 1,
                    "shift_operand_based_on_constant": 1,
                    "shift_right_by_dynamic_value": 1,
                    "shift_value": 2,
                    "shift_value_based_on_condition": 1,
                    "shift_value_based_on_memory": 1,
                    "shift_value_by_index": 1,
                    "shift_value_function": 1,
                    "shifted_result": 1,
                    "shifted_return_value": 1,
                    "shifted_value": 3
                },
                "_DAT_08005e0c": {
                    "shift_array": 1
                },
                "_DAT_40023808": {
                    "bit_offset": 1,
                    "data": 2,
                    "data_variable": 1,
                    "input_value": 6,
                    "shift_amount": 1,
                    "shift_factor": 1,
                    "shift_value": 3,
                    "value_to_shift": 1
                },
                "uVar1": {
                    "extracted_value": 1,
                    "initial_value": 1,
                    "result": 6,
                    "result_of_fun_080025e0": 1,
                    "unsigned_value": 1,
                    "value": 2
                }
            },
            "called": [
                "FUN_080025e0"
            ],
            "calling": [
                "FUN_080029c8"
            ],
            "code": "\n\n\nuint get_shifted_value_080025ec(void)\n\n{\n  uint result;\n  \n  result = FUN_080025e0();\n  return result >> (&DAT_08005e0c)[(uint)(_DAT_40023808 << 0x13) >> 0x1d];\n}\n\n",
            "current_name": "get_shifted_value_080025ec",
            "entrypoint": "0x080025ec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080025ec": "get_shifted_value_080025ec",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800260c": {
            "additional_data": {
                "DAT_08005e0c": {
                    "shift_table": 1,
                    "shift_values": 1
                },
                "FUN_080025e0": {
                    "get_data": 1,
                    "get_data_value": 1,
                    "get_extracted_value": 1,
                    "get_initial_value": 5,
                    "get_input": 1,
                    "get_original_value": 3,
                    "get_random_number": 1,
                    "get_return_value": 2,
                    "get_unsigned_value": 2,
                    "get_value": 6,
                    "get_value_from_subfunction": 1,
                    "sub_function": 1
                },
                "FUN_0800260c": {
                    "data_shift": 1,
                    "decompiled_function": 1,
                    "extract_data": 1,
                    "extracted_value_shifted": 1,
                    "get_shifted_result": 1,
                    "get_shifted_value": 1,
                    "reverse_bits": 3,
                    "shift_and_return": 2,
                    "shift_and_return_result": 2,
                    "shift_and_return_value": 2,
                    "shift_by_value": 1,
                    "shift_result_based_on_value": 1,
                    "shift_value_based_on_condition": 1,
                    "shift_value_by_data_index": 1,
                    "shifted_result": 4,
                    "shifted_result_based_on_value": 1,
                    "shifted_value": 2,
                    "shifted_value_by_binary_data": 1,
                    "shifted_value_by_data_index": 1,
                    "shifted_value_by_index": 1
                },
                "_DAT_40023808": {
                    "data": 2,
                    "input_data": 2,
                    "input_value": 9,
                    "original_value": 2,
                    "shift_constant": 1
                },
                "uVar1": {
                    "function_result": 1,
                    "input_value": 1,
                    "result": 4,
                    "return_value": 1,
                    "value": 2
                }
            },
            "called": [
                "FUN_080025e0"
            ],
            "calling": [
                "FUN_080029c8"
            ],
            "code": "\n\n\nuint shifted_result_based_on_value_0800260c(void)\n\n{\n  uint result;\n  \n  result = FUN_080025e0();\n  return result >> (&DAT_08005e0c)[(uint)(_DAT_40023808 << 0x10) >> 0x1d];\n}\n\n",
            "current_name": "shifted_result_based_on_value_0800260c",
            "entrypoint": "0x0800260c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800260c": "shifted_result_based_on_value_0800260c",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800262c": {
            "additional_data": {
                "0x100": {
                    "flag1_mask": 1
                },
                "0x1000": {
                    "flag2_mask": 1
                },
                "0x1d": {
                    "additional_data": 1
                },
                "0x200": {
                    "flag3_mask": 1
                },
                "0x2000": {
                    "flag4_mask": 1
                },
                "0x20000": {
                    "new_constant_value": 1
                },
                "0xc": {
                    "flag1": 1
                },
                "0xfffffd7f": {
                    "flag3_bits": 1
                },
                "0xfffffe7f": {
                    "flag1_bits": 1
                },
                "FUNC_0800268c": {
                    "do_second_check": 1,
                    "do_something": 1,
                    "do_something2": 1,
                    "execute_action": 1,
                    "execute_action_b": 1,
                    "execute_function2": 1,
                    "execute_task2": 2,
                    "handle_case": 1,
                    "handle_flag_b": 1,
                    "modify_data": 1,
                    "modify_flags": 1,
                    "perform_action": 2,
                    "perform_action2": 4,
                    "perform_action_b": 1,
                    "perform_feature_update2": 1,
                    "perform_operation2": 1,
                    "perform_task_a": 1,
                    "process_condition": 1,
                    "process_flag2": 2,
                    "process_flag_a": 1,
                    "process_param": 1,
                    "reset_flag_b": 1,
                    "reverse_bitfield": 1,
                    "reverse_data": 1
                },
                "FUN_0800262c": {
                    "check_and_modify_flags": 2,
                    "check_and_set_flags": 1,
                    "check_and_update_features": 1,
                    "initialize_data": 3,
                    "initialize_flag": 1,
                    "initialize_flags": 10,
                    "initialize_flags_and_data": 1,
                    "initialize_function": 1,
                    "initialize_status": 1,
                    "perform_action": 1,
                    "process_data": 1,
                    "process_flags": 1,
                    "update_flags": 3,
                    "update_flags_and_set_data": 1,
                    "update_flags_and_state": 1,
                    "update_flags_and_variables": 1,
                    "update_status": 1
                },
                "FUN_08003594": {
                    "do_first_check": 1,
                    "do_something": 3,
                    "do_something1": 1,
                    "execute_action": 1,
                    "execute_action_a": 1,
                    "execute_function": 2,
                    "execute_function1": 1,
                    "execute_task1": 2,
                    "handle_flag_a": 1,
                    "initialize_variables": 1,
                    "perform_action": 2,
                    "perform_action1": 4,
                    "perform_action_a": 1,
                    "perform_feature_update1": 1,
                    "perform_operation": 1,
                    "perform_operation1": 1,
                    "perform_task_b": 1,
                    "process_flag1": 1,
                    "process_flag_b": 1,
                    "reset_flag_a": 1,
                    "set_flag_a": 1,
                    "update_data": 1
                },
                "_DAT_40013c14": {
                    "constant": 1,
                    "constant_value": 2,
                    "some_constant": 1
                },
                "param_1": {
                    "data": 3,
                    "data_pointer": 3,
                    "data_ptr": 4,
                    "feature_data": 1,
                    "flag_ptr": 2,
                    "flags": 9,
                    "input": 1,
                    "input_array": 1,
                    "input_data": 1,
                    "param": 1,
                    "ptr": 2,
                    "status": 1,
                    "status_ptr": 1
                }
            },
            "called": [
                "FUN_0800268c",
                "FUN_08003594"
            ],
            "calling": [],
            "code": "\n\n\nvoid initialize_flags_and_data_0800262c(int *flags)\n\n{\n  if (((*(uint *)(*flags + 0xc) & 0x100) != 0) && ((*(uint *)(*flags + 8) & 0x1000) != 0)) {\n    FUN_08003594();\n    *(uint *)(*flags + 0xc) = *(uint *)(*flags + 0xc) & 0xff | 0xfffffe7f;\n  }\n  if (((*(uint *)(*flags + 0xc) & 0x200) != 0) && ((*(uint *)(*flags + 8) & 0x2000) != 0)) {\n    FUNC_0800268c(flags);\n    *(uint *)(*flags + 0xc) = *(uint *)(*flags + 0xc) & 0xff | 0xfffffd7f;\n  }\n  _DAT_40013c14 = 0x20000;\n  *(undefined *)((int)flags + 0x1d) = 1;\n  return;\n}\n\n",
            "current_name": "initialize_flags_and_data_0800262c",
            "entrypoint": "0x0800262c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800262c": "initialize_flags_and_data_0800262c",
                "param_1": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800268c": {
            "called": [],
            "calling": [
                "FUN_0800262c"
            ],
            "code": "\nvoid FUNC_0800268c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800268c",
            "entrypoint": "0x0800268c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800268c": "FUNC_0800268c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800268e": {
            "additional_data": {
                "FUN_0800268e": {
                    "initialize_data": 2,
                    "set_flag_and_call_function": 1,
                    "set_flag_and_process": 1,
                    "set_flags_and_call_function": 1,
                    "set_flags_and_execute_func": 1,
                    "update_data": 7,
                    "update_data_and_call_function": 1,
                    "update_flag_and_call_function": 2,
                    "update_flags_and_call": 1,
                    "update_flags_and_call_function": 3,
                    "update_flags_and_execute_function": 1,
                    "update_flags_and_reset": 2,
                    "update_flags_and_values": 1,
                    "update_memory_address": 1,
                    "update_param_array": 1,
                    "update_param_value": 1,
                    "update_parameter": 2,
                    "update_parameter_and_call_function": 1,
                    "update_variable_and_call_function": 1
                },
                "FUN_0800340c": {
                    "call_sub_function": 2,
                    "do_something": 1,
                    "execute_sub_function": 3,
                    "perform_action": 1,
                    "perform_additional_processing": 2,
                    "process_data": 8,
                    "process_param_array": 2,
                    "reset_data": 2
                },
                "param_1": {
                    "data": 8,
                    "data_pointer": 2,
                    "data_ptr": 2,
                    "function_args": 1,
                    "function_arguments": 1,
                    "input_data": 1,
                    "input_parameters": 1,
                    "input_params": 2,
                    "param": 4,
                    "param_array": 3,
                    "parameter": 3,
                    "parameters": 2,
                    "params": 1
                },
                "puVar1": {
                    "argument_pointer": 1,
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "current_data": 1,
                    "current_data_pointer": 1,
                    "current_data_ptr": 1,
                    "current_value": 1,
                    "data_pointer": 1,
                    "first_element": 1,
                    "param_ptr": 1,
                    "param_value": 1,
                    "pointer": 5,
                    "pointer1": 1,
                    "pointer_to_data": 1,
                    "pointer_var": 1,
                    "ptr": 7,
                    "ptr1": 1,
                    "ptr_to_data": 1,
                    "temp_pointer": 1,
                    "value": 1,
                    "var1": 1
                },
                "undefined": {
                    "flag": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_0800340c"
            ],
            "calling": [
                "FUN_08003414"
            ],
            "code": "\nvoid update_data_and_call_function_0800268e(uint **data)\n\n{\n  uint *ptr;\n  \n  *(flag *)((int)data + 0x39) = 2;\n  ptr = *data;\n  if ((ptr[8] & 0x1111) == 0) {\n    if ((ptr[8] & 0x444) == 0) {\n      *ptr = *ptr & 0xfffffffe;\n    }\n  }\n  FUN_0800340c(data);\n  *(flag *)((int)data + 0x39) = 0;\n  *(flag *)(data + 0xe) = 0;\n  return;\n}\n\n",
            "current_name": "update_data_and_call_function_0800268e",
            "entrypoint": "0x0800268e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800268e": "update_data_and_call_function_0800268e",
                "param_1": "data",
                "puVar1": "ptr",
                "undefined": "flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080026c8": {
            "called": [],
            "calling": [
                "FUN_080026ce"
            ],
            "code": "\nvoid FUNC_080026c8(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080026c8",
            "entrypoint": "0x080026c8",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080026c8": "FUNC_080026c8"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080026ca": {
            "called": [],
            "calling": [
                "FUN_080026ce"
            ],
            "code": "\nvoid FUNC_080026ca(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080026ca",
            "entrypoint": "0x080026ca",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080026ca": "FUNC_080026ca"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080026cc": {
            "called": [],
            "calling": [
                "FUN_080026ce"
            ],
            "code": "\nvoid FUNC_080026cc(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080026cc",
            "entrypoint": "0x080026cc",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080026cc": "FUNC_080026cc"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080026ce": {
            "additional_data": {
                "DAT_": {
                    "dat_": 1
                },
                "FUC_08003754": {
                    "check_condition1": 1
                },
                "FUNC_080026c8": {
                    "call_function_b": 1,
                    "do_operation2": 1,
                    "execute2": 1,
                    "execute_alternate_action": 2,
                    "execute_alternative_action1": 1,
                    "execute_alternative_operation1": 1,
                    "execute_b": 1,
                    "execute_branch_2": 1,
                    "execute_else_condition1": 1,
                    "execute_first_condition_alternative": 1,
                    "execute_flag_other": 1,
                    "execute_function_2": 1,
                    "execute_logic2": 2,
                    "execute_operation2": 1,
                    "execute_task": 1,
                    "handle_case2": 1,
                    "handle_condition1_alternative": 1,
                    "handle_condition_a_not_met": 1,
                    "handle_else_condition1": 1,
                    "perform_action2": 1,
                    "perform_action_b": 1,
                    "perform_alternative_action1": 1,
                    "perform_fallback1": 1,
                    "process_case2": 1,
                    "process_case_b": 1,
                    "process_flag1_alt": 1
                },
                "FUNC_080026ca": {
                    "call_function_a": 1,
                    "do_operation1": 1,
                    "execute1": 1,
                    "execute_a": 1,
                    "execute_action": 2,
                    "execute_action1": 1,
                    "execute_branch_1": 1,
                    "execute_condition1": 1,
                    "execute_first_condition": 1,
                    "execute_flag_one": 1,
                    "execute_function_1": 1,
                    "execute_logic1": 2,
                    "execute_operation1": 2,
                    "handle_case1": 1,
                    "handle_condition1": 2,
                    "handle_condition_a": 1,
                    "perform_action": 1,
                    "perform_action1": 2,
                    "perform_action_a": 1,
                    "perform_operation1": 1,
                    "process_case1": 1,
                    "process_case_a": 1,
                    "process_flag1": 1
                },
                "FUNC_080026cc": {
                    "call_function_e": 1,
                    "do_operation4": 1,
                    "execute4": 1,
                    "execute_alternative_action2": 1,
                    "execute_alternative_operation2": 1,
                    "execute_condition_c": 1,
                    "execute_else_condition2": 1,
                    "execute_flag_three": 1,
                    "execute_fourth_condition": 1,
                    "execute_function_5": 1,
                    "execute_logic4": 2,
                    "execute_operation4": 1,
                    "execute_other_action": 1,
                    "handle_case4": 1,
                    "handle_condition2_alternative": 1,
                    "handle_condition_b_not_met": 1,
                    "handle_else_condition2": 1,
                    "modify_data": 1,
                    "perform_action4": 1,
                    "perform_action_d": 1,
                    "perform_alternative_action2": 1,
                    "perform_operation3": 1,
                    "process_case4": 1,
                    "process_condition_d": 1,
                    "process_flag2_alt": 1,
                    "reverse_3": 1
                },
                "FUNC_0800293c": {
                    "call_function_d": 1,
                    "do_operation3": 1,
                    "execute3": 1,
                    "execute_action2": 1,
                    "execute_condition2": 1,
                    "execute_condition_b": 1,
                    "execute_different_action": 1,
                    "execute_flag_two": 1,
                    "execute_function_4": 1,
                    "execute_logic3": 2,
                    "execute_operation2": 1,
                    "execute_operation3": 1,
                    "execute_third_condition_alternative": 1,
                    "handle_case3": 1,
                    "handle_condition2": 1,
                    "handle_condition3": 1,
                    "handle_condition_b": 1,
                    "perform_action2": 1,
                    "perform_action3": 1,
                    "perform_action_c": 1,
                    "perform_fallback2": 1,
                    "process_case3": 1,
                    "process_condition_c": 1,
                    "process_data": 1,
                    "process_flag2": 1,
                    "reverse_2": 1
                },
                "FUNC_0800293e": {
                    "analyze_data": 1,
                    "call_function_f": 1,
                    "do_operation5": 1,
                    "execute5": 1,
                    "execute_action3": 1,
                    "execute_additional_action": 1,
                    "execute_condition3": 1,
                    "execute_condition_d": 1,
                    "execute_fifth_condition": 1,
                    "execute_flag_four": 1,
                    "execute_function_6": 1,
                    "execute_logic5": 2,
                    "execute_operation3": 1,
                    "execute_operation5": 1,
                    "handle_case5": 1,
                    "handle_condition2": 1,
                    "handle_condition_c": 1,
                    "handle_multiple_conditions": 1,
                    "perform_action3": 1,
                    "perform_action5": 1,
                    "perform_action_e": 1,
                    "perform_fallback3": 1,
                    "process_case5": 1,
                    "process_condition_e": 1,
                    "process_flag3": 1,
                    "reverse_4": 1
                },
                "FUN_080026ce": {
                    "check_and_execute_actions": 1,
                    "check_and_execute_operations": 1,
                    "check_and_process_flags": 1,
                    "execute_operations": 1,
                    "process_conditions": 2,
                    "process_data": 5,
                    "process_flag_bits": 1,
                    "process_flags": 9,
                    "process_parameters": 1,
                    "process_params": 2,
                    "update_flags_and_call_functions": 1
                },
                "FUN_08003754": {
                    "check_and_execute_operation1": 1,
                    "check_condition1": 6,
                    "check_condition_1": 1,
                    "check_condition_a": 2,
                    "check_condition_and_call_function": 1,
                    "check_first_condition": 1,
                    "check_flag1": 3,
                    "check_flag_one": 1,
                    "do_something": 1,
                    "handle_flag_combination1": 1,
                    "initialize_data": 1,
                    "initialize_flags": 1,
                    "perform_check": 1,
                    "perform_first_operation": 1,
                    "process_condition1": 2,
                    "process_condition_1": 1,
                    "process_condition_a": 1,
                    "validate_flag1": 1
                },
                "FUN_0800376e": {
                    "call_function_c": 1,
                    "check_and_execute_operation2": 1,
                    "check_condition2": 5,
                    "check_condition_b": 1,
                    "check_flag2": 3,
                    "check_flag_two": 1,
                    "execute_condition_a": 1,
                    "execute_function_3": 1,
                    "execute_sixth_condition": 1,
                    "handle_flag_combination2": 1,
                    "perform_another_action": 1,
                    "perform_operation": 1,
                    "perform_operation2": 1,
                    "process_condition2": 2,
                    "process_condition_b": 1,
                    "reverse_1": 1,
                    "reverse_data": 2,
                    "reverse_operation": 1,
                    "reverse_something": 1
                },
                "PTR_": {
                    "ptr_": 1
                },
                "currentParam": {
                    "current_parameter": 1
                },
                "func_param1": {
                    "param_1": 1
                },
                "iVar1": {
                    "current_flag_value": 1,
                    "current_flags": 1,
                    "current_param": 1,
                    "current_value": 1,
                    "element": 1,
                    "flag_value": 2,
                    "operation": 1,
                    "param_value": 1,
                    "ptr": 3,
                    "ptr_value": 1,
                    "temp": 1,
                    "temp_var": 1,
                    "temp_variable": 1,
                    "value": 11,
                    "var1": 1
                },
                "param_1": {
                    "data": 5,
                    "flag_holder": 1,
                    "flags": 9,
                    "input": 1,
                    "input_array": 1,
                    "input_data": 1,
                    "input_ptr": 1,
                    "operations": 1,
                    "param": 1,
                    "param_array": 2,
                    "parameters": 1,
                    "params": 2,
                    "pointer": 1
                },
                "parameters": {
                    "params": 1
                }
            },
            "called": [
                "FUN_08003754",
                "FUN_080026ca",
                "FUN_080026c8",
                "FUN_0800376e",
                "FUN_0800293c",
                "FUN_080026cc",
                "FUN_0800293e"
            ],
            "calling": [
                "FUN_0800377c"
            ],
            "code": "\nvoid check_and_process_flags_080026ce(int *flags)\n\n{\n  int value;\n  \n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 2) != 0) && ((*(uint *)(value + 0xc) & 2) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffd;\n    *(undefined *)(flags + 6) = 1;\n    if ((*(uint *)(*flags + 0x18) & 3) == 0) {\n      FUN_08003754();\n      FUNC_080026ca(flags);\n    }\n    else {\n      FUNC_080026c8();\n    }\n    *(undefined *)(flags + 6) = 0;\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 4) != 0) && ((*(uint *)(value + 0xc) & 4) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffb;\n    *(undefined *)(flags + 6) = 2;\n    if ((*(uint *)(*flags + 0x18) & 0x300) == 0) {\n      FUN_08003754(flags);\n      FUNC_080026ca(flags);\n    }\n    else {\n      FUNC_080026c8(flags);\n    }\n    *(undefined *)(flags + 6) = 0;\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 8) != 0) && ((*(uint *)(value + 0xc) & 8) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffff7;\n    *(undefined *)(flags + 6) = 4;\n    if ((*(uint *)(*flags + 0x1c) & 3) == 0) {\n      FUN_08003754(flags);\n      FUNC_080026ca(flags);\n    }\n    else {\n      FUNC_080026c8(flags);\n    }\n    *(undefined *)(flags + 6) = 0;\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 0x10) != 0) && ((*(uint *)(value + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffef;\n    *(undefined *)(flags + 6) = 8;\n    if ((*(uint *)(*flags + 0x1c) & 0x300) == 0) {\n      FUN_08003754(flags);\n      FUNC_080026ca(flags);\n    }\n    else {\n      FUNC_080026c8(flags);\n    }\n    *(undefined *)(flags + 6) = 0;\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 1) != 0) && ((*(uint *)(value + 0xc) & 1) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffe;\n    FUN_0800376e(flags);\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 0x80) != 0) && ((*(uint *)(value + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffff7f;\n    FUNC_0800293e(flags);\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 0x40) != 0) && ((*(uint *)(value + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffbf;\n    FUNC_080026cc(flags);\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 0x20) != 0) && ((*(uint *)(value + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffdf;\n    FUNC_0800293c(flags);\n  }\n  return;\n}\n\n",
            "current_name": "check_and_process_flags_080026ce",
            "entrypoint": "0x080026ce",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080026ce": "check_and_process_flags_080026ce",
                "iVar1": "value",
                "param_1": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002848": {
            "additional_data": {
                "1": {
                    "bit_mask": 1
                },
                "2": {
                    "shifted_value": 1
                },
                "FUN_08002848": {
                    "set_bit_value": 2,
                    "update_bit": 11,
                    "update_bit_field": 3,
                    "update_bit_value": 7,
                    "update_bits": 3,
                    "update_bitwise": 1,
                    "update_bitwise_value": 1,
                    "update_flag": 1,
                    "update_parameter": 1,
                    "update_value_at_bit_position": 1
                },
                "param_1": {
                    "address": 3,
                    "base_address": 19,
                    "data": 8,
                    "object_address": 1
                },
                "param_2": {
                    "bit_index": 2,
                    "bit_number": 1,
                    "bit_offset": 1,
                    "bit_pos": 1,
                    "bit_position": 25,
                    "position": 1
                },
                "param_3": {
                    "bit_value": 12,
                    "new_value": 15,
                    "value": 3,
                    "value_to_update": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002864"
            ],
            "code": "\nvoid update_value_at_bit_position_08002848(int base_address,uint bit_position,int new_value)\n\n{\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & ~(1 << (bit_position & 0xff));\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) | new_value << (bit_position & 0xff);\n  return;\n}\n\n",
            "current_name": "update_value_at_bit_position_08002848",
            "entrypoint": "0x08002848",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002848": "update_value_at_bit_position_08002848",
                "param_1": "base_address",
                "param_2": "bit_position",
                "param_3": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002864": {
            "additional_data": {
                "FUN_08002848": {
                    "modify_data": 1,
                    "process_data": 2,
                    "process_element": 1,
                    "set_memory": 1,
                    "update_memory": 1
                },
                "FUN_08002864": {
                    "check_and_modify_data": 2,
                    "check_and_update_flags": 1,
                    "identify_and_modify": 1,
                    "improve_and_update_code": 1,
                    "improve_code": 1,
                    "process_data": 1,
                    "process_memory": 1,
                    "update_control_flags": 1,
                    "update_data": 3,
                    "update_flags_and_set_bit": 1,
                    "update_flags_and_values": 1,
                    "update_memory": 5,
                    "update_memory_and_return": 1,
                    "update_memory_protection": 6,
                    "validate_and_update_data": 1
                },
                "bVar1": {
                    "check_condition": 1,
                    "condition_met": 1,
                    "is_address_valid": 4,
                    "is_block_protected": 1,
                    "is_constant": 1,
                    "is_correct_address": 1,
                    "is_magic_value": 1,
                    "is_memory_in_range": 1,
                    "is_special": 4,
                    "is_special_address": 7,
                    "is_special_block": 1,
                    "is_special_case": 2,
                    "is_special_ptr": 1,
                    "is_special_value": 4,
                    "is_valid": 1
                },
                "param_1": {
                    "array": 1,
                    "array_ptr": 1,
                    "binary_pointer": 1,
                    "control_ptr": 1,
                    "data": 4,
                    "data_array": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "data_to_modify": 1,
                    "input_array": 1,
                    "memory": 6,
                    "memory_block": 1,
                    "memory_pointer": 4,
                    "memory_ptr": 2,
                    "param_array": 1,
                    "param_ptr": 1,
                    "parameter": 1,
                    "parameter_pointer": 1
                },
                "param_2": {
                    "flag": 2,
                    "flag_value": 1,
                    "initial_value": 1,
                    "param_2": 1,
                    "param_value": 4,
                    "parameter_value": 1,
                    "size": 3,
                    "status_code": 1,
                    "value": 17
                },
                "param_3": {
                    "extra_param": 1,
                    "flag": 1,
                    "offset": 1,
                    "some_parameter": 1,
                    "unused_param": 1,
                    "value": 1
                },
                "puVar2": {
                    "address": 2,
                    "address_ptr": 1,
                    "control_data": 1,
                    "current_address": 1,
                    "current_block": 1,
                    "current_data": 1,
                    "current_elem": 1,
                    "current_memory": 1,
                    "current_pointer": 3,
                    "current_ptr": 1,
                    "data": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_value": 1,
                    "memory_block": 1,
                    "memory_content": 1,
                    "memory_ptr_value": 1,
                    "memory_value": 2,
                    "param_ptr_value": 1,
                    "pointer": 2,
                    "pointer_value": 1,
                    "ptr": 2,
                    "ptr_data": 2,
                    "value_pointer": 1
                }
            },
            "called": [
                "FUN_08002848"
            ],
            "calling": [
                "FUN_08003414"
            ],
            "code": "\nundefined4 update_memory_protection_08002864(uint **memory,undefined4 value)\n\n{\n  bool is_special_address;\n  uint *current_pointer;\n  \n  FUN_08002848(*memory,value,0);\n  current_pointer = *memory;\n  if (current_pointer == (uint *)0x40010000) {\n    is_special_address = true;\n  }\n  else if (current_pointer == (uint *)0x40010400) {\n    is_special_address = true;\n  }\n  else {\n    is_special_address = false;\n  }\n  if (((is_special_address) && ((current_pointer[8] & 0x1111) == 0)) && ((current_pointer[8] & 0x444) == 0)) {\n    current_pointer[0x11] = current_pointer[0x11] & 0xffff7fff;\n  }\n  current_pointer = *memory;\n  if (((current_pointer[8] & 0x1111) == 0) && ((current_pointer[8] & 0x444) == 0)) {\n    *current_pointer = *current_pointer & 0xfffffffe;\n  }\n  *(undefined *)((int)memory + 0x39) = 1;\n  return 0;\n}\n\n",
            "current_name": "update_memory_protection_08002864",
            "entrypoint": "0x08002864",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002864": "update_memory_protection_08002864",
                "bVar1": "is_special_address",
                "param_1": "memory",
                "param_2": "value",
                "puVar2": "current_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080028d4": {
            "additional_data": {
                "0x20": {
                    "base_address": 1,
                    "register": 1
                },
                "4": {
                    "bit_mask": 1,
                    "bitmask": 1
                },
                "FUN_080028d4": {
                    "apply_bitwise_operations": 1,
                    "set_bit_at_position": 1,
                    "update_bit": 3,
                    "update_bit_field": 1,
                    "update_bitmask": 1,
                    "update_bits": 6,
                    "update_bitwise_value": 3,
                    "update_bitwise_values": 1,
                    "update_data": 1,
                    "update_flags": 1,
                    "update_operand": 1,
                    "update_param": 1,
                    "update_param_with_offset": 1,
                    "update_permissions": 1,
                    "update_register": 1,
                    "update_register_value": 1,
                    "update_value": 4,
                    "update_value_at_index": 2
                },
                "new_variable_name_1": {
                    "original_value": 1
                },
                "new_variable_name_2": {
                    "shifted_value": 1
                },
                "param_1": {
                    "address": 1,
                    "array": 1,
                    "array_base": 1,
                    "base_address": 20,
                    "data": 2,
                    "data_address": 2,
                    "obj_address": 1,
                    "param_address": 1,
                    "register_address": 2
                },
                "param_2": {
                    "bit_index": 2,
                    "bit_offset": 6,
                    "bit_position": 20,
                    "index": 1,
                    "position": 2
                },
                "param_3": {
                    "bit_value": 7,
                    "new_value": 13,
                    "permission_value": 1,
                    "value": 8,
                    "value_to_update": 2
                },
                "param_4": {
                    "mask": 1
                },
                "param_5": {
                    "shifted_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080028f0"
            ],
            "code": "\nvoid update_bitwise_value_080028d4(int base_address,uint bit_position,int new_value)\n\n{\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & ~(4 << (bit_position & 0xff));\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) | new_value << (bit_position & 0xff);\n  return;\n}\n\n",
            "current_name": "update_bitwise_value_080028d4",
            "entrypoint": "0x080028d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080028d4": "update_bitwise_value_080028d4",
                "param_1": "base_address",
                "param_2": "bit_position",
                "param_3": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080028f0": {
            "additional_data": {
                "FUN_080028d4": {
                    "change_values": 1,
                    "helper_function": 1,
                    "modify_fields": 1,
                    "process_data": 5,
                    "reverse_bits": 1,
                    "update_array_values": 1,
                    "update_data": 1,
                    "update_values": 1
                },
                "FUN_080028f0": {
                    "improve_binary_analysis": 1,
                    "modify_data": 1,
                    "process_data": 1,
                    "update_array_values": 1,
                    "update_bit_fields": 1,
                    "update_data": 2,
                    "update_flags": 5,
                    "update_flags_and_values": 12,
                    "update_permissions": 1
                },
                "param": {
                    "input_value": 1
                },
                "param_1": {
                    "arg1": 1,
                    "array": 1,
                    "array_pointer": 2,
                    "array_ptr": 2,
                    "bit_fields": 1,
                    "data": 6,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "input_array": 4,
                    "input_data": 1,
                    "input_parameters": 1,
                    "input_pointer": 1,
                    "param": 2,
                    "param_array": 1,
                    "pointer": 1,
                    "pointer_array": 1,
                    "ptr": 1,
                    "values": 2
                },
                "param_2": {
                    "arg2": 1,
                    "data": 2,
                    "entry_point": 1,
                    "flag": 5,
                    "flag_value": 1,
                    "input_parameter": 1,
                    "input_value": 2,
                    "length": 1,
                    "param": 3,
                    "val": 1,
                    "value": 12,
                    "value_count": 1
                },
                "param_3": {
                    "flag": 4,
                    "offset": 2,
                    "param3": 1,
                    "unused_param": 2,
                    "value2": 1
                },
                "ptr_1": {
                    "first_pointer_element": 1
                },
                "ptr_8": {
                    "eighth_pointer_element": 1
                },
                "puVar1": {
                    "array": 2,
                    "array_pointer": 3,
                    "bit_fields_ptr": 1,
                    "current_array": 2,
                    "current_array_element": 1,
                    "current_element": 2,
                    "data": 1,
                    "data_array": 1,
                    "data_ptr": 1,
                    "pointer": 6,
                    "pointer1": 1,
                    "pointer2": 1,
                    "pointer_to_input": 1,
                    "pointer_value": 1,
                    "ptr": 2,
                    "ptr1": 1,
                    "ptr_data": 1,
                    "ptr_values": 1,
                    "temp_ptr": 1,
                    "updated_values": 1
                }
            },
            "called": [
                "FUN_080028d4"
            ],
            "calling": [
                "FUN_08003414"
            ],
            "code": "\nundefined4 update_flags_and_values_080028f0(uint **data,undefined4 value)\n\n{\n  uint *pointer;\n  \n  FUN_080028d4(*data,value,0);\n  pointer = *data;\n  if (((pointer[8] & 0x1111) == 0) && ((pointer[8] & 0x444) == 0)) {\n    pointer[0x11] = pointer[0x11] & 0xffff7fff;\n  }\n  pointer = *data;\n  if (((pointer[8] & 0x1111) == 0) && ((pointer[8] & 0x444) == 0)) {\n    *pointer = *pointer & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_flags_and_values_080028f0",
            "entrypoint": "0x080028f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080028f0": "update_flags_and_values_080028f0",
                "param": "input_value",
                "param_1": "data",
                "param_2": "value",
                "puVar1": "pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800293c": {
            "called": [],
            "calling": [
                "FUN_080026ce"
            ],
            "code": "\nvoid FUNC_0800293c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800293c",
            "entrypoint": "0x0800293c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800293c": "FUNC_0800293c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800293e": {
            "called": [],
            "calling": [
                "FUN_080026ce"
            ],
            "code": "\nvoid FUNC_0800293e(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800293e",
            "entrypoint": "0x0800293e",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800293e": "FUNC_0800293e"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002940": {
            "additional_data": {
                "0x14": {
                    "mask2": 1,
                    "mask_2": 1,
                    "offset2": 2,
                    "offset_2": 1,
                    "second_offset": 1,
                    "value2": 1
                },
                "0x20": {
                    "new_bit": 1,
                    "space_character": 1
                },
                "0x3a": {
                    "offset3": 1
                },
                "0xc": {
                    "first_offset": 1,
                    "mask1": 1,
                    "mask_1": 1,
                    "offset1": 2,
                    "offset_1": 1,
                    "value1": 1
                },
                "0xfffffedf": {
                    "bit_mask1": 1,
                    "clear_mask1": 1,
                    "first_mask": 1
                },
                "0xfffffffe": {
                    "bit_mask2": 1,
                    "clear_mask2": 1,
                    "second_mask": 1
                },
                "FUN_08002940": {
                    "clear_bit_values": 1,
                    "clear_bits": 1,
                    "clear_bits_and_set_char": 1,
                    "clear_bits_and_set_flag": 1,
                    "clear_bits_and_set_space": 1,
                    "clear_flags": 10,
                    "clear_permissions": 2,
                    "set_certain_bits_of_values_to_zero": 1,
                    "set_flags_and_values": 1,
                    "set_memory_values": 1,
                    "update_data": 1,
                    "update_flags_and_value": 1,
                    "update_memory": 1,
                    "update_memory_values": 2,
                    "update_param_values": 1,
                    "update_values": 5
                },
                "data": {
                    "data": 1
                },
                "flags": {
                    "flags": 1
                },
                "int": {
                    "integer": 1
                },
                "param_1": {
                    "array": 3,
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "context": 1,
                    "data": 2,
                    "data_pointer": 1,
                    "device": 1,
                    "flag_pointer": 2,
                    "flag_ptr": 1,
                    "flags": 5,
                    "input_array": 4,
                    "input_ptr": 2,
                    "memory_address": 2,
                    "memory_pointer": 2,
                    "param_array": 2,
                    "permissions": 1
                },
                "ptr1": {
                    "flag_value1": 1
                },
                "ptr2": {
                    "flag_value2": 1
                },
                "uint": {
                    "unsigned_int": 1,
                    "unsigned_integer": 1
                },
                "undefined": {
                    "byte": 1,
                    "undefined_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ffc"
            ],
            "code": "\nvoid clear_flags_08002940(integer *flags)\n\n{\n  *(unsigned_integer *)(*flags + 0xc) = *(unsigned_integer *)(*flags + 0xc) & 0xfffffedf;\n  *(unsigned_integer *)(*flags + 0x14) = *(unsigned_integer *)(*flags + 0x14) & 0xfffffffe;\n  *(byte *)((integer)flags + 0x3a) = 0x20;\n  return;\n}\n\n",
            "current_name": "clear_flags_08002940",
            "entrypoint": "0x08002940",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002940": "clear_flags_08002940",
                "int": "integer",
                "param_1": "flags",
                "uint": "unsigned_integer",
                "undefined": "byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800295c": {
            "additional_data": {
                "0x1000": {
                    "check_value": 1,
                    "constant_value": 2
                },
                "0x1ff": {
                    "bit_mask": 1,
                    "bitmask": 1,
                    "mask": 1
                },
                "0x26": {
                    "counter_offset": 2,
                    "iterations_offset": 1
                },
                "0x39": {
                    "char_check_offset": 1,
                    "character_offset": 1,
                    "check_char_offset": 1
                },
                "0x40": {
                    "bitmask_3": 1,
                    "flag_value": 1
                },
                "0xc": {
                    "bitwise_flag": 1,
                    "flag_offset": 1,
                    "offset_3": 1
                },
                "0xffffff7f": {
                    "bitmask_2": 1,
                    "flag_mask": 1
                },
                "2": {
                    "error_code": 1,
                    "invalid_character_return_code": 1,
                    "invalid_return_code": 1
                },
                "4": {
                    "condition": 1,
                    "index": 1,
                    "offset_1": 1
                },
                "8": {
                    "data_pointer": 1,
                    "offset_2": 1
                },
                "FUN_0800295c": {
                    "check_and_modify_value": 1,
                    "check_character": 1,
                    "decode_and_update_values": 1,
                    "decode_binary_data": 1,
                    "extract_data": 1,
                    "parse_data": 5,
                    "parse_param": 1,
                    "process_data": 15,
                    "process_input": 3,
                    "process_parameter": 1
                },
                "param_1": {
                    "data": 11,
                    "data_array": 10,
                    "data_buffer": 1,
                    "input": 1,
                    "input_array": 3,
                    "param_list": 1,
                    "parameter": 1,
                    "parameter_array": 1,
                    "parameters": 1,
                    "values": 1
                },
                "pbVar2": {
                    "byte_pointer": 10,
                    "byte_ptr": 17,
                    "current_byte": 2,
                    "data_pointer": 1,
                    "ptr": 1
                },
                "sVar1": {
                    "count": 9,
                    "counter": 7,
                    "decremented_value": 2,
                    "remaining": 1,
                    "remaining_count": 4,
                    "remaining_counter": 1,
                    "remaining_iterations": 7
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ffc"
            ],
            "code": "\nundefined4 process_data_0800295c(int *data)\n\n{\n  short count;\n  byte *byte_ptr;\n  \n  if (*(char *)((int)data + 0x39) != '!') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    *(uint *)(*data + 4) = *(ushort *)data[8] & 0x1ff;\n    if (data[4] == 0) {\n      data[8] = data[8] + 2;\n    }\n    else {\n      data[8] = data[8] + 1;\n    }\n  }\n  else {\n    byte_ptr = (byte *)data[8];\n    data[8] = (int)(byte_ptr + 1);\n    *(uint *)(*data + 4) = (uint)*byte_ptr;\n  }\n  count = *(short *)((int)data + 0x26) + -1;\n  *(short *)((int)data + 0x26) = count;\n  if (count == 0) {\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffff7f;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_0800295c",
            "entrypoint": "0x0800295c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800295c": "process_data_0800295c",
                "param_1": "data",
                "pbVar2": "byte_ptr",
                "sVar1": "count"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080029c8": {
            "additional_data": {
                "FUN_080025ec": {
                    "calculate_result": 1,
                    "calculate_value": 1,
                    "calculate_value1": 2
                },
                "FUN_0800260c": {
                    "calculate_alternate_value": 1,
                    "calculate_other_result": 1,
                    "calculate_value2": 2
                },
                "FUN_080029c8": {
                    "calculate_and_assign_value": 1,
                    "calculate_and_update_values": 1,
                    "calculate_checksum": 1,
                    "calculate_new_value": 1,
                    "calculate_new_values": 1,
                    "calculate_parameters": 1,
                    "calculate_result": 1,
                    "calculate_value": 1,
                    "compute_checksum": 1,
                    "update_config": 1,
                    "update_config_values": 1,
                    "update_configuration": 4,
                    "update_param_values": 1,
                    "update_parameter_values": 1,
                    "update_parameters": 2,
                    "update_params": 1,
                    "update_params_and_calculate_value": 1,
                    "update_settings": 2,
                    "update_values": 2
                },
                "iVar1": {
                    "result1": 19,
                    "result_1": 1,
                    "value1": 10,
                    "var1": 1
                },
                "iVar10": {
                    "address": 3,
                    "base_address": 1,
                    "config_ptr": 2,
                    "param_value1": 1,
                    "ptr": 2,
                    "result10": 14,
                    "result_10": 1,
                    "value10": 6,
                    "var10": 1
                },
                "iVar2": {
                    "result2": 19,
                    "result_2": 1,
                    "value2": 10,
                    "var2": 1
                },
                "iVar3": {
                    "result3": 19,
                    "result_3": 1,
                    "value3": 10,
                    "var3": 1
                },
                "iVar4": {
                    "result4": 19,
                    "result_4": 1,
                    "value4": 10,
                    "var4": 1
                },
                "iVar5": {
                    "result5": 19,
                    "result_5": 1,
                    "value5": 10,
                    "var5": 1
                },
                "iVar6": {
                    "result6": 19,
                    "result_6": 1,
                    "value6": 10,
                    "var6": 1
                },
                "iVar7": {
                    "result7": 19,
                    "result_7": 1,
                    "value7": 10,
                    "var7": 1
                },
                "iVar8": {
                    "result8": 19,
                    "result_8": 1,
                    "value8": 10,
                    "var8": 1
                },
                "iVar9": {
                    "result9": 19,
                    "result_9": 1,
                    "value9": 10,
                    "var9": 1
                },
                "param_1": {
                    "config": 3,
                    "config_data": 2,
                    "config_values": 1,
                    "data": 1,
                    "input_array": 7,
                    "input_data": 2,
                    "input_params": 2,
                    "param_arr": 1,
                    "param_array": 1,
                    "parameters": 6,
                    "params": 2,
                    "settings": 2,
                    "values": 1
                }
            },
            "called": [
                "FUN_080025ec",
                "FUN_0800260c"
            ],
            "calling": [
                "FUN_08002d72"
            ],
            "code": "\nvoid update_configuration_080029c8(int *input_array)\n\n{\n  int result1;\n  int result2;\n  int result3;\n  int result4;\n  int result5;\n  int result6;\n  int result7;\n  int result8;\n  int result9;\n  int result10;\n  \n  *(uint *)(*input_array + 0x10) = *(uint *)(*input_array + 0x10) & 0xffffcfff | input_array[3];\n  *(uint *)(*input_array + 0xc) =\n       *(uint *)(*input_array + 0xc) & 0xffff69f3 | input_array[2] | input_array[4] | input_array[5] | input_array[7];\n  *(uint *)(*input_array + 0x14) = *(uint *)(*input_array + 0x14) & 0xfffffcff | input_array[6];\n  if (input_array[7] == 0x8000) {\n    result10 = *input_array;\n    if ((result10 != 0x40011000) && (result10 != 0x40011400)) {\n      result1 = FUN_080025ec();\n      result6 = input_array[1];\n      result2 = FUN_080025ec();\n      result7 = input_array[1];\n      result3 = FUN_080025ec();\n      result8 = input_array[1];\n      result4 = FUN_080025ec();\n      result9 = input_array[1];\n      result5 = FUN_080025ec();\n      *(uint *)(result10 + 8) =\n           ((uint)((int)((ulonglong)\n                         (((uint)(result4 * 0x19) / (uint)(result9 << 1) +\n                          (int)(((ulonglong)(uint)(result5 * 0x19) /\n                                (ulonglong)(uint)(input_array[1] << 1)) / 100) * -100) * 8 + 0x32) *\n                         0x51eb851f >> 0x20) << 0x18) >> 0x1d) +\n           ((((uint)(result2 * 0x19) / (uint)(result7 << 1) +\n             (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 1)) / 100) * -100)\n             * 8 + 0x32) / 100 & 0xf8) * 2 +\n           (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 1)) / 100) * 0x10;\n      return;\n    }\n    result1 = FUN_0800260c();\n    result6 = input_array[1];\n    result2 = FUN_0800260c();\n    result7 = input_array[1];\n    result3 = FUN_0800260c();\n    result8 = input_array[1];\n    result4 = FUN_0800260c();\n    result9 = input_array[1];\n    result5 = FUN_0800260c();\n    *(uint *)(result10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(result4 * 0x19) / (uint)(result9 << 1) +\n                        (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(input_array[1] << 1))\n                             / 100) * -100) * 8 + 0x32) * 0x51eb851f >> 0x20) << 0x18) >> 0x1d) +\n         ((((uint)(result2 * 0x19) / (uint)(result7 << 1) +\n           (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 1)) / 100) * -100) *\n           8 + 0x32) / 100 & 0xf8) * 2 +\n         (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 1)) / 100) * 0x10;\n    return;\n  }\n  result10 = *input_array;\n  if ((result10 != 0x40011000) && (result10 != 0x40011400)) {\n    result1 = FUN_080025ec();\n    result6 = input_array[1];\n    result2 = FUN_080025ec();\n    result7 = input_array[1];\n    result3 = FUN_080025ec();\n    result8 = input_array[1];\n    result4 = FUN_080025ec();\n    result9 = input_array[1];\n    result5 = FUN_080025ec();\n    *(uint *)(result10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(result4 * 0x19) / (uint)(result9 << 2) +\n                        (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(input_array[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(result2 * 0x19) / (uint)(result7 << 2) +\n           (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 2)) / 100) * 0x10;\n    return;\n  }\n  result1 = FUN_0800260c();\n  result6 = input_array[1];\n  result2 = FUN_0800260c();\n  result7 = input_array[1];\n  result3 = FUN_0800260c();\n  result8 = input_array[1];\n  result4 = FUN_0800260c();\n  result9 = input_array[1];\n  result5 = FUN_0800260c();\n  *(uint *)(result10 + 8) =\n       ((uint)((int)((ulonglong)\n                     (((uint)(result4 * 0x19) / (uint)(result9 << 2) +\n                      (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(input_array[1] << 2)) /\n                           100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n       ((((uint)(result2 * 0x19) / (uint)(result7 << 2) +\n         (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 2)) / 100) * -100) *\n         0x10 + 0x32) / 100 & 0xf0) +\n       (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 2)) / 100) * 0x10;\n  return;\n}\n\n",
            "current_name": "update_configuration_080029c8",
            "entrypoint": "0x080029c8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080029c8": "update_configuration_080029c8",
                "iVar1": "result1",
                "iVar10": "result10",
                "iVar2": "result2",
                "iVar3": "result3",
                "iVar4": "result4",
                "iVar5": "result5",
                "iVar6": "result6",
                "iVar7": "result7",
                "iVar8": "result8",
                "iVar9": "result9",
                "param_1": "input_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002d0c": {
            "additional_data": {
                "FUN_08000e30": {
                    "get_difference": 1,
                    "get_something": 1
                },
                "FUN_08002d0c": {
                    "check_and_modify_parameters": 1,
                    "check_and_update_data": 1,
                    "check_and_update_parameters": 1,
                    "check_condition": 3,
                    "check_conditions": 3,
                    "check_conditions_and_modify": 2,
                    "check_conditions_and_update": 1,
                    "check_parameters": 2,
                    "check_parameters_and_update": 1,
                    "check_params": 1,
                    "check_permissions": 1,
                    "check_validity": 1,
                    "process_data": 3,
                    "process_param": 1,
                    "validate_and_update_data": 1,
                    "validate_conditions": 1,
                    "validate_parameters": 3,
                    "validate_params": 1,
                    "verify_params": 1
                },
                "F_08000e30": {
                    "get_difference": 1
                },
                "iVar1": {
                    "comparison_result": 2,
                    "computed_value": 1,
                    "difference_value": 1,
                    "permission_difference": 1,
                    "result": 17,
                    "result_difference": 1
                },
                "param_1": {
                    "data": 3,
                    "data_array": 1,
                    "data_ptr": 1,
                    "input": 1,
                    "input_array": 4,
                    "input_array_ptr": 1,
                    "input_ptr": 1,
                    "param_array": 5,
                    "param_list_ptr": 1,
                    "param_pointer": 1,
                    "parameter_values": 1,
                    "permission": 1,
                    "pointer": 2,
                    "pointer_array": 1,
                    "pointer_to_data": 1,
                    "pointer_to_pointer": 1,
                    "pointer_to_uint": 1,
                    "pointer_to_values": 1,
                    "ptr_array": 1,
                    "ptr_data": 1
                },
                "param_2": {
                    "bit_mask": 1,
                    "bitmask": 1,
                    "check_value": 1,
                    "condition_flags": 1,
                    "data_value": 1,
                    "flag": 9,
                    "flag_1": 2,
                    "input_flag": 1,
                    "mask": 6,
                    "mask_value": 1,
                    "num_1": 1,
                    "required_permissions": 1,
                    "value": 1,
                    "value1": 1,
                    "value_1": 1,
                    "value_to_check": 1
                },
                "param_3": {
                    "bool_1": 1,
                    "check_flag": 1,
                    "condition": 6,
                    "condition_value": 1,
                    "expected_flag_value": 1,
                    "expected_result": 6,
                    "flag": 3,
                    "flag_2": 2,
                    "is_allowed": 1,
                    "is_condition_met": 1,
                    "is_equal": 3,
                    "is_flag_set": 1,
                    "is_valid": 2,
                    "value_2": 1
                },
                "param_4": {
                    "base_value": 4,
                    "comparison_val": 1,
                    "comparison_value": 6,
                    "current_permission_count": 1,
                    "num_2": 1,
                    "param": 1,
                    "threshold": 5,
                    "value": 6,
                    "value2": 1,
                    "value_1": 3,
                    "value_3": 1
                },
                "param_5": {
                    "limit": 8,
                    "max_difference": 8,
                    "max_permission_difference": 1,
                    "max_value": 1,
                    "num_3": 1,
                    "range": 1,
                    "threshold": 6,
                    "value_2": 3,
                    "value_4": 1
                }
            },
            "called": [
                "FUN_08000e30"
            ],
            "calling": [
                "FUN_08002dd0"
            ],
            "code": "\nundefined4 check_conditions_and_modify_08002d0c(uint **param_array,uint flag,uint expected_result,int comparison_value,uint max_difference)\n\n{\n  int result;\n  \n  do {\n    if (((flag & ~**param_array) == 0) != expected_result) {\n      return 0;\n    }\n  } while ((max_difference == 0xffffffff) ||\n          ((max_difference != 0 && (result = FUN_08000e30(), (uint)(result - comparison_value) <= max_difference))));\n  (*param_array)[3] = (*param_array)[3] & 0xfffffe5f;\n  (*param_array)[5] = (*param_array)[5] & 0xfffffffe;\n  *(undefined *)((int)param_array + 0x39) = 0x20;\n  *(undefined *)((int)param_array + 0x3a) = 0x20;\n  *(undefined *)(param_array + 0xe) = 0;\n  return 3;\n}\n\n",
            "current_name": "check_conditions_and_modify_08002d0c",
            "entrypoint": "0x08002d0c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002d0c": "check_conditions_and_modify_08002d0c",
                "iVar1": "result",
                "param_1": "param_array",
                "param_2": "flag",
                "param_3": "expected_result",
                "param_4": "comparison_value",
                "param_5": "max_difference"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002d70": {
            "called": [],
            "calling": [
                "FUN_08002d72"
            ],
            "code": "\nvoid FUNC_08002d70(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002d70",
            "entrypoint": "0x08002d70",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002d70": "FUNC_08002d70"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002d72": {
            "additional_data": {
                "0x2000": {
                    "control_register_mask2": 1
                },
                "0xffffb7ff": {
                    "memory_register1_mask1": 1
                },
                "0xffffdfff": {
                    "control_register_mask1": 1
                },
                "0xffffffd5": {
                    "memory_register2_mask1": 1
                },
                "FUNC_08002d70": {
                    "clear_flags": 2,
                    "execute_function": 1,
                    "handle_error": 1,
                    "initialize_data": 4,
                    "initialize_helper": 1,
                    "initialize_param": 1,
                    "initialize_variable": 1,
                    "perform_initialization": 1,
                    "process_data": 1,
                    "reset_data": 2,
                    "reset_flag": 1,
                    "reset_function": 12,
                    "reset_value": 1,
                    "reset_values": 1
                },
                "FUN_080029c8": {
                    "handle_data": 1,
                    "manipulate_data": 1,
                    "modify_data": 1,
                    "modify_function": 1,
                    "nested_function": 1,
                    "operate_on_param": 1,
                    "perform_operation": 1,
                    "process_data": 4,
                    "process_function": 2,
                    "process_input": 1,
                    "process_input_array": 1,
                    "process_options": 1,
                    "process_param": 4,
                    "process_param2": 1,
                    "process_parameter": 1,
                    "process_sub_function": 1,
                    "update_data": 2,
                    "update_param": 2,
                    "update_parameter": 1
                },
                "FUN_08002d72": {
                    "check_and_modify_data": 1,
                    "check_and_modify_param": 1,
                    "check_and_process_data": 1,
                    "check_and_update_data": 1,
                    "initialize_data": 1,
                    "initialize_function": 1,
                    "initialize_options": 1,
                    "initialize_param": 4,
                    "initialize_parameter": 2,
                    "process_data": 5,
                    "process_param": 5,
                    "process_params": 1,
                    "update_data_struct": 1,
                    "validate_and_initialize": 1,
                    "validate_param": 1,
                    "validate_parameter": 1,
                    "verify_param_and_update": 1
                },
                "char": {
                    "char": 1,
                    "character": 1
                },
                "data": {
                    "data": 1
                },
                "handleData": {
                    "handle_data": 1
                },
                "initializeData": {
                    "initialize_data": 1
                },
                "int": {
                    "int": 1,
                    "integer": 1
                },
                "param_1": {
                    "data": 5,
                    "data_array": 2,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "data_struct": 1,
                    "input_array": 3,
                    "input_param": 1,
                    "options": 1,
                    "param": 11,
                    "parameter": 2,
                    "parameter_array": 1,
                    "params": 1
                },
                "uint": {
                    "unsigned_int": 1
                },
                "undefined": {
                    "int": 1,
                    "undefined": 1
                },
                "undefined4": {
                    "int": 1,
                    "unsigned_int": 1
                }
            },
            "called": [
                "FUN_08002d70",
                "FUN_080029c8"
            ],
            "calling": [
                "FUN_08003978"
            ],
            "code": "\nint check_and_process_data_08002d72(int *param)\n\n{\n  if (param != (int *)0x0) {\n    if (*(char *)((int)param + 0x39) == '\\0') {\n      *(undefined *)(param + 0xe) = 0;\n      FUNC_08002d70();\n    }\n    *(undefined *)((int)param + 0x39) = 0x24;\n    *(unsigned_int *)(*param + 0xc) = *(unsigned_int *)(*param + 0xc) & 0xffffdfff;\n    FUN_080029c8(param);\n    *(unsigned_int *)(*param + 0x10) = *(unsigned_int *)(*param + 0x10) & 0xffffb7ff;\n    *(unsigned_int *)(*param + 0x14) = *(unsigned_int *)(*param + 0x14) & 0xffffffd5;\n    *(unsigned_int *)(*param + 0xc) = *(unsigned_int *)(*param + 0xc) | 0x2000;\n    param[0xf] = 0;\n    *(undefined *)((int)param + 0x39) = 0x20;\n    *(undefined *)((int)param + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "check_and_process_data_08002d72",
            "entrypoint": "0x08002d72",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002d72": "check_and_process_data_08002d72",
                "param_1": "param",
                "uint": "unsigned_int",
                "undefined4": "int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002dd0": {
            "additional_data": {
                "FUM_08002d0c": {
                    "sub_function_a": 1
                },
                "FUN_08000e30": {
                    "get_configuration": 1,
                    "get_error_code": 1,
                    "get_return_value": 2,
                    "get_something": 1,
                    "get_sub_function_result": 1,
                    "initialize": 4,
                    "initialize_function": 1,
                    "initialize_value": 1,
                    "sub_function2": 2,
                    "sub_function_b": 1
                },
                "FUN_08002d0c": {
                    "process_block": 1,
                    "process_data": 3,
                    "process_data2": 1,
                    "process_data_block": 1,
                    "process_data_sub_function": 1,
                    "process_sub_function": 4,
                    "process_subfunction": 1,
                    "sub_function1": 2
                },
                "FUN_08002dd0": {
                    "analyze_data": 1,
                    "convert_parameters": 1,
                    "decode_data": 1,
                    "parse_data": 1,
                    "parse_input": 1,
                    "process_data": 22,
                    "process_function": 1,
                    "process_input": 2,
                    "process_input_data": 1
                },
                "FUV_08000e30": {
                    "initialize_data": 1
                },
                "iVar1": {
                    "loop_counter": 1,
                    "result": 16,
                    "return_code": 1,
                    "return_value": 11,
                    "temp_var1": 1
                },
                "param_1": {
                    "array": 1,
                    "data": 8,
                    "data_arr": 1,
                    "data_array": 1,
                    "data_buffer": 4,
                    "data_pointer": 4,
                    "data_ptr": 8,
                    "input_array": 1,
                    "input_data": 1,
                    "input_pointer": 1,
                    "param_array": 1
                },
                "param_2": {
                    "block_size": 1,
                    "buffer": 1,
                    "buffer_ptr": 1,
                    "buffer_size": 1,
                    "byte_buffer": 1,
                    "bytes": 1,
                    "data": 2,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_pointer2": 1,
                    "data_ptr": 1,
                    "flags": 1,
                    "input": 5,
                    "input_buffer": 1,
                    "input_data": 1,
                    "input_ptr": 1,
                    "param2": 1,
                    "short_array": 1,
                    "short_ptr": 1,
                    "source": 1,
                    "ushort_array": 2,
                    "ushort_pointer": 2,
                    "ushort_ptr": 2
                },
                "param_3": {
                    "array_length": 3,
                    "buffer_size": 2,
                    "byte_count": 1,
                    "data_length": 1,
                    "data_size": 5,
                    "input_len": 1,
                    "input_length": 4,
                    "input_size": 2,
                    "length": 7,
                    "offset": 1,
                    "param1": 1,
                    "param3": 1,
                    "source_length": 1,
                    "ushort_count": 1
                },
                "param_4": {
                    "param": 7,
                    "param2": 1,
                    "param4": 16,
                    "param_4": 3,
                    "param_four": 1,
                    "return_value": 1,
                    "value": 2
                },
                "param_5": {
                    "additional_data": 1,
                    "param3": 1,
                    "param5": 1
                },
                "uVar2": {
                    "error_code": 1,
                    "result": 11,
                    "return_code": 1,
                    "return_value": 12,
                    "status": 4,
                    "updated_value": 1
                }
            },
            "called": [
                "FUN_08002d0c",
                "FUN_08000e30"
            ],
            "calling": [
                "FUN_08003d18"
            ],
            "code": "\nundefined4 process_input_data_08002dd0(int *data_ptr,ushort *input,int length,undefined4 param4)\n\n{\n  int result;\n  undefined4 return_value;\n  \n  if (*(char *)((int)data_ptr + 0x39) == ' ') {\n    if (input == (ushort *)0x0) {\n      return_value = 1;\n    }\n    else if (length == 0) {\n      return_value = 1;\n    }\n    else if (*(char *)(data_ptr + 0xe) == '\\x01') {\n      return_value = 2;\n    }\n    else {\n      *(undefined *)(data_ptr + 0xe) = 1;\n      data_ptr[0xf] = 0;\n      *(undefined *)((int)data_ptr + 0x39) = 0x21;\n      return_value = FUN_08000e30();\n      *(short *)(data_ptr + 9) = (short)length;\n      *(short *)((int)data_ptr + 0x26) = (short)length;\n      while (*(short *)((int)data_ptr + 0x26) != 0) {\n        *(short *)((int)data_ptr + 0x26) = *(short *)((int)data_ptr + 0x26) + -1;\n        if (data_ptr[2] == 0x1000) {\n          result = FUN_08002d0c(data_ptr,0x80,0,return_value,param4);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_ptr + 4) = *input & 0x1ff;\n          if (data_ptr[4] == 0) {\n            input = input + 1;\n          }\n          else {\n            input = (ushort *)((int)input + 1);\n          }\n        }\n        else {\n          result = FUN_08002d0c(data_ptr,0x80,0,return_value,param4);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_ptr + 4) = (uint)*(byte *)input;\n          input = (ushort *)((int)input + 1);\n        }\n      }\n      result = FUN_08002d0c(data_ptr,0x40,0,return_value,param4);\n      if (result == 0) {\n        *(undefined *)((int)data_ptr + 0x39) = 0x20;\n        *(undefined *)(data_ptr + 0xe) = 0;\n        return_value = 0;\n      }\n      else {\n        return_value = 3;\n      }\n    }\n  }\n  else {\n    return_value = 2;\n  }\n  return return_value;\n}\n\n",
            "current_name": "process_input_data_08002dd0",
            "entrypoint": "0x08002dd0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002dd0": "process_input_data_08002dd0",
                "iVar1": "result",
                "param_1": "data_ptr",
                "param_2": "input",
                "param_3": "length",
                "param_4": "param4",
                "uVar2": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002eb2": {
            "additional_data": {
                "FUN_08002eb2": {
                    "check_and_update_data": 1,
                    "check_and_update_params": 1,
                    "check_input_validity": 1,
                    "initialize_data": 2,
                    "process_data": 2,
                    "process_input": 3,
                    "update_data": 4,
                    "update_parameters": 2,
                    "update_values": 1,
                    "validate_data": 1,
                    "validate_input": 7,
                    "validate_input_and_update": 1,
                    "validate_inputs": 3,
                    "validate_parameters": 2
                },
                "array": {
                    "mem_array": 1
                },
                "input_buffer": {
                    "input_buffer": 1
                },
                "param_1": {
                    "array": 4,
                    "data": 9,
                    "data_array": 1,
                    "input_array": 11,
                    "input_buffer": 2,
                    "input_data": 1,
                    "param_pointer": 1,
                    "parameters": 2
                },
                "param_2": {
                    "length": 2,
                    "value1": 18,
                    "value_1": 11
                },
                "param_3": {
                    "value": 2,
                    "value2": 18,
                    "value_2": 11
                },
                "value1": {
                    "length": 1,
                    "value1": 1
                },
                "value2": {
                    "short_length": 1,
                    "value2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003f48",
                "FUN_08003eac"
            ],
            "code": "\nundefined4 validate_input_and_update_08002eb2(int *input_array,int value1,int value2)\n\n{\n  if (*(char *)((int)input_array + 0x39) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    input_array[8] = value1;\n    *(short *)(input_array + 9) = (short)value2;\n    *(short *)((int)input_array + 0x26) = (short)value2;\n    input_array[0xf] = 0;\n    *(undefined *)((int)input_array + 0x39) = 0x21;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "current_name": "validate_input_and_update_08002eb2",
            "entrypoint": "0x08002eb2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002eb2": "validate_input_and_update_08002eb2",
                "param_1": "input_array",
                "param_2": "value1",
                "param_3": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002efa": {
            "additional_data": {
                "FUN_08002efa": {
                    "check_and_initialize_data": 1,
                    "initialize_data": 2,
                    "initialize_parameters": 1,
                    "process_data": 5,
                    "process_input": 1,
                    "update_configuration": 1,
                    "update_data": 8,
                    "update_parameter": 1,
                    "update_parameter_value": 1,
                    "update_params": 2,
                    "update_values": 1,
                    "validate_and_set_values": 1,
                    "validate_and_update_data": 1,
                    "validate_and_update_parameters": 1,
                    "validate_input": 3,
                    "validate_parameters": 1
                },
                "char_1": {
                    "space_character": 1
                },
                "char_2": {
                    "check_character": 1
                },
                "data": {
                    "data_array": 1
                },
                "data_array": {
                    "data": 1
                },
                "data_ptr": {
                    "data": 1
                },
                "e": {
                    "temp1": 1
                },
                "f": {
                    "temp2": 1
                },
                "int_1": {
                    "counter": 1
                },
                "int_2": {
                    "control_value": 1
                },
                "param_1": {
                    "array": 1,
                    "config": 1,
                    "data": 11,
                    "data_array": 2,
                    "data_pointer": 2,
                    "data_ptr": 4,
                    "input_array": 4,
                    "parameter_array": 1,
                    "parameters": 2,
                    "params": 2,
                    "values": 1
                },
                "param_2": {
                    "length": 1,
                    "new_param1": 1,
                    "size": 2,
                    "value1": 23,
                    "value_1": 4
                },
                "param_3": {
                    "new_param2": 1,
                    "value": 3,
                    "value2": 23,
                    "value_2": 4
                },
                "short_1": {
                    "converted_value": 1
                },
                "size": {
                    "data_size": 1
                },
                "uint_1": {
                    "bitwise_operation_1": 1
                },
                "uint_2": {
                    "bitwise_operation_2": 1
                },
                "value": {
                    "data_value": 1
                },
                "value_1": {
                    "size": 1,
                    "value_to_check": 1
                },
                "value_2": {
                    "length": 1,
                    "value_to_assign": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003e54",
                "FUN_08003e18"
            ],
            "code": "\nundefined4 validate_and_update_data_08002efa(int *data,int value1,int value2)\n\n{\n  if (*(char *)((int)data + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(data + 0xe) != '\\x01') {\n    data[10] = value1;\n    *(short *)(data + 0xb) = (short)value2;\n    *(short *)((int)data + 0x2e) = (short)value2;\n    data[0xf] = 0;\n    *(undefined *)((int)data + 0x3a) = 0x22;\n    *(undefined *)(data + 0xe) = 0;\n    *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) | 1;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x120;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "current_name": "validate_and_update_data_08002efa",
            "entrypoint": "0x08002efa",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002efa": "validate_and_update_data_08002efa",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f4c": {
            "additional_data": {
                "0x39": {
                    "constant": 1,
                    "constant_value": 1,
                    "value": 1
                },
                "0xc": {
                    "data_offset": 1,
                    "offset": 2
                },
                "0xffffffbf": {
                    "bit_mask": 1,
                    "mask": 1
                },
                "FUN_08002f4c": {
                    "clear_bit_and_set_character": 1,
                    "clear_bit_and_set_flag": 2,
                    "clear_bits_and_set_character": 1,
                    "clear_flag_and_call_function": 1,
                    "clear_flag_and_set_space": 3,
                    "initialize_pointer": 1,
                    "modify_param_value": 1,
                    "set_flag_and_call_function": 6,
                    "set_flags_and_call_function": 1,
                    "update_bit_value": 1,
                    "update_data": 1,
                    "update_data_and_call_function": 1,
                    "update_flag_and_call_function": 4,
                    "update_flag_and_value": 1,
                    "update_flags": 1,
                    "update_flags_and_call_function": 2,
                    "update_permission_flags": 1,
                    "update_permissions": 1,
                    "update_settings": 1
                },
                "FUN_08003f48": {
                    "call_function": 1,
                    "call_sub_function": 1,
                    "do_something": 2,
                    "execute_action": 1,
                    "execute_function": 3,
                    "execute_sub_function": 8,
                    "execute_subfunction": 1,
                    "perform_action": 2,
                    "perform_additional_task": 4,
                    "perform_cleanup": 1,
                    "perform_task": 1
                },
                "PTR_08003f48": {
                    "call_sub_function": 1
                },
                "param_1": {
                    "address": 1,
                    "arg1": 1,
                    "array_ptr": 1,
                    "data": 2,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "flag": 1,
                    "flag_address": 1,
                    "flag_ptr": 2,
                    "flags": 1,
                    "input": 5,
                    "input_array": 1,
                    "input_params": 1,
                    "input_pointer": 3,
                    "input_ptr": 1,
                    "param": 1,
                    "param_list": 1,
                    "parameter": 1,
                    "permission_pointer": 1,
                    "pointer": 1,
                    "settings": 1
                }
            },
            "called": [
                "FUN_08003f48"
            ],
            "calling": [
                "FUN_08002ffc"
            ],
            "code": "\nundefined4 set_flag_and_call_function_08002f4c(int *input)\n\n{\n  *(uint *)(*input + 0xc) = *(uint *)(*input + 0xc) & 0xffffffbf;\n  *(undefined *)((int)input + 0x39) = 0x20;\n  FUN_08003f48();\n  return 0;\n}\n\n",
            "current_name": "set_flag_and_call_function_08002f4c",
            "entrypoint": "0x08002f4c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f4c": "set_flag_and_call_function_08002f4c",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f66": {
            "additional_data": {
                "FUN_08002f66": {
                    "decode_and_update": 1,
                    "decode_binary": 1,
                    "decode_string": 1,
                    "parse_input_string": 2,
                    "parse_string": 6,
                    "parse_string_parameter": 1,
                    "process_binary_data": 2,
                    "process_data": 8,
                    "process_input": 2,
                    "process_input_data": 2,
                    "process_param": 2,
                    "process_string": 3
                },
                "FUN_08003f24": {
                    "clean_up": 1,
                    "perform_action": 1,
                    "perform_additional_actions": 1,
                    "perform_additional_operations": 1
                },
                "param_1": {
                    "binary_data": 2,
                    "data": 5,
                    "data_array": 1,
                    "data_ptr": 1,
                    "input": 4,
                    "input_array": 6,
                    "input_data": 9,
                    "input_ptr": 1,
                    "param": 1,
                    "param_array": 1
                },
                "pbVar1": {
                    "byte_pointer": 10,
                    "byte_ptr": 16,
                    "output_byte": 3,
                    "output_byte_ptr": 1,
                    "string_ptr": 1
                },
                "puVar3": {
                    "byte_pointer": 1,
                    "char_ptr": 1,
                    "output": 1,
                    "output_byte_ptr": 1,
                    "output_ptr": 2,
                    "ptr": 1,
                    "undefined_pointer": 9,
                    "undefined_ptr": 15
                },
                "sVar2": {
                    "count": 5,
                    "count_down": 1,
                    "counter": 13,
                    "remaining_byte_count": 1,
                    "remaining_count": 1,
                    "remaining_iterations": 2,
                    "remaining_strings": 1,
                    "short_val": 1,
                    "short_value": 4,
                    "short_var": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08003f24"
            ],
            "calling": [
                "FUN_08002ffc"
            ],
            "code": "\nundefined4 process_binary_data_08002f66(int *input_data)\n\n{\n  byte *byte_ptr;\n  short counter;\n  undefined *undefined_ptr;\n  \n  if (*(char *)((int)input_data + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (input_data[2] == 0x1000) {\n    if (input_data[4] == 0) {\n      *(ushort *)input_data[10] = (ushort)((uint)(*(int *)(*input_data + 4) << 0x17) >> 0x17);\n      input_data[10] = input_data[10] + 2;\n    }\n    else {\n      *(ushort *)input_data[10] = (ushort)*(undefined4 *)(*input_data + 4) & 0xff;\n      input_data[10] = input_data[10] + 1;\n    }\n  }\n  else if (input_data[4] == 0) {\n    undefined_ptr = (undefined *)input_data[10];\n    input_data[10] = (int)(undefined_ptr + 1);\n    *undefined_ptr = (char)*(undefined4 *)(*input_data + 4);\n  }\n  else {\n    byte_ptr = (byte *)input_data[10];\n    input_data[10] = (int)(byte_ptr + 1);\n    *byte_ptr = (byte)*(undefined4 *)(*input_data + 4) & 0x7f;\n  }\n  counter = *(short *)((int)input_data + 0x2e) + -1;\n  *(short *)((int)input_data + 0x2e) = counter;\n  if (counter != 0) {\n    return 0;\n  }\n  *(uint *)(*input_data + 0xc) = *(uint *)(*input_data + 0xc) & 0xfffffedf;\n  *(uint *)(*input_data + 0x14) = *(uint *)(*input_data + 0x14) & 0xfffffffe;\n  *(undefined *)((int)input_data + 0x3a) = 0x20;\n  FUN_08003f24();\n  return 0;\n}\n\n",
            "current_name": "process_binary_data_08002f66",
            "entrypoint": "0x08002f66",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f66": "process_binary_data_08002f66",
                "param_1": "input_data",
                "pbVar1": "byte_ptr",
                "puVar3": "undefined_ptr",
                "sVar2": "counter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ffc": {
            "additional_data": {
                "FUNC_08000f8c": {
                    "function_return_value_check": 1,
                    "reverse_check": 1
                },
                "FUNC_08003f94": {
                    "cleanup": 2,
                    "cleanup1": 1,
                    "cleanup_actions": 1,
                    "perform_cleanup": 1
                },
                "FUN_08000f8c": {
                    "execute_action": 1,
                    "func_b": 1,
                    "function_b": 1
                },
                "FUN_08002940": {
                    "cleanup2": 1,
                    "execute_cleanup_actions": 1,
                    "func_d": 1,
                    "function_d": 1,
                    "process_case3": 1
                },
                "FUN_0800295c": {
                    "execute_function2": 1,
                    "execute_other_actions": 1,
                    "func_a": 1,
                    "function_a": 1,
                    "process_case1": 1
                },
                "FUN_08002f4c": {
                    "execute_function3": 1,
                    "execute_more_actions": 1,
                    "func_e": 1,
                    "function_e": 1,
                    "process_case4": 1
                },
                "FUN_08002f66": {
                    "execute_actions": 1,
                    "execute_function1": 1,
                    "func_c": 1,
                    "function_c": 1,
                    "process_case2": 1
                },
                "FUN_08002ffc": {
                    "analyze_data": 1,
                    "check_and_execute": 1,
                    "check_and_execute_actions": 3,
                    "check_and_execute_operations": 2,
                    "check_and_handle_flags": 2,
                    "check_and_process_flags": 3,
                    "check_and_update_flags": 2,
                    "check_and_update_parameters": 1,
                    "check_conditions_and_execute": 1,
                    "check_conditions_and_update_flags": 1,
                    "check_flags_and_call_functions": 1,
                    "check_flags_and_execute": 1,
                    "handle_conditions": 1,
                    "process_data": 6,
                    "process_flags": 3,
                    "process_input": 1,
                    "process_params": 1
                },
                "iVar1": {
                    "index": 1,
                    "result": 19,
                    "ret_val": 1,
                    "return_value": 8,
                    "status": 1,
                    "var1": 1
                },
                "param_1": {
                    "actions_param": 1,
                    "data": 6,
                    "flags": 5,
                    "function_parameter": 1,
                    "function_params": 1,
                    "input": 1,
                    "input_array": 1,
                    "input_params": 3,
                    "param": 1,
                    "parameters": 7,
                    "params": 2
                },
                "puVar3": {
                    "array_pointer": 1,
                    "current_flag_ptr": 1,
                    "data_array": 1,
                    "data_ptr": 1,
                    "flag_pointer": 1,
                    "param_ptr": 1,
                    "pointer": 6,
                    "pointer_to_array": 1,
                    "pointer_to_param": 1,
                    "ptr": 9,
                    "ptr3": 1,
                    "ptr_data": 1,
                    "ptr_flags": 1,
                    "ptr_to_param1": 1,
                    "ptr_value": 2,
                    "temp_ptr": 1,
                    "value1": 1
                },
                "uVar2": {
                    "flag1": 1,
                    "flag2": 1,
                    "flag_value": 2,
                    "flag_value1": 1,
                    "flags": 2,
                    "flags3": 1,
                    "flags_value": 1,
                    "param3": 1,
                    "parameter_value": 1,
                    "ptr_value": 1,
                    "value": 1,
                    "value1": 4,
                    "value2": 7,
                    "value_1": 1,
                    "value_2": 2,
                    "var2": 4
                },
                "uVar4": {
                    "check_value": 2,
                    "condition": 2,
                    "condition_value": 1,
                    "flag": 6,
                    "flag2": 1,
                    "flag4": 1,
                    "flag_value": 1,
                    "flag_value2": 2,
                    "is_flag_set": 1,
                    "temp_flag": 1,
                    "value2": 4,
                    "value4": 1,
                    "value_2": 1,
                    "value_4": 2,
                    "var1": 1,
                    "var4": 4
                },
                "uVar5": {
                    "current_flags": 1,
                    "data_value": 1,
                    "first_flag": 1,
                    "flag1": 1,
                    "flag2": 1,
                    "flag3": 1,
                    "flag_value": 3,
                    "flag_value1": 1,
                    "flag_value3": 1,
                    "flags1": 1,
                    "mask": 1,
                    "value1": 5,
                    "value3": 4,
                    "value5": 1,
                    "value_3": 1,
                    "value_5": 2,
                    "var2": 1,
                    "var5": 4
                }
            },
            "called": [
                "FUN_08003f94",
                "FUN_0800295c",
                "FUN_08000f8c",
                "FUN_08002f66",
                "FUN_08002940",
                "FUN_08002f4c"
            ],
            "calling": [],
            "code": "\nvoid check_conditions_and_execute_08002ffc(uint **parameters)\n\n{\n  int result;\n  uint value2;\n  uint *ptr;\n  uint flag;\n  uint value1;\n  \n  ptr = *parameters;\n  value1 = *ptr;\n  value2 = ptr[3];\n  if ((((value1 & 0xf) == 0) && ((value1 & 0x20) != 0)) && ((value2 & 0x20) != 0)) {\n    FUN_08002f66(parameters);\n    return;\n  }\n  if (((value1 & 0xf) == 0) || ((flag = ptr[5] & 1, flag == 0 && ((value2 & 0x120) == 0)))) {\n    if (((value1 & 0x80) != 0) && ((value2 & 0x80) != 0)) {\n      FUN_0800295c(parameters);\n      return;\n    }\n    if (((value1 & 0x40) != 0) && ((value2 & 0x40) != 0)) {\n      FUN_08002f4c(parameters);\n    }\n  }\n  else {\n    if (((value1 & 1) != 0) && ((value2 & 0x100) != 0)) {\n      parameters[0xf] = (uint *)((uint)parameters[0xf] | 1);\n    }\n    if (((value1 & 4) != 0) && (flag != 0)) {\n      parameters[0xf] = (uint *)((uint)parameters[0xf] | 2);\n    }\n    if (((value1 & 2) != 0) && (flag != 0)) {\n      parameters[0xf] = (uint *)((uint)parameters[0xf] | 4);\n    }\n    if (((value1 & 8) != 0) && (flag != 0)) {\n      parameters[0xf] = (uint *)((uint)parameters[0xf] | 8);\n    }\n    if (parameters[0xf] != (uint *)0x0) {\n      if (((value1 & 0x20) != 0) && ((value2 & 0x20) != 0)) {\n        FUN_08002f66(parameters);\n      }\n      if ((((uint)parameters[0xf] & 8) == 0) && (((*parameters)[5] & 0x40) == 0)) {\n        FUNC_08003f94(parameters);\n        parameters[0xf] = (uint *)0x0;\n        return;\n      }\n      FUN_08002940(parameters);\n      ptr = *parameters;\n      if ((ptr[5] & 0x40) == 0) {\n        FUNC_08003f94(parameters);\n        return;\n      }\n      ptr[5] = ptr[5] & 0xffffffbf;\n      if (parameters[0xd] == (uint *)0x0) {\n        FUNC_08003f94(parameters);\n        return;\n      }\n      parameters[0xd][0x14] = (uint)&LAB_0800311c_1;\n      result = FUN_08000f8c(parameters[0xd]);\n      if (result != 0) {\n        (*(code *)parameters[0xd][0x14])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "check_conditions_and_execute_08002ffc",
            "entrypoint": "0x08002ffc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ffc": "check_conditions_and_execute_08002ffc",
                "iVar1": "result",
                "param_1": "parameters",
                "puVar3": "ptr",
                "uVar2": "value2",
                "uVar4": "flag",
                "uVar5": "value1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800312c": {
            "additional_data": {
                "0x39": {
                    "offset2": 2,
                    "offset_b": 3
                },
                "0x3a": {
                    "offset1": 2,
                    "offset_a": 3
                },
                "DAT_": {
                    "": 1
                },
                "FUN_0800312c": {
                    "combine_bits": 1,
                    "combine_bytes": 30
                },
                "PTR_": {
                    "": 1
                },
                "byte_1": {
                    "first_byte": 1
                },
                "byte_2": {
                    "second_byte": 1
                },
                "byte_PTR_array1": {
                    "byte_array1": 1
                },
                "byte_PTR_array2": {
                    "byte_array2": 1
                },
                "param_1": {
                    "address": 2,
                    "address_offset": 1,
                    "base_address": 1,
                    "input": 19,
                    "input_value": 3,
                    "offset": 4,
                    "start_address": 1
                },
                "param_2": {
                    "mask": 1
                },
                "param_3": {
                    "offset": 1
                },
                "var_1": {
                    "byte1": 1
                },
                "var_2": {
                    "byte2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003dd0",
                "FUN_08003df4"
            ],
            "code": "\nbyte combine_bytes_0800312c(int input)\n\n{\n  return *(byte *)(input + 0x3a) | *(byte *)(input + 0x39);\n}\n\n",
            "current_name": "combine_bytes_0800312c",
            "entrypoint": "0x0800312c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800312c": "combine_bytes_0800312c",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003138": {
            "additional_data": {
                "0x18": {
                    "shift_offset": 1
                },
                "0x1c": {
                    "mask_offset": 1
                },
                "0xf": {
                    "bit_mask": 1
                },
                "4": {
                    "size": 1
                },
                "DAT_": {
                    "unchanged": 1,
                    "unchanged_variable": 1
                },
                "FUN_08003138": {
                    "bitwise_access": 1,
                    "check_bit_value": 4,
                    "extract_bit": 4,
                    "extract_bit_from_param": 1,
                    "extract_bit_from_word": 1,
                    "extract_bit_value": 2,
                    "extracted_bit": 1,
                    "get_bit": 2,
                    "get_bit_at_position": 1,
                    "get_bit_from_array": 1,
                    "get_bit_from_index": 1,
                    "get_bit_value": 8,
                    "read_bit_from_offset": 1,
                    "retrieve_bit_from_memory": 1,
                    "retrieve_bit_value": 2
                },
                "PTR_": {
                    "unchanged": 1,
                    "unchanged_variable": 1
                },
                "param_1": {
                    "bit_position": 1,
                    "byte_value": 1,
                    "data": 2,
                    "data_index": 1,
                    "index": 6,
                    "input_value": 6,
                    "number": 1,
                    "position": 2,
                    "value": 10,
                    "word": 1
                },
                "param_2": {
                    "address": 6,
                    "array": 2,
                    "array_address": 6,
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "base_address": 5,
                    "bit_value": 1,
                    "data": 2,
                    "data_array": 1,
                    "data_ptr": 1,
                    "memory_address": 1,
                    "offset": 3,
                    "pointer": 1
                },
                "param_3": {
                    "bit_position": 1,
                    "mask": 1
                },
                "param_4": {
                    "bit_mask": 1,
                    "shift": 1
                },
                "result": {
                    "bit_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080041bc",
                "FUN_08004110"
            ],
            "code": "\nuint get_bit_value_08003138(uint value,int array_address)\n\n{\n  return *(uint *)(array_address + ((value << 0x18) >> 0x1c) * 4) >> (value & 0xf) & 1;\n}\n\n",
            "current_name": "get_bit_value_08003138",
            "entrypoint": "0x08003138",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003138": "get_bit_value_08003138",
                "param_1": "value",
                "param_2": "array_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800314e": {
            "additional_data": {
                "FUN_0800314e": {
                    "apply_bitwise_operation": 2,
                    "set_bit": 2,
                    "set_bit_in_array": 12,
                    "set_bit_value": 1,
                    "set_flag": 1,
                    "store_bit": 1,
                    "update_bit": 4,
                    "update_bit_array": 1,
                    "update_bit_in_array": 3,
                    "update_bits": 1,
                    "update_bitwise_operation": 1,
                    "update_data": 1,
                    "update_memory": 1
                },
                "param_1": {
                    "bit_index": 5,
                    "bit_position": 11,
                    "data": 1,
                    "element_index": 1,
                    "index": 1,
                    "input": 3,
                    "input_value": 5,
                    "value": 4
                },
                "param_2": {
                    "address": 2,
                    "array": 14,
                    "array_address": 5,
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "bit_array": 1,
                    "data": 3,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "memory_address": 1
                },
                "uVar1": {
                    "array_index": 3,
                    "bit_index": 1,
                    "byte_index": 2,
                    "byte_offset": 2,
                    "byte_position": 1,
                    "index": 7,
                    "shifted_bit": 1,
                    "shifted_bit_position": 2,
                    "shifted_index": 7,
                    "shifted_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004110"
            ],
            "code": "\nvoid set_bit_in_array_0800314e(uint bit_position,int array)\n\n{\n  uint index;\n  \n  index = (bit_position << 0x18) >> 0x1c;\n  *(uint *)(array + index * 4) = *(uint *)(array + index * 4) | 1 << (bit_position & 0xf);\n  return;\n}\n\n",
            "current_name": "set_bit_in_array_0800314e",
            "entrypoint": "0x0800314e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800314e": "set_bit_in_array_0800314e",
                "param_1": "bit_position",
                "param_2": "array",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800316c": {
            "additional_data": {
                "FUN_0800316c": {
                    "apply_bitmask": 1,
                    "bit_manipulation": 1,
                    "set_bit": 2,
                    "set_bit_to_zero": 1,
                    "set_bit_to_zero_at_offset": 1,
                    "set_bit_to_zero_in_array": 1,
                    "update_bit": 7,
                    "update_bit_in_array": 3,
                    "update_bit_value": 4,
                    "update_bits": 1,
                    "update_bitwise_operation": 1,
                    "update_bitwise_value": 1,
                    "update_data": 1,
                    "update_data_at_index": 1,
                    "update_memory": 1,
                    "update_memory_value": 1,
                    "update_value": 1,
                    "update_value_in_array": 1,
                    "write_bit": 1
                },
                "param_1": {
                    "bit_index": 5,
                    "bit_position": 12,
                    "index": 1,
                    "input": 2,
                    "input_value": 2,
                    "value": 9
                },
                "param_2": {
                    "array": 10,
                    "array_address": 6,
                    "array_base": 1,
                    "base_address": 1,
                    "data": 4,
                    "data_array": 6,
                    "data_pointer": 2,
                    "memory_address": 1
                },
                "uVar1": {
                    "array_index": 2,
                    "bit_mask": 1,
                    "byte_index": 2,
                    "byte_offset": 1,
                    "index": 8,
                    "index_offset": 1,
                    "shifted_bit_index": 1,
                    "shifted_bit_position": 1,
                    "shifted_index": 4,
                    "shifted_offset": 1,
                    "shifted_position": 5,
                    "shifted_value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08004110"
            ],
            "code": "\nvoid update_bit_value_0800316c(uint bit_position,int array)\n\n{\n  uint index;\n  \n  index = (bit_position << 0x18) >> 0x1c;\n  *(uint *)(array + index * 4) = *(uint *)(array + index * 4) & ~(1 << (bit_position & 0xf));\n  return;\n}\n\n",
            "current_name": "update_bit_value_0800316c",
            "entrypoint": "0x0800316c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800316c": "update_bit_value_0800316c",
                "param_1": "bit_position",
                "param_2": "array",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800318c": {
            "additional_data": {
                "0": {
                    "0": 1,
                    "0x40020000": 4,
                    "address0": 4,
                    "address_0": 3,
                    "address_a": 1,
                    "base_address": 2,
                    "base_address_0": 3,
                    "map_0": 1,
                    "mem_base": 1,
                    "memory_address_0": 3
                },
                "0x40020000": {
                    "memory_address0": 1
                },
                "0x40020400": {
                    "memory_address1": 1
                },
                "0x40020800": {
                    "memory_address2": 1
                },
                "0x40020c00": {
                    "memory_address3": 1
                },
                "0x40021000": {
                    "memory_address4": 1
                },
                "0x40021400": {
                    "memory_address5": 1
                },
                "0x40021800": {
                    "memory_address6": 1
                },
                "0x40021c00": {
                    "memory_address7": 1
                },
                "0x40022000": {
                    "memory_address8": 1
                },
                "0x40022400": {
                    "memory_address9": 1
                },
                "0x40022800": {
                    "memory_address10": 1
                },
                "1": {
                    "0x40020400": 5,
                    "address1": 4,
                    "address_1": 3,
                    "address_b": 1,
                    "address_offset_1": 1,
                    "base_address_1": 3,
                    "map_1": 1,
                    "memory_address_1": 3,
                    "offset1": 1
                },
                "10": {
                    "0x40022800": 5,
                    "address10": 4,
                    "address_10": 3,
                    "address_k": 1,
                    "address_offset_10": 1,
                    "base_address_10": 3,
                    "map_10": 1,
                    "memory_address_10": 3,
                    "offset10": 1
                },
                "2": {
                    "0x40020800": 5,
                    "address2": 4,
                    "address_2": 3,
                    "address_c": 1,
                    "address_offset_2": 1,
                    "base_address_2": 3,
                    "map_2": 1,
                    "memory_address_2": 3,
                    "offset2": 1
                },
                "3": {
                    "0x40020c00": 5,
                    "address3": 4,
                    "address_3": 3,
                    "address_d": 1,
                    "address_offset_3": 1,
                    "base_address_3": 3,
                    "map_3": 1,
                    "memory_address_3": 3,
                    "offset3": 1
                },
                "4": {
                    "0x40021000": 5,
                    "address4": 4,
                    "address_4": 3,
                    "address_e": 1,
                    "address_offset_4": 1,
                    "base_address_4": 3,
                    "map_4": 1,
                    "memory_address_4": 3,
                    "offset4": 1
                },
                "5": {
                    "0x40021400": 5,
                    "address5": 4,
                    "address_5": 3,
                    "address_f": 1,
                    "address_offset_5": 1,
                    "base_address_5": 3,
                    "map_5": 1,
                    "memory_address_5": 3,
                    "offset5": 1
                },
                "6": {
                    "0x40021800": 5,
                    "address6": 4,
                    "address_6": 3,
                    "address_g": 1,
                    "address_offset_6": 1,
                    "base_address_6": 3,
                    "map_6": 1,
                    "memory_address_6": 3,
                    "offset6": 1
                },
                "7": {
                    "0x40021c00": 5,
                    "address7": 4,
                    "address_7": 3,
                    "address_h": 1,
                    "address_offset_7": 1,
                    "base_address_7": 3,
                    "map_7": 1,
                    "memory_address_7": 3,
                    "offset7": 1
                },
                "8": {
                    "0x40022000": 5,
                    "address8": 4,
                    "address_8": 3,
                    "address_i": 1,
                    "address_offset_8": 1,
                    "base_address_8": 3,
                    "map_8": 1,
                    "memory_address_8": 3,
                    "offset8": 1
                },
                "9": {
                    "0x40022400": 5,
                    "address9": 4,
                    "address_9": 3,
                    "address_j": 1,
                    "address_offset_9": 1,
                    "base_address_9": 3,
                    "map_9": 1,
                    "memory_address_9": 3,
                    "offset9": 1
                },
                "FUN_0800318c": {
                    "get_address_from_id": 1,
                    "get_address_from_param": 2,
                    "get_constant_value": 1,
                    "get_memory_address": 22,
                    "get_memory_offset": 1,
                    "get_offset_value": 1,
                    "map_param_to_address": 1,
                    "map_param_to_return": 1,
                    "translate_param_to_address": 1
                },
                "default": {
                    "default_value": 1
                },
                "param_1": {
                    "id": 1,
                    "index": 8,
                    "input": 16,
                    "input_value": 1,
                    "offset_index": 1,
                    "param": 4
                },
                "return": {
                    "address": 1,
                    "memory_address": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080041bc"
            ],
            "code": "\nundefined4 get_memory_address_0800318c(undefined4 input)\n\n{\n  switch(input) {\n  case 0:\n    address 0x40020000;\n  case 1:\n    address 0x40020400;\n  case 2:\n    address 0x40020800;\n  case 3:\n    address 0x40020c00;\n  case 4:\n    address 0x40021000;\n  case 5:\n    address 0x40021400;\n  case 6:\n    address 0x40021800;\n  case 7:\n    address 0x40021c00;\n  case 8:\n    address 0x40022000;\n  case 9:\n    address 0x40022400;\n  case 10:\n    address 0x40022800;\n  default_value:\n    address 0;\n  }\n}\n\n",
            "current_name": "get_memory_address_0800318c",
            "entrypoint": "0x0800318c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800318c": "get_memory_address_0800318c",
                "default": "default_value",
                "param_1": "input",
                "return": "address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080031fc": {
            "additional_data": {
                "0": {
                    "address0": 1,
                    "address_0": 1
                },
                "1": {
                    "address1": 1,
                    "address_1": 1
                },
                "10": {
                    "address10": 1,
                    "address_10": 1
                },
                "2": {
                    "address2": 1,
                    "address_2": 1
                },
                "3": {
                    "address3": 1,
                    "address_3": 1
                },
                "4": {
                    "address4": 1,
                    "address_4": 1
                },
                "5": {
                    "address5": 1,
                    "address_5": 1
                },
                "6": {
                    "address6": 1,
                    "address_6": 1
                },
                "7": {
                    "address7": 1,
                    "address_7": 1
                },
                "8": {
                    "address8": 1,
                    "address_8": 1
                },
                "9": {
                    "address9": 1,
                    "address_9": 1
                },
                "FUN_080031fc": {
                    "configure_hardware": 1,
                    "configure_peripheral": 2,
                    "configure_registers": 1,
                    "map_value_to_address": 1,
                    "set_control_register_bit": 1,
                    "set_device_bitmask": 1,
                    "set_flag_and_get_address": 1,
                    "set_flag_and_return_address": 2,
                    "set_memory_address": 8,
                    "set_memory_flag": 1,
                    "set_memory_location": 1,
                    "set_memory_offset": 1,
                    "set_memory_permissions": 2,
                    "set_memory_region_access_permissions": 1,
                    "set_memory_value": 1,
                    "set_peripheral_access": 1,
                    "set_register_value": 3,
                    "update_register": 1,
                    "update_registers": 1
                },
                "_DAT_40023830": {
                    "hardware_config": 1,
                    "memory": 1,
                    "memory_address": 1,
                    "memory_data": 1,
                    "memory_mask": 1,
                    "memory_value": 1
                },
                "param_1": {
                    "address_index": 5,
                    "address_type": 1,
                    "bit_position": 1,
                    "device_index": 1,
                    "flag": 4,
                    "hardware_option": 1,
                    "input": 1,
                    "input_value": 1,
                    "location": 1,
                    "memory_offset": 1,
                    "offset": 1,
                    "option": 1,
                    "peripheral_id": 1,
                    "peripheral_index": 2,
                    "permission_index": 1,
                    "permission_level": 1,
                    "region_index": 1,
                    "register_index": 3,
                    "register_number": 1,
                    "value": 2
                },
                "uVar1": {
                    "address": 2,
                    "base_address": 7,
                    "device_address": 1,
                    "memory_address": 1,
                    "new_address": 4,
                    "new_memory_address": 3,
                    "output": 1,
                    "output_value": 1,
                    "peripheral_address": 3,
                    "region_address": 1,
                    "register_address": 1,
                    "result": 2,
                    "return_address": 1,
                    "return_value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08003486",
                "FUN_08003978"
            ],
            "code": "\n\n\nundefined4 set_memory_address_080031fc(undefined4 address_index)\n\n{\n  undefined4 base_address;\n  \n  switch(address_index) {\n  case 0:\n    _DAT_40023830 = _DAT_40023830 | 1;\n    base_address = 0x40020000;\n    break;\n  case 1:\n    _DAT_40023830 = _DAT_40023830 | 2;\n    base_address = 0x40020400;\n    break;\n  case 2:\n    _DAT_40023830 = _DAT_40023830 | 4;\n    base_address = 0x40020800;\n    break;\n  case 3:\n    _DAT_40023830 = _DAT_40023830 | 8;\n    base_address = 0x40020c00;\n    break;\n  case 4:\n    _DAT_40023830 = _DAT_40023830 | 0x10;\n    base_address = 0x40021000;\n    break;\n  case 5:\n    _DAT_40023830 = _DAT_40023830 | 0x20;\n    base_address = 0x40021400;\n    break;\n  case 6:\n    _DAT_40023830 = _DAT_40023830 | 0x40;\n    base_address = 0x40021800;\n    break;\n  case 7:\n    _DAT_40023830 = _DAT_40023830 | 0x80;\n    base_address = 0x40021c00;\n    break;\n  case 8:\n    _DAT_40023830 = _DAT_40023830 | 0x100;\n    base_address = 0x40022000;\n    break;\n  case 9:\n    _DAT_40023830 = _DAT_40023830 | 0x200;\n    base_address = 0x40022400;\n    break;\n  case 10:\n    _DAT_40023830 = _DAT_40023830 | 0x400;\n    base_address = 0x40022800;\n    break;\n  default:\n    base_address = 0;\n  }\n  return base_address;\n}\n\n",
            "current_name": "set_memory_address_080031fc",
            "entrypoint": "0x080031fc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080031fc": "set_memory_address_080031fc",
                "param_1": "address_index",
                "uVar1": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003380": {
            "additional_data": {
                "DAT_08005a18": {
                    "status_data": 1
                },
                "FUN_08003380": {
                    "check_and_get_value": 1,
                    "check_and_return": 1,
                    "check_and_return_constant": 1,
                    "check_and_return_value": 2,
                    "check_binary_status": 1,
                    "check_condition_and_return": 2,
                    "check_data_integrity": 1,
                    "check_for_valid_result": 1,
                    "check_function": 1,
                    "check_input": 1,
                    "check_input_validity": 2,
                    "check_input_values": 1,
                    "check_permission": 1,
                    "check_result": 2,
                    "check_status": 3,
                    "check_validity": 4,
                    "check_validity_and_size": 1,
                    "check_value": 2,
                    "validate_data": 1,
                    "validate_function_result": 1
                },
                "FUN_0800354a": {
                    "calculate_result": 2,
                    "get_status": 1,
                    "perform_operation": 2,
                    "process_data": 2,
                    "process_input": 2,
                    "process_value": 1,
                    "reverse_value_check": 1,
                    "sub_function": 1
                },
                "iVar1": {
                    "func_result": 1,
                    "function_result": 1,
                    "result": 28
                },
                "param_1": {
                    "arg1": 4,
                    "input1": 1,
                    "input_1": 8,
                    "input_param": 6,
                    "input_param_1": 5,
                    "input_value": 1,
                    "input_value_1": 2,
                    "status": 1,
                    "value": 1,
                    "value1": 1,
                    "value_1": 1
                },
                "param_2": {
                    "arg2": 4,
                    "data1": 1,
                    "input2": 1,
                    "input_2": 8,
                    "input_param_2": 5,
                    "input_value_2": 1,
                    "unused_param": 4,
                    "unused_param1": 2,
                    "value_2": 1
                },
                "param_3": {
                    "arg3": 4,
                    "data2": 1,
                    "data_1": 1,
                    "data_array": 1,
                    "data_param": 2,
                    "data_param1": 1,
                    "data_param_1": 1,
                    "input3": 1,
                    "input_3": 8,
                    "input_param_3": 5,
                    "input_value_2": 1,
                    "input_value_3": 1,
                    "unused_param2": 2,
                    "value3": 1,
                    "value_3": 1
                },
                "param_4": {
                    "arg4": 4,
                    "buffer": 1,
                    "data3": 1,
                    "data_2": 1,
                    "data_param2": 1,
                    "data_param_2": 1,
                    "input4": 1,
                    "input_4": 8,
                    "input_param_4": 5,
                    "input_value_3": 1,
                    "input_value_4": 1,
                    "size_param": 1,
                    "unused_param2": 1,
                    "unused_param3": 2,
                    "value4": 1,
                    "value_4": 1
                }
            },
            "called": [
                "FUN_0800354a"
            ],
            "calling": [
                "FUN_080033d8"
            ],
            "code": "\nundefined4 check_input_validity_08003380(undefined4 input_1,undefined4 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  int result;\n  \n  result = FUN_0800354a(input_1,&DAT_08005a18,input_3,input_4,input_4);\n  if ((uint)(result << 0xc) >> 0x1b != 2) {\n    return 0;\n  }\n  return 0x10;\n}\n\n",
            "current_name": "check_input_validity_08003380",
            "entrypoint": "0x08003380",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003380": "check_input_validity_08003380",
                "iVar1": "result",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800339c": {
            "additional_data": {
                "FUN_0800339c": {
                    "analyze_input": 1,
                    "calculate_return_value": 2,
                    "check_result": 1,
                    "check_status": 1,
                    "check_value": 1,
                    "classify_result": 1,
                    "decode_input": 1,
                    "detect_error_type": 1,
                    "evaluate_result": 1,
                    "get_function_code": 1,
                    "get_operation_type": 1,
                    "get_return_value": 3,
                    "identify_mode": 1,
                    "perform_operation": 1,
                    "process_binary_function": 1,
                    "process_data": 5,
                    "process_function": 1,
                    "process_result": 2,
                    "process_return_value": 3
                },
                "FUN_0800354a": {
                    "process_function": 1
                },
                "iVar1": {
                    "result": 28,
                    "return_value": 3
                },
                "param_1": {
                    "error_code": 1,
                    "input": 3,
                    "input1": 7,
                    "input_1": 3,
                    "input_int": 1,
                    "input_one": 1,
                    "input_param": 4,
                    "input_param1": 3,
                    "input_value": 4,
                    "input_value1": 1,
                    "input_var": 1,
                    "param_1": 2
                },
                "param_2": {
                    "array_size": 1,
                    "buffer": 1,
                    "data1": 1,
                    "data_1": 2,
                    "input2": 7,
                    "input_2": 1,
                    "input_data": 1,
                    "input_param2": 3,
                    "input_two": 1,
                    "input_value2": 1,
                    "param2": 1,
                    "param_2": 2,
                    "size": 1,
                    "unused_param": 5,
                    "unused_var": 1
                },
                "param_3": {
                    "address_param": 1,
                    "buffer_param": 1,
                    "data": 1,
                    "data2": 1,
                    "data_2": 2,
                    "data_param1": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "input3": 7,
                    "input_2": 1,
                    "input_3": 2,
                    "input_param3": 3,
                    "input_value3": 1,
                    "param3": 2,
                    "param_3": 3,
                    "param_three": 1,
                    "size": 1
                },
                "param_4": {
                    "count": 1,
                    "counter": 1,
                    "data3": 1,
                    "data_3": 2,
                    "data_param2": 1,
                    "flag": 1,
                    "input4": 7,
                    "input_3": 1,
                    "input_4": 2,
                    "input_param4": 3,
                    "input_value4": 1,
                    "length": 1,
                    "length_param": 1,
                    "param4": 2,
                    "param_4": 3,
                    "param_four": 1,
                    "size_param": 1,
                    "value": 1
                },
                "uVar2": {
                    "mode": 1,
                    "shifted_bits": 1,
                    "shifted_result": 16,
                    "shifted_value": 13
                }
            },
            "called": [
                "FUN_0800354a"
            ],
            "calling": [
                "FUN_08003414"
            ],
            "code": "\nundefined4 process_data_0800339c(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  uint shifted_result;\n  \n  result = FUN_0800354a(input1,&DAT_08005a3c,input3,input4,input4);\n  shifted_result = (uint)(result << 0xc) >> 0x1b;\n  if (shifted_result == 3) {\n    return 8;\n  }\n  if (shifted_result != 4) {\n    if (shifted_result != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "current_name": "process_data_0800339c",
            "entrypoint": "0x0800339c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800339c": "process_data_0800339c",
                "iVar1": "result",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar2": "shifted_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080033c8": {
            "additional_data": {
                "": {
                    "": 2
                },
                "FUN_080033c8": {
                    "clear_bit30": 1,
                    "clear_bit_in_address": 1,
                    "clear_bit_in_global_variable": 1,
                    "clear_bit_in_memory": 3,
                    "clear_bit_in_memory_address": 3,
                    "clear_bit_in_register": 5,
                    "clear_bitmask": 1,
                    "clear_bits": 1,
                    "clear_bits_in_data_register": 1,
                    "clear_flag_bit": 3,
                    "clear_flag_bits": 2,
                    "clear_flags": 2,
                    "clear_high_bit": 2,
                    "clear_memory": 1,
                    "clear_top_bit": 1,
                    "disable_memory_protection": 1,
                    "reset_memory_flag": 1,
                    "reset_memory_protection": 1
                },
                "_DAT_40023840": {
                    "_dat_40023840": 1,
                    "bitmask": 1,
                    "data_register": 4,
                    "flag_data": 1,
                    "flag_register": 5,
                    "flags": 1,
                    "memory_address": 5,
                    "memory_protection_flag": 1,
                    "memory_value": 2,
                    "register": 1,
                    "register_value": 5,
                    "target_address": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08000f56"
            ],
            "code": "\n\n\nvoid clear_bit_in_memory_address_080033c8(void)\n\n{\n  _DAT_40023840 = _DAT_40023840 & 0xdfffffff;\n  return;\n}\n\n",
            "current_name": "clear_bit_in_memory_address_080033c8",
            "entrypoint": "0x080033c8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080033c8": "clear_bit_in_memory_address_080033c8"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080033d8": {
            "additional_data": {
                "FUN_08000f56": {
                    "clean_up": 1,
                    "cleanup": 8,
                    "cleanup_array": 2,
                    "cleanup_data": 2
                },
                "FUN_08000f72": {
                    "execute_operation": 1,
                    "modify_data": 1,
                    "perform_action": 2,
                    "perform_operation": 2,
                    "process_array": 1,
                    "process_data": 2,
                    "process_result": 2,
                    "process_results": 1,
                    "process_valid_result": 1
                },
                "FUN_08003380": {
                    "check_condition": 4,
                    "check_conditions": 1,
                    "check_data": 2,
                    "check_input": 1,
                    "check_status": 6,
                    "check_validity": 2
                },
                "FUN_080033d8": {
                    "analyze_binary": 1,
                    "analyze_data": 1,
                    "execute_function": 1,
                    "execute_process": 1,
                    "extract_data_and_process": 2,
                    "initialize": 1,
                    "process_binary_data": 1,
                    "process_data": 20,
                    "process_function": 2,
                    "validate_and_execute": 1
                },
                "FUN_080034f4": {
                    "calculate_value": 5,
                    "evaluate_condition": 1,
                    "extract_data": 1,
                    "extract_data_from_param": 1,
                    "fetch_value": 1,
                    "get_data": 1,
                    "get_result": 2,
                    "get_valid_result": 1,
                    "get_value": 1,
                    "perform_operation": 1,
                    "process_data": 1
                },
                "iVar1": {
                    "condition_result": 2,
                    "result": 9,
                    "return_value": 1,
                    "status": 5,
                    "validity_check": 1,
                    "value": 1
                },
                "local_1c": {
                    "analysis_results": 1,
                    "array_of_values": 1,
                    "data": 1,
                    "data_array": 3,
                    "result_array": 15,
                    "result_data": 1,
                    "results": 7,
                    "sub_function_results": 1,
                    "values": 1
                },
                "param_1": {
                    "arg": 1,
                    "argument": 1,
                    "data": 10,
                    "input": 3,
                    "input_data": 14,
                    "input_param": 1,
                    "input_parameter": 1
                }
            },
            "called": [
                "FUN_08000f56",
                "FUN_080034f4",
                "FUN_08000f72",
                "FUN_08003380"
            ],
            "calling": [
                "FUN_08004110"
            ],
            "code": "\nvoid extract_data_and_process_080033d8(undefined4 input_data)\n\n{\n  int result;\n  int result_array [5];\n  \n  result_array[0] = FUN_080034f4(input_data,&DAT_08005a18);\n  if ((result_array[0] != 0) && ((result = FUN_08003380(input_data), result == 0 || (result == 0x10)))) {\n    FUN_08000f72(result_array,result);\n    FUN_08000f56(result_array);\n  }\n  return;\n}\n\n",
            "current_name": "extract_data_and_process_080033d8",
            "entrypoint": "0x080033d8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080033d8": "extract_data_and_process_080033d8",
                "iVar1": "result",
                "local_1c": "result_array",
                "param_1": "input_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800340c": {
            "additional_data": {
                "FUN_0800340c": {
                    "execute_function": 1,
                    "execute_initial_process": 1,
                    "execute_initial_setup": 1,
                    "execute_initialization": 7,
                    "execute_main_function": 4,
                    "execute_main_logic": 1,
                    "execute_test": 1,
                    "initialize": 2,
                    "initialize_and_start_process": 1,
                    "initialize_application": 7,
                    "initialize_binary": 1,
                    "initialize_components": 1,
                    "perform_initial_setup": 1,
                    "start_reverse": 1
                },
                "FUN_080035fc": {
                    "calculate_result": 1,
                    "execute": 1,
                    "execute_initialization": 2,
                    "execute_other_function": 1,
                    "execute_sub_function": 3,
                    "initialize_data": 2,
                    "initialize_parameter": 1,
                    "initialize_parameters": 2,
                    "perform_initialization": 8,
                    "perform_reverse": 1,
                    "perform_sub_task": 1,
                    "perform_subtask": 1,
                    "perform_task": 1,
                    "process_data": 5
                },
                "param_1": {
                    "array": 1,
                    "data": 3,
                    "data_array": 1,
                    "data_ptr": 2,
                    "input": 1,
                    "input_array": 1,
                    "parameter": 1,
                    "parameters": 1
                }
            },
            "called": [
                "FUN_080035fc"
            ],
            "calling": [
                "FUN_0800268e"
            ],
            "code": "\nvoid initialize_application_0800340c(void)\n\n{\n  FUN_080035fc();\n  return;\n}\n\n",
            "current_name": "initialize_application_0800340c",
            "entrypoint": "0x0800340c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800340c": "initialize_application_0800340c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003414": {
            "additional_data": {
                "DAT_08005a3c": {
                    "constant_data": 1,
                    "data": 1
                },
                "FUN_0800268e": {
                    "clean_up_array": 1,
                    "cleanup": 6,
                    "cleanup_array": 1,
                    "cleanup_data": 1,
                    "cleanup_result_array": 1,
                    "cleanup_results": 1,
                    "finalize_process": 3,
                    "finalize_results": 1
                },
                "FUN_08002864": {
                    "do_something_a": 1,
                    "execute_first_action": 1,
                    "handle_case1": 1,
                    "handle_data_exception": 1,
                    "handle_flag": 1,
                    "handle_flag_zero": 2,
                    "handle_flags": 1,
                    "handle_normal": 1,
                    "handle_result": 1,
                    "handle_status": 1,
                    "handle_success": 1,
                    "perform_action": 1,
                    "perform_action1": 2
                },
                "FUN_080028f0": {
                    "do_something_b": 1,
                    "execute_alternative_action": 1,
                    "execute_second_action": 1,
                    "handle_case2": 1,
                    "handle_checksum_error": 1,
                    "handle_failure": 1,
                    "handle_flag": 1,
                    "handle_flag_non_zero": 2,
                    "handle_no_flag": 1,
                    "handle_non_flags": 1,
                    "handle_special": 1,
                    "handle_special_result": 1,
                    "perform_action2": 2
                },
                "FUN_0800339c": {
                    "check_condition": 6,
                    "check_error_code": 1,
                    "check_result": 1,
                    "check_status": 4,
                    "get_bar": 1,
                    "get_status": 1,
                    "process_step2": 1
                },
                "FUN_08003414": {
                    "execute_function": 1,
                    "execute_task": 1,
                    "parse_data": 1,
                    "process_binary": 1,
                    "process_binary_data": 1,
                    "process_data": 24,
                    "process_function": 1
                },
                "FUN_080034f4": {
                    "calculate_checksum": 1,
                    "calculate_score": 1,
                    "calculate_value": 5,
                    "compute_result": 1,
                    "get_first_value": 1,
                    "get_foo": 1,
                    "get_some_value_a": 1,
                    "get_value": 1,
                    "initialize_result": 1,
                    "obtain_value": 1,
                    "process_step1": 1
                },
                "FUN_0800354a": {
                    "calculate_flag": 3,
                    "calculate_value": 1,
                    "check_flag": 3,
                    "check_flags": 1,
                    "get_second_value": 1,
                    "get_some_value_b": 1,
                    "perform_action": 1,
                    "perform_operation": 1,
                    "process_step3": 1,
                    "update_flag": 1,
                    "update_flags": 1
                },
                "iVar1": {
                    "condition_result": 2,
                    "error_code": 6,
                    "result": 6,
                    "result_code": 1,
                    "return_value": 1,
                    "status": 4,
                    "step_result": 1,
                    "value": 3
                },
                "local_4c": {
                    "array": 2,
                    "array_buffer": 1,
                    "data_array": 2,
                    "local_array": 2,
                    "result": 1,
                    "result_array": 11,
                    "result_set": 1,
                    "results": 8,
                    "results_array": 2,
                    "values": 1
                },
                "param_1": {
                    "data": 5,
                    "input": 13,
                    "input_data": 9,
                    "input_param": 4
                },
                "uVar2": {
                    "computed_value": 1,
                    "flag": 10,
                    "flag_value": 1,
                    "flags": 7,
                    "operation_result": 1,
                    "second_value": 1,
                    "step_flags": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08002864",
                "FUN_080034f4",
                "FUN_080028f0",
                "FUN_0800354a",
                "FUN_0800268e",
                "FUN_0800339c"
            ],
            "calling": [
                "FUN_08004110"
            ],
            "code": "\nvoid process_binary_data_08003414(undefined4 input)\n\n{\n  int error_code;\n  uint flag;\n  int result_array [16];\n  \n  result_array[0] = FUN_080034f4(input,&DAT_08005a3c);\n  if ((result_array[0] != 0) &&\n     ((((error_code = FUN_0800339c(input), error_code == 0 || (error_code == 4)) || (error_code == 8)) ||\n      ((error_code == 0xc || (error_code == 0x18)))))) {\n    flag = FUN_0800354a(input,&DAT_08005a3c);\n    if ((flag & 0x100000) == 0) {\n      FUN_08002864(result_array,error_code);\n    }\n    else {\n      FUN_080028f0(result_array,error_code);\n    }\n    FUN_0800268e(result_array);\n  }\n  return;\n}\n\n",
            "current_name": "process_binary_data_08003414",
            "entrypoint": "0x08003414",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003414": "process_binary_data_08003414",
                "iVar1": "error_code",
                "local_4c": "result_array",
                "param_1": "input",
                "uVar2": "flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800346c": {
            "additional_data": {
                "FUNC_08000e30": {
                    "execute_initialization": 1
                },
                "FUN_08000e30": {
                    "call_initial_setup": 1,
                    "call_sub_function": 1,
                    "do_something": 1,
                    "execute_initialization": 8,
                    "execute_preparation": 1,
                    "execute_startup": 1,
                    "execute_startup_routine": 1,
                    "initialize": 1,
                    "initialize_system": 2,
                    "perform_action": 1,
                    "perform_initialization": 6,
                    "perform_startup_tasks": 1,
                    "perform_task": 1,
                    "process_files": 1,
                    "start_system": 1,
                    "sub_function": 1
                },
                "FUN_0800346c": {
                    "execute_initialization": 5,
                    "execute_initiation_process": 1,
                    "execute_startup_code": 1,
                    "initialize": 9,
                    "initialize_app": 1,
                    "initialize_application": 3,
                    "initialize_program": 2,
                    "initialize_system": 8,
                    "initiate_program": 1
                }
            },
            "called": [
                "FUN_08000e30"
            ],
            "calling": [
                "FUN_08004204"
            ],
            "code": "\nvoid initialize_system_0800346c(void)\n\n{\n  FUN_08000e30();\n  return;\n}\n\n",
            "current_name": "initialize_system_0800346c",
            "entrypoint": "0x0800346c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800346c": "initialize_system_0800346c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003474": {
            "called": [],
            "calling": [
                "FUN_08003476"
            ],
            "code": "\nvoid FUNC_08003474(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08003474",
            "entrypoint": "0x08003474",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08003474": "FUNC_08003474"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08003476": {
            "additional_data": {
                "FUNC_08003474": {
                    "configure_system": 1,
                    "execute_finalization": 2,
                    "execute_function2": 1,
                    "execute_function_3": 1,
                    "execute_main_algorithm": 1,
                    "execute_main_function": 1,
                    "execute_main_logic": 1,
                    "execute_operation": 1,
                    "execute_other_function": 1,
                    "execute_program": 1,
                    "execute_sub_function": 1,
                    "execute_subprocess": 1,
                    "execute_support_operation": 1,
                    "execute_system_call": 1,
                    "execute_system_function": 1,
                    "execute_task2": 1,
                    "finalize_execution": 1,
                    "initialize_audio": 1,
                    "load_configuration": 1,
                    "perform_cleanup": 1,
                    "perform_computation": 1,
                    "perform_operations": 1,
                    "perform_system_checks": 1,
                    "perform_task2": 2,
                    "perform_third_task": 1,
                    "process_data": 1,
                    "run_system": 1
                },
                "FUN_08000e18": {
                    "configure_device": 1,
                    "configure_system": 1,
                    "finalize_components": 1,
                    "initialize": 1,
                    "initialize_component": 1,
                    "initialize_components": 1,
                    "initialize_data": 2,
                    "initialize_function_1": 1,
                    "initialize_graphics": 1,
                    "initialize_important_components": 1,
                    "initialize_module": 1,
                    "initialize_module_a": 1,
                    "initialize_peripherals": 1,
                    "initialize_resources": 3,
                    "initialize_system": 4,
                    "load_data": 1,
                    "perform_first_task": 1,
                    "perform_second_operation": 1,
                    "perform_startup_tasks": 1,
                    "perform_task3": 2
                },
                "FUN_08000f4e": {
                    "configure_device": 1,
                    "do_preprocessing": 1,
                    "execute_function1": 1,
                    "execute_function_2": 1,
                    "execute_initialization": 1,
                    "execute_process": 1,
                    "execute_task": 1,
                    "initialize_module_b": 1,
                    "initialize_networking": 1,
                    "load_configuration": 1,
                    "load_data": 2,
                    "perform_additional_operations": 1,
                    "perform_additional_setup": 1,
                    "perform_additional_task": 1,
                    "perform_additional_tasks": 2,
                    "perform_cleanup": 3,
                    "perform_first_operation": 1,
                    "perform_initialization": 1,
                    "perform_preparation": 1,
                    "perform_preprocessing": 2,
                    "perform_second_task": 1,
                    "perform_startup_tasks": 1,
                    "perform_task1": 3
                },
                "FUN_08003476": {
                    "execute_binary_function": 1,
                    "execute_initialization": 3,
                    "execute_main_function": 2,
                    "execute_main_operations": 1,
                    "execute_operations": 1,
                    "execute_program": 1,
                    "initialize": 1,
                    "initialize_and_execute": 2,
                    "initialize_components": 1,
                    "initialize_program": 5,
                    "initialize_system": 9,
                    "run_initialization": 1
                }
            },
            "called": [
                "FUN_08000f4e",
                "FUN_08003474",
                "FUN_08000e18"
            ],
            "calling": [],
            "code": "\nvoid initialize_system_08003476(void)\n\n{\n  FUN_08000e18();\n  FUN_08000f4e();\n  FUNC_08003474();\n  return;\n}\n\n",
            "current_name": "initialize_system_08003476",
            "entrypoint": "0x08003476",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003476": "initialize_system_08003476"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003486": {
            "additional_data": {
                "FUN_08000fb4": {
                    "process_data": 1,
                    "subfunction": 1,
                    "update_bitfield": 1,
                    "update_data": 2
                },
                "FUN_080031fc": {
                    "calculate_shift": 1,
                    "calculate_value": 1,
                    "convert_input": 2,
                    "shift_and_mask": 1
                },
                "FUN_08003486": {
                    "convert_and_set_bitmask": 1,
                    "convert_and_shift_bits": 2,
                    "convert_param_to_bitmask": 1,
                    "decode_and_print_bits": 1,
                    "extract_bit": 1,
                    "extract_bit_and_call_subfunction": 1,
                    "extract_bit_value": 1,
                    "extract_bits": 1,
                    "initialize_and_set_bit": 1,
                    "initialize_bits": 3,
                    "initialize_flags": 1,
                    "initialize_function": 1,
                    "process_bits": 2,
                    "process_bitwise_operation": 1,
                    "process_data": 4,
                    "process_parameter": 1,
                    "reverse_bits": 5,
                    "update_bit": 1,
                    "update_bits": 1,
                    "update_flags": 1
                },
                "local_18": {
                    "constant": 5,
                    "constant2": 4,
                    "constant_2": 3,
                    "constant_value": 4,
                    "count": 1,
                    "local_param4": 4,
                    "local_param_4": 1,
                    "local_value": 1,
                    "local_variable1": 1,
                    "shift_value": 1,
                    "some_constant": 1,
                    "variable2": 1
                },
                "local_1c": {
                    "arbitrary_value2_": 1,
                    "arg2_copy": 1,
                    "arg3": 1,
                    "constant3": 1,
                    "local_param3": 6,
                    "local_param_3": 1,
                    "local_parameter3": 1,
                    "local_var2": 1,
                    "modified_parameter3": 1,
                    "old_value": 1,
                    "param2_copy": 2,
                    "param3": 2,
                    "param3_copy": 3,
                    "param3_value_copy": 1,
                    "param_3": 1,
                    "param_3_copy": 2,
                    "temp_param3": 1,
                    "temporary_var2": 1,
                    "updated_value2": 1,
                    "value2": 1,
                    "value_2_copy": 1
                },
                "local_20": {
                    "arbitrary_value1_": 1,
                    "arg1_copy": 1,
                    "arg2": 1,
                    "constant1": 1,
                    "local_param2": 6,
                    "local_param_2": 1,
                    "local_parameter2": 1,
                    "local_var1": 1,
                    "modified_parameter2": 1,
                    "new_value": 1,
                    "param1_copy": 2,
                    "param2": 2,
                    "param2_copy": 3,
                    "param2_value_copy": 1,
                    "param_2": 1,
                    "param_2_copy": 2,
                    "temp_param2": 1,
                    "temporary_var1": 1,
                    "updated_value1": 1,
                    "value1": 1,
                    "value_1_copy": 1
                },
                "local_24": {
                    "bit_mask": 24,
                    "bitmask": 4,
                    "bitmask_result": 1,
                    "mask": 2
                },
                "param_1": {
                    "bit_pattern": 1,
                    "bit_position": 1,
                    "bitfield": 1,
                    "data": 1,
                    "input": 8,
                    "input_data": 1,
                    "input_param": 1,
                    "input_value": 14,
                    "original_value": 1,
                    "val": 1,
                    "value": 1
                },
                "param_2": {
                    "arbitrary_value1": 1,
                    "arg1": 1,
                    "new_value_param": 1,
                    "output_param_1": 1,
                    "param1": 3,
                    "param2": 12,
                    "param2_value": 2,
                    "param_2": 1,
                    "parameter2": 3,
                    "parameter_2": 1,
                    "subfunc_param_1": 1,
                    "val2": 1,
                    "value1": 2,
                    "value_1": 1
                },
                "param_3": {
                    "arbitrary_value2": 1,
                    "arg2": 1,
                    "old_value_param": 1,
                    "output_param_2": 1,
                    "param2": 3,
                    "param3": 12,
                    "param3_value": 2,
                    "param_3": 1,
                    "parameter3": 3,
                    "parameter_3": 1,
                    "subfunc_param_2": 1,
                    "val3": 1,
                    "value2": 2,
                    "value_2": 1
                },
                "uVar1": {
                    "bit_value": 1,
                    "computed_value": 1,
                    "converted_value": 4,
                    "extracted_value": 1,
                    "result": 3,
                    "shifted_input": 5,
                    "shifted_result": 1,
                    "shifted_value": 6,
                    "transformed_value": 1
                }
            },
            "called": [
                "FUN_08000fb4",
                "FUN_080031fc"
            ],
            "calling": [
                "FUN_08004110"
            ],
            "code": "\nvoid reverse_bits_08003486(uint input_value,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 shifted_value;\n  uint bit_mask;\n  undefined4 local_param2;\n  undefined4 local_param3;\n  undefined4 constant;\n  \n  shifted_value = FUN_080031fc((input_value << 0x18) >> 0x1c);\n  bit_mask = 1 << (input_value & 0xf) & 0xffff;\n  constant = 2;\n  local_param2 = param2;\n  local_param3 = param3;\n  FUN_08000fb4(shifted_value,&bit_mask);\n  return;\n}\n\n",
            "current_name": "reverse_bits_08003486",
            "entrypoint": "0x08003486",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003486": "reverse_bits_08003486",
                "local_18": "constant",
                "local_1c": "local_param3",
                "local_20": "local_param2",
                "local_24": "bit_mask",
                "param_1": "input_value",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "shifted_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080034b6": {
            "additional_data": {
                "FUN_08001198": {
                    "handle_operation": 1,
                    "perform_action": 5,
                    "perform_operation": 3,
                    "process_data": 3,
                    "update_data": 1
                },
                "FUN_080034b6": {
                    "check_param_and_call_function": 1,
                    "choose_action_based_on_condition": 1,
                    "choose_action_based_on_param3": 2,
                    "choose_function_based_on_param": 1,
                    "decide_action_based_on_param3_value": 1,
                    "execute_action_based_on_param": 1,
                    "execute_based_on_condition": 1,
                    "execute_code": 1,
                    "execute_conditional_function": 1,
                    "execute_function_based_on_condition": 1,
                    "execute_operation_based_on_condition": 2,
                    "execute_operation_based_on_param": 1,
                    "handle_param": 1,
                    "perform_action": 1,
                    "perform_action_based_on_condition": 1,
                    "perform_action_based_on_param": 1,
                    "process_param": 9,
                    "process_parameter": 2,
                    "toggle_flag": 1,
                    "update_status": 1
                },
                "param_1": {
                    "action": 1,
                    "action_param1": 1,
                    "arg1": 6,
                    "data": 1,
                    "execution_context": 1,
                    "flag": 1,
                    "function_parameter": 1,
                    "input1": 9,
                    "param1": 5,
                    "param_a": 1,
                    "ptr_to_data": 1,
                    "some_data": 1,
                    "some_value": 1,
                    "status": 1
                },
                "param_2": {
                    "action_param2": 1,
                    "additional_info": 1,
                    "arg2": 6,
                    "condition": 1,
                    "data_size": 1,
                    "flag": 2,
                    "index": 1,
                    "input2": 9,
                    "param2": 5,
                    "param_b": 1,
                    "some_other_value": 1,
                    "status": 2
                },
                "param_3": {
                    "action_code": 1,
                    "action_type": 1,
                    "choice": 2,
                    "condition": 13,
                    "count": 1,
                    "flag": 5,
                    "operation_flag": 1,
                    "option": 1,
                    "param3": 3,
                    "param_c": 1,
                    "param_value": 1,
                    "state": 1
                },
                "param_4": {
                    "action_param4": 1,
                    "additional_data": 2,
                    "additional_param": 1,
                    "arg3": 1,
                    "arg4": 3,
                    "argument": 1,
                    "data": 11,
                    "data_pointer": 1,
                    "info": 1,
                    "param4": 5,
                    "param_d": 1,
                    "reference": 1,
                    "value": 1,
                    "variable": 1
                }
            },
            "called": [
                "FUN_08001198"
            ],
            "calling": [
                "FUN_080041bc"
            ],
            "code": "\nvoid process_param_080034b6(undefined4 input1,undefined2 input2,int condition,undefined4 data)\n\n{\n  if (condition == 0) {\n    FUN_08001198(input1,input2,0,data,data);\n    return;\n  }\n  FUN_08001198(input1,input2,1,data,data);\n  return;\n}\n\n",
            "current_name": "process_param_080034b6",
            "entrypoint": "0x080034b6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080034b6": "process_param_080034b6",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "condition",
                "param_4": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080034ce": {
            "additional_data": {
                "FUN_08000c8c": {
                    "configure_options": 1,
                    "configure_settings": 2,
                    "do_something": 1,
                    "execute_main_function": 1,
                    "execute_operations": 1,
                    "execute_startup_tasks": 1,
                    "init_function_2": 1,
                    "initialize_2": 1,
                    "initialize_another_thing": 1,
                    "initialize_component_b": 2,
                    "initialize_components": 1,
                    "initialize_module2": 2,
                    "initialize_module_b": 2,
                    "initialize_part2": 1,
                    "initialize_second": 1,
                    "initialize_second_component": 1,
                    "initialize_second_subfunction": 2,
                    "initialize_subfunction2": 1,
                    "initialize_submodule2": 1,
                    "initialize_subsystem2": 2,
                    "load_data": 1,
                    "perform_calculations": 1,
                    "perform_second_operation": 1,
                    "perform_task_b": 1,
                    "second_sub_function": 1
                },
                "FUN_08000de4": {
                    "configure_network": 1,
                    "execute_preprocessing": 1,
                    "first_sub_function": 1,
                    "init_function_1": 1,
                    "initialize_1": 1,
                    "initialize_component": 1,
                    "initialize_component_a": 2,
                    "initialize_data": 1,
                    "initialize_database": 1,
                    "initialize_first": 1,
                    "initialize_first_component": 1,
                    "initialize_first_subfunction": 2,
                    "initialize_module1": 2,
                    "initialize_module_a": 2,
                    "initialize_part1": 1,
                    "initialize_something": 2,
                    "initialize_subfunction1": 1,
                    "initialize_submodule1": 1,
                    "initialize_subsystem1": 2,
                    "initialize_system": 1,
                    "perform_first_operation": 1,
                    "perform_initialization": 2,
                    "perform_preprocessing": 1,
                    "perform_task_a": 1
                },
                "FUN_080034ce": {
                    "execute_initial_tasks": 1,
                    "execute_initialization": 1,
                    "initialize": 10,
                    "initialize_application": 3,
                    "initialize_components": 4,
                    "initialize_program": 5,
                    "initialize_system": 6,
                    "setup_and_execute": 1
                }
            },
            "called": [
                "FUN_08000de4",
                "FUN_08000c8c"
            ],
            "calling": [
                "FUN_08000d8e"
            ],
            "code": "\nvoid initialize_system_080034ce(void)\n\n{\n  FUN_08000de4();\n  FUN_08000c8c();\n  return;\n}\n\n",
            "current_name": "initialize_system_080034ce",
            "entrypoint": "0x080034ce",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080034ce": "initialize_system_080034ce"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080034da": {
            "additional_data": {
                "FUN_080034da": {
                    "find_index": 1,
                    "find_matching_value": 1,
                    "find_param_value": 1,
                    "find_parameter_value": 1,
                    "find_target_index": 1,
                    "find_value": 6,
                    "find_value_in_array": 9,
                    "find_value_index": 10,
                    "get_value_by_key": 1
                },
                "PTR_080034da": {
                    "response": 1
                },
                "break": {
                    "exit_loop": 1,
                    "value_found": 1
                },
                "break_label_1": {
                    "value_not_found": 1
                },
                "break_label_2": {
                    "value_found": 1
                },
                "current_value": {
                    "array_value": 1
                },
                "next_element": {
                    "next_array_element": 1
                },
                "param_1": {
                    "search_key": 1,
                    "search_value": 1,
                    "target": 2,
                    "target_value": 11,
                    "value": 10,
                    "value_to_find": 6
                },
                "param_2": {
                    "array": 18,
                    "array_of_values": 5,
                    "array_ptr": 2,
                    "data": 1,
                    "data_array": 1,
                    "element": 1,
                    "param_list": 1,
                    "value_array": 2
                },
                "result": {
                    "found_value": 1
                },
                "undefined4": {
                    "int": 1
                }
            },
            "called": [
                "FUN_080034da"
            ],
            "calling": [
                "FUN_080034f4",
                "FUN_080034da"
            ],
            "code": "\nint find_value_index_080034da(int target_value,short *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (*array == target_value) exit_loop;\n    array = array + 6;\n  }\n  return *(int *)(array + 2);\n}\n\n",
            "current_name": "find_value_index_080034da",
            "entrypoint": "0x080034da",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080034da": "find_value_index_080034da",
                "break": "exit_loop",
                "param_1": "target_value",
                "param_2": "array",
                "undefined4": "int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080034f4": {
            "additional_data": {
                "FUN_080034da": {
                    "calculate_result": 1,
                    "perform_operation": 1,
                    "process_data": 1,
                    "process_input": 4,
                    "process_input_and_return_result": 1,
                    "process_parameter": 1,
                    "process_value": 2,
                    "retrieve_data": 2
                },
                "FUN_080034f4": {
                    "calculate_return_value": 1,
                    "check_and_execute": 1,
                    "check_for_valid_param": 1,
                    "check_if_valid_param": 1,
                    "check_input": 1,
                    "check_param": 14,
                    "check_param_and_call_func": 1,
                    "check_param_value": 1,
                    "check_parameter": 6,
                    "check_parameter_and_call_function": 1,
                    "check_return_value": 1,
                    "check_valid_parameter": 1
                },
                "param_1": {
                    "input": 11,
                    "input_param": 7,
                    "input_parameter": 2,
                    "input_value": 8,
                    "param": 2,
                    "value": 1
                },
                "param_2": {
                    "array_ptr": 1,
                    "data": 1,
                    "data_pointer": 1
                },
                "uVar1": {
                    "result": 15,
                    "return_value": 8
                }
            },
            "called": [
                "FUN_080034da"
            ],
            "calling": [
                "FUN_08003414",
                "FUN_08003cc8",
                "FUN_08003d18",
                "FUN_080033d8",
                "FUN_08003978"
            ],
            "code": "\nundefined4 check_param_and_call_func_080034f4(int input)\n\n{\n  undefined4 result;\n  \n  if (input != -1) {\n    result = FUN_080034da();\n    return result;\n  }\n  return 0;\n}\n\n",
            "current_name": "check_param_and_call_func_080034f4",
            "entrypoint": "0x080034f4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080034f4": "check_param_and_call_func_080034f4",
                "param_1": "input",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003506": {
            "additional_data": {
                "FUN_08003506": {
                    "find_element": 1,
                    "find_element_index": 1,
                    "find_element_value": 1,
                    "find_first_element": 1,
                    "find_index_by_param": 1,
                    "find_integer_in_array": 1,
                    "find_key_value": 1,
                    "find_number_in_array": 1,
                    "find_param_value": 1,
                    "find_parameter_value": 1,
                    "find_short": 2,
                    "find_target_value": 1,
                    "find_value": 4,
                    "find_value_by_index": 3,
                    "find_value_by_param": 1,
                    "find_value_in_array": 7,
                    "find_value_index": 3
                },
                "new_variable_name_1": {
                    "element": 1
                },
                "new_variable_name_2": {
                    "array_length": 1
                },
                "param_1": {
                    "desired_value": 1,
                    "element": 1,
                    "index": 2,
                    "key": 1,
                    "param": 1,
                    "search_value": 2,
                    "target": 4,
                    "target_param": 1,
                    "target_value": 6,
                    "value": 7,
                    "value_to_find": 5
                },
                "param_2": {
                    "array": 20,
                    "array_ptr": 2,
                    "data": 1,
                    "data_array": 4,
                    "short_array": 4
                }
            },
            "called": [
                "FUN_08003506"
            ],
            "calling": [
                "FUN_08003506",
                "FUN_0800351e"
            ],
            "code": "\nint find_value_in_array_08003506(int value,short *array)\n\n{\n  while( true ) {\n    if (*(int *)(array + 2) == 0) {\n      return -1;\n    }\n    if (*(int *)(array + 2) == value) break;\n    array = array + 6;\n  }\n  return (int)*array;\n}\n\n",
            "current_name": "find_value_in_array_08003506",
            "entrypoint": "0x08003506",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003506": "find_value_in_array_08003506",
                "param_1": "value",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800351e": {
            "additional_data": {
                "FUN_08003506": {
                    "calculate_result": 1,
                    "get_return_value": 1,
                    "get_value": 1,
                    "process_data": 2
                },
                "FUN_0800351e": {
                    "check_condition": 1,
                    "check_for_non_zero": 1,
                    "check_input_value": 1,
                    "check_nonzero_param": 1,
                    "check_param": 9,
                    "check_param_value": 1,
                    "check_parameter": 6,
                    "check_return_value": 2,
                    "check_valid_param": 1,
                    "check_value": 1,
                    "convert_param_to_result": 1,
                    "evaluate_param": 1,
                    "execute_function": 1,
                    "get_result_code": 1,
                    "process_parameter": 1,
                    "validate_input": 2
                },
                "param_1": {
                    "input": 5,
                    "input_param": 8,
                    "input_parameter": 1,
                    "input_value": 11,
                    "param": 1,
                    "value": 5
                },
                "param_2": {
                    "data_array": 1
                },
                "uVar1": {
                    "result": 25,
                    "return_value": 4
                }
            },
            "called": [
                "FUN_08003506"
            ],
            "calling": [
                "FUN_08003cc8",
                "FUN_0800447c"
            ],
            "code": "\nundefined4 check_param_value_0800351e(int input_value)\n\n{\n  undefined4 result;\n  \n  if (input_value != 0) {\n    result = FUN_08003506();\n    return result;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "check_param_value_0800351e",
            "entrypoint": "0x0800351e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800351e": "check_param_value_0800351e",
                "param_1": "input_value",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800352e": {
            "additional_data": {
                "FUN_0800352e": {
                    "find_element": 1,
                    "find_index": 1,
                    "find_index_by_value": 1,
                    "find_matching_value": 1,
                    "find_next_value": 1,
                    "find_offset": 1,
                    "find_parameter": 1,
                    "find_value": 5,
                    "find_value_by_index": 1,
                    "find_value_in_array": 9,
                    "find_value_index": 8,
                    "find_value_position": 1
                },
                "break": {
                    "found": 1,
                    "found_value": 1
                },
                "param_1": {
                    "element": 1,
                    "index": 1,
                    "search_value": 2,
                    "target_value": 9,
                    "value": 3,
                    "value_to_find": 15
                },
                "param_2": {
                    "array": 19,
                    "array_of_values": 4,
                    "array_ptr": 2,
                    "data_array": 5,
                    "values": 1
                },
                "return": {
                    "found_value": 1,
                    "value_found": 1
                },
                "return_value": {
                    "found_value": 1
                },
                "short": {
                    "int16_t": 1
                },
                "undefined4": {
                    "uint32_t": 1
                }
            },
            "called": [
                "FUN_0800352e"
            ],
            "calling": [
                "FUN_0800354a",
                "FUN_0800352e"
            ],
            "code": "\nuint32_t find_value_by_index_0800352e(int value_to_find,int16_t *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      found_value 0xffffffff;\n    }\n    if (*array == value_to_find) found_value;\n    array = array + 6;\n  }\n  found_value *(uint32_t *)(array + 4);\n}\n\n",
            "current_name": "find_value_by_index_0800352e",
            "entrypoint": "0x0800352e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800352e": "find_value_by_index_0800352e",
                "break": "found_value",
                "param_1": "value_to_find",
                "param_2": "array",
                "return": "found_value",
                "short": "int16_t",
                "undefined4": "uint32_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800354a": {
            "additional_data": {
                "FUN_0800352e": {
                    "get_updated_value": 1
                },
                "FUN_0800354a": {
                    "calculate_result": 2,
                    "calculate_return_value": 2,
                    "check_and_execute_operation": 1,
                    "check_error_condition": 1,
                    "check_input": 1,
                    "check_param": 2,
                    "check_param_and_return_result": 1,
                    "check_parameter": 1,
                    "check_parameter_value": 1,
                    "check_return_value": 2,
                    "convert_negative_one_to_uint32": 1,
                    "convert_param_to_flag": 1,
                    "convert_to_unsigned": 1,
                    "convert_value": 1,
                    "find_value_or_call_sub": 1,
                    "get_result": 1,
                    "get_return_value": 3,
                    "process_input": 1,
                    "process_param": 3,
                    "process_parameter": 1,
                    "process_return_value": 1,
                    "validate_input": 1
                },
                "param_1": {
                    "error_code": 1,
                    "input": 4,
                    "input_param": 2,
                    "input_parameter": 1,
                    "input_value": 18,
                    "return_value": 1,
                    "status": 1,
                    "status_flag": 1,
                    "value": 2
                },
                "param_2": {
                    "data": 1
                },
                "uVar1": {
                    "result": 19,
                    "return_value": 10
                }
            },
            "called": [
                "FUN_0800352e"
            ],
            "calling": [
                "FUN_08003414",
                "FUN_08003380",
                "FUN_0800339c",
                "FUN_08003978"
            ],
            "code": "\nundefined4 check_param_and_return_result_0800354a(int input_value)\n\n{\n  undefined4 result;\n  \n  if (input_value == -1) {\n    return 0xffffffff;\n  }\n  result = FUN_0800352e();\n  return result;\n}\n\n",
            "current_name": "check_param_and_return_result_0800354a",
            "entrypoint": "0x0800354a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800354a": "check_param_and_return_result_0800354a",
                "param_1": "input_value",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800355e": {
            "additional_data": {
                "FUN_0800355e": {
                    "check_for_value_in_array": 1,
                    "check_target_value_in_array": 1,
                    "check_value_in_array": 3,
                    "compare_and_find": 1,
                    "compare_value": 1,
                    "find_element": 2,
                    "find_element_in_array": 1,
                    "find_match": 2,
                    "find_matching_value": 2,
                    "find_value": 3,
                    "find_value_in_array": 11,
                    "find_value_in_list": 1,
                    "linear_search": 1,
                    "search_value": 1
                },
                "break_var": {
                    "found": 1
                },
                "param_1": {
                    "element_to_find": 1,
                    "input_value": 3,
                    "search_value": 3,
                    "target_value": 7,
                    "value": 12,
                    "value_to_compare": 1,
                    "value_to_find": 3,
                    "value_to_search": 1
                },
                "param_2": {
                    "array": 19,
                    "array_of_values": 3,
                    "array_pointer": 1,
                    "array_ptr": 2,
                    "list_of_values": 1,
                    "search_array": 2,
                    "value_array": 2,
                    "values": 1
                },
                "return_value": {
                    "is_found": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004110"
            ],
            "code": "\nundefined4 find_value_in_array_0800355e(int value,short *array)\n\n{\n  if (value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (value == *array) break;\n    array = array + 6;\n  }\n  return 1;\n}\n\n",
            "current_name": "find_value_in_array_0800355e",
            "entrypoint": "0x0800355e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800355e": "find_value_in_array_0800355e",
                "param_1": "value",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003582": {
            "additional_data": {
                "FUN_08003582": {
                    "check_non_zero": 1,
                    "check_non_zero_parameters": 1,
                    "compare": 1,
                    "compare_and_return": 2,
                    "compare_and_return_equal_param": 1,
                    "compare_and_return_if_not_equal": 1,
                    "compare_and_return_min": 1,
                    "compare_and_return_non_zero": 3,
                    "compare_and_return_nonzero": 1,
                    "compare_and_return_smaller": 4,
                    "compare_and_return_smallest": 1,
                    "compare_and_return_zero": 4,
                    "find_common_value": 1,
                    "find_different_value": 1,
                    "find_non_zero": 3,
                    "find_nonzero": 1,
                    "find_nonzero_param": 2,
                    "find_nonzero_value": 1,
                    "return_smaller_value": 1
                },
                "param_1": {
                    "compare_result": 1,
                    "first_number": 1,
                    "first_param": 1,
                    "input1": 1,
                    "input_1": 1,
                    "input_param_1": 1,
                    "num1": 1,
                    "number_1": 1,
                    "value1": 13,
                    "value_1": 8,
                    "value_a": 2
                },
                "param_2": {
                    "input2": 1,
                    "input_2": 1,
                    "input_param_2": 1,
                    "num2": 2,
                    "number_2": 1,
                    "second_number": 1,
                    "second_param": 1,
                    "value2": 13,
                    "value_2": 8,
                    "value_b": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08003978"
            ],
            "code": "\nint compare_and_return_non_zero_08003582(int value1,int value2)\n\n{\n  if (value1 != value2) {\n    if (value1 == 0) {\n      return value2;\n    }\n    if (value2 == 0) {\n      return value1;\n    }\n    value1 = 0;\n  }\n  return value1;\n}\n\n",
            "current_name": "compare_and_return_non_zero_08003582",
            "entrypoint": "0x08003582",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003582": "compare_and_return_non_zero_08003582",
                "param_1": "value1",
                "param_2": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003594": {
            "additional_data": {
                "DAT_20000188": {
                    "callback": 1,
                    "callback_function": 13,
                    "callback_function_pointer": 6,
                    "function_pointer": 1
                },
                "DAT_200001ac": {
                    "callback_data": 11,
                    "callback_function_argument": 2,
                    "callback_function_data": 1,
                    "callback_function_parameter": 2,
                    "callback_parameter": 6,
                    "parameter": 3
                },
                "FUN_08003594": {
                    "execute_callback": 18,
                    "execute_callback_function": 10,
                    "execute_callback_if_set": 1,
                    "execute_function_if_not_null": 1,
                    "execute_if_not_null": 1
                },
                "callback": {
                    "callback": 2
                },
                "callbackFunction": {
                    "callback_function": 3
                },
                "code": {
                    "callback": 1,
                    "callback_function": 3,
                    "function_pointer": 1
                },
                "executeCallback": {
                    "execute_callback": 4
                },
                "executeCallbackFunction": {
                    "execute_callback_function": 1
                },
                "executeIfNotNull": {
                    "execute_if_not_null": 1
                },
                "executeIfNotNullParam": {
                    "param": 1
                },
                "void": {
                    "void": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800262c"
            ],
            "code": "\nvoid execute_callback_function_08003594(void)\n\n{\n  if (DAT_20000188 != (callback_function *)0x0) {\n    (*DAT_20000188)(DAT_200001ac);\n  }\n  return;\n}\n\n",
            "current_name": "execute_callback_function_08003594",
            "entrypoint": "0x08003594",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003594": "execute_callback_function_08003594",
                "code": "callback_function"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080035bc": {
            "additional_data": {
                "0x24003010": {
                    "memory_layout_config": 1
                },
                "0xfef2ffff": {
                    "memory_config_mask": 1
                },
                "FUN_080035bc": {
                    "configure_peripherals": 1,
                    "initialize_data": 2,
                    "initialize_data_registers": 1,
                    "initialize_device": 4,
                    "initialize_hardware": 1,
                    "initialize_memory": 3,
                    "initialize_peripheral": 1,
                    "initialize_registers": 5,
                    "initialize_settings": 1,
                    "initialize_system": 11
                },
                "_080035bc": {
                    "initialize_memory": 1
                },
                "_40023804": {
                    "memory_address": 1
                },
                "_DAT_40023800": {
                    "config_value": 1,
                    "configuration_register": 1,
                    "control_register": 8,
                    "current_control_register_value": 1,
                    "data_register": 1,
                    "device_configuration": 1,
                    "device_control": 1,
                    "enable_interrupt_bit": 1,
                    "gpio_moder": 1,
                    "memory_config": 1,
                    "register3": 1,
                    "register_config": 1,
                    "register_value": 1,
                    "settings_value": 1,
                    "status_register": 1,
                    "sys_config_value": 1,
                    "system_config_value": 1,
                    "system_control_register": 2,
                    "system_flags": 1,
                    "system_status": 1,
                    "variable3": 1
                },
                "_DAT_40023804": {
                    "base_address": 7,
                    "control_register": 1,
                    "control_register_address": 1,
                    "device_config": 1,
                    "device_configuration": 1,
                    "device_register": 1,
                    "gpio_otyper": 1,
                    "interrupt_register": 1,
                    "memory_address": 2,
                    "memory_config": 1,
                    "memory_layout_addr": 1,
                    "register2": 1,
                    "register_address": 1,
                    "register_pointer": 1,
                    "set_interrupt_handler_address": 1,
                    "settings_address": 1,
                    "sys_config_address": 1,
                    "system_config_address": 1,
                    "system_configuration": 1,
                    "timer_control_register": 2,
                    "variable2": 1
                },
                "_DAT_40023808": {
                    "clear_interrupt_flag": 1,
                    "device_status": 1,
                    "flag": 1,
                    "gpio_ospeedr": 1,
                    "register1": 1,
                    "reset_flag": 1,
                    "some_flag": 1,
                    "status_register": 1,
                    "variable1": 1
                },
                "_DAT_4002380c": {
                    "counter": 2,
                    "device_counter": 1,
                    "error_register": 1,
                    "gpio_pupdr": 1,
                    "initialize_interrupt_priority": 1,
                    "register4": 1,
                    "status": 1,
                    "status_register": 1,
                    "system_status": 1,
                    "variable4": 1
                },
                "_DAT_e000ed08": {
                    "control_register": 1,
                    "exception_enable": 1,
                    "flash_memory_address": 1,
                    "interrupt_clear_register": 1,
                    "interrupt_config": 2,
                    "interrupt_control": 3,
                    "interrupt_control_register": 2,
                    "interrupt_enable_register": 4,
                    "interrupt_mask": 1,
                    "interrupt_register": 2,
                    "interrupt_status_register": 1,
                    "memory_control_register": 1,
                    "nvic_iser0": 2,
                    "register5": 1,
                    "reset_flag": 1,
                    "system_control": 1,
                    "system_control_register": 2,
                    "system_control_register_address": 1,
                    "system_interrupt_control": 1,
                    "variable5": 1
                },
                "_e000ed08": {
                    "flash_memory_control": 1
                }
            },
            "called": [],
            "calling": [
                "entry"
            ],
            "code": "\n\n\nvoid initialize_system_080035bc(void)\n\n{\n  _DAT_40023808 = 0;\n  _DATmemory_address = 0x24003010;\n  _DAT_40023800 = _DAT_40023800 & 0xfef2ffff | 1;\n  _DAT_4002380c = 0;\n  _DATflash_memory_control = 0x8000000;\n  return;\n}\n\n",
            "current_name": "initialize_system_080035bc",
            "entrypoint": "0x080035bc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080035bc": "initialize_system_080035bc",
                "_080035bc": "initialize_memory",
                "_40023804": "memory_address",
                "_e000ed08": "flash_memory_control"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080035fc": {
            "additional_data": {
                "0x40000000": {
                    "flag_b": 1
                },
                "0x40000400": {
                    "flag_c": 1
                },
                "0x40000800": {
                    "flag_d": 1
                },
                "0x40000c00": {
                    "flag_e": 1
                },
                "0x40001000": {
                    "flag_f": 1
                },
                "0x40001400": {
                    "flag_g": 1
                },
                "0x40001800": {
                    "flag_l": 1
                },
                "0x40001c00": {
                    "flag_m": 1
                },
                "0x40002000": {
                    "flag_n": 1
                },
                "0x40010000": {
                    "flag_a": 1
                },
                "0x40010400": {
                    "flag_h": 1
                },
                "0x40014000": {
                    "flag_i": 1
                },
                "0x40014400": {
                    "flag_j": 1
                },
                "0x40014800": {
                    "flag_k": 1
                },
                "FUN_080035fc": {
                    "clear_bits_based_on_value": 1,
                    "clear_data_register_flags": 1,
                    "clear_flags": 4,
                    "clear_registers": 1,
                    "update_config_flags": 1,
                    "update_config_values": 1,
                    "update_configuration": 3,
                    "update_data": 1,
                    "update_data_based_on_param": 1,
                    "update_data_based_on_value": 1,
                    "update_data_with_flags": 1,
                    "update_flags_based_on_param": 3,
                    "update_flags_based_on_param_value": 1,
                    "update_flags_based_on_value": 1,
                    "update_global_data_flags": 1,
                    "update_memory_access_config": 1,
                    "update_memory_permissions": 1,
                    "update_memory_protection": 1,
                    "update_registers": 3,
                    "update_settings": 3
                },
                "_DAT_40023840": {
                    "_flag_mask1": 1,
                    "_updated_var2": 1,
                    "config_flags1": 1,
                    "config_register2": 1,
                    "data_field2": 1,
                    "data_register2": 1,
                    "data_register_2": 1,
                    "data_register_b": 2,
                    "data_value1": 1,
                    "external_register2": 1,
                    "flag2": 5,
                    "flag_register2": 2,
                    "hardware_status_b": 1,
                    "memory_access_config_1": 1,
                    "permissions_var2": 1,
                    "register1": 1,
                    "register2": 3,
                    "register_b": 2,
                    "setting_b": 1,
                    "var2": 1
                },
                "_DAT_40023844": {
                    "_flag_mask2": 1,
                    "_updated_var1": 1,
                    "config_flags2": 1,
                    "config_register1": 1,
                    "data_field1": 1,
                    "data_register1": 1,
                    "data_register_1": 1,
                    "data_register_a": 2,
                    "data_value2": 1,
                    "external_register1": 1,
                    "flag1": 5,
                    "flag_register1": 2,
                    "hardware_status_a": 1,
                    "memory_access_config_2": 1,
                    "permissions_var1": 1,
                    "register1": 3,
                    "register2": 1,
                    "register_a": 2,
                    "setting_a": 1,
                    "var1": 1
                },
                "param_1": {
                    "address": 2,
                    "config_value": 4,
                    "configuration": 1,
                    "data": 4,
                    "data_flag": 1,
                    "flag": 2,
                    "input_value": 2,
                    "memory_address": 1,
                    "param": 3,
                    "param_ptr": 1,
                    "register": 1,
                    "register_value": 2,
                    "setting_value": 1,
                    "settings": 2,
                    "value": 3
                },
                "param_1_orig": {
                    "settings": 1
                },
                "param_2": {
                    "new_param_name": 1,
                    "new_parameter_name_2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800340c"
            ],
            "code": "\n\n\nvoid update_data_based_on_param_080035fc(int *data)\n\n{\n  if (*data == 0x40010000) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffffffe;\n  }\n  if (*data == 0x40000000) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffe;\n  }\n  if (*data == 0x40000400) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffd;\n  }\n  if (*data == 0x40000800) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffb;\n  }\n  if (*data == 0x40000c00) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffff7;\n  }\n  if (*data == 0x40001000) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffef;\n  }\n  if (*data == 0x40001400) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffdf;\n  }\n  if (*data == 0x40010400) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffffffd;\n  }\n  if (*data == 0x40014000) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffeffff;\n  }\n  if (*data == 0x40014400) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffdffff;\n  }\n  if (*data == 0x40014800) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffbffff;\n  }\n  if (*data == 0x40001800) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffbf;\n  }\n  if (*data == 0x40001c00) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffff7f;\n  }\n  if (*data == 0x40002000) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffeff;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_based_on_param_080035fc",
            "entrypoint": "0x080035fc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080035fc": "update_data_based_on_param_080035fc",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003750": {
            "additional_data": {
                "FUN_08003750": {
                    "decrement_param": 1,
                    "subtract_by_four": 1,
                    "subtract_four": 28,
                    "subtract_value_by_four": 1
                },
                "param_1": {
                    "decremented_value": 1,
                    "input": 7,
                    "input_num": 2,
                    "input_number": 2,
                    "input_value": 5,
                    "new_value": 1,
                    "num": 1,
                    "output": 1,
                    "result": 11
                },
                "param_2": {
                    "new_value": 1,
                    "output": 1
                },
                "return": {
                    "result": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08003754",
                "FUN_0800376e"
            ],
            "code": "\nint subtract_value_by_four_08003750(int result)\n\n{\n  result result + -4;\n}\n\n",
            "current_name": "subtract_value_by_four_08003750",
            "entrypoint": "0x08003750",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003750": "subtract_value_by_four_08003750",
                "param_1": "result",
                "return": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003754": {
            "additional_data": {
                "0x48": {
                    "function_address": 1,
                    "function_pointer_offset": 1
                },
                "FUN_08003750": {
                    "get_callback": 2,
                    "get_callback_address": 1,
                    "get_callback_function": 1,
                    "get_function_address": 1,
                    "get_function_pointer": 4,
                    "get_result": 3
                },
                "FUN_08003754": {
                    "execute_action_if_condition_met": 2,
                    "execute_callback": 4,
                    "execute_callback_if_condition_met": 1,
                    "execute_callback_if_enabled": 3,
                    "execute_callback_if_needed": 3,
                    "execute_callback_if_param_set": 1,
                    "execute_callback_if_valid": 1,
                    "execute_code_if_valid": 1,
                    "execute_function": 2,
                    "execute_function_if_condition": 1,
                    "execute_function_if_condition_met": 4,
                    "execute_function_if_enabled": 1,
                    "execute_function_if_true": 1,
                    "execute_if_condition_is_met": 1,
                    "execute_if_condition_true": 1,
                    "execute_if_flag_is_set": 1,
                    "execute_if_function_and_param_valid": 1,
                    "execute_if_valid_callback": 1
                },
                "code": {
                    "callback_type": 1,
                    "function_pointer": 1
                },
                "iVar1": {
                    "callback": 1,
                    "callback_function": 2,
                    "callback_handler": 2,
                    "callback_ptr": 1,
                    "callback_result": 4,
                    "callback_value": 1,
                    "function_address": 1,
                    "function_pointer": 4,
                    "function_result": 6,
                    "result": 6,
                    "return_value": 2,
                    "sub_function_result": 1
                },
                "param_1": {
                    "": 1,
                    "callback_argument": 1,
                    "callback_data": 4,
                    "callback_info": 1,
                    "callback_param": 5,
                    "callback_parameter": 3,
                    "flag_value": 1,
                    "function_input": 1,
                    "function_param": 1,
                    "input": 5,
                    "input_param": 1,
                    "input_parameter": 5,
                    "input_value": 1,
                    "param": 1
                }
            },
            "called": [
                "FUN_08003750"
            ],
            "calling": [
                "FUN_080026ce"
            ],
            "code": "\nvoid execute_if_function_and_param_valid_08003754(int input)\n\n{\n  int function_result;\n  \n  function_result = FUN_08003750();\n  if ((*(callback_type **)(function_result + 0x48) != (callback_type *)0x0) && (*(char *)(input + 0x18) == '\\x01')) {\n    (**(callback_type **)(function_result + 0x48))(function_result,0);\n  }\n  return;\n}\n\n",
            "current_name": "execute_if_function_and_param_valid_08003754",
            "entrypoint": "0x08003754",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003754": "execute_if_function_and_param_valid_08003754",
                "code": "callback_type",
                "iVar1": "function_result",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800376e": {
            "additional_data": {
                "FUN_08003750": {
                    "get_callback_address": 3,
                    "get_callback_function": 1,
                    "get_callback_function_address": 1,
                    "get_callback_handler": 1,
                    "get_function_address": 5,
                    "get_function_pointer": 11,
                    "get_pointer": 2,
                    "get_sub_function_address": 1,
                    "get_sub_function_pointer": 1,
                    "get_subfunction_address": 1,
                    "get_valid_function": 1
                },
                "FUN_0800376e": {
                    "execute_callback": 8,
                    "execute_callback_function": 1,
                    "execute_code": 1,
                    "execute_function": 9,
                    "execute_function_from_binary": 1,
                    "execute_hook": 1,
                    "execute_if_valid_function": 1,
                    "execute_optional_function": 1,
                    "execute_sub_function": 7,
                    "execute_subfunction": 1
                },
                "iVar1": {
                    "callback_address": 1,
                    "callback_function_pointer": 1,
                    "callback_handler_address": 1,
                    "function_address": 1,
                    "function_pointer": 9,
                    "function_ptr": 1,
                    "pointer": 2,
                    "ptr_to_function": 1,
                    "result": 3,
                    "return_value": 2,
                    "sub_function_address": 1,
                    "sub_function_pointer": 1
                },
                "param_1": {
                    "input": 2,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_value": 2,
                    "sub_function_parameter": 1,
                    "value": 2
                }
            },
            "called": [
                "FUN_08003750"
            ],
            "calling": [
                "FUN_080026ce"
            ],
            "code": "\nvoid execute_sub_function_0800376e(void)\n\n{\n  int function_pointer;\n  \n  function_pointer = FUN_08003750();\n  if (*(code **)(function_pointer + 0x44) != (code *)0x0) {\n    (**(code **)(function_pointer + 0x44))();\n  }\n  return;\n}\n\n",
            "current_name": "execute_sub_function_0800376e",
            "entrypoint": "0x0800376e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800376e": "execute_sub_function_0800376e",
                "iVar1": "function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800377c": {
            "additional_data": {
                "DAT_200001b0": {
                    "check_flag_1": 1,
                    "condition_1": 1,
                    "flag_1": 1,
                    "variable1": 1,
                    "variable_one": 1
                },
                "DAT_200001d4": {
                    "check_flag_2": 1,
                    "condition_2": 1,
                    "flag_2": 1,
                    "variable2": 1,
                    "variable_two": 1
                },
                "FUN_080026ce": {
                    "call_sub_function": 3,
                    "call_subfunction": 1,
                    "execute_function": 10,
                    "execute_sub_function": 1,
                    "execute_subfunction": 1,
                    "execute_task": 1,
                    "invoke_function": 1,
                    "perform_action": 1,
                    "perform_task": 1,
                    "process_data": 7,
                    "reverse_data": 1
                },
                "FUN_0800377c": {
                    "check_and_call_functions": 10,
                    "check_and_call_subfunctions": 2,
                    "check_and_execute_functions": 8,
                    "check_data_and_call_function": 1,
                    "check_data_and_invoke_function": 1,
                    "check_flag_conditions": 1,
                    "check_flags": 1,
                    "execute_if_condition_is_true": 1,
                    "execute_if_condition_true": 1,
                    "execute_if_conditions_met": 1,
                    "execute_if_data_exists": 2,
                    "execute_if_flags_are_set": 1,
                    "execute_if_flags_set": 1
                },
                "param_1": {
                    "arguments": 1,
                    "array_pointer": 1,
                    "data": 3,
                    "data_array": 2,
                    "data_ptr": 1,
                    "function_argument": 1,
                    "function_list": 1,
                    "function_parameter": 1,
                    "function_params": 1,
                    "input_array": 2,
                    "input_param": 1,
                    "param_array": 2,
                    "parameter": 1,
                    "ptr": 1,
                    "ptr_param": 1,
                    "result_pointer": 1,
                    "task_arguments": 1
                }
            },
            "called": [
                "FUN_080026ce"
            ],
            "calling": [],
            "code": "\nvoid check_and_call_functions_0800377c(void)\n\n{\n  if (DAT_200001b0 != 0) {\n    FUN_080026ce();\n  }\n  if (DAT_200001d4 != 0) {\n    FUN_080026ce();\n  }\n  return;\n}\n\n",
            "current_name": "check_and_call_functions_0800377c",
            "entrypoint": "0x0800377c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800377c": "check_and_call_functions_0800377c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800387c": {
            "additional_data": {
                "FUN_0800387c": {
                    "decrement_value": 1,
                    "subtract4": 2,
                    "subtract_by_four": 1,
                    "subtract_four": 26,
                    "subtract_four_from_param": 1
                },
                "local_1": {
                    "result": 1
                },
                "param_1": {
                    "input": 8,
                    "input_minus_four": 1,
                    "input_num": 4,
                    "input_number": 3,
                    "input_value": 2,
                    "num": 5,
                    "original_value": 1,
                    "result": 7
                },
                "param_2": {
                    "": 1
                },
                "return": {
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080038d0",
                "FUN_08003880",
                "FUN_08003900"
            ],
            "code": "\nint subtract_four_from_param_0800387c(int input)\n\n{\n  result input + -4;\n}\n\n",
            "current_name": "subtract_four_from_param_0800387c",
            "entrypoint": "0x0800387c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800387c": "subtract_four_from_param_0800387c",
                "param_1": "input",
                "return": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003880": {
            "additional_data": {
                "0x20": {
                    "constant1": 1,
                    "constant20": 1,
                    "constant_0x20": 1,
                    "value1": 1
                },
                "1": {
                    "constant_1": 1
                },
                "8": {
                    "constant8": 1,
                    "constant_8": 1,
                    "value2": 1
                },
                "DAT_": {
                    "": 1
                },
                "FUM_0800387c": {
                    "get_address": 1,
                    "get_initial_value": 1
                },
                "FUN_08001460": {
                    "copy_data": 1,
                    "display_widget_info": 1,
                    "perform_action1": 1,
                    "print_message": 1,
                    "process_data": 2,
                    "process_data1": 6,
                    "process_data_a": 4,
                    "process_data_case1": 1,
                    "process_input1": 1,
                    "process_result1": 1,
                    "set_initial_data": 1,
                    "set_parameters": 1,
                    "update_data": 2,
                    "update_data1": 1,
                    "update_param1": 1,
                    "write_data": 1
                },
                "FUN_080014ec": {
                    "modify_data": 1,
                    "perform_action": 1,
                    "perform_action2": 1,
                    "process_data2": 7,
                    "process_data_advanced": 1,
                    "process_data_b": 4,
                    "process_data_case2": 1,
                    "process_input2": 1,
                    "process_result2": 1,
                    "show_widget": 1,
                    "transform_data": 1,
                    "update_data2": 1,
                    "update_data_with_param": 1,
                    "update_param2": 1,
                    "update_parameters": 1,
                    "write_other_data": 1
                },
                "FUN_0800387c": {
                    "get_address": 1,
                    "get_function_return_value": 1,
                    "get_input_result": 1,
                    "get_integer": 1,
                    "get_pointer": 1,
                    "get_result": 6,
                    "get_return_value": 8,
                    "get_something": 1,
                    "get_temp_value": 1,
                    "get_updated_value": 1,
                    "get_widget_result": 1
                },
                "FUN_08003880": {
                    "check_param_and_call_function": 1,
                    "check_params": 1,
                    "check_params_and_process": 1,
                    "execute_command": 1,
                    "process_data": 8,
                    "process_input": 1,
                    "process_parameters": 3,
                    "process_params": 10,
                    "update_data": 2,
                    "update_function": 1,
                    "update_status": 1,
                    "update_widget": 1
                },
                "F_08001460": {
                    "update_data_v1": 1
                },
                "F_080014ec": {
                    "update_data_v2": 1
                },
                "F_0800387c": {
                    "get_updated_value": 1
                },
                "PTR_": {
                    "": 1
                },
                "fun_080014ec": {
                    "process_data2": 1
                },
                "iVar1": {
                    "address": 1,
                    "function_result": 1,
                    "local_var1": 1,
                    "result": 19,
                    "return_value": 7,
                    "temp_var": 1,
                    "updated_value": 1
                },
                "param_1": {
                    "address": 1,
                    "arg1": 2,
                    "data": 2,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "input": 3,
                    "input_addr": 1,
                    "input_array": 1,
                    "input_data": 4,
                    "input_param": 3,
                    "input_param1": 4,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "param1": 2,
                    "widget": 1
                },
                "param_2": {
                    "arg2": 2,
                    "condition": 1,
                    "data_ptr": 1,
                    "flag": 15,
                    "flag_param": 2,
                    "input_flag": 1,
                    "input_param2": 4,
                    "output_data": 1,
                    "param2": 2,
                    "param2_value": 1,
                    "ptr2": 1
                },
                "param_3": {
                    "arg3": 2,
                    "check": 1,
                    "check_param": 2,
                    "compare_value": 1,
                    "comparison_param": 1,
                    "comparison_value": 4,
                    "condition": 1,
                    "input_param3": 4,
                    "param1": 1,
                    "param3": 2,
                    "param3_value": 1,
                    "value": 11
                },
                "param_4": {
                    "arg4": 2,
                    "callback_function": 1,
                    "config": 1,
                    "data": 1,
                    "input_param4": 3,
                    "option": 1,
                    "param": 11,
                    "param2": 1,
                    "param4": 2,
                    "param4_value": 1,
                    "param_ptr": 1,
                    "param_value": 2,
                    "parameter": 1,
                    "undefined_param": 2,
                    "var3": 1
                }
            },
            "called": [
                "FUN_0800387c",
                "FUN_08001460",
                "FUN_080014ec"
            ],
            "calling": [
                "FUN_0800165a"
            ],
            "code": "\nvoid check_params_and_process_08003880(int input_param1,int flag,int value,undefined4 param)\n\n{\n  int result;\n  \n  result = FUN_0800387c();\n  if (value == *(int *)(input_param1 + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(result + 0x88) = 0;\n      *(undefined *)(result + 0x5e) = 0;\n      if (*(code **)(result + 100) != (code *)0x0) {\n        (**(code **)(result + 100))();\n      }\n      FUN_08001460(input_param1,result + 0x68,*(undefined *)(result + 0x88),8);\n      return;\n    }\n    *(undefined *)(result + 0x5e) = 1;\n    FUN_080014ec(input_param1,result + 0x68,0x20,8,param);\n  }\n  return;\n}\n\n",
            "current_name": "check_params_and_process_08003880",
            "entrypoint": "0x08003880",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003880": "check_params_and_process_08003880",
                "iVar1": "result",
                "param_1": "input_param1",
                "param_2": "flag",
                "param_3": "value",
                "param_4": "param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080038d0": {
            "additional_data": {
                "FUM_0800387c": {
                    "get_callback_function_pointer": 1
                },
                "FUNCH_0800387c": {
                    "get_function_pointer": 1
                },
                "FUN_08001578": {
                    "call_another_function": 1,
                    "cleanup": 2,
                    "cleanup_data": 1,
                    "cleanup_function": 2,
                    "cleanup_resources": 1,
                    "display_message": 1,
                    "finalize": 1,
                    "finalize_callback_execution": 1,
                    "finalize_execution": 4,
                    "handle_result": 1,
                    "log_result": 1,
                    "perform_cleanup": 8,
                    "perform_cleanup_operation": 2,
                    "perform_task": 1,
                    "print_result": 1,
                    "process_data": 2
                },
                "FUN_0800387c": {
                    "get_callback_pointer": 1,
                    "get_function_address": 7,
                    "get_function_pointer": 16,
                    "get_function_ptr": 2,
                    "get_function_result": 1,
                    "retrieve_function_address": 1
                },
                "FUN_080038d0": {
                    "execute_callback_if_conditions_met": 1,
                    "execute_callback_if_needed": 2,
                    "execute_code": 1,
                    "execute_command": 1,
                    "execute_decompiled_function": 1,
                    "execute_function": 21,
                    "execute_function_if_condition_met": 1,
                    "execute_function_with_condition": 1,
                    "execute_triggered_action": 1,
                    "invoke_sub_function": 1
                },
                "code": {
                    "function_pointer": 2
                },
                "iVar1": {
                    "callback_pointer": 1,
                    "function_address": 1,
                    "function_output": 1,
                    "function_pointer": 5,
                    "function_ptr": 1,
                    "function_result": 2,
                    "result": 13,
                    "return_value": 5,
                    "state": 1
                },
                "param_1": {
                    "arg": 1,
                    "argument": 4,
                    "callback_parameter": 2,
                    "command": 1,
                    "data": 2,
                    "input": 1,
                    "input_argument": 1,
                    "input_data": 1,
                    "input_param": 3,
                    "input_parameter": 2,
                    "param": 4,
                    "param_1": 1,
                    "parameter": 5,
                    "result2": 1,
                    "user_data": 1
                }
            },
            "called": [
                "FUN_0800387c",
                "FUN_08001578"
            ],
            "calling": [
                "FUN_08001bfc",
                "FUN_08001684",
                "FUN_08001ab0"
            ],
            "code": "\nvoid execute_decompiled_function_080038d0(undefined4 parameter)\n\n{\n  int result;\n  \n  result = FUN_0800387c();\n  if (((*(function_pointer **)(result + 0x60) != (function_pointer *)0x0) && (*(char *)(result + 0x5e) == '\\x01')) &&\n     (*(char *)(result + 0x2c) != ' ')) {\n    (**(function_pointer **)(result + 0x60))(result + 0x68);\n  }\n  FUN_08001578(parameter);\n  return;\n}\n\n",
            "current_name": "execute_decompiled_function_080038d0",
            "entrypoint": "0x080038d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080038d0": "execute_decompiled_function_080038d0",
                "code": "function_pointer",
                "iVar1": "result",
                "param_1": "parameter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003900": {
            "additional_data": {
                "FUN_08001578": {
                    "call_function": 5,
                    "call_sub_function": 3,
                    "execute_function": 11,
                    "invoke_function": 1,
                    "perform_action": 1,
                    "perform_specific_action": 1,
                    "process_data": 2,
                    "reverse_data": 1
                },
                "FUN_0800387c": {
                    "fetch_data": 1,
                    "get_char_address": 1,
                    "get_character_address": 1,
                    "get_count": 1,
                    "get_flag_address": 2,
                    "get_flag_value": 1,
                    "get_function_result": 1,
                    "get_memory_address": 2,
                    "get_memory_location": 1,
                    "get_offset": 1,
                    "get_pointer": 1,
                    "get_pointer_value": 2,
                    "get_result": 5,
                    "get_return_value": 4
                },
                "FUN_08003900": {
                    "check_and_call_function": 25,
                    "check_and_execute_function": 2,
                    "check_and_perform_action": 1,
                    "check_and_update_flag": 1,
                    "check_if_flag_set": 1,
                    "execute_if_flag_is_false": 1
                },
                "F_08001578": {
                    "execute_if_flag_not_set": 1
                },
                "F_0800387c": {
                    "get_flag_address": 1
                },
                "Fp": {
                    "return_value": 1
                },
                "iVar1": {
                    "character_address": 1,
                    "i_var": 1,
                    "result": 21,
                    "return_value": 6,
                    "var1": 1
                },
                "param_1": {
                    "arg": 3,
                    "arg1": 1,
                    "argument": 2,
                    "data": 3,
                    "input": 10,
                    "input_data": 1,
                    "input_param": 5,
                    "input_parameter": 3,
                    "input_value": 3
                }
            },
            "called": [
                "FUN_0800387c",
                "FUN_08001578"
            ],
            "calling": [
                "FUN_08001ab0"
            ],
            "code": "\nvoid check_and_call_function_08003900(undefined4 input)\n\n{\n  int result;\n  \n  result = FUN_0800387c();\n  if (*(char *)(result + 0x5f) == '\\0') {\n    FUN_08001578(input);\n  }\n  return;\n}\n\n",
            "current_name": "check_and_call_function_08003900",
            "entrypoint": "0x08003900",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003900": "check_and_call_function_08003900",
                "iVar1": "result",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003978": {
            "additional_data": {
                "DAT_08005c10": {
                    "uar_tpin_data2": 1,
                    "uart_peripheral2_data": 1
                },
                "DAT_08005ca0": {
                    "uar_tpin_data1": 1,
                    "uart_peripheral1_data": 1
                },
                "FUN_08000fb4": {
                    "configure_pin": 2,
                    "set_config": 1,
                    "set_peripheral_value": 1
                },
                "FUN_08002d72": {
                    "initialize_hardware": 1,
                    "initialize_peripheral": 1,
                    "initialize_peripherals": 1,
                    "perform_operation": 1
                },
                "FUN_080031fc": {
                    "calculate_config": 2,
                    "calculate_peripheral_value": 1,
                    "shift_config": 1
                },
                "FUN_080034f4": {
                    "get_peripheral": 2,
                    "get_peripheral_address": 1,
                    "get_pin_config": 1,
                    "get_pin_data": 1
                },
                "FUN_0800354a": {
                    "get_peripheral_settings": 1,
                    "get_pin_config": 2,
                    "get_pin_config2": 1
                },
                "FUN_08003582": {
                    "check_uart_pins": 1,
                    "check_uart_pins_mismatch": 1,
                    "compare_pins": 1,
                    "verify_uart_pins": 2
                },
                "FUN_08003978": {
                    "configure_peripheral": 1,
                    "configure_pin": 1,
                    "configure_uart": 2,
                    "configure_uart_pins": 11,
                    "initialize_peripheral": 1,
                    "initialize_uart": 2,
                    "initialize_uart_peripheral": 1,
                    "initialize_uart_pin": 1,
                    "initialize_uart_pins": 9,
                    "pin_configuration_setup": 1,
                    "set_uart_pins": 1
                },
                "FUN_08004fdc": {
                    "print_error": 4,
                    "print_error_message": 1
                },
                "_DAT_40023820": {
                    "register3": 2,
                    "uart_register3": 1
                },
                "_DAT_40023824": {
                    "register1": 2,
                    "uart_register1": 1
                },
                "_DAT_40023840": {
                    "register4": 2
                },
                "_DAT_40023844": {
                    "register2": 2,
                    "uart_register2": 1
                },
                "iVar1": {
                    "peripheral1": 1,
                    "pin1_periph": 1,
                    "pin1_peripheral": 2,
                    "pin_data1": 1,
                    "pin_peripheral1": 2,
                    "uart1_pin": 1,
                    "uart_perip1": 1,
                    "uart_periph1": 1,
                    "uart_peripheral1": 1,
                    "uart_peripheral_1": 1,
                    "uart_pin": 1,
                    "uart_pin1": 11,
                    "uart_pin1_config": 2,
                    "uart_pin1_peripheral": 1,
                    "uart_pin1_result": 1,
                    "uart_pin_config": 2,
                    "uart_pin_config1": 1
                },
                "iVar2": {
                    "gpio_pin": 1,
                    "peripheral2": 1,
                    "peripheral_config": 1,
                    "pin2_periph": 1,
                    "pin2_peripheral": 2,
                    "pin_data2": 1,
                    "pin_peripheral2": 2,
                    "uart2_pin": 1,
                    "uart_perip2": 1,
                    "uart_periph2": 1,
                    "uart_peripheral2": 1,
                    "uart_peripheral_2": 1,
                    "uart_peripheral_config": 1,
                    "uart_pin2": 11,
                    "uart_pin2_config": 2,
                    "uart_pin2_peripheral": 1,
                    "uart_pin2_result": 1,
                    "uart_pin_config2": 1
                },
                "local_1c": {
                    "bit_offset": 1,
                    "bit_pos": 1,
                    "gpio_config3": 1,
                    "local_var2": 1,
                    "parity": 1,
                    "pin2_alt_function": 1,
                    "pin2_config_value": 1,
                    "pin_alternate_function": 1,
                    "pin_config4": 2,
                    "pin_setting4": 1,
                    "pin_shift3": 1,
                    "shifted_pin_index": 1,
                    "stop_bits": 1,
                    "temp2": 1,
                    "uart_config4": 1,
                    "uart_config_flag4": 1,
                    "uart_control3": 1,
                    "uart_periph1": 1,
                    "uart_pin1_config_bits": 1,
                    "uart_pin1_mode": 1,
                    "uart_pin2_bits": 1,
                    "uart_pin2_mask": 1,
                    "uart_pin2_shift": 1,
                    "uart_pin_alternate_function": 1,
                    "uart_pin_config2": 1,
                    "uart_pin_config3": 1,
                    "uart_pin_config4": 1,
                    "uart_pin_delay": 1,
                    "uart_pin_shift3": 1,
                    "value_offset": 1
                },
                "local_20": {
                    "constant": 1,
                    "data_bits": 2,
                    "default_config": 1,
                    "local_var": 1,
                    "param": 1,
                    "pin1_alternate_mode": 1,
                    "pin_config3": 2,
                    "pin_pupd": 1,
                    "pin_setting3": 1,
                    "pin_shift2": 1,
                    "stop_bits": 1,
                    "temp": 1,
                    "uart_config": 1,
                    "uart_config2": 1,
                    "uart_config3": 2,
                    "uart_config_flag3": 1,
                    "uart_control2": 1,
                    "uart_function_value": 1,
                    "uart_periph2": 1,
                    "uart_pin1_alternate_function": 1,
                    "uart_pin1_bits": 1,
                    "uart_pin1_delay": 1,
                    "uart_pin1_shift": 1,
                    "uart_pin_config3": 1,
                    "uart_pin_count": 1,
                    "uart_pin_options": 1,
                    "uart_pin_shift2": 1
                },
                "local_24": {
                    "baud_rate_select_bits": 1,
                    "bit_shift": 2,
                    "bit_shifted_value": 2,
                    "data_bits": 1,
                    "gpio_config2": 1,
                    "pin1_alt_function": 1,
                    "pin1_config_value": 1,
                    "pin2_mask": 1,
                    "pin_config2": 2,
                    "pin_setting2": 1,
                    "pin_shift1": 1,
                    "pin_speed": 1,
                    "shifted_bits": 1,
                    "shifted_config": 1,
                    "shifted_value": 1,
                    "uart2_pin_config_other": 1,
                    "uart_config_flag2": 1,
                    "uart_control1": 1,
                    "uart_pin1_shift": 1,
                    "uart_pin2_alternate_function": 1,
                    "uart_pin2_shift": 1,
                    "uart_pin2_shifted_value": 1,
                    "uart_pin_config1": 1,
                    "uart_pin_config2": 2,
                    "uart_pin_high_speed": 1,
                    "uart_pin_shift": 1,
                    "uart_pin_shift1": 1
                },
                "local_28": {
                    "baud_rate": 1,
                    "bit_shift_value": 2,
                    "config": 1,
                    "config_bits": 2,
                    "config_value": 1,
                    "gpio_config1": 1,
                    "mode_select_bits": 1,
                    "pin2_bitmask": 1,
                    "pin2_config": 1,
                    "pin2_config_mask": 1,
                    "pin_config": 1,
                    "pin_config1": 2,
                    "pin_config_mask2": 1,
                    "pin_mode": 1,
                    "pin_setting1": 1,
                    "uart2_pin_config": 1,
                    "uart_config_flag1": 1,
                    "uart_mode": 1,
                    "uart_pin1_value": 1,
                    "uart_pin2_config": 1,
                    "uart_pin2_config_bits": 1,
                    "uart_pin2_mask": 1,
                    "uart_pin_config": 1,
                    "uart_pin_config1": 2,
                    "uart_pin_mask2": 1,
                    "uart_pin_mode": 1,
                    "uart_pin_settings": 1
                },
                "local_2c": {
                    "bit_mask": 2,
                    "bit_shift_mask": 1,
                    "mask": 3,
                    "output_enable_bit": 1,
                    "pin1_bitmask": 1,
                    "pin1_config_mask": 1,
                    "pin1_mask": 1,
                    "pin_bit_mask1": 1,
                    "pin_bitmask": 1,
                    "pin_config_mask1": 1,
                    "pin_flag": 1,
                    "pin_mask": 3,
                    "pin_mask1": 2,
                    "uart1_pin_mask": 1,
                    "uart_pin1_mask": 3,
                    "uart_pin2_bit": 1,
                    "uart_pin_mask": 4,
                    "uart_pin_mask1": 3
                },
                "param_1": {
                    "peripheral_configuration": 1,
                    "pin_config": 10,
                    "pin_configuration": 1,
                    "pin_mappings": 1,
                    "pin_settings": 1,
                    "pins": 5,
                    "uart_config": 3,
                    "uart_pin": 1,
                    "uart_pins": 8
                },
                "uVar3": {
                    "config1": 1,
                    "peripheral": 1,
                    "pin2_mode": 1,
                    "uar_tpin_config1": 1,
                    "uart1_config": 1,
                    "uart_address": 1,
                    "uart_config1": 10,
                    "uart_config_value": 1,
                    "uart_configuration": 1,
                    "uart_periph": 1,
                    "uart_periph1": 1,
                    "uart_peripheral": 1,
                    "uart_peripheral1": 2,
                    "uart_pin1_config": 2,
                    "uart_pin1_port": 1,
                    "uart_pin1_value": 1,
                    "uart_pin2_config": 1,
                    "uart_pin_mode1": 1,
                    "uart_pins_1": 1,
                    "uart_port": 1
                },
                "uVar4": {
                    "config2": 1,
                    "gpio_configuration": 1,
                    "pin1_mode": 1,
                    "pin_config_value": 1,
                    "uar_tpin_config2": 1,
                    "uart2_config": 1,
                    "uart_config": 2,
                    "uart_config2": 10,
                    "uart_periph2": 1,
                    "uart_peripheral2": 2,
                    "uart_pin": 1,
                    "uart_pin1_config": 1,
                    "uart_pin2_config": 2,
                    "uart_pin2_port": 1,
                    "uart_pin2_value": 1,
                    "uart_pin_config": 1,
                    "uart_pin_mode2": 1,
                    "uart_pins_2": 1,
                    "uart_settings": 1
                }
            },
            "called": [
                "FUN_08004fdc",
                "FUN_080034f4",
                "FUN_08000fb4",
                "FUN_0800354a",
                "FUN_080031fc",
                "FUN_08002d72",
                "FUN_08003582"
            ],
            "calling": [
                "FUN_08003cc8",
                "FUN_08004388"
            ],
            "code": "\n\n\nvoid configure_uart_pins_08003978(int *pin_config)\n\n{\n  int uart_pin1;\n  int uart_pin2;\n  undefined4 uart_config1;\n  uint uart_config2;\n  uint uart_pin_mask;\n  uint config_bits;\n  uint bit_shift;\n  undefined4 data_bits;\n  uint pin_config4;\n  \n  if (pin_config != (int *)0x0) {\n    uart_pin1 = FUN_080034f4((int)*(short *)(pin_config + 0x16),&DAT_08005ca0);\n    uart_pin2 = FUN_080034f4((int)*(short *)((int)pin_config + 0x5a),&DAT_08005c10);\n    if ((uart_pin2 == 0) || (uart_pin1 == 0)) {\n      FUN_08004fdc(\"ERROR: at least one UART pin has no peripheral\\n\",uart_pin2);\n    }\n    else {\n      uart_pin1 = FUN_08003582(uart_pin1);\n      *pin_config = uart_pin1;\n      if (uart_pin1 == 0) {\n        FUN_08004fdc(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uart_pin1 == 0x40011000) {\n          _DAT_40023824 = _DAT_40023824 & 0xffffffef;\n          _DAT_40023844 = _DAT_40023844 | 0x10;\n          *(undefined *)(pin_config + 0x11) = 0;\n          *(undefined *)(pin_config + 0x17) = 0x25;\n        }\n        else if (uart_pin1 == 0x40004400) {\n          _DAT_40023820 = _DAT_40023820 & 0xfffdffff;\n          _DAT_40023840 = _DAT_40023840 | 0x20000;\n          *(undefined *)(pin_config + 0x11) = 1;\n          *(undefined *)(pin_config + 0x17) = 0x26;\n        }\n        else if (uart_pin1 == 0x40004800) {\n          _DAT_40023820 = _DAT_40023820 & 0xfffbffff;\n          _DAT_40023840 = _DAT_40023840 | 0x40000;\n          *(undefined *)(pin_config + 0x11) = 2;\n          *(undefined *)(pin_config + 0x17) = 0x27;\n        }\n        else if (uart_pin1 == 0x40004c00) {\n          _DAT_40023820 = _DAT_40023820 & 0xfff7ffff;\n          _DAT_40023840 = _DAT_40023840 | 0x80000;\n          *(undefined *)(pin_config + 0x11) = 3;\n          *(undefined *)(pin_config + 0x17) = 0x34;\n        }\n        else if (uart_pin1 == 0x40005000) {\n          _DAT_40023820 = _DAT_40023820 & 0xffefffff;\n          _DAT_40023840 = _DAT_40023840 | 0x100000;\n          *(undefined *)(pin_config + 0x11) = 4;\n          *(undefined *)(pin_config + 0x17) = 0x35;\n        }\n        else if (uart_pin1 == 0x40011400) {\n          _DAT_40023824 = _DAT_40023824 & 0xffffffdf;\n          _DAT_40023844 = _DAT_40023844 | 0x20;\n          *(undefined *)(pin_config + 0x11) = 5;\n          *(undefined *)(pin_config + 0x17) = 0x47;\n        }\n        else if (uart_pin1 == 0x40007800) {\n          _DAT_40023820 = _DAT_40023820 & 0xbfffffff;\n          _DAT_40023840 = _DAT_40023840 | 0x40000000;\n          *(undefined *)(pin_config + 0x11) = 6;\n          *(undefined *)(pin_config + 0x17) = 0x52;\n        }\n        else if (uart_pin1 == 0x40007c00) {\n          _DAT_40023820 = _DAT_40023820 & 0x7fffffff;\n          _DAT_40023840 = _DAT_40023840 | 0x80000000;\n          *(undefined *)(pin_config + 0x11) = 7;\n          *(undefined *)(pin_config + 0x17) = 0x53;\n        }\n        uart_config1 = FUN_080031fc((uint)((int)*(short *)((int)pin_config + 0x5a) << 0x18) >> 0x1c);\n        uart_config2 = FUN_0800354a((int)*(short *)((int)pin_config + 0x5a),&DAT_08005c10);\n        uart_pin_mask = 1 << (*(ushort *)((int)pin_config + 0x5a) & 0xf) & 0xffff;\n        config_bits = (uart_config2 >> 3 & 1) << 4 | uart_config2 & 7;\n        bit_shift = (uart_config2 << 0x1a) >> 0x1e;\n        pin_config4 = (uart_config2 << 0x11) >> 0x19;\n        data_bits = 3;\n        FUN_08000fb4(uart_config1,&uart_pin_mask);\n        uart_config1 = FUN_080031fc((uint)((int)*(short *)(pin_config + 0x16) << 0x18) >> 0x1c);\n        uart_config2 = FUN_0800354a((int)*(short *)(pin_config + 0x16),&DAT_08005ca0);\n        uart_pin_mask = 1 << (*(ushort *)(pin_config + 0x16) & 0xf) & 0xffff;\n        config_bits = (uart_config2 >> 3 & 1) << 4 | uart_config2 & 7;\n        bit_shift = (uart_config2 << 0x1a) >> 0x1e;\n        FUN_08000fb4(uart_config1,&uart_pin_mask);\n        (&DAT_200002b4)[*(byte *)(pin_config + 0x11)] = pin_config + 1;\n        pin_config[1] = *pin_config;\n        pin_config[2] = pin_config[0x12];\n        pin_config[3] = pin_config[0x13];\n        pin_config[4] = pin_config[0x14];\n        pin_config[5] = pin_config[0x15];\n        pin_config[6] = 0xc;\n        pin_config[7] = 0;\n        pin_config[8] = 0;\n        FUN_08002d72(pin_config + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "configure_uart_pins_08003978",
            "entrypoint": "0x08003978",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003978": "configure_uart_pins_08003978",
                "iVar1": "uart_pin1",
                "iVar2": "uart_pin2",
                "local_1c": "pin_config4",
                "local_20": "data_bits",
                "local_24": "bit_shift",
                "local_28": "config_bits",
                "local_2c": "uart_pin_mask",
                "param_1": "pin_config",
                "uVar3": "uart_config1",
                "uVar4": "uart_config2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003cc8": {
            "additional_data": {
                "0x38": {
                    "data_size": 2
                },
                "DAT_08005c10": {
                    "constant2": 1,
                    "data3": 1,
                    "data_info": 1
                },
                "DAT_08005ca0": {
                    "constant1": 1,
                    "data1": 1,
                    "data_chunk": 1
                },
                "DAT_20000030": {
                    "data": 1,
                    "data_buffer": 2
                },
                "DAT_20000078": {
                    "buffer_size": 1,
                    "constant1": 2,
                    "constant_value1": 1,
                    "data3": 2,
                    "data_value_1": 1,
                    "variable2": 1,
                    "variable_c": 1
                },
                "DAT_2000007c": {
                    "constant3": 2,
                    "constant_value3": 1,
                    "data5": 2,
                    "data_value_3": 1,
                    "offset": 1,
                    "variable4": 1,
                    "variable_e": 1
                },
                "DAT_20000080": {
                    "constant4": 2,
                    "constant_value4": 1,
                    "data6": 2,
                    "data_value_4": 1,
                    "value": 1,
                    "variable5": 1,
                    "variable_f": 1
                },
                "DAT_20000084": {
                    "constant2": 2,
                    "constant_value2": 1,
                    "count": 1,
                    "data4": 2,
                    "data_value_2": 1,
                    "variable3": 1,
                    "variable_d": 1
                },
                "DAT_20000088": {
                    "data2": 2,
                    "data_size": 3,
                    "data_size2": 1,
                    "data_size_var": 1,
                    "variable1": 1,
                    "variable_b": 1
                },
                "DAT_2000008a": {
                    "data1": 2,
                    "data2": 1,
                    "data_ptr": 1,
                    "processed_address": 1,
                    "processed_data": 1,
                    "result2": 1,
                    "result_var": 1,
                    "variable_a": 1
                },
                "FUN_080034f4": {
                    "allocate_memory": 3,
                    "fetch_data": 1,
                    "find_address": 1,
                    "find_data_size": 1,
                    "get_address": 1,
                    "get_data": 3,
                    "get_info": 1,
                    "get_initial_value": 1,
                    "get_memory": 1,
                    "get_memory_address": 1,
                    "get_user_data": 1,
                    "get_value": 1,
                    "perform_action1": 1,
                    "retrieve_data": 1
                },
                "FUN_0800351e": {
                    "calculate_checksum": 1,
                    "calculate_result": 1,
                    "copy_data": 3,
                    "initialize_data": 1,
                    "manipulate_data": 1,
                    "perform_action2": 1,
                    "process_address": 2,
                    "process_data": 6,
                    "process_user_data": 1,
                    "process_value": 1
                },
                "FUN_08003978": {
                    "cleanup_data": 1,
                    "display_data": 1,
                    "initialize_parameters": 1,
                    "initialize_pointer": 1,
                    "print_data": 10,
                    "print_results": 1,
                    "print_settings": 1,
                    "process_data": 1,
                    "update_data": 1
                },
                "FUN_08003cc8": {
                    "initialize": 1,
                    "initialize_application": 2,
                    "initialize_data": 26,
                    "initialize_program": 1,
                    "initialize_settings": 1
                },
                "iVar1": {
                    "allocation_result": 1,
                    "error_code": 2,
                    "initial_value": 1,
                    "memory_allocation_result": 1,
                    "result": 22,
                    "result1": 2,
                    "return_value": 1
                },
                "param_1": {
                    "output_data": 1,
                    "size": 1
                },
                "param_2": {
                    "address_data": 1,
                    "data": 1
                },
                "uVar2": {
                    "address": 3,
                    "copied_data": 1,
                    "data": 2,
                    "data_copy_result": 1,
                    "data_value": 1,
                    "handle": 1,
                    "param": 1,
                    "result": 2,
                    "result2": 3,
                    "second_call_result": 1,
                    "second_result": 6,
                    "second_return_value": 1,
                    "temp": 3,
                    "temp_result": 2,
                    "temp_value": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_080034f4",
                "FUN_0800351e",
                "FUN_08003978"
            ],
            "calling": [
                "FUN_08003d18"
            ],
            "code": "\nvoid initialize_data_08003cc8(void)\n\n{\n  int result;\n  undefined4 second_result;\n  \n  result = FUN_080034f4(0x38,&DAT_08005ca0);\n  if (result != 0) {\n    second_result = FUN_080034f4(0x38,&DAT_08005ca0);\n    DAT_2000008a = FUN_0800351e(second_result,&DAT_08005c10);\n    DAT_20000088 = 0x38;\n    DAT_20000078 = 0x2580;\n    DAT_20000084 = 0;\n    DAT_2000007c = 0;\n    DAT_20000080 = 0;\n    FUN_08003978(&DAT_20000030);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_08003cc8",
            "entrypoint": "0x08003cc8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003cc8": "initialize_data_08003cc8",
                "iVar1": "result",
                "uVar2": "second_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003d18": {
            "additional_data": {
                "DAT_08005ca0": {
                    "comparison_data": 1,
                    "constant_data": 2,
                    "constant_value": 2,
                    "data": 1,
                    "data_address": 1,
                    "data_array": 2,
                    "some_fixed_data": 1
                },
                "DAT_20000074": {
                    "another_data": 1,
                    "array2": 1,
                    "array_data_length": 1,
                    "array_length": 3,
                    "data_variable": 1,
                    "limit": 5,
                    "limit_value": 1,
                    "loop_array_size": 1,
                    "max_connections": 1,
                    "max_iterations": 2,
                    "max_limit": 1,
                    "max_value": 1,
                    "some_other_data": 1,
                    "some_value": 1,
                    "threshold": 1
                },
                "DAT_200002b4": {
                    "array": 3,
                    "array_data": 3,
                    "data_array": 3,
                    "some_dynamic_data": 1,
                    "status_array": 1
                },
                "FUN_08000e30": {
                    "get_current_time": 2,
                    "get_first_value": 1,
                    "get_function": 1,
                    "get_initial_status": 1,
                    "get_initial_time": 1,
                    "get_initial_value": 4,
                    "get_result": 4,
                    "get_value": 1,
                    "initialize_process": 1
                },
                "FUN_08002dd0": {
                    "execute_conversion_operation": 1,
                    "execute_task": 1,
                    "modify_data": 1,
                    "perform_operation": 1,
                    "perform_sub_operation": 1,
                    "process_array_element": 1,
                    "process_data": 5,
                    "reverse_data": 1,
                    "reverse_value": 1,
                    "send_data": 1,
                    "update_value": 1
                },
                "FUN_080034f4": {
                    "check_condition": 3,
                    "check_data": 1,
                    "connect": 1,
                    "fetch_data": 1,
                    "find_data": 1,
                    "get_data": 1,
                    "get_value": 1,
                    "initialize": 1,
                    "initialize_data": 2,
                    "initialize_function": 1,
                    "initialize_process": 1,
                    "initialize_value": 1,
                    "initiate_process": 1
                },
                "FUN_08003cc8": {
                    "check_array_data_length": 1,
                    "check_array_length": 1,
                    "check_data_variable": 1,
                    "check_max_connection_limit": 1,
                    "error_function": 1,
                    "execute_something": 1,
                    "handle_error": 4,
                    "handle_limit": 1,
                    "handle_limit_condition": 1,
                    "handle_threshold": 1,
                    "log_error": 1,
                    "perform_check": 1,
                    "perform_operation": 1
                },
                "FUN_08003d18": {
                    "check_condition_and_execute": 1,
                    "check_conditions": 1,
                    "check_connection": 1,
                    "check_validity": 1,
                    "execute_and_check": 1,
                    "execute_and_wait": 1,
                    "execute_function": 1,
                    "execute_reverse_operation": 1,
                    "execute_task": 1,
                    "extract_data": 1,
                    "find_match": 1,
                    "find_matching_value": 1,
                    "initialize_and_execute": 1,
                    "initialize_connection": 1,
                    "perform_operation": 1,
                    "process_data": 3,
                    "validate_input": 1,
                    "verify_and_process_input": 1,
                    "verify_data": 1
                },
                "VAR_08005ca0": {
                    "constant_data": 1
                },
                "iVar1": {
                    "current_time": 1,
                    "first_call_result": 1,
                    "first_result": 1,
                    "first_value": 1,
                    "initial_status": 1,
                    "initial_time": 3,
                    "initial_value": 7,
                    "result1": 8,
                    "result_1": 2,
                    "some_variable_one": 1,
                    "start_time": 3,
                    "starting_time": 1
                },
                "iVar2": {
                    "current_value": 1,
                    "result": 13,
                    "result2": 8,
                    "result_2": 2,
                    "result_value": 1,
                    "return_value": 1,
                    "second_call_result": 1,
                    "second_result": 1,
                    "second_value": 1,
                    "some_variable_two": 1
                },
                "param_1": {
                    "arg1": 1,
                    "connection_status": 1,
                    "device_id": 2,
                    "initial_value": 1,
                    "input": 1,
                    "input_data": 1,
                    "input_param": 7,
                    "input_param1": 1,
                    "input_parameter": 1,
                    "input_value": 1,
                    "input_value_1": 1,
                    "param_a": 1,
                    "param_one": 1,
                    "pointer": 1,
                    "status": 3,
                    "unknown_param": 1,
                    "unknown_parameter": 1,
                    "user_input": 1,
                    "value": 2,
                    "value1": 1
                },
                "param_2": {
                    "arg2": 1,
                    "buffer": 1,
                    "counter": 1,
                    "data": 3,
                    "initial_value": 2,
                    "input": 1,
                    "input_param2": 1,
                    "input_value": 7,
                    "input_value_2": 1,
                    "limit_param": 1,
                    "param": 1,
                    "param_b": 1,
                    "param_two": 1,
                    "timeout": 2,
                    "value": 5,
                    "value2": 1
                },
                "param_3": {
                    "data_param": 1,
                    "length": 1,
                    "param_3": 1,
                    "parameter": 1,
                    "partial_value": 1,
                    "value": 1,
                    "value3": 1
                },
                "param_4": {
                    "constant": 1,
                    "operand": 1,
                    "param_4": 1,
                    "timeout": 3,
                    "unused_value": 1,
                    "value4": 1
                },
                "uVar3": {
                    "count": 1,
                    "counter": 14,
                    "i": 1,
                    "index": 7,
                    "iteration": 1,
                    "loop_counter": 6
                }
            },
            "called": [
                "FUN_08003cc8",
                "FUN_08002dd0",
                "FUN_080034f4",
                "FUN_08000e30"
            ],
            "calling": [
                "FUN_080040ec"
            ],
            "code": "\nuint process_data_08003d18(undefined4 input_param,uint input_value)\n\n{\n  int result1;\n  int result;\n  uint counter;\n  \n  result1 = FUN_08000e30();\n  result = FUN_080034f4(0x38,&DAT_08005ca0);\n  if (result == 0) {\n    return 0;\n  }\n  for (counter = 0;\n      (counter < 10 &&\n      (((&DAT_200002b4)[counter] == 0 ||\n       (result = FUN_080034f4(0x38,&DAT_08005ca0), *(int *)(&DAT_200002b4)[counter] != result))));\n      counter = counter + 1 & 0xff) {\n  }\n  if (9 < counter) {\n    if ((9 < DAT_20000074) && (FUN_08003cc8(), 9 < DAT_20000074)) {\n      return 0;\n    }\n    counter = (uint)DAT_20000074;\n  }\n  do {\n    result = FUN_08002dd0((&DAT_200002b4)[counter],input_param,input_value & 0xffff,1000);\n    if (result == 0) {\n      return input_value;\n    }\n    result = FUN_08000e30();\n  } while ((uint)(result - result1) < 1000);\n  return 0;\n}\n\n",
            "current_name": "process_data_08003d18",
            "entrypoint": "0x08003d18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003d18": "process_data_08003d18",
                "iVar1": "result1",
                "iVar2": "result",
                "param_1": "input_param",
                "param_2": "input_value",
                "uVar3": "counter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003dd0": {
            "additional_data": {
                "0x22": {
                    "mask_value": 1
                },
                "DAT_200002b4": {
                    "bit_mapping": 1
                },
                "FUN_0800312c": {
                    "calculate_flag_value": 1,
                    "get_bit_pattern": 1,
                    "get_byte_value": 8,
                    "get_flag_value": 1,
                    "get_modified_byte": 1,
                    "lookup_byte": 1
                },
                "FUN_08003dd0": {
                    "check_bit_pattern": 3,
                    "check_bitmask": 1,
                    "check_condition": 3,
                    "check_flag": 2,
                    "check_flag_condition": 1,
                    "check_flag_status": 2,
                    "check_flag_validity": 1,
                    "check_flags": 1,
                    "is_bitset": 1,
                    "is_code_valid": 1,
                    "is_condition_met": 3,
                    "is_flag_set": 9,
                    "is_magic_number_valid": 1,
                    "is_matching_pattern": 1,
                    "is_valid_flag": 1
                },
                "param_1": {
                    "flag": 6,
                    "flag_address": 1,
                    "flag_index": 1,
                    "flag_value": 7,
                    "input": 5,
                    "input_value": 8,
                    "magic_number": 1,
                    "offset": 1,
                    "value": 1
                },
                "uVar1": {
                    "converted_value": 1,
                    "decoded_data": 1,
                    "encoded_value": 1,
                    "flag_result": 2,
                    "result": 24,
                    "return_value": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_0800312c"
            ],
            "calling": [
                "FUN_08003e54",
                "FUN_08003e18"
            ],
            "code": "\nbool is_flag_set_08003dd0(int input_value)\n\n{\n  uint result;\n  \n  result = FUN_0800312c((&DAT_200002b4)[*(byte *)(input_value + 0x44)]);\n  return (result & 0x22) == 0x22;\n}\n\n",
            "current_name": "is_flag_set_08003dd0",
            "entrypoint": "0x08003dd0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003dd0": "is_flag_set_08003dd0",
                "param_1": "input_value",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003df4": {
            "additional_data": {
                "0x21": {
                    "desired_bit_pattern": 1
                },
                "DAT_200002b4": {
                    "data_array": 1
                },
                "FUN_0800312c": {
                    "decode_flag": 1,
                    "get_bit": 1,
                    "get_bitwise_value": 1,
                    "get_byte": 1,
                    "get_byte_from_data": 1,
                    "get_byte_value": 4,
                    "get_comparison_value": 1,
                    "get_flag_value": 4,
                    "get_flags": 1,
                    "get_value": 1,
                    "lookup_flag_value": 1
                },
                "FUN_08003df4": {
                    "check_bit_mask": 1,
                    "check_conditions": 1,
                    "check_flag": 5,
                    "check_flag_condition": 1,
                    "check_flag_conditions": 2,
                    "check_flag_status": 3,
                    "check_flag_validity": 2,
                    "check_valid_flag": 1,
                    "is_bit_set": 1,
                    "is_bitwise_operation_valid": 1,
                    "is_condition_met": 2,
                    "is_data_valid": 1,
                    "is_flag_set": 6,
                    "is_flag_valid": 1,
                    "is_opposite_bit_set": 1,
                    "is_result_true": 1,
                    "is_value_valid": 1
                },
                "param_1": {
                    "data_offset": 1,
                    "flag": 10,
                    "flag_index": 1,
                    "flag_ptr": 1,
                    "flag_value": 6,
                    "input_value": 9,
                    "value": 3
                },
                "uVar1": {
                    "decoded_flag": 1,
                    "function_result": 1,
                    "result": 27,
                    "result_value": 1
                }
            },
            "called": [
                "FUN_0800312c"
            ],
            "calling": [
                "FUN_080042e8"
            ],
            "code": "\nbool check_flag_status_08003df4(int flag)\n\n{\n  uint result;\n  \n  result = FUN_0800312c((&DAT_200002b4)[*(byte *)(flag + 0x44)]);\n  return (result & 0x21) == 0x21;\n}\n\n",
            "current_name": "check_flag_status_08003df4",
            "entrypoint": "0x08003df4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003df4": "check_flag_status_08003df4",
                "param_1": "flag",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003e18": {
            "additional_data": {
                "DAT_200002b4": {
                    "address_map": 1,
                    "data_table": 1
                },
                "FUN_08002efa": {
                    "call_sub_function": 1,
                    "copy_data": 1,
                    "helper_function": 1,
                    "process_data": 17,
                    "process_data_and_call_function": 1,
                    "process_data_block": 1,
                    "process_extraction": 1,
                    "process_input": 1,
                    "process_value": 1,
                    "update_array": 1,
                    "write_byte_to_memory": 1
                },
                "FUN_08003dd0": {
                    "check_address": 1,
                    "check_binary_validity": 3,
                    "check_condition": 6,
                    "check_data": 7,
                    "check_data_validity": 3,
                    "check_result": 2,
                    "check_status": 2,
                    "check_success": 1,
                    "check_validity": 1,
                    "check_value": 3
                },
                "FUN_08003e18": {
                    "copy_and_process_data": 2,
                    "extract_and_copy_data": 1,
                    "extract_and_process_data": 2,
                    "extract_byte_and_call_function": 2,
                    "extract_byte_and_call_helper": 1,
                    "extract_byte_and_process": 2,
                    "extract_byte_from_binary": 1,
                    "extract_data": 7,
                    "extract_data_and_call_function": 1,
                    "extract_data_from_binary": 2,
                    "extract_value": 2,
                    "extract_value_and_call_function": 2,
                    "extract_value_and_update": 1,
                    "get_specific_data": 1,
                    "populate_data": 1,
                    "process_data": 2
                },
                "byte": {
                    "byte_value": 1
                },
                "byte_param": {
                    "byte_value": 1
                },
                "iVar1": {
                    "check_result": 1,
                    "function_result": 1,
                    "result": 29
                },
                "param_1": {
                    "arg_1": 1,
                    "binary_address": 2,
                    "binary_data_address": 1,
                    "data_address": 1,
                    "data_array": 2,
                    "data_length": 1,
                    "data_ptr": 1,
                    "data_size": 1,
                    "input": 4,
                    "input_data": 3,
                    "input_parameter": 1,
                    "input_value": 10,
                    "param1": 2,
                    "value_address": 1
                },
                "param_2": {
                    "data_offset": 2,
                    "data_ptr": 1,
                    "extracted_data": 2,
                    "offset": 1,
                    "output": 4,
                    "output_address": 1,
                    "output_array": 1,
                    "output_buffer": 3,
                    "output_byte": 2,
                    "output_data": 8,
                    "output_pointer": 2,
                    "output_value": 1,
                    "param2": 2,
                    "start_index": 1
                },
                "param_3": {
                    "arg1": 1,
                    "arg_3": 1,
                    "array_length": 1,
                    "data_length": 1,
                    "helper_arg_1": 1,
                    "length": 2,
                    "param1": 1,
                    "param3": 8,
                    "param3_argument": 1,
                    "param3_value": 1,
                    "param_3": 5,
                    "size": 5,
                    "some_value": 1,
                    "unused_param": 1,
                    "unused_parameter": 1
                },
                "param_4": {
                    "additional_param": 2,
                    "another_value": 1,
                    "arg2": 1,
                    "arg_4": 1,
                    "helper_arg_2": 1,
                    "param": 2,
                    "param2": 1,
                    "param4": 9,
                    "param4_argument": 1,
                    "param4_value": 1,
                    "param_4": 9,
                    "param_b": 1,
                    "unused_parameter": 1
                }
            },
            "called": [
                "FUN_08002efa",
                "FUN_08003dd0"
            ],
            "calling": [
                "FUN_080042ac"
            ],
            "code": "\nundefined4 extract_and_process_data_08003e18(int input_value,undefined *output_data,undefined4 param3,undefined4 param4)\n\n{\n  int result;\n  \n  if (input_value == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_08003dd0();\n  if (result == 0) {\n    *output_data = *(undefined *)(input_value + 0x45);\n    FUN_08002efa((&DAT_200002b4)[*(byte_value *)(input_value + 0x44)],input_value + 0x45,1,&DAT_200002b4,param4);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "extract_and_process_data_08003e18",
            "entrypoint": "0x08003e18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003e18": "extract_and_process_data_08003e18",
                "byte": "byte_value",
                "iVar1": "result",
                "param_1": "input_value",
                "param_2": "output_data",
                "param_3": "param3",
                "param_4": "param4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003e54": {
            "additional_data": {
                "DAT_20000214": {
                    "data_array1": 1
                },
                "DAT_2000023c": {
                    "data_array2": 1
                },
                "FUN_08000e60": {
                    "perform_action1": 1,
                    "perform_operation": 1,
                    "perform_operation1": 1,
                    "print_value": 1,
                    "process_data": 4,
                    "process_data2": 1
                },
                "FUN_08000ec4": {
                    "cleanup_data": 3,
                    "cleanup_process": 1,
                    "cleanup_value": 1,
                    "perform_action2": 1,
                    "perform_operation2": 1,
                    "process_value": 1,
                    "reverse_data": 1
                },
                "FUN_08002efa": {
                    "execute": 1,
                    "execute_command": 1,
                    "perform_action3": 1,
                    "perform_operation3": 1,
                    "reverse_action": 1,
                    "reverse_data": 1,
                    "update_data": 1,
                    "update_other_data": 1
                },
                "FUN_08003dd0": {
                    "check_condition": 6,
                    "check_data": 1,
                    "check_function": 1,
                    "is_value_zero": 1
                },
                "FUN_08003e54": {
                    "handle_param": 1,
                    "handle_parameter": 1,
                    "initialize_data": 1,
                    "process_data": 3,
                    "process_input_data": 1,
                    "process_parameter": 2,
                    "update_config": 1,
                    "update_data": 19,
                    "update_function": 1,
                    "update_parameter": 1
                },
                "iVar1": {
                    "result": 31
                },
                "param_1": {
                    "config_data": 1,
                    "data": 8,
                    "data_pointer": 5,
                    "data_ptr": 3,
                    "input": 3,
                    "input_data": 5,
                    "input_parameter": 1,
                    "param": 1,
                    "param1": 1,
                    "parameter": 2,
                    "value": 1
                },
                "param_2": {
                    "new_data": 1,
                    "new_value": 11,
                    "param2": 1,
                    "value": 13,
                    "value1": 5
                },
                "param_3": {
                    "address": 1,
                    "arg1": 2,
                    "param": 1,
                    "param3": 5,
                    "param_3": 3,
                    "placeholder": 1,
                    "state": 1,
                    "unused": 6,
                    "unused1": 2,
                    "unused_param": 4,
                    "value2": 5
                },
                "param_4": {
                    "additional_info": 1,
                    "additional_param": 1,
                    "arg2": 2,
                    "config": 1,
                    "data": 1,
                    "extra_param": 1,
                    "other_param": 2,
                    "param": 2,
                    "param4": 6,
                    "param_4": 5,
                    "unused": 1,
                    "unused2": 2,
                    "user_data": 1,
                    "value3": 5
                },
                "uVar2": {
                    "byte_value": 2,
                    "data_index": 1,
                    "index": 28
                }
            },
            "called": [
                "FUN_08002efa",
                "FUN_08000ec4",
                "FUN_08003dd0",
                "FUN_08000e60"
            ],
            "calling": [
                "FUN_08004388"
            ],
            "code": "\nvoid update_data_08003e54(int data,undefined4 value,undefined4 unused,undefined4 param4)\n\n{\n  int result;\n  uint index;\n  \n  if (data != 0) {\n    result = FUN_08003dd0();\n    if (result == 0) {\n      index = (uint)*(byte *)(data + 0x44);\n      *(undefined4 *)(&DAT_20000214 + index * 4) = value;\n      *(int *)(&DAT_2000023c + index * 4) = data;\n      FUN_08000e60((int)*(char *)(data + 0x5c),0,1,index,param4);\n      FUN_08000ec4((int)*(char *)(data + 0x5c));\n      FUN_08002efa((&DAT_200002b4)[*(byte *)(data + 0x44)],data + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_08003e54",
            "entrypoint": "0x08003e54",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003e54": "update_data_08003e54",
                "iVar1": "result",
                "param_1": "data",
                "param_2": "value",
                "param_3": "unused",
                "param_4": "param4",
                "uVar2": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003eac": {
            "additional_data": {
                "DAT_20000264": {
                    "address_array": 1,
                    "data_entries": 1,
                    "data_pointer1": 1
                },
                "DAT_2000028c": {
                    "data_pointer2": 1,
                    "entry_addresses": 1,
                    "value_array": 1
                },
                "DAT_200002b4": {
                    "setting_offsets": 1
                },
                "FUN_08000e60": {
                    "execute_task": 1,
                    "initialize_data": 6,
                    "initialize_process": 1,
                    "initialize_setting": 1,
                    "process_data": 1,
                    "reset_entry_value": 1,
                    "send_data": 1,
                    "set_flag": 1,
                    "set_initial_conditions": 1,
                    "set_parameters": 1,
                    "update_char_data": 1,
                    "update_char_value": 1,
                    "update_character_info": 1,
                    "update_values": 1
                },
                "FUN_08000ec4": {
                    "cleanup_data": 1,
                    "cleanup_resources": 1,
                    "clear_flag": 1,
                    "configure_setting": 1,
                    "do_something": 1,
                    "execute_action": 1,
                    "execute_cleanup": 2,
                    "finalize_entry": 1,
                    "perform_action": 4,
                    "perform_cleanup": 3,
                    "perform_operation": 1,
                    "perform_task": 1,
                    "process_char_value": 1
                },
                "FUN_08002eb2": {
                    "apply_changes": 1,
                    "execute_setting_update": 1,
                    "process_data": 5,
                    "process_data_entry": 1,
                    "process_entry": 1,
                    "update_data": 1,
                    "update_data_and_call_function": 1,
                    "update_data_and_perform_operation": 1,
                    "update_element": 1,
                    "update_field_data": 1,
                    "update_pointer": 1,
                    "update_value": 1,
                    "update_value_at_offset": 1,
                    "update_values": 2
                },
                "FUN_08003eac": {
                    "process_data": 1,
                    "update_data": 18,
                    "update_data_and_call_functions": 2,
                    "update_data_entry": 4,
                    "update_function": 1,
                    "update_param_and_call_functions": 2,
                    "update_param_values": 1,
                    "update_parameter_info": 1,
                    "update_settings": 1
                },
                "bVar1": {
                    "byte_value": 15,
                    "entry_index": 3,
                    "index": 12,
                    "value_at_index": 1
                },
                "param_1": {
                    "data": 5,
                    "data_address": 1,
                    "data_entry": 1,
                    "data_entry_address": 1,
                    "data_entry_pointer": 1,
                    "data_pointer": 5,
                    "data_ptr": 10,
                    "entry_address": 1,
                    "input": 1,
                    "input_param": 1,
                    "param": 2,
                    "parameter_address": 1,
                    "settings_ptr": 1
                },
                "param_2": {
                    "new_data": 1,
                    "new_value": 22,
                    "value": 8
                }
            },
            "called": [
                "FUN_08002eb2",
                "FUN_08000ec4",
                "FUN_08000e60"
            ],
            "calling": [
                "FUN_080042e8"
            ],
            "code": "\nvoid update_data_entry_08003eac(int data_ptr,undefined4 new_value)\n\n{\n  byte byte_value;\n  \n  if (data_ptr != 0) {\n    byte_value = *(byte *)(data_ptr + 0x44);\n    *(undefined4 *)(&DAT_20000264 + (uint)byte_value * 4) = new_value;\n    *(int *)(&DAT_2000028c + (uint)byte_value * 4) = data_ptr;\n    FUN_08000e60((int)*(char *)(data_ptr + 0x5c),0,2);\n    FUN_08000ec4((int)*(char *)(data_ptr + 0x5c));\n    FUN_08002eb2((&DAT_200002b4)[*(byte *)(data_ptr + 0x44)],\n                 *(int *)(data_ptr + 0x68) + (uint)*(ushort *)(data_ptr + 0x6e),1);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_entry_08003eac",
            "entrypoint": "0x08003eac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003eac": "update_data_entry_08003eac",
                "bVar1": "byte_value",
                "param_1": "data_ptr",
                "param_2": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f00": {
            "additional_data": {
                "9": {
                    "array_length": 1
                },
                "FUN_08003f00": {
                    "check_param": 1,
                    "find_element_index": 1,
                    "find_index": 11,
                    "find_index_of_value": 1,
                    "find_matching_index": 1,
                    "find_number_in_array": 2,
                    "find_number_position": 2,
                    "find_param_index": 2,
                    "find_value": 1,
                    "find_value_in_array": 1,
                    "find_value_index": 8
                },
                "param_1": {
                    "element": 3,
                    "input": 1,
                    "input_num": 1,
                    "input_number": 3,
                    "input_value": 5,
                    "number": 1,
                    "param": 1,
                    "search_value": 2,
                    "target_index": 1,
                    "value": 12,
                    "value_to_find": 1
                },
                "uVar1": {
                    "index": 28,
                    "number_position": 1,
                    "position": 1,
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003f24",
                "FUN_08003f48"
            ],
            "code": "\nuint find_index_of_value_08003f00(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 10;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (9 < index) {\n        return index;\n      }\n      if (value == (&DAT_200002b4)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "current_name": "find_index_of_value_08003f00",
            "entrypoint": "0x08003f00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003f00": "find_index_of_value_08003f00",
                "param_1": "value",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f24": {
            "additional_data": {
                "FUN_08003f00": {
                    "get_command_code": 1,
                    "get_command_value": 1,
                    "get_data": 1,
                    "get_function_index": 4,
                    "get_function_result": 1,
                    "get_input": 1,
                    "get_input_value": 1,
                    "get_number": 1,
                    "get_parameter": 1,
                    "get_result": 1,
                    "get_return_value": 6,
                    "get_sub_function_index": 1,
                    "get_value": 3,
                    "retrieve_data": 1
                },
                "FUN_08003f24": {
                    "call_sub_function_based_on_value": 1,
                    "execute_action": 1,
                    "execute_command": 2,
                    "execute_command_based_on_value": 1,
                    "execute_function": 3,
                    "execute_function_based_on_condition": 2,
                    "execute_function_based_on_return_value": 1,
                    "execute_function_based_on_value": 8,
                    "execute_requested_function": 1,
                    "execute_selected_function": 2,
                    "execute_sub_function": 4,
                    "execute_sub_function_based_on_condition": 1,
                    "process_data": 1,
                    "process_function": 3
                },
                "param_1": {
                    "extra_param": 1,
                    "input_parameter": 2,
                    "input_value": 1,
                    "parameter": 1,
                    "unused_parameter": 2,
                    "value": 1
                },
                "uVar1": {
                    "command_code": 1,
                    "data_value": 2,
                    "function_index": 2,
                    "function_result": 1,
                    "function_return_value": 1,
                    "number": 1,
                    "result": 5,
                    "return_value": 10,
                    "sub_function_index": 1,
                    "value": 2
                }
            },
            "called": [
                "FUN_08003f00"
            ],
            "calling": [
                "FUN_08002f66"
            ],
            "code": "\nvoid execute_function_based_on_return_value_08003f24(void)\n\n{\n  uint return_value;\n  \n  return_value = FUN_08003f00();\n  if (return_value < 10) {\n    (**(code **)(&DAT_20000214 + return_value * 4))(*(undefined4 *)(&DAT_2000023c + return_value * 4));\n  }\n  return;\n}\n\n",
            "current_name": "execute_function_based_on_return_value_08003f24",
            "entrypoint": "0x08003f24",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003f24": "execute_function_based_on_return_value_08003f24",
                "uVar1": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f48": {
            "additional_data": {
                "FUN_08002eb2": {
                    "execute_action": 3,
                    "execute_code": 1,
                    "execute_function": 1,
                    "execute_modified_function": 1,
                    "execute_sub_function": 2,
                    "execute_subfunction": 2,
                    "execute_task": 1,
                    "perform_operation": 2,
                    "process_data": 2,
                    "process_data_element": 1
                },
                "FUN_08003f00": {
                    "get_data_index": 1,
                    "get_index": 1,
                    "get_input": 1,
                    "get_random_index": 7,
                    "get_random_number": 7,
                    "get_random_value": 1,
                    "get_return_value": 1,
                    "get_sub_function_param": 1
                },
                "FUN_08003f48": {
                    "execute_function": 7,
                    "execute_function_based_on_index": 1,
                    "execute_process": 1,
                    "execute_reverse": 1,
                    "execute_selected_function": 1,
                    "process_binary_data": 1,
                    "process_data": 10,
                    "process_function": 2
                },
                "iVar2": {
                    "function_result": 3,
                    "result": 14,
                    "return_code": 1,
                    "return_value": 10,
                    "sub_result": 1,
                    "sub_return_value": 1
                },
                "iVar3": {
                    "address": 7,
                    "data": 6,
                    "data_address": 4,
                    "data_pointer": 2,
                    "data_ptr": 2,
                    "function_address": 2,
                    "memory_address": 1,
                    "pointer": 1,
                    "process_address": 1,
                    "ptr_address": 1,
                    "ptr_data": 1,
                    "selected_function_ptr": 1,
                    "sub_function_param": 1
                },
                "param_1": {
                    "data": 1,
                    "param_1": 1,
                    "sub_function_param": 1
                },
                "param_2": {
                    "param_2": 1,
                    "value": 1
                },
                "param_3": {
                    "flag": 1,
                    "param_3": 1
                },
                "uVar1": {
                    "index": 1,
                    "input_value": 1,
                    "process_id": 1,
                    "random_index": 7,
                    "random_num": 2,
                    "random_number": 4,
                    "random_value": 2,
                    "result": 10,
                    "result_code": 1,
                    "return_value": 1
                }
            },
            "called": [
                "FUN_08002eb2",
                "FUN_08003f00"
            ],
            "calling": [
                "FUN_08002f4c"
            ],
            "code": "\nvoid process_binary_data_08003f48(void)\n\n{\n  uint result;\n  int result;\n  int address;\n  \n  result = FUN_08003f00();\n  address = *(int *)(&DAT_2000028c + result * 4);\n  if ((result < 10) && (result = (**(code **)(&DAT_20000264 + result * 4))(address), result != -1)) {\n    FUN_08002eb2((&DAT_200002b4)[*(byte *)(address + 0x44)],\n                 *(int *)(address + 0x68) + (uint)*(ushort *)(address + 0x6e),1);\n  }\n  return;\n}\n\n",
            "current_name": "process_binary_data_08003f48",
            "entrypoint": "0x08003f48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003f48": "process_binary_data_08003f48",
                "iVar2": "result",
                "iVar3": "address",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f94": {
            "called": [],
            "calling": [
                "FUN_08002ffc"
            ],
            "code": "\nvoid FUNC_08003f94(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08003f94",
            "entrypoint": "0x08003f94",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08003f94": "FUNC_08003f94"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004094": {
            "additional_data": {
                "DAT_200002dc": {
                    "current_memory": 2,
                    "current_memory_ptr": 2,
                    "current_pointer": 7,
                    "current_position": 3,
                    "current_ptr": 4,
                    "current_stack_pointer": 1,
                    "first_available_memory": 1,
                    "memory_pointer": 1,
                    "memory_ptr": 1
                },
                "DAT_20000674": {
                    "error_code": 18,
                    "error_flag": 3,
                    "error_value": 1
                },
                "DAT_20000678": {
                    "default_memory": 2,
                    "default_memory_ptr": 1,
                    "initial_memory": 1,
                    "initial_pointer": 1,
                    "initial_position": 1,
                    "initial_ptr": 2,
                    "initial_stack_pointer": 1,
                    "stack_base": 2,
                    "start_of_stack": 1,
                    "start_pointer": 1
                },
                "FUN_08004094": {
                    "allocate_memory": 28,
                    "get_available_memory": 1,
                    "get_memory_block": 1,
                    "reserve_stack_memory": 1
                },
                "param_1": {
                    "number_of_bytes": 1,
                    "requested_memory": 1,
                    "size": 29
                },
                "puVar1": {
                    "allocated_memory": 27,
                    "memory_block": 1,
                    "memory_pointer": 1,
                    "reserved_memory": 1,
                    "start_address": 1
                },
                "stack0x00000000": {
                    "end_of_stack": 1,
                    "stack_base": 1,
                    "stack_base_addr": 1,
                    "stack_boundary": 2,
                    "stack_end": 2,
                    "stack_limit": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800500c"
            ],
            "code": "\nundefined * allocate_memory_08004094(int size)\n\n{\n  undefined *allocated_memory;\n  \n  if (DAT_200002dc == (undefined *)0x0) {\n    DAT_200002dc = &DAT_20000678;\n  }\n  allocated_memory = DAT_200002dc;\n  if (DAT_200002dc + size <= &stack_end) {\n    DAT_200002dc = DAT_200002dc + size;\n    return allocated_memory;\n  }\n  DAT_20000674 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "current_name": "allocate_memory_08004094",
            "entrypoint": "0x08004094",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004094": "allocate_memory_08004094",
                "param_1": "size",
                "puVar1": "allocated_memory",
                "stack0x00000000": "stack_end"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040d0": {
            "additional_data": {
                "0xffffffff": {
                    "negative_one": 1
                },
                "FUN_080040d0": {
                    "get_default_value": 6,
                    "get_error_code": 11,
                    "get_error_flag": 1,
                    "get_error_status": 1,
                    "get_negative_one": 1,
                    "initialize": 1,
                    "initialize_error_code": 2,
                    "initialize_error_flag": 1,
                    "initialize_error_status": 1,
                    "initialize_flag": 1,
                    "initialize_function": 1,
                    "initialize_return_value": 2,
                    "initialize_value": 1,
                    "return_error_code": 1
                },
                "returnValue": {
                    "result": 1
                },
                "undefined4": {
                    "error_code": 4,
                    "error_flag": 1,
                    "error_status": 1,
                    "int": 3,
                    "uint32_t": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nerror_code get_error_code_080040d0(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "current_name": "get_error_code_080040d0",
            "entrypoint": "0x080040d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040d0": "get_error_code_080040d0",
                "undefined4": "error_code"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040d6": {
            "additional_data": {
                "0x2000": {
                    "default_value": 1
                },
                "FUN_080040d6": {
                    "initialize_memory": 9,
                    "set_buffer_size": 1,
                    "set_memory_address": 1,
                    "set_memory_attributes": 1,
                    "set_memory_flag": 1,
                    "set_memory_page_size": 4,
                    "set_memory_parameter": 1,
                    "set_memory_permission": 2,
                    "set_memory_permissions": 1,
                    "set_memory_segment_size": 1,
                    "set_memory_size": 3,
                    "set_memory_to_default": 1,
                    "set_memory_value": 1,
                    "set_page_size": 4
                },
                "param_1": {
                    "address": 1,
                    "base_address": 3,
                    "buffer": 1,
                    "flag": 1,
                    "ignored_parameter": 1,
                    "memory_pointer": 1,
                    "param": 2,
                    "param1": 8,
                    "param_1": 1,
                    "param_ptr": 1,
                    "result": 1,
                    "source_address": 1,
                    "unused": 2,
                    "unused_param": 1,
                    "unused_parameter": 1,
                    "value": 4,
                    "value_to_set": 1
                },
                "param_2": {
                    "address": 4,
                    "buffer": 2,
                    "buffer_size": 1,
                    "destination_address": 1,
                    "input_address": 1,
                    "memory_address": 12,
                    "memory_info": 1,
                    "memory_location": 1,
                    "memory_pointer": 1,
                    "memory_start_address": 1,
                    "offset": 2,
                    "param2": 3,
                    "size_pointer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080056d4"
            ],
            "code": "\nundefined4 set_memory_page_size_080040d6(undefined4 param1,int memory_address)\n\n{\n  *(undefined4 *)(memory_address + 4) = 0x2000;\n  return 0;\n}\n\n",
            "current_name": "set_memory_page_size_080040d6",
            "entrypoint": "0x080040d6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040d6": "set_memory_page_size_080040d6",
                "param_1": "param1",
                "param_2": "memory_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040e0": {
            "additional_data": {
                "FUN_080040e0": {
                    "calculate_return_value": 1,
                    "check_if_true": 1,
                    "check_success": 1,
                    "count_to_one": 1,
                    "get_one": 2,
                    "get_result": 2,
                    "get_return_value": 4,
                    "get_status": 3,
                    "get_true_value": 1,
                    "initialize": 11,
                    "initialize_app": 1,
                    "initialize_application": 1,
                    "initialize_program": 2
                },
                "return": {
                    "initialize_status": 1,
                    "result": 1,
                    "status": 1
                },
                "return_value": {
                    "status": 1
                },
                "undefined4": {
                    "bool": 1,
                    "int": 4,
                    "status": 5,
                    "void": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_080056f8"
            ],
            "code": "\nstatus initialize_program_080040e0(void)\n\n{\n  initialize_status 1;\n}\n\n",
            "current_name": "initialize_program_080040e0",
            "entrypoint": "0x080040e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040e0": "initialize_program_080040e0",
                "return": "initialize_status",
                "undefined4": "status"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040e4": {
            "additional_data": {
                "": {
                    "": 2
                },
                "FUN_080040e4": {
                    "get_default_value": 5,
                    "get_return_value": 1,
                    "get_zero": 2,
                    "initialize": 14,
                    "initialize_app": 1,
                    "initialize_application": 4,
                    "initialize_program": 4
                },
                "return": {
                    "result": 1
                },
                "undefined4": {
                    "int": 1,
                    "void": 12
                }
            },
            "called": [],
            "calling": [
                "FUN_08005718"
            ],
            "code": "\nvoid initialize_application_080040e4(void)\n\n{\n  result 0;\n}\n\n",
            "current_name": "initialize_application_080040e4",
            "entrypoint": "0x080040e4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040e4": "initialize_application_080040e4",
                "return": "result",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040e8": {
            "additional_data": {
                "FUN_080040e8": {
                    "calculate_result": 1,
                    "clear_data": 1,
                    "clear_memory": 1,
                    "get_default_value": 4,
                    "get_result": 1,
                    "get_value": 1,
                    "get_zero_value": 2,
                    "initialize": 14,
                    "initialize_application": 1,
                    "initialize_program": 4,
                    "meaningful_function_name": 1
                },
                "new_variable_name_1": {
                    "result": 1
                },
                "undefined4": {
                    "int": 1,
                    "uint32_t": 1,
                    "void": 9
                }
            },
            "called": [],
            "calling": [
                "FUN_0800573c"
            ],
            "code": "\nvoid initialize_program_080040e8(void)\n\n{\n  return 0;\n}\n\n",
            "current_name": "initialize_program_080040e8",
            "entrypoint": "0x080040e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040e8": "initialize_program_080040e8",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040ec": {
            "additional_data": {
                "FUN_08003d18": {
                    "calculate_result": 1,
                    "call_subfunction": 1,
                    "execute_subfunction2": 1,
                    "invoke_sub_func": 1,
                    "invoke_sub_function": 1,
                    "invoke_subfunction": 1,
                    "perform_calculation": 1,
                    "perform_operation": 2,
                    "process_data": 4,
                    "process_input": 1,
                    "process_sub_function": 1,
                    "reverse_bits": 1,
                    "sub_function": 1
                },
                "FUN_080040ec": {
                    "execute_function": 18,
                    "execute_process": 1,
                    "execute_subfunction": 1,
                    "execute_task": 1,
                    "improve_code": 1,
                    "initialize": 2,
                    "initialize_function": 2,
                    "initialize_parameters": 1,
                    "process_data": 3,
                    "run_function": 1
                },
                "param_1": {
                    "arg1": 3,
                    "arg_1": 1,
                    "argument1": 1,
                    "function_param": 1,
                    "input1": 1,
                    "param": 1,
                    "param1": 2,
                    "param1_sub": 1,
                    "param_1": 4,
                    "reverse_param1": 1,
                    "sub_func_param_1": 1,
                    "sub_function_param1": 1,
                    "sub_param1": 2,
                    "unused": 5,
                    "unused_param": 4,
                    "var1": 1
                },
                "param_2": {
                    "arg2": 2,
                    "arg_2": 1,
                    "argument2": 1,
                    "data": 1,
                    "data1": 3,
                    "input1": 1,
                    "input2": 1,
                    "input_1": 2,
                    "input_param": 5,
                    "input_param1": 1,
                    "input_size": 1,
                    "operation_param": 1,
                    "param2": 2,
                    "param2_sub": 1,
                    "param_2": 2,
                    "reverse_param2": 1,
                    "sub_func_param_2": 1,
                    "sub_function_param2": 1,
                    "sub_param2": 2,
                    "subfunc_param1": 1
                },
                "param_3": {
                    "arg3": 3,
                    "arg_3": 1,
                    "argument3": 2,
                    "buffer1_param": 1,
                    "buffer_param": 1,
                    "data": 1,
                    "data2": 3,
                    "data3": 1,
                    "function_param3": 1,
                    "input2": 1,
                    "input3": 1,
                    "input_2": 2,
                    "input_param2": 2,
                    "offset": 1,
                    "output_param": 2,
                    "param3": 3,
                    "param_3": 2,
                    "param_a": 1,
                    "parameter3": 1,
                    "sub_func_param_2": 1
                },
                "param_4": {
                    "arg4": 3,
                    "arg_4": 1,
                    "argument4": 2,
                    "buffer2_param": 1,
                    "data3": 1,
                    "data4": 1,
                    "function_param4": 1,
                    "input3": 1,
                    "input4": 1,
                    "input_3": 1,
                    "length": 1,
                    "output_param": 1,
                    "output_size": 1,
                    "param4": 3,
                    "param_4": 2,
                    "param_b": 1,
                    "parameter4": 1,
                    "sub_func_param_3": 1,
                    "unused": 4,
                    "unused_param": 3
                }
            },
            "called": [
                "FUN_08003d18"
            ],
            "calling": [
                "FUN_0800562a"
            ],
            "code": "\nvoid execute_function_080040ec(undefined4 unused,undefined4 input_param,undefined4 param3,undefined4 unused)\n\n{\n  FUN_08003d18(input_param,param3,param3,unused,unused);\n  return;\n}\n\n",
            "current_name": "execute_function_080040ec",
            "entrypoint": "0x080040ec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040ec": "execute_function_080040ec",
                "param_1": "unused",
                "param_2": "input_param",
                "param_3": "param3",
                "param_4": "unused"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040f8": {
            "additional_data": {
                "DAT_": {
                    "dat_": 1
                },
                "DAT_080040f8": {
                    "do_nothing_block": 1,
                    "improved_dat": 1,
                    "unused_data_variable": 1
                },
                "DAT_1": {
                    "unimportant_data": 1
                },
                "DAT_XXXXXXXX": {
                    "dat_xxxxxxxx": 1
                },
                "FUN_080040f8": {
                    "continuous_execution": 1,
                    "infinite_loop": 26,
                    "infinite_loop_function": 1,
                    "run_infinite_loop": 2,
                    "spin_infinite_loop": 1
                },
                "PTR_": {
                    "ptr_": 1
                },
                "PTR_080040f8": {
                    "improved_ptr": 1,
                    "improved_variable_name": 1
                },
                "PTR_1": {
                    "unimportant_pointer": 1
                },
                "PTR_XXXXXXXX": {
                    "ptr_xxxxxxxx": 1
                },
                "do": {
                    "do": 2,
                    "infinite_loop": 1,
                    "loop": 1
                },
                "infiniteLoop": {
                    "": 1
                },
                "true": {
                    "true": 2
                },
                "while": {
                    "while": 1
                }
            },
            "called": [
                "FUN_080040f8"
            ],
            "calling": [
                "FUN_080051ac",
                "FUN_080040f8"
            ],
            "code": "\nvoid run_infinite_loop_080040f8(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "run_infinite_loop_080040f8",
            "entrypoint": "0x080040f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040f8": "run_infinite_loop_080040f8"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040fc": {
            "additional_data": {
                "DAT_20000674": {
                    "counter": 1,
                    "data": 1,
                    "data_size": 3,
                    "data_value": 11,
                    "data_variable": 1,
                    "default_flag": 1,
                    "initial_value": 6,
                    "initialized_value": 1,
                    "value_to_initialize": 1
                },
                "FUN_080040fc": {
                    "initialize_counter": 2,
                    "initialize_data": 19,
                    "initialize_default_values": 1,
                    "initialize_value": 1,
                    "set_data_size": 1,
                    "set_initial_value": 7
                },
                "counter": {
                    "counter": 1
                },
                "result": {
                    "success": 1
                },
                "return": {
                    "status": 1
                },
                "return_value": {
                    "success": 1
                },
                "undefined4": {
                    "void": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080055d0"
            ],
            "code": "\nvoid initialize_data_080040fc(void)\n\n{\n  DAT_20000674 = 0x16;\n  status 0xffffffff;\n}\n\n",
            "current_name": "initialize_data_080040fc",
            "entrypoint": "0x080040fc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040fc": "initialize_data_080040fc",
                "return": "status",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800410c": {
            "additional_data": {
                "DAT_0800410c": {
                    "program_initialized": 1
                },
                "DAT_XXXX": {
                    "unchanged": 1
                },
                "FUN_0800410c": {
                    "calculate_return_value": 1,
                    "check_status": 1,
                    "get_boolean_result": 1,
                    "get_constant_value": 1,
                    "get_default_value": 1,
                    "get_one": 2,
                    "get_return_value": 3,
                    "get_status": 1,
                    "get_true_value": 1,
                    "initialize": 10,
                    "initialize_application": 3,
                    "initialize_function": 2,
                    "initialize_program": 1,
                    "is_one": 1,
                    "one": 1,
                    "return_value": 1
                },
                "PTR_XXXX": {
                    "unchanged": 1
                },
                "return": {
                    "result": 3,
                    "status": 5
                },
                "retval": {
                    "result": 1
                },
                "undefined4": {
                    "int": 2,
                    "status": 2,
                    "status_code": 1,
                    "uint32": 1,
                    "unsigned_int": 1,
                    "void": 2
                }
            },
            "called": [],
            "calling": [
                "thunk_FUN_0800410c"
            ],
            "code": "\nvoid initialize_application_0800410c(void)\n\n{\n  status 1;\n}\n\n",
            "current_name": "initialize_application_0800410c",
            "entrypoint": "0x0800410c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800410c": "initialize_application_0800410c",
                "return": "status",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004110": {
            "additional_data": {
                "DAT_08005a18": {
                    "condition1": 1,
                    "value1": 1
                },
                "DAT_08005a3c": {
                    "condition2": 1,
                    "value2": 1
                },
                "DAT_08005d3c": {
                    "lookup_table1": 1
                },
                "DAT_200002e0": {
                    "data1": 1,
                    "execution_data1": 1
                },
                "DAT_2000030c": {
                    "data2": 1,
                    "execution_data2": 1
                },
                "FUN_08003138": {
                    "calculate_value": 2,
                    "execute_operation": 1,
                    "execute_sub_function": 1,
                    "function_a": 1,
                    "function_get_data": 1,
                    "get_data": 1,
                    "get_function_result": 1,
                    "perform_action": 1,
                    "perform_operation": 2,
                    "reverse_bits": 1,
                    "reverse_data": 1,
                    "reverse_something": 1
                },
                "FUN_0800314e": {
                    "apply_operation": 1,
                    "execute_code6": 1,
                    "finalize_data": 1,
                    "finalize_data2": 1,
                    "finalize_execution": 1,
                    "finalize_operation": 1,
                    "finalize_process": 2,
                    "function_g": 1,
                    "function_print_data": 1,
                    "process_data3": 1,
                    "set_flag": 1,
                    "set_message": 1,
                    "update_data": 1,
                    "update_value3": 1
                },
                "FUN_0800316c": {
                    "apply_something": 1,
                    "cleanup_resource": 1,
                    "do_something": 1,
                    "execute_code4": 1,
                    "execute_task": 1,
                    "finalize_operation": 2,
                    "function_e": 1,
                    "function_store_data": 1,
                    "initialize_data": 2,
                    "process_data1": 1,
                    "process_data2": 1,
                    "process_value": 1,
                    "update_value1": 1
                },
                "FUN_080033d8": {
                    "cancel_operation": 1,
                    "cleanup_data": 1,
                    "cleanup_failure": 1,
                    "cleanup_value": 1,
                    "do_something": 1,
                    "execute_code3": 1,
                    "finalize_data": 1,
                    "function_d": 1,
                    "handle_error": 1,
                    "other_action": 1,
                    "perform_action2": 1,
                    "process_result2": 1,
                    "reset_value": 2
                },
                "FUN_08003414": {
                    "clean_up": 1,
                    "clean_value": 1,
                    "cleanup": 1,
                    "cleanup_code": 1,
                    "cleanup_data": 2,
                    "cleanup_operation": 1,
                    "do_cleanup": 1,
                    "execute_code2": 1,
                    "function_c": 1,
                    "function_process_value": 1,
                    "perform_action": 1,
                    "perform_action1": 1,
                    "process_result1": 1,
                    "reset_data": 1
                },
                "FUN_08003486": {
                    "execute_code5": 1,
                    "function_f": 1,
                    "function_update_data": 1,
                    "modify_data": 1,
                    "process_data2": 1,
                    "set_mode": 3,
                    "set_option": 1,
                    "set_properties": 1,
                    "set_values": 1,
                    "update_data": 1,
                    "update_state": 1,
                    "update_value": 1,
                    "update_value2": 1
                },
                "FUN_0800355e": {
                    "check_code": 1,
                    "check_code1": 1,
                    "check_condition": 4,
                    "check_data": 1,
                    "check_status": 1,
                    "check_validity": 1,
                    "check_value": 2,
                    "check_value1": 1,
                    "function_b": 1,
                    "function_check_value": 1,
                    "validate_input1": 1
                },
                "FUN_08004110": {
                    "execute_action": 1,
                    "execute_code": 1,
                    "execute_function": 5,
                    "execute_operation": 5,
                    "function_process_data": 1,
                    "perform_action": 1,
                    "process_data": 13
                },
                "iVar1": {
                    "result": 28,
                    "result_var": 1,
                    "return_value": 1
                },
                "iVar3": {
                    "array_index": 1,
                    "code": 1,
                    "data_offset": 1,
                    "data_value": 1,
                    "element": 1,
                    "index": 14,
                    "index_var": 1,
                    "short_value": 1,
                    "table_index": 1,
                    "value": 7,
                    "var_index": 1
                },
                "param_1": {
                    "action_code": 1,
                    "data_index": 2,
                    "data_size": 3,
                    "index": 10,
                    "input_param": 1,
                    "input_size": 4,
                    "input_val": 1,
                    "input_value": 2,
                    "number_of_items": 1,
                    "operation_code": 1,
                    "operation_type": 2,
                    "param_limit": 1,
                    "size": 1,
                    "value": 1
                },
                "param_2": {
                    "action_type": 2,
                    "arg1": 1,
                    "execution_mode": 1,
                    "flag": 3,
                    "mode": 11,
                    "operation_type": 3,
                    "option": 6,
                    "param_type": 1,
                    "parameter1": 2,
                    "switch_param": 1
                },
                "param_3": {
                    "arg": 1,
                    "arg1": 1,
                    "arg2": 1,
                    "config": 1,
                    "data": 1,
                    "data_ptr": 1,
                    "execution_flag": 1,
                    "input_parameter": 1,
                    "param": 5,
                    "param3": 5,
                    "param_3": 3,
                    "param_a": 1,
                    "param_pointer": 1,
                    "param_value": 3,
                    "parameter2": 2,
                    "some_parameter": 1,
                    "some_value": 1,
                    "value": 1
                },
                "param_4": {
                    "additional_data": 1,
                    "arg2": 1,
                    "arg3": 1,
                    "array_ptr": 1,
                    "buffer": 5,
                    "data": 8,
                    "data_pointer": 2,
                    "data_ptr": 5,
                    "execution_data": 1,
                    "output_buffer": 1,
                    "param4": 3,
                    "param_b": 1,
                    "param_ptr": 1
                },
                "puVar2": {
                    "array": 2,
                    "array_ptr": 4,
                    "array_ptr2": 1,
                    "data_pointer": 1,
                    "data_ptr": 6,
                    "data_ptr_2": 1,
                    "pointer": 3,
                    "ptr": 7,
                    "ptr_data": 1,
                    "short_data": 1,
                    "table": 1,
                    "value": 1,
                    "var_data": 1
                }
            },
            "called": [
                "FUN_0800316c",
                "FUN_08003414",
                "FUN_0800314e",
                "FUN_0800355e",
                "FUN_08003486",
                "FUN_08003138",
                "FUN_080033d8"
            ],
            "calling": [
                "FUN_08000600"
            ],
            "code": "\nvoid function_process_data_08004110(uint index,undefined4 mode,undefined4 param,undefined *data)\n\n{\n  int result;\n  undefined *ptr;\n  int index;\n  \n  if (index < 0x60) {\n    index = (int)*(short *)(&DAT_08005d3c + index * 2);\n    ptr = &DAT_08005d3c;\n  }\n  else {\n    index = -1;\n    ptr = data;\n  }\n  if (index != -1) {\n    result = FUN_08003138(index,&DAT_200002e0,param,ptr,data);\n    if (result != 0) {\n      result = FUN_0800355e(index,&DAT_08005a18);\n      if (result == 0) {\n        result = FUN_0800355e(index,&DAT_08005a3c);\n        if (result != 0) {\n          FUN_08003414(index);\n        }\n      }\n      else {\n        FUN_080033d8(index);\n      }\n      FUN_0800316c(index,&DAT_200002e0);\n    }\n    switch(mode) {\n    case 0:\n      FUN_08003486(index,0);\n      break;\n    case 1:\n      FUN_08003486(index,1,0);\n      break;\n    case 2:\n      FUN_08003486(index,0,1);\n      break;\n    case 3:\n      FUN_08003486(index,0,2);\n    }\n    FUN_0800314e(index,&DAT_2000030c);\n  }\n  return;\n}\n\n",
            "current_name": "function_process_data_08004110",
            "entrypoint": "0x08004110",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004110": "function_process_data_08004110",
                "iVar1": "result",
                "iVar3": "index",
                "param_1": "index",
                "param_2": "mode",
                "param_3": "param",
                "param_4": "data",
                "puVar2": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080041bc": {
            "additional_data": {
                "FUN_08003138": {
                    "calculate_value": 1,
                    "get_data": 1,
                    "get_shifted_value": 1,
                    "get_updated_value": 1,
                    "get_value": 2,
                    "perform_operation": 1,
                    "process_data": 1,
                    "process_data_helper": 1
                },
                "FUN_0800318c": {
                    "calculate_shift": 1,
                    "calculate_shifted_value": 1,
                    "extract_bits": 1,
                    "get_shifted_value": 2,
                    "modify_data": 1,
                    "process_value": 1,
                    "reverse_bits": 1,
                    "shift_value": 1
                },
                "FUN_080034b6": {
                    "apply_bit_mask": 1,
                    "apply_modification": 1,
                    "apply_shift": 3,
                    "apply_shifted_value": 1,
                    "set_bit_value": 2,
                    "update_data": 1
                },
                "FUN_080041bc": {
                    "extract_data": 1,
                    "process_data": 28
                },
                "iVar1": {
                    "result": 29,
                    "return_value": 2
                },
                "param_1": {
                    "data_index": 2,
                    "data_length": 1,
                    "data_size": 1,
                    "index": 21,
                    "input_index": 2,
                    "input_size": 1,
                    "input_value": 3
                },
                "param_2": {
                    "flag": 1,
                    "param1": 1,
                    "param2": 12,
                    "param_a": 1,
                    "param_flag": 1,
                    "param_one": 1,
                    "value": 2,
                    "value1": 12
                },
                "param_3": {
                    "length": 1,
                    "param2": 1,
                    "param3": 12,
                    "param_b": 1,
                    "param_two": 1,
                    "param_value": 1,
                    "size": 1,
                    "value": 1,
                    "value2": 12
                },
                "param_4": {
                    "alternate_data": 1,
                    "array": 1,
                    "buffer": 2,
                    "data": 12,
                    "data_array": 1,
                    "data_buffer": 2,
                    "data_ptr": 4,
                    "output_data": 1,
                    "param4": 6,
                    "ptr": 1
                },
                "puVar3": {
                    "array": 1,
                    "array_ptr": 3,
                    "data_pointer": 5,
                    "data_ptr": 5,
                    "data_ptr2": 1,
                    "lookup_table": 1,
                    "memory_address": 1,
                    "pointer": 4,
                    "ptr": 6,
                    "short_array": 1,
                    "short_values_array": 1,
                    "source_data": 1,
                    "source_data_ptr": 1
                },
                "uVar2": {
                    "adjusted_value": 2,
                    "calculated_value": 1,
                    "converted_value": 1,
                    "modified_data": 1,
                    "modified_short": 1,
                    "processed_value": 1,
                    "shift_value": 1,
                    "shifted_value": 20,
                    "transformed_value": 2,
                    "var": 1
                },
                "uVar4": {
                    "data": 2,
                    "data_index": 1,
                    "element": 1,
                    "extracted_value": 1,
                    "lookup_value": 1,
                    "short_value": 12,
                    "source_data_index": 1,
                    "value": 11,
                    "value3": 1
                }
            },
            "called": [
                "FUN_0800318c",
                "FUN_080034b6",
                "FUN_08003138"
            ],
            "calling": [
                "FUN_0800076c",
                "FUN_080006b4",
                "FUN_08000600"
            ],
            "code": "\nvoid process_data_080041bc(uint index,undefined4 value1,undefined4 value2,undefined *data)\n\n{\n  int result;\n  undefined4 shifted_value;\n  undefined *ptr;\n  uint short_value;\n  \n  if (index < 0x60) {\n    short_value = (uint)*(short *)(&DAT_08005d3c + index * 2);\n    ptr = &DAT_08005d3c;\n  }\n  else {\n    short_value = 0xffffffff;\n    ptr = data;\n  }\n  if ((short_value != 0xffffffff) &&\n     (result = FUN_08003138(short_value,&DAT_2000030c,value2,ptr,data), result != 0)) {\n    shifted_value = FUN_0800318c((short_value << 0x18) >> 0x1c);\n    FUN_080034b6(shifted_value,1 << (short_value & 0xf) & 0xffff,value1);\n  }\n  return;\n}\n\n",
            "current_name": "process_data_080041bc",
            "entrypoint": "0x080041bc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080041bc": "process_data_080041bc",
                "iVar1": "result",
                "param_1": "index",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "data",
                "puVar3": "ptr",
                "uVar2": "shifted_value",
                "uVar4": "short_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004204": {
            "additional_data": {
                "FUN_0800346c": {
                    "call_sub_function": 1,
                    "configure_device": 1,
                    "configure_hardware": 1,
                    "execute_initialization": 5,
                    "execute_system_init": 1,
                    "initialize_data": 1,
                    "initialize_hardware": 1,
                    "initialize_system": 1,
                    "initialize_variables": 1,
                    "load_config_file": 1,
                    "perform_initialization": 12,
                    "perform_start_operations": 1,
                    "perform_startup_tasks": 1,
                    "set_up_environment": 1,
                    "start_initialization": 1,
                    "subfunction": 1
                },
                "FUN_08004204": {
                    "execute_initialization": 5,
                    "execute_main_function": 1,
                    "initialize": 3,
                    "initialize_application": 6,
                    "initialize_file_system": 1,
                    "initialize_program": 2,
                    "initialize_system": 13
                }
            },
            "called": [
                "FUN_0800346c"
            ],
            "calling": [
                "FUN_0800076c",
                "FUN_08000b54"
            ],
            "code": "\nvoid initialize_file_system_08004204(void)\n\n{\n  FUN_0800346c();\n  return;\n}\n\n",
            "current_name": "initialize_file_system_08004204",
            "entrypoint": "0x08004204",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004204": "initialize_file_system_08004204"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004240": {
            "additional_data": {
                "0x138": {
                    "first_offset": 1,
                    "offset1": 2,
                    "offset_1": 3,
                    "offset_a": 1
                },
                "0x13a": {
                    "offset2": 2,
                    "offset_2": 3,
                    "offset_b": 1,
                    "second_offset": 1
                },
                "0x3f": {
                    "constant_b": 1,
                    "mask": 1
                },
                "0x40": {
                    "constant": 1,
                    "constant_a": 1
                },
                "FUN_08004240": {
                    "calculate_checksum": 6,
                    "calculate_difference": 1,
                    "calculate_intermediate_value": 1,
                    "calculate_new_value": 1,
                    "calculate_offset": 14,
                    "calculate_result": 2,
                    "calculate_shift": 1,
                    "calculate_shift_amount": 4,
                    "calculate_shifted_difference": 1
                },
                "PTR_0x138": {
                    "value1_pointer": 1
                },
                "PTR_0x13a": {
                    "value2_pointer": 1
                },
                "_Unnamed_variable_1": {
                    "offset1": 1
                },
                "_Unnamed_variable_2": {
                    "offset2": 1
                },
                "param_1": {
                    "address": 7,
                    "base_address": 16,
                    "data_address": 1,
                    "input_value": 7
                },
                "short": {
                    "ushort": 1
                },
                "short_1": {
                    "offset1": 1
                },
                "short_2": {
                    "offset2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004338"
            ],
            "code": "\nuushort calculate_offset_08004240(int base_address)\n\n{\n  return (*(ushort *)(base_address + 0x138) + 0x40) - *(ushort *)(base_address + 0x13a) & 0x3f;\n}\n\n",
            "current_name": "calculate_offset_08004240",
            "entrypoint": "0x08004240",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004240": "calculate_offset_08004240",
                "param_1": "base_address",
                "short": "ushort"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080042ac": {
            "additional_data": {
                "FUN_080042ac": {
                    "process_data": 2,
                    "process_param": 1,
                    "reverse_and_update_value": 1,
                    "update_and_increment_value": 3,
                    "update_and_store_value": 1,
                    "update_array": 1,
                    "update_data": 14,
                    "update_data_and_index": 2,
                    "update_data_if_matches": 1,
                    "update_local_value": 1,
                    "update_memory": 1,
                    "update_memory_and_index": 1,
                    "update_parameter": 2
                },
                "iVar1": {
                    "error_code": 1,
                    "result": 28,
                    "return_value": 2
                },
                "local_9": {
                    "new_local_data": 1,
                    "new_value": 24,
                    "temp_value": 2,
                    "updated_value": 1,
                    "value": 2,
                    "value_to_save": 1
                },
                "param_1": {
                    "array_pointer": 1,
                    "data": 7,
                    "data_address": 2,
                    "data_pointer": 6,
                    "data_ptr": 1,
                    "data_struct": 1,
                    "input": 2,
                    "input_param": 3,
                    "input_value": 5,
                    "param": 2,
                    "parameter": 1
                },
                "uVar2": {
                    "computed_value": 1,
                    "incremented_index": 1,
                    "index": 1,
                    "new_index": 16,
                    "new_value": 2,
                    "updated_index": 3,
                    "updated_value": 7
                }
            },
            "called": [
                "FUN_08003e18"
            ],
            "calling": [],
            "code": "\nvoid update_data_and_index_080042ac(int data)\n\n{\n  int result;\n  ushort new_index;\n  undefined new_value;\n  \n  result = FUN_08003e18(data,&new_value);\n  if ((result == 0) &&\n     (new_index = *(short *)(data + 100) + 1U & 0x3f, new_index != *(ushort *)(data + 0x66))) {\n    *(undefined *)(*(int *)(data + 0x60) + (uint)*(ushort *)(data + 100)) = new_value;\n    *(ushort *)(data + 100) = new_index;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_and_index_080042ac",
            "entrypoint": "0x080042ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080042ac": "update_data_and_index_080042ac",
                "iVar1": "result",
                "local_9": "new_value",
                "param_1": "data",
                "uVar2": "new_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080042e8": {
            "additional_data": {
                "FUN_08003df4": {
                    "check_condition": 1,
                    "check_data": 1,
                    "check_data_validity": 2
                },
                "FUN_08003eac": {
                    "execute_logic_if_zero": 1,
                    "perform_action": 1,
                    "process_data": 1,
                    "update_data_error_handler": 1
                },
                "FUN_080042e8": {
                    "initialize_and_process_data": 1,
                    "initialize_and_store_value": 1,
                    "initialize_and_update_value": 1,
                    "initialize_data": 7,
                    "set_and_check_value": 2,
                    "set_flag_and_store_data": 1,
                    "set_flag_and_update": 1,
                    "set_param_and_check": 1,
                    "update_data": 12,
                    "update_data_and_call_function": 1,
                    "update_parameter": 1,
                    "update_value": 2
                },
                "LAB_0800420c_1": {
                    "label1": 1
                },
                "bVar1": {
                    "byte1": 1,
                    "byte_counter": 2,
                    "byte_val1": 1,
                    "byte_value": 16,
                    "byte_var1": 1,
                    "counter_byte": 1,
                    "increment_byte": 1,
                    "lower_byte": 2,
                    "new_value": 3,
                    "temp_byte": 1,
                    "temp_byte1": 2
                },
                "bVar2": {
                    "adjusted_byte": 1,
                    "adjusted_byte_value": 1,
                    "adjusted_value": 1,
                    "bit_masked_value": 1,
                    "byte2": 1,
                    "byte_val2": 1,
                    "byte_var2": 1,
                    "masked_byte": 4,
                    "masked_byte_counter": 1,
                    "masked_byte_value": 5,
                    "masked_counter_byte": 1,
                    "masked_value": 6,
                    "modified_byte": 3,
                    "positive_byte_value": 1,
                    "temp_byte2": 2,
                    "updated_byte_value": 1
                },
                "iVar3": {
                    "count": 1,
                    "counter": 7,
                    "increment": 2,
                    "incremented_value": 17,
                    "int_var3": 1,
                    "temp_int": 1,
                    "temp_var": 1,
                    "value": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 3,
                    "data": 5,
                    "data_address": 5,
                    "data_pointer": 3,
                    "data_ptr": 3,
                    "data_struct": 3,
                    "data_struct_ptr": 2,
                    "data_structure": 2,
                    "input": 1,
                    "memory": 1,
                    "param": 1,
                    "param1": 1
                },
                "param_2": {
                    "data": 2,
                    "new_data": 3,
                    "new_value": 9,
                    "param": 1,
                    "value": 15,
                    "value_to_update": 1
                }
            },
            "called": [
                "FUN_08003eac",
                "FUN_08003df4"
            ],
            "calling": [],
            "code": "\nundefined4 update_data_and_call_function_080042e8(int data,undefined value)\n\n{\n  byte byte_value;\n  byte masked_value;\n  int incremented_value;\n  \n  *(undefined *)(data + 0x10) = 1;\n  incremented_value = *(ushort *)(data + 0x140) + 1;\n  byte_value = (byte)incremented_value;\n  masked_value = byte_value & 0x7f;\n  if (incremented_value == 0) {\n    masked_value = -(-byte_value & 0x7f);\n  }\n  do {\n  } while (*(ushort *)(data + 0x142) == (ushort)masked_value);\n  *(undefined *)(*(int *)(data + 0x13c) + (uint)*(ushort *)(data + 0x140)) = value;\n  *(ushort *)(data + 0x140) = (ushort)masked_value;\n  incremented_value = FUN_08003df4(data + 0xd4);\n  if (incremented_value == 0) {\n    FUN_08003eac(data + 0xd4,&label1);\n  }\n  return 1;\n}\n\n",
            "current_name": "update_data_and_call_function_080042e8",
            "entrypoint": "0x080042e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080042e8": "update_data_and_call_function_080042e8",
                "LAB_0800420c_1": "label1",
                "bVar1": "byte_value",
                "bVar2": "masked_value",
                "iVar3": "incremented_value",
                "param_1": "data",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004338": {
            "called": [
                "FUN_08004240"
            ],
            "calling": [
                "FUN_08004658"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800433e) */\n/* WARNING: Removing unreachable block (ram,0x08004350) */\n/* WARNING: Removing unreachable block (ram,0x08004346) */\n/* WARNING: Removing unreachable block (ram,0x08004358) */\n\nvoid FUNC_08004338(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004338",
            "entrypoint": "0x08004338",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004338": "FUNC_08004338"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004364": {
            "additional_data": {
                "0x11": {
                    "constant1": 1,
                    "constant_offset1": 1,
                    "info_value": 1
                },
                "0x134": {
                    "first_offset": 1,
                    "info_offset": 1,
                    "offset1": 2,
                    "offset_a": 1
                },
                "0x138": {
                    "first_value_offset": 1,
                    "offset2": 2,
                    "second_offset": 1,
                    "variable_a": 1
                },
                "0x13a": {
                    "offset3": 2,
                    "second_value_offset": 1,
                    "third_offset": 1,
                    "variable_b": 1
                },
                "0x13c": {
                    "fourth_offset": 1,
                    "offset4": 2,
                    "offset_b": 1,
                    "other_info_offset": 1
                },
                "0x140": {
                    "fifth_offset": 1,
                    "offset5": 2,
                    "third_value_offset": 1,
                    "variable_c": 1
                },
                "0x142": {
                    "fourth_value_offset": 1,
                    "offset6": 2,
                    "sixth_offset": 1,
                    "variable_d": 1
                },
                "0x51": {
                    "constant2": 1,
                    "constant_offset2": 1,
                    "other_info_value": 1
                },
                "FUN_08004364": {
                    "initialize_data": 12,
                    "initialize_data_structure": 2,
                    "initialize_data_structures": 1,
                    "initialize_function": 2,
                    "initialize_memory": 1,
                    "initialize_parameters": 8,
                    "initialize_params": 1,
                    "initialize_values": 1,
                    "set_param_values": 1,
                    "set_parameters": 1,
                    "update_params": 1
                },
                "param_1": {
                    "base_address": 20,
                    "data": 1,
                    "data_addr": 1,
                    "data_address": 2,
                    "data_pointer": 3,
                    "data_structure_address": 1,
                    "input_param": 1,
                    "param": 1,
                    "parameter": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800447c"
            ],
            "code": "\nvoid initialize_data_structure_08004364(int base_address)\n\n{\n  *(int *)(base_address + 0x134) = base_address + 0x11;\n  *(undefined2 *)(base_address + 0x138) = 0;\n  *(undefined2 *)(base_address + 0x13a) = 0;\n  *(int *)(base_address + 0x13c) = base_address + 0x51;\n  *(undefined2 *)(base_address + 0x140) = 0;\n  *(undefined2 *)(base_address + 0x142) = 0;\n  return;\n}\n\n",
            "current_name": "initialize_data_structure_08004364",
            "entrypoint": "0x08004364",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004364": "initialize_data_structure_08004364",
                "param_1": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004388": {
            "additional_data": {
                "FUN_08003978": {
                    "initialize_buffer": 5,
                    "initialize_d4": 1,
                    "initialize_serial": 1,
                    "initialize_serial_buffer": 2,
                    "setup_serial": 1
                },
                "FUN_08003e54": {
                    "configure_d4": 1,
                    "configure_serial": 3,
                    "configure_serial_port": 2,
                    "set_serial_config": 2,
                    "set_serial_port_config": 1,
                    "setup_buffer": 1
                },
                "FUN_08004388": {
                    "configure_hardware_serial": 2,
                    "configure_serial": 4,
                    "configure_serial_port": 4,
                    "initialize_hardware_serial": 8,
                    "initialize_serial": 5,
                    "initialize_serial_communication": 3,
                    "initialize_serial_config": 1,
                    "initialize_serial_port": 4
                },
                "FUN_08004808": {
                    "display_error": 1,
                    "handle_error": 1,
                    "log_error": 1,
                    "print_error_message": 4,
                    "report_error": 2,
                    "show_error_message": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "error_handler": 4,
                    "interrupt_function": 1,
                    "jump_table": 13,
                    "jump_table_address": 1,
                    "jump_table_ptr": 1,
                    "jumptable": 2,
                    "jumptable_function": 4,
                    "recovery_function": 1
                },
                "bVar1": {
                    "bit_value": 1,
                    "config_bit": 1,
                    "config_bit1": 1,
                    "config_bits": 8,
                    "config_byte_bit": 1,
                    "config_byte_masked": 1,
                    "config_byte_part": 1,
                    "config_flag": 2,
                    "config_flags": 2,
                    "config_mask": 6,
                    "config_masked": 1,
                    "mode_bits": 1,
                    "mode_mask": 2,
                    "serial_config_mask": 1,
                    "serial_options_masked": 1,
                    "settings_mask": 1
                },
                "extraout_r1": {
                    "branch_condition": 1,
                    "byte_value": 1,
                    "error_code": 1,
                    "file_index": 1,
                    "file_size": 1,
                    "index": 1,
                    "jumptable_index": 1,
                    "random_number": 1,
                    "random_value": 1,
                    "return_code": 1,
                    "serial_config_type": 1,
                    "temp_value": 1
                },
                "iVar2": {
                    "bit_count": 1,
                    "config_bit2": 1,
                    "config_bits": 1,
                    "config_byte_value": 1,
                    "config_index": 2,
                    "config_option": 2,
                    "config_value": 18,
                    "flow_control": 1,
                    "mode_value": 1,
                    "options": 1,
                    "serial_mode": 1,
                    "serial_port_config": 1
                },
                "param_1": {
                    "config_ptr": 1,
                    "device_address": 2,
                    "port_address": 3,
                    "serial_device": 1,
                    "serial_device_address": 1,
                    "serial_instance": 2,
                    "serial_object": 3,
                    "serial_object_address": 1,
                    "serial_port": 10,
                    "serial_port_address": 7
                },
                "param_2": {
                    "baud_rate": 30,
                    "baudrate": 1
                },
                "param_3": {
                    "byte_value": 1,
                    "config": 11,
                    "config_byte": 10,
                    "configuration": 2,
                    "mode": 3,
                    "serial_config": 2,
                    "serial_options": 1,
                    "settings": 1
                }
            },
            "called": [
                "FUN_08003e54",
                "FUN_08003978",
                "FUN_08004808"
            ],
            "calling": [
                "FUN_08000600"
            ],
            "code": "\nvoid initialize_hardware_serial_08004388(int serial_port,undefined4 baud_rate,byte config)\n\n{\n  uint serial_config_type;\n  byte config_bits;\n  int config_value;\n  code *jump_table;\n  \n  *(undefined4 *)(serial_port + 0x11c) = baud_rate;\n  *(byte *)(serial_port + 0x144) = config;\n  config_bits = config & 7;\n  if (config_bits == 4) {\n    config_value = 7;\n  }\n  else if (config_bits == 6) {\n    config_value = 8;\n  }\n  else if (config_bits == 2) {\n    config_value = 6;\n  }\n  else {\n    config_value = 0;\n  }\n  if ((config & 0x30) == 0x30) {\n    *(undefined4 *)(serial_port + 0x128) = 0x600;\n    config_value = config_value + 1;\n  }\n  else if ((config & 0x20) == 0) {\n    *(undefined4 *)(serial_port + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serial_port + 0x128) = 0x400;\n    config_value = config_value + 1;\n  }\n  if ((config & 8) == 0) {\n    *(undefined4 *)(serial_port + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serial_port + 0x124) = 0x2000;\n  }\n  if (config_value == 8) {\n    *(undefined4 *)(serial_port + 0x120) = 0;\n  }\n  else if (config_value == 9) {\n    *(undefined4 *)(serial_port + 0x120) = 0x1000;\n  }\n  else {\n    config_value = 0;\n  }\n  if (config_value != 0) {\n    FUN_08003978(serial_port + 0xd4);\n    FUN_08003e54(serial_port + 0xd4,0x80042ad);\n    return;\n  }\n  jump_table = (code *)0x8004432;\n  FUN_08004808(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\");\n  if (serial_config_type < 0x60) {\n    uRam0000012e = *(undefined2 *)(&DAT_08005d3c + serial_config_type * 2);\n  }\n  else {\n    uRam0000012e = 0xffff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08004452. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "initialize_hardware_serial_08004388",
            "entrypoint": "0x08004388",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004388": "initialize_hardware_serial_08004388",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "bVar1": "config_bits",
                "extraout_r1": "serial_config_type",
                "iVar2": "config_value",
                "param_1": "serial_port",
                "param_2": "baud_rate",
                "param_3": "config"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004444": {
            "additional_data": {
                "FUN_08004444": {
                    "convert_parameter_to_output": 1,
                    "initialize_function": 1,
                    "process_param": 1,
                    "set_flag": 1,
                    "set_function_jump_table": 1,
                    "set_function_param": 1,
                    "set_function_parameters": 1,
                    "set_function_status": 1,
                    "set_parameter_value": 1,
                    "set_priority": 1,
                    "set_return_code": 2,
                    "set_return_value": 7,
                    "set_return_value_based_on_input": 1,
                    "set_return_value_based_on_param": 1,
                    "set_return_value_based_on_parameter": 1,
                    "set_status_and_jump": 1,
                    "set_status_code": 1,
                    "set_value_in_param_1": 1,
                    "update_data": 2,
                    "update_param_value": 1,
                    "update_parameter_value": 2,
                    "update_status": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "jmp_table": 1,
                    "jump_table": 11,
                    "jumptable": 1
                },
                "param_1": {
                    "address": 4,
                    "base_address": 4,
                    "data_pointer": 1,
                    "destination": 3,
                    "destination_address": 1,
                    "flag_address": 1,
                    "function_address": 2,
                    "function_param1": 1,
                    "memory_base_address": 1,
                    "object_address": 1,
                    "output_address": 3,
                    "output_buffer": 1,
                    "output_pointer": 1,
                    "result": 1,
                    "result_pointer": 1,
                    "return_address": 1,
                    "return_value_address": 1,
                    "status": 1,
                    "status_address": 1,
                    "status_code": 1
                },
                "param_2": {
                    "error_code": 2,
                    "flag_value": 1,
                    "function_param2": 1,
                    "index": 8,
                    "input": 1,
                    "input_value": 8,
                    "offset": 3,
                    "parameter_index": 1,
                    "parameter_value": 1,
                    "priority_level": 1,
                    "value": 4
                },
                "uVar1": {
                    "converted_value": 1,
                    "data_value": 2,
                    "default_value": 2,
                    "new_priority": 1,
                    "result": 2,
                    "return_value": 11,
                    "status": 1,
                    "status_value": 2,
                    "updated_value": 3,
                    "value": 5
                }
            },
            "called": [],
            "calling": [
                "FUN_0800447c"
            ],
            "code": "\nvoid set_return_value_based_on_parameter_08004444(int base_address,uint index)\n\n{\n  undefined2 return_value;\n  code *jump_table;\n  \n  if (index < 0x60) {\n    return_value = *(undefined2 *)(&DAT_08005d3c + index * 2);\n  }\n  else {\n    return_value = 0xffff;\n  }\n  *(undefined2 *)(base_address + 0x12e) = return_value;\n                    /* WARNING: Could not recover jumptable at 0x08004452. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "set_return_value_based_on_parameter_08004444",
            "entrypoint": "0x08004444",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004444": "set_return_value_based_on_parameter_08004444",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "param_1": "base_address",
                "param_2": "index",
                "uVar1": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004460": {
            "additional_data": {
                "FUN_08004460": {
                    "assign_present_color": 1,
                    "set_code_value": 1,
                    "set_destination_value": 2,
                    "set_field_value": 1,
                    "set_memory_value_based_on_condition": 1,
                    "set_param1_value": 1,
                    "set_param_value": 7,
                    "set_parameter_value": 8,
                    "set_return_value_based_on_index": 1,
                    "update_param": 2,
                    "update_param_value": 1,
                    "update_parameter_value": 2,
                    "update_value": 1,
                    "update_value_at_offset": 1,
                    "update_value_in_memory": 1
                },
                "param_1": {
                    "base_address": 13,
                    "destination": 1,
                    "destination_address": 4,
                    "device_address": 1,
                    "memory_address": 2,
                    "object_address": 2,
                    "output_address": 1,
                    "param1": 1,
                    "param_address": 1,
                    "parameter_address": 1,
                    "struct_ptr": 1,
                    "target_address": 3
                },
                "param_2": {
                    "color_index": 1,
                    "field_index": 1,
                    "index": 13,
                    "input_index": 1,
                    "offset": 7,
                    "param2": 1,
                    "param_index": 1,
                    "param_value": 1,
                    "parameter_index": 3,
                    "value": 1,
                    "value_index": 1
                },
                "uVar1": {
                    "assigned_value": 1,
                    "code_value": 1,
                    "color_value": 1,
                    "destination_value": 2,
                    "field_value": 1,
                    "new_value": 4,
                    "param_value": 1,
                    "parameter_value": 2,
                    "return_value": 1,
                    "updated_value": 4,
                    "value": 13
                }
            },
            "called": [],
            "calling": [
                "FUN_0800447c"
            ],
            "code": "\nvoid set_parameter_value_08004460(int base_address,uint index)\n\n{\n  undefined2 value;\n  \n  if (index < 0x60) {\n    value = *(undefined2 *)(&DAT_08005d3c + index * 2);\n  }\n  else {\n    value = 0xffff;\n  }\n  *(undefined2 *)(base_address + 300) = value;\n  return;\n}\n\n",
            "current_name": "set_parameter_value_08004460",
            "entrypoint": "0x08004460",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004460": "set_parameter_value_08004460",
                "param_1": "base_address",
                "param_2": "index",
                "uVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800447c": {
            "additional_data": {
                "DAT_20000338": {
                    "constant_data": 1
                },
                "FUN_0800351e": {
                    "calculate_value": 3,
                    "find_value": 2,
                    "generate_value": 1,
                    "get_first_data": 1,
                    "get_flag_value": 1,
                    "get_info": 1,
                    "get_initial_value": 4,
                    "get_next_value": 1,
                    "get_return_value": 1,
                    "get_some_value": 1,
                    "get_updated_value": 1,
                    "get_value": 10,
                    "perform_calculation": 1,
                    "retrieve_value": 2,
                    "select_value": 1
                },
                "FUN_08004364": {
                    "cleanup": 1,
                    "cleanup_data": 1,
                    "execute_function_b": 1,
                    "finalize": 1,
                    "finalize_data": 1,
                    "finalize_function": 6,
                    "finalize_initialization": 1,
                    "finalize_operation": 1,
                    "finalize_param": 2,
                    "finalize_parameters": 2,
                    "finalize_params": 3,
                    "finalize_process": 2,
                    "finalize_processing": 2,
                    "perform_sub_task2": 1,
                    "process_data": 3,
                    "process_parameters": 2,
                    "process_result": 1
                },
                "FUN_08004444": {
                    "copy_data": 1,
                    "do_something": 2,
                    "execute_action_b": 1,
                    "execute_function_a": 1,
                    "execute_function_c": 1,
                    "execute_task": 1,
                    "function1": 1,
                    "function_a": 1,
                    "initialize_data": 1,
                    "initialize_data_special_case": 1,
                    "perform_action1": 2,
                    "perform_action_a": 1,
                    "perform_operation": 1,
                    "perform_operation1": 1,
                    "perform_operation_a": 1,
                    "perform_sub_task3": 1,
                    "perform_task1": 1,
                    "process_data": 9,
                    "process_function": 1,
                    "set_parameters1": 1,
                    "set_params_and_call_function": 1
                },
                "FUN_08004460": {
                    "execute_action": 1,
                    "execute_action_a": 1,
                    "execute_function_a": 1,
                    "execute_function_b": 1,
                    "finalize_operation": 1,
                    "function2": 1,
                    "function_b": 1,
                    "perform_action": 5,
                    "perform_action2": 2,
                    "perform_action_b": 1,
                    "perform_additional_actions": 1,
                    "perform_operation": 1,
                    "perform_operation2": 1,
                    "perform_operation_b": 1,
                    "perform_sub_task1": 1,
                    "perform_task": 2,
                    "perform_task2": 1,
                    "print_message": 3,
                    "process_data": 1,
                    "process_data_special_case": 1,
                    "set_flag": 1,
                    "set_parameters2": 1,
                    "update_data": 1
                },
                "FUN_0800447c": {
                    "initialize_data": 4,
                    "initialize_function": 6,
                    "initialize_param": 3,
                    "initialize_parameters": 14,
                    "initialize_params": 4
                },
                "param_1": {
                    "array_pointer": 1,
                    "data": 2,
                    "data_array": 1,
                    "data_pointer": 1,
                    "function_data": 3,
                    "initialized_array": 1,
                    "input1": 1,
                    "output_array": 2,
                    "param_array": 5,
                    "parameters": 10,
                    "parameters_array": 1,
                    "params": 3
                },
                "param_2": {
                    "input": 2,
                    "input_param": 1,
                    "input_value": 2,
                    "param2": 7,
                    "param_int": 1,
                    "param_value1": 1,
                    "value": 7,
                    "value1": 10
                },
                "param_3": {
                    "additional_param": 1,
                    "flag": 2,
                    "input": 1,
                    "input2": 1,
                    "param1": 1,
                    "param3": 8,
                    "param_3": 1,
                    "param_a": 1,
                    "param_uint": 1,
                    "param_value2": 1,
                    "size": 3,
                    "value": 1,
                    "value2": 9
                },
                "param_4": {
                    "data": 1,
                    "flag": 1,
                    "other_param": 1,
                    "output": 1,
                    "param2": 1,
                    "param4": 8,
                    "param_4": 1,
                    "param_b": 1,
                    "param_uint2": 1,
                    "param_value3": 1,
                    "secondary_param": 1,
                    "size": 1,
                    "unused": 1,
                    "value2": 1,
                    "value3": 10
                },
                "uVar1": {
                    "flag_value": 1,
                    "generated_value": 1,
                    "initial_value": 1,
                    "result": 16,
                    "return_value": 3,
                    "value": 1
                }
            },
            "called": [
                "FUN_08004460",
                "FUN_08004364",
                "FUN_08004444",
                "FUN_0800351e"
            ],
            "calling": [
                "FUN_080044d8"
            ],
            "code": "\nundefined4 *\ninitialize_parameters_0800447c(undefined4 *parameters,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  undefined2 result;\n  \n  parameters[1] = 0;\n  parameters[2] = 1000;\n  *parameters = &PTR_FUN_080042e8_1_08005ed4;\n  if (parameters == &DAT_20000338) {\n    FUN_08004444(&DAT_20000338,0x4c,value2,&DAT_20000338,value3);\n    FUN_08004460(&DAT_20000338,0x4d);\n  }\n  else {\n    result = FUN_0800351e(value1,&DAT_08005c10);\n    *(undefined2 *)((int)parameters + 0x12e) = result;\n    result = FUN_0800351e(value1,&DAT_08005ca0);\n    *(undefined2 *)(parameters + 0x4b) = result;\n  }\n  FUN_08004364(parameters);\n  return parameters;\n}\n\n",
            "current_name": "initialize_parameters_0800447c",
            "entrypoint": "0x0800447c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800447c": "initialize_parameters_0800447c",
                "param_1": "parameters",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080044d8": {
            "additional_data": {
                "FUN_0800447c": {
                    "call_sub_function": 1,
                    "execute_sub_function": 1,
                    "perform_operation": 1,
                    "process_data": 6
                },
                "FUN_080044d8": {
                    "check_and_call": 1,
                    "check_and_call_function": 6,
                    "check_and_call_sub_function": 1,
                    "check_and_process_data": 1,
                    "check_for_valid_parameter": 1,
                    "check_param": 2,
                    "check_parameters": 1,
                    "handle_param": 3,
                    "handle_paramters": 1,
                    "initialize_data": 1,
                    "process_data": 2,
                    "process_input": 5,
                    "process_param": 3,
                    "process_parameter": 1,
                    "process_parameters": 2
                },
                "param_1": {
                    "argument1": 1,
                    "check_value": 2,
                    "data_flag": 1,
                    "data_pointer": 1,
                    "flag": 4,
                    "flag_param": 1,
                    "input": 1,
                    "input_check": 2,
                    "input_status": 2,
                    "param": 1,
                    "param1": 1,
                    "param_a": 1,
                    "param_condition": 1,
                    "param_one": 1,
                    "parameter1": 1,
                    "status": 8,
                    "value_1": 2
                },
                "param_2": {
                    "argument2": 1,
                    "data_value": 1,
                    "error_code": 1,
                    "flag": 1,
                    "flag_value": 3,
                    "input_value": 3,
                    "param2": 1,
                    "param_b": 1,
                    "param_two": 1,
                    "parameter2": 1,
                    "value": 14,
                    "value_2": 2,
                    "value_param": 1
                },
                "param_3": {
                    "arg1": 3,
                    "arg_value_1": 1,
                    "argument3": 1,
                    "config": 1,
                    "data1": 2,
                    "data_param_a": 1,
                    "param": 1,
                    "param1": 4,
                    "param3": 5,
                    "param_3": 4,
                    "param_a": 1,
                    "param_c": 1,
                    "param_one": 1,
                    "param_three": 1,
                    "parameter3": 1,
                    "parameter_3": 1,
                    "value_3": 2
                },
                "param_4": {
                    "arg2": 3,
                    "arg_value_2": 1,
                    "argument4": 1,
                    "config": 1,
                    "data2": 2,
                    "data_param_b": 1,
                    "option": 1,
                    "param2": 4,
                    "param4": 5,
                    "param_4": 4,
                    "param_b": 1,
                    "param_d": 1,
                    "param_four": 1,
                    "param_two": 1,
                    "parameter4": 1,
                    "parameter_4": 1,
                    "value_4": 2
                }
            },
            "called": [
                "FUN_0800447c"
            ],
            "calling": [],
            "code": "\nvoid check_and_call_sub_function_080044d8(int status,int value,undefined4 param3,undefined4 param4)\n\n{\n  if (status != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_0800447c(&DAT_20000338,0x40004800,param3,0xffff,param4);\n  }\n  return;\n}\n\n",
            "current_name": "check_and_call_sub_function_080044d8",
            "entrypoint": "0x080044d8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080044d8": "check_and_call_sub_function_080044d8",
                "param_1": "status",
                "param_2": "value",
                "param_3": "param3",
                "param_4": "param4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004544": {
            "additional_data": {
                "FUN_08004544": {
                    "init_data": 1,
                    "initialize_data": 19,
                    "initialize_function": 1,
                    "initialize_function_data": 1,
                    "initialize_param": 2,
                    "initialize_parameters": 1,
                    "initialize_params": 3,
                    "set_data": 1,
                    "set_data_pointers": 1,
                    "set_function_params": 1
                },
                "param_1": {
                    "data": 1,
                    "data_pointer": 16,
                    "data_pointers": 1,
                    "data_ptr": 3,
                    "destination": 1,
                    "dst_ptr": 1,
                    "function_data": 1,
                    "output": 1,
                    "output_pointer": 5,
                    "output_ptr": 1
                },
                "param_2": {
                    "parameter2": 1,
                    "value1": 24,
                    "value2": 2,
                    "value_1": 4
                },
                "param_3": {
                    "parameter3": 1,
                    "value2": 24,
                    "value3": 2,
                    "value_2": 4
                },
                "param_4": {
                    "parameter4": 1,
                    "value3": 24,
                    "value4": 2,
                    "value_3": 4
                },
                "param_5": {
                    "parameter5": 1,
                    "value4": 24,
                    "value5": 2,
                    "value_4": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_08004560"
            ],
            "code": "\nvoid initialize_function_data_08004544(undefined4 *data_pointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *data_pointer = &DAT_08005f28;\n  *(undefined *)(data_pointer + 1) = value1;\n  *(undefined *)((int)data_pointer + 5) = value2;\n  *(undefined *)((int)data_pointer + 6) = value3;\n  *(undefined *)((int)data_pointer + 7) = value4;\n  return;\n}\n\n",
            "current_name": "initialize_function_data_08004544",
            "entrypoint": "0x08004544",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004544": "initialize_function_data_08004544",
                "param_1": "data_pointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004560": {
            "additional_data": {
                "FUN_08004544": {
                    "do_something": 1,
                    "init_data": 1,
                    "initialize_data": 5,
                    "perform_special_action": 1,
                    "perform_special_operation": 1,
                    "process_data": 1
                },
                "FUN_08004560": {
                    "check_conditions_and_execute": 1,
                    "check_inputs": 1,
                    "check_param": 2,
                    "check_parameters": 2,
                    "check_params": 4,
                    "check_params_and_call_function": 5,
                    "execute_special_action": 1,
                    "execute_special_operation": 1,
                    "handle_param": 1,
                    "handle_parameters": 1,
                    "handle_params": 2,
                    "handle_special_case": 1,
                    "initialize_data": 1,
                    "initialize_memory": 1,
                    "process_parameters": 3,
                    "process_params": 4
                },
                "param_1": {
                    "action_type": 1,
                    "category": 1,
                    "condition1": 4,
                    "first_param": 3,
                    "first_parameter": 1,
                    "flag": 2,
                    "flag1": 2,
                    "flag_value": 1,
                    "input1": 1,
                    "input_flag": 1,
                    "is_first_param": 1,
                    "param1": 1,
                    "status": 2,
                    "status_code": 1,
                    "status_flag": 1,
                    "value1": 7,
                    "value_1": 1
                },
                "param_2": {
                    "comparison_value": 1,
                    "condition2": 4,
                    "flag2": 2,
                    "input2": 1,
                    "is_second_param": 1,
                    "magic_number": 1,
                    "param2": 1,
                    "second_param": 3,
                    "second_parameter": 1,
                    "special_value": 3,
                    "unused1": 1,
                    "value": 4,
                    "value2": 7,
                    "value_2": 1
                },
                "param_3": {
                    "unused2": 1
                },
                "param_4": {
                    "unused3": 1
                }
            },
            "called": [
                "FUN_08004544"
            ],
            "calling": [],
            "code": "\nvoid check_params_and_call_function_08004560(int value1,int value2)\n\n{\n  if ((value1 == 1) && (value2 == 0xffff)) {\n    FUN_08004544(&DAT_20000480,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "check_params_and_call_function_08004560",
            "entrypoint": "0x08004560",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004560": "check_params_and_call_function_08004560",
                "param_1": "value1",
                "param_2": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004640": {
            "additional_data": {
                "FUN_08004640": {
                    "combine_and_shift": 3,
                    "combine_bits": 3,
                    "combine_bytes": 1,
                    "combine_numbers": 2,
                    "combine_numbers_with_shift": 1,
                    "combine_param_and_shift": 2,
                    "combine_param_and_value": 1,
                    "combine_params": 3,
                    "combine_shifted_values": 1,
                    "combine_values": 12,
                    "merge_bits": 1
                },
                "param_1": {
                    "byte_value": 1,
                    "first_number": 1,
                    "input": 1,
                    "input1": 2,
                    "input_value": 12,
                    "number1": 2,
                    "value": 3,
                    "value1": 8,
                    "value_1": 1
                },
                "param_2": {
                    "base_value": 1,
                    "bit_value": 1,
                    "bitmask": 3,
                    "bits_to_combine": 1,
                    "bitwise_mask": 1,
                    "combined_result": 1,
                    "combined_value": 1,
                    "existing_value": 2,
                    "flag_value": 1,
                    "flags": 2,
                    "input2": 2,
                    "mask": 2,
                    "number2": 2,
                    "parameter": 1,
                    "second_number": 1,
                    "value2": 8,
                    "value_2": 1
                },
                "param_3": {
                    "combined_value": 1,
                    "new_variable": 1,
                    "shifted_value": 4,
                    "value3": 1
                },
                "param_4": {
                    "combined_value": 1
                },
                "param_n": {
                    "new_parameter_name": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08000998",
                "FUN_08000a7a",
                "FUN_080007f0",
                "FUN_080008e2",
                "FUN_08000b04",
                "FUN_08000a00",
                "FUN_08000a4e"
            ],
            "code": "\nuint combine_shifted_values_08004640(int input_value,uint value2)\n\n{\n  return value2 | input_value << 8;\n}\n\n",
            "current_name": "combine_shifted_values_08004640",
            "entrypoint": "0x08004640",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004640": "combine_shifted_values_08004640",
                "param_1": "input_value",
                "param_2": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004646": {
            "called": [],
            "calling": [
                "FUN_08004658"
            ],
            "code": "\nvoid FUNC_08004646(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004646",
            "entrypoint": "0x08004646",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004646": "FUNC_08004646"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004648": {
            "additional_data": {
                "FUN_08000d8e": {
                    "execute_initialization": 1,
                    "execute_sub_function": 1,
                    "execute_subfunction": 1,
                    "execute_system_initialization": 1,
                    "execute_system_setup": 1,
                    "execute_tasks": 1,
                    "perform_action": 2,
                    "perform_additional_tasks": 1,
                    "perform_application_task": 1,
                    "perform_cleanup": 10,
                    "perform_first_task": 1,
                    "perform_initialization": 7,
                    "perform_operation": 1,
                    "perform_task1": 1
                },
                "FUN_08000e3c": {
                    "configure_settings": 1,
                    "configure_system": 1,
                    "perform_task2": 1,
                    "set_application_mode": 1,
                    "set_application_parameter": 1,
                    "set_argument": 1,
                    "set_config_value": 1,
                    "set_configuration": 10,
                    "set_configuration_parameters": 1,
                    "set_configuration_value": 1,
                    "set_count": 1,
                    "set_initial_value": 1,
                    "set_log_level": 1,
                    "set_mode": 3,
                    "set_parameter": 1,
                    "set_priority": 1,
                    "set_program_mode": 2,
                    "set_system_mode": 1,
                    "set_system_value": 1
                },
                "FUN_08004648": {
                    "execute_initialization": 4,
                    "execute_program": 1,
                    "execute_setup": 1,
                    "initialize": 1,
                    "initialize_and_execute": 1,
                    "initialize_application": 8,
                    "initialize_program": 4,
                    "initialize_system": 9,
                    "initiate_process": 1,
                    "initiate_processes": 1
                },
                "fun_08000d8e": {
                    "perform_initialization": 1
                },
                "param_1": {
                    "config_param": 1,
                    "config_value": 2,
                    "configuration_value": 2,
                    "count": 1,
                    "input_value": 1,
                    "log_level": 1,
                    "mode": 3,
                    "parameter": 1,
                    "priority": 1,
                    "setting_value": 1,
                    "system_configuration": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08000d8e",
                "FUN_08000e3c"
            ],
            "calling": [
                "FUN_08004884"
            ],
            "code": "\nvoid initialize_system_08004648(void)\n\n{\n  FUN_08000e3c(3);\n  FUN_08000d8e();\n  return;\n}\n\n",
            "current_name": "initialize_system_08004648",
            "entrypoint": "0x08004648",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004648": "initialize_system_08004648"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004658": {
            "additional_data": {
                "FUNC_08004338": {
                    "clean_up": 1,
                    "cleanup": 3,
                    "cleanup_operation": 1,
                    "display_result": 1,
                    "do_something": 2,
                    "execute_08004338": 1,
                    "execute_cleanup_task": 1,
                    "execute_func1": 1,
                    "execute_function1": 1,
                    "execute_operation": 1,
                    "function1": 1,
                    "handle_task": 1,
                    "perform_action": 2,
                    "perform_cleanup": 2,
                    "perform_operation": 1,
                    "perform_operation1": 1,
                    "perform_relevant_action": 1,
                    "perform_task_a": 4,
                    "print_message": 1,
                    "process_data": 2,
                    "task_one": 1,
                    "update_state": 1
                },
                "FUNC_08004646": {
                    "execute_08004646": 1,
                    "execute_func3": 1,
                    "execute_initialization": 2,
                    "execute_preparation_tasks": 1,
                    "execute_startup_tasks": 3,
                    "execute_task": 3,
                    "function4": 1,
                    "initialize": 7,
                    "initialize_stuff": 1,
                    "initialize_system": 2,
                    "perform_initialization": 3,
                    "perform_task_c": 2,
                    "preparations": 1,
                    "reset_system": 1,
                    "setup": 1,
                    "setup_environment": 1
                },
                "FUN_08000c4c": {
                    "config_setup": 1,
                    "configure": 2,
                    "do_something": 1,
                    "execute_08000c4c": 1,
                    "execute_function3": 1,
                    "execute_setup_task": 1,
                    "function3": 1,
                    "initialize": 6,
                    "initialize_environment": 2,
                    "initialize_resources": 1,
                    "initialize_system": 6,
                    "initialize_variables": 1,
                    "perform_initialization": 2,
                    "perform_setup": 2,
                    "setup": 2,
                    "setup_environment": 1
                },
                "FUN_08000c64": {
                    "conduct_preprocessing": 1,
                    "do_something": 1,
                    "execute": 1,
                    "execute_08000c64": 1,
                    "execute_func2": 1,
                    "execute_function2": 1,
                    "execute_operation": 1,
                    "execute_something": 1,
                    "execute_subprocess": 1,
                    "execute_subroutine": 1,
                    "function2": 1,
                    "get_data": 1,
                    "perform_action": 5,
                    "perform_iteration": 1,
                    "perform_operation": 2,
                    "perform_operation2": 1,
                    "perform_task": 1,
                    "perform_task_b": 4,
                    "process_data": 1,
                    "task_two": 1,
                    "update": 1,
                    "update_data": 1,
                    "update_state": 1
                },
                "FUN_08004658": {
                    "continuous_execution": 1,
                    "continuous_loop": 1,
                    "do_reverse": 1,
                    "execute_function_loop": 1,
                    "execute_functions_in_loop": 2,
                    "execute_functions_repeatedly": 1,
                    "execute_infinite_loop": 5,
                    "execute_loop": 1,
                    "execute_operations_forever": 1,
                    "execute_operations_in_loop": 1,
                    "execute_repeatedly": 2,
                    "execute_tasks_continuously": 1,
                    "main_function": 1,
                    "main_loop": 4,
                    "run_infinite_loop": 2,
                    "run_infinitely": 1,
                    "run_loop": 3,
                    "run_main_loop": 1
                }
            },
            "called": [
                "FUN_08004338",
                "FUN_08000c64",
                "FUN_08000c4c",
                "FUN_08004646"
            ],
            "calling": [
                "entry"
            ],
            "code": "\nvoid run_main_loop_08004658(void)\n\n{\n  FUNC_08004646();\n  FUN_08000c4c();\n  do {\n    FUN_08000c64();\n    FUNC_08004338();\n  } while( true );\n}\n\n",
            "current_name": "run_main_loop_08004658",
            "entrypoint": "0x08004658",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004658": "run_main_loop_08004658"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004678": {
            "additional_data": {
                "FUN_08004678": {
                    "bit_count": 1,
                    "count_bits": 5,
                    "count_bits_set": 2,
                    "count_bits_set_to_1": 1,
                    "count_ones": 1,
                    "count_set_bits": 21
                },
                "cVar1": {
                    "bit_count": 25,
                    "count": 3,
                    "num_bits": 1,
                    "num_bits_set": 1,
                    "one_count": 1
                },
                "param_1": {
                    "input": 5,
                    "input_num": 1,
                    "input_number": 1,
                    "input_val": 1,
                    "num": 6,
                    "number": 17
                }
            },
            "called": [],
            "calling": [
                "FUN_080047d0"
            ],
            "code": "\nchar count_bits_set_to_1_08004678(uint number)\n\n{\n  char bit_count;\n  \n  bit_count = '\\0';\n  for (; number != 1; number = number >> 1) {\n    bit_count = bit_count + '\\x01';\n  }\n  return bit_count;\n}\n\n",
            "current_name": "count_bits_set_to_1_08004678",
            "entrypoint": "0x08004678",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004678": "count_bits_set_to_1_08004678",
                "cVar1": "bit_count",
                "param_1": "number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080046b4": {
            "additional_data": {
                "FLAG_20000488": {
                    "count1": 1
                },
                "FLAG_20000494": {
                    "value1": 1
                },
                "FLAG_2000049c": {
                    "count2": 1
                },
                "FLAG_200004a8": {
                    "value2": 1
                },
                "FLAG_200004b0": {
                    "count3": 1
                },
                "FLAG_200004bc": {
                    "value3": 1
                },
                "FLAG_200004c4": {
                    "count4": 1
                },
                "FLAG_200004d0": {
                    "value4": 1
                },
                "FLAG_200004d8": {
                    "count5": 1
                },
                "FLAG_200004e4": {
                    "value5": 1
                },
                "FLAG_200004ec": {
                    "count6_multiplier": 1
                },
                "FLAG_200004f8": {
                    "value6": 1
                },
                "FLAG_20000500": {
                    "count7_multiplier": 1
                },
                "FLAG_2000050c": {
                    "value7": 1
                },
                "FLAG_20000514": {
                    "count8_multiplier": 1
                },
                "FLAG_20000520": {
                    "value8": 1
                },
                "FLAG_20000528": {
                    "count9_multiplier": 1
                },
                "FLAG_20000534": {
                    "value9": 1
                },
                "FLAG_2000053c": {
                    "count10_multiplier": 1
                },
                "FLAG_20000548": {
                    "value10": 1
                },
                "FLAG_20000550": {
                    "count11_multiplier": 1
                },
                "FLAG_2000055c": {
                    "value11": 1
                },
                "FLAG_20000564": {
                    "count12_multiplier": 1
                },
                "FLAG_20000570": {
                    "value12": 1
                },
                "FLAG_20000578": {
                    "count13_multiplier": 1
                },
                "FLAG_20000584": {
                    "value13": 1
                },
                "FLAG_2000058c": {
                    "count14_multiplier": 1
                },
                "FLAG_20000598": {
                    "value14": 1
                },
                "FLAG_200005a0": {
                    "count15_multiplier": 1
                },
                "FLAG_200005ac": {
                    "value15": 1
                },
                "FLAG_200005b4": {
                    "count16_multiplier": 1
                },
                "FLAG_200005c0": {
                    "value16": 1
                },
                "FUN_080046b4": {
                    "initialize_constants": 1,
                    "initialize_data": 17,
                    "initialize_memory": 1,
                    "initialize_parameters": 9,
                    "initialize_params_if_needed": 1,
                    "set_default_parameters": 1,
                    "update_configuration": 1
                },
                "FUN_080047fe": {
                    "call_sub_function": 5,
                    "do_something": 1,
                    "execute_initialization": 1,
                    "execute_sub_function": 1,
                    "initialize_configuration": 1,
                    "perform_action": 2,
                    "perform_operation": 1,
                    "process_data": 6,
                    "send_data": 1,
                    "some_function": 1,
                    "sub_function": 1,
                    "transfer_data": 1
                },
                "LAB_0800468c_1": {
                    "destination": 1,
                    "label": 2,
                    "label1": 6,
                    "pointer1": 1,
                    "start": 1
                },
                "code": {
                    "code": 1
                },
                "initializeData": {
                    "initialize_data": 1
                },
                "label": {
                    "label": 1
                },
                "original_variable_name_n": {
                    "new_variable_name_n": 1
                },
                "param_1": {
                    "check_value": 1,
                    "condition": 5,
                    "data_flag": 1,
                    "flag": 8,
                    "input_condition": 1,
                    "input_flag": 2,
                    "input_param": 1,
                    "mode": 3,
                    "param1": 1,
                    "parameter1": 1,
                    "status": 5,
                    "value": 1,
                    "value_set": 1
                },
                "param_2": {
                    "code": 1,
                    "comparison_value": 1,
                    "flag": 5,
                    "flag_param": 1,
                    "flag_value": 1,
                    "param2": 1,
                    "param_2": 1,
                    "param_value": 1,
                    "parameter2": 1,
                    "value": 17,
                    "value_flag": 1
                },
                "param_3": {
                    "config1": 1,
                    "param": 1,
                    "param3": 2,
                    "param_3": 1,
                    "parameter3": 1,
                    "unknown_param1": 2,
                    "unused": 1,
                    "unused1": 5,
                    "unused_param": 5,
                    "unused_param1": 5,
                    "unused_param_1": 2,
                    "unused_parameter1": 2
                },
                "param_4": {
                    "additional_param": 1,
                    "config2": 1,
                    "data": 2,
                    "input_arg": 1,
                    "param": 2,
                    "param4": 2,
                    "param_4": 3,
                    "parameter4": 1,
                    "pointer": 1,
                    "unknown_param2": 2,
                    "unused2": 5,
                    "unused_param2": 5,
                    "unused_param_2": 2,
                    "unused_parameter2": 2
                },
                "status": {
                    "status": 1
                },
                "undefined4": {
                    "int": 1
                },
                "void": {
                    "void": 1
                }
            },
            "called": [
                "FUN_080047fe"
            ],
            "calling": [],
            "code": "\nvoid initialize_data_080046b4(int flag,int value,int unused_param,int unused2)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_20000488 = 6;\n    DAT_20000494 = 0;\n    DAT_2000049c = 7;\n    DAT_200004a8 = 0;\n    DAT_200004b0 = 8;\n    DAT_200004bc = 0;\n    DAT_200004c4 = 9;\n    DAT_200004d0 = 0;\n    DAT_200004d8 = 10;\n    DAT_200004e4 = 0;\n    DAT_200004ec = 0x17;\n    DAT_200004f8 = 0;\n    DAT_20000500 = 0x17;\n    DAT_2000050c = 0;\n    DAT_20000514 = 0x17;\n    DAT_20000520 = 0;\n    DAT_20000528 = 0x17;\n    DAT_20000534 = 0;\n    DAT_2000053c = 0x17;\n    DAT_20000548 = 0;\n    DAT_20000550 = 0x28;\n    DAT_2000055c = 0;\n    DAT_20000564 = 0x28;\n    DAT_20000570 = 0;\n    DAT_20000578 = 0x28;\n    DAT_20000584 = 0;\n    DAT_2000058c = 0x28;\n    DAT_20000598 = 0;\n    DAT_200005a0 = 0x28;\n    DAT_200005ac = 0;\n    DAT_200005b4 = 0x28;\n    DAT_200005c0 = 0;\n    FUN_080047fe(0,&label1,&DAT_20000000,&DAT_20000488,unused2);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_080046b4",
            "entrypoint": "0x080046b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080046b4": "initialize_data_080046b4",
                "LAB_0800468c_1": "label1",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "unused_param",
                "param_4": "unused2",
                "undefined4": "int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080047c0": {
            "additional_data": {
                "DAT_20000494": {
                    "data_arr": 1,
                    "data_array": 4
                },
                "FUN_08004678": {
                    "calculate_index": 2,
                    "get_callback_index": 1,
                    "get_data_type": 1,
                    "get_index": 2
                },
                "FUN_080047c0": {
                    "execute_action": 1,
                    "execute_callback": 1,
                    "execute_code": 1,
                    "execute_function": 12,
                    "execute_function_or_continue": 1,
                    "execute_if_valid_callback": 1,
                    "execute_next_function": 2,
                    "execute_operation": 2,
                    "execute_or_skip_step": 1,
                    "handle_callback": 1,
                    "handle_function": 1,
                    "process_data": 2,
                    "process_param": 3,
                    "process_param1": 1,
                    "process_parameter": 1
                },
                "FUN_08005760": {
                    "execute_action": 1,
                    "execute_function": 1,
                    "initialize": 1,
                    "initialize_component": 1,
                    "initialize_data": 4,
                    "initialize_system": 1,
                    "log_data": 1,
                    "perform_action": 1,
                    "perform_cleanup": 4,
                    "perform_default_operation": 1,
                    "perform_initialization": 3,
                    "reset_state": 1
                },
                "iVar1": {
                    "data_index": 1,
                    "index": 26,
                    "result": 1,
                    "result_index": 1,
                    "value": 1
                },
                "iVar_1": {
                    "index": 1
                },
                "param_1": {
                    "action": 1,
                    "arg": 1,
                    "callback_data": 2,
                    "data": 1,
                    "data_address": 1,
                    "function_address": 1,
                    "function_context": 1,
                    "function_index": 1,
                    "function_parameter": 1,
                    "function_pointer": 3,
                    "function_ptr": 1,
                    "input": 3,
                    "input_data": 1,
                    "input_param": 2,
                    "input_parameter": 1,
                    "input_value": 2,
                    "object_pointer": 1,
                    "operation": 1,
                    "param": 4,
                    "parameter": 1,
                    "step_index": 1
                }
            },
            "called": [
                "FUN_08005760"
            ],
            "calling": [
                "FUN_080047d0"
            ],
            "code": "\nvoid execute_next_function_080047c0(int param)\n\n{\n  int index;\n  \n  if (*(int *)(param + 8) != 0) {\n    (**(code **)(param + 0xc))();\n    return;\n  }\n  FUN_08005760();\n  index = FUN_08004678();\n  if ((&DAT_20000494)[index * 5] != 0) {\n    execute_next_function_080047c0();\n  }\n  return;\n}\n\n",
            "current_name": "execute_next_function_080047c0",
            "entrypoint": "0x080047c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080047c0": "execute_next_function_080047c0",
                "iVar1": "index",
                "param_1": "param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080047d0": {
            "additional_data": {
                "DAT_20000494": {
                    "data": 1,
                    "data_array": 3
                },
                "Dat_20000494": {
                    "data_array": 1
                },
                "FUN_08004678": {
                    "calculate_index": 2,
                    "get_action_index": 2,
                    "get_array_index": 5,
                    "get_data_index": 1,
                    "get_data_type": 1,
                    "get_function_index": 3,
                    "get_index": 6,
                    "get_index_based_on_param": 1,
                    "get_info_index": 1,
                    "get_instruction_index": 1,
                    "get_operation_index": 1,
                    "get_selected_index": 1,
                    "get_valid_index": 3
                },
                "FUN_080047c0": {
                    "call_additional_function": 1,
                    "call_another_function": 1,
                    "call_function": 1,
                    "execute_action": 2,
                    "execute_function": 9,
                    "execute_if_non_zero": 2,
                    "execute_if_valid_index": 1,
                    "execute_instruction": 1,
                    "execute_operation": 1,
                    "invoke_function": 1,
                    "perform_action": 5,
                    "process_data": 2,
                    "trigger_execution": 1
                },
                "FUN_080047d0": {
                    "check_and_call_function": 8,
                    "check_and_execute": 3,
                    "check_and_execute_action": 2,
                    "check_and_execute_function": 9,
                    "check_and_execute_operation": 1,
                    "check_and_invoke_function": 2,
                    "check_and_process_data": 1,
                    "check_for_non_zero_value": 2,
                    "check_if_data_exists": 1,
                    "check_if_function_needs_to_be_called": 1,
                    "execute_if_not_null": 1
                },
                "fun_08004678": {
                    "get_valid_index": 1
                },
                "iVar1": {
                    "array_index": 2,
                    "data_index": 1,
                    "data_type_index": 1,
                    "function_index": 1,
                    "index": 10,
                    "result": 5,
                    "return_value": 1,
                    "valid_index": 2
                },
                "param_1": {
                    "array_index": 1,
                    "data_index": 2,
                    "index": 2,
                    "info_index": 1,
                    "input": 2,
                    "input_parameter": 1,
                    "input_value": 1,
                    "param": 1
                }
            },
            "called": [
                "FUN_080047c0",
                "FUN_08004678"
            ],
            "calling": [
                "FUN_080011a4"
            ],
            "code": "\nvoid check_and_execute_function_080047d0(void)\n\n{\n  int index;\n  \n  index = FUN_08004678();\n  if ((&DAT_20000494)[index * 5] != 0) {\n    FUN_080047c0();\n  }\n  return;\n}\n\n",
            "current_name": "check_and_execute_function_080047d0",
            "entrypoint": "0x080047d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080047d0": "check_and_execute_function_080047d0",
                "iVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080047fe": {
            "additional_data": {
                "FUN_080047fe": {
                    "call_function_with_params": 1,
                    "call_function_with_swapped_params": 1,
                    "call_sub_function": 1,
                    "copy_and_process_data": 1,
                    "copy_and_return_param": 1,
                    "copy_and_swap_parameters": 1,
                    "copy_data": 1,
                    "copy_param2_to_param1": 1,
                    "copy_parameters": 1,
                    "copy_params": 2,
                    "execute_fun": 1,
                    "execute_function": 6,
                    "execute_operation": 1,
                    "extract_data": 1,
                    "initialize_data": 1,
                    "reverse_and_copy": 1,
                    "reverse_order": 1
                },
                "FUN_08004844": {
                    "copy": 1,
                    "copy_and_process_data": 1,
                    "copy_data": 4,
                    "copy_function": 1,
                    "execute_sub_function": 1,
                    "perform_long_operation": 1,
                    "perform_operation": 3,
                    "perform_reverse_operation": 1,
                    "process_data": 5,
                    "reverse_data": 2,
                    "reverse_params": 1
                },
                "param_1": {
                    "arg1": 3,
                    "argument_1": 1,
                    "buffer_size": 1,
                    "dest": 2,
                    "destination": 4,
                    "destination_address": 1,
                    "first_parameter": 1,
                    "input1": 4,
                    "input_param": 3,
                    "input_param1": 2,
                    "input_param_1": 1,
                    "input_parameter1": 1,
                    "output_param": 1,
                    "param1": 3,
                    "param_a": 1,
                    "source_param": 1,
                    "src": 1
                },
                "param_2": {
                    "additional_param": 1,
                    "arg2": 3,
                    "argument_2": 1,
                    "destination_param": 1,
                    "dst": 1,
                    "input2": 4,
                    "input_data": 1,
                    "input_param": 1,
                    "input_param2": 2,
                    "input_param_2": 1,
                    "input_parameter2": 1,
                    "output_param": 2,
                    "param2": 3,
                    "param_b": 1,
                    "second_parameter": 1,
                    "source": 4,
                    "source_address": 1,
                    "src": 2
                }
            },
            "called": [
                "FUN_08004844"
            ],
            "calling": [
                "FUN_080046b4"
            ],
            "code": "\nvoid execute_function_080047fe(undefined4 input1,undefined4 input2)\n\n{\n  FUN_08004844(input2,input1);\n  return;\n}\n\n",
            "current_name": "execute_function_080047fe",
            "entrypoint": "0x080047fe",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080047fe": "execute_function_080047fe",
                "param_1": "input1",
                "param_2": "input2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004808": {
            "additional_data": {
                "FUN_08004808": {
                    "assertion_failed": 17,
                    "assertion_failed_handler": 1,
                    "assertion_failed_message": 2,
                    "check_assertion": 1,
                    "handle_assertion": 1,
                    "handle_assertion_failure": 3,
                    "log_assertion_error": 1,
                    "print_assertion_failed": 2,
                    "print_assertion_failure": 2,
                    "process_assertion": 1
                },
                "FUN_08004860": {
                    "print_error_message": 1,
                    "print_message": 1
                },
                "FUN_080051ac": {
                    "get_current_time": 2
                },
                "param_1": {
                    "assert_message": 1,
                    "assertion": 3,
                    "assertion_message": 2,
                    "file": 14,
                    "file_name": 8,
                    "message": 2,
                    "param_1": 1
                },
                "param_2": {
                    "assert_file": 1,
                    "file": 5,
                    "file_name": 2,
                    "line": 12,
                    "line_num": 1,
                    "line_number": 9,
                    "param_2": 1
                },
                "param_3": {
                    "assert_line": 1,
                    "assert_message": 1,
                    "assertion": 5,
                    "assertion_expression": 1,
                    "assertion_message": 6,
                    "assertion_string": 1,
                    "condition": 2,
                    "failed_assertion": 1,
                    "failed_condition": 1,
                    "function": 1,
                    "function_name": 1,
                    "line": 1,
                    "line_number": 3,
                    "message": 6
                },
                "param_4": {
                    "additional_info": 3,
                    "additional_message": 1,
                    "assert_function": 1,
                    "assertion": 1,
                    "function": 10,
                    "function_name": 9,
                    "line": 3,
                    "message": 2,
                    "param_4": 1
                },
                "pcVar2": {
                    "additional_info": 3,
                    "additional_message": 3,
                    "additional_msg": 1,
                    "delimiter": 3,
                    "error_message": 1,
                    "exception_string": 1,
                    "extra_info": 2,
                    "format_string": 2,
                    "function": 1,
                    "function_msg": 1,
                    "function_name": 1,
                    "pc_var2": 1,
                    "prefix": 4,
                    "separator": 3,
                    "suffix": 2,
                    "var_name": 1
                },
                "uVar1": {
                    "address": 1,
                    "assert_func": 1,
                    "assertion_condition": 1,
                    "assertion_error": 1,
                    "assertion_failed_expression": 1,
                    "assertion_failed_msg": 1,
                    "assertion_flag": 2,
                    "assertion_message": 1,
                    "assertion_message1": 1,
                    "assertion_message_length": 1,
                    "assertion_message_size": 1,
                    "assertion_offset": 2,
                    "data": 2,
                    "file": 1,
                    "file_descriptor": 1,
                    "file_handle": 1,
                    "file_line": 1,
                    "file_name_ptr": 1,
                    "file_pointer": 3,
                    "file_ptr": 1,
                    "function_pointer": 1,
                    "line_counter": 1,
                    "pointer": 1,
                    "temp_variable": 1,
                    "u_var1": 1
                },
                "uVar3": {
                    "result": 21,
                    "return_val": 1,
                    "return_value": 7,
                    "u_var3": 1
                },
                "uVar4": {
                    "additional_info": 1,
                    "additional_info_copied": 1,
                    "additional_info_copy": 1,
                    "assert_info": 1,
                    "assertion_error2": 1,
                    "error_suffix": 1,
                    "extra": 1,
                    "extra_info": 2,
                    "extra_message": 1,
                    "extra_params": 1,
                    "function1": 1,
                    "function_arg": 1,
                    "function_args": 1,
                    "function_copy": 2,
                    "function_flag": 2,
                    "function_name_length": 1,
                    "function_name_ptr": 1,
                    "function_offset": 2,
                    "function_ptr": 1,
                    "line_formatted": 1,
                    "line_message": 1,
                    "message": 1,
                    "message_size": 1,
                    "param_4_copy": 1,
                    "temp_variable": 1,
                    "u_var4": 1
                }
            },
            "called": [
                "FUN_080051ac",
                "FUN_08004860"
            ],
            "calling": [
                "FUN_08004388"
            ],
            "code": "\nvoid print_assertion_failed_08004808(undefined4 file,undefined4 line,char *assertion_message,undefined4 function)\n\n{\n  undefined4 file_pointer;\n  char *prefix;\n  undefined8 result;\n  undefined4 function_flag;\n  \n  file_pointer = *(undefined4 *)(DAT_200000a0 + 0xc);\n  function_flag = function;\n  if (assertion_message == (char *)0x0) goto LAB_0800482c;\n  prefix = \", function: \";\n  do {\n    FUN_08004860(file_pointer,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function,file,line\n                 ,prefix,assertion_message,function_flag);\n    result = FUN_080051ac();\n    line = (undefined4)((ulonglong)result >> 0x20);\n    file_pointer = (undefined4)result;\nLAB_0800482c:\n    assertion_message = \"\";\n    prefix = assertion_message;\n  } while( true );\n}\n\n",
            "current_name": "print_assertion_failed_08004808",
            "entrypoint": "0x08004808",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004808": "print_assertion_failed_08004808",
                "param_1": "file",
                "param_2": "line",
                "param_3": "assertion_message",
                "param_4": "function",
                "pcVar2": "prefix",
                "uVar1": "file_pointer",
                "uVar3": "result",
                "uVar4": "function_flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004844": {
            "additional_data": {
                "FUN_08004844": {
                    "left_shift64": 1,
                    "left_shift64_bits": 1,
                    "left_shift_64_bits": 1,
                    "left_shift_bits": 1,
                    "left_shift_by32_bits": 2,
                    "left_shift_parameter": 1,
                    "left_shift_to_higher_bits": 1,
                    "left_shift_uint64": 3,
                    "shift_64_bits_left": 1,
                    "shift_left64": 1,
                    "shift_left64_bits": 3,
                    "shift_left_64_bits": 1,
                    "shift_left_by32_bits": 5,
                    "shift_left_by64_bits": 1,
                    "shift_left_u_int64": 1,
                    "shift_parameter": 1,
                    "shift_to64_bits": 1,
                    "shift_u_int64_left": 1,
                    "shift_unsigned_left": 1,
                    "shift_unsigned_long_long": 1,
                    "shift_value": 1
                },
                "param_1": {
                    "arg1": 1,
                    "argument_count": 1,
                    "flags": 3,
                    "initial_value": 1,
                    "input": 2,
                    "input1": 1,
                    "input_1": 1,
                    "input_param": 1,
                    "input_value": 3,
                    "offset": 1,
                    "param": 5,
                    "param1": 3,
                    "param_offset": 1,
                    "pointer": 2,
                    "some_value": 1,
                    "source": 1,
                    "unused_param": 1,
                    "unused_parameter": 1,
                    "value": 1
                },
                "param_2": {
                    "bit_count": 1,
                    "input2": 1,
                    "input_2": 1,
                    "input_value": 5,
                    "number": 1,
                    "number_to_shift": 1,
                    "original_value": 1,
                    "param2": 1,
                    "shift_amount": 3,
                    "value": 15,
                    "value_to_shift": 1
                },
                "param_3": {
                    "new_number": 1,
                    "result": 1
                },
                "ulonglong": {
                    "unsigned_long_long": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080047fe"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800484c) */\n\nlonglong left_shift_by32_bits_08004844(undefined4 param,uint value)\n\n{\n  return (unsigned_long_long)value << 0x20;\n}\n\n",
            "current_name": "left_shift_by32_bits_08004844",
            "entrypoint": "0x08004844",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004844": "left_shift_by32_bits_08004844",
                "param_1": "param",
                "param_2": "value",
                "ulonglong": "unsigned_long_long"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004860": {
            "additional_data": {
                "FUN_08004860": {
                    "copy_stack": 1,
                    "execute_function": 3,
                    "extract_and_process_data": 2,
                    "extract_and_reverse_binary": 1,
                    "extract_data": 1,
                    "extract_function_from_binary": 1,
                    "initialize_data": 1,
                    "process_data": 9
                },
                "FUN_08004a84": {
                    "process_binary": 1,
                    "reverse_bytes": 1,
                    "reverse_data": 1
                },
                "param_1": {
                    "arg1": 4,
                    "binary_address": 1,
                    "data1": 1,
                    "data_1": 1,
                    "input1": 10,
                    "input_param": 2,
                    "input_param1": 9,
                    "param1": 1,
                    "param_1": 1,
                    "source_param": 1
                },
                "param_2": {
                    "arg2": 4,
                    "binary_param1": 1,
                    "data2": 1,
                    "data_2": 1,
                    "dest_param": 1,
                    "input2": 9,
                    "input_param2": 9,
                    "output_param": 2,
                    "param2": 1,
                    "param_2": 1,
                    "param_address": 1
                },
                "param_3": {
                    "arg3": 4,
                    "binary_param2": 1,
                    "buffer": 1,
                    "buffer1": 2,
                    "byte_array": 1,
                    "data_3": 1,
                    "data_address": 1,
                    "data_param": 1,
                    "input_buffer1": 1,
                    "input_param3": 3,
                    "output1": 5,
                    "output_buffer": 1,
                    "output_param": 1,
                    "output_param1": 1,
                    "param3": 1,
                    "param_3": 1,
                    "reverse_data": 1,
                    "size_param": 1,
                    "stack_param1": 2,
                    "stack_var1": 1
                },
                "param_4": {
                    "arg4": 4,
                    "binary_param3": 1,
                    "buffer2": 2,
                    "data_4": 1,
                    "index_param": 1,
                    "input_buffer2": 1,
                    "input_param4": 3,
                    "internal_param": 1,
                    "output": 1,
                    "output2": 5,
                    "output_param": 2,
                    "output_param2": 1,
                    "output_size": 1,
                    "param4": 1,
                    "param_4": 1,
                    "stack_address": 1,
                    "stack_param2": 2,
                    "stack_var2": 1,
                    "status_param": 1
                },
                "uStack_4": {
                    "copy_param2": 1,
                    "data_size": 1,
                    "index_var": 1,
                    "internal_param_copy": 1,
                    "output2_copy": 3,
                    "output2_updated": 1,
                    "output_param_copy": 1,
                    "output_ptr": 1,
                    "param4_copy": 1,
                    "processed_data": 1,
                    "stack_address_temp": 1,
                    "stack_value2": 1,
                    "stack_var4": 1,
                    "stack_variable2": 3,
                    "status": 1,
                    "temp2": 1,
                    "temp_arg4": 1,
                    "temp_buffer2": 1,
                    "temp_output_size": 1,
                    "temp_param2": 1,
                    "temp_var2": 3,
                    "temp_variable2": 1,
                    "unused": 1
                },
                "uStack_8": {
                    "byte_array_ptr": 1,
                    "copy_param1": 1,
                    "data": 1,
                    "data_address_temp": 1,
                    "data_ptr": 1,
                    "extracted_data": 1,
                    "output1_copy": 3,
                    "output1_updated": 1,
                    "output_param_copy": 1,
                    "param3_copy": 1,
                    "processed_data": 1,
                    "reverse_data_copy": 1,
                    "size_var": 1,
                    "stack_value1": 1,
                    "stack_var3": 1,
                    "stack_variable1": 3,
                    "temp1": 1,
                    "temp_arg3": 1,
                    "temp_buffer1": 1,
                    "temp_output_buffer": 1,
                    "temp_param": 1,
                    "temp_var1": 3,
                    "temp_variable1": 1
                }
            },
            "called": [
                "FUN_08004a84"
            ],
            "calling": [
                "FUN_08004808"
            ],
            "code": "\nvoid extract_and_process_data_08004860(undefined4 input1,undefined4 input2,undefined4 output1,undefined4 output2)\n\n{\n  undefined4 output1_copy;\n  undefined4 temp_var2;\n  \n  output1_copy = output1;\n  temp_var2 = output2;\n  FUN_08004a84(DAT_200000a0,input1,input2,&output1_copy,input1,&output1_copy);\n  return;\n}\n\n",
            "current_name": "extract_and_process_data_08004860",
            "entrypoint": "0x08004860",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004860": "extract_and_process_data_08004860",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "output1",
                "param_4": "output2",
                "uStack_4": "temp_var2",
                "uStack_8": "output1_copy"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004884": {
            "additional_data": {
                "FUNC_080059f8": {
                    "cleanup": 2,
                    "execute_additional_function": 3,
                    "execute_final_function": 1,
                    "first_function": 1,
                    "function_a": 1,
                    "initialize": 1,
                    "invoke_func_080059f8": 1,
                    "perform_action": 1,
                    "perform_cleanup": 1,
                    "post_execution": 1
                },
                "FUN_08004648": {
                    "function_b": 1,
                    "reverse_data": 3,
                    "reverse_operation": 1,
                    "reverse_something": 5,
                    "second_function": 1
                },
                "FUN_08004884": {
                    "execute_and_reverse": 1,
                    "execute_code_blocks": 1,
                    "execute_function_list": 1,
                    "execute_functions": 25,
                    "execute_functions_in_sequence": 1,
                    "execute_sub_functions": 1,
                    "run_functions": 1
                },
                "iVar1": {
                    "counter": 3,
                    "i": 1,
                    "index": 17,
                    "iteration": 2,
                    "iteration_count": 1,
                    "iterator": 3,
                    "sub_function_index": 1
                }
            },
            "called": [
                "FUN_080059f8",
                "FUN_08004648"
            ],
            "calling": [
                "entry"
            ],
            "code": "\nvoid execute_functions_in_sequence_08004884(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_08006008)[index])();\n  }\n  FUNC_080059f8();\n  for (index = 0; index != 10; index = index + 1) {\n    (*(code *)(&DAT_08006008)[index])();\n  }\n  return;\n}\n\n",
            "current_name": "execute_functions_in_sequence_08004884",
            "entrypoint": "0x08004884",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004884": "execute_functions_in_sequence_08004884",
                "iVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080048cc": {
            "additional_data": {
                "FUN_080048cc": {
                    "fill_array_with": 1,
                    "fill_array_with_value": 2,
                    "fill_memory": 9,
                    "fill_memory_with": 6,
                    "fill_memory_with_byte": 4,
                    "fill_memory_with_value": 1,
                    "memset": 6,
                    "memset_array": 1,
                    "set_value_to_range": 1
                },
                "param_1": {
                    "array": 4,
                    "dest": 2,
                    "destination": 13,
                    "memory": 8,
                    "memory_block": 1,
                    "memory_pointer": 2,
                    "memory_start": 1
                },
                "param_2": {
                    "byte": 3,
                    "byte_value": 1,
                    "fill_value": 1,
                    "value": 26
                },
                "param_3": {
                    "array_length": 1,
                    "count": 2,
                    "length": 6,
                    "num_bytes": 1,
                    "num_bytes_to_fill": 1,
                    "size": 20
                },
                "puVar1": {
                    "end": 1,
                    "end_addr": 2,
                    "end_address": 9,
                    "end_memory": 1,
                    "end_of_memory": 1,
                    "end_pointer": 3,
                    "end_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800532c",
                "FUN_08005374",
                "FUN_08005400"
            ],
            "code": "\nvoid fill_memory_with_byte_080048cc(undefined *destination,undefined value,int size)\n\n{\n  undefined *end_address;\n  \n  end_address = destination + size;\n  for (; destination != end_address; destination = destination + 1) {\n    *destination = value;\n  }\n  return;\n}\n\n",
            "current_name": "fill_memory_with_byte_080048cc",
            "entrypoint": "0x080048cc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080048cc": "fill_memory_with_byte_080048cc",
                "param_1": "destination",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "end_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080048dc": {
            "additional_data": {
                "DAT_200005c8": {
                    "data_list": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "first_node": 1,
                    "global_array": 1,
                    "head": 3,
                    "head_ptr": 1,
                    "linked_list_head": 1,
                    "linkedlist_head": 1,
                    "resource_list": 1
                },
                "FUNC_0800557c": {
                    "initialization_function": 1,
                    "initialize": 3,
                    "initialize_data": 3,
                    "initialize_function": 1,
                    "initialize_linked_list": 1,
                    "initialize_list": 3,
                    "initialize_resources": 1,
                    "initialize_variables": 1,
                    "perform_operation1": 1,
                    "preprocess": 1
                },
                "FUNC_0800557e": {
                    "display_result": 1,
                    "finalize": 1,
                    "perform_operation": 1,
                    "perform_operation2": 1,
                    "perform_task": 1,
                    "process_data": 2,
                    "process_data_helper": 2,
                    "process_linked_list": 1,
                    "process_list": 1,
                    "processing_function": 1
                },
                "FUN_080048dc": {
                    "extract_values": 1,
                    "process_data": 3,
                    "rearrange_and_call_function": 1,
                    "remove_negative_and_manage_linked_list": 1,
                    "reorder_and_process_data": 1,
                    "reorder_and_update_linked_list": 1,
                    "reorder_function": 1,
                    "reverse_linked_list": 2,
                    "update_linked_list": 3,
                    "update_variable_list": 1
                },
                "bVar6": {
                    "bool_var": 1,
                    "check": 1,
                    "flag": 6,
                    "flag_variable": 1,
                    "is_end": 1,
                    "is_equal": 10,
                    "is_head": 1,
                    "is_last_node": 2,
                    "is_less": 1,
                    "is_match": 2,
                    "is_negative": 1,
                    "is_processed": 1,
                    "is_same_address": 1,
                    "is_same_element": 1,
                    "is_true": 1
                },
                "extraout_r1": {
                    "extra_out": 1,
                    "extra_out_ptr": 1,
                    "extra_out_ptr1": 1,
                    "extra_output": 3,
                    "extra_output_1": 1,
                    "extra_output_array": 1,
                    "extra_output_var1": 1,
                    "extra_ptr": 1,
                    "extra_result": 2,
                    "new_node": 1,
                    "temp": 1,
                    "temp2": 2,
                    "temp_ptr": 2,
                    "temp_ptr1": 2,
                    "temp_ptr2": 4,
                    "temp_ptr_ptr": 1,
                    "temp_var2": 2,
                    "temp_variable_2": 1
                },
                "param_1": {
                    "buffer": 1,
                    "input_array": 1,
                    "list_ptr": 1,
                    "output": 8,
                    "output_array": 5,
                    "output_buffer": 1,
                    "output_list": 1,
                    "output_param": 1,
                    "output_ptr": 3,
                    "result": 6,
                    "result_array": 1,
                    "result_code": 1,
                    "result_ptr": 1
                },
                "param_2": {
                    "array_length": 3,
                    "array_size": 2,
                    "count": 1,
                    "input_array_size": 2,
                    "input_length": 4,
                    "input_size": 4,
                    "list": 1,
                    "list_size": 2,
                    "node_count": 1,
                    "nodes_count": 1,
                    "size": 10
                },
                "param_3": {
                    "arg1": 2,
                    "param1": 4,
                    "param3": 12,
                    "param_3": 8,
                    "param_a": 2,
                    "unused_param": 3
                },
                "param_4": {
                    "arg2": 2,
                    "param2": 4,
                    "param4": 12,
                    "param_4": 8,
                    "param_b": 2,
                    "unused_param": 1,
                    "unused_param2": 2
                },
                "piVar1": {
                    "current_elem": 1,
                    "current_element": 1,
                    "current_value": 1,
                    "pointer_var1": 1,
                    "temp": 4,
                    "temp1": 2,
                    "temp_ptr": 12,
                    "temp_ptr1": 3,
                    "temp_var1": 4,
                    "temp_variable": 1,
                    "temp_variable_1": 1
                },
                "ppiVar2": {
                    "curr_ptr": 1,
                    "current_element_ptr": 1,
                    "current_node": 1,
                    "current_node_ptr": 1,
                    "current_ptr": 5,
                    "current_ptr_ptr": 1,
                    "head": 1,
                    "node1": 1,
                    "pointer_ptr_var2": 1,
                    "previous_elem": 1,
                    "previous_node": 1,
                    "previous_ptr": 1,
                    "ptr1": 1,
                    "temp1_updated": 1,
                    "temp_pointer_1": 1,
                    "temp_ptr1": 1,
                    "temp_ptr2": 4,
                    "temp_ptr3": 3,
                    "temp_var2": 1,
                    "temp_var3": 2,
                    "temp_variable_3": 1
                },
                "ppiVar3": {
                    "curr_node": 1,
                    "curr_ptr": 1,
                    "current": 1,
                    "current_node": 1,
                    "current_ptr": 4,
                    "data": 1,
                    "list_head": 2,
                    "next_elem": 1,
                    "next_ptr": 2,
                    "node2": 1,
                    "pointer_ptr_var3": 1,
                    "prev_node": 1,
                    "prev_ptr": 2,
                    "previous_node_ptr": 1,
                    "previous_ptr": 2,
                    "ptr2": 1,
                    "temp_pointer_2": 1,
                    "temp_ptr2": 1,
                    "temp_ptr4": 2,
                    "temp_var3": 1,
                    "temp_var4": 2,
                    "temp_variable_4": 1
                },
                "ppiVar4": {
                    "next_ptr": 1,
                    "node3": 1,
                    "pointer_ptr_var4": 1,
                    "prev_node": 1,
                    "prev_ptr": 5,
                    "previous": 1,
                    "previous_element_ptr": 1,
                    "previous_ptr": 1,
                    "previous_ptr_2": 1,
                    "previous_ptr_ptr": 1,
                    "ptr3": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp_node": 2,
                    "temp_node_ptr": 1,
                    "temp_pointer_3": 1,
                    "temp_ptr2": 2,
                    "temp_ptr3": 2,
                    "temp_ptr5": 2,
                    "temp_var4": 1,
                    "temp_var5": 2,
                    "temp_variable_5": 1
                },
                "ppiVar5": {
                    "adjusted_ptr": 1,
                    "adjusted_size": 1,
                    "current_ptr_2": 1,
                    "new_block_ptr": 1,
                    "new_elem": 1,
                    "new_element_ptr": 1,
                    "new_node": 4,
                    "new_node_ptr": 2,
                    "new_ptr": 5,
                    "new_ptr_ptr": 1,
                    "node4": 1,
                    "node_ptr": 1,
                    "pointer_ptr_var5": 1,
                    "processed_ptr": 1,
                    "ptr4": 1,
                    "temp4": 1,
                    "temp_pointer_4": 1,
                    "temp_ptr4": 1,
                    "temp_ptr6": 1,
                    "temp_var5": 1,
                    "temp_var6": 2,
                    "updated_array_end": 1
                }
            },
            "called": [
                "FUN_0800557c",
                "FUN_0800557e"
            ],
            "calling": [
                "FUN_080051ac",
                "FUN_080050d0"
            ],
            "code": "\nvoid remove_negative_and_manage_linked_list_080048dc(undefined4 *output,int size,undefined4 param3,undefined4 param4)\n\n{\n  int *temp_ptr;\n  int **temp_ptr2;\n  int **current_ptr;\n  int **current_ptr;\n  int **prev_ptr;\n  int **new_ptr;\n  bool is_equal;\n  \n  if (size == 0) {\n    return;\n  }\n  new_ptr = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    new_ptr = (int **)((int)new_ptr + *(int *)(size + -4));\n  }\n  FUNC_0800557c();\n  current_ptr = (int **)&DAT_200005c8;\n  if (DAT_200005c8 == (int **)0x0) {\n    new_ptr[1] = (int *)0x0;\n    current_ptr = temp_ptr2;\n    DAT_200005c8 = new_ptr;\n  }\n  else {\n    current_ptr = DAT_200005c8;\n    if (new_ptr < DAT_200005c8) {\n      current_ptr = (int **)*new_ptr;\n      current_ptr = (int **)((int)new_ptr + (int)current_ptr);\n      is_equal = DAT_200005c8 == current_ptr;\n      if (is_equal) {\n        current_ptr = (int **)*DAT_200005c8;\n        DAT_200005c8 = (int **)DAT_200005c8[1];\n      }\n      new_ptr[1] = (int *)DAT_200005c8;\n      DAT_200005c8 = new_ptr;\n      if (is_equal) {\n        current_ptr = (int **)((int)current_ptr + (int)current_ptr);\n        *new_ptr = (int *)current_ptr;\n      }\n    }\n    else {\n      do {\n        prev_ptr = current_ptr;\n        current_ptr = (int **)prev_ptr[1];\n        if (current_ptr == (int **)0x0) break;\n      } while (current_ptr <= new_ptr);\n      current_ptr = (int **)*prev_ptr;\n      if ((int **)((int)prev_ptr + (int)current_ptr) == new_ptr) {\n        current_ptr = (int **)((int)current_ptr + (int)*new_ptr);\n        *prev_ptr = (int *)current_ptr;\n        if (current_ptr == (int **)((int)prev_ptr + (int)current_ptr)) {\n          temp_ptr = *current_ptr;\n          current_ptr = (int **)current_ptr[1];\n          prev_ptr[1] = (int *)current_ptr;\n          current_ptr = (int **)((int)current_ptr + (int)temp_ptr);\n          *prev_ptr = (int *)current_ptr;\n        }\n      }\n      else if (new_ptr < (int **)((int)prev_ptr + (int)current_ptr)) {\n        *output = 0xc;\n      }\n      else {\n        current_ptr = (int **)((int)new_ptr + (int)*new_ptr);\n        is_equal = current_ptr == current_ptr;\n        if (is_equal) {\n          current_ptr = (int **)*current_ptr;\n          current_ptr = (int **)current_ptr[1];\n        }\n        new_ptr[1] = (int *)current_ptr;\n        if (is_equal) {\n          current_ptr = (int **)((int)current_ptr + (int)*new_ptr);\n          *new_ptr = (int *)current_ptr;\n        }\n        prev_ptr[1] = (int *)new_ptr;\n      }\n    }\n  }\n  FUNC_0800557e(output,current_ptr,current_ptr,param4);\n  return;\n}\n\n",
            "current_name": "remove_negative_and_manage_linked_list_080048dc",
            "entrypoint": "0x080048dc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080048dc": "remove_negative_and_manage_linked_list_080048dc",
                "bVar6": "is_equal",
                "extraout_r1": "temp_ptr2",
                "param_1": "output",
                "param_2": "size",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "temp_ptr",
                "ppiVar2": "current_ptr",
                "ppiVar3": "current_ptr",
                "ppiVar4": "prev_ptr",
                "ppiVar5": "new_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004978": {
            "additional_data": {
                "DAT_200005c8": {
                    "allocated_chunks_list": 1,
                    "first_block": 4,
                    "first_chunk": 1,
                    "first_memory_block": 1,
                    "head": 1,
                    "head_block": 1,
                    "head_entry": 1,
                    "head_node": 1,
                    "memory_list": 1,
                    "memory_pool": 4,
                    "memory_ptr": 1,
                    "start_block": 1
                },
                "DAT_200005cc": {
                    "allocation_flag": 1,
                    "allocation_initialized": 2,
                    "initialized": 5,
                    "initialized_pool": 1,
                    "is_allocator_initialized": 1,
                    "is_memory_initialized": 1,
                    "is_start_block_initialized": 1,
                    "list_initialized": 1,
                    "memory_available": 1,
                    "memory_initialized": 3,
                    "pool_initialized": 1
                },
                "FUNC_0800500c": {
                    "create_memory_block": 1
                },
                "FUNC_0800557c": {
                    "initialize_allocator": 1,
                    "initialize_list": 1,
                    "initialize_memory": 7,
                    "initialize_memory_pool": 1,
                    "perform_some_operation1": 1
                },
                "FUNC_0800557e": {
                    "cleanup_list": 1,
                    "cleanup_memory": 1,
                    "deallocate_memory_block": 1,
                    "finalize_memory": 3,
                    "free_chunk": 1,
                    "free_memory": 3,
                    "perform_some_operation2": 1,
                    "release_memory": 1
                },
                "FUN_08004978": {
                    "allocate_and_copy_memory": 1,
                    "allocate_and_initialize_memory": 4,
                    "allocate_and_initialize_memory_block": 2,
                    "allocate_and_initialize_memory_region": 1,
                    "allocate_and_set_memory": 1,
                    "allocate_and_store_data": 1,
                    "allocate_and_store_memory": 1,
                    "allocate_memory": 9,
                    "allocate_memory_block": 4,
                    "check_and_allocate_memory": 1,
                    "decompress_and_allocate_memory": 1,
                    "improved_code_execution": 1,
                    "process_data": 1,
                    "process_memory_allocation": 1
                },
                "FUN_0800500c": {
                    "allocate_block": 1,
                    "allocate_chunk": 1,
                    "allocate_memory": 5,
                    "allocate_memory_block": 3,
                    "initialize_memory_pool": 1
                },
                "FUN_0800557c": {
                    "initialize_memory": 2
                },
                "iVar2": {
                    "block_difference": 1,
                    "block_size": 2,
                    "block_size_difference": 2,
                    "chunk_diff": 1,
                    "chunk_size": 1,
                    "diff": 1,
                    "difference": 10,
                    "offset": 4,
                    "remaining_size": 2,
                    "remaining_space": 4,
                    "size_difference": 1,
                    "temp": 1,
                    "temp_var": 1
                },
                "param_1": {
                    "buffer": 2,
                    "destination": 1,
                    "mem_ptr": 1,
                    "memory_address": 1,
                    "memory_buffer": 1,
                    "output": 3,
                    "output_address": 2,
                    "output_buffer": 3,
                    "output_pointer": 5,
                    "output_ptr": 4,
                    "ptr_to_size": 1,
                    "result": 4,
                    "result_ptr": 3
                },
                "param_2": {
                    "block_size": 2,
                    "compressed_size": 1,
                    "input_size": 3,
                    "requested_size": 4,
                    "required_size": 1,
                    "size": 20
                },
                "puVar1": {
                    "curr_block": 1,
                    "current": 2,
                    "current_block": 21,
                    "current_chunk": 1,
                    "current_entry": 1,
                    "current_ptr": 2,
                    "node_ptr": 1,
                    "prev_chunk": 1,
                    "previous_block": 1
                },
                "puVar3": {
                    "current_block": 1,
                    "current_chunk": 1,
                    "current_node": 1,
                    "next": 2,
                    "next_block": 11,
                    "next_entry": 1,
                    "next_ptr": 2,
                    "prev_block": 2,
                    "previous_block": 9,
                    "previous_chunk": 1
                },
                "puVar5": {
                    "current_spare_block": 1,
                    "insertion_point": 2,
                    "last_block": 2,
                    "new_block": 3,
                    "prev": 1,
                    "prev_block_next": 1,
                    "prev_chunk_next": 1,
                    "previous": 1,
                    "previous_allocated_block": 1,
                    "previous_block": 11,
                    "previous_chunk_ptr": 1,
                    "previous_entry": 1,
                    "previous_node": 1,
                    "previous_previous_block": 2,
                    "previous_ptr": 2
                },
                "uVar4": {
                    "block_diff": 1,
                    "block_difference": 6,
                    "block_size_difference": 2,
                    "block_size_difference_minus_8": 1,
                    "chunk_diff_comp": 1,
                    "current_block_difference": 1,
                    "diff_size": 1,
                    "difference": 8,
                    "entry_difference": 1,
                    "free_space": 1,
                    "gap_size": 1,
                    "new_block_size": 1,
                    "node_size": 1,
                    "offset": 1,
                    "ptr_difference": 1,
                    "size_difference": 2,
                    "temp": 1
                },
                "uVar6": {
                    "adjusted_size": 2,
                    "aligned_size": 8,
                    "allocated_size": 12,
                    "block_size": 2,
                    "chunk_size": 1,
                    "new_block_size": 3,
                    "new_size": 1,
                    "required_size": 1,
                    "total_size": 1
                },
                "uint": {
                    "unsigned_integer": 1
                },
                "undefined4": {
                    "unsigned_integer_4_bytes": 1
                }
            },
            "called": [
                "FUN_0800500c",
                "FUN_0800557c",
                "FUN_0800557e"
            ],
            "calling": [
                "FUN_080054fc",
                "FUN_08005374"
            ],
            "code": "\nunsigned_integer allocate_and_initialize_memory_block_08004978(unsigned_integer_4_bytes *output_pointer,unsigned_integer size)\n\n{\n  unsigned_integer *current_block;\n  int difference;\n  unsigned_integer *next_block;\n  unsigned_integer difference;\n  unsigned_integer *previous_block;\n  unsigned_integer allocated_size;\n  \n  allocated_size = (size + 3 & 0xfffffffc) + 8;\n  if (allocated_size < 0xc) {\n    allocated_size = 0xc;\n  }\n  if (((int)allocated_size < 0) || (allocated_size < size)) {\n    *output_pointer = 0xc;\n  }\n  else {\n    FUNC_0800557c();\n    current_block = DAT_200005c8;\n    previous_block = DAT_200005c8;\n    while (next_block = current_block, next_block != (unsigned_integer *)0x0) {\n      difference = *next_block - allocated_size;\n      if (-1 < (int)difference) {\n        if (difference < 0xc) {\n          if (previous_block == next_block) {\n            current_block = (unsigned_integer *)previous_block[1];\n          }\n          else {\n            current_block = (unsigned_integer *)next_block[1];\n          }\n          if (previous_block != next_block) {\n            previous_block[1] = (unsigned_integer)current_block;\n            previous_block = next_block;\n            current_block = DAT_200005c8;\n          }\n        }\n        else {\n          *next_block = difference;\n          *(unsigned_integer *)((int)next_block + difference) = allocated_size;\n          previous_block = (unsigned_integer *)((int)next_block + difference);\n          current_block = DAT_200005c8;\n        }\n        goto LAB_080049dc;\n      }\n      previous_block = next_block;\n      current_block = (unsigned_integer *)next_block[1];\n    }\n    if (DAT_200005cc == 0) {\n      DAT_200005cc = FUN_0800500c(output_pointer);\n    }\n    current_block = (unsigned_integer *)FUN_0800500c(output_pointer,allocated_size);\n    if ((current_block != (unsigned_integer *)0xffffffff) &&\n       ((previous_block = (unsigned_integer *)((int)current_block + 3U & 0xfffffffc), current_block == previous_block ||\n        (difference = FUN_0800500c(output_pointer,(int)previous_block - (int)current_block), difference != -1)))) {\n      *previous_block = allocated_size;\n      current_block = DAT_200005c8;\nLAB_080049dc:\n      DAT_200005c8 = current_block;\n      FUNC_0800557e(output_pointer);\n      allocated_size = (int)previous_block + 0xbU & 0xfffffff8;\n      difference = allocated_size - (int)(previous_block + 1);\n      if (difference != 0) {\n        *(int *)((int)previous_block + difference) = -difference;\n        return allocated_size;\n      }\n      return allocated_size;\n    }\n    *output_pointer = 0xc;\n    FUNC_0800557e(output_pointer);\n  }\n  return 0;\n}\n\n",
            "current_name": "allocate_and_initialize_memory_block_08004978",
            "entrypoint": "0x08004978",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004978": "allocate_and_initialize_memory_block_08004978",
                "iVar2": "difference",
                "param_1": "output_pointer",
                "param_2": "size",
                "puVar1": "current_block",
                "puVar3": "next_block",
                "puVar5": "previous_block",
                "uVar4": "difference",
                "uVar6": "allocated_size",
                "uint": "unsigned_integer",
                "undefined4": "unsigned_integer_4_bytes"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004a34": {
            "additional_data": {
                "DAT_08005fa0": {
                    "dat_c": 1,
                    "data_3": 1,
                    "data_ptr_3": 1
                },
                "DAT_08005fc0": {
                    "dat_a": 1,
                    "data_1": 1,
                    "data_ptr_1": 1
                },
                "DAT_08005fe0": {
                    "dat_b": 1,
                    "data_2": 1,
                    "data_ptr_2": 1
                },
                "FUN_08004a34": {
                    "decode_param": 1,
                    "parse_and_store_byte": 1,
                    "process_byte": 2,
                    "process_data": 4,
                    "process_input": 21,
                    "process_input_data": 1
                },
                "FUN_080050d0": {
                    "calculate_something": 1,
                    "calculate_value": 2,
                    "call_function_c": 1,
                    "perform_operation": 4,
                    "process_data": 6,
                    "process_data_internal": 1,
                    "yet_another_operation": 1
                },
                "FUN_080052cc": {
                    "another_operation": 1,
                    "call_function_b": 1,
                    "check_buffer": 1,
                    "check_buffer_length": 1,
                    "check_condition": 6,
                    "check_data": 2,
                    "check_something": 1,
                    "execute_function": 1,
                    "validate_data": 1,
                    "validate_input": 1
                },
                "FUN_080053a0": {
                    "call_function_a": 1,
                    "check_condition": 1,
                    "do_something": 3,
                    "handle_error": 2,
                    "handle_null": 1,
                    "initialize": 2,
                    "initialize_data": 2,
                    "perform_action": 2,
                    "perform_cleanup": 1,
                    "perform_some_operation": 1
                },
                "PTR_FUN_080050d0": {
                    "process_parameter": 1
                },
                "PTR_FUN_080052cc": {
                    "evaluate_buffer": 1
                },
                "PTR_FUN_080053a0": {
                    "handle_null_pointer_error": 1
                },
                "iVar1": {
                    "buffer_index": 1,
                    "index": 1,
                    "result": 3,
                    "temp": 1,
                    "temp1": 1,
                    "temp_int_1": 1,
                    "temp_var": 3,
                    "temp_var1": 10
                },
                "param_1": {
                    "arg1": 5,
                    "context": 1,
                    "data": 2,
                    "data_ptr": 1,
                    "data_struct": 2,
                    "input1": 1,
                    "input_buffer": 1,
                    "input_data": 3,
                    "input_param": 2,
                    "input_pointer": 2,
                    "input_state": 1,
                    "num": 1,
                    "param": 3,
                    "param1": 4,
                    "parameter1": 1,
                    "some_parameter": 1
                },
                "param_2": {
                    "arg2": 1,
                    "byte_data": 2,
                    "byte_val": 4,
                    "byte_value": 8,
                    "character": 1,
                    "input_byte": 13,
                    "param2": 1,
                    "value": 1
                },
                "param_3": {
                    "arg3": 1,
                    "byte_pointer": 1,
                    "byte_pointer_array": 1,
                    "byte_pointer_pointer": 1,
                    "byte_ptr": 1,
                    "byte_ptr_array": 1,
                    "byte_ptr_ptr": 3,
                    "data": 3,
                    "data_array_ptr": 1,
                    "data_buffer": 1,
                    "data_ptr": 2,
                    "input_arr": 1,
                    "input_array": 3,
                    "input_buffer": 3,
                    "input_data": 4,
                    "input_ptr": 1,
                    "input_ptr_array": 1,
                    "output_data": 1,
                    "param3": 1
                },
                "pbVar2": {
                    "array_end_pointer": 1,
                    "array_index": 1,
                    "buffer_end": 2,
                    "buffer_ptr": 2,
                    "byte_pointer2": 1,
                    "byte_ptr2": 1,
                    "bytes_remaining": 1,
                    "current_byte_ptr": 1,
                    "data_pointer": 1,
                    "end_ptr": 1,
                    "index": 1,
                    "input_ptr_2": 1,
                    "previous_element": 1,
                    "ptr": 1,
                    "ptr2": 1,
                    "ptr_data": 1,
                    "target_byte": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp_byte_1": 1,
                    "temp_var2": 9
                },
                "pbVar3": {
                    "byte_pointer3": 1,
                    "byte_ptr": 1,
                    "byte_ptr3": 1,
                    "next_element": 1,
                    "offset": 2,
                    "pb_var3": 3,
                    "ptr3": 1,
                    "ptr_data2": 1,
                    "source_byte": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp_buffer_ptr": 1,
                    "temp_byte_2": 1,
                    "temp_byte_ptr": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "temp_var3": 9,
                    "ushort_array_pointer": 1,
                    "ushort_ptr": 1,
                    "ushort_value": 1
                },
                "uVar4": {
                    "input_uint": 1,
                    "result": 15,
                    "return_val": 1,
                    "return_value": 14
                }
            },
            "called": [
                "FUN_080053a0",
                "FUN_080052cc",
                "FUN_080050d0"
            ],
            "calling": [
                "FUN_08004a60"
            ],
            "code": "\nuint process_input_data_08004a34(int arg1,byte input_byte,byte **input_data)\n\n{\n  int temp_var1;\n  byte *temp_var2;\n  byte *temp_var3;\n  uint result;\n  \n  temp_var2 = input_data[2] + -1;\n  input_data[2] = temp_var2;\n  if ((-1 < (int)temp_var2) ||\n     (((int)input_data[6] <= (int)temp_var2 && (temp_var2 = (byte *)(uint)input_byte, temp_var2 != (byte *)0xa))))\n  {\n    temp_var2 = *input_data;\n    *input_data = temp_var2 + 1;\n    *temp_var2 = input_byte;\n    return (uint)input_byte;\n  }\n  if ((arg1 != 0) && (*(int *)(arg1 + 0x18) == 0)) {\n    FUN_080053a0();\n  }\n  if (input_data == (byte **)&DAT_08005fc0) {\n    input_data = *(byte ***)(arg1 + 4);\n  }\n  else if (input_data == (byte **)&DAT_08005fe0) {\n    input_data = *(byte ***)(arg1 + 8);\n  }\n  else if (input_data == (byte **)&DAT_08005fa0) {\n    input_data = *(byte ***)(arg1 + 0xc);\n  }\n  input_data[2] = input_data[6];\n  temp_var3 = (byte *)(uint)*(ushort *)(input_data + 3);\n  temp_var1 = (int)temp_var3 << 0x1c;\n  if (((temp_var1 < 0) && (temp_var3 = input_data[4], temp_var3 != (byte *)0x0)) ||\n     (temp_var1 = FUN_080050d0(arg1,input_data,temp_var1,temp_var3,temp_var2), temp_var1 == 0)) {\n    temp_var1 = (int)*input_data - (int)input_data[4];\n    result = (uint)input_byte;\n    if ((temp_var1 < (int)input_data[5]) || (temp_var1 = FUN_080052cc(arg1,input_data), temp_var1 == 0)) {\n      input_data[2] = input_data[2] + -1;\n      temp_var2 = *input_data;\n      *input_data = temp_var2 + 1;\n      *temp_var2 = input_byte;\n      if ((byte *)(temp_var1 + 1) != input_data[5]) {\n        if (-1 < (int)((uint)*(ushort *)(input_data + 3) << 0x1f)) {\n          return result;\n        }\n        if (result != 10) {\n          return result;\n        }\n      }\n      temp_var1 = FUN_080052cc(arg1,input_data);\n      if (temp_var1 == 0) {\n        return result;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "process_input_data_08004a34",
            "entrypoint": "0x08004a34",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004a34": "process_input_data_08004a34",
                "iVar1": "temp_var1",
                "param_1": "arg1",
                "param_2": "input_byte",
                "param_3": "input_data",
                "pbVar2": "temp_var2",
                "pbVar3": "temp_var3",
                "uVar4": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004a60": {
            "additional_data": {
                "FUN_08004a34": {
                    "process_byte": 1
                },
                "FUN_08004a60": {
                    "find_index_of_byte": 1,
                    "iterate_and_calculate": 1,
                    "iterate_and_call_function": 2,
                    "iterate_and_execute": 1,
                    "iterate_and_process": 1,
                    "iterate_and_process_bytes": 2,
                    "iterate_over_bytes": 1,
                    "process_and_count_bytes": 1,
                    "process_array": 1,
                    "process_bytes": 1,
                    "process_data": 17,
                    "reverse_and_count_bytes": 1
                },
                "iVar1": {
                    "index": 1,
                    "result": 25,
                    "return_value": 3,
                    "returned_value": 1,
                    "reversed_count": 1
                },
                "iVar3": {
                    "count": 1,
                    "current_index": 14,
                    "current_length": 4,
                    "current_pos": 1,
                    "current_size": 4,
                    "initial_length": 1,
                    "length": 1,
                    "length_counter": 1,
                    "remaining_bytes": 1,
                    "remaining_data_length": 1,
                    "remaining_length": 2
                },
                "param_1": {
                    "arg1": 3,
                    "arg_1": 1,
                    "count": 1,
                    "count_limit": 1,
                    "data1": 1,
                    "input1": 2,
                    "input_1": 4,
                    "input_param": 10,
                    "input_value": 2,
                    "input_value_1": 1,
                    "param1": 1,
                    "param_1": 1,
                    "value1": 3
                },
                "param_2": {
                    "arg2": 3,
                    "arg_2": 1,
                    "byte_param": 2,
                    "byte_to_find": 1,
                    "byte_to_reverse": 1,
                    "data2": 1,
                    "data_param": 1,
                    "encryption_key": 1,
                    "input2": 2,
                    "input_2": 4,
                    "input_value_2": 1,
                    "output_param": 6,
                    "output_value": 1,
                    "param2": 1,
                    "param_2": 1,
                    "param_value": 1,
                    "value2": 3
                },
                "param_3": {
                    "array": 2,
                    "buffer": 1,
                    "byte_array": 10,
                    "byte_ptr": 1,
                    "data": 7,
                    "data_array": 6,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input_array": 1,
                    "input_data": 1
                },
                "param_4": {
                    "array_length": 14,
                    "array_size": 2,
                    "data_length": 3,
                    "length": 6,
                    "num_bytes": 1,
                    "size": 5
                },
                "puVar2": {
                    "array_end": 1,
                    "end_byte_ptr": 1,
                    "end_of_array": 6,
                    "end_of_buffer": 1,
                    "end_of_data": 4,
                    "end_pointer": 5,
                    "end_ptr": 13
                }
            },
            "called": [
                "FUN_08004a34"
            ],
            "calling": [
                "FUN_08004a84"
            ],
            "code": "\nint process_data_08004a60(undefined4 input_param,undefined4 output_param,undefined *byte_array,int array_length)\n\n{\n  int result;\n  undefined *end_ptr;\n  int current_index;\n  \n  end_ptr = byte_array + array_length;\n  current_index = array_length;\n  do {\n    if (byte_array == end_ptr) {\n      return 0;\n    }\n    result = FUN_08004a34(input_param,*byte_array,output_param,array_length,current_index);\n    array_length = result + 1;\n    byte_array = byte_array + 1;\n  } while (array_length != 0);\n  return result;\n}\n\n",
            "current_name": "process_data_08004a60",
            "entrypoint": "0x08004a60",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004a60": "process_data_08004a60",
                "iVar1": "result",
                "iVar3": "current_index",
                "param_1": "input_param",
                "param_2": "output_param",
                "param_3": "byte_array",
                "param_4": "array_length",
                "puVar2": "end_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004a84": {
            "additional_data": {
                "FUN_08000230": {
                    "check_char": 1,
                    "check_character": 3,
                    "is_in_string": 1
                },
                "FUN_08004a60": {
                    "perform_conversion_with_width": 1,
                    "process_buffer": 1,
                    "process_data_helper": 1,
                    "process_data_segment": 1,
                    "process_string": 1
                },
                "FUN_08004a84": {
                    "extract_and_process_data": 1,
                    "extract_and_process_string": 1,
                    "extract_binary_data": 1,
                    "extract_data": 1,
                    "parse_and_process": 1,
                    "parse_and_process_data": 1,
                    "parse_data": 1,
                    "parse_format_string": 1,
                    "parse_input_string": 1,
                    "parse_inputs": 1,
                    "parse_string": 2,
                    "process_data": 8,
                    "process_input": 2
                },
                "FUN_08004d9c": {
                    "apply_conversion_specifier": 1,
                    "handle_numeric_conversion": 1,
                    "perform_conversion": 1,
                    "process_data_internal": 1,
                    "process_data_pointer": 1
                },
                "FUN_080050d0": {
                    "check_condition": 1,
                    "check_pointer": 1,
                    "check_sign": 1,
                    "validate_conversion_specifier": 1,
                    "validate_data": 1
                },
                "FUN_080053a0": {
                    "display_warning": 1,
                    "handle_exception": 1,
                    "initialize": 1,
                    "warning_function": 2
                },
                "F_08004a84": {
                    "process_data": 1
                },
                "bVar3": {
                    "bool_var": 1,
                    "boolean_var": 1,
                    "condition": 1,
                    "flag": 6,
                    "found_digit": 1,
                    "found_num": 1,
                    "found_number": 1,
                    "has_digits": 1,
                    "is_digit": 8,
                    "is_number": 3,
                    "is_numeric": 3,
                    "is_true": 3,
                    "is_valid": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "result": 27,
                    "ret_val": 1,
                    "return_value": 2
                },
                "iVar6": {
                    "count": 1,
                    "counter": 3,
                    "i_var": 2,
                    "int_value": 3,
                    "int_var": 1,
                    "integer_variable": 1,
                    "iteration_var": 1,
                    "iterator": 1,
                    "loop_var": 1,
                    "temp": 3,
                    "temp_int": 1,
                    "temp_var": 6,
                    "temp_var1": 1,
                    "temp_var2": 3,
                    "value": 2,
                    "var_1": 1
                },
                "local_0": {
                    "new_variable": 1
                },
                "local_30": {
                    "another_stack_var": 1,
                    "base": 1,
                    "flag4": 1,
                    "flag6": 1,
                    "flags": 1,
                    "float_padding": 1,
                    "format_type": 1,
                    "length_modifier": 1,
                    "local_undef_4": 1,
                    "local_var": 1,
                    "local_var10": 1,
                    "local_var_30": 1,
                    "local_var_6": 1,
                    "num5": 1,
                    "padding_3": 1,
                    "padding_flag": 1,
                    "temp": 1,
                    "temp1": 1,
                    "temp_var3": 1,
                    "temp_var4": 2,
                    "temp_var5": 1,
                    "tmp": 1,
                    "undefined": 1,
                    "unk_var_2": 1,
                    "unknown": 1,
                    "unused": 1,
                    "zero_flag": 4
                },
                "local_45": {
                    "alignment": 2,
                    "alignment_flag": 2,
                    "byte_val3": 2,
                    "flag": 1,
                    "flag3": 1,
                    "flag5": 1,
                    "flag_byte": 1,
                    "flag_zero": 1,
                    "flags": 1,
                    "hash_flag": 2,
                    "integer_padding": 1,
                    "local_undef_3": 1,
                    "local_undefined3": 1,
                    "local_undefined_var_3": 1,
                    "local_var9": 1,
                    "local_var_45": 1,
                    "modifier": 1,
                    "plus_padding": 1,
                    "prefix": 1,
                    "sharp_flag": 2,
                    "sign": 1,
                    "sign_flag": 1,
                    "sign_indicator": 1,
                    "special_char_flag": 1,
                    "temp_char3": 1,
                    "zero_flag": 1
                },
                "local_6e": {
                    "alignment": 1,
                    "byte2": 1,
                    "byte_val2": 2,
                    "flag2": 2,
                    "flag_plus": 2,
                    "leading_plus": 1,
                    "local_undef_2": 1,
                    "local_undefined2": 1,
                    "local_undefined_var_2": 1,
                    "local_var8": 1,
                    "local_var_6e": 1,
                    "padding_2": 1,
                    "plus": 3,
                    "plus_flag": 8,
                    "temp_char2": 1,
                    "value2": 1,
                    "value_separator_2": 1,
                    "zero_padding": 2
                },
                "local_6f": {
                    "byte1": 1,
                    "byte_val1": 2,
                    "flag1": 2,
                    "flag_space": 2,
                    "leading_space": 1,
                    "local_undef": 1,
                    "local_undefined1": 1,
                    "local_undefined_var_1": 1,
                    "local_var7": 1,
                    "local_var_6f": 1,
                    "padding": 1,
                    "padding_1": 1,
                    "space": 3,
                    "space_flag": 8,
                    "space_padding": 2,
                    "temp_char1": 1,
                    "value1": 1,
                    "value_separator_1": 1
                },
                "local_70": {
                    "byte_val": 2,
                    "char_value": 1,
                    "character": 1,
                    "code": 1,
                    "conversion": 1,
                    "conversion_char": 2,
                    "conversion_specifier": 8,
                    "conversion_type": 1,
                    "current_byte": 1,
                    "format_char": 2,
                    "local_byte": 2,
                    "local_byte_var": 1,
                    "local_var6": 1,
                    "local_var_70": 1,
                    "modifier": 1,
                    "option": 1,
                    "size_specifier": 1,
                    "specifier": 3
                },
                "local_74": {
                    "local_count": 1,
                    "local_int_3": 1,
                    "local_var5": 1,
                    "local_var_5": 1,
                    "local_var_74": 1,
                    "parsed_length": 1,
                    "total": 1,
                    "total_bytes": 3,
                    "total_bytes_extracted": 1,
                    "total_bytes_read": 1,
                    "total_count": 1,
                    "total_data": 1,
                    "total_length": 13,
                    "total_output_length": 1,
                    "total_size": 2,
                    "total_written": 1
                },
                "local_7c": {
                    "arg_num": 2,
                    "counter_value": 1,
                    "field_width": 2,
                    "flag4": 1,
                    "int_val2": 1,
                    "local_int_2": 1,
                    "local_value3": 1,
                    "local_var4": 1,
                    "local_var_4": 1,
                    "local_var_7c": 1,
                    "multiplier": 1,
                    "num2": 1,
                    "num3": 1,
                    "param_1_copy": 1,
                    "precision": 1,
                    "skip": 1,
                    "temp_var4": 1,
                    "width": 12
                },
                "local_80": {
                    "alignment": 2,
                    "another_flag": 1,
                    "arg_size": 1,
                    "flag2_value": 1,
                    "flag3": 1,
                    "format_specifier_pointer": 1,
                    "length_modifier": 1,
                    "local_uint_2": 1,
                    "local_value2": 1,
                    "local_var": 1,
                    "local_var3": 1,
                    "local_var_3": 1,
                    "local_var_80": 1,
                    "num2": 1,
                    "padding_value": 1,
                    "pointer": 1,
                    "precision": 3,
                    "stack_var": 1,
                    "temp": 1,
                    "temp0": 1,
                    "temp_var2": 1,
                    "temp_var3": 3,
                    "undefined": 1,
                    "unk_var": 1,
                    "value": 2
                },
                "local_84": {
                    "field_width": 1,
                    "flag2": 2,
                    "int_val": 1,
                    "local_int": 1,
                    "local_value": 1,
                    "local_var2": 1,
                    "local_var_2": 1,
                    "local_var_84": 1,
                    "num1": 2,
                    "num_decimals": 1,
                    "precision": 14,
                    "precision_width": 1,
                    "second_flag": 1,
                    "width": 3
                },
                "local_88": {
                    "flag": 1,
                    "flag1": 2,
                    "flag_bits": 1,
                    "flag_mask": 1,
                    "flags": 20,
                    "local_flag": 1,
                    "local_uint": 1,
                    "local_var1": 1,
                    "local_var_1": 1,
                    "local_var_88": 1,
                    "modifiers": 1
                },
                "local_8c": {
                    "bytes_read_ptr": 1,
                    "data_array": 1,
                    "index_ptr": 1,
                    "int_ptr_local": 1,
                    "lengths_iterator": 1,
                    "lengths_pointer": 1,
                    "local_array": 1,
                    "local_output_param": 1,
                    "local_pointer": 4,
                    "local_ptr": 2,
                    "local_ptr2": 1,
                    "local_var_8c": 1,
                    "next_arg_ptr": 1,
                    "num_ptr": 1,
                    "offset_ptr2": 1,
                    "output_length_pointer": 1,
                    "output_list": 1,
                    "output_ptr": 4,
                    "param_array": 1,
                    "ptr_array_counter": 1,
                    "ptr_bytes_written": 1,
                    "ptr_output_local": 1,
                    "remaining_args": 1,
                    "temp_ptr2": 1
                },
                "param_1": {
                    "arg1": 3,
                    "binary_data_ptr": 1,
                    "data": 5,
                    "format_string": 1,
                    "input": 5,
                    "input_1": 1,
                    "input_data": 5,
                    "input_param": 3,
                    "input_pointer": 1,
                    "input_ptr": 3,
                    "input_string": 1,
                    "param1": 1,
                    "parameter_1": 1
                },
                "param_2": {
                    "arg2": 3,
                    "arg_ptr": 1,
                    "config": 1,
                    "data_array": 1,
                    "data_ptr": 3,
                    "flags": 1,
                    "format": 1,
                    "format_ptr": 1,
                    "format_specification": 1,
                    "format_specifier": 4,
                    "format_string": 1,
                    "header": 1,
                    "input_2": 1,
                    "input_ptr": 1,
                    "option": 1,
                    "options": 1,
                    "param2": 1,
                    "param2_pointer": 1,
                    "param_array": 2,
                    "param_list": 1,
                    "parameter_2": 1,
                    "pointer": 1,
                    "ptr_array": 1
                },
                "param_3": {
                    "arg3": 3,
                    "buffer": 1,
                    "byte_array": 2,
                    "byte_ptr": 1,
                    "data": 3,
                    "data_string": 1,
                    "input": 2,
                    "input_3": 1,
                    "input_string": 5,
                    "output_buffer": 2,
                    "output_string": 1,
                    "param3": 1,
                    "param3_pointer": 1,
                    "parameter_3": 1,
                    "string": 2,
                    "string_array": 1,
                    "string_buffer": 1,
                    "string_input": 1,
                    "string_ptr": 1
                },
                "param_4": {
                    "arg4": 3,
                    "bytes_read": 1,
                    "bytes_written": 1,
                    "index_array": 1,
                    "input_4": 1,
                    "int_ptr": 1,
                    "length": 2,
                    "length_ptr": 1,
                    "lengths": 2,
                    "num_array": 1,
                    "num_written": 1,
                    "offset_ptr": 1,
                    "output": 4,
                    "output_length": 2,
                    "output_param": 1,
                    "output_ptr": 3,
                    "param4": 1,
                    "param4_pointer": 1,
                    "param_pointer": 1,
                    "parameter_4": 1,
                    "ptr_array_size": 1
                },
                "pbVar4": {
                    "byte_pointer_var_1": 1,
                    "byte_ptr": 2,
                    "byte_ptr1": 3,
                    "byte_ptr2": 1,
                    "curr_byte": 3,
                    "curr_char": 3,
                    "current_byte": 2,
                    "current_byte_ptr": 1,
                    "current_char": 4,
                    "current_char_ptr": 2,
                    "current_character": 1,
                    "ptr": 1,
                    "ptr1": 3,
                    "ptr_byte1": 2,
                    "ptr_data": 1,
                    "string_ptr": 1
                },
                "pbVar5": {
                    "byte_pointer_var_2": 1,
                    "byte_ptr2": 4,
                    "byte_ptr3": 1,
                    "byte_ptr_2": 1,
                    "char_ptr": 1,
                    "end_of_string": 2,
                    "next_byte": 5,
                    "next_byte_ptr": 1,
                    "next_char": 5,
                    "next_char_ptr": 2,
                    "next_character": 1,
                    "ptr2": 4,
                    "ptr_byte2": 2,
                    "ptr_data_copy": 1
                },
                "piVar2": {
                    "current_bytes_read": 1,
                    "current_output_length": 1,
                    "iterator": 1,
                    "lengths_ptr": 1,
                    "local_ptr": 2,
                    "next_arg": 1,
                    "offset_ptr2": 1,
                    "output_ptr_2": 1,
                    "param_iterator": 1,
                    "pointer_var": 2,
                    "ptr": 6,
                    "ptr_format_string": 1,
                    "ptr_iterator": 1,
                    "ptr_output": 1,
                    "ptr_result": 2,
                    "ptr_value": 1,
                    "ptr_var": 2,
                    "temp_pointer": 1,
                    "temp_ptr": 2,
                    "tmp_ptr": 1,
                    "var1": 1
                },
                "unaff_r9": {
                    "additional_bytes_read": 1,
                    "additional_data": 1,
                    "bytes_processed": 1,
                    "counter": 1,
                    "helper_var": 1,
                    "negative_flag": 1,
                    "output_length": 1,
                    "param_1_copy": 1,
                    "result": 1,
                    "return_value": 2,
                    "return_value2": 1,
                    "temp": 4,
                    "temp_var": 2,
                    "temp_var1": 1,
                    "template_flag": 1,
                    "unaff_r9": 7,
                    "unaffected_reg_9": 1,
                    "unaffected_var_1": 1,
                    "unaffectionate_r9": 1,
                    "uninitialized_r9": 1
                }
            },
            "called": [
                "FUN_08004d9c",
                "FUN_08000230",
                "FUN_080053a0",
                "FUN_08004a60",
                "FUN_080050d0"
            ],
            "calling": [
                "FUN_08004fdc",
                "FUN_08004860"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08004c58) */\n\nint extract_and_process_data_08004a84(int input,undefined4 *format_specifier,byte *input_string,int *output)\n\n{\n  int result;\n  int *ptr;\n  bool is_digit;\n  byte *current_char;\n  byte *next_char;\n  int unaff_r9;\n  int temp_var;\n  int *local_pointer;\n  uint flags;\n  int precision;\n  undefined4 precision;\n  int width;\n  int total_length;\n  byte conversion_specifier;\n  undefined space_flag;\n  undefined plus_flag;\n  undefined alignment_flag;\n  undefined4 zero_flag;\n  \n  local_pointer = output;\n  if ((input != 0) && (*(int *)(input + 0x18) == 0)) {\n    FUN_080053a0();\n  }\n  if (format_specifier == &DAT_08005fc0) {\n    format_specifier = *(undefined4 **)(input + 4);\n  }\n  else if (format_specifier == (undefined4 *)&DAT_08005fe0) {\n    format_specifier = *(undefined4 **)(input + 8);\n  }\n  else if (format_specifier == (undefined4 *)&DAT_08005fa0) {\n    format_specifier = *(undefined4 **)(input + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(format_specifier + 3) << 0x1c)) || (format_specifier[4] == 0)) &&\n     (temp_var = FUN_080050d0(input,format_specifier), temp_var != 0)) {\n    return -1;\n  }\n  total_length = 0;\n  space_flag = 0x20;\n  plus_flag = 0x30;\n  current_char = input_string;\nLAB_08004ac6:\n  next_char = current_char;\n  if (*next_char != 0) goto LAB_08004b7c;\n  goto LAB_08004ad0;\nLAB_08004b7c:\n  current_char = next_char + 1;\n  if (*next_char != 0x25) goto LAB_08004ac6;\nLAB_08004ad0:\n  temp_var = (int)next_char - (int)input_string;\n  if (temp_var != 0) {\n    result = FUN_08004a60(input,format_specifier,input_string,temp_var);\n    if (result == -1) {\nLAB_08004c70:\n      if ((int)((uint)*(ushort *)(format_specifier + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return total_length;\n    }\n    total_length = total_length + temp_var;\n  }\n  if (*next_char == 0) goto LAB_08004c70;\n  flags = 0;\n  width = 0;\n  precision = -1;\n  precision = 0;\n  alignment_flag = 0;\n  zero_flag = 0;\n  current_char = next_char + 1;\n  while( true ) {\n    temp_var = FUN_08000230(\"#-0+ \",*current_char);\n    input_string = current_char + 1;\n    if (temp_var == 0) break;\n    flags = 1 << (temp_var + 0xf7ffa094U & 0xff) | flags;\n    current_char = input_string;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    alignment_flag = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    alignment_flag = 0x2b;\n  }\n  if (*current_char == 0x2a) {\n    ptr = local_pointer + 1;\n    temp_var = *local_pointer;\n    local_pointer = ptr;\n    if (temp_var < 0) {\n      width = -temp_var;\n      flags = flags | 2;\n      goto LAB_08004bae;\n    }\n  }\n  else {\n    is_digit = false;\n    temp_var = width;\n    input_string = current_char;\n    while( true ) {\n      if (9 < *input_string - 0x30) break;\n      temp_var = temp_var * 10 + (*input_string - 0x30);\n      is_digit = true;\n      input_string = input_string + 1;\n    }\n    if (!is_digit) goto LAB_08004bae;\n  }\n  width = temp_var;\nLAB_08004bae:\n  if (*input_string == 0x2e) {\n    if (input_string[1] == 0x2a) {\n      precision = *local_pointer;\n      if (precision < 0) {\n        precision = -1;\n      }\n      input_string = input_string + 2;\n      local_pointer = local_pointer + 1;\n    }\n    else {\n      is_digit = false;\n      precision = 0;\n      temp_var = 0;\n      while( true ) {\n        input_string = input_string + 1;\n        if (9 < *input_string - 0x30) break;\n        temp_var = temp_var * 10 + (*input_string - 0x30);\n        is_digit = true;\n      }\n      if (is_digit) {\n        precision = temp_var;\n      }\n    }\n  }\n  temp_var = FUN_08000230(&DAT_08005f72,*input_string,3);\n  if (temp_var != 0) {\n    flags = flags | 0x40 << (temp_var + 0xf7ffa08eU & 0xff);\n    input_string = input_string + 1;\n  }\n  conversion_specifier = *input_string;\n  input_string = input_string + 1;\n  temp_var = FUN_08000230(\"efgEFG\",conversion_specifier,6);\n  if (temp_var == 0) {\n    unaff_r9 = FUN_08004d9c(input,&flags,format_specifier,0x8004a61,&local_pointer);\n    if (unaff_r9 == -1) goto LAB_08004c70;\n  }\n  else {\n    local_pointer = (int *)(((int)local_pointer + 7U & 0xfffffff8) + 8);\n  }\n  total_length = total_length + unaff_r9;\n  current_char = input_string;\n  goto LAB_08004ac6;\n}\n\n",
            "current_name": "extract_and_process_data_08004a84",
            "entrypoint": "0x08004a84",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004a84": "extract_and_process_data_08004a84",
                "bVar3": "is_digit",
                "iVar1": "result",
                "iVar6": "temp_var",
                "local_30": "zero_flag",
                "local_45": "alignment_flag",
                "local_6e": "plus_flag",
                "local_6f": "space_flag",
                "local_70": "conversion_specifier",
                "local_74": "total_length",
                "local_7c": "width",
                "local_80": "precision",
                "local_84": "precision",
                "local_88": "flags",
                "local_8c": "local_pointer",
                "param_1": "input",
                "param_2": "format_specifier",
                "param_3": "input_string",
                "param_4": "output",
                "pbVar4": "current_char",
                "pbVar5": "next_char",
                "piVar2": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004cb0": {
            "additional_data": {
                "FUN_08004cb0": {
                    "calculate_buffer_size": 2,
                    "calculate_data_size": 2,
                    "calculate_output_length": 1,
                    "calculate_size": 1,
                    "decode_data": 3,
                    "extract_data": 1,
                    "extracted_function": 1,
                    "parse_and_process_data": 1,
                    "parse_data": 1,
                    "process_data": 14,
                    "reverse_and_process_data": 1
                },
                "bVar5": {
                    "check": 1,
                    "condition_flag": 1,
                    "flag": 5,
                    "is_bit_set": 1,
                    "is_case_4": 1,
                    "is_condition_met": 8,
                    "is_condition_true": 2,
                    "is_flag_set": 6,
                    "is_special": 1,
                    "is_true": 1,
                    "is_type_four": 1,
                    "is_valid": 1,
                    "is_zero": 1,
                    "should_decrement": 1
                },
                "iVar1": {
                    "counter": 1,
                    "counter1": 1,
                    "first_counter": 1,
                    "index": 17,
                    "index1": 4,
                    "iteration": 1,
                    "loop_counter": 1,
                    "loop_counter1": 1,
                    "loop_counter_1": 1,
                    "loop_index": 2,
                    "loop_variable1": 1
                },
                "iVar2": {
                    "callback_result": 2,
                    "func_ret_val": 1,
                    "index2": 3,
                    "loop_counter_2": 1,
                    "loop_variable2": 1,
                    "result": 18,
                    "return_value": 3,
                    "second_counter": 1,
                    "status": 1
                },
                "param_1": {
                    "data": 4,
                    "input": 13,
                    "input_buffer": 1,
                    "input_data": 2,
                    "input_parameter": 1,
                    "input_value": 7,
                    "input_var": 1,
                    "param1": 1
                },
                "param_2": {
                    "array": 2,
                    "buffer": 1,
                    "config": 1,
                    "data": 12,
                    "data_array": 3,
                    "data_pointer": 1,
                    "header": 4,
                    "info_array": 1,
                    "input_array": 3,
                    "param_array": 1,
                    "parameters": 1
                },
                "param_3": {
                    "max_size": 1,
                    "max_value": 1,
                    "modified_value": 1,
                    "output": 7,
                    "output_array": 2,
                    "output_buffer": 1,
                    "output_length": 2,
                    "output_pointer": 1,
                    "output_size": 5,
                    "output_value": 3,
                    "result": 4,
                    "size": 1
                },
                "param_4": {
                    "additional_param": 1,
                    "additional_value": 1,
                    "arg": 2,
                    "constant_value": 1,
                    "extra_param": 2,
                    "param": 9,
                    "param4": 5,
                    "param_4": 2,
                    "param_value": 1,
                    "parameter": 1,
                    "temp_value": 1,
                    "unused": 2,
                    "unused_param": 1,
                    "var1": 1
                },
                "param_5": {
                    "action": 1,
                    "callback": 16,
                    "callback_func": 3,
                    "callback_function": 9,
                    "process_byte": 1
                },
                "uVar3": {
                    "additional_size": 1,
                    "buffer_size": 1,
                    "computed_size": 1,
                    "final_length": 1,
                    "max_data_length": 1,
                    "max_length": 1,
                    "max_size": 7,
                    "max_size_adjusted": 1,
                    "max_value": 11,
                    "min_value": 1,
                    "modified_value": 1,
                    "new_size": 1,
                    "size": 1,
                    "temp_value1": 1,
                    "temp_var1": 1
                },
                "uVar4": {
                    "count": 9,
                    "counter": 16,
                    "counter2": 1,
                    "iteration_count": 1,
                    "loop_counter2": 1,
                    "temp_value2": 1,
                    "temp_var2": 1,
                    "var4": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004d9c"
            ],
            "code": "\nundefined4\nreverse_and_process_data_08004cb0(undefined4 input,uint *data,uint *output,undefined4 param,code *callback)\n\n{\n  int index;\n  int result;\n  uint max_value;\n  uint counter;\n  bool is_condition_met;\n  \n  max_value = data[4];\n  if ((int)data[4] < (int)data[2]) {\n    max_value = data[2];\n  }\n  *output = max_value;\n  if (*(char *)((int)data + 0x43) != '\\0') {\n    *output = max_value + 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *output = *output + 2;\n  }\n  if ((*data & 6) == 0) {\n    for (index = 0; index < (int)(data[3] - *output); index = index + 1) {\n      result = (*callback)(input,param,(int)data + 0x19,1);\n      if (result == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  max_value = (uint)*(byte *)((int)data + 0x43);\n  if (max_value != 0) {\n    max_value = 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *(undefined *)((int)data + max_value + 0x43) = 0x30;\n    *(undefined *)((int)data + max_value + 0x44) = *(undefined *)((int)data + 0x45);\n    max_value = max_value + 2;\n  }\n  index = (*callback)(input,param,(int)data + 0x43,max_value);\n  if (index != -1) {\n    max_value = data[3];\n    is_condition_met = (*data & 6) == 4;\n    if (is_condition_met) {\n      max_value = max_value - *output;\n    }\n    if (is_condition_met) {\n      max_value = max_value & ~((int)max_value >> 0x1f);\n    }\n    else {\n      max_value = 0;\n    }\n    if ((int)data[4] < (int)data[2]) {\n      max_value = max_value + (data[2] - data[4]);\n    }\n    counter = 0;\n    while( true ) {\n      if (max_value == counter) {\n        return 0;\n      }\n      index = (*callback)(input,param,(int)data + 0x1a,1);\n      if (index == -1) break;\n      counter = counter + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "reverse_and_process_data_08004cb0",
            "entrypoint": "0x08004cb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004cb0": "reverse_and_process_data_08004cb0",
                "bVar5": "is_condition_met",
                "iVar1": "index",
                "iVar2": "result",
                "param_1": "input",
                "param_2": "data",
                "param_3": "output",
                "param_4": "param",
                "param_5": "callback",
                "uVar3": "max_value",
                "uVar4": "counter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d9c": {
            "additional_data": {
                "FUN_080004d9c": {
                    "convert_data": 1
                },
                "FUN_08004d9c": {
                    "convert_data_to_string": 1,
                    "convert_to_hex": 1,
                    "convert_to_hex_string": 3,
                    "convert_to_string": 1,
                    "decode_and_execute": 1,
                    "decode_and_process": 1,
                    "decode_and_process_data": 2,
                    "decode_data": 1,
                    "extracted_function": 1,
                    "parse_and_print_data": 1,
                    "parse_data": 1,
                    "process_data": 1,
                    "reverse_func": 1
                },
                "bVar1": {
                    "byte_val": 10,
                    "byte_value": 14,
                    "byte_var": 4,
                    "byte_variable": 1,
                    "first_byte": 1
                },
                "iVar2": {
                    "i": 1,
                    "index": 8,
                    "index_var_1": 1,
                    "int_val1": 2,
                    "int_value": 1,
                    "int_var": 2,
                    "int_var1": 4,
                    "int_variable1": 1,
                    "integer_value": 1,
                    "loop_counter": 2,
                    "loop_index": 2,
                    "result": 1,
                    "return_value": 2,
                    "temp_int_1": 1,
                    "var1": 1
                },
                "iVar4": {
                    "i_var": 1,
                    "index2": 1,
                    "index_var_2": 1,
                    "inner_result": 1,
                    "inner_return_value": 1,
                    "int_val2": 2,
                    "int_value2": 1,
                    "int_var2": 6,
                    "int_variable2": 1,
                    "loop_index": 1,
                    "process_result": 1,
                    "result": 4,
                    "return_value": 1,
                    "status": 1,
                    "sub_function_result": 1,
                    "temp": 1,
                    "temp_int_2": 1,
                    "temp_var": 2,
                    "tmp": 1,
                    "var2": 1
                },
                "local_24": {
                    "buffer": 1,
                    "byte_array": 1,
                    "length_array": 1,
                    "local_arr": 2,
                    "local_array": 15,
                    "local_values": 2,
                    "local_var": 1,
                    "local_variables": 1,
                    "local_vars": 1,
                    "size_arr": 1,
                    "temp_arr": 1,
                    "temp_array": 3
                },
                "param_1": {
                    "arg1": 7,
                    "input": 2,
                    "input1": 3,
                    "input_1": 1,
                    "input_data": 1,
                    "input_param": 1,
                    "input_value": 2,
                    "param": 2,
                    "param1": 10,
                    "param_1": 2
                },
                "param_2": {
                    "arg2": 3,
                    "data": 7,
                    "data_ptr": 2,
                    "input": 2,
                    "input2": 2,
                    "input_2": 1,
                    "input_array": 8,
                    "output_data": 1,
                    "param2": 5
                },
                "param_3": {
                    "arg3": 7,
                    "input2": 1,
                    "input3": 2,
                    "input_3": 1,
                    "input_length": 2,
                    "param": 1,
                    "param3": 12,
                    "param_3": 4,
                    "size": 1
                },
                "param_4": {
                    "arg4": 3,
                    "callback": 7,
                    "callback_func": 4,
                    "callback_function": 4,
                    "conversion_function": 2,
                    "converter": 1,
                    "function_pointer": 1,
                    "input4": 2,
                    "param4": 5,
                    "process_func": 1,
                    "process_function": 1
                },
                "param_5": {
                    "arg5": 4,
                    "array_pointer": 1,
                    "counter": 1,
                    "input5": 2,
                    "output": 4,
                    "output_array": 6,
                    "output_ptr": 2,
                    "param5": 7,
                    "param_5": 1,
                    "ptr_to_index": 1,
                    "result": 2
                },
                "pcVar11": {
                    "char_pointer2": 3,
                    "char_ptr1": 1,
                    "char_ptr2": 8,
                    "char_ptr_2": 2,
                    "char_var2": 1,
                    "converted_string": 1,
                    "current_char": 1,
                    "end_of_string": 1,
                    "hex": 1,
                    "hex_string": 1,
                    "new_data_ptr": 1,
                    "output": 1,
                    "pointer": 1,
                    "pointer_1": 1,
                    "ptr": 1,
                    "ptr_var3": 1,
                    "result": 1,
                    "str_ptr": 1,
                    "temp_char_ptr": 1,
                    "temp_ptr": 1
                },
                "pcVar12": {
                    "char_pointer3": 3,
                    "char_ptr2": 2,
                    "char_ptr3": 8,
                    "char_ptr_1": 1,
                    "char_ptr_3": 1,
                    "char_var3": 1,
                    "current_data_ptr": 1,
                    "hex_str": 1,
                    "input": 1,
                    "output_string": 1,
                    "pointer_2": 1,
                    "ptr": 1,
                    "ptr_value": 1,
                    "ptr_var4": 1,
                    "start_of_string": 1,
                    "start_ptr": 1,
                    "str": 1,
                    "str_ptr": 1,
                    "string_ptr": 1,
                    "temp_str": 1
                },
                "pcVar5": {
                    "char_pointer": 2,
                    "char_pointer1": 1,
                    "char_ptr": 10,
                    "char_ptr1": 2,
                    "char_ptr_1": 1,
                    "char_value": 1,
                    "char_var": 1,
                    "digit_mapping": 1,
                    "hex_chars": 5,
                    "hex_digits": 5,
                    "ptr_var2": 1
                },
                "ppcVar8": {
                    "char_pointer_pointer": 1,
                    "char_pointer_pointer_var": 1,
                    "char_ptr_ptr": 2,
                    "pointer_pointer": 1,
                    "ptr3": 1,
                    "ptr_char": 1,
                    "ptr_ptr2": 1,
                    "ptr_ptr_char_value": 1,
                    "ptr_ptr_var2": 1,
                    "ptr_to_char_ptr1": 1,
                    "str_ptr": 1,
                    "string_ptr": 1,
                    "temp_string_pointer": 1
                },
                "ppuVar7": {
                    "dptr": 1,
                    "pointer2": 1,
                    "pointer_pointer_var": 1,
                    "pointer_pointer_variable": 1,
                    "ptr2": 1,
                    "ptr_ptr": 1,
                    "ptr_ptr1": 1,
                    "ptr_ptr_data": 1,
                    "ptr_ptr_var1": 1,
                    "ptr_result": 1,
                    "ptr_to_ptr_val1": 1,
                    "temp_pointer_2": 1,
                    "temp_ptr_2": 1,
                    "uint_ptr_ptr": 1
                },
                "puVar3": {
                    "mem_ptr": 1,
                    "pointer1": 1,
                    "pointer_value": 1,
                    "pointer_var": 1,
                    "pointer_variable1": 1,
                    "ptr": 7,
                    "ptr1": 5,
                    "ptr_data": 2,
                    "ptr_val1": 1,
                    "ptr_var": 2,
                    "ptr_var1": 2,
                    "ptr_var_1": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "temp_ptr_1": 1,
                    "uint_ptr1": 1,
                    "var_ptr": 1
                },
                "uVar10": {
                    "copy_value": 1,
                    "length": 1,
                    "new_value": 1,
                    "num_var3": 1,
                    "temp": 1,
                    "temp_uint_3": 1,
                    "temp_val": 1,
                    "temp_val2": 1,
                    "temp_value": 2,
                    "temp_value3": 1,
                    "temp_value_2": 2,
                    "temp_var2": 1,
                    "u_var2": 1,
                    "uint_val3": 3,
                    "uint_var2": 2,
                    "uint_var3": 4,
                    "uint_variable3": 1,
                    "value2": 2,
                    "value3": 1,
                    "var10": 1,
                    "var_3": 1
                },
                "uVar6": {
                    "base": 1,
                    "bitwise_shift": 1,
                    "num": 2,
                    "num_var1": 1,
                    "result": 2,
                    "shift_val": 1,
                    "temp": 1,
                    "temp_uint_1": 1,
                    "temp_val": 1,
                    "temp_value": 2,
                    "temp_value1": 1,
                    "u_var1": 1,
                    "uint_val": 1,
                    "uint_val1": 2,
                    "uint_var": 3,
                    "uint_var1": 3,
                    "uint_variable1": 1,
                    "value": 3,
                    "var6": 1,
                    "var_1": 1
                },
                "uVar9": {
                    "abs_value": 1,
                    "buffer_size": 1,
                    "decoded_value": 1,
                    "num_var2": 1,
                    "output_length": 1,
                    "result": 1,
                    "result_val": 2,
                    "result_value": 1,
                    "temp_uint_2": 1,
                    "temp_value2": 1,
                    "uint_val2": 3,
                    "uint_var": 1,
                    "uint_var1": 1,
                    "uint_var2": 4,
                    "uint_variable2": 1,
                    "value": 5,
                    "value1": 1,
                    "value2": 1,
                    "var9": 1,
                    "var_2": 1
                }
            },
            "called": [
                "FUN_08000230",
                "FUN_08004cb0"
            ],
            "calling": [
                "FUN_08004a84"
            ],
            "code": "\nuint decode_and_process_data_08004d9c(undefined4 param1,uint *input_array,undefined4 param3,code *callback,uint **param5)\n\n{\n  byte byte_value;\n  int index;\n  uint *ptr;\n  int int_var2;\n  char *char_ptr;\n  uint uint_var1;\n  uint **dptr;\n  char **char_ptr_ptr;\n  uint value;\n  uint uint_var3;\n  char *char_ptr2;\n  char *char_ptr3;\n  uint local_array [2];\n  \n  byte_value = *(byte *)(input_array + 6);\n  char_ptr3 = (char *)((int)input_array + 0x43);\n  if (byte_value != 0x6e) {\n    if (byte_value < 0x6f) {\n      if (byte_value != 99) {\n        if (byte_value < 100) {\n          if (byte_value == 0) goto LAB_08004f56;\n          if (byte_value != 0x58) goto LAB_08004dcc;\n          *(undefined *)((int)input_array + 0x45) = 0x58;\n          char_ptr = \"0123456789ABCDEF\";\nLAB_08004ee6:\n          uint_var1 = *input_array;\n          ptr = *param5;\n          *param5 = ptr + 1;\n          if (((uint_var1 & 0x80) == 0) && ((int)(uint_var1 << 0x19) < 0)) {\n            value = (uint)*(ushort *)ptr;\n          }\n          else {\n            value = *ptr;\n          }\n          if ((int)(uint_var1 << 0x1f) < 0) {\n            *input_array = uint_var1 | 0x20;\n          }\n          if (value == 0) {\n            *input_array = *input_array & 0xffffffdf;\n          }\n          uint_var1 = 0x10;\nLAB_08004e7c:\n          *(undefined *)((int)input_array + 0x43) = 0;\n        }\n        else {\n          if ((byte_value != 100) && (byte_value != 0x69)) goto LAB_08004dcc;\n          value = *input_array;\n          ptr = *param5;\n          if ((value & 0x80) == 0) {\n            *param5 = ptr + 1;\n            if ((value & 0x40) == 0) goto LAB_08004dec;\n            value = (uint)(short)*(ushort *)ptr;\n          }\n          else {\n            *param5 = ptr + 1;\nLAB_08004dec:\n            value = *ptr;\n          }\n          if ((int)value < 0) {\n            value = -value;\n            *(undefined *)((int)input_array + 0x43) = 0x2d;\n          }\n          char_ptr = \"0123456789ABCDEF\";\n          uint_var1 = 10;\n        }\n        uint_var3 = input_array[1];\n        input_array[2] = uint_var3;\n        char_ptr2 = char_ptr3;\n        if ((int)uint_var3 < 0) {\n          if (value != 0) goto LAB_08004f1a;\nLAB_08004fc8:\n          *(char *)((int)input_array + 0x42) = *char_ptr;\n          char_ptr2 = (char *)((int)input_array + 0x42);\n        }\n        else {\n          *input_array = *input_array & 0xfffffffb;\n          if (value == 0) {\n            if (uint_var3 != 0) goto LAB_08004fc8;\n          }\n          else {\nLAB_08004f1a:\n            do {\n              uint_var3 = value / uint_var1;\n              char_ptr2 = char_ptr2 + -1;\n              *char_ptr2 = char_ptr[value - uint_var1 * uint_var3];\n              value = uint_var3;\n            } while (uint_var3 != 0);\n          }\n        }\n        if (((uint_var1 == 8) && ((int)(*input_array << 0x1f) < 0)) && ((int)input_array[1] <= (int)input_array[4]))\n        {\n          char_ptr2[-1] = '0';\n          char_ptr2 = char_ptr2 + -1;\n        }\n        input_array[4] = (int)char_ptr3 - (int)char_ptr2;\n        char_ptr3 = char_ptr2;\n        goto LAB_08004ec2;\n      }\n      ptr = *param5;\n      *param5 = ptr + 1;\n      *(char *)((int)input_array + 0x42) = (char)*ptr;\nLAB_08004e2c:\n      char_ptr3 = (char *)((int)input_array + 0x42);\n      value = 1;\n    }\n    else {\n      if (byte_value != 0x73) {\n        if (byte_value < 0x74) {\n          if (byte_value == 0x6f) {\nLAB_08004e52:\n            value = *input_array;\n            ptr = *param5;\n            if ((value & 0x80) == 0) {\n              *param5 = ptr + 1;\n              if ((value & 0x40) == 0) goto LAB_08004e60;\n              value = (uint)*(ushort *)ptr;\n            }\n            else {\n              *param5 = ptr + 1;\nLAB_08004e60:\n              value = *ptr;\n            }\n            char_ptr = \"0123456789ABCDEF\";\n            if (byte_value == 0x6f) {\n              uint_var1 = 8;\n            }\n            else {\n              uint_var1 = 10;\n            }\n            goto LAB_08004e7c;\n          }\n          if (byte_value == 0x70) {\n            *input_array = *input_array | 0x20;\nLAB_08004e12:\n            *(undefined *)((int)input_array + 0x45) = 0x78;\n            char_ptr = \"0123456789abcdef\";\n            goto LAB_08004ee6;\n          }\n        }\n        else {\n          if (byte_value == 0x75) goto LAB_08004e52;\n          if (byte_value == 0x78) goto LAB_08004e12;\n        }\nLAB_08004dcc:\n        *(byte *)((int)input_array + 0x42) = byte_value;\n        goto LAB_08004e2c;\n      }\n      char_ptr_ptr = (char **)*param5;\n      *param5 = (uint *)(char_ptr_ptr + 1);\n      char_ptr3 = *char_ptr_ptr;\n      index = FUN_08000230(char_ptr3,0,input_array[1]);\n      if (index != 0) {\n        input_array[1] = index - (int)char_ptr3;\n      }\n      value = input_array[1];\n    }\n    input_array[4] = value;\n    *(undefined *)((int)input_array + 0x43) = 0;\n    goto LAB_08004ec2;\n  }\n  value = *input_array;\n  dptr = (uint **)*param5;\n  uint_var1 = input_array[5];\n  if ((value & 0x80) == 0) {\n    *param5 = (uint *)(dptr + 1);\n    ptr = *dptr;\n    if ((value & 0x40) == 0) goto LAB_08004f42;\n    *(short *)ptr = (short)uint_var1;\n  }\n  else {\n    *param5 = (uint *)(dptr + 1);\n    ptr = *dptr;\nLAB_08004f42:\n    *ptr = uint_var1;\n  }\nLAB_08004f56:\n  input_array[4] = 0;\nLAB_08004ec2:\n  index = FUN_08004cb0(param1,input_array,local_array,param3,callback);\n  if ((index == -1) || (index = (*callback)(param1,param3,char_ptr3,input_array[4]), index == -1)) {\nLAB_08004ed6:\n    value = 0xffffffff;\n  }\n  else {\n    if ((int)(*input_array << 0x1e) < 0) {\n      for (index = 0; index < (int)(input_array[3] - local_array[0]); index = index + 1) {\n        int_var2 = (*callback)(param1,param3,(int)input_array + 0x19,1);\n        if (int_var2 == -1) goto LAB_08004ed6;\n      }\n    }\n    value = input_array[3];\n    if ((int)input_array[3] < (int)local_array[0]) {\n      value = local_array[0];\n    }\n  }\n  return value;\n}\n\n",
            "current_name": "decode_and_process_data_08004d9c",
            "entrypoint": "0x08004d9c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d9c": "decode_and_process_data_08004d9c",
                "bVar1": "byte_value",
                "iVar2": "index",
                "iVar4": "int_var2",
                "local_24": "local_array",
                "param_1": "param1",
                "param_2": "input_array",
                "param_3": "param3",
                "param_4": "callback",
                "param_5": "param5",
                "pcVar11": "char_ptr2",
                "pcVar12": "char_ptr3",
                "pcVar5": "char_ptr",
                "ppcVar8": "char_ptr_ptr",
                "ppuVar7": "dptr",
                "puVar3": "ptr",
                "uVar10": "uint_var3",
                "uVar6": "uint_var1",
                "uVar9": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004fdc": {
            "additional_data": {
                "FUNCH_08004a84": {
                    "process_data": 1
                },
                "FUNCH_080053a0": {
                    "handle_null_condition": 1
                },
                "FUN_08004a84": {
                    "execute_process": 1,
                    "sub_function1": 1
                },
                "FUN_08004fdc": {
                    "execute_function": 5,
                    "execute_task": 1,
                    "extracted_function": 1,
                    "handle_function": 1,
                    "initialize_application": 1,
                    "initialize_data": 1,
                    "initialize_function": 3,
                    "initialize_objects": 1,
                    "process_data": 10,
                    "process_function": 1
                },
                "FUN_080053a0": {
                    "check_and_execute": 1,
                    "sub_function2": 1
                },
                "iVar1": {
                    "address": 1,
                    "data": 2,
                    "data_addr": 1,
                    "data_address": 5,
                    "data_pointer": 7,
                    "data_ptr": 5,
                    "data_var": 1,
                    "local_var1": 1,
                    "local_var_1": 1,
                    "saved_i_var": 1,
                    "temp_var1": 1,
                    "var1": 1,
                    "variable1": 3
                },
                "param_1": {
                    "arg1": 5,
                    "data": 1,
                    "data_pointer": 1,
                    "input1": 11,
                    "input_1": 2,
                    "input_param": 1,
                    "input_param1": 4,
                    "object1": 1,
                    "param1": 2,
                    "task_param1": 1,
                    "value1": 1,
                    "var1": 1
                },
                "param_2": {
                    "arg2": 5,
                    "input2": 11,
                    "input_2": 2,
                    "input_param2": 4,
                    "object2": 1,
                    "output_param": 1,
                    "param2": 3,
                    "task_param2": 1,
                    "value1": 1,
                    "value2": 1,
                    "var2": 1
                },
                "param_3": {
                    "arg3": 5,
                    "input3": 11,
                    "input_3": 2,
                    "input_param3": 4,
                    "object3": 1,
                    "param3": 3,
                    "task_param3": 1,
                    "temp_param": 1,
                    "value2": 1,
                    "value3": 1,
                    "var3": 1
                },
                "param_4": {
                    "arg4": 5,
                    "flag_param": 1,
                    "input4": 11,
                    "input_4": 2,
                    "input_param4": 4,
                    "object4": 1,
                    "param4": 3,
                    "task_param4": 1,
                    "value3": 1,
                    "value4": 1,
                    "var4": 1
                },
                "uStack_4": {
                    "input4_copy": 3,
                    "input_var4": 1,
                    "object4_copy": 1,
                    "output_ptr3": 1,
                    "param4": 1,
                    "param4_copy": 4,
                    "param_four": 1,
                    "saved_u_stack_4": 1,
                    "stack3": 1,
                    "stack_value3": 2,
                    "stack_var3": 3,
                    "tmp3": 1,
                    "variable5": 1
                },
                "uStack_8": {
                    "input3_copy": 3,
                    "input_var3": 1,
                    "object3_copy": 1,
                    "output_ptr2": 1,
                    "param3": 1,
                    "param3_copy": 3,
                    "param_three": 1,
                    "saved_u_stack_8": 1,
                    "stack2": 1,
                    "stack_value2": 2,
                    "stack_var2": 3,
                    "tmp2": 1,
                    "variable4": 1
                },
                "uStack_c": {
                    "input2_copy": 3,
                    "input_var2": 1,
                    "object2_copy": 1,
                    "output_ptr1": 1,
                    "param2": 1,
                    "param2_copy": 4,
                    "param_two": 1,
                    "saved_u_stack_c": 1,
                    "stack1": 1,
                    "stack_value1": 2,
                    "stack_var1": 3,
                    "tmp1": 1,
                    "variable3": 1
                },
                "uVar2": {
                    "arg1_copy": 1,
                    "input1_copy": 2,
                    "input_ptr": 1,
                    "input_var1": 1,
                    "local_var2": 1,
                    "local_var_2": 1,
                    "object1_copy": 1,
                    "param": 1,
                    "param1": 1,
                    "param1_copy": 8,
                    "param_one": 1,
                    "param_ptr": 1,
                    "param_value": 2,
                    "saved_u_var": 1,
                    "temp_value": 1,
                    "temp_var": 2,
                    "temp_var2": 1,
                    "var2": 1,
                    "variable2": 3
                }
            },
            "called": [
                "FUN_08004a84",
                "FUN_080053a0"
            ],
            "calling": [
                "FUN_08003978"
            ],
            "code": "\nvoid process_data_08004fdc(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int data_pointer;\n  undefined4 param1_copy;\n  undefined4 param2_copy;\n  undefined4 param3_copy;\n  undefined4 param4_copy;\n  \n  data_pointer = DAT_200000a0;\n  param1_copy = input1;\n  param2_copy = input2;\n  param3_copy = input3;\n  param4_copy = input4;\n  if ((DAT_200000a0 != 0) && (*(int *)(DAT_200000a0 + 0x18) == 0)) {\n    FUN_080053a0(DAT_200000a0);\n  }\n  FUN_08004a84(data_pointer,*(undefined4 *)(data_pointer + 8),input1,&param2_copy,param1_copy,&param2_copy);\n  return;\n}\n\n",
            "current_name": "process_data_08004fdc",
            "entrypoint": "0x08004fdc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004fdc": "process_data_08004fdc",
                "iVar1": "data_pointer",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uStack_4": "param4_copy",
                "uStack_8": "param3_copy",
                "uStack_c": "param2_copy",
                "uVar2": "param1_copy"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800500c": {
            "additional_data": {
                "DAT_20000674": {
                    "error_value": 1,
                    "extracted_value": 1
                },
                "FUN_08004094": {
                    "get_error_code": 1,
                    "get_updated_value": 1,
                    "get_value": 1
                },
                "FUN_0800500c": {
                    "check_and_assign_value": 1,
                    "check_and_update_parameter_value": 1,
                    "check_and_update_value": 6,
                    "check_error_and_set_param": 1,
                    "check_return_value_and_update_param": 1,
                    "extract_and_assign_data": 1,
                    "extract_and_assign_value": 1,
                    "extract_and_check_data": 1,
                    "extract_error_value": 1,
                    "extract_result": 1,
                    "extract_value": 1,
                    "find_return_value_and_assign": 1,
                    "process_return_value": 1,
                    "reverse_and_update_variable": 1,
                    "update_and_check_value": 2,
                    "update_data": 1,
                    "update_param_if_error": 2,
                    "update_param_if_negative": 1,
                    "update_param_with_result": 1,
                    "update_parameter_if_error": 1,
                    "update_result_if_valid": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "function_result": 3,
                    "result": 10,
                    "result_value": 1,
                    "return_value": 11,
                    "status": 2
                },
                "param_1": {
                    "output": 4,
                    "output_array": 1,
                    "output_param": 3,
                    "output_ptr": 3,
                    "output_value": 3,
                    "output_var": 1,
                    "result": 11,
                    "result_param": 1,
                    "result_pointer": 3,
                    "updated_value": 1
                },
                "param_2": {
                    "input": 7,
                    "input_data": 2,
                    "input_param": 4,
                    "input_value": 16,
                    "input_var": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08004094"
            ],
            "calling": [
                "FUN_08004978"
            ],
            "code": "\nvoid check_return_value_and_update_param_0800500c(int *result,undefined4 input_value)\n\n{\n  int return_value;\n  \n  DAT_20000674 = 0;\n  return_value = FUN_08004094(input_value);\n  if ((return_value == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return;\n}\n\n",
            "current_name": "check_return_value_and_update_param_0800500c",
            "entrypoint": "0x0800500c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800500c": "check_return_value_and_update_param_0800500c",
                "iVar1": "return_value",
                "param_1": "result",
                "param_2": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080050d0": {
            "additional_data": {
                "0x280": {
                    "0x280": 1
                },
                "DAT_200000a0": {
                    "data": 1
                },
                "FUN_080048dc": {
                    "cleanup_data": 2,
                    "do_something": 1,
                    "handle_error": 3,
                    "helper_function_1": 1,
                    "perform_cleanup": 1,
                    "perform_operation": 1,
                    "process_data": 2,
                    "process_data_function": 1,
                    "process_param": 1,
                    "process_value": 2,
                    "reset_data": 1
                },
                "FUN_080050d0": {
                    "analyze_data": 2,
                    "calculate_status": 1,
                    "do_something": 1,
                    "handle_data": 1,
                    "parse_data": 1,
                    "process_data": 19,
                    "process_input": 1,
                    "update_data": 1
                },
                "FUN_080053a0": {
                    "check_and_process_data": 1,
                    "cleanup": 1,
                    "cleanup_data": 3,
                    "cleanup_data_manager": 1,
                    "cleanup_function": 5,
                    "dispose_data": 1,
                    "initialize_data": 2,
                    "perform_action": 1,
                    "perform_cleanup": 1,
                    "reset_data": 1
                },
                "FUN_080054fc": {
                    "additional_processing_function": 1,
                    "check_condition": 1,
                    "check_data": 1,
                    "handle_error": 4,
                    "handle_error_condition": 1,
                    "handle_exception": 2,
                    "helper_function_2": 1,
                    "perform_operation": 2,
                    "process_data": 2,
                    "validate_data": 1
                },
                "iVar1": {
                    "config_ptr": 1,
                    "data": 5,
                    "data_address": 5,
                    "data_manager": 2,
                    "data_offset": 2,
                    "data_ptr": 13,
                    "data_var": 1,
                    "ptr_data": 1,
                    "some_data": 1
                },
                "param_1": {
                    "input_array": 1,
                    "input_param": 1,
                    "output": 12,
                    "output1": 1,
                    "output_1": 1,
                    "output_buffer": 2,
                    "output_data": 1,
                    "output_data1": 1,
                    "output_msg": 1,
                    "output_param": 6,
                    "output_ptr": 1,
                    "result": 2,
                    "status_ptr": 1
                },
                "param_2": {
                    "config_array": 1,
                    "config_param": 1,
                    "data": 2,
                    "data_ptr": 1,
                    "input": 12,
                    "input_1": 1,
                    "input_buffer": 2,
                    "input_data": 1,
                    "input_data1": 1,
                    "input_msg": 1,
                    "input_param": 5,
                    "input_ptr": 1,
                    "output2_ptr": 1,
                    "source_ptr": 1
                },
                "uVar2": {
                    "new_value": 1,
                    "result": 26,
                    "result_value": 1,
                    "status": 1,
                    "value": 2
                },
                "uVar3": {
                    "data_value": 1,
                    "flag": 4,
                    "flags": 15,
                    "input_value": 1,
                    "param_value": 1,
                    "short_value": 1,
                    "source_val": 1,
                    "temp_value": 1,
                    "value": 6
                }
            },
            "called": [
                "FUN_080048dc",
                "FUN_080054fc",
                "FUN_080053a0"
            ],
            "calling": [
                "FUN_08004a84",
                "FUN_08004a34"
            ],
            "code": "\nuint process_data_080050d0(undefined4 *output,undefined4 *input)\n\n{\n  int data_ptr;\n  uint result;\n  ushort flags;\n  \n  data_ptr = DAT_200000a0;\n  if ((DAT_200000a0 != 0) && (*(int *)(DAT_200000a0 + 0x18) == 0)) {\n    FUN_080053a0(DAT_200000a0);\n  }\n  if (input == &DAT_08005fc0) {\n    input = *(undefined4 **)(data_ptr + 4);\n  }\n  else if (input == (undefined4 *)&DAT_08005fe0) {\n    input = *(undefined4 **)(data_ptr + 8);\n  }\n  else if (input == (undefined4 *)&DAT_08005fa0) {\n    input = *(undefined4 **)(data_ptr + 0xc);\n  }\n  flags = *(ushort *)(input + 3);\n  result = (uint)flags;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output = 9;\n      goto LAB_08005100;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)input[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input[0xd] != input + 0x11) {\n          FUN_080048dc(output);\n        }\n        input[0xd] = 0;\n      }\n      *(ushort *)(input + 3) = *(ushort *)(input + 3) & 0xffdb;\n      input[1] = 0;\n      *input = input[4];\n    }\n    *(ushort *)(input + 3) = *(ushort *)(input + 3) | 8;\n  }\n  if ((input[4] == 0) && ((*(ushort *)(input + 3) & 0x280) != 0x200)) {\n    FUN_080054fc(output,input);\n  }\n  flags = *(ushort *)(input + 3);\n  result = flags & 1;\n  if ((flags & 1) == 0) {\n    if (-1 < (int)((uint)flags << 0x1e)) {\n      result = input[5];\n    }\n    input[2] = result;\n  }\n  else {\n    input[2] = 0;\n    input[6] = -input[5];\n  }\n  if (input[4] == 0) {\n    flags = *(ushort *)(input + 3);\n    result = (int)(short)flags & 0x80;\n    if (result != 0) {\nLAB_08005100:\n      *(ushort *)(input + 3) = flags | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "process_data_080050d0",
            "entrypoint": "0x080050d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080050d0": "process_data_080050d0",
                "iVar1": "data_ptr",
                "param_1": "output",
                "param_2": "input",
                "uVar2": "result",
                "uVar3": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080051ac": {
            "additional_data": {
                "FUN_080040f8": {
                    "allocate_memory": 2,
                    "extract_data": 1,
                    "get_data": 6,
                    "get_data_function": 2,
                    "get_initial_value": 1,
                    "get_input_data": 1,
                    "get_memory": 2,
                    "get_memory_location": 1,
                    "get_pointer": 2,
                    "get_return_value": 1,
                    "initialize_data": 1,
                    "retrieve_data": 2
                },
                "FUN_080048dc": {
                    "cleanup": 4,
                    "cleanup_data": 1,
                    "cleanup_function": 4,
                    "cleanup_memory": 6,
                    "cleanup_resources": 1,
                    "helper_function": 1,
                    "process_data": 1,
                    "release_memory": 1
                },
                "FUN_080051ac": {
                    "handle_function": 1,
                    "process_binary": 2,
                    "process_binary_data": 2,
                    "process_binary_function": 1,
                    "process_data": 10,
                    "process_function": 1
                },
                "FUN_080055d0": {
                    "configure_settings": 1,
                    "initialize": 8,
                    "initialize_data": 4,
                    "initialize_environment": 1,
                    "initialize_function": 2,
                    "initialize_process": 1,
                    "initialize_system": 4,
                    "initialize_variables": 1
                },
                "UNRECOVERED_JUMPTABLE_00": {
                    "jmp_function": 1,
                    "jmp_table": 2,
                    "jump_table": 10,
                    "jump_table_function": 1,
                    "jump_tbl1": 1,
                    "jumptable_func": 1,
                    "unrecovered_jump_table": 1,
                    "unrecovered_jumptable": 1,
                    "var9": 1
                },
                "bVar11": {
                    "are_conditions_met": 1,
                    "bool_value": 1,
                    "bool_var": 2,
                    "bool_var11": 1,
                    "boolean1": 1,
                    "boolean_value": 2,
                    "boolean_variable": 1,
                    "condition": 1,
                    "flag": 2,
                    "flag_var": 1,
                    "is_zero": 6,
                    "var6": 1
                },
                "iVar10": {
                    "another_int_value": 1
                },
                "iVar2": {
                    "count": 1,
                    "int_value": 1,
                    "int_var": 1,
                    "int_var1": 1,
                    "integer_variable_1": 1,
                    "iterator": 1,
                    "loop_counter": 1,
                    "offset": 3,
                    "temp1": 1,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "temp_variable": 1,
                    "total_size": 1,
                    "var1": 2,
                    "var2": 1,
                    "var3": 2,
                    "variable1": 1
                },
                "iVar7": {
                    "another_int_value": 1,
                    "another_iterator": 1,
                    "cleanup_offset": 1,
                    "count": 1,
                    "i_var_temp1": 1,
                    "int_var2": 2,
                    "integer_variable_2": 1,
                    "loop_counter": 1,
                    "loop_variable": 1,
                    "size": 1,
                    "temp3": 1,
                    "temp_value": 1,
                    "temp_var2": 1,
                    "temp_var4": 1,
                    "var2": 1,
                    "var4": 3,
                    "var7": 1,
                    "variable2": 1
                },
                "iVar9": {
                    "counter_variable": 1,
                    "i_var_temp2": 1,
                    "int_var3": 1,
                    "integer_variable_3": 1,
                    "loop_counter": 1,
                    "remaining": 1,
                    "remaining_size": 3,
                    "size": 1,
                    "temp_var": 1,
                    "temp_var3": 1,
                    "temp_var5": 1,
                    "temp_variable": 1,
                    "var3": 1,
                    "var5": 3,
                    "var9": 1,
                    "variable3": 1
                },
                "param_1": {
                    "input": 1,
                    "input_value": 1
                },
                "pcVar8": {
                    "callback": 1,
                    "callback_function": 1,
                    "code_pointer": 1,
                    "code_var": 1,
                    "func_ptr": 1,
                    "function_pointer": 7,
                    "function_ptr": 1,
                    "pointer3": 1,
                    "var8": 1
                },
                "piVar3": {
                    "data_pointer": 1,
                    "data_pointer1": 1,
                    "data_ptr": 5,
                    "function_pointer_array": 1,
                    "int_pointer1": 1,
                    "param1": 1,
                    "pointer": 1,
                    "pointer1": 2,
                    "pointer_array": 4,
                    "pointer_to_struct": 1,
                    "pointer_var1": 1,
                    "pointer_variable_1": 1,
                    "ptr2": 1,
                    "temp_var2": 1
                },
                "piVar4": {
                    "another_pointer_array": 1,
                    "cleanup_data": 1,
                    "cleanup_ptr": 1,
                    "cleanup_variable": 1,
                    "int_pointer2": 1,
                    "pointer3": 1,
                    "pointer4": 1,
                    "pointer_array": 1,
                    "pointer_temp": 1,
                    "pointer_to_struct2": 1,
                    "ptr3": 1,
                    "temp_pointer": 1,
                    "temp_pointer_array": 1,
                    "temp_ptr": 1,
                    "temp_var3": 1
                },
                "piVar9": {
                    "int_value_pointer": 1
                },
                "puVar1": {
                    "buffer_ptr": 1,
                    "data": 1,
                    "data_buffer": 1,
                    "data_pointer": 2,
                    "data_pointer2": 1,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "memory_pointer": 1,
                    "param2": 1,
                    "pointer": 1,
                    "pointer2": 2,
                    "pointer_to_uint": 1,
                    "pointer_var2": 1,
                    "pointer_variable_2": 1,
                    "ptr": 1,
                    "ptr1": 1,
                    "uint_pointer": 1,
                    "uint_ptr": 1,
                    "value_pointer": 1,
                    "var_ptr": 1
                },
                "uVar10": {
                    "temp2": 1,
                    "temp_data": 1,
                    "temp_uint": 1,
                    "temp_value": 4,
                    "u_var_temp": 1,
                    "uint_var": 2,
                    "value": 1,
                    "value3": 2,
                    "value_temp": 1,
                    "var10": 1,
                    "var6": 1
                },
                "uVar12": {
                    "function_result": 1,
                    "result": 6,
                    "return_value": 1,
                    "temp_ulonglong": 1,
                    "u_var_temp2": 1,
                    "ulong_var": 1,
                    "ulonglong_value": 1,
                    "unsigned_variable_3": 1,
                    "var7": 2
                },
                "uVar5": {
                    "buffer_size": 1,
                    "data_length": 1,
                    "data_value2": 1,
                    "flags": 1,
                    "input_value": 1,
                    "uint_value": 1,
                    "unsigned_variable_1": 1,
                    "ushort_to_uint": 1,
                    "ushort_value": 6,
                    "value": 1,
                    "value1": 1,
                    "value2": 1,
                    "var1": 2,
                    "var2": 1,
                    "var5": 1
                },
                "uVar6": {
                    "data_flag": 1,
                    "data_value1": 1,
                    "flag": 1,
                    "flag_value": 1,
                    "flags": 3,
                    "input_flags": 1,
                    "short_flag": 1,
                    "temp_ushort": 1,
                    "un_recovered_value": 1,
                    "unsigned_variable_2": 1,
                    "ushort_condition": 1,
                    "ushort_value": 1,
                    "ushort_var": 2,
                    "value1": 1,
                    "value2": 1,
                    "var2": 2,
                    "var3": 1,
                    "var6": 1
                },
                "x": {
                    "temp_var": 1
                }
            },
            "called": [
                "FUN_080048dc",
                "FUN_080040f8",
                "FUN_080055d0"
            ],
            "calling": [
                "FUN_08005760",
                "FUN_08004808"
            ],
            "code": "\nvoid process_binary_data_080051ac(void)\n\n{\n  uint *data_pointer;\n  int offset;\n  int *data_ptr;\n  int *cleanup_ptr;\n  uint ushort_value;\n  ushort flags;\n  int var4;\n  code *function_pointer;\n  int remaining_size;\n  uint temp_value;\n  code *jump_table;\n  bool is_zero;\n  undefined8 result;\n  \n  FUN_080055d0(6);\n  jump_table = (code *)0temp_var80051bb;\n  result = FUN_080040f8(1);\n  data_ptr = (int *)((ulonglong)result >> 0temp_var20);\n  data_pointer = (uint *)result;\n  flags = *(ushort *)(data_ptr + 3);\n  ushort_value = (uint)flags;\n  if ((int)(ushort_value << 0temp_var1c) < 0) {\n    offset = data_ptr[4];\n    if (offset != 0) {\n      var4 = ushort_value << 0temp_var1e;\n      is_zero = var4 == 0;\n      remaining_size = *data_ptr;\n      if (is_zero) {\n        var4 = data_ptr[5];\n      }\n      *data_ptr = offset;\n      if (!is_zero) {\n        var4 = 0;\n      }\n      data_ptr[2] = var4;\n      for (remaining_size = remaining_size - offset; 0 < remaining_size; remaining_size = remaining_size - var4) {\n        var4 = (*(code *)data_ptr[10])(data_pointer,data_ptr[8],offset,remaining_size);\n        if (var4 < 1) {\n          flags = *(ushort *)(data_ptr + 3);\n          goto LAB_080052b2;\n        }\n        offset = offset + var4;\n      }\n    }\n  }\n  else if (((0 < data_ptr[1]) || (0 < data_ptr[0temp_var10])) &&\n          (function_pointer = (code *)data_ptr[0temp_varb], function_pointer != (code *)0temp_var0)) {\n    temp_value = *data_pointer;\n    *data_pointer = 0;\n    if ((flags & 0temp_var1000) == 0) {\n      offset = (*function_pointer)(data_pointer,data_ptr[8],ushort_value & 0temp_var1000,1);\n      if ((offset == -1) && (ushort_value = *data_pointer, ushort_value != 0)) {\n        if ((ushort_value != 0temp_var1d) && (ushort_value != 0temp_var16)) {\n          *(ushort *)(data_ptr + 3) = *(ushort *)(data_ptr + 3) | 0temp_var40;\n                    /* WARNING: Could not recover jumptable at 0temp_var0800527c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jump_table)();\n          return;\n        }\n        *data_pointer = temp_value;\n        goto LAB_080051d6;\n      }\n    }\n    else {\n      offset = data_ptr[0temp_var15];\n    }\n    if (((int)((uint)*(ushort *)(data_ptr + 3) << 0temp_var1d) < 0) &&\n       (offset = offset - data_ptr[1], data_ptr[0temp_vard] != 0)) {\n      offset = offset - data_ptr[0temp_var10];\n    }\n    offset = (*(code *)data_ptr[0temp_varb])(data_pointer,data_ptr[8],offset,0);\n    flags = *(ushort *)(data_ptr + 3);\n    if ((offset == -1) &&\n       ((0temp_var1d < *data_pointer || (-1 < (int)((0temp_var20400001U >> (*data_pointer & 0temp_varff)) << 0temp_var1f))))) {\nLAB_080052b2:\n      *(ushort *)(data_ptr + 3) = flags | 0temp_var40;\n                    /* WARNING: Could not recover jumptable at 0temp_var080052bc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jump_table)(0temp_varffffffff);\n      return;\n    }\n    data_ptr[1] = 0;\n    *data_ptr = data_ptr[4];\n    if (((int)((uint)flags << 0temp_var13) < 0) && ((offset != -1 || (*data_pointer == 0)))) {\n      data_ptr[0temp_var15] = offset;\n    }\n    cleanup_ptr = (int *)data_ptr[0temp_vard];\n    *data_pointer = temp_value;\n    if (cleanup_ptr != (int *)0temp_var0) {\n      if (cleanup_ptr != data_ptr + 0temp_var11) {\n        FUN_080048dc(data_pointer);\n      }\n      data_ptr[0temp_vard] = 0;\n                    /* WARNING: Could not recover jumptable at 0temp_var08005252. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jump_table)();\n      return;\n    }\n  }\nLAB_080051d6:\n                    /* WARNING: Could not recover jumptable at 0temp_var080051d8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)(0);\n  return;\n}\n\n",
            "current_name": "process_binary_data_080051ac",
            "entrypoint": "0x080051ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080051ac": "process_binary_data_080051ac",
                "UNRECOVERED_JUMPTABLE_00": "jump_table",
                "bVar11": "is_zero",
                "iVar2": "offset",
                "iVar7": "var4",
                "iVar9": "remaining_size",
                "pcVar8": "function_pointer",
                "piVar3": "data_ptr",
                "piVar4": "cleanup_ptr",
                "puVar1": "data_pointer",
                "uVar10": "temp_value",
                "uVar12": "result",
                "uVar5": "ushort_value",
                "uVar6": "flags",
                "x": "temp_var"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080052cc": {
            "additional_data": {
                "FUN_080048dc": {
                    "clear_memory": 1
                },
                "FUN_080052cc": {
                    "extract_data": 1,
                    "process_data": 3,
                    "process_function": 1
                },
                "FUN_080053a0": {
                    "print_message": 1
                },
                "LAB_080051d6": {
                    "goto_statement2": 1
                },
                "LAB_080052b2": {
                    "goto_statement": 1
                },
                "UNRECOVERED_JUMPTABLE_00": {
                    "error_jump_table": 1,
                    "jmp_table": 1,
                    "jump_table": 9,
                    "jump_table_pointer": 1,
                    "jumptable": 4,
                    "jumptable_ptr": 2,
                    "table_00": 1,
                    "unrecovered_jump_table": 2,
                    "unrecovered_jumptable": 1
                },
                "bVar10": {
                    "b_var10": 1,
                    "bool_value": 2,
                    "bool_var": 6,
                    "boolean_value": 2,
                    "boolean_var": 1,
                    "condition": 2,
                    "condition_check": 1,
                    "condition_flag": 1,
                    "flag": 1,
                    "is_true": 1,
                    "is_zero": 2,
                    "variable_11": 1
                },
                "iVar2": {
                    "config_length": 1,
                    "config_value": 1,
                    "count": 3,
                    "counter": 3,
                    "i_var": 1,
                    "index": 3,
                    "int_value": 1,
                    "length": 3,
                    "num1": 1,
                    "offset": 2,
                    "param2_4": 1,
                    "temp_var": 1,
                    "temp_var1": 2,
                    "value": 1,
                    "value1": 2,
                    "var1": 3,
                    "var_1": 1,
                    "variable_1": 1
                },
                "iVar6": {
                    "i_var": 1,
                    "i_var2": 1,
                    "i_var6": 1,
                    "i_var_temp": 1,
                    "increment": 1,
                    "int_result": 1,
                    "num2": 1,
                    "offset": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp_int": 1,
                    "temp_int_value": 1,
                    "temp_var": 2,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "temp_var3": 3,
                    "temp_var5": 1,
                    "temp_var_3": 1,
                    "temp_variable": 1,
                    "value": 2,
                    "value3": 1,
                    "value4": 1,
                    "var2": 1,
                    "var5": 2,
                    "var_5": 1,
                    "variable_5": 1
                },
                "iVar8": {
                    "counter2": 1,
                    "i_var": 1,
                    "i_var3": 1,
                    "i_var8": 2,
                    "iterator": 1,
                    "length": 1,
                    "loop_counter": 2,
                    "loop_variable": 1,
                    "num3": 1,
                    "remaining": 1,
                    "temp": 1,
                    "temp4": 1,
                    "temp_int2": 1,
                    "temp_var": 1,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "temp_var6": 1,
                    "temp_var_2": 1,
                    "temp_var_8": 1,
                    "temp_variable2": 1,
                    "value4": 1,
                    "value5": 1,
                    "var": 1,
                    "var3": 1,
                    "var8": 2,
                    "var_6": 1,
                    "variable_9": 1
                },
                "iVar9": {
                    "temp3": 1
                },
                "id": {
                    "bool_value": 1
                },
                "param_1": {
                    "array": 1,
                    "array1": 1,
                    "array_param": 3,
                    "array_pointer": 1,
                    "data": 2,
                    "data_array": 1,
                    "data_pointer": 1,
                    "input_array": 9,
                    "param1": 1,
                    "param_array": 3,
                    "param_array1": 1,
                    "parameter_1": 1,
                    "pointer": 1,
                    "uint_arr": 1,
                    "uint_array": 3
                },
                "param_2": {
                    "array2": 1,
                    "config": 2,
                    "config_array": 3,
                    "data": 1,
                    "info_pointer": 1,
                    "input_array2": 1,
                    "int_arr": 1,
                    "int_array": 3,
                    "output_array": 4,
                    "param2": 1,
                    "param_array2": 1,
                    "param_list": 3,
                    "parameter_2": 1,
                    "parameter_array": 1,
                    "parameters": 1,
                    "params": 1,
                    "pointer_param": 3,
                    "user_info": 1
                },
                "pcVar7": {
                    "callback": 3,
                    "callback_func": 2,
                    "code_var": 1,
                    "function_pointer": 15,
                    "function_ptr": 8,
                    "pointer3": 1,
                    "variable_8": 1
                },
                "piVar3": {
                    "int_ptr": 2,
                    "param2_3": 1,
                    "pi_var": 2,
                    "pointer": 4,
                    "pointer2": 1,
                    "pointer_var": 3,
                    "ptr": 3,
                    "ptr1": 1,
                    "ptr_var": 1,
                    "ptr_variable": 2,
                    "temp_pointer": 3,
                    "temp_ptr": 1,
                    "temp_var2": 2,
                    "value2": 1,
                    "var2": 2,
                    "var_2": 1,
                    "variable_2": 1
                },
                "uVar1": {
                    "result": 13,
                    "return_val": 1,
                    "return_value": 16,
                    "status": 1
                },
                "uVar10": {
                    "bool_flag": 1,
                    "bool_value": 2,
                    "bool_var": 3,
                    "branch_condition": 1,
                    "check": 1,
                    "condition": 1,
                    "temp_u_int3": 1,
                    "temp_var4": 1,
                    "u_var10": 1
                },
                "uVar4": {
                    "short_value": 1,
                    "temp": 2,
                    "temp_u_int": 1,
                    "temp_value": 2,
                    "temp_var": 2,
                    "temp_var1": 1,
                    "temp_var3": 1,
                    "u_val": 1,
                    "u_var": 3,
                    "u_var4": 1,
                    "ushort_val": 1,
                    "ushort_value": 3,
                    "ushort_var": 4,
                    "value": 2,
                    "value1": 1,
                    "value2": 1,
                    "var3": 2,
                    "var_3": 1,
                    "variable_3": 1
                },
                "uVar5": {
                    "flag": 2,
                    "flags": 1,
                    "short_value": 1,
                    "temp2": 1,
                    "temp_short_value": 1,
                    "temp_u_short": 1,
                    "temp_value2": 1,
                    "temp_var2": 2,
                    "temp_var4": 1,
                    "temp_var_2": 1,
                    "u_var5": 1,
                    "u_var_short": 1,
                    "ushort_result": 1,
                    "ushort_value": 4,
                    "ushort_value2": 3,
                    "ushort_var": 3,
                    "value2": 1,
                    "value3": 1,
                    "var4": 2,
                    "var_4": 1,
                    "variable_4": 1
                },
                "uVar9": {
                    "temp": 1,
                    "temp5": 1,
                    "temp_u_int2": 1,
                    "temp_uint_value": 1,
                    "temp_value": 2,
                    "temp_value3": 1,
                    "temp_var": 2,
                    "temp_var3": 1,
                    "temp_var4": 2,
                    "temp_var5": 1,
                    "temp_var6": 1,
                    "temp_var7": 1,
                    "temp_var_2": 1,
                    "temp_var_7": 1,
                    "u_var2": 1,
                    "u_var9": 3,
                    "uint_val": 1,
                    "uint_value": 1,
                    "uint_var": 1,
                    "value": 1,
                    "value7": 1,
                    "var9": 2,
                    "var_7": 1,
                    "variable_10": 1
                },
                "unaff_r4": {
                    "param_4": 2,
                    "register_var_4": 1,
                    "temp4": 1,
                    "temp_unaff_r4": 1,
                    "temp_undefined4_a": 1,
                    "temp_var4": 1,
                    "temp_var_4": 1,
                    "unaff_r4": 6,
                    "unaff_value1": 1,
                    "unaff_var1": 3,
                    "unaff_var4": 2,
                    "unaff_variable1": 1,
                    "unaffected_r4": 1,
                    "unaffected_reg1": 1,
                    "unaffected_register4": 1,
                    "unaffected_register_1": 1,
                    "unaffected_register_4": 1,
                    "unused_var1": 1,
                    "unused_var_1": 1,
                    "var6": 2,
                    "variable_6": 1
                },
                "unaff_r5": {
                    "param_5": 2,
                    "register_var_5": 1,
                    "temp5": 1,
                    "temp_unaff_r5": 1,
                    "temp_undefined4_b": 1,
                    "temp_var5": 1,
                    "temp_var_5": 1,
                    "unaff_r5": 6,
                    "unaff_value2": 1,
                    "unaff_var2": 3,
                    "unaff_var5": 2,
                    "unaff_variable2": 1,
                    "unaffected_r5": 1,
                    "unaffected_reg2": 1,
                    "unaffected_register5": 1,
                    "unaffected_register_2": 1,
                    "unaffected_register_5": 1,
                    "unused_var2": 1,
                    "unused_var_2": 1,
                    "var7": 2,
                    "variable_7": 1
                }
            },
            "called": [
                "FUN_080053a0"
            ],
            "calling": [
                "FUN_08004a34"
            ],
            "code": "\nundefined4 process_data_080052cc(uint *input_array,int *output_array)\n\n{\n  undefined4 return_value;\n  int index;\n  int *pointer;\n  uint ushort_var;\n  ushort ushort_value;\n  int temp_var3;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  code *function_pointer;\n  int var8;\n  uint u_var9;\n  code *jump_table;\n  bool bool_var;\n  \n  if (output_array[4] != 0) {\n    if ((input_array != (uint *)0x0) && (input_array[6] == 0)) {\n      FUN_080053a0();\n    }\n    if (output_array == &DAT_08005fc0) {\n      output_array = (int *)input_array[1];\n    }\n    else if (output_array == (int *)&DAT_08005fe0) {\n      output_array = (int *)input_array[2];\n    }\n    else if (output_array == (int *)&DAT_08005fa0) {\n      output_array = (int *)input_array[3];\n    }\n    if (*(short *)(output_array + 3) != 0) {\n      ushort_value = *(ushort *)(output_array + 3);\n      ushort_var = (uint)ushort_value;\n      if ((int)(ushort_var << 0x1c) < 0) {\n        index = output_array[4];\n        if (index != 0) {\n          temp_var3 = ushort_var << 0x1e;\n          bool_var = temp_var3 == 0;\n          var8 = *output_array;\n          if (bool_var) {\n            temp_var3 = output_array[5];\n          }\n          *output_array = index;\n          if (!bool_var) {\n            temp_var3 = 0;\n          }\n          output_array[2] = temp_var3;\n          for (var8 = var8 - index; 0 < var8; var8 = var8 - temp_var3) {\n            temp_var3 = (*(code *)output_array[10])(input_array,output_array[8],index,var8,unaff_r4,unaff_r5);\n            if (temp_var3 < 1) {\n              ushort_value = *(ushort *)(output_array + 3);\n              goto goto_statement;\n            }\n            index = index + temp_var3;\n          }\n        }\n      }\n      else if (((0 < output_array[1]) || (0 < output_array[0x10])) &&\n              (function_pointer = (code *)output_array[0xb], function_pointer != (code *)0x0)) {\n        u_var9 = *input_array;\n        *input_array = 0;\n        if ((ushort_value & 0x1000) == 0) {\n          index = (*function_pointer)(input_array,output_array[8],ushort_var & 0x1000,1);\n          if ((index == -1) && (ushort_var = *input_array, ushort_var != 0)) {\n            if ((ushort_var != 0x1d) && (ushort_var != 0x16)) {\n              *(ushort *)(output_array + 3) = *(ushort *)(output_array + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x0800527c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              return_value = (*jump_table)();\n              return return_value;\n            }\n            *input_array = u_var9;\n            goto goto_statement2;\n          }\n        }\n        else {\n          index = output_array[0x15];\n        }\n        if (((int)((uint)*(ushort *)(output_array + 3) << 0x1d) < 0) &&\n           (index = index - output_array[1], output_array[0xd] != 0)) {\n          index = index - output_array[0x10];\n        }\n        index = (*(code *)output_array[0xb])(input_array,output_array[8],index,0);\n        ushort_value = *(ushort *)(output_array + 3);\n        if ((index == -1) &&\n           ((0x1d < *input_array || (-1 < (int)((0x20400001U >> (*input_array & 0xff)) << 0x1f))))) {\ngoto_statement:\n          *(ushort *)(output_array + 3) = ushort_value | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x080052bc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          return_value = (*jump_table)(0xffffffff);\n          return return_value;\n        }\n        output_array[1] = 0;\n        *output_array = output_array[4];\n        if (((int)((uint)ushort_value << 0x13) < 0) && ((index != -1 || (*input_array == 0)))) {\n          output_array[0x15] = index;\n        }\n        pointer = (int *)output_array[0xd];\n        *input_array = u_var9;\n        if (pointer != (int *)0x0) {\n          if (pointer != output_array + 0x11) {\n            FUN_080048dc(input_array);\n          }\n          output_array[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08005252. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          return_value = (*jump_table)();\n          return return_value;\n        }\n      }\ngoto_statement2:\n                    /* WARNING: Could not recover jumptable at 0x080051d8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      return_value = (*jump_table)(0);\n      return return_value;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_080052cc",
            "entrypoint": "0x080052cc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080052cc": "process_data_080052cc",
                "LAB_080051d6": "goto_statement2",
                "LAB_080052b2": "goto_statement",
                "UNRECOVERED_JUMPTABLE_00": "jump_table",
                "bVar10": "bool_var",
                "iVar2": "index",
                "iVar6": "temp_var3",
                "iVar8": "var8",
                "param_1": "input_array",
                "param_2": "output_array",
                "pcVar7": "function_pointer",
                "piVar3": "pointer",
                "uVar1": "return_value",
                "uVar4": "ushort_var",
                "uVar5": "ushort_value",
                "uVar9": "u_var9"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800532c": {
            "additional_data": {
                "FUN_080048cc": {
                    "clear_memory": 1,
                    "fill_array_with_value": 1,
                    "fill_array_with_values": 1,
                    "fill_memory": 1,
                    "initialize_array": 3,
                    "initialize_data": 2,
                    "initialize_memory": 13,
                    "initialize_ptr_region": 1,
                    "reset_memory": 1,
                    "set_memory": 2,
                    "set_range": 1
                },
                "FUN_0800532c": {
                    "initialize_data": 6,
                    "initialize_data_struct": 3,
                    "initialize_data_structure": 4,
                    "initialize_data_structures": 3,
                    "initialize_function": 2,
                    "initialize_object": 1,
                    "initialize_param": 1,
                    "initialize_param_array": 1,
                    "initialize_param_struct": 1,
                    "initialize_parameters": 4,
                    "initialize_params": 5
                },
                "LAB_08005686_1": {
                    "label1": 2,
                    "label_08005686_1": 1
                },
                "param_1": {
                    "array": 5,
                    "data": 2,
                    "data_array": 1,
                    "data_struct": 2,
                    "data_structure": 1,
                    "dest": 1,
                    "destination": 2,
                    "mem_ptr": 1,
                    "memory": 7,
                    "memory_block": 1,
                    "memory_pointer": 1,
                    "output_array": 1,
                    "parameters": 3,
                    "params": 1,
                    "range": 1
                },
                "param_2": {
                    "default_value": 3,
                    "init_value": 2,
                    "initial_value": 4,
                    "value": 14,
                    "value1": 7
                },
                "param_3": {
                    "count": 2,
                    "length": 8,
                    "size": 13,
                    "value2": 7
                }
            },
            "called": [
                "FUN_080048cc"
            ],
            "calling": [
                "FUN_080053a0"
            ],
            "code": "\nvoid initialize_data_structure_0800532c(undefined4 *memory,undefined2 value,undefined2 size)\n\n{\n  *memory = 0;\n  memory[1] = 0;\n  memory[2] = 0;\n  *(undefined2 *)(memory + 3) = value;\n  memory[0x19] = 0;\n  *(undefined2 *)((int)memory + 0xe) = size;\n  memory[4] = 0;\n  memory[5] = 0;\n  memory[6] = 0;\n  FUN_080048cc(memory + 0x17,0,8);\n  memory[9] = 0x8005609;\n  memory[10] = 0x800562b;\n  memory[0xb] = 0x8005663;\n  memory[8] = memory;\n  memory[0xc] = &label1;\n  return;\n}\n\n",
            "current_name": "initialize_data_structure_0800532c",
            "entrypoint": "0x0800532c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800532c": "initialize_data_structure_0800532c",
                "LAB_08005686_1": "label1",
                "param_1": "memory",
                "param_2": "value",
                "param_3": "size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005374": {
            "additional_data": {
                "FUN_080048cc": {
                    "fill_memory": 2,
                    "initialize_memory": 5,
                    "set_memory": 1
                },
                "FUN_08004978": {
                    "allocate_memory": 8
                },
                "FUN_08005374": {
                    "initialize_array": 11,
                    "initialize_data": 2,
                    "initialize_data_structure": 15,
                    "initialize_memory": 1,
                    "initialize_memory_block": 1,
                    "initialize_structure": 1
                },
                "iVar2": {
                    "array_offset": 1,
                    "array_size": 1,
                    "index": 5,
                    "offset": 22,
                    "size": 2
                },
                "param_1": {
                    "array": 6,
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "base_address": 1,
                    "data": 8,
                    "data_pointer": 2,
                    "data_struct": 1,
                    "data_structure": 1,
                    "input_data": 6,
                    "input_param": 1,
                    "input_pointer": 1,
                    "param1": 1,
                    "pointer": 1
                },
                "param_2": {
                    "array_length": 1,
                    "array_size": 3,
                    "block_size": 1,
                    "count": 3,
                    "num_elements": 4,
                    "size": 18,
                    "value": 1
                },
                "param_3": {
                    "length": 1
                },
                "puVar1": {
                    "array": 1,
                    "array_pointer": 2,
                    "array_ptr": 2,
                    "data_ptr": 1,
                    "data_structure": 2,
                    "initialized_array": 1,
                    "initialized_array_ptr": 1,
                    "initialized_data": 1,
                    "memory_block": 1,
                    "new_array": 3,
                    "output_pointer": 1,
                    "pointer": 1,
                    "ptr": 6,
                    "ptr_data_structure": 1,
                    "ptr_result": 1,
                    "result": 5,
                    "result_pointer": 1
                }
            },
            "called": [
                "FUN_08004978",
                "FUN_080048cc"
            ],
            "calling": [
                "FUN_08005400"
            ],
            "code": "\nundefined4 * initialize_data_structure_08005374(undefined4 data,int size)\n\n{\n  undefined4 *ptr;\n  int offset;\n  \n  offset = (size + -1) * 0x68;\n  ptr = (undefined4 *)FUN_08004978(data,offset + 0x74);\n  if (ptr != (undefined4 *)0x0) {\n    *ptr = 0;\n    ptr[1] = size;\n    ptr[2] = ptr + 3;\n    FUN_080048cc(ptr + 3,0,offset + 0x68);\n  }\n  return ptr;\n}\n\n",
            "current_name": "initialize_data_structure_08005374",
            "entrypoint": "0x08005374",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005374": "initialize_data_structure_08005374",
                "iVar2": "offset",
                "param_1": "data",
                "param_2": "size",
                "puVar1": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080053a0": {
            "additional_data": {
                "FUN_08005320_1": {
                    "default_param": 1
                },
                "FUN_0800532c": {
                    "assign_value": 1,
                    "initialize_value": 1,
                    "load_data": 1,
                    "set_array_elements": 1,
                    "set_buffer_values": 1,
                    "set_data": 3,
                    "set_data_value": 4,
                    "set_data_values": 1,
                    "set_element_value": 1,
                    "set_initial_values": 2,
                    "set_object_properties": 1,
                    "set_param_value": 4,
                    "set_parameters": 1,
                    "set_values": 1
                },
                "FUN_080053a0": {
                    "initialize_data": 19,
                    "initialize_data_struct": 1,
                    "initialize_data_structure": 1,
                    "initialize_function": 2,
                    "initialize_parameters": 5,
                    "initialize_params": 3
                },
                "FUN_08005400": {
                    "allocate_memory": 13,
                    "calculate_result": 1,
                    "calculate_something": 1,
                    "calculate_value": 3,
                    "create_object": 1,
                    "fetch_data_value": 1,
                    "fetch_value": 1,
                    "get_data": 1,
                    "get_function_result": 1,
                    "get_new_data_value": 1,
                    "get_new_value": 2,
                    "get_variable_value": 1
                },
                "param_1": {
                    "data": 9,
                    "data_arr": 1,
                    "data_buffer": 2,
                    "data_pointer": 5,
                    "data_ptr": 2,
                    "data_struct_ptr": 1,
                    "data_structure": 1,
                    "function_params": 1,
                    "parameters": 3,
                    "params": 5,
                    "params_array": 1
                },
                "param_2": {
                    "param2": 1,
                    "size": 3,
                    "size1": 1,
                    "value": 3,
                    "value1": 1,
                    "value_1": 1
                },
                "param_3": {
                    "index": 3,
                    "index1": 2,
                    "param3": 1,
                    "size2": 1,
                    "value": 1,
                    "value2": 1,
                    "value_2": 1
                },
                "param_4": {
                    "index2": 2,
                    "offset": 1,
                    "param4": 1,
                    "size3": 1,
                    "type": 1,
                    "value3": 1,
                    "value_3": 1
                },
                "puVar2": {
                    "alternative_pointer": 1,
                    "auxiliary_pointer": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "pointer": 9,
                    "pointer_to_data": 1,
                    "pointer_var": 1,
                    "temp_pointer": 5,
                    "temp_ptr": 8,
                    "temp_var": 2,
                    "temp_var2": 1
                },
                "uVar1": {
                    "result": 21,
                    "return_value": 7,
                    "temp_value": 1,
                    "temp_var1": 2
                }
            },
            "called": [
                "FUN_0800532c",
                "FUN_08005400"
            ],
            "calling": [
                "FUN_08004fdc",
                "FUN_08004a84",
                "FUN_08004a34",
                "FUN_080052cc",
                "FUN_080050d0",
                "FUN_08005400"
            ],
            "code": "\nvoid initialize_data_struct_080053a0(undefined4 *data)\n\n{\n  undefined4 result;\n  undefined4 *pointer;\n  \n  if (data[6] == 0) {\n    data[0x12] = 0;\n    data[0x13] = 0;\n    data[0x14] = 0;\n    pointer = &DAT_200000a4;\n    data[10] = &LAB_08005320_1;\n    if (data == &DAT_200000a4) {\n      pointer = (undefined4 *)0x1;\n    }\n    if (data == &DAT_200000a4) {\n      data[6] = pointer;\n    }\n    result = FUN_08005400();\n    data[1] = result;\n    result = FUN_08005400(data);\n    data[2] = result;\n    result = FUN_08005400(data);\n    data[3] = result;\n    FUN_0800532c(data[1],4,0);\n    FUN_0800532c(data[2],9,1);\n    FUN_0800532c(data[3],0x12,2);\n    data[6] = 1;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_struct_080053a0",
            "entrypoint": "0x080053a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080053a0": "initialize_data_struct_080053a0",
                "param_1": "data",
                "puVar2": "pointer",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005400": {
            "additional_data": {
                "DAT_200000a4": {
                    "constant_data_array": 1,
                    "data": 4,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "data_to_init": 1,
                    "data_variable": 1,
                    "global_data": 2,
                    "global_data_ptr": 1,
                    "initial_data": 1,
                    "memory_location": 1,
                    "module_data": 1
                },
                "DAT_200000bc": {
                    "constant_value": 1,
                    "data_check": 1,
                    "data_initialized": 3,
                    "global_data_initialized": 1,
                    "global_flag": 2,
                    "initialized_flag": 2,
                    "is_data_initialized": 1,
                    "is_initialized": 4,
                    "is_memory_initialized": 1,
                    "module_initialized": 1
                },
                "DAT_200000ec": {
                    "data_array": 2,
                    "data_array_pointer": 1,
                    "data_block": 1,
                    "data_list": 1,
                    "data_ptr": 3,
                    "initialized_data": 1,
                    "initialized_module_list": 1,
                    "list_head_ptr": 1,
                    "nested_array_ptr_data": 1,
                    "object_data": 1,
                    "object_ptr": 1,
                    "p_array_of_pointers_ptr": 1
                },
                "FIND_DATA_LOCATION": {
                    "find_data_location": 1
                },
                "FUN_080048cc": {
                    "copy_data": 1,
                    "copy_data_chunk": 1,
                    "copy_memory": 1,
                    "fill_memory": 2,
                    "initialize_memory": 1,
                    "initialize_pi_var2_plus_0x17": 1,
                    "initialize_values": 3,
                    "process_data": 2,
                    "reset_values": 1,
                    "set_data": 1,
                    "set_defaults": 1,
                    "set_values": 1
                },
                "FUN_08005374": {
                    "allocate_memory": 15,
                    "allocate_object": 1
                },
                "FUN_080053a0": {
                    "initialize_constant": 1,
                    "initialize_dat": 1,
                    "initialize_dat_200000a4": 1,
                    "initialize_data": 11,
                    "initialize_data_list": 1,
                    "initialize_data_ptr": 1,
                    "initialize_data_structure": 1,
                    "initialize_default_object": 1,
                    "initialize_global_data": 1,
                    "initialize_memory": 2
                },
                "FUN_08005400": {
                    "find_and_initialize_objects": 1,
                    "find_initialized_array": 1,
                    "find_initialized_pointer": 1,
                    "find_null_pointer": 1,
                    "find_pi_var2": 1,
                    "initialize_data": 7,
                    "initialize_data_structure": 1,
                    "initialize_data_structures": 2,
                    "initialize_module": 1,
                    "initialize_object": 1,
                    "initialize_objects": 3,
                    "initialize_pi_var2": 1,
                    "initialize_struct": 1,
                    "initialize_structure": 1,
                    "process_data": 4,
                    "reverse_binary_extraction": 1
                },
                "FUX_08005374": {
                    "allocate_memory": 1
                },
                "param_1": {
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "error_code": 4,
                    "function_error": 1,
                    "input_array": 1,
                    "object_array": 1,
                    "output": 2,
                    "output_buffer": 1,
                    "output_flag": 1,
                    "output_pointer": 2,
                    "output_ptr": 1,
                    "output_value": 1,
                    "p_out_error": 1,
                    "param_1": 1,
                    "param_array": 1,
                    "params": 1,
                    "pointer": 1,
                    "result": 6,
                    "status": 2,
                    "status_flag": 1
                },
                "param_2": {
                    "arg1": 2,
                    "arg2": 3,
                    "input1": 4,
                    "input_param_2": 1,
                    "input_value1": 1,
                    "p2": 1,
                    "param2": 10,
                    "param_2": 4,
                    "param_a": 1,
                    "size1": 1,
                    "size_1": 1,
                    "value1": 1,
                    "value_1": 1
                },
                "param_3": {
                    "arg2": 2,
                    "arg3": 3,
                    "input2": 4,
                    "input_param_3": 1,
                    "input_value2": 1,
                    "p3": 1,
                    "param3": 10,
                    "param_3": 4,
                    "param_b": 1,
                    "size2": 1,
                    "size_2": 1,
                    "value2": 1,
                    "value_2": 1
                },
                "param_4": {
                    "arg3": 2,
                    "arg4": 3,
                    "input3": 4,
                    "input_param_4": 1,
                    "input_value3": 1,
                    "p4": 1,
                    "param4": 11,
                    "param_4": 5,
                    "param_c": 1,
                    "value3": 1,
                    "value_3": 1
                },
                "piVar1": {
                    "allocated_memory": 1,
                    "allocated_object": 1,
                    "array_ptr": 1,
                    "count": 2,
                    "current": 1,
                    "current_array": 1,
                    "current_data": 1,
                    "current_element1": 1,
                    "current_index": 1,
                    "current_item": 1,
                    "current_module": 1,
                    "current_pi_var1": 1,
                    "current_pointer1": 2,
                    "current_ptr": 1,
                    "current_ptr1": 2,
                    "current_value": 1,
                    "inner_loop_counter": 1,
                    "inner_loop_ptr": 1,
                    "iterator": 1,
                    "outer_loop_counter": 1,
                    "p_curr_element": 1,
                    "ptr1": 5,
                    "ptr_1": 1,
                    "temp_object_ptr": 1
                },
                "piVar2": {
                    "array": 1,
                    "current_data": 1,
                    "current_element": 1,
                    "current_element2": 1,
                    "current_entry": 1,
                    "current_function": 1,
                    "current_item": 1,
                    "current_object": 1,
                    "current_pi_var2": 1,
                    "current_pointer": 2,
                    "current_pointer2": 2,
                    "current_ptr": 1,
                    "current_ptr2": 2,
                    "inner_array_ptr": 1,
                    "inner_loop_counter": 1,
                    "inner_ptr": 1,
                    "nested_array": 1,
                    "outer_loop_ptr": 1,
                    "p_array_element": 1,
                    "ptr2": 4,
                    "ptr2_base": 1,
                    "ptr_2": 1,
                    "sub_array": 1,
                    "sub_item": 1,
                    "temp_object_array": 1
                },
                "ppiVar3": {
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "current_ppi_var3": 1,
                    "data_array": 1,
                    "data_list_pointer": 1,
                    "data_list_ptr": 1,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "data_structures_pointer": 1,
                    "list": 1,
                    "list_of_pointers": 1,
                    "list_pointer": 1,
                    "list_ptr": 1,
                    "module_list": 1,
                    "nested_array_ptr": 1,
                    "object_list": 3,
                    "pointer_array": 1,
                    "pointer_to_pointer": 1,
                    "pp_array_of_pointers": 1,
                    "ptr3": 1,
                    "ptr_array": 2,
                    "ptr_ptr": 3,
                    "ptr_to_ptr": 1,
                    "ptrs": 1
                },
                "short": {
                    "short": 1
                },
                "undefined2": {
                    "uint16": 1
                }
            },
            "called": [
                "FUN_080053a0",
                "FUN_080048cc",
                "FUN_08005374"
            ],
            "calling": [
                "FUN_080053a0"
            ],
            "code": "\nint * initialize_data_structures_08005400(undefined4 *result,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *ptr1;\n  int *ptr2;\n  int **ptr_ptr;\n  \n  if (DAT_200000bc == 0) {\n    FUN_080053a0(&DAT_200000a4);\n  }\n  ptr_ptr = (int **)&DAT_200000ec;\n  do {\n    ptr2 = ptr_ptr[2];\n    ptr1 = ptr_ptr[1];\n    while (ptr1 = (int *)((int)ptr1 + -1), -1 < (int)ptr1) {\n      if (*(short *)(ptr2 + 3) == 0) {\n        *(uint16 *)((int)ptr2 + 0xe) = 0xffff;\n        *(uint16 *)(ptr2 + 3) = 1;\n        ptr2[0x19] = 0;\n        *ptr2 = 0;\n        ptr2[2] = 0;\n        ptr2[1] = 0;\n        ptr2[4] = 0;\n        ptr2[5] = 0;\n        ptr2[6] = 0;\n        FUN_080048cc(ptr2 + 0x17,0,8,1,param4);\n        ptr2[0xd] = 0;\n        ptr2[0xe] = 0;\n        ptr2[0x12] = 0;\n        ptr2[0x13] = 0;\n        return ptr2;\n      }\n      ptr2 = ptr2 + 0x1a;\n    }\n    if (*ptr_ptr == (int *)0x0) {\n      ptr1 = (int *)FUN_08005374(result,4);\n      *ptr_ptr = ptr1;\n      if (ptr1 == (int *)0x0) {\n        *result = 0xc;\n        return (int *)0x0;\n      }\n    }\n    ptr_ptr = (int **)*ptr_ptr;\n  } while( true );\n}\n\n",
            "current_name": "initialize_data_structures_08005400",
            "entrypoint": "0x08005400",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005400": "initialize_data_structures_08005400",
                "param_1": "result",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "ptr1",
                "piVar2": "ptr2",
                "ppiVar3": "ptr_ptr",
                "undefined2": "uint16"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080054b4": {
            "additional_data": {
                "FUN_080054b4": {
                    "analyze_file_permissions": 1,
                    "calculate_permission": 2,
                    "calculate_permissions": 1,
                    "check_and_set_permissions": 2,
                    "check_file_permissions": 9,
                    "check_flag": 1,
                    "check_permission": 3,
                    "check_permissions": 8,
                    "extract_and_check_permissions": 1,
                    "get_permissions": 2,
                    "process_binary_data": 1
                },
                "FUN_080056d4": {
                    "get_permission_value": 1
                },
                "auStack_4c": {
                    "additional_data": 1,
                    "auxiliary_data": 1,
                    "auxiliary_stack": 1,
                    "buffer": 2,
                    "some_array": 1,
                    "stack": 1,
                    "stack_array": 2,
                    "stack_buffer": 1,
                    "stack_data": 3,
                    "stack_var": 3,
                    "stack_variable": 3,
                    "temp": 1,
                    "temp_array": 1,
                    "temp_buffer": 5,
                    "temp_data": 1,
                    "temp_stack": 3,
                    "temporary_data": 1
                },
                "iVar1": {
                    "check_result": 1,
                    "error": 1,
                    "error_code": 1,
                    "function_result": 1,
                    "function_status": 1,
                    "result": 14,
                    "return_value": 1,
                    "status": 9
                },
                "local_48": {
                    "file_attributes": 1,
                    "file_flags": 1,
                    "file_flags_temp": 1,
                    "file_header": 1,
                    "file_permissions": 6,
                    "flag": 1,
                    "flags": 3,
                    "flags_value": 1,
                    "local_data": 1,
                    "local_flags": 2,
                    "local_permissions": 1,
                    "local_value": 1,
                    "local_var": 3,
                    "local_variable": 2,
                    "metadata": 1,
                    "permission": 1,
                    "temp": 2,
                    "value": 2
                },
                "param_1": {
                    "arg1": 4,
                    "context": 1,
                    "data_ptr": 1,
                    "file_descriptor": 1,
                    "file_path": 1,
                    "file_pointer": 1,
                    "filename": 1,
                    "input": 2,
                    "input_structure": 1,
                    "param": 4,
                    "param1": 6,
                    "param_1": 7,
                    "param_address": 1
                },
                "param_2": {
                    "arg2": 4,
                    "buffer": 2,
                    "data": 5,
                    "file_data": 1,
                    "file_descriptor": 1,
                    "file_header": 2,
                    "file_info": 3,
                    "header": 2,
                    "header_pointer": 1,
                    "input_offset": 1,
                    "metadata_ptr": 1,
                    "param2": 5,
                    "permission_data": 1,
                    "permissions": 1,
                    "permissions_input": 1
                },
                "param_3": {
                    "file_permissions": 1,
                    "out_param": 1,
                    "out_permission": 1,
                    "out_value": 1,
                    "output": 2,
                    "output_param": 3,
                    "output_permission": 1,
                    "output_value": 1,
                    "param3": 3,
                    "permission": 6,
                    "permission_flag": 2,
                    "permission_ptr": 1,
                    "permissions": 1,
                    "result": 6,
                    "result_ptr": 1
                },
                "param_4": {
                    "file_flags": 1,
                    "file_status": 1,
                    "flag": 2,
                    "flag_ptr": 1,
                    "flags": 4,
                    "has_executable_flag": 1,
                    "is_executable": 2,
                    "is_executable_ptr": 1,
                    "is_file_executable": 1,
                    "is_shared_object": 1,
                    "is_valid": 1,
                    "out_flag": 3,
                    "output_flag": 1,
                    "param4": 3,
                    "result": 6,
                    "status": 2
                },
                "uVar2": {
                    "access_mode": 1,
                    "flag": 1,
                    "flag_value": 1,
                    "permission": 8,
                    "permission_code": 2,
                    "permission_flag": 4,
                    "permission_flags": 2,
                    "permission_value": 6,
                    "permissions": 1,
                    "result": 1
                }
            },
            "called": [
                "FUN_080056d4"
            ],
            "calling": [
                "FUN_080054fc"
            ],
            "code": "\nundefined4 check_file_permissions_080054b4(undefined4 param_1,int param2,undefined4 *permission,uint *result)\n\n{\n  int result;\n  undefined4 permission;\n  undefined temp_buffer [4];\n  uint file_permissions;\n  \n  if ((*(short *)(param2 + 0xe) < 0) ||\n     (result = FUN_080056d4(param_1,(int)*(short *)(param2 + 0xe),temp_buffer), result < 0)) {\n    *result = 0;\n    if ((int)((uint)*(ushort *)(param2 + 0xc) << 0x18) < 0) {\n      permission = 0x40;\n      goto LAB_080054f4;\n    }\n  }\n  else {\n    *result = (uint)((file_permissions & 0xf000) == 0x2000);\n  }\n  permission = 0x400;\nLAB_080054f4:\n  *permission = permission;\n  return 0;\n}\n\n",
            "current_name": "check_file_permissions_080054b4",
            "entrypoint": "0x080054b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080054b4": "check_file_permissions_080054b4",
                "auStack_4c": "temp_buffer",
                "iVar1": "result",
                "local_48": "file_permissions",
                "param_2": "param2",
                "param_3": "permission",
                "param_4": "result",
                "uVar2": "permission"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080054fc": {
            "additional_data": {
                "FUN_080054fc": {
                    "analyze_data": 1,
                    "check_and_update_value": 1,
                    "parse_data": 1,
                    "process_binary_data": 1,
                    "process_data": 16,
                    "process_function": 2,
                    "process_param": 1,
                    "process_parameter": 1,
                    "update_data": 1,
                    "update_param": 1,
                    "update_parameter": 1,
                    "update_parameters": 1,
                    "update_params": 1
                },
                "iVar2": {
                    "check_result": 3,
                    "check_value": 3,
                    "error_code": 2,
                    "flag": 1,
                    "func_result": 1,
                    "function_result": 1,
                    "result": 1,
                    "result2": 2,
                    "result_var2": 1,
                    "return_value": 4,
                    "return_value2": 1,
                    "status": 7,
                    "success": 1,
                    "temp": 2,
                    "temp_value": 1
                },
                "local_14": {
                    "data2": 1,
                    "local2": 1,
                    "local_arr": 1,
                    "local_array_data": 1,
                    "local_data": 3,
                    "local_data2": 4,
                    "local_output_array": 1,
                    "local_ptr": 1,
                    "local_value2": 3,
                    "local_var2": 6,
                    "local_variable2": 1,
                    "local_variable_2": 1,
                    "parsed_data": 1,
                    "temp_data": 1,
                    "temp_value2": 2,
                    "temp_var2": 1,
                    "temporary_array": 1,
                    "value2": 1
                },
                "local_18": {
                    "local1": 1,
                    "local_data": 1,
                    "local_data1": 4,
                    "local_data_size": 2,
                    "local_input_value": 1,
                    "local_param1": 1,
                    "local_value1": 4,
                    "local_var1": 7,
                    "local_variable1": 1,
                    "local_variable_1": 1,
                    "parsed_value": 1,
                    "temp_value": 1,
                    "temp_value1": 2,
                    "temp_var1": 1,
                    "temporary_value": 1,
                    "value1": 1,
                    "value2": 1
                },
                "param_1": {
                    "data": 1,
                    "data_address": 1,
                    "data_length": 2,
                    "data_pointer": 1,
                    "data_size": 3,
                    "input": 1,
                    "input_data": 3,
                    "input_param": 5,
                    "input_parameter": 1,
                    "input_value": 8,
                    "param": 2,
                    "param1": 1,
                    "param_ptr": 1,
                    "value": 1
                },
                "param_2": {
                    "data": 7,
                    "data_array": 1,
                    "data_buffer": 2,
                    "data_info": 1,
                    "data_param": 2,
                    "data_ptr": 1,
                    "data_struct": 1,
                    "output": 1,
                    "output_array": 4,
                    "output_data": 3,
                    "output_param": 2,
                    "output_parameter": 1,
                    "output_value": 1,
                    "param2": 1,
                    "param_arr": 2,
                    "param_array": 1
                },
                "uVar1": {
                    "result": 26,
                    "result1": 1,
                    "result_var1": 1,
                    "return_flag": 1,
                    "return_value": 1,
                    "return_value1": 1
                }
            },
            "called": [
                "FUN_08004978",
                "FUN_080056f8",
                "FUN_080054b4"
            ],
            "calling": [
                "FUN_080050d0"
            ],
            "code": "\nvoid process_binary_data_080054fc(int input_value,int *data)\n\n{\n  ushort result;\n  int status;\n  int local_var1;\n  int *local_var2;\n  \n  if (-1 < (int)((uint)*(ushort *)(data + 3) << 0x1e)) {\n    local_var1 = input_value;\n    local_var2 = data;\n    result = FUN_080054b4(input_value,data,&local_var1,&local_var2);\n    status = FUN_08004978(input_value,local_var1);\n    if (status != 0) {\n      *(undefined **)(input_value + 0x28) = &LAB_08005320_1;\n      *data = status;\n      *(ushort *)(data + 3) = *(ushort *)(data + 3) | 0x80;\n      data[5] = local_var1;\n      data[4] = status;\n      if ((local_var2 != (int *)0x0) &&\n         (status = FUN_080056f8(input_value,(int)*(short *)((int)data + 0xe)), status != 0)) {\n        *(ushort *)(data + 3) = *(ushort *)(data + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(data + 3) = result | *(ushort *)(data + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(data + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(data + 3) = *(ushort *)(data + 3) & 0xfffc | 2;\n  }\n  *data = (int)data + 0x47;\n  data[4] = (int)data + 0x47;\n  data[5] = 1;\n  return;\n}\n\n",
            "current_name": "process_binary_data_080054fc",
            "entrypoint": "0x080054fc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080054fc": "process_binary_data_080054fc",
                "iVar2": "status",
                "local_14": "local_var2",
                "local_18": "local_var1",
                "param_1": "input_value",
                "param_2": "data",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800557c": {
            "called": [],
            "calling": [
                "FUN_080048dc",
                "FUN_08004978"
            ],
            "code": "\nvoid FUNC_0800557c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800557c",
            "entrypoint": "0x0800557c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800557c": "FUNC_0800557c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800557e": {
            "called": [],
            "calling": [
                "FUN_080048dc",
                "FUN_08004978"
            ],
            "code": "\nvoid FUNC_0800557e(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800557e",
            "entrypoint": "0x0800557e",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800557e": "FUNC_0800557e"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080055d0": {
            "additional_data": {
                "DAT_200000a0": {
                    "data_array": 2,
                    "data_ptr": 1
                },
                "DAT_20000674": {
                    "error_code": 2,
                    "global_error_code": 1
                },
                "D_200000a0": {
                    "data_array": 1
                },
                "D_20000674": {
                    "error_code": 1
                },
                "FUN_080040fc": {
                    "helper_function2": 1,
                    "perform_operation": 1
                },
                "FUN_080055d0": {
                    "execute_command": 1,
                    "execute_function": 15,
                    "execute_operation": 1,
                    "handle_function": 1,
                    "handle_param": 2,
                    "process_function": 1,
                    "process_param": 1,
                    "process_parameter": 2
                },
                "iVar3": {
                    "address": 1,
                    "code_ptr": 1,
                    "command_entry": 1,
                    "current_function": 1,
                    "data": 1,
                    "element": 1,
                    "func_ptr": 3,
                    "function_pointer": 1,
                    "function_ptr": 10,
                    "index": 5,
                    "index_var": 1,
                    "temp_var": 1,
                    "temp_variable": 2,
                    "value": 2
                },
                "in_lr": {
                    "link_register": 5,
                    "register_value": 1,
                    "return_address": 2,
                    "unused": 2,
                    "unused3": 1,
                    "unused_variable": 1
                },
                "param_1": {
                    "command_index": 1,
                    "function_index": 1,
                    "index": 9,
                    "input": 8,
                    "input_param": 3,
                    "input_value": 3,
                    "operation_code": 1,
                    "param": 2,
                    "parameter": 3
                },
                "pcVar4": {
                    "callback": 1,
                    "code_pointer": 2,
                    "code_ptr": 3,
                    "current_code_pointer": 1,
                    "current_function": 1,
                    "func_code": 1,
                    "function": 8,
                    "function_code": 1,
                    "function_pointer": 4,
                    "function_ptr": 8,
                    "thunk_ptr": 1
                },
                "piVar1": {
                    "array_pointer": 1,
                    "command_table": 1,
                    "data_array": 1,
                    "data_pointer": 3,
                    "data_ptr": 7,
                    "error_flag": 1,
                    "function_array": 2,
                    "function_list": 1,
                    "function_table": 1,
                    "original_data": 1,
                    "output": 1,
                    "ptr_data": 1,
                    "ptr_var1": 1,
                    "result": 5,
                    "result_pointer": 1,
                    "result_ptr": 3
                },
                "puVar5": {
                    "command_table_pointer": 1,
                    "dat_ptr": 1,
                    "data_array": 1,
                    "data_array_ptr": 1,
                    "data_pointer": 2,
                    "data_pointer_pointer": 1,
                    "data_pointer_ptr": 1,
                    "data_ptr": 2,
                    "data_ptr_ptr": 6,
                    "data_ptr_ref": 1,
                    "function_array_pointer": 1,
                    "function_list_ptr": 1,
                    "function_pointer_array": 1,
                    "function_table": 1,
                    "function_table_ptr": 1,
                    "output_ptr": 1,
                    "pointer": 2,
                    "pointer_to_array": 1,
                    "ptr_data": 1,
                    "ptr_var5": 1,
                    "result_ptr": 1,
                    "result_ptr_ptr": 1,
                    "result_ptr_ref": 1
                },
                "thunk_FUN_0800410c": {
                    "get_thunk_result": 1,
                    "helper_function1": 1
                },
                "uVar2": {
                    "function_result": 1,
                    "result": 15,
                    "result_code": 1,
                    "result_var": 1,
                    "return_value": 2,
                    "thunk_result": 10
                },
                "unaff_r4": {
                    "arg_1": 1,
                    "extra_argument_1": 1,
                    "register_r4": 1,
                    "unused": 1,
                    "unused1": 1,
                    "unused_register4": 1,
                    "unused_variable": 1
                },
                "unaff_r5": {
                    "arg_2": 1,
                    "extra_argument_2": 1,
                    "register_r5": 1,
                    "unused": 1,
                    "unused2": 1,
                    "unused_register5": 1,
                    "unused_variable": 1
                }
            },
            "called": [
                "FUN_080040fc",
                "thunk_FUN_0800410c"
            ],
            "calling": [
                "FUN_080051ac"
            ],
            "code": "\nint execute_function_080055d0(uint index)\n\n{\n  int *data_ptr;\n  undefined4 result;\n  int function_ptr;\n  code *function_ptr;\n  undefined4 extra_argument_1;\n  undefined4 unused2;\n  undefined4 link_register;\n  undefined4 *data_ptr_ptr;\n  \n  data_ptr = DAT_200000a0;\n  data_ptr_ptr = &DAT_200000a0;\n  if (0x1f < index) {\n    *DAT_200000a0 = 0x16;\n    return -1;\n  }\n  function_ptr = DAT_200000a0[0x11];\n  if ((function_ptr != 0) && (function_ptr = *(code **)(function_ptr + index * 4), function_ptr != (code *)0x0)) {\n    if (function_ptr != (code *)0x1) {\n      if (function_ptr == (code *)0xffffffff) {\n        *DAT_200000a0 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(function_ptr + index * 4) = 0;\n      (*function_ptr)(index);\n    }\n    return 0;\n  }\n  result = thunk_FUN_0800410c(DAT_200000a0);\n  DAT_20000674 = 0;\n  function_ptr = FUN_080040fc(result,index,index,0,data_ptr_ptr,extra_argument_1,unused2,link_register);\n  if ((function_ptr == -1) && (DAT_20000674 != 0)) {\n    *data_ptr = DAT_20000674;\n  }\n  return function_ptr;\n}\n\n",
            "current_name": "execute_function_080055d0",
            "entrypoint": "0x080055d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080055d0": "execute_function_080055d0",
                "iVar3": "function_ptr",
                "in_lr": "link_register",
                "param_1": "index",
                "pcVar4": "function_ptr",
                "piVar1": "data_ptr",
                "puVar5": "data_ptr_ptr",
                "uVar2": "result",
                "unaff_r4": "extra_argument_1",
                "unaff_r5": "unused2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005608": {
            "additional_data": {
                "FUN_08005608": {
                    "calculate_value": 1,
                    "modify_data": 1,
                    "modify_value": 1,
                    "process_data": 1,
                    "update_data_based_on_condition": 1,
                    "update_value": 21,
                    "update_values": 3,
                    "update_variable": 1,
                    "update_variable_value": 1
                },
                "bVar3": {
                    "is_greater_than_zero": 1,
                    "is_positive": 28,
                    "is_successful": 1,
                    "is_valid": 1
                },
                "iVar1": {
                    "index": 1,
                    "result": 29,
                    "return_value": 1
                },
                "param_1": {
                    "arg1": 1,
                    "arg_1": 1,
                    "array": 1,
                    "array_ptr": 1,
                    "buffer": 1,
                    "data": 5,
                    "data_1": 1,
                    "data_pointer": 2,
                    "input": 1,
                    "input_array": 6,
                    "input_buffer": 1,
                    "input_data": 1,
                    "input_param": 1,
                    "param": 1,
                    "param1": 2,
                    "param_1": 1,
                    "param_a": 1,
                    "pointer_to_var1": 1,
                    "state_array": 1,
                    "value": 1
                },
                "param_2": {
                    "address": 4,
                    "arg2": 1,
                    "arg_2": 1,
                    "base_address": 3,
                    "data": 3,
                    "data_2": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input_index": 2,
                    "offset": 7,
                    "param2": 2,
                    "param_2": 1,
                    "param_b": 1,
                    "param_offset": 1,
                    "struct_addr": 1,
                    "struct_pointer": 1
                },
                "uVar2": {
                    "modified_value": 1,
                    "new_val": 1,
                    "new_value": 15,
                    "updated_value": 13,
                    "value": 1
                }
            },
            "called": [
                "FUN_0800573c"
            ],
            "calling": [],
            "code": "\nvoid update_variable_value_08005608(undefined4 input_array,int offset)\n\n{\n  int result;\n  uint new_value;\n  bool is_positive;\n  \n  result = FUN_0800573c(input_array,(int)*(short *)(offset + 0xe));\n  is_positive = -1 < result;\n  if (is_positive) {\n    new_value = *(int *)(offset + 0x54) + result;\n  }\n  else {\n    new_value = *(ushort *)(offset + 0xc) & 0xffffefff;\n  }\n  if (is_positive) {\n    *(uint *)(offset + 0x54) = new_value;\n  }\n  if (!is_positive) {\n    *(short *)(offset + 0xc) = (short)new_value;\n  }\n  return;\n}\n\n",
            "current_name": "update_variable_value_08005608",
            "entrypoint": "0x08005608",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005608": "update_variable_value_08005608",
                "bVar3": "is_positive",
                "iVar1": "result",
                "param_1": "input_array",
                "param_2": "offset",
                "uVar2": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800562a": {
            "additional_data": {
                "DAT_20000674": {
                    "data_flag": 1,
                    "data_variable": 1,
                    "error_code": 1
                },
                "FUN_080040ec": {
                    "calculate_result": 1,
                    "sub_function1": 1
                },
                "FUN_0800562a": {
                    "check_and_process_data": 1,
                    "check_and_update_values": 1,
                    "extract_and_process_data": 1,
                    "extract_and_update_data": 1,
                    "extract_data": 2,
                    "extract_data_from_binary": 1,
                    "process_data": 15,
                    "process_input": 1,
                    "reverse_and_update": 1,
                    "reverse_and_update_data": 1,
                    "reverse_code": 1,
                    "validate_and_update_data": 1
                },
                "FUN_08005718": {
                    "handle_error": 1,
                    "process_data": 1,
                    "process_input": 1,
                    "sub_function2": 1
                },
                "iVar1": {
                    "result": 15,
                    "result2": 1,
                    "return_value": 9,
                    "status": 1
                },
                "in_lr": {
                    "arg5": 1,
                    "in_link_register": 2,
                    "link_register": 1,
                    "return_address": 1,
                    "temp_var3": 2,
                    "unused3": 3,
                    "unused_param": 1,
                    "unused_param3": 1,
                    "unused_var3": 1,
                    "var3": 1
                },
                "param_1": {
                    "array": 1,
                    "data": 3,
                    "data_buffer": 1,
                    "output": 3,
                    "output_array": 9,
                    "output_buffer": 2,
                    "output_data": 2,
                    "result": 8,
                    "result_array": 2
                },
                "param_2": {
                    "array_length": 1,
                    "binary_data": 1,
                    "data": 5,
                    "data_address": 1,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "input": 2,
                    "input_address": 3,
                    "input_array": 7,
                    "input_buffer": 2,
                    "input_data": 3,
                    "ptr": 2
                },
                "param_3": {
                    "arg1": 1,
                    "param1": 8,
                    "param3": 9,
                    "param_1": 2,
                    "param_3": 4,
                    "param_a": 7
                },
                "param_4": {
                    "arg2": 1,
                    "param2": 8,
                    "param4": 9,
                    "param_2": 2,
                    "param_4": 4,
                    "param_b": 7
                },
                "unaff_r4": {
                    "arg3": 1,
                    "temp_var1": 3,
                    "unaffected_register_4": 1,
                    "unrelated_param1": 1,
                    "unused1": 3,
                    "unused_param": 2,
                    "unused_param1": 3,
                    "unused_param_1": 1,
                    "unused_var1": 3,
                    "var1": 1
                },
                "unaff_r5": {
                    "arg4": 1,
                    "temp_var2": 3,
                    "unaffected_register_5": 1,
                    "unrelated_param2": 1,
                    "unused2": 3,
                    "unused_param": 1,
                    "unused_param2": 4,
                    "unused_param_2": 1,
                    "unused_var2": 3,
                    "var2": 1
                }
            },
            "called": [
                "FUN_080040ec",
                "FUN_08005718"
            ],
            "calling": [],
            "code": "\nvoid extract_and_process_data_0800562a(int *output_array,int input_array,undefined4 param3,undefined4 param4)\n\n{\n  int result;\n  undefined4 temp_var1;\n  undefined4 unused_param2;\n  undefined4 unused3;\n  \n  if ((int)((uint)*(ushort *)(input_array + 0xc) << 0x17) < 0) {\n    FUN_08005718(output_array,(int)*(short *)(input_array + 0xe),0,2);\n  }\n  *(ushort *)(input_array + 0xc) = *(ushort *)(input_array + 0xc) & 0xefff;\n  DAT_20000674 = 0;\n  result = FUN_080040ec((int)*(short *)(input_array + 0xe),param3,param4,param4,param4,temp_var1,\n                       unused_param2,unused3);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *output_array = DAT_20000674;\n  }\n  return;\n}\n\n",
            "current_name": "extract_and_process_data_0800562a",
            "entrypoint": "0x0800562a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800562a": "extract_and_process_data_0800562a",
                "iVar1": "result",
                "in_lr": "unused3",
                "param_1": "output_array",
                "param_2": "input_array",
                "param_3": "param3",
                "param_4": "param4",
                "unaff_r4": "temp_var1",
                "unaff_r5": "unused_param2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005662": {
            "additional_data": {
                "FUN_08005662": {
                    "process_data": 1,
                    "update_control_flag": 1,
                    "update_data": 1,
                    "update_flag": 10,
                    "update_flags_and_values": 2,
                    "update_flags_based_on_result": 1,
                    "update_param_flags": 1,
                    "update_status": 10,
                    "update_value": 3
                },
                "bVar3": {
                    "is_error": 15,
                    "is_failure": 1,
                    "is_invalid": 2,
                    "is_negative": 4,
                    "is_negative_one": 2,
                    "is_result_minus_one": 2,
                    "is_result_negative": 4,
                    "is_unavailable": 1
                },
                "iVar1": {
                    "result": 31
                },
                "param_1": {
                    "data": 2,
                    "data_buffer": 2,
                    "data_pointer": 1,
                    "device_status": 1,
                    "flag_address": 1,
                    "input": 3,
                    "input_array": 1,
                    "input_data": 1,
                    "input_flag": 1,
                    "input_value": 1,
                    "param": 3,
                    "param1": 5,
                    "param_1": 1,
                    "param_address": 1,
                    "param_one": 1,
                    "status": 4,
                    "status_data": 1,
                    "value": 1
                },
                "param_2": {
                    "address": 4,
                    "data": 6,
                    "data_address": 2,
                    "data_ptr": 2,
                    "data_struct_address": 1,
                    "offset": 3,
                    "param": 1,
                    "param2": 6,
                    "param_2": 1,
                    "param_offset": 1,
                    "param_two": 1,
                    "pointer": 1,
                    "struct_address": 1,
                    "struct_pointer": 1
                },
                "uVar2": {
                    "flag": 5,
                    "flag_value": 2,
                    "flags": 1,
                    "mask": 1,
                    "modified_flags": 1,
                    "modified_value": 2,
                    "new_status": 3,
                    "new_value": 2,
                    "status": 2,
                    "status_flag": 1,
                    "updated_value": 11
                }
            },
            "called": [
                "FUN_08005718"
            ],
            "calling": [],
            "code": "\nvoid update_control_flag_08005662(undefined4 param1,int param2)\n\n{\n  int result;\n  ushort updated_value;\n  bool is_error;\n  \n  result = FUN_08005718(param1,(int)*(short *)(param2 + 0xe));\n  is_error = result == -1;\n  if (is_error) {\n    updated_value = *(ushort *)(param2 + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(param2 + 0x54) = result;\n    updated_value = *(ushort *)(param2 + 0xc) | 0x1000;\n  }\n  if (is_error) {\n    *(ushort *)(param2 + 0xc) = updated_value;\n  }\n  if (!is_error) {\n    *(ushort *)(param2 + 0xc) = updated_value;\n  }\n  return;\n}\n\n",
            "current_name": "update_control_flag_08005662",
            "entrypoint": "0x08005662",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005662": "update_control_flag_08005662",
                "bVar3": "is_error",
                "iVar1": "result",
                "param_1": "param1",
                "param_2": "param2",
                "uVar2": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080056d4": {
            "additional_data": {
                "DAT_20000674": {
                    "error_code": 1,
                    "error_value": 1,
                    "failed_number": 1,
                    "saved_result": 1,
                    "stored_result": 1
                },
                "FUN_080040d6": {
                    "calculate_result": 1
                },
                "FUN_080056d4": {
                    "check_and_assign_value": 1,
                    "check_result_and_update": 1,
                    "copy_if_error_found": 1,
                    "execute_and_store_result": 1,
                    "extract_and_assign_value": 1,
                    "extract_and_check_error_code": 1,
                    "extract_and_store_result": 1,
                    "extract_error_code": 3,
                    "extract_error_value": 2,
                    "extract_failed_numbers": 1,
                    "extract_value_if_needed": 1,
                    "process_data": 4,
                    "process_function": 1,
                    "process_parameters": 1,
                    "reverse_and_store_value": 1,
                    "reverse_and_update": 1,
                    "reverse_and_update_value": 1,
                    "update_param": 2,
                    "update_param1_if_error": 1,
                    "update_param_if_error": 3,
                    "update_param_value": 1,
                    "update_value_if_negative": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "function_result": 2,
                    "result": 11,
                    "result_code": 2,
                    "return_value": 10,
                    "var1": 1
                },
                "param_1": {
                    "error_code": 1,
                    "error_p": 1,
                    "out_ptr": 1,
                    "output": 5,
                    "output_array": 1,
                    "output_error_code": 1,
                    "output_ptr": 2,
                    "output_value": 3,
                    "result": 10,
                    "result_pointer": 2,
                    "result_ptr": 4
                },
                "param_2": {
                    "arg1": 1,
                    "input1": 11,
                    "input_1": 6,
                    "input_param": 1,
                    "input_param1": 5,
                    "input_param_1": 2,
                    "input_value1": 4,
                    "value1": 1
                },
                "param_3": {
                    "arg2": 1,
                    "input2": 11,
                    "input_2": 6,
                    "input_param2": 5,
                    "input_param_2": 2,
                    "input_value2": 4,
                    "param_a": 1,
                    "value2": 1
                },
                "param_4": {
                    "arg3": 1,
                    "flag": 1,
                    "input3": 10,
                    "input_3": 6,
                    "input_param3": 5,
                    "input_param_3": 2,
                    "input_value3": 4,
                    "param_b": 1,
                    "value3": 1
                }
            },
            "called": [
                "FUN_080040d6"
            ],
            "calling": [
                "FUN_080054b4"
            ],
            "code": "\nvoid update_param_if_error_080056d4(int *result,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int result;\n  \n  DAT_20000674 = 0;\n  result = FUN_080040d6(input1,input2,input2,0,input3);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return;\n}\n\n",
            "current_name": "update_param_if_error_080056d4",
            "entrypoint": "0x080056d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080056d4": "update_param_if_error_080056d4",
                "iVar1": "result",
                "param_1": "result",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080056f8": {
            "additional_data": {
                "DAT_20000674": {
                    "stored_value": 1
                },
                "FUN_080056f8": {
                    "check_and_assign_result": 1,
                    "check_and_assign_value": 2,
                    "check_and_set_result": 1,
                    "check_and_update_param": 2,
                    "check_and_update_value": 4,
                    "check_error_and_assign_result": 1,
                    "extract_and_assign_value": 1,
                    "find_and_assign_value": 1,
                    "find_and_set_error": 1,
                    "find_negative_value_and_update_param": 1,
                    "handle_param": 1,
                    "initialize_data": 2,
                    "parse_and_copy_data": 1,
                    "process_data": 5,
                    "process_error": 1,
                    "process_function": 1,
                    "process_int": 1,
                    "set_return_value_if_needed": 1,
                    "update_output_value": 1,
                    "update_value_if_error": 1,
                    "update_value_if_negative": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "function_result": 1,
                    "result": 16,
                    "return_value": 7,
                    "status": 2,
                    "sub_func_result": 1
                },
                "param_1": {
                    "error_pointer": 1,
                    "output": 6,
                    "output_data": 1,
                    "output_param": 2,
                    "output_pointer": 3,
                    "output_value": 1,
                    "output_value_pointer": 2,
                    "result": 9,
                    "result_pointer": 2,
                    "result_ptr": 1,
                    "return_value": 1,
                    "value": 1,
                    "value_to_update": 1
                },
                "param_2": {
                    "input": 11,
                    "input_data": 2,
                    "input_param": 2,
                    "input_parameter": 2,
                    "input_value": 13,
                    "param": 1
                }
            },
            "called": [
                "FUN_080040e0"
            ],
            "calling": [
                "FUN_080054fc"
            ],
            "code": "\nvoid process_data_080056f8(int *result,undefined4 input_value)\n\n{\n  int result;\n  \n  DAT_20000674 = 0;\n  result = FUN_080040e0(input_value);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return;\n}\n\n",
            "current_name": "process_data_080056f8",
            "entrypoint": "0x080056f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080056f8": "process_data_080056f8",
                "iVar1": "result",
                "param_1": "result",
                "param_2": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005718": {
            "additional_data": {
                "DAT_20000674": {
                    "error_result": 1,
                    "error_value": 2
                },
                "FUN_08005718": {
                    "check_and_assign_error": 1,
                    "check_and_update_result": 1,
                    "check_and_update_value": 2,
                    "copy_value_if_error": 1,
                    "extract_and_assign_error": 1,
                    "extract_and_assign_error_code": 1,
                    "extract_and_assign_value": 2,
                    "extract_and_set_error_code": 1,
                    "extract_and_store_data": 1,
                    "extract_error_code": 1,
                    "extract_result": 1,
                    "process_and_store_integer": 1,
                    "process_data": 6,
                    "process_error": 2,
                    "process_function": 3,
                    "process_result": 1,
                    "process_return_value": 1,
                    "update_data": 1,
                    "update_param_if_error": 2
                },
                "iVar1": {
                    "result": 19,
                    "ret_val": 1,
                    "return_val": 1,
                    "return_value": 7
                },
                "param_1": {
                    "data": 1,
                    "error_code": 1,
                    "error_code_ptr": 1,
                    "output": 11,
                    "output_pointer": 1,
                    "output_ptr": 3,
                    "output_value": 4,
                    "result": 6,
                    "result_pointer": 2,
                    "result_ptr": 1
                },
                "param_2": {
                    "arg1": 5,
                    "input1": 15,
                    "input_1": 3,
                    "input_one": 1,
                    "input_param1": 1,
                    "input_val_1": 1,
                    "input_value1": 3,
                    "param_2": 2
                },
                "param_3": {
                    "arg2": 5,
                    "input2": 15,
                    "input_2": 3,
                    "input_param2": 1,
                    "input_two": 1,
                    "input_val_2": 1,
                    "input_value2": 3,
                    "param_3": 2
                },
                "param_4": {
                    "arg3": 5,
                    "input3": 15,
                    "input_3": 3,
                    "input_param3": 1,
                    "input_three": 1,
                    "input_val_3": 1,
                    "input_value3": 3,
                    "param_4": 2
                }
            },
            "called": [
                "FUN_080040e4"
            ],
            "calling": [
                "FUN_08005662",
                "FUN_0800562a"
            ],
            "code": "\nvoid process_data_08005718(int *output,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int result;\n  \n  DAT_20000674 = 0;\n  result = FUN_080040e4(input1,input2,input3,input3,input3);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *output = DAT_20000674;\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08005718",
            "entrypoint": "0x08005718",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005718": "process_data_08005718",
                "iVar1": "result",
                "param_1": "output",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800573c": {
            "additional_data": {
                "DAT_20000674": {
                    "error_code": 1,
                    "error_value": 1,
                    "some_value": 1
                },
                "FUN_0800573c": {
                    "check_and_assign_value": 1,
                    "check_and_update_result": 1,
                    "extract_and_assign_error": 1,
                    "extract_data": 1,
                    "extract_error_code": 6,
                    "extract_error_value": 1,
                    "process_and_store_result": 1,
                    "process_data": 2,
                    "process_result": 3,
                    "reverse_and_update_value": 1,
                    "set_return_value_if_error": 1,
                    "set_return_value_if_needed": 1,
                    "update_data_if_error_and_set_param": 1,
                    "update_error_code": 1,
                    "update_param1_if_negative": 1,
                    "update_param_and_check_error": 1,
                    "update_param_if_error": 1,
                    "update_param_with_return_value": 1,
                    "update_parameter": 1,
                    "update_parameter_if_error_occurred": 1,
                    "update_parameter_if_negative_and_error_flag_set": 1,
                    "update_parameter_value": 1,
                    "update_value_if_needed": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "function_result": 1,
                    "result": 19,
                    "return_value": 8
                },
                "param_1": {
                    "error": 1,
                    "error_code": 4,
                    "error_code_ptr": 1,
                    "error_value": 1,
                    "output": 6,
                    "output_error_code": 1,
                    "output_value": 7,
                    "output_variable": 1,
                    "result": 5,
                    "result_ptr": 1,
                    "return_value": 2,
                    "value_to_update": 1
                },
                "param_2": {
                    "arg1": 9,
                    "arg_1": 1,
                    "input1": 5,
                    "input_1": 4,
                    "input_param1": 1,
                    "input_param_2": 1,
                    "input_value1": 4,
                    "input_var1": 1,
                    "param1": 2,
                    "param_a": 1,
                    "value1": 1
                },
                "param_3": {
                    "arg2": 9,
                    "arg_2": 1,
                    "input2": 5,
                    "input_2": 4,
                    "input_param2": 1,
                    "input_param_3": 1,
                    "input_value2": 4,
                    "input_var2": 1,
                    "param2": 2,
                    "param_b": 1,
                    "value2": 1
                },
                "param_4": {
                    "arg3": 9,
                    "arg_3": 1,
                    "input3": 5,
                    "input_3": 4,
                    "input_param3": 1,
                    "input_param_4": 1,
                    "input_value3": 4,
                    "input_var3": 1,
                    "param3": 2,
                    "param_c": 1,
                    "value3": 1
                }
            },
            "called": [
                "FUN_080040e8"
            ],
            "calling": [
                "FUN_08005608"
            ],
            "code": "\nvoid extract_error_code_0800573c(int *output_value,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  int result;\n  \n  DAT_20000674 = 0;\n  result = FUN_080040e8(arg1,arg2,arg3,arg3,arg3);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *output_value = DAT_20000674;\n  }\n  return;\n}\n\n",
            "current_name": "extract_error_code_0800573c",
            "entrypoint": "0x0800573c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800573c": "extract_error_code_0800573c",
                "iVar1": "result",
                "param_1": "output_value",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005760": {
            "additional_data": {
                "FUN_080051ac": {
                    "do_some_processing": 1,
                    "do_something": 2,
                    "execute_sub_function": 1,
                    "initialize": 1,
                    "initialize_data": 4,
                    "initialize_flags": 2,
                    "initialize_variables": 3,
                    "perform_additional_setup": 1,
                    "perform_initial_setup": 1,
                    "perform_initialization": 6,
                    "perform_operation": 1,
                    "reset_flag": 1,
                    "reset_function": 1,
                    "reset_variables": 1,
                    "sub_function": 4,
                    "subfunction": 1
                },
                "FUN_08005760": {
                    "initialize": 1,
                    "initialize_data": 3,
                    "initialize_flags": 9,
                    "initialize_variables": 6,
                    "perform_operation": 2,
                    "update_data": 2,
                    "update_data_variables": 1,
                    "update_flags": 2,
                    "update_flags_and_call": 1,
                    "update_flags_and_call_function": 1,
                    "update_flags_and_call_sub_function": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "jump_table": 5,
                    "jump_table_ptr": 1,
                    "jumptable": 4
                }
            },
            "called": [
                "FUN_080051ac"
            ],
            "calling": [
                "FUN_080047c0"
            ],
            "code": "\nvoid initialize_flags_08005760(void)\n\n{\n  code *jump_table;\n  \n  jump_table = initialize_flags_08005760;\n  FUN_080051ac();\n  if (-1 < DAT_200005fc << 0x1f) {\n    DAT_200005fc = 1;\n  }\n  if (-1 < DAT_200005f8 << 0x1f) {\n    DAT_200005f8 = 1;\n  }\n  if (-1 < DAT_200005f4 << 0x1f) {\n    DAT_200005f4 = 1;\n  }\n  if (-1 < DAT_200005f0 << 0x1f) {\n    DAT_200005f0 = 1;\n  }\n  if (-1 < DAT_200005ec << 0x1f) {\n    DAT_200005ec = 1;\n  }\n  if (-1 < DAT_200005e8 << 0x1f) {\n    DAT_200005e8 = 1;\n  }\n  if (-1 < DAT_200005e4 << 0x1f) {\n    DAT_200005e4 = 1;\n  }\n  if (-1 < DAT_200005e0 << 0x1f) {\n    DAT_200005e0 = 1;\n  }\n  if (-1 < DAT_200005dc << 0x1f) {\n    DAT_200005dc = 1;\n  }\n  if (-1 < DAT_200005d8 << 0x1f) {\n    DAT_200005d8 = 1;\n  }\n  if (-1 < DAT_200005d4 << 0x1f) {\n    DAT_200005d4 = 1;\n  }\n  if (-1 < DAT_200005d0 << 0x1f) {\n    DAT_200005d0 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x080057f8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "initialize_flags_08005760",
            "entrypoint": "0x08005760",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005760": "initialize_flags_08005760",
                "UNRECOVERED_JUMPTABLE": "jump_table"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080059f8": {
            "called": [],
            "calling": [
                "FUN_08004884",
                "FUN_080001ac"
            ],
            "code": "\nvoid FUNC_080059f8(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080059f8",
            "entrypoint": "0x080059f8",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080059f8": "FUNC_080059f8"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005a04": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_08005a04(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005a04",
            "entrypoint": "0x08005a04",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005a04": "FUNC_08005a04"
            },
            "skipped": true,
            "tags": []
        },
        "entry": {
            "called": [
                "FUN_08004658",
                "FUN_08004884",
                "FUN_080035bc"
            ],
            "calling": [],
            "code": "\n/* WARNING: This function may have set the stack pointer */\n\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_20000104; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8006034);\n  }\n  for (puVar2 = &DAT_20000104; puVar2 < &DAT_20000678; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_080035bc();\n  FUN_08004884();\n  UNRECOVERED_JUMPTABLE = (code *)0x8000d72;\n  FUN_08004658();\n                    /* WARNING: Could not recover jumptable at 0x08000d72. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "current_name": "entry",
            "entrypoint": "0x08000d3c",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "thunk_FUN_0800410c": {
            "additional_data": {
                "FUN_0800410c": {
                    "calculate_result": 1,
                    "calculate_return_value": 6,
                    "calculate_true_value": 1,
                    "calculate_value": 4,
                    "calculate_version_number": 1,
                    "get_one_helper": 3,
                    "get_one_internal": 1,
                    "get_original_result": 1,
                    "get_return_value": 3,
                    "get_status": 1,
                    "get_status_helper": 1,
                    "get_value": 1,
                    "process_return_value": 1,
                    "retrieve_default_value": 1,
                    "retrieve_status": 2,
                    "retrieve_value": 2
                },
                "thunk_FUN_0800410c": {
                    "calculate_result": 1,
                    "compute_result": 1,
                    "get_default_value": 1,
                    "get_one": 4,
                    "get_result": 2,
                    "get_return_value": 10,
                    "get_status": 2,
                    "get_status_value": 1,
                    "get_true_value": 2,
                    "get_value": 1,
                    "get_version_number": 1,
                    "initialize": 3,
                    "return_one": 1
                },
                "undefined4": {
                    "int": 1,
                    "uint32_t": 1
                }
            },
            "called": [
                "FUN_0800410c"
            ],
            "calling": [
                "FUN_080055d0"
            ],
            "code": "\nuint32_t get_return_value_thunk_0800410c(void)\n\n{\n  return 1;\n}\n\n",
            "current_name": "get_return_value_thunk_0800410c",
            "entrypoint": "0x08005604",
            "imported": false,
            "improved": true,
            "renaming": {
                "thunk_FUN_0800410c": "get_return_value_thunk_0800410c",
                "undefined4": "uint32_t"
            },
            "skipped": false,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_080001ac",
            "FUN_08000230",
            "FUN_080002d0",
            "FUN_08000300",
            "FUN_080005e0",
            "FUN_080005e4",
            "FUN_08000600",
            "FUN_0800066c",
            "FUN_08000682",
            "FUN_08000690",
            "FUN_080006b4",
            "FUN_08000728",
            "FUN_0800076c",
            "FUN_080007f0",
            "FUN_080008cc",
            "FUN_080008e2",
            "FUN_08000998",
            "FUN_08000a00",
            "FUN_08000a4e",
            "FUN_08000a7a",
            "FUN_08000b04",
            "FUN_08000b54",
            "FUN_08000c4c",
            "FUN_08000c64",
            "FUN_08000c8c",
            "FUN_08000d8e",
            "FUN_08000d98",
            "FUN_08000de4",
            "FUN_08000e18",
            "FUN_08000e30",
            "FUN_08000e3c",
            "FUN_08000e60",
            "FUN_08000ec4",
            "FUN_08000ee0",
            "FUN_08000f0c",
            "FUN_08000f2c",
            "FUN_08000f4e",
            "FUN_08000f56",
            "FUN_08000f72",
            "FUN_08000f8c",
            "FUN_08000fb4",
            "FUN_08001198",
            "FUN_080011a4",
            "FUN_080011c0",
            "FUN_0800124a",
            "FUN_08001256",
            "FUN_08001420",
            "FUN_08001440",
            "FUN_08001460",
            "FUN_080014ec",
            "FUN_08001578",
            "FUN_080015bc",
            "FUN_0800160e",
            "FUN_0800165a",
            "FUN_08001684",
            "FUN_0800171a",
            "FUN_08001864",
            "FUN_08001904",
            "FUN_080019a0",
            "FUN_08001ab0",
            "FUN_08001bfc",
            "FUN_08001d00",
            "FUN_08001e68",
            "FUN_08001f9c",
            "FUN_0800201c",
            "FUN_080023b4",
            "FUN_08002488",
            "FUN_080025e0",
            "FUN_080025ec",
            "FUN_0800260c",
            "FUN_0800262c",
            "FUN_0800268e",
            "FUN_080026ce",
            "FUN_08002848",
            "FUN_08002864",
            "FUN_080028d4",
            "FUN_080028f0",
            "FUN_08002940",
            "FUN_0800295c",
            "FUN_080029c8",
            "FUN_08002d0c",
            "FUN_08002d72",
            "FUN_08002dd0",
            "FUN_08002eb2",
            "FUN_08002efa",
            "FUN_08002f4c",
            "FUN_08002f66",
            "FUN_08002ffc",
            "FUN_0800312c",
            "FUN_08003138",
            "FUN_0800314e",
            "FUN_0800316c",
            "FUN_0800318c",
            "FUN_080031fc",
            "FUN_08003380",
            "FUN_0800339c",
            "FUN_080033c8",
            "FUN_080033d8",
            "FUN_0800340c",
            "FUN_08003414",
            "FUN_0800346c",
            "FUN_08003476",
            "FUN_08003486",
            "FUN_080034b6",
            "FUN_080034ce",
            "FUN_080034da",
            "FUN_080034f4",
            "FUN_08003506",
            "FUN_0800351e",
            "FUN_0800352e",
            "FUN_0800354a",
            "FUN_0800355e",
            "FUN_08003582",
            "FUN_08003594",
            "FUN_080035bc",
            "FUN_080035fc",
            "FUN_08003750",
            "FUN_08003754",
            "FUN_0800376e",
            "FUN_0800377c",
            "FUN_0800387c",
            "FUN_08003880",
            "FUN_080038d0",
            "FUN_08003900",
            "FUN_08003978",
            "FUN_08003cc8",
            "FUN_08003d18",
            "FUN_08003dd0",
            "FUN_08003df4",
            "FUN_08003e18",
            "FUN_08003e54",
            "FUN_08003eac",
            "FUN_08003f00",
            "FUN_08003f24",
            "FUN_08003f48",
            "FUN_08004094",
            "FUN_080040d0",
            "FUN_080040d6",
            "FUN_080040e0",
            "FUN_080040e4",
            "FUN_080040e8",
            "FUN_080040ec",
            "FUN_080040f8",
            "FUN_080040fc",
            "FUN_0800410c",
            "FUN_08004110",
            "FUN_080041bc",
            "FUN_08004204",
            "FUN_08004240",
            "FUN_080042ac",
            "FUN_080042e8",
            "FUN_08004364",
            "FUN_08004388",
            "FUN_08004444",
            "FUN_08004460",
            "FUN_0800447c",
            "FUN_080044d8",
            "FUN_08004544",
            "FUN_08004560",
            "FUN_08004640",
            "FUN_08004648",
            "FUN_08004658",
            "FUN_08004678",
            "FUN_080046b4",
            "FUN_080047c0",
            "FUN_080047d0",
            "FUN_080047fe",
            "FUN_08004808",
            "FUN_08004844",
            "FUN_08004860",
            "FUN_08004884",
            "FUN_080048cc",
            "FUN_080048dc",
            "FUN_08004978",
            "FUN_08004a34",
            "FUN_08004a60",
            "FUN_08004a84",
            "FUN_08004cb0",
            "FUN_08004d9c",
            "FUN_08004fdc",
            "FUN_0800500c",
            "FUN_080050d0",
            "FUN_080051ac",
            "FUN_080052cc",
            "FUN_0800532c",
            "FUN_08005374",
            "FUN_080053a0",
            "FUN_08005400",
            "FUN_080054b4",
            "FUN_080054fc",
            "FUN_080055d0",
            "thunk_FUN_0800410c",
            "FUN_08005608",
            "FUN_0800562a",
            "FUN_08005662",
            "FUN_080056d4",
            "FUN_080056f8",
            "FUN_08005718",
            "FUN_0800573c",
            "FUN_08005760"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 674653
}