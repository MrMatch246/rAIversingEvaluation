{
    "functions": {
        "FUN_080001ac": {
            "additional_data": {
                "DAT_20000104": {
                    "data_flag": 1,
                    "flag": 15,
                    "flag_variable": 2
                },
                "FUN_080001ac": {
                    "initialize_data_if_needed": 1,
                    "initialize_flag": 22,
                    "initialize_flag_if_needed": 1,
                    "initialize_flag_if_not_set": 1,
                    "initialize_if_flag_not_set": 1,
                    "initialize_variable": 1,
                    "set_flag_if_not_set": 1,
                    "set_flag_if_zero": 1,
                    "update_data_flag": 1,
                    "update_flag_if_needed": 1
                },
                "param_1": {
                    "input": 14,
                    "input_param": 1,
                    "input_parameter": 4,
                    "input_value": 11,
                    "value": 1
                }
            },
            "called": [
                "FUN_080059f8"
            ],
            "calling": [],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080001b8) */\n\nundefined4 initialize_flag_if_needed_080001ac(undefined4 input)\n\n{\n  if ((char)DAT_20000104 == '\\0') {\n    DAT_20000104._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "current_name": "initialize_flag_if_needed_080001ac",
            "entrypoint": "0x080001ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080001ac": "initialize_flag_if_needed_080001ac",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000230": {
            "additional_data": {
                "FUN_08000230": {
                    "byte_array_search": 1,
                    "decode_array": 1,
                    "find_byte_in_buffer": 1,
                    "find_byte_pointer": 1,
                    "find_byte_sequence": 23,
                    "find_byte_sequence_offset": 1,
                    "find_next_byte_occurrence": 1,
                    "search_byte_sequence": 2
                },
                "bVar1": {
                    "byte": 1,
                    "byte_val": 1,
                    "byte_value": 8,
                    "current_byte": 19,
                    "found_byte": 1
                },
                "bVar13": {
                    "aligned_byte_1": 1,
                    "b1": 1,
                    "bit_8_condition": 1,
                    "byte_condition_1": 1,
                    "check_8_bool": 1,
                    "check_result_1": 1,
                    "first_comparison_result": 1,
                    "first_xor_condition": 1,
                    "flag0": 1,
                    "flag1": 1,
                    "flag_4": 1,
                    "flag_5": 1,
                    "is_byte_0_xor_result_2": 1,
                    "is_byte_nonzero": 1,
                    "is_byte_nonzero_word1": 1,
                    "is_byte_set_1": 1,
                    "is_first_word_nonzero": 1,
                    "is_nonzero_1": 1,
                    "is_nonzero_byte": 1,
                    "is_not_zero": 1,
                    "is_set_bit_0": 1,
                    "is_zero1": 1,
                    "mask_2_present": 1,
                    "not_zero_1": 1,
                    "result_check_1": 1,
                    "temp1_bool": 1,
                    "temp3": 1,
                    "temp_bool_1": 2
                },
                "bVar14": {
                    "aligned_byte_2": 1,
                    "b2": 1,
                    "bit_16_condition": 1,
                    "byte_condition_2": 1,
                    "check_16_bool": 1,
                    "check_result_2": 1,
                    "flag1": 1,
                    "flag2": 1,
                    "flag_5": 1,
                    "flag_6": 1,
                    "is_byte_1_xor_result_2": 1,
                    "is_byte_nonzero_2": 1,
                    "is_byte_nonzero_word1_shifted_8": 1,
                    "is_byte_set_2": 1,
                    "is_nonzero_2": 1,
                    "is_nonzero_byte2": 1,
                    "is_not_zero_2": 1,
                    "is_second_word_nonzero": 1,
                    "is_set_bit_8": 1,
                    "is_zero1_8": 1,
                    "mask_3_present": 1,
                    "not_zero_2": 1,
                    "result_check_2": 1,
                    "second_comparison_result": 1,
                    "second_xor_condition": 1,
                    "temp2_bool": 1,
                    "temp4": 1,
                    "temp_bool_2": 2
                },
                "bVar15": {
                    "aligned_byte_3": 1,
                    "b3": 1,
                    "bit_24_condition": 1,
                    "byte_condition_3": 1,
                    "check_24_bool": 1,
                    "check_result_3": 1,
                    "flag2": 1,
                    "flag3": 1,
                    "flag_6": 1,
                    "flag_7": 1,
                    "is_byte_2_xor_result_2": 1,
                    "is_byte_nonzero_3": 1,
                    "is_byte_nonzero_word1_shifted_16": 1,
                    "is_byte_set_3": 1,
                    "is_nonzero_3": 1,
                    "is_nonzero_byte3": 1,
                    "is_not_zero_3": 1,
                    "is_set_bit_16": 1,
                    "is_third_word_nonzero": 1,
                    "is_zero1_16": 1,
                    "mask_4_present": 1,
                    "not_zero_3": 1,
                    "result_check_3": 1,
                    "temp3_bool": 1,
                    "temp5": 1,
                    "temp_bool_3": 2,
                    "third_comparison_result": 1,
                    "third_xor_condition": 1
                },
                "bVar16": {
                    "aligned_byte_4": 1,
                    "b4": 1,
                    "bit_32_condition": 1,
                    "byte_condition_4": 1,
                    "check_32_bool": 1,
                    "check_result_4": 1,
                    "flag3": 1,
                    "flag4": 1,
                    "flag_7": 1,
                    "flag_8": 1,
                    "fourth_comparison_result": 1,
                    "fourth_xor_condition": 1,
                    "is_byte_3_xor_result_2": 1,
                    "is_byte_nonzero_4": 1,
                    "is_byte_nonzero_word1_shifted_24": 1,
                    "is_byte_set_4": 1,
                    "is_fourth_word_nonzero": 1,
                    "is_nonzero_4": 1,
                    "is_nonzero_byte4": 1,
                    "is_not_zero_4": 1,
                    "is_set_bit_24": 1,
                    "is_zero1_24": 1,
                    "mask_5_present": 1,
                    "not_zero_4": 1,
                    "result_check_4": 1,
                    "temp4_bool": 1,
                    "temp6": 1,
                    "temp_bool_4": 2
                },
                "bVar17": {
                    "is_next_nonzero": 1
                },
                "bVar18": {
                    "is_next_nonzero2": 1
                },
                "bVar19": {
                    "is_next_nonzero3": 1
                },
                "bVar20": {
                    "is_next_nonzero4": 1
                },
                "cVar2": {
                    "bit_0": 2,
                    "bit_0_flag": 1,
                    "byte_check_1": 1,
                    "byte_checked": 1,
                    "byte_condition_1": 1,
                    "check_0": 1,
                    "check_result_byte_1": 1,
                    "first_byte_check": 1,
                    "first_byte_condition": 1,
                    "first_char_match": 1,
                    "first_condition": 1,
                    "flag_0": 1,
                    "flag_1": 3,
                    "high_byte_1": 1,
                    "is_byte_0": 2,
                    "is_byte_zero": 3,
                    "is_first_byte_zero": 1,
                    "is_zero": 2,
                    "is_zero_1": 1,
                    "is_zero_byte": 1,
                    "mask1": 1,
                    "mask_0": 1,
                    "mask_1": 1
                },
                "cVar3": {
                    "bit_8": 2,
                    "bit_8_flag": 1,
                    "byte_check_2": 1,
                    "byte_checked": 1,
                    "byte_condition_2": 1,
                    "check_8": 1,
                    "check_result_byte_2": 1,
                    "flag_1": 1,
                    "flag_2": 3,
                    "high_byte_2": 1,
                    "is_byte_1": 2,
                    "is_byte_zero_2": 2,
                    "is_byte_zero_shifted_8": 1,
                    "is_second_byte_zero": 1,
                    "is_zero_2": 2,
                    "is_zero_8": 1,
                    "is_zero_byte2": 1,
                    "mask2": 1,
                    "mask_1": 1,
                    "mask_2": 1,
                    "second_byte_check": 1,
                    "second_byte_condition": 1,
                    "second_char_match": 1,
                    "second_condition": 1
                },
                "cVar4": {
                    "bit_16": 2,
                    "bit_16_flag": 1,
                    "byte_check_3": 1,
                    "byte_checked": 1,
                    "byte_condition_3": 1,
                    "check_16": 1,
                    "check_result_byte_3": 1,
                    "flag_2": 1,
                    "flag_3": 3,
                    "high_byte_3": 1,
                    "is_byte_2": 2,
                    "is_byte_zero_3": 2,
                    "is_byte_zero_shifted_16": 1,
                    "is_third_byte_zero": 1,
                    "is_zero_16": 1,
                    "is_zero_3": 2,
                    "is_zero_byte3": 1,
                    "mask3": 1,
                    "mask_2": 1,
                    "mask_3": 1,
                    "third_byte_check": 1,
                    "third_byte_condition": 1,
                    "third_char_match": 1,
                    "third_condition": 1
                },
                "cVar5": {
                    "bit_24": 2,
                    "bit_24_flag": 1,
                    "byte_check_4": 1,
                    "byte_checked": 1,
                    "byte_condition_4": 1,
                    "check_24": 1,
                    "check_result_byte_4": 1,
                    "flag_3": 1,
                    "flag_4": 3,
                    "fourth_byte_check": 1,
                    "fourth_byte_condition": 1,
                    "fourth_char_match": 1,
                    "fourth_condition": 1,
                    "high_byte_4": 1,
                    "is_byte_3": 2,
                    "is_byte_zero_4": 2,
                    "is_byte_zero_shifted_24": 1,
                    "is_fourth_byte_zero": 1,
                    "is_zero_24": 1,
                    "is_zero_4": 2,
                    "is_zero_byte4": 1,
                    "mask4": 1,
                    "mask_3": 1,
                    "mask_4": 1
                },
                "param_1": {
                    "array": 2,
                    "buffer": 2,
                    "byte_array": 1,
                    "data": 20,
                    "data_ptr": 2,
                    "input": 1,
                    "input_data": 2,
                    "source": 1
                },
                "param_2": {
                    "byte_sequence": 1,
                    "byte_to_find": 13,
                    "byte_value": 1,
                    "search_byte": 1,
                    "search_value": 1,
                    "target": 4,
                    "target_byte": 10
                },
                "param_3": {
                    "array_length": 2,
                    "buffer_size": 1,
                    "data_len": 1,
                    "data_length": 3,
                    "data_size": 2,
                    "input_size": 1,
                    "length": 18,
                    "sequence_length": 1,
                    "size": 2
                },
                "pbVar6": {
                    "byte_pointer": 1,
                    "byte_ptr": 1,
                    "current_byte": 2,
                    "match_ptr": 1,
                    "next_byte": 11,
                    "next_byte_ptr": 5,
                    "result": 8,
                    "result_pointer": 1,
                    "result_ptr": 1
                },
                "pbVar8": {
                    "aligned_result_ptr": 1,
                    "byte_to_return": 1,
                    "found_byte_ptr": 1,
                    "found_sequence": 1,
                    "matching_byte": 1,
                    "next": 2,
                    "next_address": 1,
                    "next_byte": 1,
                    "next_data": 1,
                    "next_data_pointer": 1,
                    "next_ptr": 1,
                    "next_result": 1,
                    "previous_byte_pointer": 1,
                    "result": 9,
                    "result_ptr": 6,
                    "return_ptr": 1,
                    "temp_ptr": 1
                },
                "puVar7": {
                    "current": 2,
                    "current_address": 1,
                    "current_byte": 1,
                    "current_byte_ptr": 1,
                    "current_data": 5,
                    "current_data_pointer": 1,
                    "current_ptr": 3,
                    "current_uint": 1,
                    "current_uint_ptr": 2,
                    "current_word": 3,
                    "current_word_ptr": 1,
                    "data_ptr": 4,
                    "data_ptr_tmp": 1,
                    "next_uint": 2,
                    "next_word": 1,
                    "uint_pointer": 1,
                    "uint_ptr": 1
                },
                "uVar10": {
                    "aligned_array_length": 1,
                    "aligned_data_length": 1,
                    "aligned_data_size": 1,
                    "aligned_length": 10,
                    "aligned_size": 1,
                    "buffer_size_aligned": 1,
                    "data_length_aligned": 2,
                    "len": 1,
                    "length_aligned": 4,
                    "length_mod_8": 1,
                    "new_sequence_length": 1,
                    "remaining_length": 2,
                    "remaining_size": 2,
                    "rounded_length": 1,
                    "size_aligned": 1,
                    "word_length": 1
                },
                "uVar11": {
                    "aligned_uint_1": 1,
                    "check_result_0": 1,
                    "computed_mask": 1,
                    "computed_mask_1": 1,
                    "current_uint1": 1,
                    "current_word_xor": 1,
                    "data_xor": 1,
                    "first_aligned_word": 1,
                    "first_comparison": 1,
                    "result1": 1,
                    "result_byte": 1,
                    "temp1": 2,
                    "temp_val_1": 1,
                    "temp_value": 1,
                    "temp_var_1": 1,
                    "tmp_var_0": 1,
                    "word1": 1,
                    "xor_result": 4,
                    "xor_result_1": 5,
                    "xored_byte_1": 1,
                    "xored_result_1": 1,
                    "xored_value": 1,
                    "xored_word1": 1
                },
                "uVar12": {
                    "aligned_uint_2": 1,
                    "check_result_8": 1,
                    "computed_mask_2": 1,
                    "current_uint2": 1,
                    "current_word_xor_result": 1,
                    "next_xor": 1,
                    "result2": 1,
                    "result_byte_2": 1,
                    "second_aligned_word": 1,
                    "second_comparison": 1,
                    "second_xored_value": 1,
                    "shifted_xor_result": 1,
                    "temp2": 2,
                    "temp_val_2": 1,
                    "temp_value_2": 1,
                    "temp_var_2": 1,
                    "tmp_var_1": 1,
                    "word2": 1,
                    "xor_result": 1,
                    "xor_result1": 1,
                    "xor_result_2": 6,
                    "xor_result_part2": 1,
                    "xored_byte_2": 1,
                    "xored_result_2": 1,
                    "xored_word2": 1
                },
                "uVar13": {
                    "mask1": 1,
                    "non_zero1": 1
                },
                "uVar14": {
                    "mask2": 1,
                    "non_zero2": 1
                },
                "uVar15": {
                    "mask3": 1,
                    "non_zero3": 1
                },
                "uVar16": {
                    "mask4": 1,
                    "non_zero4": 1
                },
                "uVar9": {
                    "align": 1,
                    "alignment": 6,
                    "alignment_offset": 2,
                    "buffer_offset": 1,
                    "byte_array_alignment": 1,
                    "byte_index": 1,
                    "bytes_remaining": 1,
                    "current_offset": 1,
                    "data_alignment": 1,
                    "data_offset": 3,
                    "mod_8": 1,
                    "offset": 4,
                    "offset_in_word": 1,
                    "ptr_alignment": 2,
                    "remainder": 3,
                    "unaligned_bytes": 1,
                    "word_offset": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004a84",
                "FUN_08004d9c"
            ],
            "code": "\nbyte * find_byte_sequence_offset_08000230(uint *data,uint byte_to_find,uint length)\n\n{\n  byte current_byte;\n  char flag_1;\n  char flag_2;\n  char flag_3;\n  char flag_4;\n  byte *next_byte;\n  uint *current_data;\n  byte *result;\n  uint alignment;\n  uint aligned_length;\n  uint xor_result_1;\n  uint xor_result_2;\n  bool temp_bool_1;\n  bool temp_bool_2;\n  bool temp_bool_3;\n  bool temp_bool_4;\n  \n  byte_to_find = byte_to_find & 0xff;\n  if ((int)length < 0x10) {\njoined_r0x08000290:\n    do {\n      if (length == 0) {\n        return (byte *)0x0;\n      }\n      current_data = (uint *)((int)data + 1);\n      current_byte = *(byte *)data;\n      length = length - 1;\n      data = current_data;\n    } while (current_byte != byte_to_find);\n  }\n  else {\n    alignment = (uint)data & 7;\n    while( true ) {\n      if (alignment == 0) {\n        alignment = byte_to_find | byte_to_find << 8;\n        alignment = alignment | alignment << 0x10;\n        aligned_length = length & 0xfffffff8;\n        do {\n          current_data = data + 2;\n          aligned_length = aligned_length - 8;\n          xor_result_1 = *data ^ alignment;\n          xor_result_2 = data[1] ^ alignment;\n          flag_1 = -((char)xor_result_1 == '\\0');\n          flag_2 = -((char)(xor_result_1 >> 8) == '\\0');\n          flag_3 = -((char)(xor_result_1 >> 0x10) == '\\0');\n          flag_4 = -((char)(xor_result_1 >> 0x18) == '\\0');\n          xor_result_1 = CONCAT13(flag_4,CONCAT12(flag_3,CONCAT11(flag_2,flag_1)));\n          temp_bool_1 = (char)xor_result_2 != '\\0';\n          temp_bool_2 = (char)(xor_result_2 >> 8) != '\\0';\n          temp_bool_3 = (char)(xor_result_2 >> 0x10) != '\\0';\n          temp_bool_4 = (char)(xor_result_2 >> 0x18) != '\\0';\n          xor_result_2 = CONCAT13(temp_bool_4 * flag_4 - !temp_bool_4,\n                            CONCAT12(temp_bool_3 * flag_3 - !temp_bool_3,\n                                     CONCAT11(temp_bool_2 * flag_2 - !temp_bool_2,temp_bool_1 * flag_1 - !temp_bool_1)));\n          if (xor_result_2 != 0) {\n            if (xor_result_1 == 0) {\n              result = (byte *)((int)data + 5);\n              xor_result_1 = xor_result_2;\n            }\n            else {\n              result = (byte *)((int)data + 1);\n            }\n            if ((xor_result_1 & 1) == 0) {\n              temp_bool_1 = (xor_result_1 & 0x100) == 0;\n              next_byte = result + 1;\n              if (temp_bool_1) {\n                temp_bool_1 = (xor_result_1 & 0x18000) == 0;\n                next_byte = result + 2;\n              }\n              result = next_byte;\n              if (temp_bool_1) {\n                result = result + 1;\n              }\n            }\n            return result + -1;\n          }\n          data = current_data;\n        } while (aligned_length != 0);\n        length = length & 7;\n        goto joined_r0x08000290;\n      }\n      current_data = (uint *)((int)data + 1);\n      length = length - 1;\n      if (*(byte *)data == byte_to_find) break;\n      alignment = (uint)current_data & 7;\n      data = current_data;\n      if (length == 0) {\n        return (byte *)0x0;\n      }\n    }\n  }\n  return (byte *)((int)current_data + -1);\n}\n\n",
            "current_name": "find_byte_sequence_offset_08000230",
            "entrypoint": "0x08000230",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000230": "find_byte_sequence_offset_08000230",
                "bVar1": "current_byte",
                "bVar13": "temp_bool_1",
                "bVar14": "temp_bool_2",
                "bVar15": "temp_bool_3",
                "bVar16": "temp_bool_4",
                "cVar2": "flag_1",
                "cVar3": "flag_2",
                "cVar4": "flag_3",
                "cVar5": "flag_4",
                "param_1": "data",
                "param_2": "byte_to_find",
                "param_3": "length",
                "pbVar6": "next_byte",
                "pbVar8": "result",
                "puVar7": "current_data",
                "uVar10": "aligned_length",
                "uVar11": "xor_result_1",
                "uVar12": "xor_result_2",
                "uVar9": "alignment"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080002d0": {
            "additional_data": {
                "CONCAT44": {
                    "combine_results": 1
                },
                "FUN_080002d0": {
                    "calculate_result": 18,
                    "compute_result": 1,
                    "decode_parameters": 1,
                    "divide_and_remainder": 1,
                    "extract_data": 1,
                    "extract_result": 1,
                    "get_divided_remainder": 1,
                    "get_result": 1,
                    "parse_parameters": 1,
                    "process_parameters": 3,
                    "process_params": 1
                },
                "param_1": {
                    "data_1": 1,
                    "dividend": 1,
                    "first_parameter": 1,
                    "input1": 7,
                    "input_1": 13,
                    "input_param1": 1,
                    "input_param_1": 2,
                    "input_value1": 1,
                    "input_value_1": 1,
                    "parameter1": 1,
                    "value1": 1,
                    "value_1": 1
                },
                "param_2": {
                    "data_2": 1,
                    "divisor": 1,
                    "input2": 7,
                    "input_2": 13,
                    "input_param2": 1,
                    "input_param_2": 2,
                    "input_value2": 1,
                    "input_value_2": 1,
                    "parameter2": 1,
                    "second_parameter": 1,
                    "value2": 1,
                    "value_2": 1
                },
                "param_3": {
                    "condition1": 2,
                    "condition_1": 2,
                    "flag1": 2,
                    "flag_1": 5,
                    "input3": 2,
                    "input_3": 8,
                    "input_condition1": 1,
                    "input_param3": 1,
                    "input_param_3": 2,
                    "param_a": 1,
                    "parameter3": 1,
                    "quotient": 1,
                    "third_parameter": 1,
                    "value3": 1,
                    "value_3": 1
                },
                "param_4": {
                    "condition2": 2,
                    "condition_2": 2,
                    "flag2": 2,
                    "flag_2": 5,
                    "fourth_parameter": 1,
                    "input4": 2,
                    "input_4": 8,
                    "input_condition2": 1,
                    "input_param4": 1,
                    "input_param_4": 2,
                    "param_b": 1,
                    "parameter4": 1,
                    "remainder": 1,
                    "value4": 1,
                    "value_4": 1
                },
                "uVar1": {
                    "result": 28
                }
            },
            "called": [
                "FUN_08000300"
            ],
            "calling": [
                "FUN_080023b4"
            ],
            "code": "\nundefined8 calculate_result_080002d0(int input_1,int input_2,int input_3,int input_4)\n\n{\n  undefined8 result;\n  \n  if ((input_4 == 0) && (input_3 == 0)) {\n    if (input_2 != 0 || input_1 != 0) {\n      input_2 = -1;\n      input_1 = -1;\n    }\n    return combine_results(input_2,input_1);\n  }\n  result = divide_and_remainder_08000300();\n  return result;\n}\n\n",
            "current_name": "calculate_result_080002d0",
            "entrypoint": "0x080002d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "CONCAT44": "combine_results",
                "FUN_080002d0": "calculate_result_080002d0",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000300": {
            "additional_data": {
                "CARRY4": {
                    "carry4_function": 1
                },
                "FUN_08000300": {
                    "calculate_division": 2,
                    "div_mod": 1,
                    "div_with_remainder": 1,
                    "divide": 2,
                    "divide_and_modulo": 2,
                    "divide_and_modulus": 1,
                    "divide_and_remainder": 8,
                    "divide_with_remainder": 5,
                    "division_with_remainder": 4,
                    "divmod": 1,
                    "perform_division": 2,
                    "perform_unsigned_division": 1
                },
                "F_08000300": {
                    "division_with_remainder": 1
                },
                "LZCOUNT": {
                    "leading_zeroes_count": 1
                },
                "bVar11": {
                    "carry": 7,
                    "carry_flag": 18,
                    "is_carry": 3
                },
                "bVar12": {
                    "carry_flag": 1
                },
                "bVar14": {
                    "carry": 1
                },
                "bVar17": {
                    "is_carried": 1
                },
                "iVar10": {
                    "bit_count": 2,
                    "bit_shift": 4,
                    "num_bits": 1,
                    "shift": 4,
                    "shift_amount": 9,
                    "shift_amt": 1,
                    "shift_bits": 1,
                    "shift_count": 6
                },
                "iVar11": {
                    "shift_amount": 1
                },
                "iVar13": {
                    "shift_count": 1
                },
                "param_1": {
                    "dividend": 30,
                    "divident": 1
                },
                "param_2": {
                    "dividend_high": 9,
                    "dividend_low": 5,
                    "dividend_lower": 3,
                    "dividend_part_1": 1,
                    "dividend_upper": 5,
                    "dividend_upper_bits": 2,
                    "dividend_upper_half": 1,
                    "divident_high": 1,
                    "divisor": 3,
                    "remainder_high": 1
                },
                "param_3": {
                    "divisor": 27,
                    "divisor_high": 1,
                    "quotient": 3
                },
                "param_4": {
                    "divisor": 1,
                    "divisor_high": 9,
                    "divisor_low": 4,
                    "divisor_lower": 2,
                    "divisor_part_2": 1,
                    "divisor_upper": 6,
                    "divisor_upper_bits": 2,
                    "divisor_upper_half": 1,
                    "quotient_high": 1,
                    "remainder": 3,
                    "remainder_low": 1
                },
                "param_5": {
                    "quotient": 3,
                    "quotient_and_remainder": 5,
                    "quotient_ptr": 1,
                    "quotient_remainder": 2,
                    "remainder": 12,
                    "remainder_ptr": 4,
                    "remainder_quotient": 1,
                    "result": 2,
                    "result_arr": 1
                },
                "uVar1": {
                    "calculated_result": 1,
                    "product_high": 1,
                    "quotient": 10,
                    "quotient_high": 1,
                    "quotient_lower": 1,
                    "quotient_remainder": 1,
                    "quotient_upper": 1,
                    "result": 14,
                    "u_quotient": 1
                },
                "uVar10": {
                    "carry": 1,
                    "temp7": 3,
                    "temp_divisor": 1
                },
                "uVar11": {
                    "temp8": 2
                },
                "uVar12": {
                    "division_count": 1,
                    "offset": 1,
                    "temp_result": 1,
                    "tmp7": 1
                },
                "uVar13": {
                    "division_remainder": 1,
                    "temp_divisor": 1
                },
                "uVar15": {
                    "dividend_high": 1
                },
                "uVar16": {
                    "divisor_high": 1
                },
                "uVar18": {
                    "quotient_div": 1
                },
                "uVar19": {
                    "temp_div": 1
                },
                "uVar2": {
                    "division": 1,
                    "quotient": 3,
                    "quotient_high": 1,
                    "quotient_low": 3,
                    "quotient_lower": 2,
                    "quotient_upper": 2,
                    "quotient_upper_bits": 1,
                    "remainder_temp_1": 1,
                    "shift_count": 1,
                    "temp": 4,
                    "temp1": 8,
                    "temp_dividend": 1,
                    "tmp1": 1,
                    "u_dividend": 1
                },
                "uVar20": {
                    "temp_sub": 1
                },
                "uVar3": {
                    "dividend_lower_half": 1,
                    "division_result_part1": 1,
                    "quotient": 3,
                    "quotient_high": 7,
                    "quotient_high_temp": 1,
                    "quotient_low": 4,
                    "quotient_lower": 3,
                    "quotient_part1": 1,
                    "quotient_temp_1": 1,
                    "quotient_upper": 1,
                    "remainder": 1,
                    "temp1": 2,
                    "temp2": 3,
                    "u_divisor": 1,
                    "u_var3": 1
                },
                "uVar4": {
                    "division_result_part2": 1,
                    "divisor_lower_half": 1,
                    "quotient": 1,
                    "quotient_high": 2,
                    "quotient_low": 5,
                    "quotient_low_temp": 1,
                    "quotient_part2": 1,
                    "quotient_temp_1": 1,
                    "quotient_upper": 2,
                    "quotient_upper_bits": 1,
                    "remainder": 1,
                    "remainder_upper": 1,
                    "temp": 1,
                    "temp1": 4,
                    "temp2": 3,
                    "temp3": 2,
                    "tmp2": 1,
                    "u_remainder": 1,
                    "u_var4": 1
                },
                "uVar5": {
                    "divisor_temp": 1,
                    "quotient_high": 1,
                    "quotient_part3": 1,
                    "quotient_temp_2": 1,
                    "remainder": 4,
                    "remainder_high": 1,
                    "remainder_low": 2,
                    "rest": 1,
                    "temp": 1,
                    "temp1": 4,
                    "temp2": 8,
                    "temp3": 2,
                    "temp4": 2,
                    "temp_remainder": 1,
                    "u_result": 1
                },
                "uVar6": {
                    "dividend_low": 1,
                    "numerator_upper_bits": 1,
                    "quotient": 1,
                    "quotient1": 2,
                    "quotient_low": 1,
                    "quotient_part4": 1,
                    "remainder_high": 1,
                    "remainder_lower": 1,
                    "remainder_temp_1": 1,
                    "remainder_temp_2": 1,
                    "temp1": 2,
                    "temp1_upper": 1,
                    "temp2": 3,
                    "temp3": 7,
                    "temp4": 2,
                    "temp5": 1,
                    "temp_quotient": 1,
                    "tmp3": 1,
                    "u_partial_quotient": 1,
                    "u_var6": 1
                },
                "uVar7": {
                    "divisor_low": 1,
                    "numerator": 1,
                    "quotient2": 1,
                    "quotient_low_temp2": 1,
                    "quotient_part5": 1,
                    "quotient_temp_2": 1,
                    "remainder_temp_2": 1,
                    "remainder_upper": 1,
                    "temp2": 4,
                    "temp3": 4,
                    "temp4": 7,
                    "temp5": 3,
                    "temp6": 1,
                    "temp_remainder": 1,
                    "tmp4": 1,
                    "u_partial_remainder": 1
                },
                "uVar8": {
                    "divisor_high": 2,
                    "divisor_part1": 1,
                    "mask": 1,
                    "quotient2": 1,
                    "quotient3": 1,
                    "quotient_high": 2,
                    "quotient_higher": 1,
                    "quotient_part_2": 1,
                    "quotient_temp_3": 1,
                    "temp": 1,
                    "temp2_upper": 1,
                    "temp3": 1,
                    "temp4": 3,
                    "temp5": 6,
                    "temp6": 2,
                    "temp7": 1,
                    "temp_quotient": 1,
                    "tmp5": 1,
                    "u_div": 1,
                    "u_var8": 1
                },
                "uVar9": {
                    "divisor_part2": 1,
                    "num_bits": 1,
                    "quotient4": 1,
                    "quotient_factor": 1,
                    "remainder": 3,
                    "remainder_high": 1,
                    "remainder_temp_3": 1,
                    "temp2": 1,
                    "temp3": 2,
                    "temp4": 1,
                    "temp5": 4,
                    "temp6": 6,
                    "temp7": 2,
                    "temp8": 1,
                    "temp_divisor": 1,
                    "tmp6": 1,
                    "u_mul": 1,
                    "u_var9": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080002d0"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080005aa) */\n\nulonglong divide_and_remainder_08000300(uint dividend,uint dividend_high,uint divisor,uint divisor_high,uint *remainder)\n\n{\n  ulonglong result;\n  uint temp1;\n  uint quotient_high;\n  uint quotient_low;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  int shift_amount;\n  bool carry_flag;\n  \n  if (divisor_high == 0) {\n    if (dividend_high < divisor) {\n      shift_amount = leading_zeroes_count(divisor);\n      if (shift_amount != 0) {\n        divisor = divisor << shift_amount;\n        dividend_high = dividend >> (0x20U - shift_amount & 0xff) | dividend_high << shift_amount;\n        dividend = dividend << shift_amount;\n      }\n      temp5 = divisor >> 0x10;\n      temp3 = dividend_high / temp5;\n      temp2 = dividend >> 0x10 | (dividend_high - temp5 * temp3) * 0x10000;\n      quotient_low = temp3 * (divisor & 0xffff);\n      quotient_high = temp3;\n      if (temp2 <= quotient_low && quotient_low - temp2 != 0) {\n        carry_flag = carry4_function(temp2,divisor);\n        temp2 = temp2 + divisor;\n        quotient_high = temp3 - 1;\n        if ((carry_flag == false) && (temp2 <= quotient_low && quotient_low - temp2 != 0)) {\n          quotient_high = temp3 - 2;\n          temp2 = temp2 + divisor;\n        }\n      }\n      temp3 = (temp2 - quotient_low) / temp5;\n      temp2 = dividend & 0xffff | ((temp2 - quotient_low) - temp5 * temp3) * 0x10000;\n      temp5 = temp3 * (divisor & 0xffff);\n      quotient_low = temp3;\n      if (temp2 <= temp5 && temp5 - temp2 != 0) {\n        carry_flag = carry4_function(temp2,divisor);\n        temp2 = temp2 + divisor;\n        quotient_low = temp3 - 1;\n        if ((carry_flag == false) && (temp2 <= temp5 && temp5 - temp2 != 0)) {\n          quotient_low = temp3 - 2;\n          temp2 = temp2 + divisor;\n        }\n      }\n      temp2 = temp2 - temp5;\n      quotient_low = quotient_low | quotient_high << 0x10;\n      quotient_high = 0;\n    }\n    else {\n      if (divisor == 0) {\n        divisor = 1 / 0;\n      }\n      shift_amount = leading_zeroes_count(divisor);\n      if (shift_amount == 0) {\n        dividend_high = dividend_high - divisor;\n        temp2 = divisor >> 0x10;\n        temp6 = divisor & 0xffff;\n        quotient_high = 1;\n      }\n      else {\n        divisor = divisor << shift_amount;\n        temp2 = divisor >> 0x10;\n        quotient_low = dividend_high >> (0x20U - shift_amount & 0xff);\n        temp4 = dividend >> (0x20U - shift_amount & 0xff) | dividend_high << shift_amount;\n        quotient_high = quotient_low / temp2;\n        temp6 = divisor & 0xffff;\n        temp5 = temp4 >> 0x10 | (quotient_low - temp2 * quotient_high) * 0x10000;\n        temp3 = quotient_high * temp6;\n        dividend = dividend << shift_amount;\n        quotient_low = quotient_high;\n        if (temp5 <= temp3 && temp3 - temp5 != 0) {\n          carry_flag = carry4_function(temp5,divisor);\n          temp5 = temp5 + divisor;\n          quotient_low = quotient_high - 1;\n          if ((carry_flag == false) && (temp5 <= temp3 && temp3 - temp5 != 0)) {\n            quotient_low = quotient_high - 2;\n            temp5 = temp5 + divisor;\n          }\n        }\n        temp1 = (temp5 - temp3) / temp2;\n        dividend_high = temp4 & 0xffff | ((temp5 - temp3) - temp2 * temp1) * 0x10000;\n        temp3 = temp1 * temp6;\n        quotient_high = temp1;\n        if (dividend_high <= temp3 && temp3 - dividend_high != 0) {\n          carry_flag = carry4_function(dividend_high,divisor);\n          dividend_high = dividend_high + divisor;\n          quotient_high = temp1 - 1;\n          if ((carry_flag == false) && (dividend_high <= temp3 && temp3 - dividend_high != 0)) {\n            quotient_high = temp1 - 2;\n            dividend_high = dividend_high + divisor;\n          }\n        }\n        dividend_high = dividend_high - temp3;\n        quotient_high = quotient_high | quotient_low << 0x10;\n      }\n      temp4 = dividend_high / temp2;\n      temp5 = dividend >> 0x10 | (dividend_high - temp2 * temp4) * 0x10000;\n      quotient_low = temp6 * temp4;\n      temp3 = temp4;\n      if (temp5 <= quotient_low && quotient_low - temp5 != 0) {\n        carry_flag = carry4_function(temp5,divisor);\n        temp5 = temp5 + divisor;\n        temp3 = temp4 - 1;\n        if ((carry_flag == false) && (temp5 <= quotient_low && quotient_low - temp5 != 0)) {\n          temp3 = temp4 - 2;\n          temp5 = temp5 + divisor;\n        }\n      }\n      temp4 = (temp5 - quotient_low) / temp2;\n      temp2 = dividend & 0xffff | ((temp5 - quotient_low) - temp2 * temp4) * 0x10000;\n      temp6 = temp6 * temp4;\n      quotient_low = temp4;\n      if (temp2 <= temp6 && temp6 - temp2 != 0) {\n        carry_flag = carry4_function(temp2,divisor);\n        temp2 = temp2 + divisor;\n        quotient_low = temp4 - 1;\n        if ((carry_flag == false) && (temp2 <= temp6 && temp6 - temp2 != 0)) {\n          quotient_low = temp4 - 2;\n          temp2 = temp2 + divisor;\n        }\n      }\n      temp2 = temp2 - temp6;\n      quotient_low = quotient_low | temp3 << 0x10;\n    }\n    if (remainder != (uint *)0x0) {\n      *remainder = temp2 >> shift_amount;\n      remainder[1] = 0;\n      return CONCAT44(quotient_high,quotient_low);\n    }\n  }\n  else if (dividend_high < divisor_high) {\n    if (remainder != (uint *)0x0) {\n      *remainder = dividend;\n      remainder[1] = dividend_high;\n      return 0;\n    }\n    quotient_low = 0;\n    quotient_high = 0;\n  }\n  else {\n    shift_amount = leading_zeroes_count(divisor_high);\n    if (shift_amount != 0) {\n      temp5 = 0x20 - shift_amount;\n      quotient_high = divisor >> (temp5 & 0xff) | divisor_high << shift_amount;\n      temp6 = quotient_high >> 0x10;\n      quotient_low = dividend_high >> (temp5 & 0xff);\n      temp1 = dividend >> (temp5 & 0xff) | dividend_high << shift_amount;\n      temp4 = quotient_low / temp6;\n      temp3 = temp1 >> 0x10 | (quotient_low - temp6 * temp4) * 0x10000;\n      temp2 = temp4 * (quotient_high & 0xffff);\n      dividend = dividend << shift_amount;\n      quotient_low = temp4;\n      if (temp3 <= temp2 && temp2 - temp3 != 0) {\n        carry_flag = carry4_function(temp3,quotient_high);\n        temp3 = temp3 + quotient_high;\n        quotient_low = temp4 - 1;\n        if ((carry_flag == false) && (temp3 <= temp2 && temp2 - temp3 != 0)) {\n          quotient_low = temp4 - 2;\n          temp3 = temp3 + quotient_high;\n        }\n      }\n      temp4 = (temp3 - temp2) / temp6;\n      temp3 = temp1 & 0xffff | ((temp3 - temp2) - temp6 * temp4) * 0x10000;\n      temp6 = temp4 * (quotient_high & 0xffff);\n      temp2 = temp4;\n      if (temp3 <= temp6 && temp6 - temp3 != 0) {\n        carry_flag = carry4_function(temp3,quotient_high);\n        temp3 = temp3 + quotient_high;\n        temp2 = temp4 - 1;\n        if ((carry_flag == false) && (temp3 <= temp6 && temp6 - temp3 != 0)) {\n          temp2 = temp4 - 2;\n          temp3 = temp3 + quotient_high;\n        }\n      }\n      temp2 = temp2 | quotient_low << 0x10;\n      result = (ulonglong)temp2 * (ulonglong)(divisor << shift_amount);\n      if (CONCAT44(temp3 - temp6,dividend) < result) {\n        result = result - CONCAT44(quotient_high,divisor << shift_amount);\n        temp2 = temp2 - 1;\n      }\n      if (remainder != (uint *)0x0) {\n        quotient_low = ((temp3 - temp6) - (int)(result >> 0x20)) - (uint)(dividend < (uint)result);\n        *remainder = quotient_low << (temp5 & 0xff) | dividend - (uint)result >> shift_amount;\n        remainder[1] = quotient_low >> shift_amount;\n      }\n      return (ulonglong)temp2;\n    }\n    if ((divisor_high < dividend_high) || (divisor <= dividend)) {\n      carry_flag = dividend < divisor;\n      dividend = dividend - divisor;\n      dividend_high = (dividend_high - divisor_high) - (uint)carry_flag;\n      quotient_low = 1;\n    }\n    else {\n      quotient_low = 0;\n    }\n    quotient_high = 0;\n    if (remainder != (uint *)0x0) {\n      *remainder = dividend;\n      remainder[1] = dividend_high;\n      return (ulonglong)quotient_low;\n    }\n  }\n  return CONCAT44(quotient_high,quotient_low);\n}\n\n",
            "current_name": "divide_and_remainder_08000300",
            "entrypoint": "0x08000300",
            "imported": false,
            "improved": true,
            "renaming": {
                "CARRY4": "carry4_function",
                "FUN_08000300": "divide_and_remainder_08000300",
                "LZCOUNT": "leading_zeroes_count",
                "bVar11": "carry_flag",
                "iVar10": "shift_amount",
                "param_1": "dividend",
                "param_2": "dividend_high",
                "param_3": "divisor",
                "param_4": "divisor_high",
                "param_5": "remainder",
                "uVar1": "result",
                "uVar2": "temp1",
                "uVar3": "quotient_high",
                "uVar4": "quotient_low",
                "uVar5": "temp2",
                "uVar6": "temp3",
                "uVar7": "temp4",
                "uVar8": "temp5",
                "uVar9": "temp6"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080005e0": {
            "additional_data": {
                "": {
                    "": 2
                },
                "0x3f": {
                    "interrupt_number": 1
                },
                "DAT_": {
                    "dat_": 1
                },
                "FUN_080005e0": {
                    "call_software_interrupt": 1,
                    "execute_interrupt": 3,
                    "execute_software_interrupt": 6,
                    "execute_syscall": 1,
                    "execute_system_call": 3,
                    "get_file_contents": 1,
                    "interrupt_handler": 1,
                    "interrupt_registry": 1,
                    "invoke_software_interrupt": 1,
                    "invoke_system_interrupt": 2,
                    "perform_system_call": 2,
                    "perform_system_interrupt": 1,
                    "request_software_interrupt": 1,
                    "request_system_call": 1,
                    "send_software_interrupt": 1,
                    "send_system_interrupt": 1,
                    "trigger_software_interrupt": 3,
                    "trigger_system_interrupt": 1
                },
                "PTR_": {
                    "ptr_": 1
                },
                "software_interrupt": {
                    "execute_interrupt": 1,
                    "execute_software_interrupt": 1,
                    "execute_system_interrupt": 1,
                    "invoke_hardware_interrupt": 1,
                    "invoke_interrupt": 3,
                    "perform_interrupt": 1,
                    "send_interrupt": 1,
                    "trigger_interrupt": 2,
                    "trigger_software_interrupt": 2,
                    "trigger_syscall": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080005e4"
            ],
            "code": "\nvoid execute_software_interrupt_080005e0(void)\n\n{\n  invoke_interrupt(0x3f);\n  return;\n}\n\n",
            "current_name": "execute_software_interrupt_080005e0",
            "entrypoint": "0x080005e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080005e0": "execute_software_interrupt_080005e0",
                "software_interrupt": "invoke_interrupt"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080005e4": {
            "additional_data": {
                "FUN_080005e4": {
                    "execute_interrupt": 10,
                    "execute_interrupt_080005e4": 1,
                    "execute_interrupt_and_return": 2,
                    "execute_interrupt_and_return_result": 2,
                    "execute_interrupt_check": 1,
                    "execute_interrupt_handler": 13,
                    "execute_software_interrupt": 2
                },
                "param_1": {
                    "data": 1,
                    "handler_code": 1,
                    "handler_function": 1,
                    "handler_param_1": 1,
                    "in_value": 1,
                    "input": 1,
                    "input_1": 5,
                    "input_param": 9,
                    "input_val": 1,
                    "input_value": 3,
                    "interrupt_code": 1,
                    "interrupt_type": 4,
                    "value": 1,
                    "value1": 1
                },
                "param_2": {
                    "param_2": 3,
                    "unused": 1,
                    "unused_param": 4
                },
                "param_3": {
                    "param_3": 3,
                    "unused": 1,
                    "unused_param": 1,
                    "unused_param2": 1,
                    "unused_param_2": 1
                },
                "param_4": {
                    "additional_param": 1,
                    "flag": 1,
                    "flags": 1,
                    "handler_data": 2,
                    "handler_param_4": 1,
                    "input_2": 1,
                    "input_4": 4,
                    "interrupt_code": 1,
                    "interrupt_id": 1,
                    "interrupt_type": 1,
                    "out_value": 1,
                    "output_param": 7,
                    "output_val": 1,
                    "output_value": 3,
                    "param_4": 3,
                    "return_value": 1,
                    "value4": 1
                },
                "uVar1": {
                    "execution_result": 1,
                    "interrupt_result": 1,
                    "result": 16
                }
            },
            "called": [
                "FUN_080005e0"
            ],
            "calling": [
                "FUN_08000c4c"
            ],
            "code": "\nundefined4 execute_interrupt_handler_080005e4(undefined4 input_param,undefined4 unused_param,undefined4 param_3,undefined4 output_param)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000120 != 0) {\n    return 0;\n  }\n  result = execute_software_interrupt_080005e0(1,input_param,0,0,output_param);\n  return result;\n}\n\n",
            "current_name": "execute_interrupt_handler_080005e4",
            "entrypoint": "0x080005e4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080005e4": "execute_interrupt_handler_080005e4",
                "param_1": "input_param",
                "param_2": "unused_param",
                "param_4": "output_param",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000600": {
            "additional_data": {
                "0x49": {
                    "variable1": 1
                },
                "0x4a": {
                    "variable2": 1
                },
                "0x52": {
                    "variable4": 1
                },
                "FUN_08000600": {
                    "configure_and_process_data": 12,
                    "configure_and_process_serial_data": 3,
                    "configure_serial_port": 1,
                    "initialize_communication": 1,
                    "initialize_connection": 2,
                    "initialize_serial": 1,
                    "initialize_serial_communication": 5,
                    "initialize_serial_port": 6
                },
                "cVar1": {
                    "byte_value": 1,
                    "char_value": 2,
                    "communication_type": 1,
                    "config_flag": 1,
                    "config_option": 1,
                    "config_type": 2,
                    "config_value": 1,
                    "connection_status": 1,
                    "connection_type": 1,
                    "data_byte": 1,
                    "data_char": 1,
                    "data_flag": 1,
                    "data_indicator": 1,
                    "data_type": 4,
                    "port_state": 1,
                    "port_status": 2,
                    "port_type": 2,
                    "serial_config": 1,
                    "serial_config_char": 1,
                    "serial_data_type": 1,
                    "serial_mode": 2,
                    "serial_port_type": 1,
                    "signal": 1
                },
                "configure_serial_port_08004388": {
                    "configure_serial_port": 3
                },
                "iVar2": {
                    "function_result": 1,
                    "iteration_count": 1,
                    "loop_condition": 1,
                    "loop_result": 1,
                    "loop_variable": 2,
                    "process_result": 1,
                    "result": 12,
                    "return_val": 1,
                    "return_value": 11
                },
                "param_1": {
                    "communication_data": 1,
                    "config_array": 1,
                    "config_data": 2,
                    "configurations": 1,
                    "connection": 1,
                    "connection_ptr": 1,
                    "data": 4,
                    "data_ptr": 3,
                    "input_data": 1,
                    "port_config": 1,
                    "serial": 1,
                    "serial_buffer": 1,
                    "serial_communication_config": 1,
                    "serial_configuration": 1,
                    "serial_data": 4,
                    "serial_data_ptr": 1,
                    "serial_port": 5,
                    "serial_port_ptr": 1
                },
                "param_2": {
                    "baud_rate": 3,
                    "config": 1,
                    "config_param": 7,
                    "config_value": 1,
                    "configuration": 1,
                    "param": 2,
                    "param2": 1,
                    "port": 1,
                    "port_config": 5,
                    "port_configuration": 2,
                    "port_number": 2,
                    "port_parameter": 1,
                    "port_settings": 1,
                    "serial_port_config": 1,
                    "serial_port_param": 1,
                    "value": 1
                },
                "process_data_080041bc": {
                    "process_data": 3
                },
                "process_data_and_update_array_08004110": {
                    "process_and_update_array": 1,
                    "process_and_update_data_array": 2
                }
            },
            "called": [
                "FUN_08004110",
                "FUN_080041bc",
                "FUN_08004388"
            ],
            "calling": [
                "FUN_08000c4c"
            ],
            "code": "\nvoid configure_and_process_serial_data_08000600(int **serial_port,undefined4 config_param)\n\n{\n  char data_type;\n  int result;\n  \n  data_type = *(char *)((int)serial_port + 5);\n  if (data_type == '\\x02') {\n    *serial_port = &DAT_20000338;\n  }\n  else if (data_type == '\\x03') {\n    *serial_port = &DAT_20000338;\n  }\n  else if (data_type == '\\x01') {\n    *serial_port = &DAT_20000338;\n  }\n  else {\n    *serial_port = &DAT_20000338;\n  }\n  configure_serial_port(*serial_port,config_param,6);\n  if (1 < *(byte *)((int)serial_port + 6)) {\n    process_and_update_data_array(*(byte *)((int)serial_port + 6),1);\n    process_data(*(undefined *)((int)serial_port + 6),0);\n  }\n  do {\n    result = (**(code **)(**serial_port + 0xc))();\n  } while (-1 < result);\n  *(undefined *)((int)serial_port + 0x49) = 0;\n  *(undefined *)((int)serial_port + 0x4a) = 0;\n  *(undefined2 *)(serial_port + 0x15) = 0;\n  *(undefined2 *)((int)serial_port + 0x52) = 0;\n  *(undefined2 *)(serial_port + 0x14) = 0;\n  return;\n}\n\n",
            "current_name": "configure_and_process_serial_data_08000600",
            "entrypoint": "0x08000600",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000600": "configure_and_process_serial_data_08000600",
                "cVar1": "data_type",
                "configure_serial_port_08004388": "configure_serial_port",
                "iVar2": "result",
                "param_1": "serial_port",
                "param_2": "config_param",
                "process_data_080041bc": "process_data",
                "process_data_and_update_array_08004110": "process_and_update_data_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800066c": {
            "additional_data": {
                "1000": {
                    "constant_value": 1,
                    "default_time": 1
                },
                "FUN_0800066c": {
                    "initialize_data": 6,
                    "initialize_struct": 1,
                    "set_configuration": 1,
                    "set_function_params": 1,
                    "set_param_values": 2,
                    "set_parameter_value": 1,
                    "set_parameters": 3,
                    "set_params": 2,
                    "update_data": 8,
                    "update_data_entry": 2,
                    "update_parameter": 1,
                    "update_parameter_data": 1,
                    "update_parameters": 1
                },
                "char": {
                    "byte": 1,
                    "byte_value": 1
                },
                "param_1": {
                    "arg1": 1,
                    "base_address": 2,
                    "buffer_address": 1,
                    "config": 1,
                    "data": 3,
                    "data_address": 7,
                    "data_entry": 1,
                    "data_entry_address": 1,
                    "data_location": 1,
                    "data_offset": 1,
                    "data_pointer": 6,
                    "data_structure": 1,
                    "memory_address": 1,
                    "obj_address": 2,
                    "obj_ptr": 1,
                    "struct_ptr": 1
                },
                "param_2": {
                    "arg2": 1,
                    "data_value": 1,
                    "input_value": 2,
                    "new_data": 1,
                    "new_value": 8,
                    "new_value1": 1,
                    "param1_value": 1,
                    "param_1_value": 1,
                    "param_value": 2,
                    "value": 12,
                    "value1": 1
                },
                "param_3": {
                    "arg3": 1,
                    "count": 1,
                    "input_limit": 1,
                    "limit": 23,
                    "param2_value": 1,
                    "param_2_value": 1,
                    "param_limit": 1,
                    "size_limit": 1,
                    "value2": 1
                },
                "param_4": {
                    "additional_data": 5,
                    "additional_value": 2,
                    "arg4": 1,
                    "config": 1,
                    "data": 5,
                    "data_value": 1,
                    "extra_data": 1,
                    "extra_value": 1,
                    "flag": 1,
                    "info": 1,
                    "new_data": 1,
                    "new_value2": 1,
                    "other_data": 1,
                    "other_value": 1,
                    "param": 1,
                    "param3_value": 1,
                    "param_3_value": 1,
                    "param_data": 2,
                    "param_value": 1,
                    "unknown_data": 1,
                    "value3": 1
                },
                "param_5": {
                    "count": 1,
                    "delay": 1,
                    "flag": 1,
                    "unnamed_parameter": 1
                },
                "param_6": {
                    "constant": 1,
                    "reset_value": 1,
                    "result": 1
                },
                "param_7": {
                    "unused_parameter": 1,
                    "unused_variable": 1
                },
                "undefined": {
                    "mem_byte": 1
                },
                "undefined2": {
                    "mem_short": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08000682"
            ],
            "code": "\nvoid update_data_entry_0800066c(int data_address,mem_byte value,int limit,mem_byte data)\n\n{\n  *(mem_byte *)(data_address + 4) = value;\n  if (3 < limit) {\n    limit = 0;\n  }\n  *(byte *)(data_address + 5) = (byte)limit;\n  *(mem_byte *)(data_address + 6) = data;\n  *(mem_short *)(data_address + 0x56) = 1000;\n  return;\n}\n\n",
            "current_name": "update_data_entry_0800066c",
            "entrypoint": "0x0800066c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800066c": "update_data_entry_0800066c",
                "char": "byte",
                "param_1": "data_address",
                "param_2": "value",
                "param_3": "limit",
                "param_4": "data",
                "undefined": "mem_byte",
                "undefined2": "mem_short"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000682": {
            "additional_data": {
                "FUN_08000682": {
                    "initialize": 1,
                    "initialize_data_entry": 1,
                    "update_and_return_param": 2,
                    "update_and_return_value": 1,
                    "update_data_entry": 25,
                    "update_entry_function": 1
                },
                "original_variable_name_1": {
                    "new_variable_name_1": 1
                },
                "original_variable_name_2": {
                    "new_variable_name_2": 1
                },
                "param_1": {
                    "data": 4,
                    "data_entry": 1,
                    "entry": 6,
                    "entry_data": 3,
                    "entry_id": 1,
                    "entry_parameter": 2,
                    "input": 2,
                    "input_data": 1,
                    "input_param": 6,
                    "input_value": 4,
                    "value": 1
                },
                "param_n": {
                    "new_parameter_name_n": 1
                },
                "return": {
                    "data": 1
                },
                "update_data_entry_0800066c": {
                    "initialize_data_entry": 1,
                    "update_data_entry": 5,
                    "update_data_entry_helper": 2,
                    "update_entry": 1
                }
            },
            "called": [
                "FUN_0800066c"
            ],
            "calling": [
                "FUN_08000690"
            ],
            "code": "\nundefined4 update_data_entry_08000682(undefined4 entry)\n\n{\n  update_data_entry_08000682();\n  data entry;\n}\n\n",
            "current_name": "update_data_entry_08000682",
            "entrypoint": "0x08000682",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000682": "update_data_entry_08000682",
                "param_1": "entry",
                "return": "data",
                "update_data_entry_0800066c": "update_data_entry"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000690": {
            "additional_data": {
                "DAT_20000124": {
                    "data_entry": 3
                },
                "FUN_08000690": {
                    "check_and_update_data_entry": 1,
                    "check_data_entry": 1,
                    "handle_data_entry": 2,
                    "handle_param": 1,
                    "handle_param_change": 1,
                    "process_data": 3,
                    "process_data_entry": 2,
                    "update_data": 1,
                    "update_data_entry": 2,
                    "update_data_entry_if_condition_is_met": 1,
                    "update_data_entry_if_param1_is_1": 3,
                    "update_data_entry_if_param1_is_one": 1,
                    "update_data_entry_if_param1_is_true": 1,
                    "update_data_entry_if_param_1_is_true": 2,
                    "update_data_entry_if_param_one_equals_one": 1,
                    "update_data_entry_if_param_valid": 1,
                    "update_data_entry_if_required": 1,
                    "update_data_if_param1_is_one": 1,
                    "update_data_if_param_1_is_1": 1,
                    "update_entry_if_needed": 1,
                    "update_if_param1_is_1": 1,
                    "update_if_param1_true": 1,
                    "update_if_parameter_one_is_one": 1
                },
                "param_1": {
                    "check_value": 1,
                    "check_variable": 1,
                    "condition": 3,
                    "entry_condition": 1,
                    "entry_type": 2,
                    "flag": 1,
                    "flag_for_update": 1,
                    "input1": 1,
                    "input_condition": 1,
                    "input_flag": 1,
                    "input_param": 1,
                    "input_value": 1,
                    "is_condition_met": 1,
                    "is_param1": 1,
                    "is_param1_one": 2,
                    "is_param1_true": 2,
                    "is_param_1": 1,
                    "param_1": 1,
                    "setting": 1,
                    "status": 5,
                    "status_flag": 1,
                    "value1": 1
                },
                "param_2": {
                    "code": 1,
                    "comparison_value": 3,
                    "condition_param": 1,
                    "entry_status": 1,
                    "entry_value": 1,
                    "input2": 1,
                    "input_value": 2,
                    "param2": 1,
                    "param2_value": 4,
                    "param_2": 1,
                    "param_2_value": 1,
                    "special_value": 2,
                    "value": 9,
                    "value2": 1,
                    "value_to_check": 1,
                    "value_to_compare": 1
                },
                "param_3": {
                    "arg1": 1,
                    "arg3": 1,
                    "argument_1": 1,
                    "param3": 1,
                    "param_3": 1,
                    "unused_param": 2,
                    "unused_param3": 2,
                    "unused_param_1": 1,
                    "unused_parameter": 1
                },
                "param_4": {
                    "additional_data": 2,
                    "additional_info": 1,
                    "arg2": 1,
                    "arg4": 1,
                    "argument": 1,
                    "argument_2": 1,
                    "config_param": 1,
                    "data": 2,
                    "data_entry": 1,
                    "data_param": 1,
                    "data_to_update": 2,
                    "data_value": 1,
                    "entry_data": 1,
                    "entry_value": 1,
                    "param4": 2,
                    "param4_value": 3,
                    "param_4": 2,
                    "second_param": 1,
                    "unused_param_2": 1,
                    "update_parameter": 1,
                    "update_value": 1,
                    "updated_value": 1,
                    "value4": 1,
                    "variable_param_4": 1
                },
                "update_data_entry_08000682": {
                    "update_data_entry": 9,
                    "update_entry": 2
                }
            },
            "called": [
                "FUN_08000682"
            ],
            "calling": [],
            "code": "\nvoid update_data_entry_if_param1_is_1_08000690(int status,int value,undefined4 unused_param,undefined4 param4_value)\n\n{\n  if (status != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    update_data_entry(&DAT_20000124,1,0,0,param4_value);\n  }\n  return;\n}\n\n",
            "current_name": "update_data_entry_if_param1_is_1_08000690",
            "entrypoint": "0x08000690",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000690": "update_data_entry_if_param1_is_1_08000690",
                "param_1": "status",
                "param_2": "value",
                "param_3": "unused_param",
                "param_4": "param4_value",
                "update_data_entry_08000682": "update_data_entry"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080006b4": {
            "additional_data": {
                "0x3f": {
                    "max_index_limit": 1
                },
                "DAT_": {
                    "": 1,
                    "dat_": 1
                },
                "DAT_080041bc": {
                    "process_data_subfunction_data": 1
                },
                "FUN_080006b4": {
                    "decode_and_count": 1,
                    "extract_and_process_data": 1,
                    "process_and_count_bytes": 1,
                    "process_and_count_data": 7,
                    "process_data": 19,
                    "process_param": 1,
                    "process_param_data": 1
                },
                "PTR_": {
                    "": 1,
                    "ptr_": 1
                },
                "PTR_080041bc": {
                    "process_data_subfunction_ptr": 1
                },
                "PTR_DAT_080041bc": {
                    "data_pointer": 1
                },
                "PTR_FUN_080006b4": {
                    "func_ptr": 1,
                    "function_pointer1": 1,
                    "function_ptr": 1
                },
                "PTR_FUN_080006b4_0xc": {
                    "update_func_ptr": 1
                },
                "PTR_FUN_080006b4_1": {
                    "function_pointer2": 1
                },
                "PTR_FUN_080006b4_8": {
                    "process_func_ptr": 1
                },
                "bVar1": {
                    "exceeded_limit": 3,
                    "exceeded_threshold": 2,
                    "has_overflow": 2,
                    "is_exceed_limit": 1,
                    "is_exceeded": 1,
                    "is_full": 8,
                    "is_limit_reached": 1,
                    "is_max_reached": 1,
                    "is_overflow": 8,
                    "is_process_complete": 1,
                    "is_threshold_exceeded": 1,
                    "overflow_flag": 1,
                    "reached_max": 1
                },
                "bVar4": {
                    "byte_count": 1,
                    "byte_counter": 1,
                    "count": 4,
                    "counter": 14,
                    "current_count": 1,
                    "current_index": 1,
                    "data_index": 2,
                    "index": 5,
                    "new_index": 1,
                    "processed_count": 1
                },
                "iVar3": {
                    "function_result": 2,
                    "process_result": 1,
                    "result": 8,
                    "return_code": 2,
                    "return_value": 16,
                    "status": 2
                },
                "param_1": {
                    "data": 21,
                    "data_pointer": 2,
                    "data_ptr": 5,
                    "function_params": 1,
                    "input_data": 1,
                    "param_list": 1
                },
                "process_data_080041bc": {
                    "process_data": 13,
                    "process_data_func": 2,
                    "process_data_function": 2,
                    "process_data_helper": 1,
                    "process_data_subfunction": 1,
                    "process_data_value": 1
                },
                "uVar2": {
                    "character": 1,
                    "current_value": 1,
                    "data": 1,
                    "data_element": 1,
                    "data_value": 5,
                    "new_value": 2,
                    "processed_byte": 1,
                    "processed_data": 2,
                    "result": 15,
                    "return_value": 1,
                    "temp_value": 1
                }
            },
            "called": [
                "FUN_080041bc"
            ],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nint process_and_count_data_080006b4(int **data)\n\n{\n  bool is_full;\n  undefined result;\n  int return_value;\n  byte counter;\n  \n  if (1 < *(byte *)((int)data + 6)) {\n    process_data(*(byte *)((int)data + 6),0);\n  }\n  *(undefined *)((int)data + 0x49) = 0;\n  if (*(byte *)((int)data + 5) < 4) {\n    is_full = false;\n    while (return_value = (**(code **)(**data + 8))(), return_value != 0) {\n      counter = *(byte *)((int)data + 0x49);\n      result = (**(code **)(**data + 0xc))();\n      *(undefined *)((int)data + counter + 9) = result;\n      counter = *(char *)((int)data + 0x49) + 1;\n      *(byte *)((int)data + 0x49) = counter;\n      if (0x3f < counter) {\n        is_full = true;\n      }\n    }\n  }\n  else {\n    is_full = false;\n  }\n  *(short *)(data + 0x14) = *(short *)(data + 0x14) + 1;\n  if (is_full) {\n    *(short *)(data + 0x15) = *(short *)(data + 0x15) + 1;\n    return -3;\n  }\n  return (int)*(char *)((int)data + 0x49);\n}\n\n",
            "current_name": "process_and_count_data_080006b4",
            "entrypoint": "0x080006b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080006b4": "process_and_count_data_080006b4",
                "bVar1": "is_full",
                "bVar4": "counter",
                "iVar3": "return_value",
                "param_1": "data",
                "process_data_080041bc": "process_data",
                "uVar2": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000728": {
            "additional_data": {
                "FUN_08000728": {
                    "calculate_checksum": 16,
                    "calculate_crc": 7,
                    "calculate_crc16": 4,
                    "calculate_crc_swap_bytes": 1,
                    "checksum": 2,
                    "reverse_checksum": 1
                },
                "bVar1": {
                    "bit": 6,
                    "bit_count": 3,
                    "bit_counter": 7,
                    "bit_index": 4,
                    "bit_pos": 2,
                    "bit_shift": 1,
                    "j": 1
                },
                "byte": {
                    "byte": 1
                },
                "param_1": {
                    "data": 2,
                    "data_address": 15,
                    "data_offset": 1,
                    "data_ptr": 1,
                    "data_start": 5,
                    "data_start_address": 5,
                    "input_address": 1,
                    "input_buffer_address": 1
                },
                "param_2": {
                    "buffer_length": 1,
                    "data_length": 24,
                    "data_size": 3,
                    "input_length": 1,
                    "length": 2
                },
                "uVar2": {
                    "checksum": 15,
                    "crc": 8,
                    "crc16": 1,
                    "crc_register": 1,
                    "crc_value": 1,
                    "initial_value": 1,
                    "seed": 2
                },
                "uVar3": {
                    "bit": 15,
                    "bit0": 2,
                    "bit_check": 1,
                    "bit_flag": 1,
                    "bit_mask": 2,
                    "bit_value": 2,
                    "carry_bit": 1,
                    "lsb": 3,
                    "temp": 1
                },
                "uVar4": {
                    "byte_index": 1,
                    "current_byte": 1,
                    "i": 11,
                    "index": 15
                }
            },
            "called": [],
            "calling": [
                "FUN_0800076c"
            ],
            "code": "\nuint calculate_checksum_08000728(int data_address,int data_length)\n\n{\n  byte bit_counter;\n  uint checksum;\n  uint bit;\n  uint index;\n  \n  checksum = 0xffff;\n  for (index = 0; (int)index < data_length; index = index + 1 & 0xff) {\n    checksum = checksum ^ *(byte *)(data_address + index + 9);\n    for (bit_counter = 1; bit_counter < 9; bit_counter = bit_counter + 1) {\n      bit = checksum & 1;\n      checksum = checksum >> 1;\n      if (bit != 0) {\n        checksum = checksum ^ 0xa001;\n      }\n    }\n  }\n  return (checksum & 0xff) << 8 | checksum >> 8;\n}\n\n",
            "current_name": "calculate_checksum_08000728",
            "entrypoint": "0x08000728",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000728": "calculate_checksum_08000728",
                "bVar1": "bit_counter",
                "param_1": "data_address",
                "param_2": "data_length",
                "uVar2": "checksum",
                "uVar3": "bit",
                "uVar4": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800076c": {
            "additional_data": {
                "FUN_0800076c": {
                    "calculate_and_update_checksum": 1,
                    "calculate_checksum_and_update_data": 2,
                    "update_checksum": 11,
                    "update_checksum_and_process_data": 14,
                    "update_checksum_in_data": 2,
                    "update_data_checksum": 1
                },
                "calculate_checksum_08000728": {
                    "calculate_checksum": 8
                },
                "iVar2": {
                    "data_length": 1,
                    "data_value": 2,
                    "index": 1,
                    "loop_counter": 1,
                    "process_result": 1,
                    "result": 19,
                    "return_value": 6
                },
                "initialize_data_values_08004204": {
                    "initialize_data_values": 8
                },
                "param_1": {
                    "data": 22,
                    "data_pointer": 1,
                    "data_ptr": 7,
                    "input_array": 1
                },
                "param_2": {
                    "arg1": 1,
                    "arg2": 1,
                    "arg_2": 1,
                    "param2": 22,
                    "param_2": 3,
                    "value1": 2,
                    "value_1": 1
                },
                "param_3": {
                    "arg2": 1,
                    "arg3": 1,
                    "arg_3": 1,
                    "param3": 22,
                    "param_3": 3,
                    "value2": 2,
                    "value_2": 1
                },
                "param_4": {
                    "arg3": 1,
                    "arg4": 1,
                    "arg_4": 1,
                    "param4": 22,
                    "param_4": 3,
                    "value3": 2,
                    "value_3": 1
                },
                "process_data_080041bc": {
                    "process_data": 8
                },
                "uVar1": {
                    "calculated_checksum": 1,
                    "checksum": 29,
                    "checksum_high": 1
                },
                "uVar3": {
                    "byte_index": 4,
                    "byte_offset": 1,
                    "byte_value": 2,
                    "checksum_index": 1,
                    "checksum_next_index": 1,
                    "data_index": 2,
                    "data_size": 1,
                    "index": 16,
                    "length": 2,
                    "offset": 1
                }
            },
            "called": [
                "FUN_08000728",
                "FUN_08004204",
                "FUN_080041bc"
            ],
            "calling": [
                "FUN_08000b04",
                "FUN_08000a7a",
                "FUN_080008e2",
                "FUN_08000a00",
                "FUN_08000a4e",
                "FUN_08000b54",
                "FUN_08000998"
            ],
            "code": "\nvoid update_checksum_and_process_data_0800076c(int **data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 checksum;\n  int result;\n  uint index;\n  \n  index = (uint)*(byte *)((int)data + 0x49);\n  checksum = calculate_checksum(data,index,param3,param4,param4);\n  *(char *)((int)data + index + 9) = (char)((ushort)checksum >> 8);\n  index = index + 1 & 0xff;\n  *(char *)((int)data + index + 9) = (char)checksum;\n  *(char *)((int)data + 0x49) = (char)index + '\\x01';\n  if (1 < *(byte *)((int)data + 6)) {\n    process_data(*(byte *)((int)data + 6),1);\n  }\n  if (*(byte *)((int)data + 5) < 4) {\n    (**(code **)(**data + 4))(*data,(int)data + 9,*(undefined *)((int)data + 0x49));\n  }\n  if (1 < *(byte *)((int)data + 6)) {\n    process_data(*(byte *)((int)data + 6),0);\n  }\n  if (*(byte *)((int)data + 5) < 4) {\n    do {\n      result = (**(code **)(**data + 0xc))();\n    } while (-1 < result);\n  }\n  *(undefined *)((int)data + 0x49) = 0;\n  result = initialize_data_values();\n  data[0x17] = (int *)(result + (uint)*(ushort *)((int)data + 0x56));\n  *(short *)((int)data + 0x52) = *(short *)((int)data + 0x52) + 1;\n  return;\n}\n\n",
            "current_name": "update_checksum_and_process_data_0800076c",
            "entrypoint": "0x0800076c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800076c": "update_checksum_and_process_data_0800076c",
                "calculate_checksum_08000728": "calculate_checksum",
                "iVar2": "result",
                "initialize_data_values_08004204": "initialize_data_values",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "process_data_080041bc": "process_data",
                "uVar1": "checksum",
                "uVar3": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080007f0": {
            "additional_data": {
                "FUN_080007f0": {
                    "check_and_update_values": 1,
                    "check_combination": 2,
                    "check_combinations": 1,
                    "check_condition": 8,
                    "check_conditions": 4,
                    "check_threshold": 2,
                    "check_value": 1,
                    "check_values": 2,
                    "combine_values_and_check": 1,
                    "detect_inconsistency": 1,
                    "perform_operation": 1,
                    "perform_validation_check": 1,
                    "validate_and_calculate": 1,
                    "validate_condition": 1,
                    "validate_input": 3
                },
                "bVar1": {
                    "condition": 1,
                    "condition_met": 2,
                    "found": 3,
                    "found_combination": 1,
                    "found_match": 8,
                    "is_condition_met": 1,
                    "is_condition_true": 1,
                    "is_match": 9,
                    "is_matched": 3,
                    "is_matching": 1,
                    "match_found": 1
                },
                "bVar2": {
                    "combined_byte": 2,
                    "combined_result": 1,
                    "combined_value": 26,
                    "combined_value_1": 1,
                    "result": 1
                },
                "cVar3": {
                    "combined_1": 1,
                    "combined_result1": 1,
                    "combined_value1": 10,
                    "combined_value_1": 9,
                    "combined_value_2": 1,
                    "combined_value_a": 1,
                    "first_combined_value": 1,
                    "result1": 4,
                    "result_1": 3
                },
                "cVar4": {
                    "combined_2": 1,
                    "combined_result2": 1,
                    "combined_value2": 10,
                    "combined_value_2": 9,
                    "combined_value_3": 1,
                    "combined_value_b": 1,
                    "result2": 4,
                    "result_2": 3,
                    "second_combined_value": 1
                },
                "iVar5": {
                    "combined_int_1": 1,
                    "combined_result": 2,
                    "combined_result1": 3,
                    "combined_result_1": 2,
                    "combined_value1": 6,
                    "combined_value1_int": 1,
                    "combined_value1_shifted": 1,
                    "combined_value_1": 5,
                    "combined_value_1_int": 1,
                    "combined_value_1_shifted": 1,
                    "combined_value_3": 1,
                    "combined_value_4": 1,
                    "combined_value_result": 1,
                    "first_value": 1,
                    "result1": 2,
                    "result_1": 2
                },
                "iVar6": {
                    "index": 1
                },
                "iVar7": {
                    "byte_value": 1,
                    "combined_int_2": 1,
                    "combined_result2": 3,
                    "combined_result_2": 2,
                    "combined_value2": 6,
                    "combined_value2_shifted": 1,
                    "combined_value_2": 5,
                    "combined_value_2_shifted": 1,
                    "count": 2,
                    "length": 1,
                    "loop_counter": 1,
                    "result2": 1,
                    "result_2": 2,
                    "temp": 1,
                    "upper_limit": 1,
                    "value": 2
                },
                "param_1": {
                    "address": 1,
                    "arg1": 2,
                    "array_address": 1,
                    "base_address": 2,
                    "check_ptr": 1,
                    "data": 5,
                    "function_parameter": 1,
                    "input": 6,
                    "input_address": 1,
                    "input_data": 3,
                    "input_data_address": 1,
                    "input_parameter": 1,
                    "input_ptr": 4,
                    "param_1": 1,
                    "value1": 1
                },
                "param_2": {
                    "another_parameter": 1,
                    "arg2": 2,
                    "array_size": 1,
                    "flag": 2,
                    "flags": 2,
                    "input_value": 1,
                    "input_var": 1,
                    "length": 1,
                    "param2": 4,
                    "param_2": 1,
                    "param_ptr": 1,
                    "some_flag": 1,
                    "status": 1,
                    "status_parameter": 1,
                    "unused_parameter_1": 1,
                    "value": 8,
                    "value2": 1,
                    "value_1": 1
                },
                "param_3": {
                    "arg3": 2,
                    "condition": 2,
                    "condition_value": 1,
                    "count": 1,
                    "data": 2,
                    "input_value": 2,
                    "param": 1,
                    "param3": 1,
                    "param_3": 1,
                    "parameter": 1,
                    "range": 1,
                    "size": 1,
                    "value": 6,
                    "value1": 3,
                    "value3": 1,
                    "value_1": 2,
                    "value_2": 1,
                    "value_parameter": 2
                },
                "param_4": {
                    "additional_param": 1,
                    "additional_parameter": 1,
                    "arg4": 2,
                    "constant": 1,
                    "context": 1,
                    "data": 1,
                    "extra": 1,
                    "extra_param": 3,
                    "flag": 2,
                    "flag_parameter": 1,
                    "length": 1,
                    "limit": 1,
                    "param": 1,
                    "param4": 4,
                    "param_4": 1,
                    "parameter": 1,
                    "threshold": 1,
                    "unused_parameter_2": 1,
                    "value": 1,
                    "value2": 1,
                    "value4": 1,
                    "value_2": 2,
                    "value_3": 1
                },
                "switchD_08000816_caseD_1": {
                    "execute_combined_case": 1
                },
                "uVar6": {
                    "counter": 10,
                    "index": 17,
                    "iterator": 1,
                    "loop_counter": 1,
                    "loop_iterator": 1
                }
            },
            "called": [
                "FUN_08004640"
            ],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nundefined4 check_condition_080007f0(int input,undefined4 value,uint value,undefined4 param4)\n\n{\n  bool is_match;\n  byte combined_value;\n  char combined_value1;\n  char combined_value2;\n  int combined_value1;\n  uint index;\n  int combined_value2;\n  \n  index = 0;\n  do {\n    if (7 < index) {\n      is_match = false;\nLAB_0800080a:\n      if (!is_match) {\n        *(short *)(input + 0x54) = *(short *)(input + 0x54) + 1;\n        return 1;\n      }\n      combined_value2 = *(byte *)(input + 10) - 1;\n      switch(*(byte *)(input + 10)) {\n      case 1:\n      case 2:\n      case 0xf:\n        goto execute_combined_case;\n      case 3:\n      case 4:\n      case 0x10:\n        combined_value1 = combine_values_08004640(*(undefined *)(input + 0xb),*(undefined *)(input + 0xc),value,\n                             combined_value2,param4);\n        combined_value2 = combine_values_08004640(*(undefined *)(input + 0xd),*(undefined *)(input + 0xe));\n        if (*(byte *)(input + 0x60) < (byte)(combined_value2 + combined_value1)) {\n          return 2;\n        }\n        return 0;\n      case 5:\n        combined_value2 = combine_values_08004640(*(undefined *)(input + 0xb),*(undefined *)(input + 0xc),value,\n                             combined_value2,param4);\n        if ((uint)*(byte *)(input + 0x60) < (uint)(combined_value2 << 0x14) >> 0x18) {\n          return 2;\n        }\n        return 0;\n      case 6:\n        combined_value = combine_values_08004640(*(undefined *)(input + 0xb),*(undefined *)(input + 0xc),value,\n                             combined_value2,param4);\n        if (*(byte *)(input + 0x60) < combined_value) {\n          return 2;\n        }\n        return 0;\n      default:\n        return 0;\n      }\n    }\n    value = (uint)*(byte *)(input + 10);\n    if ((byte)(&DAT_08005a10)[index] == value) {\n      is_match = true;\n      goto LAB_0800080a;\n    }\n    index = index + 1 & 0xff;\n  } while( true );\nexecute_combined_case:\n  combined_value2 = combine_values_08004640(*(undefined *)(input + 0xb),*(undefined *)(input + 0xc),value,combined_value2,\n                       param4);\n  combined_value1 = combine_values_08004640(*(undefined *)(input + 0xd),*(undefined *)(input + 0xe));\n  if ((uint)*(byte *)(input + 0x60) <\n      (((uint)(combined_value2 << 0xc) >> 0x10) + ((uint)(combined_value1 << 0xc) >> 0x10) & 0xff)) {\n    return 2;\n  }\n  return 0;\n}\n\n",
            "current_name": "check_condition_080007f0",
            "entrypoint": "0x080007f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080007f0": "check_condition_080007f0",
                "bVar1": "is_match",
                "bVar2": "combined_value",
                "cVar3": "combined_value1",
                "cVar4": "combined_value2",
                "iVar5": "combined_value1",
                "iVar7": "combined_value2",
                "param_1": "input",
                "param_2": "value",
                "param_3": "value",
                "param_4": "param4",
                "switchD_08000816_caseD_1": "execute_combined_case",
                "uVar6": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080008cc": {
            "additional_data": {
                "0x49": {
                    "constant": 1,
                    "constant_value": 1,
                    "flag_value": 1,
                    "status_offset": 1
                },
                "0x80": {
                    "bit_mask": 1,
                    "mask": 1,
                    "xor_value": 1
                },
                "0xb": {
                    "new_byte_address": 1,
                    "new_value_pointer_offset": 1,
                    "value_addr": 1
                },
                "10": {
                    "flag_byte_offset": 1,
                    "flags_byte": 1,
                    "xor_value_offset": 1
                },
                "3": {
                    "constant_value": 1
                },
                "4": {
                    "new_value_offset": 1,
                    "src_byte": 1
                },
                "9": {
                    "dst_addr": 1,
                    "previous_value_offset": 1
                },
                "FUN_080008cc": {
                    "copy_and_flip_data": 1,
                    "copy_and_modify_data": 13,
                    "copy_and_set_flags": 2,
                    "copy_and_toggle": 1,
                    "copy_and_toggle_bits": 1,
                    "copy_bytes_and_toggle_flag": 1,
                    "copy_data": 4,
                    "copy_data_and_toggle_flag": 3,
                    "copy_data_and_update_flag": 1,
                    "copy_data_to_buffer": 1,
                    "update_data_structure": 2,
                    "update_parameter": 1
                },
                "param_1": {
                    "base_address": 3,
                    "base_pointer": 1,
                    "buffer": 1,
                    "data_address": 8,
                    "data_offset": 1,
                    "data_pointer": 4,
                    "data_structure": 1,
                    "data_structure_index": 1,
                    "dest_address": 1,
                    "destination": 2,
                    "dst_ptr": 1,
                    "source": 2,
                    "source_address": 2,
                    "source_offset": 1,
                    "src_addr": 1,
                    "target_address": 1
                },
                "param_10": {
                    "new_value": 1
                },
                "param_11": {
                    "control": 1
                },
                "param_12": {
                    "status": 1
                },
                "param_13": {
                    "code": 1
                },
                "param_14": {
                    "position": 1
                },
                "param_15": {
                    "option": 1
                },
                "param_16": {
                    "mask": 1
                },
                "param_17": {
                    "identifier": 1
                },
                "param_2": {
                    "data": 3,
                    "data_value": 1,
                    "new_byte": 1,
                    "new_data": 6,
                    "new_value": 9,
                    "source": 2,
                    "source_byte": 1,
                    "source_data": 1,
                    "src_data": 1,
                    "value": 3,
                    "value_to_copy": 2,
                    "value_to_insert": 1
                },
                "param_3": {
                    "destination": 1,
                    "size": 1
                },
                "param_4": {
                    "flag": 2
                },
                "param_5": {
                    "constant": 2
                },
                "param_6": {
                    "offset": 1,
                    "value": 1
                },
                "param_7": {
                    "length": 1,
                    "unknown": 1
                },
                "param_8": {
                    "counter": 1
                },
                "param_9": {
                    "index": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nvoid copy_and_modify_data_080008cc(int data_address,undefined new_value)\n\n{\n  *(undefined *)(data_address + 9) = *(undefined *)(data_address + 4);\n  *(byte *)(data_address + 10) = *(byte *)(data_address + 10) ^ 0x80;\n  *(undefined *)(data_address + 0xb) = new_value;\n  *(undefined *)(data_address + 0x49) = 3;\n  return;\n}\n\n",
            "current_name": "copy_and_modify_data_080008cc",
            "entrypoint": "0x080008cc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080008cc": "copy_and_modify_data_080008cc",
                "param_1": "data_address",
                "param_2": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080008e2": {
            "additional_data": {
                "FUN_080008e2": {
                    "calculate_checksum": 1,
                    "calculate_combined_value_and_set": 1,
                    "combine_and_process_data": 8,
                    "combine_and_process_values": 2,
                    "combine_and_update_checksum": 1,
                    "combine_values_and_update_checksum": 2,
                    "process_data": 12,
                    "update_data_and_calculate_checksum": 2,
                    "update_data_processing": 1
                },
                "F_UNK_080008e2": {
                    "update_values": 1
                },
                "cVar5": {
                    "bit_shifted": 1,
                    "bit_value": 9,
                    "char_value": 3,
                    "modified_value": 1,
                    "offset": 1,
                    "result_char": 1,
                    "shifted_bits": 2,
                    "shifted_byte": 2,
                    "shifted_char": 5,
                    "shifted_value": 6
                },
                "combine_values_08004640": {
                    "combine_values": 1
                },
                "iVar1": {
                    "combined_offset": 1,
                    "combined_value": 22,
                    "combined_value1": 5,
                    "result": 2,
                    "result1": 1
                },
                "iVar6": {
                    "address": 3,
                    "array_index": 1,
                    "based_index": 1,
                    "byte_address": 2,
                    "byte_index": 1,
                    "byte_offset": 2,
                    "byte_pointer": 1,
                    "byte_ptr": 1,
                    "dynamic_index": 1,
                    "modified_value": 1,
                    "offset": 8,
                    "target_addr": 1,
                    "temp_value": 1,
                    "temp_var": 2,
                    "temp_variable": 1,
                    "updated_byte_value": 1,
                    "updated_value": 1,
                    "updated_value_address": 1,
                    "var1": 1
                },
                "param_1": {
                    "address1": 1,
                    "array_ptr": 1,
                    "data": 5,
                    "data_address": 2,
                    "data_array": 2,
                    "data_buffer": 2,
                    "data_pointer": 1,
                    "data_ptr": 8,
                    "input_buffer": 1,
                    "input_data": 6,
                    "input_ptr": 1,
                    "ptr_data": 1
                },
                "param_2": {
                    "address2": 1,
                    "array_pointer": 1,
                    "array_ptr": 2,
                    "buffer": 2,
                    "data_array": 2,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "input": 2,
                    "input_address": 1,
                    "input_data": 1,
                    "input_ptr": 3,
                    "lookup_table": 6,
                    "lookup_table_address": 1,
                    "lookup_table_ptr": 1,
                    "ptr_values": 1,
                    "second_array": 1,
                    "source_array": 1,
                    "table": 1,
                    "table_ptr": 1
                },
                "param_3": {
                    "arg1": 1,
                    "arg3": 1,
                    "arg_3": 1,
                    "param1": 2,
                    "param3": 9,
                    "param_3": 10,
                    "param_a": 1,
                    "parameter_3": 1,
                    "undefined_param_3": 1,
                    "unknown_1": 1,
                    "value1": 2,
                    "value_1": 1
                },
                "param_4": {
                    "arg2": 1,
                    "arg4": 1,
                    "arg_4": 1,
                    "param2": 2,
                    "param4": 9,
                    "param_4": 10,
                    "param_b": 1,
                    "parameter_4": 1,
                    "undefined_param_4": 1,
                    "unknown_2": 1,
                    "value2": 2,
                    "value_2": 1
                },
                "uVar2": {
                    "array_length": 1,
                    "array_size": 2,
                    "combined_value2": 10,
                    "combined_value_2": 3,
                    "combined_values": 1,
                    "count": 1,
                    "data_length": 1,
                    "input_value": 1,
                    "lookup_size": 1,
                    "num_elements": 1,
                    "num_iterations": 1,
                    "num_values": 4,
                    "result2": 1,
                    "value2": 1,
                    "value_1": 1,
                    "value_count": 1
                },
                "uVar3": {
                    "count": 1,
                    "counter": 4,
                    "current_index": 1,
                    "i": 1,
                    "index": 11,
                    "iteration": 1,
                    "iteration_count": 1,
                    "iteration_counter": 1,
                    "loop_counter": 8,
                    "loop_index": 2
                },
                "uVar4": {
                    "bit_counter": 13,
                    "bit_index": 18
                },
                "update_checksum_and_process_data_0800076c": {
                    "update_and_process_data": 1,
                    "update_checksum": 2,
                    "update_checksum_and_process_data": 4
                }
            },
            "called": [
                "FUN_08004640",
                "FUN_0800076c"
            ],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nint combine_and_process_data_080008e2(int data_ptr,int lookup_table,undefined4 param_3,undefined4 param_4)\n\n{\n  int combined_value;\n  uint combined_value2;\n  uint index;\n  uint bit_index;\n  char bit_value;\n  int offset;\n  \n  combined_value = combine_values(*(undefined *)(data_ptr + 0xb),*(undefined *)(data_ptr + 0xc),param_3,param_4,\n                       param_4);\n  combined_value2 = combine_values(*(undefined *)(data_ptr + 0xd),*(undefined *)(data_ptr + 0xe));\n  bit_value = (char)((combined_value2 << 0x15) >> 0x18);\n  if ((combined_value2 & 7) != 0) {\n    bit_value = bit_value + '\\x01';\n  }\n  *(char *)(data_ptr + 0xb) = bit_value;\n  *(undefined *)(data_ptr + 0x49) = 3;\n  bit_index = 0;\n  for (index = 0; (int)index < (int)combined_value2; index = index + 1 & 0xffff) {\n    if (((int)(uint)*(ushort *)(lookup_table + ((index + combined_value) * 0x100000 >> 0x18) * 2) >>\n         (index + combined_value & 0xf) & 1U) == 0) {\n      offset = (uint)*(byte *)(data_ptr + 0x49) + data_ptr;\n      *(byte *)(offset + 9) = *(byte *)(offset + 9) & ~(byte)(1 << bit_index);\n    }\n    else {\n      offset = (uint)*(byte *)(data_ptr + 0x49) + data_ptr;\n      *(byte *)(offset + 9) = *(byte *)(offset + 9) | (byte)(1 << bit_index);\n    }\n    bit_index = bit_index + 1 & 0xff;\n    if (7 < bit_index) {\n      *(char *)(data_ptr + 0x49) = *(char *)(data_ptr + 0x49) + '\\x01';\n      bit_index = 0;\n    }\n  }\n  if ((combined_value2 & 7) != 0) {\n    *(char *)(data_ptr + 0x49) = *(char *)(data_ptr + 0x49) + '\\x01';\n  }\n  bit_value = *(char *)(data_ptr + 0x49);\n  update_checksum_and_process_data(data_ptr);\n  return (int)(char)(bit_value + '\\x02');\n}\n\n",
            "current_name": "combine_and_process_data_080008e2",
            "entrypoint": "0x080008e2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080008e2": "combine_and_process_data_080008e2",
                "cVar5": "bit_value",
                "combine_values_08004640": "combine_values",
                "iVar1": "combined_value",
                "iVar6": "offset",
                "param_1": "data_ptr",
                "param_2": "lookup_table",
                "uVar2": "combined_value2",
                "uVar3": "index",
                "uVar4": "bit_index",
                "update_checksum_and_process_data_0800076c": "update_checksum_and_process_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000998": {
            "additional_data": {
                "FUN_08000998": {
                    "combine_and_process_data": 9,
                    "extract_and_process_data": 2,
                    "extract_and_update_data": 1,
                    "process_data": 16,
                    "process_data_and_update_checksum": 2,
                    "process_values": 1
                },
                "bVar1": {
                    "byte1": 1,
                    "byte_val": 1,
                    "byte_value": 6,
                    "byte_value_1": 2,
                    "byte_var": 3,
                    "byte_var1": 2,
                    "checksum_counter": 1,
                    "counter": 5,
                    "temp_byte": 6,
                    "temp_byte1": 2,
                    "temp_byte_1": 2
                },
                "bVar3": {
                    "byte_value_2": 2,
                    "byte_var2": 1,
                    "combined1": 1,
                    "combined_result": 1,
                    "combined_val1": 1,
                    "combined_value": 3,
                    "combined_value1": 14,
                    "combined_value_1": 5,
                    "result_1": 1,
                    "result_a": 1,
                    "temp_byte_2": 1
                },
                "bVar4": {
                    "byte_value_3": 2,
                    "byte_var3": 1,
                    "combined2": 1,
                    "combined_val2": 1,
                    "combined_value": 1,
                    "combined_value2": 16,
                    "combined_value_2": 6,
                    "result_2": 1,
                    "result_b": 1,
                    "temp_byte_3": 1
                },
                "cVar2": {
                    "char1": 1,
                    "char_val": 1,
                    "char_value": 8,
                    "char_var": 3,
                    "char_var1": 1,
                    "char_var2": 1,
                    "new_checksum_counter": 1,
                    "next_char": 1,
                    "next_index": 2,
                    "temp_char": 12
                },
                "param_1": {
                    "buffer": 1,
                    "data": 4,
                    "data_address": 2,
                    "data_buffer": 5,
                    "data_offset": 1,
                    "data_pointer": 3,
                    "data_ptr": 9,
                    "data_struct": 1,
                    "input_address": 1,
                    "input_array": 1,
                    "input_data": 3
                },
                "param_2": {
                    "data_address": 1,
                    "data_array": 1,
                    "data_buffer": 1,
                    "input": 3,
                    "input_buffer": 3,
                    "input_data": 8,
                    "input_data_address": 2,
                    "input_data_pointer": 1,
                    "input_data_ptr": 1,
                    "input_pointer": 2,
                    "input_ptr": 6,
                    "source_data": 1,
                    "source_ptr": 1
                },
                "param_3": {
                    "param": 1,
                    "param3": 11,
                    "param_3": 11,
                    "param_a": 2,
                    "value1": 4,
                    "value_1": 2
                },
                "param_4": {
                    "param4": 11,
                    "param_4": 11,
                    "param_b": 2,
                    "unused_param": 1,
                    "value2": 4,
                    "value_2": 2
                },
                "uVar5": {
                    "counter": 1,
                    "counter_1": 1,
                    "index": 11,
                    "index1": 2,
                    "iteration": 1,
                    "iterator": 1,
                    "loop_count": 1,
                    "loop_counter": 3,
                    "loop_index": 6,
                    "loop_var": 1,
                    "loop_var1": 1,
                    "loop_variable_1": 1,
                    "value_index": 1
                },
                "uVar6": {
                    "counter_2": 1,
                    "incremented_count": 1,
                    "incremented_index": 1,
                    "index": 1,
                    "index2": 2,
                    "loop_var2": 1,
                    "loop_variable_2": 1,
                    "new_counter": 1,
                    "new_index": 3,
                    "new_iterator": 1,
                    "next_index": 4,
                    "next_index_temp": 1,
                    "next_iteration": 1,
                    "next_position": 1,
                    "temp_counter": 1,
                    "temp_index": 3,
                    "temp_loop": 1,
                    "temp_var": 1,
                    "updated_index": 5
                },
                "update_checksum_and_process_data_0800076c": {
                    "update_checksum": 1,
                    "update_checksum_and_process_data": 3
                }
            },
            "called": [
                "FUN_08004640",
                "FUN_0800076c"
            ],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nint combine_and_process_data_08000998(int data_ptr,int input_data,undefined4 param_3,undefined4 param4)\n\n{\n  byte byte_value;\n  char temp_char;\n  byte combined_value1;\n  byte combined_value2;\n  uint index;\n  uint updated_index;\n  \n  combined_value1 = combine_values_08004640(*(undefined *)(data_ptr + 0xb),*(undefined *)(data_ptr + 0xc),param_3,param4,\n                       param4);\n  combined_value2 = combine_values_08004640(*(undefined *)(data_ptr + 0xd),*(undefined *)(data_ptr + 0xe));\n  *(byte *)(data_ptr + 0xb) = combined_value2 << 1;\n  *(undefined *)(data_ptr + 0x49) = 3;\n  for (index = (uint)combined_value1; index < (uint)combined_value1 + (uint)combined_value2; index = index + 1 & 0xff) {\n    byte_value = *(byte *)(data_ptr + 0x49);\n    *(char *)(data_ptr + (uint)byte_value + 9) = (char)((ushort)*(undefined2 *)(input_data + index * 2) >> 8)\n    ;\n    updated_index = byte_value + 1 & 0xff;\n    temp_char = (char)updated_index;\n    *(char *)(data_ptr + 0x49) = temp_char;\n    *(undefined *)(data_ptr + updated_index + 9) = *(undefined *)(input_data + index * 2);\n    *(char *)(data_ptr + 0x49) = temp_char + '\\x01';\n  }\n  temp_char = *(char *)(data_ptr + 0x49);\n  update_checksum_and_process_data(data_ptr);\n  return (int)(char)(temp_char + '\\x02');\n}\n\n",
            "current_name": "combine_and_process_data_08000998",
            "entrypoint": "0x08000998",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000998": "combine_and_process_data_08000998",
                "bVar1": "byte_value",
                "bVar3": "combined_value1",
                "bVar4": "combined_value2",
                "cVar2": "temp_char",
                "param_1": "data_ptr",
                "param_2": "input_data",
                "param_4": "param4",
                "uVar5": "index",
                "uVar6": "updated_index",
                "update_checksum_and_process_data_0800076c": "update_checksum_and_process_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a00": {
            "additional_data": {
                "FUN_08000a00": {
                    "apply_modification": 1,
                    "update_bit_in_byte_array": 1,
                    "update_bit_in_memory": 1,
                    "update_bitmask": 1,
                    "update_bits": 1,
                    "update_combination_value": 1,
                    "update_data": 10,
                    "update_data_and_checksum": 3,
                    "update_data_and_process": 2,
                    "update_data_flag": 1,
                    "update_memory": 1,
                    "update_value": 2,
                    "update_value_in_array": 5,
                    "update_value_in_memory": 1
                },
                "param_1": {
                    "array_address": 3,
                    "array_index": 2,
                    "byte_array": 1,
                    "data_address": 7,
                    "data_offset": 4,
                    "data_pointer": 4,
                    "data_ptr": 5,
                    "input_data": 2,
                    "memory_address": 2,
                    "value_ptr": 1
                },
                "param_2": {
                    "array_address": 1,
                    "array_base": 1,
                    "array_pointer": 1,
                    "array_size": 1,
                    "array_start": 1,
                    "array_to_update_address": 1,
                    "bitmask_address": 1,
                    "buffer_pointer": 1,
                    "data_address": 1,
                    "data_array": 1,
                    "data_ptr": 1,
                    "memory_address": 5,
                    "memory_base": 1,
                    "memory_offset": 1,
                    "memory_ptr": 1,
                    "output_data": 2,
                    "output_pointer": 1,
                    "output_ptr": 3,
                    "result_address": 1,
                    "result_array_address": 1,
                    "result_ptr": 1,
                    "table_address": 1,
                    "table_offset": 1,
                    "target_address": 1
                },
                "param_3": {
                    "first_value": 1,
                    "input_param_1": 1,
                    "param3": 2,
                    "param3_value": 1,
                    "param_3": 5,
                    "param_a": 2,
                    "val_1": 1,
                    "value1": 9,
                    "value_1": 8,
                    "value_3": 1
                },
                "param_4": {
                    "input_param_2": 1,
                    "param4": 2,
                    "param4_value": 1,
                    "param_4": 5,
                    "param_b": 2,
                    "second_value": 1,
                    "val_2": 1,
                    "value2": 9,
                    "value_2": 8,
                    "value_4": 1
                },
                "uVar1": {
                    "combined_value": 31
                },
                "uVar2": {
                    "index": 1,
                    "shift_amount": 1,
                    "shifted_bits": 1,
                    "shifted_index": 2,
                    "shifted_value": 26
                },
                "update_checksum_and_process_data_0800076c": {
                    "checksum_and_process_data_update": 1,
                    "compute_checksum_and_process_data": 1,
                    "process_data": 6,
                    "process_data_and_update_checksum": 1
                },
                "ushort": {
                    "unsigned_short": 1
                }
            },
            "called": [
                "FUN_08004640",
                "FUN_0800076c"
            ],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nundefined4 update_data_and_checksum_08000a00(int data_address,int memory_address,undefined4 value1,undefined4 value2)\n\n{\n  uint combined_value;\n  uint shifted_value;\n  \n  combined_value = combine_values_08004640(*(undefined *)(data_address + 0xb),*(undefined *)(data_address + 0xc),value1,value2,\n                       value2);\n  shifted_value = (combined_value << 0x14) >> 0x18;\n  if (*(char *)(data_address + 0xd) == -1) {\n    *(unsigned_short *)(memory_address + shifted_value * 2) =\n         (unsigned_short)(1 << (combined_value & 0xf)) | *(unsigned_short *)(memory_address + shifted_value * 2);\n  }\n  else {\n    *(unsigned_short *)(memory_address + shifted_value * 2) =\n         *(unsigned_short *)(memory_address + shifted_value * 2) & ~(unsigned_short)(1 << (combined_value & 0xf));\n  }\n  *(undefined *)(data_address + 0x49) = 6;\n  process_data(data_address);\n  return 8;\n}\n\n",
            "current_name": "update_data_and_checksum_08000a00",
            "entrypoint": "0x08000a00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a00": "update_data_and_checksum_08000a00",
                "param_1": "data_address",
                "param_2": "memory_address",
                "param_3": "value1",
                "param_4": "value2",
                "uVar1": "combined_value",
                "uVar2": "shifted_value",
                "update_checksum_and_process_data_0800076c": "process_data",
                "ushort": "unsigned_short"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a4e": {
            "additional_data": {
                "FUN_08000a4e": {
                    "combine_values_and_store": 1,
                    "copy_and_process_data": 1,
                    "process_and_store_data": 1,
                    "process_data": 7,
                    "process_data_and_update_checksum": 1,
                    "update_and_process_data": 1,
                    "update_data": 3,
                    "update_data_and_checksum": 2,
                    "update_data_and_return": 2,
                    "update_data_and_return_value": 1,
                    "update_value_and_process": 1,
                    "update_value_and_process_data": 1,
                    "update_values": 1,
                    "update_values_and_checksum": 5,
                    "update_values_and_process_data": 3
                },
                "bVar1": {
                    "combined_byte": 4,
                    "combined_byte_value": 1,
                    "combined_value": 9,
                    "combined_value1": 10,
                    "combined_value_1": 7
                },
                "param_1": {
                    "data": 2,
                    "data_1": 1,
                    "data_address": 15,
                    "data_buffer": 1,
                    "data_offset": 1,
                    "data_pointer": 2,
                    "input_address": 5,
                    "input_data": 1,
                    "input_offset": 1,
                    "source_address": 2
                },
                "param_2": {
                    "data_2": 1,
                    "destination_address": 2,
                    "output": 2,
                    "output_address": 10,
                    "output_data": 1,
                    "output_offset": 1,
                    "result_address": 10,
                    "result_buffer": 1,
                    "result_offset": 1,
                    "result_pointer": 2
                },
                "uVar2": {
                    "combined_value": 5,
                    "combined_value2": 11,
                    "combined_value_2": 12,
                    "new_value": 3
                }
            },
            "called": [
                "FUN_08004640",
                "FUN_0800076c"
            ],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nundefined4 update_values_and_process_data_08000a4e(int data_address,int output_address)\n\n{\n  byte combined_value1;\n  undefined2 combined_value_2;\n  \n  combined_value1 = combine_values_08004640(*(undefined *)(data_address + 0xb),*(undefined *)(data_address + 0xc));\n  combined_value_2 = combine_values_08004640(*(undefined *)(data_address + 0xd),*(undefined *)(data_address + 0xe));\n  *(undefined2 *)(output_address + (uint)combined_value1 * 2) = combined_value_2;\n  *(undefined *)(data_address + 0x49) = 6;\n  update_checksum_and_process_data_0800076c(data_address);\n  return 8;\n}\n\n",
            "current_name": "update_values_and_process_data_08000a4e",
            "entrypoint": "0x08000a4e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a4e": "update_values_and_process_data_08000a4e",
                "bVar1": "combined_value1",
                "param_1": "data_address",
                "param_2": "output_address",
                "uVar2": "combined_value_2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a7a": {
            "additional_data": {
                "FUN_08000a7a": {
                    "combine_and_process_data": 4,
                    "combine_and_update_data": 2,
                    "combine_values": 1,
                    "process_and_update_data": 2,
                    "process_data": 12,
                    "process_data_and_update_checksum": 1,
                    "process_values": 1,
                    "reverse_and_update_data": 2,
                    "update_and_process_data": 2,
                    "update_values": 3,
                    "update_values_and_process_data": 1
                },
                "iVar1": {
                    "combined_data_1": 1,
                    "combined_value": 3,
                    "combined_value1": 15,
                    "combined_value_1": 11,
                    "combined_value_a": 1
                },
                "iVar2": {
                    "combined_data_2": 1,
                    "combined_value2": 17,
                    "combined_value_2": 11,
                    "combined_value_b": 1,
                    "other_combined_value": 1
                },
                "param_1": {
                    "data": 2,
                    "data1": 1,
                    "data_addr": 1,
                    "data_array": 1,
                    "data_array_ptr": 1,
                    "data_buffer": 1,
                    "data_offset": 1,
                    "data_pointer": 1,
                    "data_ptr": 15,
                    "input_addr": 1,
                    "input_array": 1,
                    "input_data": 4,
                    "source_addr": 1
                },
                "param_2": {
                    "buffer_ptr": 1,
                    "data2": 1,
                    "dest_addr": 1,
                    "output": 1,
                    "output_addr": 2,
                    "output_array": 2,
                    "output_buffer": 1,
                    "output_data": 4,
                    "output_offset": 1,
                    "output_pointer": 1,
                    "output_ptr": 13,
                    "result": 1,
                    "result_array_ptr": 1,
                    "result_ptr": 1
                },
                "param_3": {
                    "arg1": 1,
                    "param1": 5,
                    "param3": 10,
                    "param_3": 12,
                    "param_a": 2,
                    "param_value1": 1
                },
                "param_4": {
                    "arg2": 1,
                    "param2": 5,
                    "param4": 10,
                    "param_4": 12,
                    "param_b": 2,
                    "param_value2": 1
                },
                "uVar3": {
                    "counter": 6,
                    "counter1": 1,
                    "counter_1": 1,
                    "index": 5,
                    "iterator": 3,
                    "loop_counter": 13,
                    "loop_index": 1,
                    "loop_iter": 1
                },
                "uVar4": {
                    "bit_counter": 19,
                    "bit_index": 1,
                    "bit_iter": 1,
                    "bit_iterator": 1,
                    "bit_offset": 5,
                    "bit_shift": 1,
                    "counter2": 1,
                    "counter_2": 1,
                    "loop_index": 1
                },
                "uVar5": {
                    "bit_index": 6,
                    "bit_mask_index": 1,
                    "bit_offset": 3,
                    "bit_position": 16,
                    "bit_shift": 4,
                    "index": 1
                },
                "uVar6": {
                    "address_offset": 1,
                    "array_index": 2,
                    "block_index": 1,
                    "buffer_index": 1,
                    "byte_index": 8,
                    "byte_position": 2,
                    "index": 2,
                    "offset": 4,
                    "output_index": 7,
                    "shifted_value": 1,
                    "word_index": 2
                },
                "uVar7": {
                    "byte_counter": 4,
                    "byte_index": 9,
                    "byte_iterator": 1,
                    "byte_offset": 4,
                    "byte_position": 1,
                    "byte_start_position": 1,
                    "data_index": 2,
                    "index": 1,
                    "offset": 3,
                    "param_index": 4,
                    "param_offset": 1
                },
                "update_checksum_and_process_data_0800076c": {
                    "update_checksum": 1
                }
            },
            "called": [
                "FUN_08004640",
                "FUN_0800076c"
            ],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nundefined4 combine_and_process_data_08000a7a(int data_ptr,int output_ptr,undefined4 param_3,undefined4 param_4)\n\n{\n  int combined_value1;\n  int combined_value2;\n  uint loop_counter;\n  uint bit_counter;\n  uint bit_position;\n  uint byte_index;\n  uint byte_index;\n  \n  combined_value1 = combine_values_08004640(*(undefined *)(data_ptr + 0xb),*(undefined *)(data_ptr + 0xc),param_3,param_4,\n                       param_4);\n  combined_value2 = combine_values_08004640(*(undefined *)(data_ptr + 0xd),*(undefined *)(data_ptr + 0xe));\n  bit_counter = 0;\n  byte_index = 7;\n  for (loop_counter = 0; (int)loop_counter < combined_value2; loop_counter = loop_counter + 1 & 0xffff) {\n    byte_index = (loop_counter + combined_value1) * 0x100000 >> 0x18;\n    bit_position = loop_counter + combined_value1 & 0xf;\n    if (((int)(uint)*(byte *)(data_ptr + byte_index + 9) >> bit_counter & 1U) == 0) {\n      *(ushort *)(output_ptr + byte_index * 2) = *(ushort *)(output_ptr + byte_index * 2) & ~(ushort)(1 << bit_position);\n    }\n    else {\n      *(ushort *)(output_ptr + byte_index * 2) = (ushort)(1 << bit_position) | *(ushort *)(output_ptr + byte_index * 2);\n    }\n    bit_counter = bit_counter + 1 & 0xff;\n    if (7 < bit_counter) {\n      byte_index = byte_index + 1 & 0xff;\n      bit_counter = 0;\n    }\n  }\n  *(undefined *)(data_ptr + 0x49) = 6;\n  update_checksum(data_ptr);\n  return 8;\n}\n\n",
            "current_name": "combine_and_process_data_08000a7a",
            "entrypoint": "0x08000a7a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a7a": "combine_and_process_data_08000a7a",
                "iVar1": "combined_value1",
                "iVar2": "combined_value2",
                "param_1": "data_ptr",
                "param_2": "output_ptr",
                "uVar3": "loop_counter",
                "uVar4": "bit_counter",
                "uVar5": "bit_position",
                "uVar6": "byte_index",
                "uVar7": "byte_index",
                "update_checksum_and_process_data_0800076c": "update_checksum"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000b04": {
            "additional_data": {
                "FUN_08000b04": {
                    "byte_swap_and_update_checksum": 1,
                    "combine_and_process_data": 7,
                    "combine_and_update_data": 1,
                    "combine_and_update_values": 1,
                    "combine_values_and_update_checksum": 1,
                    "decode_and_process_data": 1,
                    "process_and_update_data": 2,
                    "process_data": 13,
                    "process_data_and_update_checksum": 3
                },
                "bVar1": {
                    "byte1": 9,
                    "byte_val_1": 1,
                    "byte_value1": 1,
                    "byte_var1": 1,
                    "first_byte": 7,
                    "first_byte_value": 1,
                    "first_offset": 1,
                    "index": 1,
                    "index1": 1,
                    "input_length": 1,
                    "length": 1,
                    "num_elements": 1,
                    "num_swaps": 1,
                    "offset": 2,
                    "start_offset": 1,
                    "value1": 1
                },
                "bVar2": {
                    "byte2": 9,
                    "byte_val_2": 1,
                    "byte_value2": 1,
                    "byte_var2": 1,
                    "count": 1,
                    "data_length": 1,
                    "index2": 1,
                    "length": 3,
                    "loop_length": 1,
                    "num_elements": 1,
                    "num_iterations": 1,
                    "second_byte": 7,
                    "second_byte_value": 1,
                    "second_offset": 1,
                    "value2": 1
                },
                "cVar3": {
                    "char1": 3,
                    "char_offset": 1,
                    "char_val": 2,
                    "char_value": 2,
                    "char_var": 2,
                    "char_variable": 1,
                    "checksum": 16,
                    "checksum_byte": 2,
                    "checksum_value": 1,
                    "updated_char": 1
                },
                "combine_values_08004640": {
                    "combine_values": 1
                },
                "param_1": {
                    "data_addr": 1,
                    "data_address": 9,
                    "data_array": 3,
                    "data_offset": 1,
                    "data_pointer": 1,
                    "data_ptr": 8,
                    "data_structure_pointer": 1,
                    "input_address": 2,
                    "input_array": 1,
                    "input_array_address": 1,
                    "input_data": 1,
                    "input_param": 2
                },
                "param_2": {
                    "output_addr": 1,
                    "output_address": 7,
                    "output_array": 2,
                    "output_array_address": 1,
                    "output_data": 1,
                    "output_param": 2,
                    "output_pointer": 1,
                    "output_ptr": 4,
                    "result_address": 4,
                    "result_array": 2,
                    "result_offset": 1,
                    "result_pointer": 1,
                    "result_ptr": 4
                },
                "uVar4": {
                    "combined_value": 30,
                    "combined_values": 1
                },
                "uVar5": {
                    "counter": 5,
                    "i": 2,
                    "index": 13,
                    "iteration_count": 1,
                    "loop_count": 1,
                    "loop_counter": 4,
                    "loop_index": 5
                },
                "update_checksum_and_process_data_0800076c": {
                    "update_checksum_and_process_data": 1
                }
            },
            "called": [
                "FUN_08004640",
                "FUN_0800076c"
            ],
            "calling": [
                "FUN_08000b54"
            ],
            "code": "\nint combine_and_process_data_08000b04(int data_address,int output_address)\n\n{\n  byte byte1;\n  byte byte2;\n  char checksum;\n  undefined2 combined_value;\n  uint index;\n  \n  byte1 = *(byte *)(data_address + 0xc);\n  byte2 = *(byte *)(data_address + 0xe);\n  *(undefined *)(data_address + 0xd) = 0;\n  *(byte *)(data_address + 0xe) = byte2;\n  *(undefined *)(data_address + 0x49) = 6;\n  for (index = 0; index < byte2; index = index + 1 & 0xff) {\n    combined_value = combine_values(*(undefined *)(index * 2 + data_address + 0x10),\n                         *(undefined *)(data_address + (index + 4) * 2 + 9));\n    *(undefined2 *)(output_address + (byte1 + index) * 2) = combined_value;\n  }\n  checksum = *(char *)(data_address + 0x49);\n  update_checksum_and_process_data(data_address);\n  return (int)(char)(checksum + '\\x02');\n}\n\n",
            "current_name": "combine_and_process_data_08000b04",
            "entrypoint": "0x08000b04",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000b04": "combine_and_process_data_08000b04",
                "bVar1": "byte1",
                "bVar2": "byte2",
                "cVar3": "checksum",
                "combine_values_08004640": "combine_values",
                "param_1": "data_address",
                "param_2": "output_address",
                "uVar4": "combined_value",
                "uVar5": "index",
                "update_checksum_and_process_data_0800076c": "update_checksum_and_process_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000b54": {
            "additional_data": {
                "FUN_08000b54": {
                    "process_and_count_data": 3,
                    "process_data": 19,
                    "process_data_and_count": 7,
                    "process_data_and_get_result": 1,
                    "process_function": 1
                },
                "bVar1": {
                    "byte_result": 1,
                    "byte_value": 4,
                    "byte_var": 1,
                    "callback_result": 1,
                    "result": 18,
                    "result_byte": 4,
                    "return_value": 1,
                    "temp_byte": 1
                },
                "check_condition_080007f0": {
                    "check_condition": 4
                },
                "combine_and_process_data_080008e2": {
                    "combine_and_process_data1": 2,
                    "combine_and_process_data_1": 2
                },
                "combine_and_process_data_08000998": {
                    "combine_and_process_data2": 2,
                    "combine_and_process_data_2": 2
                },
                "combine_and_process_data_08000a7a": {
                    "combine_and_process_data3": 2,
                    "combine_and_process_data_3": 2
                },
                "combine_and_process_data_08000b04": {
                    "combine_and_process_data4": 2,
                    "combine_and_process_data_4": 2
                },
                "copy_and_modify_data_080008cc": {
                    "copy_and_modify_data": 4
                },
                "iVar2": {
                    "check_result": 1,
                    "condition": 10,
                    "condition_result": 11,
                    "condition_value": 1,
                    "result": 5,
                    "result_value": 1,
                    "temp_int1": 1,
                    "temp_variable": 1
                },
                "iVar3": {
                    "count": 1,
                    "data_count": 2,
                    "data_processing_result": 1,
                    "function_result": 1,
                    "output": 5,
                    "output_result": 1,
                    "output_value": 2,
                    "process_result": 1,
                    "processed_count": 1,
                    "processed_data": 3,
                    "result": 4,
                    "return_value": 9
                },
                "initialize_data_values_08004204": {
                    "initialize_data_values": 4
                },
                "param_1": {
                    "data": 10,
                    "data_array": 9,
                    "data_collection": 1,
                    "data_container": 1,
                    "data_ptr": 4,
                    "data_ptrs": 1,
                    "input_array": 1,
                    "input_data": 3,
                    "input_params": 1
                },
                "param_2": {
                    "array": 1,
                    "buffer": 1,
                    "data_array": 1,
                    "data_pointer": 2,
                    "data_ptr": 2,
                    "input": 5,
                    "input_array": 5,
                    "input_data": 10,
                    "input_param": 1,
                    "input_values": 1,
                    "values": 2
                },
                "param_3": {
                    "count": 1,
                    "count_param": 1,
                    "data": 1,
                    "data_length": 1,
                    "flag": 5,
                    "input_flag": 1,
                    "input_size": 2,
                    "input_value": 7,
                    "length": 1,
                    "param_value": 3,
                    "size": 3,
                    "status": 1,
                    "value": 4
                },
                "process_and_count_data_080006b4": {
                    "process_and_count_data": 4
                },
                "unaff_r5": {
                    "byte_result": 3,
                    "byte_value": 1,
                    "check": 1,
                    "condition": 4,
                    "count": 3,
                    "data_count": 1,
                    "length": 1,
                    "result": 2,
                    "result_counter": 1,
                    "result_uint": 1,
                    "result_unsigned": 1,
                    "result_value": 5,
                    "return_value": 2,
                    "temp_result": 1,
                    "temp_uint": 1,
                    "value": 2,
                    "value_check": 1
                },
                "update_checksum_and_process_data_0800076c": {
                    "update_checksum_and_process_data": 4
                },
                "update_data_and_checksum_08000a00": {
                    "update_data_and_checksum": 4
                },
                "update_values_and_process_data_08000a4e": {
                    "update_values_and_process_data": 4
                }
            },
            "called": [
                "FUN_080007f0",
                "FUN_08000b04",
                "FUN_08000a7a",
                "FUN_080008e2",
                "FUN_080006b4",
                "FUN_08000a00",
                "FUN_08000a4e",
                "FUN_08004204",
                "FUN_080008cc",
                "FUN_08000998",
                "FUN_0800076c"
            ],
            "calling": [
                "FUN_08000c64"
            ],
            "code": "\nint process_and_count_data_08000b54(int **data,int *input_data,undefined4 input_value)\n\n{\n  byte result;\n  int condition_result;\n  uint result_value;\n  int return_value;\n  \n  data[0x13] = input_data;\n  *(char *)(data + 0x18) = (char)input_value;\n  if (*(byte *)((int)data + 5) < 4) {\n    result = (**(code **)(**data + 8))();\n    result_value = (uint)result;\n  }\n  if (result_value == 0) {\n    return_value = 0;\n  }\n  else if ((int)result_value < 8) {\n    return_value = 0;\n  }\n  else {\n    return_value = process_and_count_data_08000b54(data);\n    *(char *)(data + 2) = (char)return_value;\n    if (*(char *)((int)data + 9) == *(char *)(data + 1)) {\n      condition_result = check_condition(data);\n      if (condition_result < 1) {\n        condition_result = initialize_data_values();\n        data[0x17] = (int *)((uint)*(ushort *)((int)data + 0x56) + condition_result);\n        *(undefined *)(data + 2) = 0;\n        switch(*(undefined *)((int)data + 10)) {\n        case 1:\n        case 2:\n          return_value = combine_and_process_data_1(data,input_data,input_value);\n          break;\n        case 3:\n        case 4:\n          return_value = combine_and_process_data2(data,input_data,input_value);\n          break;\n        case 5:\n          return_value = update_data_and_checksum(data,input_data,input_value);\n          break;\n        case 6:\n          return_value = update_values_and_process_data(data,input_data,input_value);\n          break;\n        case 0xf:\n          return_value = combine_and_process_data_3(data,input_data,input_value);\n          break;\n        case 0x10:\n          return_value = combine_and_process_data_4(data,input_data,input_value);\n        }\n      }\n      else {\n        if (condition_result != 0xff) {\n          copy_and_modify_data(data,condition_result);\n          update_checksum_and_process_data(data);\n        }\n        *(char *)(data + 2) = (char)condition_result;\n        return_value = (int)(char)condition_result;\n      }\n    }\n    else {\n      return_value = 0;\n    }\n  }\n  return return_value;\n}\n\n",
            "current_name": "process_and_count_data_08000b54",
            "entrypoint": "0x08000b54",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000b54": "process_and_count_data_08000b54",
                "bVar1": "result",
                "check_condition_080007f0": "check_condition",
                "combine_and_process_data_080008e2": "combine_and_process_data_1",
                "combine_and_process_data_08000998": "combine_and_process_data2",
                "combine_and_process_data_08000a7a": "combine_and_process_data_3",
                "combine_and_process_data_08000b04": "combine_and_process_data_4",
                "copy_and_modify_data_080008cc": "copy_and_modify_data",
                "iVar2": "condition_result",
                "iVar3": "return_value",
                "initialize_data_values_08004204": "initialize_data_values",
                "param_1": "data",
                "param_2": "input_data",
                "param_3": "input_value",
                "process_and_count_data_080006b4": "process_and_count_data",
                "unaff_r5": "result_value",
                "update_checksum_and_process_data_0800076c": "update_checksum_and_process_data",
                "update_data_and_checksum_08000a00": "update_data_and_checksum",
                "update_values_and_process_data_08000a4e": "update_values_and_process_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000c4c": {
            "additional_data": {
                "0": {
                    "interrupt_handler_parameter": 1
                },
                "0x4b00": {
                    "baud_rate": 1,
                    "serial_data_buffer_size": 1,
                    "serial_data_size": 1
                },
                "DAT_20000124": {
                    "serial_data": 1,
                    "serial_data_buffer": 4
                },
                "FUN_08000c4c": {
                    "configure_and_process_serial_data": 2,
                    "configure_serial_data_processing": 1,
                    "execute_serial_data_processing": 4,
                    "handle_interrupt_and_configure_serial": 1,
                    "initialize": 1,
                    "initialize_and_configure_serial": 1,
                    "initialize_and_process_serial_data": 1,
                    "initialize_handler_and_process_data": 1,
                    "initialize_interrupt_handler": 2,
                    "initialize_serial_communication": 13,
                    "initialize_serial_data_processing": 1,
                    "initialize_system": 2,
                    "process_serial_data": 1
                },
                "configure_and_process_serial_data_08000600": {
                    "configure_and_process_serial_data": 9,
                    "process_serial_data": 18,
                    "setup_and_process_serial_data": 2
                },
                "execute_interrupt_handler_080005e4": {
                    "execute_interrupt_handler": 11,
                    "handle_interrupt": 14,
                    "handle_interrupts": 2,
                    "invoke_interrupt_handler": 1,
                    "perform_interrupt_handler": 1
                }
            },
            "called": [
                "FUN_080005e4",
                "FUN_08000600"
            ],
            "calling": [
                "FUN_08004658"
            ],
            "code": "\nvoid initialize_serial_communication_08000c4c(void)\n\n{\n  handle_interrupt(0);\n  process_serial_data(&DAT_20000124,0x4b00);\n  return;\n}\n\n",
            "current_name": "initialize_serial_communication_08000c4c",
            "entrypoint": "0x08000c4c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000c4c": "initialize_serial_communication_08000c4c",
                "configure_and_process_serial_data_08000600": "process_serial_data",
                "execute_interrupt_handler_080005e4": "handle_interrupt"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000c64": {
            "additional_data": {
                "0x10": {
                    "data_size": 2
                },
                "DAT_20000004": {
                    "data2": 2,
                    "data_2": 1,
                    "data_array_2": 1,
                    "data_output": 1,
                    "data_pointer2": 1,
                    "data_pointer_2": 1,
                    "data_ptr2": 1,
                    "output_data": 1
                },
                "DAT_20000124": {
                    "data1": 2,
                    "data_1": 1,
                    "data_array_1": 1,
                    "data_input": 1,
                    "data_pointer1": 1,
                    "data_pointer_1": 1,
                    "data_ptr1": 1,
                    "input_data": 1
                },
                "FUN_08000b54": {
                    "process_and_count_data": 1
                },
                "FUN_08000c64": {
                    "process_and_count_data": 22,
                    "process_data": 6,
                    "process_data_and_count": 3
                },
                "in_r3": {
                    "arg1": 1,
                    "control_value": 1,
                    "count": 3,
                    "count_value": 1,
                    "data_source": 1,
                    "execution_time": 1,
                    "input_buffer": 1,
                    "input_data": 1,
                    "input_parameter": 3,
                    "input_value": 11,
                    "param": 2,
                    "parameter": 2,
                    "parameter1": 1,
                    "return_value": 1,
                    "unused_parameter": 1
                },
                "process_and_count_data_08000b54": {
                    "process_and_count_data": 1,
                    "process_data_and_count_data": 1
                }
            },
            "called": [
                "FUN_08000b54"
            ],
            "calling": [
                "FUN_08004658"
            ],
            "code": "\nvoid process_data_and_count_08000c64(void)\n\n{\n  undefined4 input_value;\n  \n  process_and_count_data(&DAT_20000124,&DAT_20000004,0x10,input_value,input_value);\n  return;\n}\n\n",
            "current_name": "process_data_and_count_08000c64",
            "entrypoint": "0x08000c64",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000c64": "process_data_and_count_08000c64",
                "in_r3": "input_value",
                "process_and_count_data_08000b54": "process_and_count_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000c8c": {
            "additional_data": {
                "FUN_08000c8c": {
                    "initialize_application": 1,
                    "initialize_system": 30
                },
                "check_data_validity_0800201c": {
                    "check_data_validity": 2
                },
                "get_data_value_080025e0": {
                    "get_data_value": 2
                },
                "initialize_and_update_clock_08002488": {
                    "initialize_and_update_clock": 2
                },
                "initialize_data_08000ee0": {
                    "initialize_data2": 2
                },
                "initialize_data_08001f9c": {
                    "initialize_data": 2
                },
                "local_14": {
                    "block": 1,
                    "block_size": 3,
                    "buffer": 2,
                    "buffer_size": 2,
                    "character_status": 1,
                    "config_value13": 1,
                    "constant12": 1,
                    "data": 1,
                    "data_5": 1,
                    "data_length": 1,
                    "data_offset": 1,
                    "data_size2": 1,
                    "length": 1,
                    "memory_size": 1,
                    "param11": 1,
                    "size2": 1,
                    "size3": 1,
                    "unused_value3": 1,
                    "val5": 1,
                    "value12": 4,
                    "value6": 2,
                    "value7": 1,
                    "value_f": 1
                },
                "local_18": {
                    "buffer": 1,
                    "buffer_size": 3,
                    "character_attribute": 1,
                    "config": 1,
                    "config_value12": 1,
                    "constant11": 1,
                    "data_4": 1,
                    "data_length": 1,
                    "data_size": 2,
                    "length": 2,
                    "memory_address": 1,
                    "memory_size": 1,
                    "param10": 1,
                    "size": 1,
                    "size1": 1,
                    "size2": 1,
                    "unused_value2": 1,
                    "val4": 1,
                    "value11": 4,
                    "value5": 2,
                    "value6": 1,
                    "value_e": 1
                },
                "local_1c": {
                    "clock_seconds": 2,
                    "config_value11": 1,
                    "constant10": 1,
                    "counter_f": 1,
                    "data_3": 1,
                    "index": 1,
                    "loop_index": 1,
                    "memory_address": 1,
                    "offset": 5,
                    "param9": 1,
                    "second": 1,
                    "unused": 1,
                    "unused_value1": 1,
                    "val3": 1,
                    "value10": 4,
                    "value4": 2,
                    "value5": 1,
                    "zero": 1
                },
                "local_20": {
                    "bit": 1,
                    "clock_minute": 1,
                    "clock_minutes": 2,
                    "clock_mode": 1,
                    "clock_second": 1,
                    "clock_state": 1,
                    "config_value10": 1,
                    "constant9": 1,
                    "count4": 1,
                    "counter_e": 1,
                    "data_2": 1,
                    "loop_counter": 1,
                    "minute": 1,
                    "mode": 1,
                    "num_attempts": 1,
                    "offset": 1,
                    "option": 1,
                    "param8": 1,
                    "setting": 1,
                    "step": 1,
                    "val2": 1,
                    "value": 1,
                    "value3": 2,
                    "value4": 1,
                    "value9": 4,
                    "version": 1
                },
                "local_24": {
                    "bitmask": 1,
                    "clock": 1,
                    "clock_hour": 1,
                    "clock_hours": 2,
                    "clock_minute": 1,
                    "clock_value": 3,
                    "config_value9": 1,
                    "constant8": 1,
                    "data_1": 1,
                    "delay": 3,
                    "delay_value": 1,
                    "flag": 1,
                    "hour": 1,
                    "limit": 1,
                    "mask": 2,
                    "param7": 1,
                    "threshold": 1,
                    "val1": 1,
                    "value2": 1,
                    "value5": 1,
                    "value8": 4,
                    "value_d": 1
                },
                "local_28": {
                    "clock_hour": 1,
                    "clock_value": 1,
                    "config_value8": 1,
                    "constant7": 1,
                    "counter_d": 1,
                    "factor": 1,
                    "length": 1,
                    "level": 1,
                    "limit": 2,
                    "loop_value": 1,
                    "max_retry": 1,
                    "max_value": 1,
                    "num": 1,
                    "num_retries": 1,
                    "param6": 1,
                    "size": 1,
                    "status": 1,
                    "status_flag": 1,
                    "value1": 1,
                    "value2": 2,
                    "value3": 1,
                    "value4": 1,
                    "value7": 6
                },
                "local_2c": {
                    "character_id": 1,
                    "clock_id": 1,
                    "config_value7": 1,
                    "constant6": 1,
                    "count3": 1,
                    "counter": 1,
                    "counter_c": 1,
                    "data_index": 1,
                    "factor": 1,
                    "frequency": 1,
                    "index": 4,
                    "interval": 1,
                    "iterations": 1,
                    "param5": 1,
                    "rate": 2,
                    "step_size": 1,
                    "update_flag": 1,
                    "value2": 1,
                    "value6": 6
                },
                "local_30": {
                    "clock_value": 2,
                    "config_value6": 1,
                    "constant5": 1,
                    "data_offset": 1,
                    "data_value": 1,
                    "delay": 1,
                    "duration": 1,
                    "initial_value": 1,
                    "length": 1,
                    "limit": 1,
                    "param4": 1,
                    "threshold": 2,
                    "time": 2,
                    "timeout": 1,
                    "timer": 1,
                    "total_value": 1,
                    "value": 2,
                    "value1": 1,
                    "value3": 1,
                    "value5": 6,
                    "value_c": 1
                },
                "local_34": {
                    "clock_flag": 1,
                    "config_value5": 1,
                    "constant4": 1,
                    "constant_value": 2,
                    "count": 2,
                    "count2": 2,
                    "counter": 1,
                    "counter_b": 1,
                    "data_count": 1,
                    "data_length": 1,
                    "num_threads": 1,
                    "param3": 1,
                    "size": 5,
                    "some_value": 1,
                    "update_interval": 1,
                    "value": 2,
                    "value4": 6
                },
                "local_38": {
                    "address": 1,
                    "address2": 1,
                    "buffer_size": 1,
                    "config_value4": 1,
                    "constant3": 1,
                    "data": 3,
                    "data_address": 4,
                    "data_size": 3,
                    "data_value": 1,
                    "memory": 2,
                    "memory_pointer": 1,
                    "memory_size": 1,
                    "param2": 1,
                    "size": 1,
                    "value2": 2,
                    "value3": 6,
                    "value_b": 1
                },
                "local_3c": {
                    "config_value3": 1,
                    "constant2": 1,
                    "count": 6,
                    "count1": 2,
                    "counter": 2,
                    "counter_a": 1,
                    "counter_value": 1,
                    "data_flag": 1,
                    "data_type": 2,
                    "data_validity": 1,
                    "flag2": 1,
                    "num_connections": 1,
                    "num_iterations": 1,
                    "param1": 1,
                    "value": 2,
                    "value2": 6,
                    "value_flag": 1
                },
                "local_50": {
                    "address": 3,
                    "address1": 1,
                    "config_value2": 1,
                    "constant1": 1,
                    "data": 1,
                    "data_address": 1,
                    "data_offset": 1,
                    "data_value": 1,
                    "flag_value": 1,
                    "initial_value": 1,
                    "mem_address": 1,
                    "memory_address": 2,
                    "option": 1,
                    "system_value": 1,
                    "value": 5,
                    "value1": 8,
                    "value_a": 1
                },
                "local_54": {
                    "config_value1": 1,
                    "enable_bitmask": 1,
                    "flag": 21,
                    "initial_value": 1,
                    "is_flag_set": 3,
                    "is_ready": 1,
                    "mode": 1,
                    "option_flag": 1,
                    "system_flag": 1
                },
                "uVar1": {
                    "data_value": 1
                },
                "update_character_data_08000e60": {
                    "update_character_data": 2
                },
                "update_status_flag_08000f2c": {
                    "update_status_flag": 2
                }
            },
            "called": [
                "FUN_08000ee0",
                "FUN_0800201c",
                "FUN_08001f9c",
                "FUN_08000f2c",
                "FUN_08002488",
                "FUN_08000e60",
                "FUN_080025e0"
            ],
            "calling": [
                "FUN_080034ce"
            ],
            "code": "\n\n\nvoid initialize_system_08000c8c(void)\n\n{\n  uint data_value;\n  undefined4 flag;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  undefined4 value6;\n  undefined4 value7;\n  undefined4 value8;\n  undefined4 value9;\n  undefined4 offset;\n  undefined4 value11;\n  undefined4 value12;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0xc000;\n  flag = 1;\n  value1 = 0x50000;\n  value2 = 2;\n  value3 = 0x400000;\n  value4 = 8;\n  value5 = 0x150;\n  value6 = 2;\n  value7 = 7;\n  check_data_validity(&flag);\n  initialize_data();\n  value8 = 0xf;\n  value9 = 2;\n  offset = 0;\n  value11 = 0x1400;\n  value12 = 0x1000;\n  initialize_and_update_clock(&value8,5);\n  data_value = get_data_value();\n  initialize_data2(data_value / 1000);\n  update_status_flag(4);\n  update_character_data(0xffffffff,0,0);\n  return;\n}\n\n",
            "current_name": "initialize_system_08000c8c",
            "entrypoint": "0x08000c8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000c8c": "initialize_system_08000c8c",
                "check_data_validity_0800201c": "check_data_validity",
                "get_data_value_080025e0": "get_data_value",
                "initialize_and_update_clock_08002488": "initialize_and_update_clock",
                "initialize_data_08000ee0": "initialize_data2",
                "initialize_data_08001f9c": "initialize_data",
                "local_14": "value12",
                "local_18": "value11",
                "local_1c": "offset",
                "local_20": "value9",
                "local_24": "value8",
                "local_28": "value7",
                "local_2c": "value6",
                "local_30": "value5",
                "local_34": "value4",
                "local_38": "value3",
                "local_3c": "value2",
                "local_50": "value1",
                "local_54": "flag",
                "uVar1": "data_value",
                "update_character_data_08000e60": "update_character_data",
                "update_status_flag_08000f2c": "update_status_flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000d8e": {
            "additional_data": {
                "": {
                    "": 1
                },
                "FUN_08000d8e": {
                    "initialize_character_and_system_data": 1,
                    "initialize_character_data_and_system": 30
                },
                "initialize_character_data_and_system_080034ce": {
                    "initialize_character_data_and_system": 10
                },
                "void": {
                    "": 1
                }
            },
            "called": [
                "FUN_080034ce"
            ],
            "calling": [
                "FUN_08004648"
            ],
            "code": "\nvoid initialize_character_and_system_data_08000d8e(void)\n\n{\n  initialize_character_data_and_system();\n  return;\n}\n\n",
            "current_name": "initialize_character_and_system_data_08000d8e",
            "entrypoint": "0x08000d8e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000d8e": "initialize_character_and_system_data_08000d8e",
                "initialize_character_data_and_system_080034ce": "initialize_character_data_and_system"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000d96": {
            "called": [],
            "calling": [
                "FUN_08000de4"
            ],
            "code": "\nvoid FUNC_08000d96(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08000d96",
            "entrypoint": "0x08000d96",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08000d96": "FUNC_08000d96"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08000d98": {
            "additional_data": {
                "DAT_20000024": {
                    "constant": 1,
                    "data_value_2": 1,
                    "data_var2": 1
                },
                "DAT_20000028": {
                    "current_character_id": 1,
                    "current_character_index": 1
                },
                "DAT_2000002c": {
                    "constant": 1,
                    "data_value_1": 1,
                    "data_var1": 1
                },
                "FUN_08000d98": {
                    "initialize_and_set_character_data": 1,
                    "initialize_and_update_character": 2,
                    "initialize_and_update_character_data": 22,
                    "initialize_character": 2,
                    "initialize_character_data": 2,
                    "update_character_data": 1,
                    "update_character_param": 1
                },
                "iVar1": {
                    "data_init_result": 1,
                    "data_initialization_result": 7,
                    "data_initialization_status": 1,
                    "error_code": 1,
                    "init_result": 2,
                    "initialization_status": 2,
                    "initialize_data_result": 3,
                    "initialize_result": 6,
                    "result": 4,
                    "status": 1
                },
                "initialize_data_08000ee0": {
                    "initialize_data": 3
                },
                "param_1": {
                    "character_data": 5,
                    "character_id": 14,
                    "character_index": 5,
                    "character_level": 4,
                    "character_number": 1,
                    "character_param": 1,
                    "value": 1
                },
                "update_character_data_08000e60": {
                    "update_character_data": 3
                }
            },
            "called": [
                "FUN_08000ee0",
                "FUN_08000e60"
            ],
            "calling": [
                "FUN_08002488",
                "FUN_08000de4"
            ],
            "code": "\nundefined4 initialize_and_update_character_data_08000d98(uint character_id)\n\n{\n  int data_initialization_result;\n  \n  data_initialization_result = initialize_data(DAT_2000002c / (1000 / DAT_20000024));\n  if (data_initialization_result != 0) {\n    return 1;\n  }\n  if (0xf < character_id) {\n    return 1;\n  }\n  update_character_data(0xffffffff,character_id,0);\n  DAT_20000028 = character_id;\n  return 0;\n}\n\n",
            "current_name": "initialize_and_update_character_data_08000d98",
            "entrypoint": "0x08000d98",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000d98": "initialize_and_update_character_data_08000d98",
                "iVar1": "data_initialization_result",
                "initialize_data_08000ee0": "initialize_data",
                "param_1": "character_id",
                "update_character_data_08000e60": "update_character_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000de4": {
            "additional_data": {
                "FUNC_08000d96": {
                    "additional_function": 1,
                    "call_function": 1,
                    "do_something": 1,
                    "execute_additional_function": 3,
                    "execute_custom_function": 1,
                    "execute_function": 4,
                    "execute_game_functions": 1,
                    "function_08000d96": 1,
                    "function_unused": 1,
                    "perform_additional_function": 2,
                    "perform_additional_functionality": 2,
                    "perform_additional_operation": 1,
                    "perform_additional_operations": 2,
                    "perform_additional_processing": 2,
                    "perform_additional_task": 1,
                    "perform_additional_tasks": 6,
                    "some_function": 1
                },
                "FUN_08000de4": {
                    "initialize_and_update": 6,
                    "initialize_and_update_character_data": 1,
                    "initialize_and_update_character_set": 1,
                    "initialize_and_update_data": 14,
                    "initialize_character_data": 2,
                    "initialize_data": 1,
                    "initialize_data_and_update": 1,
                    "initialize_game": 1,
                    "initialize_main_data": 1,
                    "initialize_program": 1,
                    "initialize_system": 2
                },
                "_DAT_40023c00": {
                    "data_register": 7,
                    "data_register1": 1
                },
                "initialize_and_update_character_data_08000d98": {
                    "initialize_and_set_character_data": 1,
                    "initialize_and_update_character_data": 27,
                    "initialize_characters": 1,
                    "load_and_update_character_data": 1,
                    "set_character_data": 1
                },
                "update_data_register_08000e3c": {
                    "set_data_register": 4,
                    "set_data_register_value": 2,
                    "set_register_value": 1,
                    "update_data_register": 21,
                    "update_register": 3
                }
            },
            "called": [
                "FUN_08000d98",
                "FUN_08000e3c",
                "FUN_08000d96"
            ],
            "calling": [
                "FUN_080034ce"
            ],
            "code": "\n\n\nundefined4 initialize_and_update_character_data_08000de4(void)\n\n{\n  _DAT_40023c00 = _DAT_40023c00 | 0x700;\n  update_data_register(3);\n  initialize_and_update_character_data_08000de4(0xf);\n  FUNC_08000d96();\n  return 0;\n}\n\n",
            "current_name": "initialize_and_update_character_data_08000de4",
            "entrypoint": "0x08000de4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000de4": "initialize_and_update_character_data_08000de4",
                "initialize_and_update_character_data_08000d98": "initialize_and_update_character_data",
                "update_data_register_08000e3c": "update_data_register"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000e18": {
            "additional_data": {
                "DAT_20000024": {
                    "addition_operand": 1,
                    "base_value": 1,
                    "data": 1,
                    "data_to_be_added": 1,
                    "first_value": 1,
                    "input": 8,
                    "input_data": 1,
                    "input_num": 1,
                    "input_value": 6,
                    "operand": 1,
                    "value": 1,
                    "value1": 1,
                    "value_to_add": 4,
                    "value_to_be_added": 1,
                    "variable": 1
                },
                "DAT_20000670": {
                    "accumulated_value": 1,
                    "accumulator": 1,
                    "global_data": 1,
                    "incremented_value": 1,
                    "result": 16,
                    "sum": 8,
                    "updated_data": 1,
                    "updated_value": 1
                },
                "FUN_08000e18": {
                    "accumulate_value": 1,
                    "accumulate_values": 2,
                    "add_and_assign": 1,
                    "add_data_and_assign": 1,
                    "add_data_to_global_variable": 1,
                    "add_values": 2,
                    "addition": 2,
                    "addition_and_update": 1,
                    "addition_function": 4,
                    "addition_of_two_variables": 2,
                    "addition_operation": 4,
                    "addition_with_previous_value": 1,
                    "calculate_sum": 2,
                    "calculate_updated_value": 1,
                    "increment_value": 1,
                    "update_data": 2,
                    "update_sum": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08003476"
            ],
            "code": "\nvoid addition_operation_08000e18(void)\n\n{\n  DAT_20000670 = (uint)DAT_20000024 + DAT_20000670;\n  return;\n}\n\n",
            "current_name": "addition_operation_08000e18",
            "entrypoint": "0x08000e18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000e18": "addition_operation_08000e18"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000e30": {
            "additional_data": {
                "DAT_20000670": {
                    "data": 15,
                    "data_pointer": 1,
                    "data_value": 1,
                    "global_data": 1,
                    "global_variable": 2,
                    "global_variable_value": 1,
                    "important_data": 1,
                    "result": 2
                },
                "FUN_08000e30": {
                    "get_dat20000670": 1,
                    "get_dat_20000670": 1,
                    "get_data": 14,
                    "get_data_from_memory": 2,
                    "get_data_pointer": 1,
                    "get_data_value": 6,
                    "get_global_data": 1,
                    "get_global_variable": 2,
                    "get_global_variable_value": 1,
                    "get_important_data": 1,
                    "get_reference_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800201c",
                "FUN_08003d18",
                "FUN_08001f9c",
                "FUN_08002dd0",
                "FUN_08002488",
                "FUN_08002d0c",
                "FUN_0800346c"
            ],
            "code": "\nundefined4 get_data_value_08000e30(void)\n\n{\n  return DAT_20000670;\n}\n\n",
            "current_name": "get_data_value_08000e30",
            "entrypoint": "0x08000e30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000e30": "get_data_value_08000e30"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000e3c": {
            "additional_data": {
                "FUN_08000e3c": {
                    "set_bit_pattern": 1,
                    "update_bits_in_register": 1,
                    "update_config_flags": 2,
                    "update_configuration": 5,
                    "update_control_register": 3,
                    "update_data": 6,
                    "update_data_mask": 1,
                    "update_data_register": 1,
                    "update_data_value": 1,
                    "update_flag_in_memory": 1,
                    "update_memory_address": 2,
                    "update_modified_value": 1,
                    "update_register_value": 4,
                    "update_status": 1,
                    "update_value_in_register": 1
                },
                "_DAT_e000ed0c": {
                    "config_flags": 1,
                    "config_register": 1,
                    "configuration": 1,
                    "configuration_reg": 1,
                    "control_register": 3,
                    "current_config": 1,
                    "data": 1,
                    "data_mask": 1,
                    "data_register": 3,
                    "data_value": 2,
                    "existing_configuration": 1,
                    "memory_address": 2,
                    "memory_value": 1,
                    "modified_value": 1,
                    "register": 3,
                    "register_value": 2
                },
                "new_variable_name_1": {
                    "config_mask": 1
                },
                "param_1": {
                    "bitmask": 1,
                    "config_flags": 1,
                    "config_value": 1,
                    "data": 1,
                    "flag": 2,
                    "input": 2,
                    "input_value": 17,
                    "mask": 1,
                    "new_configuration": 1,
                    "value": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_08004648",
                "FUN_08000de4"
            ],
            "code": "\n\n\nvoid update_data_register_08000e3c(uint input_value)\n\n{\n  _DAT_e000ed0c = (input_value & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "current_name": "update_data_register_08000e3c",
            "entrypoint": "0x08000e3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000e3c": "update_data_register_08000e3c",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000e60": {
            "additional_data": {
                "FUN_08000e60": {
                    "apply_transformation": 2,
                    "convert_and_store_bits": 1,
                    "convert_and_store_data": 1,
                    "set_char_value": 1,
                    "store_data_at_address": 1,
                    "update_bits_in_memory": 1,
                    "update_char_in_memory": 1,
                    "update_character": 4,
                    "update_character_data": 1,
                    "update_data": 4,
                    "update_data_bits": 1,
                    "update_data_entry": 1,
                    "update_memory": 2,
                    "update_memory_location": 3,
                    "update_memory_registers": 1,
                    "update_memory_value": 1,
                    "update_memory_with_flags": 1,
                    "write_data_byte": 1,
                    "write_data_to_memory": 3
                },
                "char_cast_shiftedValue": {
                    "converted_value": 1
                },
                "param_1": {
                    "address": 13,
                    "address_offset": 1,
                    "character_address": 1,
                    "character_index": 3,
                    "character_offset": 1,
                    "data": 1,
                    "data_index": 1,
                    "data_offset": 1,
                    "entry_index": 1,
                    "index": 1,
                    "input_value": 2,
                    "memory_address": 3,
                    "offset": 1,
                    "output_index": 1
                },
                "param_2": {
                    "bit_mask": 8,
                    "bit_pattern1": 1,
                    "bitmask": 1,
                    "bitmask1": 1,
                    "character_mask": 1,
                    "data": 2,
                    "data1": 2,
                    "input_value": 1,
                    "mask": 5,
                    "mask1": 1,
                    "old_character_data": 1,
                    "source_data": 1,
                    "src_data": 1,
                    "value": 3,
                    "value1": 2
                },
                "param_3": {
                    "bit_pattern2": 1,
                    "bit_value": 2,
                    "bitmask2": 1,
                    "character_data": 1,
                    "data": 4,
                    "data2": 2,
                    "data_value": 1,
                    "destination_data": 1,
                    "dst_data": 1,
                    "mask": 5,
                    "mask2": 1,
                    "new_character_data": 1,
                    "output_value": 1,
                    "value": 6,
                    "value2": 2,
                    "value_to_put": 1
                },
                "uVar1": {
                    "bit_offset": 1,
                    "combined_bitmasks": 1,
                    "dst_mask": 1,
                    "lower_value": 1,
                    "masked_value": 1,
                    "new_bits": 1,
                    "new_value": 1,
                    "result": 1,
                    "shift_amount": 8,
                    "shift_amount1": 1,
                    "shift_count": 1,
                    "shift_value": 1,
                    "shifted_bit_mask": 1,
                    "shifted_bits": 7,
                    "shifted_offset": 1,
                    "shifted_value": 1,
                    "temp_var1": 1,
                    "updated_value": 1
                },
                "uVar1_newValue": {
                    "new_shifted_bits": 1
                },
                "uVar1_oldValue": {
                    "original_shifted_bits": 1
                },
                "uVar1_result": {
                    "shifted_bit_pattern1": 1
                },
                "uVar1_unchanged": {
                    "original_bit_pattern1": 1
                },
                "uVar1_updatedValue": {
                    "updated_shifted_bits": 1
                },
                "uVar1_val1": {
                    "shifted_bits_threshold": 1
                },
                "uVar1_val2": {
                    "shifted_bits_threshold": 1
                },
                "uVar1_val3": {
                    "shifted_bits_threshold": 1
                },
                "uVar2": {
                    "adjusted_shift": 1,
                    "adjusted_shift_amount": 2,
                    "bit_count": 1,
                    "bit_mask": 1,
                    "bit_position": 1,
                    "clamped_shift_amount": 1,
                    "mask_size": 1,
                    "masked_bit_value": 1,
                    "remaining_bits": 11,
                    "shift_amount": 2,
                    "shift_amount2": 1,
                    "shifted_amount": 1,
                    "shifted_mask": 1,
                    "shifted_value": 4,
                    "temp_var2": 1,
                    "upper_value": 1
                },
                "uVar2_newValue": {
                    "new_remaining_bits": 1
                },
                "uVar2_oldValue": {
                    "original_remaining_bits": 1
                },
                "uVar2_result": {
                    "shifted_bit_pattern2": 1
                },
                "uVar2_unchanged": {
                    "original_bit_pattern2": 1
                },
                "uVar2_updatedValue": {
                    "updated_remaining_bits": 1
                },
                "uVar2_val1": {
                    "remaining_bits_threshold": 1
                },
                "uVar3": {
                    "final_data": 1,
                    "mask1": 1,
                    "new_mask": 1,
                    "offset": 1,
                    "shifted_address": 1,
                    "shifted_mask": 1,
                    "shifted_value": 1
                },
                "uVar4": {
                    "mask2": 1,
                    "masked_data": 2,
                    "shifted_data": 1,
                    "shifted_mask": 1
                },
                "uVar5": {
                    "masked_data": 1,
                    "updated_value": 1
                },
                "uVar6": {
                    "shifted_data": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003e54",
                "FUN_08000d98",
                "FUN_08000c8c",
                "FUN_08003eac"
            ],
            "code": "\n\n\nvoid update_character_data_08000e60(uint address,uint bit_mask,uint value)\n\n{\n  uint shift_amount;\n  uint remaining_bits;\n  \n  shift_amount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  remaining_bits = 7 - shift_amount;\n  if (3 < remaining_bits) {\n    remaining_bits = 4;\n  }\n  if (shift_amount + 4 < 7) {\n    shift_amount = 0;\n  }\n  else {\n    shift_amount = shift_amount - 3;\n  }\n  shift_amount = (bit_mask & (1 << (remaining_bits & 0xff)) - 1U) << (shift_amount & 0xff) |\n          (1 << (shift_amount & 0xff)) - 1U & value;\n  if ((int)address < 0) {\n    *(char *)((address & 0xf) + 0xe000ed14) = (char)(shift_amount << 4);\n  }\n  else {\n    *(char *)(address + 0xe000e400) = (char)(shift_amount << 4);\n  }\n  return;\n}\n\n",
            "current_name": "update_character_data_08000e60",
            "entrypoint": "0x08000e60",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000e60": "update_character_data_08000e60",
                "param_1": "address",
                "param_2": "bit_mask",
                "param_3": "value",
                "uVar1": "shift_amount",
                "uVar2": "remaining_bits"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000ec4": {
            "additional_data": {
                "0x1f": {
                    "bit_shift": 1
                },
                "0x1fff1f00": {
                    "array_base_address": 1
                },
                "1": {
                    "bit_mask": 1
                },
                "4": {
                    "array_size": 1
                },
                "FUN_08000ec4": {
                    "set_bit": 9,
                    "set_bit_at_index": 2,
                    "set_bit_at_position": 2,
                    "set_bit_in32_bit_array": 1,
                    "set_bit_in_array": 11,
                    "set_bit_in_int_array": 1,
                    "set_bit_in_integer_array": 1,
                    "set_bit_in_memory": 2,
                    "set_bit_in_pointer_array": 1,
                    "set_bit_value": 1
                },
                "int": {
                    "bit_array": 1,
                    "integer": 1
                },
                "new_variable_name_1": {
                    "shifted_value": 1
                },
                "new_variable_name_2": {
                    "array_index": 1
                },
                "param_1": {
                    "bit_index": 5,
                    "bit_position": 11,
                    "index": 13,
                    "input": 1,
                    "position": 1
                },
                "param_1_5": {
                    "array": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003e54",
                "FUN_08003eac"
            ],
            "code": "\nvoid set_bit_in_pointer_array_08000ec4(ubit_array index)\n\n{\n  if (-1 < (bit_array)index) {\n    *(bit_array *)((index >> 5) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "current_name": "set_bit_in_pointer_array_08000ec4",
            "entrypoint": "0x08000ec4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000ec4": "set_bit_in_pointer_array_08000ec4",
                "int": "bit_array",
                "param_1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000ee0": {
            "additional_data": {
                "DAT_e000e014": {
                    "memory_index": 1
                },
                "DAT_e000ed23": {
                    "constant": 1,
                    "constant_value": 6,
                    "flag": 2,
                    "hardware_status": 1,
                    "initial_value": 1,
                    "memory_datavalue": 1,
                    "memory_status": 1,
                    "memory_value": 1,
                    "status": 7,
                    "status_flag": 5
                },
                "FUN_08000ee0": {
                    "initialize": 1,
                    "initialize_data": 12,
                    "initialize_hardware": 1,
                    "initialize_memory": 8,
                    "initialize_memory_layout": 1,
                    "initialize_parameters": 1,
                    "initialize_registers": 1,
                    "initialize_settings": 2,
                    "initialize_value": 1,
                    "initialize_values": 1,
                    "set_param_values": 1,
                    "update_data": 1
                },
                "_DAT_e000e010": {
                    "bit_width": 1,
                    "bitmask": 1,
                    "config": 1,
                    "constant_value": 2,
                    "count": 1,
                    "counter": 3,
                    "default_flag": 1,
                    "default_setting": 1,
                    "default_value": 1,
                    "flag": 7,
                    "flag_value": 1,
                    "flags": 1,
                    "hardware_flag": 1,
                    "initialized_flag": 1,
                    "limit": 1,
                    "max_value": 1,
                    "memory_flag": 1,
                    "modified_param_3": 1,
                    "threshold": 1,
                    "variable2": 1
                },
                "_DAT_e000e014": {
                    "adjusted_value": 2,
                    "data_address": 1,
                    "data_index": 1,
                    "data_pointer": 2,
                    "first_address": 1,
                    "hardware_address": 1,
                    "initialized_value": 1,
                    "memory_address": 3,
                    "memory_pointer": 1,
                    "memory_start": 1,
                    "modified_input_value": 2,
                    "modified_param_1": 1,
                    "modified_value": 1,
                    "offset": 1,
                    "previous_value": 1,
                    "register_value": 1,
                    "updated_data": 1,
                    "updated_value": 6
                },
                "_DAT_e000e018": {
                    "additional_data": 1,
                    "additional_value": 1,
                    "counter": 13,
                    "flag": 3,
                    "hardware_value": 1,
                    "memory_count": 1,
                    "modified_param_2": 1,
                    "offset": 1,
                    "reset_value": 1,
                    "second_address": 1,
                    "some_data": 1,
                    "some_value": 1,
                    "unused_variable": 1,
                    "variable1": 1,
                    "zero_value": 1
                },
                "param_1": {
                    "data": 1,
                    "hardware_id": 1,
                    "input_value": 13,
                    "size": 3,
                    "value": 13
                }
            },
            "called": [],
            "calling": [
                "FUN_08000d98",
                "FUN_08000c8c"
            ],
            "code": "\n\n\nundefined4 initialize_data_08000ee0(int value)\n\n{\n  if (value - 1U < 0x1000000) {\n    _DAT_e000e014 = value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_data_08000ee0",
            "entrypoint": "0x08000ee0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000ee0": "initialize_data_08000ee0",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000f0c": {
            "additional_data": {
                "FUN_08000f0c": {
                    "set_bit": 8,
                    "set_bit_at_index": 1,
                    "set_bit_at_offset": 1,
                    "set_bit_at_position": 5,
                    "set_bit_in_array": 6,
                    "set_bit_in_memory": 9,
                    "set_bit_value": 1
                },
                "param_1": {
                    "bit_index": 11,
                    "bit_position": 8,
                    "index": 3,
                    "offset": 1,
                    "position": 7,
                    "value": 1
                },
                "param_2": {
                    "new_bit_value": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid set_bit_in_memory_08000f0c(uint bit_index)\n\n{\n  if (-1 < (int)bit_index) {\n    *(int *)(((bit_index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (bit_index & 0x1f);\n  }\n  return;\n}\n\n",
            "current_name": "set_bit_in_memory_08000f0c",
            "entrypoint": "0x08000f0c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000f0c": "set_bit_in_memory_08000f0c",
                "param_1": "bit_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000f2c": {
            "additional_data": {
                "DAT_e000e010": {
                    "data": 1
                },
                "FUN_08000f2c": {
                    "set_control_bits": 1,
                    "set_e000e010_bit": 2,
                    "set_flag": 2,
                    "set_flag_if_needed": 1,
                    "set_permission_flag": 1,
                    "toggle_flag": 1,
                    "update_bitmask": 1,
                    "update_configuration": 1,
                    "update_control_register": 1,
                    "update_data": 1,
                    "update_e000e010": 1,
                    "update_e000e010_flag": 1,
                    "update_e000e010_register": 1,
                    "update_flag": 4,
                    "update_flags": 1,
                    "update_permission_flag": 1,
                    "update_permissions": 1,
                    "update_register_flag": 1,
                    "update_register_value": 1,
                    "update_status": 5,
                    "update_status_flag": 1
                },
                "_DAT_e000e010": {
                    "bitmask": 1,
                    "configuration_register": 1,
                    "control_register": 2,
                    "e000e010_register": 1,
                    "flag_register": 2,
                    "flags": 1,
                    "permission_flag": 1,
                    "register": 1,
                    "register_flag": 1,
                    "register_value": 4,
                    "status": 1,
                    "status_register": 5
                },
                "param_1": {
                    "control_flag": 1,
                    "flag": 2,
                    "flag_value": 7,
                    "input": 2,
                    "input_value": 1,
                    "num": 1,
                    "permission_level": 2,
                    "selected_option": 1,
                    "status": 5,
                    "status_flag": 1,
                    "value": 7
                }
            },
            "called": [],
            "calling": [
                "FUN_08000c8c"
            ],
            "code": "\n\n\nvoid update_status_flag_08000f2c(int flag_value)\n\n{\n  if (flag_value != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "current_name": "update_status_flag_08000f2c",
            "entrypoint": "0x08000f2c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000f2c": "update_status_flag_08000f2c",
                "param_1": "flag_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000f4c": {
            "called": [],
            "calling": [
                "FUN_08000f4e"
            ],
            "code": "\nvoid FUNC_08000f4c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08000f4c",
            "entrypoint": "0x08000f4c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08000f4c": "FUNC_08000f4c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08000f4e": {
            "additional_data": {
                "FUNC_08000f4c": {
                    "call_another_function": 1,
                    "call_initialization_function": 1,
                    "configure_system": 2,
                    "do_something": 2,
                    "execute_initialization": 1,
                    "execute_sub_function": 1,
                    "initialize": 1,
                    "initialize_application": 2,
                    "initialize_data": 1,
                    "initialize_dependencies": 1,
                    "initialize_function": 1,
                    "initialize_resources": 1,
                    "initialize_system": 2,
                    "invoke_function_08000f4c": 1,
                    "perform_action": 1,
                    "perform_important_task": 1,
                    "perform_initial_setup": 1,
                    "perform_initialization": 2,
                    "perform_pre_initialization": 1,
                    "perform_preparation": 3,
                    "perform_required_initialization": 1,
                    "perform_startup_operations": 1,
                    "preliminary_setup": 1
                },
                "FUN_08000f4e": {
                    "execute_application": 2,
                    "execute_function": 3,
                    "execute_function_08000f4e": 1,
                    "execute_functions": 1,
                    "execute_initial_setup": 6,
                    "execute_initialization": 6,
                    "execute_initiation_process": 1,
                    "execute_main_function": 2,
                    "execute_preparation": 1,
                    "initialize": 4,
                    "initialize_application": 3,
                    "initialize_system": 1
                }
            },
            "called": [
                "FUN_08000f4c"
            ],
            "calling": [
                "FUN_08003476"
            ],
            "code": "\nvoid initialize_application_08000f4e(void)\n\n{\n  FUNC_08000f4c();\n  return;\n}\n\n",
            "current_name": "initialize_application_08000f4e",
            "entrypoint": "0x08000f4e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000f4e": "initialize_application_08000f4e"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000f56": {
            "additional_data": {
                "DAT_080033c8": {
                    "memory_address_bit": 1
                },
                "FUN_08000f56": {
                    "clear_memory": 1,
                    "initialize": 1,
                    "initialize_data": 6,
                    "initialize_data_structure": 3,
                    "initialize_data_structures": 1,
                    "initialize_device": 1,
                    "initialize_function": 1,
                    "initialize_memory": 3,
                    "initialize_memory_block": 1,
                    "initialize_object": 2,
                    "initialize_param": 1,
                    "reset_memory_and_flags": 1,
                    "reset_parameter": 1,
                    "set_mem_and_clear_bit": 1,
                    "set_memory_to_zero": 1,
                    "set_memory_values": 1,
                    "update_data": 1,
                    "update_data_structure": 2,
                    "update_memory_info": 1,
                    "update_memory_information": 1
                },
                "PTR_080033c8": {
                    "bit_memory_address": 1
                },
                "clear_bit_in_memory_address_080033c8": {
                    "clear_bit_in_memory_address": 1,
                    "clear_memory_bit": 3
                },
                "newParam": {
                    "new_memory_value": 1
                },
                "param_1": {
                    "data": 3,
                    "data_address": 1,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "data_structure": 1,
                    "data_structure_address": 1,
                    "data_structure_pointer": 1,
                    "data_structure_ptr": 2,
                    "device_address": 1,
                    "input_value": 1,
                    "mem_address": 1,
                    "memory_address": 9,
                    "memory_block_address": 1,
                    "memory_location": 1,
                    "object_address": 1,
                    "object_pointer": 1,
                    "param": 1,
                    "parameter": 1
                },
                "ptr_param_1": {
                    "memory_address_pointer": 1
                },
                "undefined4": {
                    "status_code": 1
                }
            },
            "called": [
                "FUN_080033c8"
            ],
            "calling": [
                "FUN_080033d8"
            ],
            "code": "\nstatus_code initialize_data_structure_08000f56(int memory_address)\n\n{\n  if (memory_address != 0) {\n    *(undefined *)(memory_address + 4) = 2;\n    clear_memory_bit();\n    *(status_code *)(memory_address + 0x10) = 0;\n    *(undefined *)(memory_address + 4) = 0;\n    *(undefined *)(memory_address + 5) = 0;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_data_structure_08000f56",
            "entrypoint": "0x08000f56",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000f56": "initialize_data_structure_08000f56",
                "clear_bit_in_memory_address_080033c8": "clear_memory_bit",
                "param_1": "memory_address",
                "undefined4": "status_code"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000f72": {
            "additional_data": {
                "FUN_08000f72": {
                    "clear_bit_and_set": 1,
                    "clear_bit_and_set_flag": 21,
                    "clear_bit_and_set_one": 1,
                    "clear_bit_and_update_flag": 2,
                    "clear_bit_in_pointer": 1,
                    "clear_bit_in_value": 1,
                    "update_bit_and_set_flag": 1,
                    "update_bit_and_set_one": 1,
                    "update_bit_value": 1,
                    "update_bitwise_flag": 1
                },
                "param_1": {
                    "array_pointer": 2,
                    "bit_array": 3,
                    "bit_pointer": 1,
                    "bit_ptr": 1,
                    "bit_value_ptr": 1,
                    "bits": 2,
                    "bits_pointer": 1,
                    "bitset": 1,
                    "data": 6,
                    "data_flag": 1,
                    "input_data": 1,
                    "input_pointer": 1,
                    "pointer": 2,
                    "pointer_to_uint": 1,
                    "pointer_to_value": 1,
                    "ptr": 1,
                    "ptr_to_u_int_ptr": 1,
                    "value": 1,
                    "value_ptr": 3
                },
                "param_2": {
                    "bit_index": 10,
                    "bit_position": 21
                },
                "undefined4": {
                    "result": 1,
                    "void": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080033d8"
            ],
            "code": "\nvoid clear_bit_and_set_flag_08000f72(uint **data,uint bit_position)\n\n{\n  **data = **data & ~(1 << (bit_position & 0xff));\n  *(undefined *)(data + 1) = 1;\n  return 0;\n}\n\n",
            "current_name": "clear_bit_and_set_flag_08000f72",
            "entrypoint": "0x08000f72",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000f72": "clear_bit_and_set_flag_08000f72",
                "param_1": "data",
                "param_2": "bit_position",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000f8c": {
            "additional_data": {
                "0x02": {
                    "condition": 1,
                    "expected_value": 1
                },
                "0x15": {
                    "index": 1
                },
                "0x35": {
                    "offset": 1
                },
                "0x80": {
                    "new_value": 1
                },
                "0xfffffffe": {
                    "bit_mask": 4,
                    "bitwise_mask": 1
                },
                "5": {
                    "new_status_value": 1,
                    "new_value": 1,
                    "updated_flag_value": 1
                },
                "FUN_08000f8c": {
                    "check_and_update_value": 1,
                    "handle_param": 1,
                    "set_flag_on_condition": 1,
                    "set_mode_and_check": 1,
                    "set_param_value": 2,
                    "update_data": 2,
                    "update_flag_and_value": 2,
                    "update_flags": 1,
                    "update_param": 2,
                    "update_param_value": 1,
                    "update_param_value_if_valid": 1,
                    "update_parameter": 3,
                    "update_parameter_value": 3,
                    "update_status": 4,
                    "update_value": 6
                },
                "char": {
                    "byte_char": 1,
                    "character": 1
                },
                "char_35": {
                    "value": 1
                },
                "input": {
                    "input": 1
                },
                "int": {
                    "integer": 1
                },
                "param_1": {
                    "config": 1,
                    "data": 2,
                    "data_ptr": 1,
                    "input": 3,
                    "input_array": 2,
                    "param": 5,
                    "param_array": 2,
                    "param_list": 1,
                    "parameter": 4,
                    "parameter_array": 1,
                    "parameters": 3,
                    "params": 2,
                    "pointer": 2,
                    "status": 1,
                    "status_ptr": 1
                },
                "uint": {
                    "unsigned_int": 1,
                    "unsigned_integer": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08001ab0",
                "FUN_08002ffc"
            ],
            "code": "\nundefined4 update_parameter_value_08000f8c(unsigned_integer **param)\n\n{\n  if (*(byte_char *)((integer)param + 0x35) != '\\x02') {\n    param[0x15] = (unsigned_integer *)0x80;\n    return 1;\n  }\n  *(undefined *)((integer)param + 0x35) = 5;\n  **param = **param & 0xfffffffe;\n  return 0;\n}\n\n",
            "current_name": "update_parameter_value_08000f8c",
            "entrypoint": "0x08000f8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000f8c": "update_parameter_value_08000f8c",
                "char": "byte_char",
                "int": "integer",
                "param_1": "param",
                "uint": "unsigned_integer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000fb4": {
            "additional_data": {
                "FUN_08000fb4": {
                    "improve_parameters": 1,
                    "reverse_and_update_bits": 1,
                    "reverse_bits_and_update_registers": 1,
                    "update_data": 1,
                    "update_memory": 1,
                    "update_memory_values": 1,
                    "update_parameters": 2,
                    "update_registers": 22
                },
                "_DAT_40013c00": {
                    "flag1": 1,
                    "flag_value1": 1,
                    "register_flag1": 1
                },
                "_DAT_40013c04": {
                    "flag2": 1,
                    "flag_value2": 1,
                    "register_flag2": 1
                },
                "_DAT_40013c08": {
                    "flag3": 1,
                    "flag_value3": 1,
                    "register_flag3": 1
                },
                "_DAT_40013c0c": {
                    "flag_value4": 1,
                    "global_flag": 1,
                    "register_address": 1,
                    "register_value": 1
                },
                "_DAT_40023844": {
                    "flag": 2,
                    "special_flag": 1,
                    "system_register": 1
                },
                "iVar6": {
                    "byte_index": 2,
                    "group_id": 1,
                    "index1": 14,
                    "index3": 1,
                    "index_var1": 3,
                    "offset": 1,
                    "reg_index": 1,
                    "register_index": 3,
                    "register_index1": 2,
                    "register_offset": 1,
                    "temp_var6": 1
                },
                "iVar8": {
                    "bit_index": 2,
                    "bit_offset": 3,
                    "index2": 12,
                    "index3": 2,
                    "index4": 1,
                    "index_var2": 3,
                    "register_index2": 1,
                    "register_offset": 1,
                    "shift": 1,
                    "shift_amount": 2,
                    "shifted_bits": 1,
                    "temp_var8": 1
                },
                "param_1": {
                    "data_array": 1,
                    "input_data": 1,
                    "memory": 1,
                    "memory_array1": 1,
                    "original_registers": 1,
                    "output_array": 1,
                    "output_data": 2,
                    "output_params": 1,
                    "register_1": 1,
                    "register_array": 5,
                    "register_array1": 3,
                    "register_values": 3,
                    "registers": 7,
                    "registers_to_update": 1,
                    "source_registers": 1
                },
                "param_2": {
                    "data": 3,
                    "data_array": 1,
                    "flags": 1,
                    "input_array": 6,
                    "input_data": 3,
                    "input_params": 1,
                    "input_values": 3,
                    "memory_array2": 1,
                    "new_register_values": 1,
                    "new_registers": 1,
                    "register_2": 1,
                    "register_array2": 3,
                    "updated_registers": 1,
                    "updates": 1,
                    "values": 3
                },
                "uVar1": {
                    "mask": 1,
                    "old_value": 1,
                    "param_flag1": 1,
                    "register_mask": 1,
                    "register_value1": 1,
                    "temp1": 8,
                    "temp_1": 1,
                    "temp_value1": 1,
                    "temp_var1": 14,
                    "update_bit": 1
                },
                "uVar2": {
                    "bit_mask": 5,
                    "mask": 1,
                    "register_value2": 1,
                    "temp2": 8,
                    "temp_2": 1,
                    "temp_value2": 1,
                    "temp_var2": 13
                },
                "uVar3": {
                    "bit_index": 3,
                    "counter": 1,
                    "i": 2,
                    "index": 9,
                    "index1": 1,
                    "iteration": 1,
                    "loop_counter": 6,
                    "loop_index": 3,
                    "loop_var": 4
                },
                "uVar4": {
                    "bit": 1,
                    "bit_check": 4,
                    "bit_mask": 5,
                    "bit_mask1": 1,
                    "bit_result": 1,
                    "bit_value": 3,
                    "check_value": 1,
                    "flag_mask": 1,
                    "index2": 1,
                    "mask": 4,
                    "temp3": 2,
                    "temp_value3": 1,
                    "temp_var3": 2,
                    "temp_var4": 3
                },
                "uVar5": {
                    "check_value": 1,
                    "condition": 1,
                    "data_element": 1,
                    "data_value": 2,
                    "flag_value": 1,
                    "input_value": 1,
                    "param_2_1": 1,
                    "param_flag2": 1,
                    "register_value": 1,
                    "temp3": 3,
                    "temp4": 2,
                    "temp_value4": 1,
                    "temp_var3": 1,
                    "temp_var4": 2,
                    "temp_var5": 7,
                    "value": 4
                },
                "uVar7": {
                    "bit_shift": 1,
                    "index2": 2,
                    "index_shifted": 1,
                    "register_index2": 1,
                    "shift_amount": 1,
                    "shift_count": 1,
                    "shift_index": 1,
                    "shift_value": 2,
                    "shifted_index": 3,
                    "shifted_value": 1,
                    "temp": 1,
                    "temp4": 2,
                    "temp5": 2,
                    "temp_3": 1,
                    "temp_value5": 1,
                    "temp_var4": 1,
                    "temp_var5": 2,
                    "temp_var7": 6
                }
            },
            "called": [],
            "calling": [
                "FUN_08003978",
                "FUN_08003486"
            ],
            "code": "\n\n\nvoid reverse_bits_and_update_registers_08000fb4(uint *registers,uint *input_array)\n\n{\n  uint temp_var1;\n  uint temp_var2;\n  uint index;\n  uint bit_mask;\n  uint temp_var5;\n  int index1;\n  uint temp_var7;\n  int index2;\n  \n  for (index = 0; index < 0x10; index = index + 1) {\n    temp_var2 = 1 << (index & 0xff);\n    bit_mask = temp_var2 & *input_array;\n    temp_var1 = _DAT_40013c0c;\n    if (temp_var2 == bit_mask) {\n      if ((input_array[1] == 2) || (input_array[1] == 0x12)) {\n        index1 = (index >> 3) + 8;\n        index2 = (index & 7) << 2;\n        registers[index1] = registers[index1] & ~(0xf << index2) | input_array[4] << index2;\n      }\n      temp_var7 = index << 1;\n      temp_var1 = ~(3 << (temp_var7 & 0xff));\n      *registers = *registers & temp_var1 | (input_array[1] & 3) << (temp_var7 & 0xff);\n      temp_var5 = input_array[1];\n      if (((temp_var5 - 1 < 2) || (temp_var5 == 0x11)) || (temp_var5 == 0x12)) {\n        registers[2] = registers[2] & temp_var1 | input_array[3] << (temp_var7 & 0xff);\n        registers[1] = registers[1] & ~temp_var2 | ((input_array[1] << 0x1b) >> 0x1f) << (index & 0xff);\n      }\n      registers[3] = temp_var1 & registers[3] | input_array[2] << (temp_var7 & 0xff);\n      temp_var1 = _DAT_40013c0c;\n      if ((input_array[1] & 0x10000000) != 0) {\n        _DAT_40023844 = _DAT_40023844 | 0x4000;\n        index2 = (index & 3) << 2;\n        if (registers == (uint *)0x40020000) {\n          index1 = 0;\n        }\n        else if (registers == (uint *)0x40020400) {\n          index1 = 1;\n        }\n        else if (registers == (uint *)0x40020800) {\n          index1 = 2;\n        }\n        else if (registers == (uint *)0x40020c00) {\n          index1 = 3;\n        }\n        else if (registers == (uint *)0x40021000) {\n          index1 = 4;\n        }\n        else if (registers == (uint *)0x40021400) {\n          index1 = 5;\n        }\n        else if (registers == (uint *)0x40021800) {\n          index1 = 6;\n        }\n        else if (registers == (uint *)0x40021c00) {\n          index1 = 7;\n        }\n        else if (registers == (uint *)0x40022000) {\n          index1 = 8;\n        }\n        else if (registers == (uint *)0x40022400) {\n          index1 = 9;\n        }\n        else {\n          index1 = 10;\n        }\n        *(uint *)(((index >> 2) + 2) * 4 + 0x40013800) =\n             *(uint *)(((index >> 2) + 2) * 4 + 0x40013800) & ~(0xf << index2) | index1 << index2;\n        temp_var1 = ~bit_mask;\n        temp_var2 = _DAT_40013c00 & temp_var1;\n        if ((input_array[1] & 0x10000) != 0) {\n          temp_var2 = bit_mask | _DAT_40013c00;\n        }\n        temp_var5 = temp_var1 & _DAT_40013c04;\n        if ((input_array[1] & 0x20000) != 0) {\n          temp_var5 = bit_mask | _DAT_40013c04;\n        }\n        temp_var7 = temp_var1 & _DAT_40013c08;\n        if ((input_array[1] & 0x100000) != 0) {\n          temp_var7 = bit_mask | _DAT_40013c08;\n        }\n        _DAT_40013c00 = temp_var2;\n        _DAT_40013c04 = temp_var5;\n        _DAT_40013c08 = temp_var7;\n        temp_var1 = temp_var1 & _DAT_40013c0c;\n        if ((input_array[1] & 0x200000) != 0) {\n          temp_var1 = bit_mask | _DAT_40013c0c;\n        }\n      }\n    }\n    _DAT_40013c0c = temp_var1;\n  }\n  return;\n}\n\n",
            "current_name": "reverse_bits_and_update_registers_08000fb4",
            "entrypoint": "0x08000fb4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000fb4": "reverse_bits_and_update_registers_08000fb4",
                "iVar6": "index1",
                "iVar8": "index2",
                "param_1": "registers",
                "param_2": "input_array",
                "uVar1": "temp_var1",
                "uVar2": "temp_var2",
                "uVar3": "index",
                "uVar4": "bit_mask",
                "uVar5": "temp_var5",
                "uVar7": "temp_var7"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001198": {
            "additional_data": {
                "0x18": {
                    "offset": 2
                },
                "FUN_08001198": {
                    "set_param": 4,
                    "set_param_2_in_memory": 2,
                    "set_param_shifted": 1,
                    "set_param_value": 17,
                    "set_parameter_value": 2,
                    "store_value_based_on_condition": 1,
                    "update_param1_value": 1,
                    "update_parameter": 1,
                    "update_parameter_value": 1,
                    "update_value": 1
                },
                "param_1": {
                    "address": 1,
                    "base_addr": 1,
                    "base_address": 6,
                    "obj": 1,
                    "obj_address": 3,
                    "obj_ptr": 1,
                    "object_address": 16,
                    "object_base_address": 1,
                    "target_address": 1
                },
                "param_2": {
                    "new_value": 9,
                    "param_value": 2,
                    "shifted_value": 1,
                    "value": 18,
                    "value_to_store": 1
                },
                "param_3": {
                    "condition_flag": 1,
                    "has_shift": 1,
                    "is_shift_enabled": 1,
                    "is_shifted": 18,
                    "shift_flag": 5,
                    "shift_value": 5
                },
                "value_shifted": {
                    "shifted_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080034b6"
            ],
            "code": "\nvoid set_param_value_08001198(int object_address,int value,int is_shifted)\n\n{\n  if (is_shifted == 0) {\n    *(int *)(object_address + 0x18) = value << 0x10;\n    return;\n  }\n  *(int *)(object_address + 0x18) = value;\n  return;\n}\n\n",
            "current_name": "set_param_value_08001198",
            "entrypoint": "0x08001198",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001198": "set_param_value_08001198",
                "param_1": "object_address",
                "param_2": "value",
                "param_3": "is_shifted"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080011a4": {
            "additional_data": {
                "FUN_080011a4": {
                    "check_and_process_data": 2,
                    "process_data_if_bit_set": 3,
                    "process_if_bit_set": 1,
                    "set_data_and_process": 1,
                    "update_and_process_data": 4,
                    "update_data_and_process": 3,
                    "update_data_and_process_if_bit_set": 4,
                    "update_data_if_bit_set": 11,
                    "update_data_if_needed": 1,
                    "update_flag_and_process_data": 1
                },
                "_DAT_40013c14": {
                    "bit_data": 1,
                    "bit_mask": 2,
                    "current_data": 2,
                    "data": 6,
                    "data_flag": 2,
                    "data_register": 6,
                    "data_value": 1,
                    "data_variable": 1,
                    "global_data": 1,
                    "global_flag": 1,
                    "updated_data": 1
                },
                "param_1": {
                    "bit_flags": 1,
                    "bit_mask": 14,
                    "bitmask": 1,
                    "bits_to_check": 1,
                    "data": 5,
                    "data_to_check": 1,
                    "data_to_update": 1,
                    "flag": 1,
                    "input_data": 2,
                    "input_status": 1,
                    "input_value": 1,
                    "new_data": 2
                },
                "process_data_if_bit_set_080047d0": {
                    "process_data": 4,
                    "process_data_if_bit_set": 3,
                    "process_if_bit_set": 1,
                    "process_updated_data": 4
                }
            },
            "called": [
                "FUN_080047d0"
            ],
            "calling": [],
            "code": "\n\n\nvoid update_data_and_process_if_bit_set_080011a4(uint bit_mask)\n\n{\n  if ((_DAT_40013c14 & bit_mask) != 0) {\n    _DAT_40013c14 = bit_mask;\n    process_data();\n  }\n  return;\n}\n\n",
            "current_name": "update_data_and_process_if_bit_set_080011a4",
            "entrypoint": "0x080011a4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080011a4": "update_data_and_process_if_bit_set_080011a4",
                "param_1": "bit_mask",
                "process_data_if_bit_set_080047d0": "process_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080011c0": {
            "additional_data": {
                "0": {
                    "flag_case1": 1
                },
                "0x10": {
                    "flags_offset": 1,
                    "result": 1
                },
                "0x11": {
                    "flags_value": 1,
                    "value": 1
                },
                "0x14": {
                    "condition": 1,
                    "offset2": 1
                },
                "0x3d": {
                    "character_2": 1,
                    "offset3": 1
                },
                "0x3e": {
                    "character": 1,
                    "offset1": 1
                },
                "0x4000": {
                    "constant_value": 1,
                    "flag_case2": 1
                },
                "0xf0": {
                    "flag_mask3": 1
                },
                "0xf1": {
                    "flag_mask4": 1
                },
                "0xfe": {
                    "flag_mask1": 1
                },
                "0xffU": {
                    "flag_mask2": 1
                },
                "1": {
                    "flag_bit1": 1
                },
                "FUN_080011c0": {
                    "configure_device": 1,
                    "initialize_flag": 1,
                    "process_param": 1,
                    "set_access_permissions": 1,
                    "set_flag_based_on_condition": 1,
                    "set_flag_value": 1,
                    "set_permission_flag": 1,
                    "update_config": 1,
                    "update_configuration": 1,
                    "update_control_register": 1,
                    "update_control_value": 1,
                    "update_data": 1,
                    "update_flag": 1,
                    "update_flag_based_on_conditions": 1,
                    "update_flag_value": 3,
                    "update_flags": 1,
                    "update_flags_based_on_condition": 1,
                    "update_flags_based_on_param": 1,
                    "update_param_value": 3,
                    "update_parameter": 1,
                    "update_parameter_flags": 1,
                    "update_parameter_value": 2,
                    "update_status": 3,
                    "update_value_based_on_conditions": 1
                },
                "char": {
                    "character": 2
                },
                "controlRegister": {
                    "ctrl_reg": 1
                },
                "inputArray": {
                    "input_array": 1
                },
                "input_array": {
                    "input_array": 1
                },
                "int": {
                    "integer": 2
                },
                "param_1": {
                    "access_data": 1,
                    "config": 2,
                    "control_array": 1,
                    "control_register": 1,
                    "data": 3,
                    "device_config": 1,
                    "flag_data": 1,
                    "flags_array": 1,
                    "input_array": 3,
                    "input_data": 1,
                    "input_params": 2,
                    "param": 1,
                    "param_array": 3,
                    "parameter_array": 2,
                    "parameters": 5,
                    "status": 2,
                    "status_list": 1
                },
                "uint": {
                    "unsigned_integer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 update_flag_value_080011c0(integer *parameters)\n\n{\n  if (*(character *)((integer)parameters + 0x3e) == '@') {\n    if (parameters[0x14] == 0) {\n      *(unsigned_integer *)(*parameters + 0x10) = parameters[0x11] & 0xfe;\n    }\n    else {\n      *(unsigned_integer *)(*parameters + 0x10) = parameters[0x11] & flag_mask2 | 1;\n    }\n  }\n  else if (parameters[4] == 0x4000) {\n    if (*(character *)((integer)parameters + 0x3d) == '!') {\n      *(unsigned_integer *)(*parameters + 0x10) = parameters[0x11] & 0xfe;\n    }\n    else {\n      *(unsigned_integer *)(*parameters + 0x10) = parameters[0x11] & flag_mask2 | 1;\n    }\n  }\n  else if (parameters[0x14] == 0) {\n    *(unsigned_integer *)(*parameters + 0x10) = (unsigned_integer)(parameters[0x11] << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (parameters[0x14] == 1) {\n    *(unsigned_integer *)(*parameters + 0x10) = (unsigned_integer)(parameters[0x11] << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_flag_value_080011c0",
            "entrypoint": "0x080011c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "0xffU": "flag_mask2",
                "FUN_080011c0": "update_flag_value_080011c0",
                "char": "character",
                "int": "integer",
                "param_1": "parameters",
                "uint": "unsigned_integer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800124a": {
            "additional_data": {
                "0x10": {
                    "offset": 3
                },
                "0x11": {
                    "offset": 1
                },
                "0xff": {
                    "mask": 3
                },
                "DAT_": {
                    "data": 1
                },
                "DAT_0800124a": {
                    "constant": 1
                },
                "FUN_0800124a": {
                    "convert_byte_to_int": 1,
                    "copy_byte_to_address": 1,
                    "extract_and_assign_byte": 1,
                    "extract_and_store": 1,
                    "set_byte_from_array": 1,
                    "set_byte_from_index": 1,
                    "set_byte_from_param": 1,
                    "set_byte_value": 1,
                    "set_input_value": 1,
                    "set_low_byte": 1,
                    "set_memory_value_from_param": 1,
                    "set_param_value": 1,
                    "set_param_value_from_array": 1,
                    "set_parameter_value": 3,
                    "set_unsigned_byte_value": 1,
                    "store_byte_to_memory": 1,
                    "store_byte_value": 1,
                    "update_memory_value": 1,
                    "update_parameter": 1,
                    "update_parameter_value": 2,
                    "update_u_int_value": 1,
                    "update_value": 4,
                    "update_value_in_memory": 1,
                    "update_value_with_mask": 1,
                    "write_value_to_memory": 1
                },
                "PTR_": {
                    "memory_pointer": 1
                },
                "PTR_param_1": {
                    "pointer_parameter": 1
                },
                "PTR_param_1_plus_0x10": {
                    "pointer_plus_offset": 1
                },
                "param_1": {
                    "array": 2,
                    "array_ptr": 1,
                    "data": 1,
                    "data_block": 1,
                    "data_ptr": 1,
                    "input": 1,
                    "input_array": 7,
                    "input_data": 1,
                    "input_pointer": 1,
                    "int_array": 1,
                    "int_pointer": 1,
                    "memory_address": 3,
                    "memory_pointer": 1,
                    "param": 1,
                    "parameter": 5,
                    "parameter_array": 1,
                    "ptr_array": 1,
                    "values": 1
                },
                "parameter_offset": {
                    "updated_parameter_offset": 1
                },
                "value": {
                    "extracted_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 update_parameter_value_0800124a(int *input_array)\n\n{\n  *(uint *)(*input_array + 0x10) = input_array[0x11] & 0xff;\n  return 0;\n}\n\n",
            "current_name": "update_parameter_value_0800124a",
            "entrypoint": "0x0800124a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800124a": "update_parameter_value_0800124a",
                "param_1": "input_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001256": {
            "additional_data": {
                "0x1000": {
                    "mask4": 1
                },
                "0x12": {
                    "value12": 1
                },
                "0x14": {
                    "second_param_index": 1
                },
                "0x2": {
                    "value2": 1
                },
                "0x2a": {
                    "short_offset": 1
                },
                "0x3d": {
                    "char1_offset": 1
                },
                "0x3e": {
                    "char2_offset": 1
                },
                "0x4": {
                    "ptr1_value1": 1,
                    "special_value2": 1
                },
                "0x400": {
                    "mask2": 1
                },
                "0x8": {
                    "ptr1_value2": 1,
                    "special_value3": 1
                },
                "0x800": {
                    "mask3": 1
                },
                "0xb": {
                    "index": 1
                },
                "0xc": {
                    "c_value": 1
                },
                "0xc000": {
                    "constant_value": 1,
                    "ptr4_value": 1
                },
                "0xffff0000": {
                    "ptr1_value": 1,
                    "special_value1": 1
                },
                "0xfffffbff": {
                    "mask": 1
                },
                "4": {
                    "ptr4": 1
                },
                "FUN_08001256": {
                    "apply_flags_to_param": 1,
                    "check_and_update_bit_flags": 1,
                    "check_and_update_flags": 1,
                    "determine_flags": 1,
                    "process_flags": 1,
                    "process_input": 1,
                    "process_param": 1,
                    "process_parameters": 1,
                    "set_flag": 2,
                    "update_flag_status": 1,
                    "update_flag_values": 1,
                    "update_flags": 10,
                    "update_flags_based_on_conditions": 3,
                    "update_flags_based_on_params": 2,
                    "update_param_flags": 1,
                    "update_permission_flags": 2,
                    "update_status": 1
                },
                "char_i": {
                    "char_value": 1
                },
                "param_1": {
                    "calling_params": 1,
                    "data": 1,
                    "input_array": 1,
                    "input_data": 1,
                    "param": 4,
                    "param_array": 1,
                    "parameters": 15,
                    "params": 7
                },
                "puVar1": {
                    "current_data": 1,
                    "current_param": 2,
                    "current_permission": 1,
                    "current_ptr": 1,
                    "current_value": 1,
                    "flag": 1,
                    "flag_pointer": 1,
                    "param_b": 1,
                    "pointer": 1,
                    "pointer_var1": 2,
                    "ptr": 6,
                    "ptr1": 3,
                    "ptr_value": 1,
                    "ptr_value1": 1,
                    "some_value": 1,
                    "temp_ptr": 1,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "value": 1,
                    "value1": 1,
                    "value_pointer": 2
                },
                "short_i": {
                    "short_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 update_flags_based_on_conditions_08001256(uint **parameters)\n\n{\n  uint *ptr;\n  \n  ptr = parameters[0xb];\n  if ((*(char *)((int)parameters + 0x3d) == '\\\"') &&\n     ((parameters[0x14] != (uint *)0x0 || (*(char *)((int)parameters + 0x3e) != '@')))) {\n    if ((parameters[0x14] == (uint *)0x0) && (parameters[4] == (uint *)0xc000)) {\n      **parameters = **parameters | 0x100;\n      parameters[0x14] = (uint *)((int)parameters[0x14] + 1);\n    }\n    else {\n      if (*(short *)((int)parameters + 0x2a) == 0) {\n        **parameters = **parameters | 0x200;\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 1) {\n        if (ptr == (uint *)0xffff0000) {\n          **parameters = **parameters & 0xfffffbff;\n          ptr = *parameters;\n          if ((ptr[1] & 0x800) == 0) {\n            *ptr = *ptr | 0x200;\n          }\n          else {\n            *ptr = *ptr & 0xfffffbff;\n          }\n        }\n        else if (((ptr == (uint *)0x4) || (ptr == (uint *)0x8)) ||\n                (parameters[0xc] == (uint *)0x12)) {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x200;\n        }\n        else if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 2) {\n        if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x800;\n        }\n        ptr = *parameters;\n        if ((ptr[1] & 0x800) != 0) {\n          ptr[1] = ptr[1] | 0x1000;\n        }\n      }\n      else {\n        **parameters = **parameters | 0x400;\n        ptr = *parameters;\n        if ((ptr[1] & 0x800) != 0) {\n          ptr[1] = ptr[1] | 0x1000;\n        }\n      }\n      parameters[0x14] = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "update_flags_based_on_conditions_08001256",
            "entrypoint": "0x08001256",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001256": "update_flags_based_on_conditions_08001256",
                "param_1": "parameters",
                "puVar1": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001420": {
            "additional_data": {
                "FUN_08001420": {
                    "extract_byte": 1,
                    "process_data": 1,
                    "update_byte_array": 1,
                    "update_counter": 1,
                    "update_data": 13,
                    "update_data_buffer": 1,
                    "update_data_pointer": 1,
                    "update_param": 1,
                    "update_parameter": 1,
                    "update_parameter_value": 2,
                    "update_pointer_and_decrement": 1,
                    "update_value": 4,
                    "update_value_and_decrement": 1,
                    "update_value_and_decrement_counter": 1,
                    "update_value_in_struct": 1
                },
                "param_1": {
                    "array": 1,
                    "counter_array": 1,
                    "data": 15,
                    "data_buffer": 1,
                    "data_ptr": 1,
                    "input_array": 3,
                    "input_params": 1,
                    "input_struct": 1,
                    "param": 1,
                    "parameter": 3,
                    "pointer_array": 1,
                    "values": 2
                },
                "pbVar1": {
                    "buffer": 1,
                    "byte_array": 1,
                    "byte_data": 1,
                    "byte_pointer": 17,
                    "byte_ptr": 8,
                    "current_byte": 2,
                    "pointer_to_byte": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 update_data_pointer_08001420(int *data)\n\n{\n  byte *byte_pointer;\n  \n  if (*(short *)((int)data + 0x2a) != 0) {\n    byte_pointer = (byte *)data[9];\n    data[9] = (int)(byte_pointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*byte_pointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_data_pointer_08001420",
            "entrypoint": "0x08001420",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001420": "update_data_pointer_08001420",
                "param_1": "data",
                "pbVar1": "byte_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001440": {
            "additional_data": {
                "FUN_08001440": {
                    "increment_and_copy_character": 1,
                    "reverse_and_decrement": 1,
                    "update_and_decrement_value": 1,
                    "update_array_and_decrement": 1,
                    "update_array_element": 2,
                    "update_array_item": 1,
                    "update_char_array_at_index": 1,
                    "update_character": 1,
                    "update_data": 6,
                    "update_element": 1,
                    "update_param": 1,
                    "update_param_value": 1,
                    "update_parameter": 2,
                    "update_parameters": 1,
                    "update_short_value": 1,
                    "update_value": 8,
                    "update_value_and_count": 1
                },
                "param_1": {
                    "array": 10,
                    "array_ptr": 2,
                    "char_array": 1,
                    "character": 1,
                    "data": 6,
                    "data_ptr": 1,
                    "input_array": 3,
                    "input_params": 1,
                    "param": 2,
                    "param_array": 1,
                    "parameter": 1,
                    "parameters": 1,
                    "values": 1
                },
                "puVar1": {
                    "buffer": 1,
                    "byte_pointer": 2,
                    "byte_ptr": 1,
                    "current_item": 1,
                    "current_pointer": 1,
                    "data_pointer": 1,
                    "dest": 1,
                    "destination": 2,
                    "element_pointer": 1,
                    "element_ptr": 1,
                    "new_param_value": 1,
                    "next_byte": 1,
                    "next_free_slot": 1,
                    "pointer": 2,
                    "ptr": 5,
                    "ptr_element": 1,
                    "ptr_to_char": 1,
                    "ptr_to_data": 1,
                    "ptr_to_element": 1,
                    "ptr_value": 1,
                    "updated_pointer": 2,
                    "value_pointer": 1,
                    "value_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 update_param_value_08001440(int *array)\n\n{\n  undefined *ptr;\n  \n  if (*(short *)((int)array + 0x2a) != 0) {\n    ptr = (undefined *)array[9];\n    array[9] = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*array + 0x10);\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_param_value_08001440",
            "entrypoint": "0x08001440",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001440": "update_param_value_08001440",
                "param_1": "array",
                "puVar1": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001460": {
            "additional_data": {
                "14param_1": {
                    "flag": 1
                },
                "15param_1": {
                    "flag": 1
                },
                "FUN_08001460": {
                    "check_and_modify_param": 1,
                    "check_and_update_params": 1,
                    "handle_function": 1,
                    "handle_parameters": 1,
                    "initialize_data_structure": 1,
                    "parse_function": 1,
                    "parse_input": 1,
                    "process_data": 2,
                    "process_input": 2,
                    "process_param": 2,
                    "process_parameter": 1,
                    "process_parameters": 2,
                    "process_params": 4,
                    "update_data": 1,
                    "update_param_and_return_status": 1,
                    "update_parameters": 1,
                    "validate_and_initialize": 2,
                    "validate_and_initialize_data": 1,
                    "validate_input": 2,
                    "validate_param": 1,
                    "validate_parameters": 2
                },
                "param_1": {
                    "data": 1,
                    "data_ptr": 2,
                    "data_structure": 1,
                    "function_data": 2,
                    "input": 2,
                    "input_buffer": 1,
                    "input_data": 1,
                    "input_params": 1,
                    "options": 1,
                    "param_array": 1,
                    "param_list": 6,
                    "param_list_ptr": 1,
                    "param_ptr": 1,
                    "parameter_array": 1,
                    "parameter_list": 2,
                    "parameters": 2,
                    "params": 1,
                    "pointer_array": 1,
                    "pointer_to_array": 1,
                    "ptr_input": 1,
                    "ptr_param1": 1
                },
                "param_2": {
                    "arg1": 1,
                    "buffer": 2,
                    "data": 1,
                    "data1": 2,
                    "data_ptr": 4,
                    "input_array": 1,
                    "input_data": 1,
                    "input_param": 1,
                    "input_ptr": 3,
                    "output_buffer": 1,
                    "param1": 2,
                    "param2": 1,
                    "param_ptr": 2,
                    "param_ptr1": 1,
                    "pointer": 1,
                    "pointer_1": 1,
                    "ptr": 1,
                    "ptr1": 1,
                    "ptr_buffer": 1,
                    "ptr_param2": 1,
                    "value1": 2
                },
                "param_3": {
                    "arg2": 1,
                    "buffer_size": 2,
                    "count": 1,
                    "data2": 1,
                    "data_length": 1,
                    "input_length": 2,
                    "input_size": 3,
                    "length": 4,
                    "param2": 1,
                    "param3": 1,
                    "param_int": 1,
                    "param_length": 1,
                    "param_size": 2,
                    "param_value": 1,
                    "size": 7,
                    "value2": 2
                },
                "param_4": {
                    "additional_data": 1,
                    "arg3": 1,
                    "buffer": 1,
                    "config": 1,
                    "data2": 1,
                    "data3": 1,
                    "flags": 1,
                    "option": 1,
                    "other_data_ptr": 1,
                    "output": 1,
                    "output_array": 1,
                    "output_data": 1,
                    "output_param": 1,
                    "output_ptr": 3,
                    "param2": 1,
                    "param3": 1,
                    "param4": 1,
                    "param_data": 1,
                    "param_ptr2": 1,
                    "param_value": 1,
                    "pointer_2": 1,
                    "ptr2": 1,
                    "ptr_flag": 1,
                    "ptr_param3": 1,
                    "result": 1,
                    "result_ptr": 2,
                    "value3": 2
                },
                "puVar2": {
                    "array_pointer": 1,
                    "first_elem_ptr": 1,
                    "first_uint_ptr": 1,
                    "flag_ptr": 2,
                    "inner_ptr": 1,
                    "pointer": 5,
                    "pointer_value": 1,
                    "ptr": 8,
                    "ptr3": 1,
                    "ptr_temp": 1,
                    "ptr_to_parameter": 1,
                    "ptr_val": 1,
                    "ptr_value": 1,
                    "ptr_var": 1,
                    "ptr_var2": 1,
                    "temp_ptr": 4
                },
                "uVar1": {
                    "result": 25,
                    "return_value": 2,
                    "status": 3,
                    "success_flag": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003880"
            ],
            "code": "\nundefined4 process_params_08001460(uint **param_list,uint *data_ptr,int size,uint *output_ptr)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)param_list + 0x3d) == '(') {\n    if (data_ptr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (size == 0) {\n      result = 1;\n    }\n    else if (*(char *)(param_list + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(param_list + 0xf) = 1;\n      ptr = *param_list;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **param_list = **param_list & 0xfffff7ff;\n      *(undefined *)((int)param_list + 0x3d) = 0x29;\n      *(undefined *)((int)param_list + 0x3e) = 0x20;\n      result = 0;\n      param_list[0x10] = (uint *)0x0;\n      param_list[9] = data_ptr;\n      *(short *)((int)param_list + 0x2a) = (short)size;\n      param_list[0xb] = output_ptr;\n      *(undefined2 *)(param_list + 10) = *(undefined2 *)((int)param_list + 0x2a);\n      *(undefined *)(param_list + 0xf) = 0;\n      (*param_list)[1] = (*param_list)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "current_name": "process_params_08001460",
            "entrypoint": "0x08001460",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001460": "process_params_08001460",
                "param_1": "param_list",
                "param_2": "data_ptr",
                "param_3": "size",
                "param_4": "output_ptr",
                "puVar2": "ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080014ec": {
            "additional_data": {
                "FUN_080014ec": {
                    "handle_input": 1,
                    "improve_param_handling": 1,
                    "initialize_data": 3,
                    "initialize_data_structure": 1,
                    "initialize_parameters": 2,
                    "initialize_params": 2,
                    "initialize_process": 1,
                    "initialize_stuff": 1,
                    "parse_input": 2,
                    "parse_params": 1,
                    "process_data": 1,
                    "process_input": 3,
                    "process_input_data": 1,
                    "process_parameters": 1,
                    "process_params": 4,
                    "update_data": 1,
                    "update_param_values": 2,
                    "validate_function_params": 1,
                    "validate_parameters": 2
                },
                "param_1": {
                    "data": 2,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "data_structure": 1,
                    "function_data": 1,
                    "function_params": 1,
                    "input": 1,
                    "input_data": 4,
                    "input_params": 2,
                    "input_ptr": 1,
                    "input_struct": 1,
                    "param_array": 1,
                    "param_list": 5,
                    "param_pointers": 1,
                    "param_ptr": 1,
                    "param_ptr_array": 1,
                    "parameter_array": 2,
                    "parameter_list": 1,
                    "parameters": 1,
                    "process_data": 1
                },
                "param_2": {
                    "buffer": 1,
                    "data": 1,
                    "data_ptr": 8,
                    "error_flag": 1,
                    "input": 1,
                    "input_array": 1,
                    "input_data": 1,
                    "input_param": 1,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "new_value": 1,
                    "optional_param": 1,
                    "optional_param1": 1,
                    "other_data_ptr": 1,
                    "output_buffer": 1,
                    "param1": 2,
                    "param2": 1,
                    "param_2": 1,
                    "param_ptr": 2,
                    "parameter_ptr": 1,
                    "pointer_param": 1,
                    "ptr": 1
                },
                "param_3": {
                    "array_size": 1,
                    "buffer_length": 1,
                    "buffer_size": 1,
                    "count": 1,
                    "data_length": 2,
                    "data_size": 2,
                    "input_length": 2,
                    "input_size": 1,
                    "int_param": 1,
                    "length": 1,
                    "optional_param2": 1,
                    "param2": 1,
                    "param3": 1,
                    "param_3": 1,
                    "param_count": 2,
                    "param_length": 1,
                    "param_value": 2,
                    "size": 9
                },
                "param_4": {
                    "another_data_ptr": 1,
                    "buffer": 1,
                    "buffer_ptr": 1,
                    "config_ptr": 1,
                    "data": 1,
                    "data_ptr": 1,
                    "flag_ptr": 1,
                    "optional_param3": 1,
                    "other_data": 1,
                    "output": 2,
                    "output_array": 1,
                    "output_buffer": 1,
                    "output_data": 3,
                    "output_param": 3,
                    "output_pointer": 1,
                    "output_ptr": 2,
                    "param2": 1,
                    "param3": 1,
                    "param4": 1,
                    "param_4": 1,
                    "param_array": 1,
                    "result_ptr": 3,
                    "user_data": 1
                },
                "puVar2": {
                    "array_ptr": 1,
                    "entry_ptr": 1,
                    "first_ptr": 2,
                    "first_value": 1,
                    "flag_ptr": 1,
                    "flag_ptr_temp": 1,
                    "flags_ptr": 1,
                    "param_ptr": 1,
                    "pointer": 3,
                    "pointer_var": 2,
                    "process_flags": 1,
                    "ptr": 3,
                    "ptr_to_input_data": 1,
                    "ptr_value": 2,
                    "ptr_var": 2,
                    "temp_pointer": 2,
                    "temp_ptr": 4,
                    "var_ptr": 1
                },
                "uVar1": {
                    "result": 15,
                    "return_value": 12,
                    "status": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08003880"
            ],
            "code": "\nundefined4 process_input_data_080014ec(uint **param_list,uint *data_ptr,int size,uint *output_param)\n\n{\n  undefined4 result;\n  uint *temp_ptr;\n  \n  if (*(char *)((int)param_list + 0x3d) == '(') {\n    if (data_ptr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (size == 0) {\n      result = 1;\n    }\n    else if (*(char *)(param_list + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(param_list + 0xf) = 1;\n      temp_ptr = *param_list;\n      if ((*temp_ptr & 1) == 0) {\n        *temp_ptr = *temp_ptr | 1;\n      }\n      **param_list = **param_list & 0xfffff7ff;\n      *(undefined *)((int)param_list + 0x3d) = 0x2a;\n      *(undefined *)((int)param_list + 0x3e) = 0x20;\n      result = 0;\n      param_list[0x10] = (uint *)0x0;\n      param_list[9] = data_ptr;\n      *(short *)((int)param_list + 0x2a) = (short)size;\n      param_list[0xb] = output_param;\n      *(undefined2 *)(param_list + 10) = *(undefined2 *)((int)param_list + 0x2a);\n      *(undefined *)(param_list + 0xf) = 0;\n      (*param_list)[1] = (*param_list)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "current_name": "process_input_data_080014ec",
            "entrypoint": "0x080014ec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080014ec": "process_input_data_080014ec",
                "param_1": "param_list",
                "param_2": "data_ptr",
                "param_3": "size",
                "param_4": "output_param",
                "puVar2": "temp_ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001578": {
            "additional_data": {
                "FUN_08001578": {
                    "initialize_data": 9,
                    "initialize_data_structure": 3,
                    "initialize_flags": 1,
                    "initialize_param": 2,
                    "initialize_parameters": 2,
                    "initialize_params": 1,
                    "initialize_pointer": 1,
                    "modify_and_set_flags": 1,
                    "set_flag_and_permissions": 1,
                    "set_flags_and_permissions": 1,
                    "update_data": 4,
                    "update_data_structure": 1,
                    "update_param": 1,
                    "update_param_and_flags": 1,
                    "update_parameter_value": 1,
                    "validate_input": 1
                },
                "int": {
                    "i": 1
                },
                "param_1": {
                    "data": 8,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "data_structure": 4,
                    "flag_ptr": 1,
                    "flags": 1,
                    "input_data": 1,
                    "param": 4,
                    "param_array": 1,
                    "parameter_list": 1,
                    "parameters": 2,
                    "params": 1,
                    "pointer": 1,
                    "value_pointer": 1
                },
                "puVar1": {
                    "current_value": 2,
                    "data_ptr": 1,
                    "first_element": 8,
                    "first_element_ptr": 1,
                    "first_entry": 1,
                    "first_value": 1,
                    "first_value_pointer": 1,
                    "flag": 1,
                    "param_value": 1,
                    "pointer": 2,
                    "pointer1": 2,
                    "pointer_to_data": 1,
                    "pointer_to_param1": 1,
                    "ptr": 6,
                    "ptr1": 1,
                    "ptr_data": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080038d0",
                "FUN_08003900"
            ],
            "code": "\nundefined4 initialize_data_structure_08001578(ui **data)\n\n{\n  ui *first_element;\n  \n  if (*(char *)((i)data + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((i)data + 0x3d) = 0x28;\n  first_element = *data;\n  if ((*first_element & 1) == 0) {\n    *first_element = *first_element | 1;\n  }\n  **data = **data | 0x400;\n  (*data)[1] = (*data)[1] | 0x300;\n  return 0;\n}\n\n",
            "current_name": "initialize_data_structure_08001578",
            "entrypoint": "0x08001578",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001578": "initialize_data_structure_08001578",
                "int": "i",
                "param_1": "data",
                "puVar1": "first_element"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080015b6": {
            "called": [],
            "calling": [
                "FUN_0800171a",
                "FUN_08001864"
            ],
            "code": "\nvoid FUNC_080015b6(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080015b6",
            "entrypoint": "0x080015b6",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080015b6": "FUNC_080015b6"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080015b8": {
            "called": [],
            "calling": [
                "FUN_08001904",
                "FUN_080019a0"
            ],
            "code": "\nvoid FUNC_080015b8(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080015b8",
            "entrypoint": "0x080015b8",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080015b8": "FUNC_080015b8"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080015ba": {
            "called": [],
            "calling": [
                "FUN_080015bc",
                "FUN_08001684"
            ],
            "code": "\nvoid FUNC_080015ba(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080015ba",
            "entrypoint": "0x080015ba",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080015ba": "FUNC_080015ba"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080015bc": {
            "additional_data": {
                "0xfffffbff": {
                    "bit_mask": 1
                },
                "FUNC_080015ba": {
                    "call_function": 1,
                    "execute_function": 1,
                    "helper_function": 1
                },
                "FUN_080015bc": {
                    "decode_and_process_data": 1,
                    "decode_param": 1,
                    "decode_string": 1,
                    "extract_and_process_byte": 1,
                    "extract_byte": 1,
                    "extract_byte_and_update": 1,
                    "parse_character": 1,
                    "parse_data": 1,
                    "parse_function": 1,
                    "parse_input": 1,
                    "process_data": 12,
                    "process_input": 3,
                    "update_array_and_check_condition": 1,
                    "update_data": 2,
                    "update_data_and_check": 1,
                    "update_parameter": 1
                },
                "cVar1": {
                    "char_1": 1,
                    "char_value": 7,
                    "char_var": 4,
                    "char_variable2": 1,
                    "character": 11,
                    "current_char": 3,
                    "flag": 1,
                    "last_char": 2
                },
                "param_1": {
                    "array": 3,
                    "byte_array": 1,
                    "character_buffer": 1,
                    "data": 16,
                    "data_array": 2,
                    "input": 1,
                    "input_array": 3,
                    "input_data": 1,
                    "param": 1,
                    "param_array": 1,
                    "parameters": 1
                },
                "pbVar2": {
                    "buffer_ptr": 1,
                    "byte_array": 1,
                    "byte_pointer": 14,
                    "byte_ptr": 12,
                    "data_pointer": 1,
                    "pointer_to_byte": 1
                }
            },
            "called": [
                "FUN_080015ba"
            ],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 decode_and_process_data_080015bc(int *data)\n\n{\n  char character;\n  byte *byte_pointer;\n  \n  character = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    byte_pointer = (byte *)data[9];\n    data[9] = (int)(byte_pointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*byte_pointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (character == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_080015ba();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "current_name": "decode_and_process_data_080015bc",
            "entrypoint": "0x080015bc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080015bc": "decode_and_process_data_080015bc",
                "cVar1": "character",
                "param_1": "data",
                "pbVar2": "byte_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800160c": {
            "called": [],
            "calling": [
                "FUN_08001bfc",
                "FUN_0800160e"
            ],
            "code": "\nvoid FUNC_0800160c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800160c",
            "entrypoint": "0x0800160c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800160c": "FUNC_0800160c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800160e": {
            "additional_data": {
                "FUC_0800160c": {
                    "perform_cleanup": 1,
                    "some_function": 1
                },
                "FUNC_0800160c": {
                    "execute_function": 1,
                    "handle_character_update": 1,
                    "helper_function": 2,
                    "perform_action": 2,
                    "some_function": 2,
                    "some_other_function": 1
                },
                "FUN_0800160e": {
                    "perform_action": 1,
                    "process_array": 1,
                    "process_buffer": 1,
                    "process_data": 13,
                    "process_param": 1,
                    "process_parameter": 3,
                    "process_string": 1,
                    "reverse_and_update": 1,
                    "reverse_string": 1,
                    "update_char_and_check": 1,
                    "update_character": 2,
                    "update_data": 2,
                    "update_param": 1,
                    "update_parameter": 1
                },
                "cVar1": {
                    "char_value": 13,
                    "char_var": 1,
                    "char_var1": 1,
                    "character": 3,
                    "character_1": 1,
                    "character_flag": 1,
                    "current_char": 5,
                    "current_character": 1,
                    "first_char": 2,
                    "flag": 1,
                    "last_char": 1
                },
                "param_1": {
                    "array": 3,
                    "buffer": 1,
                    "character_data": 2,
                    "data": 11,
                    "data_array": 1,
                    "data_buffer": 1,
                    "input_array": 3,
                    "input_data": 1,
                    "input_param": 1,
                    "param": 1,
                    "param_list": 1,
                    "parameter": 2,
                    "parameters": 1,
                    "string_ptr": 2
                },
                "puVar2": {
                    "byte_pointer": 2,
                    "character_pointer": 1,
                    "current_char_ptr": 1,
                    "next_byte": 1,
                    "next_char": 1,
                    "next_character": 1,
                    "next_pointer": 1,
                    "next_ptr": 1,
                    "next_undefined_ptr": 1,
                    "p_byte": 1,
                    "pointer": 5,
                    "pointer_2": 1,
                    "pointer_to_char": 1,
                    "pointer_var2": 1,
                    "ptr": 6,
                    "ptr_to_data": 3,
                    "ptr_to_undefined": 1,
                    "undefined_pointer": 1
                }
            },
            "called": [
                "FUN_0800160c"
            ],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 process_data_0800160e(int *data)\n\n{\n  char char_value;\n  undefined *ptr;\n  \n  char_value = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    ptr = (undefined *)data[9];\n    data[9] = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*data + 0x10);\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (char_value == '*')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x22;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_0800160c();\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_0800160e",
            "entrypoint": "0x0800160e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800160e": "process_data_0800160e",
                "cVar1": "char_value",
                "param_1": "data",
                "puVar2": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800165a": {
            "additional_data": {
                "FUN_0800165a": {
                    "process_and_return": 1,
                    "process_and_return_data": 1,
                    "process_data": 26,
                    "process_data_and_return_zero": 1,
                    "process_data_with_flags": 1,
                    "process_param_data": 1
                },
                "param_1": {
                    "data": 16,
                    "data_array": 1,
                    "data_pointer": 2,
                    "data_ptr": 9,
                    "input_array": 2,
                    "input_data": 1
                },
                "param_2": {
                    "arg1": 3,
                    "arg2": 1,
                    "flag": 1,
                    "flag1": 4,
                    "flag_1": 2,
                    "param1": 1,
                    "param2": 6,
                    "param_2": 4,
                    "param_a": 1,
                    "some_value": 1,
                    "unknown_param": 1,
                    "unused_param": 3,
                    "value1": 1,
                    "value2": 1
                },
                "param_3": {
                    "another_value": 1,
                    "arg2": 3,
                    "arg3": 1,
                    "flag2": 4,
                    "flag_2": 2,
                    "param1": 1,
                    "param2": 1,
                    "param3": 6,
                    "param_3": 4,
                    "param_b": 1,
                    "unknown_param_2": 1,
                    "unused_param": 3,
                    "value2": 1,
                    "value3": 1
                },
                "param_4": {
                    "arg3": 3,
                    "arg4": 1,
                    "param": 3,
                    "param2": 1,
                    "param3": 1,
                    "param4": 7,
                    "param_4": 8,
                    "param_c": 1,
                    "result": 1,
                    "unknown_param_3": 1,
                    "unused_param": 1,
                    "value3": 1,
                    "value4": 1,
                    "yet_another_value": 1
                },
                "uVar1": {
                    "chosen_value": 1,
                    "data_value": 1,
                    "result": 3,
                    "selected_data": 2,
                    "selected_value": 20,
                    "value": 3,
                    "value1": 1
                },
                "uVar2": {
                    "data_flag": 2,
                    "data_value": 6,
                    "flag": 10,
                    "flag_value": 1,
                    "flags": 10,
                    "value": 1,
                    "value2": 1
                }
            },
            "called": [
                "FUN_08003880"
            ],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 process_param_data_0800165a(int *data,undefined4 param2,undefined4 param3,undefined4 param_4)\n\n{\n  undefined2 selected_value;\n  uint flag;\n  \n  flag = *(uint *)(*data + 0x18);\n  if ((flag & 0x80) == 0) {\n    selected_value = *(undefined2 *)(data + 3);\n  }\n  else {\n    selected_value = *(undefined2 *)(data + 6);\n  }\n  process_data_08003880(data,(*(uint *)(*data + 0x18) & 4) == 0,selected_value,flag,param_4);\n  return 0;\n}\n\n",
            "current_name": "process_param_data_0800165a",
            "entrypoint": "0x0800165a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800165a": "process_param_data_0800165a",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "selected_value",
                "uVar2": "flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001684": {
            "additional_data": {
                "0": {
                    "constant_0": 1,
                    "zero": 1,
                    "zero_value": 1
                },
                "0x0": {
                    "null_pointer": 1,
                    "null_value": 1
                },
                "0x20": {
                    "constant3": 1,
                    "constant_0x20": 1,
                    "new_value2": 1,
                    "space": 1,
                    "space_character": 1,
                    "space_value": 2
                },
                "0x21": {
                    "exclamation_flag_value": 1,
                    "exclamation_value": 1
                },
                "0x3d": {
                    "char_value": 1,
                    "flag_character_pointer": 1
                },
                "0x3e": {
                    "char_pointer2": 1,
                    "flag_pointer": 1
                },
                "0x4": {
                    "constant1": 1,
                    "flag_one": 1,
                    "mode_value1": 1,
                    "state_a": 1
                },
                "0x8": {
                    "constant2": 1,
                    "flag_two": 1,
                    "mode_value2": 1,
                    "state_b": 1
                },
                "0xb": {
                    "condition1": 1,
                    "flag_value": 1,
                    "flags_pointer": 1,
                    "state": 1
                },
                "0xc": {
                    "pointer_value": 1
                },
                "0xffff0000": {
                    "mask": 1,
                    "new_flags": 1,
                    "new_mode": 1
                },
                "0xfffff8ff": {
                    "bitwise_and_mask_value": 1,
                    "flag_clear_mask": 1,
                    "mask1": 1
                },
                "0xfffffbff": {
                    "constant_0xfffffbff": 1,
                    "flag_set_mask": 1,
                    "mask2": 2,
                    "new_value": 1
                },
                "FUNC_080015ba": {
                    "another_function": 1,
                    "execute_func": 1,
                    "execute_function": 6,
                    "execute_reverse_operation": 1,
                    "function": 1,
                    "function080015ba": 1,
                    "function_080015ba": 1,
                    "perform_operation": 1,
                    "reverse_operation": 1,
                    "reverse_something": 1,
                    "reverse_symbol": 1
                },
                "FUN_080015ba": {
                    "func": 1
                },
                "FUN_08001684": {
                    "execute_and_initialize_data_structure": 1,
                    "execute_logic": 1,
                    "handle_parameter": 1,
                    "initialize_and_execute": 2,
                    "initialize_data": 3,
                    "initialize_data_structure": 19,
                    "initialize_function": 1,
                    "initialize_process": 1,
                    "initialize_structure_data": 1,
                    "set_flags_and_execute": 1
                },
                "FUN_080038d0": {
                    "execute_function_and_init_data_structure": 1
                },
                "execute_function": {
                    "execute_function": 1
                },
                "execute_function_and_initialize_data_structure_080038d0": {
                    "execute_and_initialize": 1,
                    "execute_data_structure_initialization": 1,
                    "execute_function": 5,
                    "execute_function_and_init_data_structure": 1,
                    "execute_function_and_init_ds": 1,
                    "execute_function_and_initialize": 1,
                    "execute_function_and_initialize_data_structure": 4,
                    "execute_init": 1,
                    "execute_initialization_080038d0": 1,
                    "execute_initialize": 1,
                    "initialize_data_structure": 2
                },
                "execute_initialize": {
                    "execute_initialize_function": 1
                },
                "initialize_data_structure": {
                    "initialize_data_structure": 1
                },
                "param_1": {
                    "data": 3,
                    "data_structure": 8,
                    "input_data": 1,
                    "input_params": 1,
                    "memory_block": 1,
                    "param_array": 1,
                    "param_ptr": 1,
                    "parameter1": 1,
                    "parameters": 10,
                    "params": 2,
                    "process_params": 1,
                    "structure_ptr": 1
                },
                "parameters": {
                    "parameters": 1
                }
            },
            "called": [
                "FUN_080038d0",
                "FUN_080015ba"
            ],
            "calling": [
                "FUN_08001e68"
            ],
            "code": "\nundefined4 execute_and_initialize_data_structure_08001684(uint **parameters)\n\n{\n  if (((parameters[0xb] == (uint *)0x4) || (parameters[0xb] == (uint *)0x8)) &&\n     (*(char *)((int)parameters + 0x3d) == '(')) {\n    parameters[0xb] = (uint *)0xffff0000;\n    (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n    (*parameters)[5] = 0xfffffbff;\n    **parameters = **parameters & 0xfffffbff;\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    execute_function();\n  }\n  else if (*(char *)((int)parameters + 0x3d) == '!') {\n    parameters[0xb] = (uint *)0xffff0000;\n    parameters[0xc] = (uint *)0x21;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n    (*parameters)[5] = 0xfffffbff;\n    **parameters = **parameters & 0xfffffbff;\n    FUNC_080015ba();\n  }\n  else {\n    (*parameters)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "current_name": "execute_and_initialize_data_structure_08001684",
            "entrypoint": "0x08001684",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001684": "execute_and_initialize_data_structure_08001684",
                "execute_function_and_initialize_data_structure_080038d0": "execute_function",
                "param_1": "parameters"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001718": {
            "called": [],
            "calling": [
                "FUN_0800171a",
                "FUN_08001864"
            ],
            "code": "\nvoid FUNC_08001718(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08001718",
            "entrypoint": "0x08001718",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08001718": "FUNC_08001718"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800171a": {
            "additional_data": {
                "FUNC_080015b6": {
                    "do_another_thing": 1,
                    "execute_function_2": 1,
                    "func_two": 1,
                    "function_b": 3,
                    "function_two": 1,
                    "perform_action2": 1,
                    "process_alternate_data": 1,
                    "process_default_case": 1,
                    "process_other": 1
                },
                "FUNC_08001718": {
                    "do_something": 1,
                    "execute_function_1": 1,
                    "func_one": 1,
                    "function_a": 3,
                    "function_one": 1,
                    "perform_action1": 1,
                    "process_case_at": 1,
                    "process_exclamation": 1,
                    "reverse_data": 1
                },
                "FUN_0800171a": {
                    "handle_param": 1,
                    "parse_data": 2,
                    "parse_input": 1,
                    "process_data": 6,
                    "process_input": 8,
                    "process_logic": 1,
                    "process_param": 4,
                    "process_parameter": 2,
                    "process_parameters": 2,
                    "process_params": 2,
                    "update_flags_and_process_data": 1,
                    "update_parameters": 1
                },
                "byteVal": {
                    "byte_value": 1
                },
                "cVar1": {
                    "ch": 1,
                    "char1": 1,
                    "char_value": 11,
                    "char_var": 2,
                    "character": 9,
                    "first_char": 3,
                    "input_char": 2,
                    "option_char": 1,
                    "param_char": 1
                },
                "handle_param": {
                    "handle_param": 1
                },
                "input_data": {
                    "data": 1
                },
                "option_char": {
                    "option_char": 1
                },
                "option_value": {
                    "option_value": 1
                },
                "param_1": {
                    "data": 8,
                    "input": 5,
                    "input_array": 1,
                    "input_data": 2,
                    "input_params": 2,
                    "param": 1,
                    "param_array": 2,
                    "parameters": 7,
                    "params": 3
                },
                "parse_input": {
                    "parse_input": 1
                },
                "puVar2": {
                    "option_value": 1,
                    "param_1_b": 1,
                    "pointer": 9,
                    "pointer_value": 4,
                    "pointer_var": 2,
                    "ptr": 3,
                    "ptr_b": 1,
                    "ptr_param": 1,
                    "ptr_value": 4,
                    "ptr_var": 2,
                    "temp_ptr": 2,
                    "var2": 1
                },
                "val": {
                    "value": 1
                }
            },
            "called": [
                "FUN_080015b6",
                "FUN_08001718"
            ],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 process_input_0800171a(uint **data)\n\n{\n  char char_value;\n  uint *pointer;\n  \n  char_value = *(char *)((int)data + 0x3d);\n  pointer = data[0xb];\n  if ((*(short *)(data + 10) == 0) && (char_value == '!')) {\n    if ((pointer == (uint *)0x4) || ((pointer == (uint *)0x8 || (pointer == (uint *)0xffff0000)))) {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      **data = **data | 0x200;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      if (*(char *)((int)data + 0x3e) == '@') {\n        *(undefined *)((int)data + 0x3e) = 0;\n        FUNC_08001718();\n      }\n      else {\n        *(undefined *)((int)data + 0x3e) = 0;\n        FUNC_080015b6();\n      }\n    }\n    else {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      data[0xc] = (uint *)0x11;\n      *(undefined *)((int)data + 0x3e) = 0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      FUNC_080015b6();\n    }\n  }\n  else if ((char_value == '!') || ((*(char *)((int)data + 0x3e) == '@' && (char_value == '\\\"')))) {\n    if (*(short *)((int)data + 0x2a) == 0) {\n      (*data)[1] = (*data)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)data + 0x3e) == '@') {\n      if (data[0x14] == (uint *)0x0) {\n        if (data[0x13] == (uint *)0x1) {\n          (*data)[4] = (uint)data[0x12] & 0xff;\n          data[0x14] = (uint *)((int)data[0x14] + 2);\n        }\n        else {\n          (*data)[4] = (uint)((int)data[0x12] << 0x10) >> 0x18;\n          data[0x14] = (uint *)((int)data[0x14] + 1);\n        }\n      }\n      else if (data[0x14] == (uint *)0x1) {\n        (*data)[4] = (uint)data[0x12] & 0xff;\n        data[0x14] = (uint *)((int)data[0x14] + 1);\n      }\n      else if (data[0x14] == (uint *)0x2) {\n        if (*(char *)((int)data + 0x3d) == '\\\"') {\n          **data = **data | 0x100;\n        }\n        else if (*(char *)((int)data + 0x3d) == '!') {\n          pointer = data[9];\n          data[9] = (uint *)((int)pointer + 1);\n          (*data)[4] = (uint)*(byte *)pointer;\n          *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      pointer = data[9];\n      data[9] = (uint *)((int)pointer + 1);\n      (*data)[4] = (uint)*(byte *)pointer;\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_input_0800171a",
            "entrypoint": "0x0800171a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800171a": "process_input_0800171a",
                "cVar1": "char_value",
                "param_1": "data",
                "puVar2": "pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001864": {
            "additional_data": {
                "0x0": {
                    "null_pointer": 1
                },
                "0x20": {
                    "new_value": 1,
                    "space_value": 1
                },
                "0x200": {
                    "bit_value": 1
                },
                "0xfffff8ff": {
                    "bitmask": 1
                },
                "@": {
                    "at_symbol": 1
                },
                "CHAR_0800183d": {
                    "char_value1": 1
                },
                "CHAR_0800183e": {
                    "char_value2": 1
                },
                "CHAR_08001861": {
                    "exclamation_mark": 1
                },
                "DAT_080015b6": {
                    "default_action": 1
                },
                "DAT_08001718": {
                    "alternative_action": 1
                },
                "DAT_0800183e": {
                    "at_character": 1
                },
                "DAT_0800184d": {
                    "exclamation_character": 1
                },
                "FUNC_080015b6": {
                    "execute_func2": 1,
                    "execute_function2": 1,
                    "execute_function_b": 1,
                    "function2": 2,
                    "function_2": 1,
                    "handle_default_character": 1,
                    "perform_action": 1,
                    "perform_operation": 1,
                    "process_default": 1,
                    "process_other": 1
                },
                "FUNC_08001718": {
                    "execute_code_block": 1,
                    "execute_func1": 1,
                    "execute_function1": 1,
                    "execute_function_a": 1,
                    "function1": 2,
                    "function_1": 1,
                    "handle_at_character": 1,
                    "process_at": 1,
                    "process_at_character": 1,
                    "reverse_operation": 1
                },
                "FUN_08001864": {
                    "extract_data": 1,
                    "handle_param": 1,
                    "modify_permissions": 1,
                    "parse_input_param": 1,
                    "process_condition": 1,
                    "process_data": 1,
                    "process_function": 2,
                    "process_input": 6,
                    "process_param": 9,
                    "process_parameter": 2,
                    "process_parameters": 1,
                    "process_params": 1,
                    "update_flag": 1,
                    "update_flags_and_perform_action": 1,
                    "update_param": 1,
                    "update_parameter": 1
                },
                "SHORT_08001840": {
                    "short_value": 1
                },
                "UINT_08001850": {
                    "valid_value2": 1
                },
                "UINT_08001854": {
                    "valid_value1": 1
                },
                "char_1": {
                    "character_1": 1
                },
                "param_1": {
                    "arguments": 1,
                    "data": 2,
                    "input": 1,
                    "input_array": 2,
                    "input_data": 1,
                    "input_param": 1,
                    "input_params": 3,
                    "param": 2,
                    "param_array": 2,
                    "param_list": 1,
                    "parameters": 12,
                    "params": 3
                },
                "puVar1": {
                    "condition": 1,
                    "current_param": 2,
                    "current_value": 1,
                    "element": 1,
                    "entry": 1,
                    "first_param": 1,
                    "flag": 1,
                    "next_value": 1,
                    "param_b": 1,
                    "parameter_b": 2,
                    "parameter_value": 1,
                    "pointer": 2,
                    "pointer_value": 1,
                    "pointer_var": 1,
                    "ptr": 1,
                    "ptr_val": 1,
                    "ptr_value": 3,
                    "temp_ptr": 3,
                    "value": 4,
                    "value_pointer": 1,
                    "value_ptr": 1
                },
                "short_1": {
                    "short_value_1": 1
                },
                "uint_1": {
                    "uint_value_1": 1
                },
                "uint_2": {
                    "uint_value_2": 1
                }
            },
            "called": [
                "FUN_080015b6",
                "FUN_08001718"
            ],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 process_param_08001864(uint **parameters)\n\n{\n  uint *value;\n  \n  value = parameters[0xb];\n  if (*(char *)((int)parameters + 0x3d) == '!') {\n    if (*(short *)((int)parameters + 0x2a) == 0) {\n      if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        **parameters = **parameters | 0x200;\n        parameters[0xc] = (uint *)0x0;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        if (*(char *)((int)parameters + 0x3e) == 'at_symbol') {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08001718();\n        }\n        else {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_080015b6();\n        }\n      }\n      else {\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        parameters[0xc] = (uint *)0x11;\n        *(undefined *)((int)parameters + 0x3e) = 0;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        FUNC_080015b6();\n      }\n    }\n    else {\n      value = parameters[9];\n      parameters[9] = (uint *)((int)value + 1);\n      (*parameters)[4] = (uint)*(byte *)value;\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_param_08001864",
            "entrypoint": "0x08001864",
            "imported": false,
            "improved": true,
            "renaming": {
                "@": "at_symbol",
                "FUN_08001864": "process_param_08001864",
                "param_1": "parameters",
                "puVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001902": {
            "called": [],
            "calling": [
                "FUN_08001904",
                "FUN_080019a0"
            ],
            "code": "\nvoid FUNC_08001902(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08001902",
            "entrypoint": "0x08001902",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08001902": "FUNC_08001902"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08001904": {
            "additional_data": {
                "FUNC_080015b8": {
                    "alternative_process_char": 1,
                    "handle_other_char": 1,
                    "perform_action2": 1,
                    "process_at_offset_0x3e": 1,
                    "process_other": 1
                },
                "FUNC_08001902": {
                    "perform_action1": 1,
                    "process_at_offset_0x3e": 1,
                    "process_char": 1,
                    "reverse_string": 1
                },
                "FUN_08001904": {
                    "extract_quotes": 1,
                    "extract_string": 1,
                    "parse_and_handle_quotes": 1,
                    "parse_input_string": 2,
                    "parse_parameter": 1,
                    "parse_string": 2,
                    "process_data": 1,
                    "process_param": 4,
                    "process_parameter": 1,
                    "process_parameters": 1,
                    "process_string": 6,
                    "process_string_value": 1,
                    "update_config": 1,
                    "update_data": 1,
                    "update_param": 2,
                    "update_parameter": 1,
                    "update_parameter_value": 1,
                    "update_string": 2
                },
                "PARAM_080015b8": {
                    "process_at_offset_0x3e": 1
                },
                "PARAM_08001902": {
                    "process_at_offset_0x3e": 1
                },
                "param_1": {
                    "config": 1,
                    "data": 2,
                    "input_data": 1,
                    "input_parameters": 1,
                    "input_params": 1,
                    "input_string": 1,
                    "param": 4,
                    "param_list": 3,
                    "parameter": 4,
                    "parameter_list": 1,
                    "parameters": 1,
                    "string_array": 4,
                    "string_pointer": 3,
                    "string_ptr": 4
                },
                "puVar1": {
                    "buffer_ptr": 1,
                    "char_pointer": 2,
                    "char_ptr": 4,
                    "dest_ptr": 1,
                    "new_char_pointer": 1,
                    "next_char": 2,
                    "next_char_ptr": 1,
                    "next_param": 1,
                    "next_pointer": 1,
                    "ptr1": 1,
                    "ptr_ch": 1,
                    "ptr_char": 2,
                    "ptr_to_char": 1,
                    "temp": 1,
                    "temp_pointer": 2,
                    "temp_ptr": 9
                }
            },
            "called": [
                "FUN_08001902",
                "FUN_080015b8"
            ],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 process_string_value_08001904(uint **string_ptr)\n\n{\n  uint *temp_ptr;\n  \n  if (*(char *)((int)string_ptr + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)string_ptr + 0x2a) < 4) {\n      if (*(ushort *)((int)string_ptr + 0x2a) < 2) {\n        **string_ptr = **string_ptr & 0xfffffbff;\n        (*string_ptr)[1] = (*string_ptr)[1] & 0xfffff8ff;\n        temp_ptr = string_ptr[9];\n        string_ptr[9] = (uint *)((int)temp_ptr + 1);\n        *(char *)temp_ptr = (char)(*string_ptr)[4];\n        *(short *)((int)string_ptr + 0x2a) = *(short *)((int)string_ptr + 0x2a) + -1;\n        *(undefined *)((int)string_ptr + 0x3d) = 0x20;\n        string_ptr[0xc] = (uint *)0x0;\n        if (*(char *)((int)string_ptr + 0x3e) == '@') {\n          *(undefined *)((int)string_ptr + 0x3e) = 0;\n          FUNC_08001902();\n        }\n        else {\n          *(undefined *)((int)string_ptr + 0x3e) = 0;\n          FUNC_080015b8();\n        }\n      }\n    }\n    else {\n      temp_ptr = string_ptr[9];\n      string_ptr[9] = (uint *)((int)temp_ptr + 1);\n      *(char *)temp_ptr = (char)(*string_ptr)[4];\n      *(short *)((int)string_ptr + 0x2a) = *(short *)((int)string_ptr + 0x2a) + -1;\n      if (*(short *)((int)string_ptr + 0x2a) == 3) {\n        (*string_ptr)[1] = (*string_ptr)[1] & 0xfffffbff;\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_string_value_08001904",
            "entrypoint": "0x08001904",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001904": "process_string_value_08001904",
                "param_1": "string_ptr",
                "puVar1": "temp_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080019a0": {
            "additional_data": {
                "FUNC_080015b8": {
                    "function_b": 1
                },
                "FUNC_08001902": {
                    "function_a": 1
                },
                "FUN_080019a0": {
                    "modify_parameter_value": 1,
                    "parse_parameter": 1,
                    "process_action": 1,
                    "process_data": 7,
                    "process_input": 1,
                    "process_param": 8,
                    "process_parameter": 3,
                    "process_parameters": 2,
                    "process_params": 1,
                    "update_data": 2,
                    "update_param_value": 1,
                    "update_parameter": 1,
                    "update_values": 2
                },
                "param_1": {
                    "action_params": 1,
                    "data": 6,
                    "input_data": 2,
                    "param": 7,
                    "param_array": 2,
                    "parameter": 4,
                    "parameters": 7,
                    "parameters_ptr": 1,
                    "params": 1
                },
                "puVar1": {
                    "next_address": 1,
                    "next_char": 1,
                    "next_pointer": 1,
                    "next_ptr": 1,
                    "pointer": 2,
                    "pointer_var": 1,
                    "ptr1": 2,
                    "temp": 3,
                    "temp_pointer": 1,
                    "temp_ptr": 14,
                    "temp_var": 2,
                    "temp_var1": 1,
                    "temp_variable": 1
                }
            },
            "called": [
                "FUN_08001902",
                "FUN_080015b8"
            ],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 process_param_080019a0(uint **parameters)\n\n{\n  uint *temp_ptr;\n  \n  if (*(short *)((int)parameters + 0x2a) == 4) {\n    (*parameters)[1] = (*parameters)[1] & 0xfffffbff;\n    temp_ptr = parameters[9];\n    parameters[9] = (uint *)((int)temp_ptr + 1);\n    *(char *)temp_ptr = (char)(*parameters)[4];\n    *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n  }\n  else if (*(short *)((int)parameters + 0x2a) == 3) {\n    (*parameters)[1] = (*parameters)[1] & 0xfffffbff;\n    **parameters = **parameters & 0xfffffbff;\n    temp_ptr = parameters[9];\n    parameters[9] = (uint *)((int)temp_ptr + 1);\n    *(char *)temp_ptr = (char)(*parameters)[4];\n    *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n  }\n  else if (*(short *)((int)parameters + 0x2a) == 2) {\n    if ((int)parameters[0xb] - 1U < 2) {\n      **parameters = **parameters & 0xfffffbff;\n      **parameters = **parameters | 0x100;\n    }\n    else {\n      **parameters = **parameters | 0x200;\n    }\n    temp_ptr = parameters[9];\n    parameters[9] = (uint *)((int)temp_ptr + 1);\n    *(char *)temp_ptr = (char)(*parameters)[4];\n    *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    temp_ptr = parameters[9];\n    parameters[9] = (uint *)((int)temp_ptr + 1);\n    *(char *)temp_ptr = (char)(*parameters)[4];\n    *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    (*parameters)[1] = (*parameters)[1] & 0xfffffcff;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    parameters[0xc] = (uint *)0x0;\n    if (*(char *)((int)parameters + 0x3e) == '@') {\n      *(undefined *)((int)parameters + 0x3e) = 0;\n      FUNC_08001902();\n    }\n    else {\n      *(undefined *)((int)parameters + 0x3e) = 0;\n      FUNC_080015b8();\n    }\n  }\n  else {\n    temp_ptr = parameters[9];\n    parameters[9] = (uint *)((int)temp_ptr + 1);\n    *(char *)temp_ptr = (char)(*parameters)[4];\n    *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_param_080019a0",
            "entrypoint": "0x080019a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080019a0": "process_param_080019a0",
                "param_1": "parameters",
                "puVar1": "temp_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001aac": {
            "called": [],
            "calling": [
                "FUN_08001ab0"
            ],
            "code": "\nvoid FUNC_08001aac(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08001aac",
            "entrypoint": "0x08001aac",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08001aac": "FUNC_08001aac"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08001ab0": {
            "additional_data": {
                "DAT_08001f3c_1": {
                    "some_variable": 1
                },
                "FUNC_08001aac": {
                    "do_something": 1,
                    "function_aac": 1,
                    "perform_operation": 1,
                    "some_function": 1
                },
                "FUN_08001ab0": {
                    "execute_code": 1,
                    "execute_command": 1,
                    "execute_function": 1,
                    "execute_function_and_initialize_data_structure": 2,
                    "execute_main_function": 1,
                    "execute_parameter_initialization": 1,
                    "execute_program": 1,
                    "initialize_and_execute": 1,
                    "initialize_and_execute_function": 1,
                    "initialize_data": 1,
                    "initialize_data_structure": 10,
                    "initialize_function": 1,
                    "initialize_if_data_structure_is_not_initialized": 1,
                    "process_data": 3,
                    "process_input": 1,
                    "process_parameter": 2,
                    "process_params": 1
                },
                "LAB_08001f3c_1": {
                    "label": 1,
                    "label_08001f3c_1": 1,
                    "label_1": 4,
                    "some_label": 1
                },
                "execute_function_and_initialize_data_structure_080038d0": {
                    "execute_and_initialize": 1,
                    "execute_and_initialize_data_structure": 2,
                    "execute_function_and_initialize_data_struct": 1,
                    "execute_function_and_initialize_data_structure": 4
                },
                "iVar1": {
                    "index": 2,
                    "result": 12,
                    "return_value": 13,
                    "status": 1,
                    "update_result": 2,
                    "updated_value": 1
                },
                "initialize_if_data_structure_is_not_initialized_08003900": {
                    "initialize_data_structure": 7,
                    "initialize_data_structure_if_needed": 1
                },
                "param_1": {
                    "command": 1,
                    "data": 2,
                    "data_structure": 9,
                    "input_array": 1,
                    "input_data": 2,
                    "input_parameter": 1,
                    "param": 1,
                    "param_array": 1,
                    "parameter": 1,
                    "parameter_array": 1,
                    "parameters": 8,
                    "params": 2,
                    "program_data": 1
                },
                "puVar2": {
                    "char_pointer": 5,
                    "char_ptr": 2,
                    "pointer": 1,
                    "pointer2": 1,
                    "pointer_1": 1,
                    "pointer_var1": 1,
                    "pointer_var2": 5,
                    "ptr": 8,
                    "ptr_to_char": 1,
                    "ptr_var2": 1,
                    "pu_var": 1,
                    "temp_pointer": 1,
                    "temp_pointer1": 1,
                    "temp_ptr": 1,
                    "temp_var1": 1
                },
                "puVar3": {
                    "current_data": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input_ptr": 1,
                    "pointer": 1,
                    "pointer2": 1,
                    "pointer3": 1,
                    "pointer_1": 1,
                    "pointer_2": 1,
                    "pointer_to_param1": 1,
                    "pointer_var2": 1,
                    "pointer_var3": 5,
                    "ptr2": 7,
                    "ptr_to_uint": 1,
                    "ptr_var3": 1,
                    "pu_var2": 1,
                    "temp_pointer2": 1,
                    "temp_ptr2": 1,
                    "temp_var2": 1,
                    "uint_pointer": 2
                },
                "update_parameter_value_08000f8c": {
                    "update_parameter_value": 8
                }
            },
            "called": [
                "FUN_08001aac",
                "FUN_08000f8c",
                "FUN_080038d0",
                "FUN_08003900"
            ],
            "calling": [
                "FUN_08001bfc",
                "FUN_08001e68"
            ],
            "code": "\nvoid execute_function_and_initialize_data_structure_08001ab0(uint **data_structure)\n\n{\n  int return_value;\n  uint *ptr;\n  uint *ptr2;\n  \n  if (*(byte *)((int)data_structure + 0x3d) - 0x29 < 2) {\n    data_structure[0xc] = (uint *)0x0;\n    *(undefined *)((int)data_structure + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)data_structure + 0x3d) != '`') && (((*data_structure)[1] & 0x800) == 0)) {\n      *(undefined *)((int)data_structure + 0x3d) = 0x20;\n    }\n    data_structure[0xc] = (uint *)0x0;\n    *(undefined *)((int)data_structure + 0x3e) = 0;\n  }\n  **data_structure = **data_structure & 0xfffff7ff;\n  ptr2 = *data_structure;\n  if ((ptr2[1] & 0x800) == 0) {\n    if (*(char *)((int)data_structure + 0x3d) == '`') {\n      *(undefined *)((int)data_structure + 0x3d) = 0x20;\n      data_structure[0x10] = (uint *)0x0;\n      if ((ptr2[5] & 0x40) != 0) {\n        ptr = data_structure[9];\n        data_structure[9] = (uint *)((int)ptr + 1);\n        *(char *)ptr = (char)ptr2[4];\n      }\n      **data_structure = **data_structure & 0xfffffffe;\n      FUNC_08001aac(data_structure);\n    }\n    else {\n      if ((ptr2[5] & 0x40) != 0) {\n        ptr = data_structure[9];\n        data_structure[9] = (uint *)((int)ptr + 1);\n        *(char *)ptr = (char)ptr2[4];\n      }\n      initialize_data_structure(data_structure);\n    }\n  }\n  else {\n    ptr2[1] = ptr2[1] & 0xfffff7ff;\n    if (*(char *)((int)data_structure[0xd] + 0x35) == '\\x01') {\n      data_structure[0xe][0x14] = (uint)&label_1;\n      return_value = update_parameter_value(data_structure[0xe]);\n      if (return_value != 0) {\n        if (((*data_structure)[5] & 0x40) != 0) {\n          ptr2 = data_structure[9];\n          data_structure[9] = (uint *)((int)ptr2 + 1);\n          *(char *)ptr2 = (char)(*data_structure)[4];\n        }\n        **data_structure = **data_structure & 0xfffffffe;\n        *(undefined *)((int)data_structure + 0x3d) = 0x20;\n        (*(code *)data_structure[0xe][0x14])();\n      }\n    }\n    else {\n      data_structure[0xd][0x14] = (uint)&label_1;\n      return_value = update_parameter_value(data_structure[0xd]);\n      if (return_value != 0) {\n        **data_structure = **data_structure & 0xfffffffe;\n        *(undefined *)((int)data_structure + 0x3d) = 0x20;\n        (*(code *)data_structure[0xd][0x14])();\n      }\n    }\n  }\n  if ((*(char *)((int)data_structure + 0x3d) == '(') && (((uint)data_structure[0x10] & 4) != 0)) {\n    data_structure[0xb] = (uint *)0xffff0000;\n    data_structure[0xc] = (uint *)0x0;\n    *(undefined *)((int)data_structure + 0x3d) = 0x20;\n    *(undefined *)((int)data_structure + 0x3e) = 0;\n    execute_function_and_initialize_data_structure_08001ab0(data_structure);\n  }\n  return;\n}\n\n",
            "current_name": "execute_function_and_initialize_data_structure_08001ab0",
            "entrypoint": "0x08001ab0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001ab0": "execute_function_and_initialize_data_structure_08001ab0",
                "LAB_08001f3c_1": "label_1",
                "execute_function_and_initialize_data_structure_080038d0": "execute_function_and_initialize_data_structure",
                "iVar1": "return_value",
                "initialize_if_data_structure_is_not_initialized_08003900": "initialize_data_structure",
                "param_1": "data_structure",
                "puVar2": "ptr",
                "puVar3": "ptr2",
                "update_parameter_value_08000f8c": "update_parameter_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001bfc": {
            "additional_data": {
                "FUNC_0800160c": {
                    "process_string_data": 1
                },
                "FUN_08001bfc": {
                    "execute_and_initialize": 1,
                    "initialize_and_execute": 2,
                    "initialize_and_execute_function": 1,
                    "initialize_data": 1,
                    "initialize_data_structure": 6,
                    "parse_and_execute_command": 1,
                    "process_and_initialize_data_structure": 1,
                    "process_binary_data": 1,
                    "process_data": 11,
                    "process_parameter": 3,
                    "update_data_structure": 2
                },
                "cVar1": {
                    "char1": 3,
                    "char_value": 7,
                    "char_var": 1,
                    "character": 14,
                    "character_1": 1,
                    "character_variable": 1,
                    "command_char": 1,
                    "first_char": 3
                },
                "execute_function_and_initialize_data_structure_080038d0": {
                    "perform_data_processing": 1
                },
                "param_1": {
                    "binary_data": 1,
                    "command_data": 1,
                    "data": 10,
                    "data_structure": 4,
                    "input": 1,
                    "input_data": 1,
                    "inputs": 1,
                    "p_parameters": 1,
                    "param": 3,
                    "parameter": 2,
                    "parameters": 6
                },
                "puVar2": {
                    "command_ptr": 1,
                    "p_var1": 1,
                    "pointer1": 6,
                    "pointer_1": 4,
                    "pointer_var1": 2,
                    "pointer_variable2": 1,
                    "ptr": 1,
                    "ptr1": 11,
                    "ptr2": 1,
                    "ptr_to_data": 1,
                    "ptr_var1": 1,
                    "ptr_variable_1": 1
                },
                "puVar3": {
                    "p_var2": 1,
                    "pointer2": 6,
                    "pointer_2": 4,
                    "pointer_var2": 2,
                    "pointer_variable3": 1,
                    "ptr2": 12,
                    "ptr3": 1,
                    "ptr_to_new_data": 1,
                    "ptr_var2": 1,
                    "ptr_variable_2": 1,
                    "temp_ptr": 1
                }
            },
            "called": [
                "FUN_0800160c",
                "FUN_080038d0",
                "FUN_08001ab0"
            ],
            "calling": [
                "FUN_08001d00"
            ],
            "code": "\nundefined4 process_and_initialize_data_structure_08001bfc(uint **data)\n\n{\n  char character;\n  uint *ptr1;\n  uint *ptr2;\n  \n  character = *(char *)((int)data + 0x3d);\n  (*data)[1] = (*data)[1] & 0xfffff8ff;\n  **data = **data | 1;\n  **data = **data & 0xfffffbff;\n  ptr1 = *data;\n  if ((ptr1[1] & 0x800) != 0) {\n    if ((*(char *)((int)data + 0x3d) == '\\\"') || (*(char *)((int)data + 0x3d) == '*')) {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xe] + 4);\n    }\n    else {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)data + 0x2a) != 0) {\n    if ((ptr1[5] & 4) != 0) {\n      ptr2 = data[9];\n      data[9] = (uint *)((int)ptr2 + 1);\n      *(char *)ptr2 = (char)ptr1[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    if (((*data)[5] & 0x40) != 0) {\n      ptr1 = data[9];\n      data[9] = (uint *)((int)ptr1 + 1);\n      *(char *)ptr1 = (char)(*data)[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    data[0x10] = (uint *)((uint)data[0x10] | 4);\n  }\n  if (data[0x10] == (uint *)0x0) {\n    if (((character == '(') || (character == '*')) || (character == ')')) {\n      data[0xb] = (uint *)0xffff0000;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      perform_data_processing();\n    }\n    else if ((data[0xc] == (uint *)0x22) || (character == '\\\"')) {\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_0800160c();\n    }\n  }\n  else {\n    execute_function_and_initialize_data_structure_08001ab0();\n  }\n  return 0;\n}\n\n",
            "current_name": "process_and_initialize_data_structure_08001bfc",
            "entrypoint": "0x08001bfc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001bfc": "process_and_initialize_data_structure_08001bfc",
                "cVar1": "character",
                "execute_function_and_initialize_data_structure_080038d0": "perform_data_processing",
                "param_1": "data",
                "puVar2": "ptr1",
                "puVar3": "ptr2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001d00": {
            "additional_data": {
                "FUN_08001d00": {
                    "process_and_update_data": 1,
                    "process_conditions": 1,
                    "process_data": 3,
                    "process_data_and_parameters": 1,
                    "process_data_based_on_flags": 1,
                    "process_data_function": 1,
                    "process_data_operation": 1,
                    "process_extraction_data": 1,
                    "process_function": 9,
                    "process_function_08001d00": 1,
                    "process_input": 2,
                    "process_input_data": 1,
                    "process_input_parameters": 1,
                    "process_logic": 1,
                    "process_param": 2,
                    "process_param_conditions": 1,
                    "process_param_data": 1,
                    "process_parameter": 2
                },
                "decode_and_process_data_080015bc": {
                    "decode_and_process_data": 3,
                    "decode_and_process_data_function": 1,
                    "decode_process_data": 1
                },
                "iVar1": {
                    "array_element": 1,
                    "data": 2,
                    "data_ptr": 4,
                    "data_value": 4,
                    "input_data_value": 1,
                    "input_value": 3,
                    "param_1_value": 1,
                    "param_value": 5,
                    "parameter_value": 2,
                    "pointer": 1,
                    "ptr_value": 2,
                    "value": 4,
                    "value_1": 1
                },
                "param_1": {
                    "data": 4,
                    "data_and_parameters": 1,
                    "data_array": 1,
                    "data_ptr": 4,
                    "function_param": 1,
                    "input": 1,
                    "input_data": 7,
                    "input_param": 2,
                    "input_parameters": 1,
                    "param": 1,
                    "param_conditions": 1,
                    "parameter": 6
                },
                "process_and_initialize_data_structure_08001bfc": {
                    "initialize_data_structure_function": 1,
                    "process_and_initialize_data": 1,
                    "process_and_initialize_data_structure": 1,
                    "process_initialize_structure": 2
                },
                "process_data_0800160e": {
                    "process_data": 4,
                    "process_data_function": 1
                },
                "process_input_0800171a": {
                    "process_input": 4,
                    "process_input_function": 1
                },
                "process_param_08001864": {
                    "process_param_data": 1,
                    "process_param_function": 1,
                    "process_parameter": 3
                },
                "process_param_080019a0": {
                    "process_param": 1,
                    "process_param_function": 1,
                    "process_parameter": 3
                },
                "process_param_data_0800165a": {
                    "process_param_data": 1,
                    "process_param_data_function": 1,
                    "process_param_data_structure": 1,
                    "process_parameter_data": 2
                },
                "process_string_value_08001904": {
                    "process_string": 1,
                    "process_string_value": 3,
                    "process_string_value_function": 1
                },
                "uVar2": {
                    "condition_flags": 4,
                    "condition_value_1": 1,
                    "flag": 1,
                    "flag1": 4,
                    "flag_value": 11,
                    "flag_value_1": 1,
                    "flag_var": 1,
                    "flag_variable": 1,
                    "flags": 4,
                    "flags_1": 1,
                    "param_flags": 1,
                    "value_2": 1
                },
                "uVar3": {
                    "condition": 5,
                    "condition_flags": 1,
                    "condition_value": 6,
                    "condition_value_2": 1,
                    "condition_var": 1,
                    "condition_variable": 1,
                    "conditions": 2,
                    "flag2": 4,
                    "flag_value": 1,
                    "flag_value_2": 1,
                    "flags_2": 1,
                    "input_flags": 1,
                    "input_value": 1,
                    "param_flags": 1,
                    "param_value": 1,
                    "parameter_flags": 2,
                    "value_3": 1
                },
                "uVar4": {
                    "additional_flags": 1,
                    "condition": 1,
                    "condition_value_3": 1,
                    "data_value": 1,
                    "flag3": 4,
                    "flag_value": 3,
                    "flag_value_3": 1,
                    "flags_3": 1,
                    "flags_value": 1,
                    "other_value": 1,
                    "parameter_value": 1,
                    "status": 1,
                    "status_var": 1,
                    "string_and_input_flags": 1,
                    "string_flag": 1,
                    "string_flags": 2,
                    "string_param_value": 1,
                    "string_value": 4,
                    "update_flag": 2,
                    "update_value": 1,
                    "value_4": 1
                },
                "update_data_pointer_08001420": {
                    "update_data_pointer": 4,
                    "update_data_pointer_function": 1
                },
                "update_flag_value_080011c0": {
                    "update_flag": 1,
                    "update_flag_value": 3,
                    "update_flag_value_function": 1
                },
                "update_flags_based_on_conditions_08001256": {
                    "update_conditions": 1,
                    "update_flags": 1,
                    "update_flags_based_on_conditions": 1,
                    "update_flags_conditions": 1,
                    "update_flags_function": 1
                },
                "update_param_value_08001440": {
                    "update_param_value": 2,
                    "update_param_value_function": 1,
                    "update_parameter_value": 2
                },
                "update_parameter_value_0800124a": {
                    "update_param_value": 1,
                    "update_parameter": 1,
                    "update_parameter_value": 2,
                    "update_parameter_value_function": 1
                }
            },
            "called": [
                "FUN_0800165a",
                "FUN_080011c0",
                "FUN_08001bfc",
                "FUN_08001420",
                "FUN_08001440",
                "FUN_080015bc",
                "FUN_0800124a",
                "FUN_0800171a",
                "FUN_08001256",
                "FUN_08001864",
                "FUN_08001904",
                "FUN_080019a0",
                "FUN_0800160e"
            ],
            "calling": [],
            "code": "\nvoid process_function_08001d00_08001d00(int *input_data)\n\n{\n  int param_value;\n  uint flag_value;\n  uint condition_value;\n  uint string_value;\n  \n  param_value = *input_data;\n  string_value = *(uint *)(param_value + 0x18);\n  flag_value = *(uint *)(param_value + 0x14);\n  condition_value = *(uint *)(param_value + 4);\n  if ((*(char *)((int)input_data + 0x3e) == '\\x10') || (*(char *)((int)input_data + 0x3e) == '@')) {\n    if (((flag_value & 0x10001) == 0) || ((condition_value & 0x200) == 0)) {\n      if (((flag_value & 0x10008) == 0) || ((condition_value & 0x200) == 0)) {\n        if (((flag_value & 0x10002) != 0) && ((condition_value & 0x200) != 0)) {\n          update_conditions(input_data);\n        }\n      }\n      else {\n        update_parameter_value(input_data);\n      }\n    }\n    else {\n      update_flag_value(input_data);\n    }\n    if ((string_value & 0x100004) == 0) {\n      if ((((flag_value & 0x10040) != 0) && ((condition_value & 0x400) != 0)) && ((flag_value & 0x10004) == 0)) {\n        process_string_value(input_data);\n        return;\n      }\n      if (((flag_value & 0x10004) != 0) && ((condition_value & 0x200) != 0)) {\n        process_parameter(input_data);\n        return;\n      }\n    }\n    else {\n      if ((((flag_value & 0x10080) != 0) && ((condition_value & 0x400) != 0)) && ((flag_value & 0x10004) == 0)) {\n        process_input(input_data);\n        return;\n      }\n      if (((flag_value & 0x10004) != 0) && ((condition_value & 0x200) != 0)) {\n        process_parameter(input_data);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flag_value & 0x10002) != 0) && ((condition_value & 0x200) != 0)) {\n      process_parameter_data();\n      return;\n    }\n    if (((flag_value & 0x10010) != 0) && ((condition_value & 0x200) != 0)) {\n      process_initialize_structure(input_data);\n      return;\n    }\n    if ((string_value & 0x100004) == 0) {\n      if ((((flag_value & 0x10040) != 0) && ((condition_value & 0x400) != 0)) && ((flag_value & 0x10004) == 0)) {\n        process_data(input_data);\n        return;\n      }\n      if (((flag_value & 0x10004) != 0) && ((condition_value & 0x200) != 0)) {\n        update_parameter_value(input_data);\n      }\n    }\n    else {\n      if ((((flag_value & 0x10080) != 0) && ((condition_value & 0x400) != 0)) && ((flag_value & 0x10004) == 0)) {\n        decode_and_process_data(input_data);\n        return;\n      }\n      if (((flag_value & 0x10004) != 0) && ((condition_value & 0x200) != 0)) {\n        update_data_pointer(input_data);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_function_08001d00_08001d00",
            "entrypoint": "0x08001d00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001d00": "process_function_08001d00_08001d00",
                "decode_and_process_data_080015bc": "decode_and_process_data",
                "iVar1": "param_value",
                "param_1": "input_data",
                "process_and_initialize_data_structure_08001bfc": "process_initialize_structure",
                "process_data_0800160e": "process_data",
                "process_input_0800171a": "process_input",
                "process_param_08001864": "process_parameter",
                "process_param_080019a0": "process_parameter",
                "process_param_data_0800165a": "process_parameter_data",
                "process_string_value_08001904": "process_string_value",
                "uVar2": "flag_value",
                "uVar3": "condition_value",
                "uVar4": "string_value",
                "update_data_pointer_08001420": "update_data_pointer",
                "update_flag_value_080011c0": "update_flag_value",
                "update_flags_based_on_conditions_08001256": "update_conditions",
                "update_param_value_08001440": "update_parameter_value",
                "update_parameter_value_0800124a": "update_parameter_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001e68": {
            "additional_data": {
                "FUN_08001e68": {
                    "check_and_execute_operations": 2,
                    "check_and_modify_flags": 1,
                    "check_and_update_flags": 3,
                    "check_flags_and_execute": 1,
                    "initialize_conditions_and_data": 1,
                    "initialize_flags": 1,
                    "initialize_flags_and_data_structure": 1,
                    "initialize_permissions": 1,
                    "initialize_security_flags": 1,
                    "process_data": 1,
                    "process_flags": 2,
                    "process_flags_and_execute": 1,
                    "process_permissions": 1,
                    "update_and_initialize_data_structure": 1,
                    "update_data_structure": 5,
                    "update_data_structure_flags": 2,
                    "update_flag_and_execute": 1,
                    "update_flags": 1,
                    "update_state": 1,
                    "update_status": 1,
                    "update_status_flags": 1
                },
                "cVar1": {
                    "ch": 1,
                    "char1": 2,
                    "char_val": 1,
                    "char_value": 2,
                    "char_var": 4,
                    "char_variable": 1,
                    "character": 15,
                    "character1": 2,
                    "character_var": 2,
                    "current_char": 1
                },
                "execute_and_initialize_data_structure_08001684": {
                    "execute_initialization": 1,
                    "initialize_data_structure_execution": 1,
                    "perform_action": 1
                },
                "execute_function_and_initialize_data_structure_08001ab0": {
                    "execute_and_initialize": 1,
                    "execute_function": 1,
                    "initialize_data_structure_function_execution": 1
                },
                "param_1": {
                    "data": 2,
                    "data_structure": 5,
                    "flags": 1,
                    "flags_ptr": 1,
                    "function_parameters": 1,
                    "function_params": 1,
                    "input": 3,
                    "input_data": 1,
                    "input_params": 2,
                    "param_array": 1,
                    "parameters": 9,
                    "permission_data": 1,
                    "pointer_array": 1,
                    "state": 1,
                    "structure": 1
                },
                "puVar2": {
                    "data_pointer": 1,
                    "flags": 1,
                    "input_pointer": 1,
                    "param": 1,
                    "permission_ptr": 1,
                    "pointer": 10,
                    "pointer_var": 4,
                    "pointer_var2": 1,
                    "pointer_variable": 1,
                    "ptr": 4,
                    "ptr_data": 1,
                    "ptr_to_data_structure": 1,
                    "ptr_to_input": 1,
                    "ptr_variable2": 1,
                    "state_pointer": 1
                },
                "uVar3": {
                    "first_flag": 1,
                    "flag1": 11,
                    "flag_value_1": 1,
                    "flag_var": 1,
                    "flag_var1": 1,
                    "flags1": 2,
                    "permission_flag1": 1,
                    "permission_value_1": 1,
                    "status_flag": 1,
                    "value1": 8,
                    "value3": 2,
                    "variable_3": 1
                },
                "uVar4": {
                    "control_flag": 1,
                    "flag2": 11,
                    "flag_value_2": 1,
                    "flag_var2": 2,
                    "flags2": 2,
                    "permission_flag2": 1,
                    "permission_value_2": 1,
                    "second_flag": 1,
                    "value2": 8,
                    "value4": 2,
                    "variable_4": 1
                }
            },
            "called": [
                "FUN_08001ab0",
                "FUN_08001684"
            ],
            "calling": [],
            "code": "\nvoid update_data_structure_flags_08001e68(uint **parameters)\n\n{\n  char character;\n  uint *pointer;\n  uint flag1;\n  uint flag2;\n  \n  pointer = *parameters;\n  flag1 = pointer[5];\n  flag2 = pointer[1];\n  if (((flag1 & 0x10100) != 0) && ((flag2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 1);\n    pointer[5] = 0xfffffeff;\n  }\n  if (((flag1 & 0x10200) != 0) && ((flag2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 2);\n    (*parameters)[5] = 0xfffffdff;\n  }\n  if (((flag1 & 0x10400) != 0) && ((flag2 & 0x100) != 0)) {\n    character = *(char *)((int)parameters + 0x3d);\n    if (((*(char *)((int)parameters + 0x3e) == ' ') && (*(short *)((int)parameters + 0x2a) == 0)) &&\n       (((character == '!' || (character == ')')) || ((character == '(' && (parameters[0xc] == (uint *)0x21)))))) {\n      perform_action(parameters);\n    }\n    else {\n      parameters[0x10] = (uint *)((uint)parameters[0x10] | 4);\n      if (*(char *)((int)parameters + 0x3e) == '\\x10') {\n        **parameters = **parameters | 0x200;\n      }\n      (*parameters)[5] = 0xfffffbff;\n    }\n  }\n  if (((flag1 & 0x10800) != 0) && ((flag2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 8);\n    (*parameters)[5] = 0xfffff7ff;\n  }\n  if (parameters[0x10] != (uint *)0x0) {\n    execute_and_initialize(parameters);\n  }\n  return;\n}\n\n",
            "current_name": "update_data_structure_flags_08001e68",
            "entrypoint": "0x08001e68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001e68": "update_data_structure_flags_08001e68",
                "cVar1": "character",
                "execute_and_initialize_data_structure_08001684": "perform_action",
                "execute_function_and_initialize_data_structure_08001ab0": "execute_and_initialize",
                "param_1": "parameters",
                "puVar2": "pointer",
                "uVar3": "flag1",
                "uVar4": "flag2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001f9c": {
            "additional_data": {
                "FUN_08001f9c": {
                    "check_and_wait_for_data": 1,
                    "check_data_and_update": 1,
                    "check_data_validity": 1,
                    "check_data_value_range": 1,
                    "check_data_values": 5,
                    "init_data_processing": 1,
                    "initialize_data": 8,
                    "initialize_flag": 1,
                    "initialize_flags": 2,
                    "initialize_flags_and_check_values": 1,
                    "initialize_system": 1,
                    "process_data": 2,
                    "update_data": 1,
                    "update_data_and_check": 1,
                    "update_data_and_check_value": 1,
                    "update_status": 2,
                    "validate_data": 1
                },
                "_DAT_40007004": {
                    "control_flag": 1,
                    "data_flag3": 1,
                    "status_flags": 1
                },
                "_DAT_40023840": {
                    "data_flag": 1,
                    "data_flag1": 1,
                    "data_flags": 1
                },
                "_DAT_420e0040": {
                    "data_flag2": 1,
                    "data_processed_flag": 1,
                    "return_value": 1
                },
                "_DAT_420e0044": {
                    "control_processed_flag": 1,
                    "data_flag4": 1,
                    "inner_return_value": 1
                },
                "get_data_value_08000e30": {
                    "get_data_value": 5
                },
                "iVar1": {
                    "data_value_1": 1,
                    "initial_data_value": 1,
                    "initial_value": 16,
                    "prev_data_value": 2,
                    "prev_value": 1,
                    "previous_data_value": 5,
                    "previous_value": 4,
                    "start_value": 1
                },
                "iVar2": {
                    "curr_data_value": 1,
                    "curr_value": 1,
                    "current_data_value": 7,
                    "current_value": 20,
                    "data_value_2": 1,
                    "new_value": 1
                }
            },
            "called": [
                "FUN_08000e30"
            ],
            "calling": [
                "FUN_08000c8c"
            ],
            "code": "\n\n\nundefined4 initialize_data_08001f9c(void)\n\n{\n  int initial_value;\n  int current_value;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_420e0040 = 1;\n  initial_value = get_data_value();\n  do {\n    if ((_DAT_40007004 & 0x10000) != 0) {\n      _DAT_420e0044 = 1;\n      initial_value = get_data_value();\n      do {\n        if ((_DAT_40007004 & 0x20000) != 0) {\n          return 0;\n        }\n        current_value = get_data_value();\n      } while ((uint)(current_value - initial_value) < 0x3e9);\n      return 3;\n    }\n    current_value = get_data_value();\n  } while ((uint)(current_value - initial_value) < 0x3e9);\n  return 3;\n}\n\n",
            "current_name": "initialize_data_08001f9c",
            "entrypoint": "0x08001f9c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001f9c": "initialize_data_08001f9c",
                "get_data_value_08000e30": "get_data_value",
                "iVar1": "initial_value",
                "iVar2": "current_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800201c": {
            "additional_data": {
                "FUN_0800201c": {
                    "check_and_adjust_values": 1,
                    "check_and_control_data": 2,
                    "check_and_set_values": 1,
                    "check_and_update_flags": 1,
                    "check_conditions": 1,
                    "check_conditions_and_values": 1,
                    "check_data": 1,
                    "check_data_validity": 2,
                    "check_data_values": 1,
                    "check_flags_and_values": 1,
                    "check_parameters": 1,
                    "handle_data": 1,
                    "handle_function": 1,
                    "handle_param_check": 1,
                    "handle_param_checks": 1,
                    "perform_data_operations": 2,
                    "process_configuration": 1,
                    "process_data": 1,
                    "process_parameters": 1,
                    "validate_configuration": 1,
                    "validate_data": 2,
                    "validate_parameters": 1,
                    "verify_permissions": 1
                },
                "_DAT_40007000": {
                    "control_register_3": 1,
                    "hardware_flags": 1,
                    "register4": 1,
                    "register5": 1,
                    "register9": 1,
                    "register_5": 1
                },
                "_DAT_40023800": {
                    "control_register_1": 1,
                    "global_flags": 1,
                    "register3": 3,
                    "register_3": 1,
                    "register_c": 1
                },
                "_DAT_40023804": {
                    "config_value2": 1,
                    "flag_register_2": 1,
                    "register2": 3,
                    "register_2": 1,
                    "register_b": 1
                },
                "_DAT_40023808": {
                    "config_value1": 1,
                    "flag_register_1": 1,
                    "register1": 3,
                    "register_1": 1,
                    "register_a": 1
                },
                "_DAT_40023840": {
                    "config_value4": 1,
                    "control_register_2": 1,
                    "register4": 1,
                    "register5": 1,
                    "register8": 1,
                    "register_4": 1,
                    "register_d": 1
                },
                "_DAT_40023870": {
                    "config_value5": 1,
                    "control_register_5": 1,
                    "register6": 1,
                    "register7": 1,
                    "register9": 1,
                    "register_6": 1,
                    "variable_c": 1
                },
                "_DAT_40023874": {
                    "config_value3": 1,
                    "control_register_4": 1,
                    "register6": 1,
                    "register7": 2,
                    "register_7": 1,
                    "register_e": 1
                },
                "_DAT_42470000": {
                    "data_register_1": 1,
                    "flag1": 1,
                    "register10": 1,
                    "register4": 1,
                    "register8": 1,
                    "register_8": 1,
                    "variable_a": 1
                },
                "_DAT_42470060": {
                    "data_register_3": 1,
                    "flag3": 1,
                    "register10": 1,
                    "register11": 1,
                    "register5": 1,
                    "register_9": 1,
                    "variable_b": 1
                },
                "_DAT_42470e80": {
                    "data_register_2": 1,
                    "flag2": 1,
                    "register9": 1
                },
                "bVar4": {
                    "flag": 2,
                    "has_config_flag": 1,
                    "is_bit_set": 4,
                    "is_condition_met": 4,
                    "is_condition_true": 4,
                    "is_flag_set": 8,
                    "is_new_flag": 1,
                    "is_set": 2,
                    "is_true": 1,
                    "is_value_set": 1,
                    "is_variable_set": 1,
                    "set_flag": 1,
                    "update_flag": 1
                },
                "get_data_value_08000e30": {
                    "get_data_value": 6
                },
                "iVar1": {
                    "index1": 1,
                    "initial_value": 16,
                    "prev_data_value": 1,
                    "start_time": 3,
                    "start_value": 7,
                    "val1": 1,
                    "value1": 1,
                    "value_1": 1
                },
                "iVar2": {
                    "current_data_value": 1,
                    "current_time": 2,
                    "current_value": 21,
                    "index2": 1,
                    "new_value": 2,
                    "updated_value": 1,
                    "val2": 1,
                    "value2": 1,
                    "value_2": 1
                },
                "param_1": {
                    "config": 1,
                    "configuration": 1,
                    "data": 5,
                    "data_array": 1,
                    "data_params": 2,
                    "data_ptr": 1,
                    "data_values": 1,
                    "flags": 2,
                    "input": 1,
                    "input_array": 1,
                    "input_data": 2,
                    "input_pointer": 1,
                    "param": 2,
                    "parameter": 1,
                    "parameters": 4,
                    "params": 4,
                    "permissions": 1
                },
                "uVar3": {
                    "result": 26,
                    "return_value": 3
                }
            },
            "called": [
                "FUN_08000e30"
            ],
            "calling": [
                "FUN_08000c8c"
            ],
            "code": "\n\n\nundefined4 check_data_validity_0800201c(uint *data)\n\n{\n  int initial_value;\n  int current_value;\n  undefined4 result;\n  bool is_flag_set;\n  \n  if (data == (uint *)0x0) {\n    return 1;\n  }\n  if ((*data & 1) != 0) {\n    if (((_DAT_40023808 & 0xc) == 4) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) != 0)))) {\n      if (((_DAT_40023800 & 0x20000) != 0) && (data[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      if (data[1] == 0x10000) {\n        _DAT_40023800 = _DAT_40023800 | 0x10000;\n      }\n      else if (data[1] == 0x50000) {\n        _DAT_40023800 = _DAT_40023800 | 0x50000;\n      }\n      else {\n        _DAT_40023800 = _DAT_40023800 & 0xfffaffff;\n      }\n      if (data[1] == 0) {\n        initial_value = get_data_value();\n        while ((_DAT_40023800 & 0x20000) != 0) {\n          current_value = get_data_value();\n          if (100 < (uint)(current_value - initial_value)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        initial_value = get_data_value();\n        while ((_DAT_40023800 & 0x20000) == 0) {\n          current_value = get_data_value();\n          if (100 < (uint)(current_value - initial_value)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*data & 2) != 0) {\n    if (((_DAT_40023808 & 0xc) == 0) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0)))) {\n      if (((_DAT_40023800 & 2) != 0) && (data[3] != 1)) {\n        return 1;\n      }\n      _DAT_40023800 = _DAT_40023800 & 0xffffff07 | data[4] << 3;\n    }\n    else if (data[3] == 0) {\n      _DAT_42470000 = 0;\n      initial_value = get_data_value();\n      while ((_DAT_40023800 & 2) != 0) {\n        current_value = get_data_value();\n        if (2 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470000 = 1;\n      initial_value = get_data_value();\n      while ((_DAT_40023800 & 2) == 0) {\n        current_value = get_data_value();\n        if (2 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = _DAT_40023800 & 0xffffff07 | data[4] << 3;\n    }\n  }\n  if ((*data & 8) != 0) {\n    if (data[5] == 0) {\n      _DAT_42470e80 = 0;\n      initial_value = get_data_value();\n      while ((_DAT_40023874 & 2) != 0) {\n        current_value = get_data_value();\n        if (2 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470e80 = 1;\n      initial_value = get_data_value();\n      while ((_DAT_40023874 & 2) == 0) {\n        current_value = get_data_value();\n        if (2 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*data & 4) != 0) {\n    is_flag_set = (_DAT_40023840 & 0x10000000) == 0;\n    if (is_flag_set) {\n      _DAT_40023840 = _DAT_40023840 | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      initial_value = get_data_value();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        current_value = get_data_value();\n        if (2 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    if (data[2] == 1) {\n      _DAT_40023870 = _DAT_40023870 | 1;\n    }\n    else if (data[2] == 5) {\n      _DAT_40023870 = _DAT_40023870 | 5;\n    }\n    else {\n      _DAT_40023870 = _DAT_40023870 & 0xfffffffa;\n    }\n    if (data[2] == 0) {\n      initial_value = get_data_value();\n      while ((_DAT_40023870 & 2) != 0) {\n        current_value = get_data_value();\n        if (5000 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      initial_value = get_data_value();\n      while ((_DAT_40023870 & 2) == 0) {\n        current_value = get_data_value();\n        if (5000 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    if (is_flag_set) {\n      _DAT_40023840 = _DAT_40023840 & 0xefffffff;\n    }\n  }\n  if (data[6] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40023808 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (data[6] == 2) {\n    _DAT_42470060 = 0;\n    initial_value = get_data_value();\n    do {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        _DAT_40023804 =\n             data[7] | data[8] | data[9] << 6 | ((data[10] >> 1) - 1) * 0x10000 |\n             data[0xb] << 0x18;\n        _DAT_42470060 = 1;\n        initial_value = get_data_value();\n        do {\n          if ((_DAT_40023800 & 0x2000000) != 0) {\n            return 0;\n          }\n          current_value = get_data_value();\n        } while ((uint)(current_value - initial_value) < 3);\n        return 3;\n      }\n      current_value = get_data_value();\n    } while ((uint)(current_value - initial_value) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42470060 = 0;\n    initial_value = get_data_value();\n    do {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        return 0;\n      }\n      current_value = get_data_value();\n    } while ((uint)(current_value - initial_value) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "current_name": "check_data_validity_0800201c",
            "entrypoint": "0x0800201c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800201c": "check_data_validity_0800201c",
                "bVar4": "is_flag_set",
                "get_data_value_08000e30": "get_data_value",
                "iVar1": "initial_value",
                "iVar2": "current_value",
                "param_1": "data",
                "uVar3": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080023b4": {
            "additional_data": {
                "CARRY4": {
                    "calculate_carry": 1,
                    "carry": 2,
                    "carry_helper": 1,
                    "check_carry": 1
                },
                "FUN_080023b4": {
                    "calculate_clock_frequency": 3,
                    "calculate_clock_speed": 8,
                    "calculate_frequency": 15,
                    "calculate_optimal_clock_speed": 1,
                    "calculate_output_frequency": 1,
                    "calculate_timer_frequency": 1,
                    "get_frequency": 1
                },
                "_CARRY4": {
                    "has_carry": 1
                },
                "_DAT_40023804": {
                    "config_register": 1,
                    "config_register_2": 1,
                    "control_register_2": 1,
                    "data_1": 1,
                    "data_2": 2,
                    "data_register": 1,
                    "data_register_2": 5,
                    "input2": 1,
                    "input_data_2": 1,
                    "register2": 1,
                    "register_2": 2,
                    "register_val_2": 1,
                    "register_value2": 2,
                    "register_value_2": 7,
                    "system_register2": 1,
                    "timer_config_reg": 1,
                    "timer_config_register": 1,
                    "value_register": 1
                },
                "_DAT_40023808": {
                    "clock_config_reg": 1,
                    "config_register": 1,
                    "config_register_1": 1,
                    "control_register": 2,
                    "control_register_1": 1,
                    "data_1": 2,
                    "data_2": 1,
                    "data_register_1": 5,
                    "input1": 1,
                    "input_data_1": 1,
                    "register1": 1,
                    "register_1": 2,
                    "register_val_1": 1,
                    "register_value1": 2,
                    "register_value_1": 7,
                    "system_register1": 1,
                    "timer_control_register": 1
                },
                "_FUN_080023b4": {
                    "calculate_frequency": 1
                },
                "_calculate_result_080002d0": {
                    "calculate_value": 1
                },
                "_in_r3": {
                    "input_delay": 1
                },
                "_uVar1": {
                    "result": 1
                },
                "calculate_result_080002d0": {
                    "calculate_result": 8,
                    "perform_calculation": 1
                },
                "in_r3": {
                    "additional_param": 1,
                    "arg1": 1,
                    "frequency_multiplier": 1,
                    "in_r3": 1,
                    "input_param": 12,
                    "input_parameter": 4,
                    "input_register": 2,
                    "input_register_3": 1,
                    "input_value": 5,
                    "param1": 1,
                    "some_input": 1
                },
                "uVar1": {
                    "calculated_result": 1,
                    "calculated_value": 2,
                    "clock_frequency": 1,
                    "frequency": 4,
                    "multiplier": 1,
                    "result": 21
                }
            },
            "called": [
                "FUN_080002d0"
            ],
            "calling": [
                "FUN_08002488"
            ],
            "code": "\n\n\nuint calculate_clock_frequency_080023b4(void)\n\n{\n  undefined4 input_param;\n  uint result;\n  \n  if ((_DAT_40023808 & 0xc) == 4) {\n    return 8000000;\n  }\n  if ((_DAT_40023808 & 0xc) != 8) {\n    return 16000000;\n  }\n  if ((_DAT_40023804 & 0x400000) == 0) {\n    result = (_DAT_40023804 << 0x11) >> 0x17;\n    result = calculate_result(result * 16000000,\n                         (((uint)(result * 0x20 < result) * -0x3f -\n                          (uint)(result * 0x7c0 < result * 0x1f)) * 8 +\n                         (uint)carry(result * 0x3d08,result)) * 0x400 | result * 0x3d09 >> 0x16,\n                         _DAT_40023804 & 0x3f,0,input_param);\n  }\n  else {\n    result = (_DAT_40023804 << 0x11) >> 0x17;\n    result = calculate_result(result * 8000000,\n                         (((uint)(result * 0x20 < result) * -0x3f -\n                          (uint)(result * 0x7c0 < result * 0x1f)) * 8 +\n                         (uint)carry(result * 0x3d08,result)) * 0x200,_DAT_40023804 & 0x3f,0,input_param);\n  }\n  return result / ((((_DAT_40023804 << 0xe) >> 0x1e) + 1) * 2);\n}\n\n",
            "current_name": "calculate_clock_frequency_080023b4",
            "entrypoint": "0x080023b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "CARRY4": "carry",
                "FUN_080023b4": "calculate_clock_frequency_080023b4",
                "calculate_result_080002d0": "calculate_result",
                "in_r3": "input_param",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002488": {
            "additional_data": {
                "DAT_08005dfc": {
                    "lookup_table": 1
                },
                "DAT_2000002c": {
                    "clock_delay": 1,
                    "clock_frequency_adjustment": 1,
                    "clock_frequency_data": 1,
                    "clock_frequency_result": 6,
                    "clock_result": 2,
                    "clock_speed_setting": 1,
                    "clock_value": 2,
                    "result": 1,
                    "updated_clock_frequency": 1,
                    "updated_frequency": 2
                },
                "DAT_40023800": {
                    "config_value": 1,
                    "data": 1,
                    "data_register": 1,
                    "device_status": 3,
                    "special_register": 1,
                    "system_config_reg_1": 1
                },
                "DAT_40023c00_1": {
                    "clock_config_1": 1,
                    "clock_frequency_param_2": 1,
                    "clock_settings_1": 1,
                    "config_mask": 1,
                    "config_register_1_bit0": 1,
                    "data_register_1": 1,
                    "device_config_char": 1,
                    "device_register_1": 1,
                    "device_register_2_byte": 1,
                    "device_settings_1": 1,
                    "system_config1": 1,
                    "system_config_flag": 1,
                    "system_config_reg_1_value": 1,
                    "system_data_1": 1
                },
                "FUN_08002488": {
                    "configure_device": 4,
                    "configure_hardware": 2,
                    "configure_settings": 1,
                    "configure_system": 2,
                    "initialize_and_update": 5,
                    "initialize_and_update_clock": 3,
                    "initialize_and_update_data": 1,
                    "initialize_and_update_settings": 2,
                    "initialize_configuration": 1,
                    "initialize_data": 2,
                    "initialize_device": 2,
                    "initialize_device_settings": 1,
                    "initialize_system": 5
                },
                "_DAT_40023800": {
                    "status_register": 1,
                    "system_data2": 1
                },
                "_DAT_40023808": {
                    "character_data": 1,
                    "config_register_2": 1,
                    "control_register": 3,
                    "data_register": 1,
                    "data_value": 1,
                    "device_config": 2,
                    "device_control": 1,
                    "device_register_2": 1,
                    "system_config_reg_2": 1,
                    "system_control": 1,
                    "system_data": 1
                },
                "_DAT_40023c00": {
                    "clock_config": 1,
                    "clock_frequency_param": 1,
                    "clock_settings": 1,
                    "config_register_1": 1,
                    "data_register": 1,
                    "device_config": 1,
                    "device_register": 1,
                    "device_register_1": 1,
                    "device_settings": 1,
                    "system_config": 3,
                    "system_config_reg_1": 1,
                    "system_data": 1
                },
                "_DAT_40023c00_1": {
                    "clock_config_1": 1,
                    "clock_settings_1": 1
                },
                "calculate_clock_frequency_080023b4": {
                    "calculate_clock_frequency": 16,
                    "calculate_frequency": 2
                },
                "get_data_value_08000e30": {
                    "get_data_value": 12,
                    "get_duration": 1,
                    "get_elapsed_time": 3,
                    "get_time_difference": 1,
                    "get_value": 1
                },
                "iVar1": {
                    "initial_data_value": 3,
                    "initial_time": 1,
                    "initial_value": 6,
                    "prev_value": 1,
                    "previous_value": 1,
                    "start_time": 8,
                    "start_value": 7
                },
                "iVar2": {
                    "curr_value": 1,
                    "current_data_value": 3,
                    "current_time": 8,
                    "current_value": 10,
                    "end_time": 1,
                    "end_value": 1,
                    "int_value": 1,
                    "new_value": 2
                },
                "initialize_and_update_character_data_08000d98": {
                    "initialize_and_update_character_data": 13,
                    "initialize_and_update_data": 2,
                    "initialize_character_data": 2,
                    "initialize_characters": 1
                },
                "param_1": {
                    "config": 7,
                    "config_array": 2,
                    "config_data": 1,
                    "config_flags": 2,
                    "config_params": 6,
                    "configurations": 1,
                    "data_array": 1,
                    "data_config": 1,
                    "device_config": 1,
                    "device_settings": 2,
                    "input_data": 1,
                    "settings": 4,
                    "system_config": 2
                },
                "param_2": {
                    "array_size": 1,
                    "clock_freq": 2,
                    "clock_frequency": 1,
                    "clock_setting": 1,
                    "clock_speed": 1,
                    "clock_value": 1,
                    "config_length": 3,
                    "config_params_count": 1,
                    "config_size": 4,
                    "data_size": 1,
                    "frequency": 2,
                    "max_value": 1,
                    "num_config": 2,
                    "num_configs": 2,
                    "num_of_configurations": 1,
                    "num_params": 4,
                    "num_settings": 1,
                    "value": 2
                },
                "uVar3": {
                    "clock_freq": 3,
                    "clock_frequency": 22,
                    "freq_value": 2,
                    "frequency": 1,
                    "result": 1
                }
            },
            "called": [
                "FUN_08000d98",
                "FUN_08000e30",
                "FUN_080023b4"
            ],
            "calling": [
                "FUN_08000c8c"
            ],
            "code": "\n\n\nundefined4 initialize_and_update_clock_08002488(uint *config,uint config_size)\n\n{\n  int start_time;\n  int current_value;\n  uint clock_frequency;\n  \n  if (config == (uint *)0x0) {\n    return 1;\n  }\n  if ((_DAT_40023c00 & 0xf) < config_size) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)config_size);\n    if (config_size != (config_size & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*config & 2) != 0) {\n    if ((*config & 4) != 0) {\n      _DAT_40023808 = _DAT_40023808 | 0x1c00;\n    }\n    if ((*config & 8) != 0) {\n      _DAT_40023808 = _DAT_40023808 | 0xe000;\n    }\n    _DAT_40023808 = _DAT_40023808 & 0xffffff0f | config[2];\n  }\n  if ((*config & 1) != 0) {\n    clock_frequency = config[1];\n    if (clock_frequency == 1) {\n      if ((_DAT_40023800 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if (clock_frequency - 2 < 2) {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        return 1;\n      }\n    }\n    else if ((_DAT_40023800 & 2) == 0) {\n      return 1;\n    }\n    _DAT_40023808 = clock_frequency | _DAT_40023808 & 0xfffffffc;\n    start_time = get_data_value();\n    while( true ) {\n      if ((_DAT_40023808 & 0xc) == config[1] * 4) break;\n      current_value = get_data_value();\n      if (5000 < (uint)(current_value - start_time)) {\n        return 3;\n      }\n    }\n  }\n  if (config_size < (_DAT_40023c00 & 0xf)) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)config_size);\n    if (config_size != (config_size & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*config & 4) != 0) {\n    _DAT_40023808 = _DAT_40023808 & 0xffffe3ff | config[3];\n  }\n  if ((*config & 8) != 0) {\n    _DAT_40023808 = _DAT_40023808 & 0xffff1fff | config[4] << 3;\n  }\n  clock_frequency = calculate_clock_frequency();\n  DAT_2000002c = clock_frequency >> (&DAT_08005dfc)[(_DAT_40023808 << 0x18) >> 0x1c];\n  initialize_and_update_character_data(0xf);\n  return 0;\n}\n\n",
            "current_name": "initialize_and_update_clock_08002488",
            "entrypoint": "0x08002488",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002488": "initialize_and_update_clock_08002488",
                "calculate_clock_frequency_080023b4": "calculate_clock_frequency",
                "get_data_value_08000e30": "get_data_value",
                "iVar1": "start_time",
                "iVar2": "current_value",
                "initialize_and_update_character_data_08000d98": "initialize_and_update_character_data",
                "param_1": "config",
                "param_2": "config_size",
                "uVar3": "clock_frequency"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080025e0": {
            "additional_data": {
                "DAT_2000002c": {
                    "data": 8,
                    "data_offset": 1,
                    "data_value": 4,
                    "global_variable": 1,
                    "result": 2
                },
                "FUN_080025e0": {
                    "get_config_value": 1,
                    "get_constant_value": 1,
                    "get_dat_value": 1,
                    "get_data": 10,
                    "get_data_offset": 1,
                    "get_data_value": 15,
                    "get_global_variable": 1,
                    "get_initial_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080025ec",
                "FUN_0800260c",
                "FUN_08000c8c"
            ],
            "code": "\nundefined4 get_data_value_080025e0(void)\n\n{\n  return DAT_2000002c;\n}\n\n",
            "current_name": "get_data_value_080025e0",
            "entrypoint": "0x080025e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080025e0": "get_data_value_080025e0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080025ec": {
            "additional_data": {
                "DAT_08005e0c": {
                    "_shift_array": 1,
                    "data_constants": 1,
                    "shift_amount": 1,
                    "shift_array": 1,
                    "shift_table": 7,
                    "shift_value": 1,
                    "shifts": 1
                },
                "FUN_080025ec": {
                    "calculate_shifted_data_value": 1,
                    "calculate_shifted_value": 2,
                    "decode_data_value": 1,
                    "extract_data_value": 1,
                    "extracted_data": 1,
                    "extracted_value_shift": 1,
                    "get_data_value": 1,
                    "get_data_value_shifted": 2,
                    "get_shifted_data": 3,
                    "get_shifted_data_value": 13,
                    "get_shifted_value": 3,
                    "reverse_and_shift_data": 1,
                    "shift_value": 1
                },
                "PTR_get_data_value_080025e0": {
                    "get_data_value": 1
                },
                "_DAT_40023808": {
                    "_data_value": 1,
                    "constant_value": 3,
                    "data_shift": 2,
                    "data_value": 1,
                    "input_data": 2,
                    "input_value": 5,
                    "shift_amount": 8,
                    "shift_constant": 2,
                    "shift_value": 6,
                    "some_value": 1
                },
                "get_data_value_080025e0": {
                    "get_data_value": 13
                },
                "uVar1": {
                    "data_value": 29,
                    "extracted_value": 1
                }
            },
            "called": [
                "FUN_080025e0"
            ],
            "calling": [
                "FUN_080029c8"
            ],
            "code": "\n\n\nuint get_data_value_shifted_080025ec(void)\n\n{\n  uint data_value;\n  \n  data_value = get_data_value();\n  return data_value >> (&DAT_08005e0c)[(uint)(_DAT_40023808 << 0x13) >> 0x1d];\n}\n\n",
            "current_name": "get_data_value_shifted_080025ec",
            "entrypoint": "0x080025ec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080025ec": "get_data_value_shifted_080025ec",
                "get_data_value_080025e0": "get_data_value",
                "uVar1": "data_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800260c": {
            "additional_data": {
                "0x10": {
                    "shift_amount1": 1,
                    "shift_const1": 1
                },
                "0x1d": {
                    "shift_amount2": 1,
                    "shift_const2": 1
                },
                "DAT_08005e0c": {
                    "data_array": 1,
                    "shift_amount": 2,
                    "shift_array": 8,
                    "shift_table": 1,
                    "shift_value": 2,
                    "shift_values": 2
                },
                "FUN_0800260c": {
                    "calculate_shifted_value": 2,
                    "extracted_data_shift": 2,
                    "extracted_data_shifted": 1,
                    "extracted_data_shifted_routine": 1,
                    "extracted_data_value": 1,
                    "extracted_value": 1,
                    "get_shifted_data_value": 17,
                    "get_shifted_value": 1,
                    "shift_data_value": 4
                },
                "_DAT_40023808": {
                    "bit_shift_value": 1,
                    "constant_value": 1,
                    "data_shift": 1,
                    "data_value_shift": 1,
                    "input": 1,
                    "input_data": 2,
                    "input_value": 10,
                    "original_data": 1,
                    "param": 1,
                    "raw_shift_value": 1,
                    "shift_amount": 4,
                    "shift_value": 4,
                    "shifted_value": 1,
                    "value_1": 1,
                    "variable_1": 1
                },
                "get_data_value_080025e0": {
                    "get_data_value": 16,
                    "get_original_data_value": 1
                },
                "uVar1": {
                    "data_value": 31
                }
            },
            "called": [
                "FUN_080025e0"
            ],
            "calling": [
                "FUN_080029c8"
            ],
            "code": "\n\n\nuint get_shifted_data_value_0800260c(void)\n\n{\n  uint data_value;\n  \n  data_value = get_data_value();\n  return data_value >> (&DAT_08005e0c)[(uint)(_DAT_40023808 << 0x10) >> 0x1d];\n}\n\n",
            "current_name": "get_shifted_data_value_0800260c",
            "entrypoint": "0x0800260c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800260c": "get_shifted_data_value_0800260c",
                "get_data_value_080025e0": "get_data_value",
                "uVar1": "data_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800262c": {
            "additional_data": {
                "DAT_1d": {
                    "flag": 1
                },
                "FUC_0800268c": {
                    "execute_function": 1
                },
                "FUNC_0800268c": {
                    "execute_additional_operation": 1,
                    "execute_another_function": 3,
                    "execute_callback_function_2": 1,
                    "execute_function": 2,
                    "execute_other_function": 1,
                    "execute_reverse": 1,
                    "function0800268c": 1,
                    "function_0800268c": 1,
                    "perform_action": 4,
                    "perform_additional_checks": 1,
                    "perform_additional_operation": 3,
                    "perform_another_action": 1,
                    "perform_operation": 2,
                    "perform_other_action": 1,
                    "perform_second_operation": 1,
                    "perform_task": 1,
                    "process_another_flag": 1,
                    "process_params": 1,
                    "reverse_bits": 1
                },
                "FUN_0800262c": {
                    "execute_and_modify_flags": 1,
                    "execute_and_update_flags": 9,
                    "execute_callback": 3,
                    "execute_callbacks": 2,
                    "execute_condition_check": 1,
                    "execute_enable_flags": 1,
                    "execute_flag_check": 1,
                    "execute_flags_handler": 1,
                    "execute_function_and_update_flags": 1,
                    "execute_function_based_on_flags": 1,
                    "execute_function_with_flags": 1,
                    "execute_operations": 1,
                    "execute_parameter_checks": 1,
                    "perform_operation": 1,
                    "process_flags": 1,
                    "update_configuration": 1,
                    "update_control_flags": 1,
                    "update_flags_and_execute_callbacks": 1,
                    "update_flags_and_set_state": 1
                },
                "PTR_0800262c": {
                    "ptr_0800262c": 1
                },
                "PTR_0800262d": {
                    "data_ptr": 1
                },
                "PTR_0800268c": {
                    "action_function": 1
                },
                "PTR_08003594": {
                    "callback_function": 1
                },
                "_": {
                    "temporary_variable": 1
                },
                "_DAT_40013c14": {
                    "additional_data": 1,
                    "data": 1,
                    "data40013c14": 1,
                    "data_40013c14": 3,
                    "data_register": 1,
                    "flag_register": 2,
                    "global_constant_flag": 1,
                    "global_flag": 3,
                    "global_variable": 3,
                    "memory_location": 1,
                    "some_variable": 2,
                    "special_flag": 1,
                    "status": 1,
                    "status_flag": 1,
                    "status_register": 1
                },
                "execute_and_update_flags": {
                    "execute_and_update_flags": 1
                },
                "execute_callback_function_08003594": {
                    "execute_callback": 13,
                    "execute_callback_function": 12,
                    "execute_callback_function_1": 1,
                    "execute_callbacks": 1,
                    "execute_flag_callback": 1,
                    "run_callback_function": 1
                },
                "flag_ptr": {
                    "flag_pointer": 1
                },
                "int_0x1d": {
                    "flag": 1
                },
                "param_1": {
                    "arg_ptr": 1,
                    "callback_data": 6,
                    "callback_ptr": 1,
                    "condition_parameters": 1,
                    "config_ptr": 1,
                    "control_flags": 1,
                    "data": 1,
                    "data_pointer": 2,
                    "data_ptr": 4,
                    "flag_ptr": 1,
                    "flags_ptr": 2,
                    "function_context": 1,
                    "function_params": 1,
                    "input_array": 1,
                    "param": 2,
                    "parameter_1": 1,
                    "pointer": 1,
                    "ptr_data": 1,
                    "ptr_to_flags": 1,
                    "ptr_to_params": 1
                },
                "perform_operation": {
                    "perform_operation": 1
                },
                "undefined": {
                    "status": 2,
                    "status_flag": 1,
                    "unknown_value": 1
                }
            },
            "called": [
                "FUN_08003594",
                "FUN_0800268c"
            ],
            "calling": [],
            "code": "\n\n\nvoid update_flags_and_execute_callbacks_0800262c(int *callback_data)\n\n{\n  if (((*(uint *)(*callback_data + 0xc) & 0x100) != 0) && ((*(uint *)(*callback_data + 8) & 0x1000) != 0)) {\n    execute_callback();\n    *(uint *)(*callback_data + 0xc) = *(uint *)(*callback_data + 0xc) & 0xff | 0xfffffe7f;\n  }\n  if (((*(uint *)(*callback_data + 0xc) & 0x200) != 0) && ((*(uint *)(*callback_data + 8) & 0x2000) != 0)) {\n    FUNCtemporary_variable0800268c(callback_data);\n    *(uint *)(*callback_data + 0xc) = *(uint *)(*callback_data + 0xc) & 0xff | 0xfffffd7f;\n  }\n  temporary_variableDATtemporary_variable40013c14 = 0x20000;\n  *(status *)((int)callback_data + 0x1d) = 1;\n  return;\n}\n\n",
            "current_name": "update_flags_and_execute_callbacks_0800262c",
            "entrypoint": "0x0800262c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800262c": "update_flags_and_execute_callbacks_0800262c",
                "_": "temporary_variable",
                "execute_callback_function_08003594": "execute_callback",
                "param_1": "callback_data",
                "undefined": "status"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800268c": {
            "called": [],
            "calling": [
                "FUN_0800262c"
            ],
            "code": "\nvoid FUNC_0800268c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800268c",
            "entrypoint": "0x0800268c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800268c": "FUNC_0800268c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800268e": {
            "additional_data": {
                "FUN_0800268e": {
                    "update_and_cleanup_data": 1,
                    "update_and_clear_registers": 1,
                    "update_and_reset_data": 2,
                    "update_and_reset_flags": 1,
                    "update_and_reset_registers": 1,
                    "update_and_set_values": 1,
                    "update_data": 4,
                    "update_data_and_registers": 1,
                    "update_data_registers": 8,
                    "update_flags_and_registers": 2,
                    "update_register_and_data": 1,
                    "update_registers": 8
                },
                "param_1": {
                    "data": 8,
                    "data_and_registers": 1,
                    "data_pointer": 4,
                    "data_ptr": 4,
                    "data_registers": 3,
                    "input_array": 1,
                    "parameter": 1,
                    "parameters": 2,
                    "params": 1,
                    "register_data": 1,
                    "registers": 5
                },
                "puVar1": {
                    "current_array": 1,
                    "current_data": 1,
                    "current_data_ptr": 1,
                    "current_data_register": 1,
                    "current_ptr": 1,
                    "current_register": 5,
                    "data": 2,
                    "data_pointer": 4,
                    "data_ptr": 2,
                    "data_value": 1,
                    "pointer": 3,
                    "pointer1": 1,
                    "pointer_to_registers": 1,
                    "pointer_var1": 1,
                    "ptr": 3,
                    "ptr1": 1,
                    "register": 1,
                    "register_ptr": 1
                },
                "update_data_registers_0800340c": {
                    "update_data_and_registers": 1,
                    "update_data_registers": 11,
                    "update_data_registers_internal": 1,
                    "update_registers": 1,
                    "update_registers_data": 1
                }
            },
            "called": [
                "FUN_0800340c"
            ],
            "calling": [
                "FUN_08003414"
            ],
            "code": "\nvoid update_data_and_registers_0800268e(uint **data)\n\n{\n  uint *current_register;\n  \n  *(undefined *)((int)data + 0x39) = 2;\n  current_register = *data;\n  if ((current_register[8] & 0x1111) == 0) {\n    if ((current_register[8] & 0x444) == 0) {\n      *current_register = *current_register & 0xfffffffe;\n    }\n  }\n  update_data_registers(data);\n  *(undefined *)((int)data + 0x39) = 0;\n  *(undefined *)(data + 0xe) = 0;\n  return;\n}\n\n",
            "current_name": "update_data_and_registers_0800268e",
            "entrypoint": "0x0800268e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800268e": "update_data_and_registers_0800268e",
                "param_1": "data",
                "puVar1": "current_register",
                "update_data_registers_0800340c": "update_data_registers"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080026c8": {
            "called": [],
            "calling": [
                "FUN_080026ce"
            ],
            "code": "\nvoid FUNC_080026c8(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080026c8",
            "entrypoint": "0x080026c8",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080026c8": "FUNC_080026c8"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080026ca": {
            "called": [],
            "calling": [
                "FUN_080026ce"
            ],
            "code": "\nvoid FUNC_080026ca(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080026ca",
            "entrypoint": "0x080026ca",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080026ca": "FUNC_080026ca"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080026cc": {
            "called": [],
            "calling": [
                "FUN_080026ce"
            ],
            "code": "\nvoid FUNC_080026cc(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080026cc",
            "entrypoint": "0x080026cc",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080026cc": "FUNC_080026cc"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080026ce": {
            "additional_data": {
                "FUC_080026c8": {
                    "handle_error": 1
                },
                "FUC_080026ca": {
                    "perform_operation": 1
                },
                "FUNC_080026c8": {
                    "alternate_action": 1,
                    "default_flag_action": 1,
                    "do_action2": 1,
                    "do_something_else": 3,
                    "func_b": 1,
                    "function2": 1,
                    "function_b": 4,
                    "handle_case_b": 1,
                    "handle_error": 2,
                    "handle_exception": 2,
                    "perform_action_b": 1,
                    "perform_alternate_action": 1,
                    "perform_alternate_operation": 1,
                    "perform_alternative_action": 1,
                    "perform_default_operation": 1,
                    "process_alternative": 1,
                    "process_flag_c_alternative": 1,
                    "process_function_b": 1
                },
                "FUNC_080026ca": {
                    "do_action1": 1,
                    "do_something": 3,
                    "func_a": 1,
                    "function1": 1,
                    "function_a": 4,
                    "handle_case_a": 1,
                    "perform_action": 4,
                    "perform_action_a": 1,
                    "perform_operation": 3,
                    "process": 1,
                    "process_condition": 1,
                    "process_data": 1,
                    "process_flag_c": 1,
                    "process_flag_condition": 1,
                    "process_function_a": 1
                },
                "FUNC_080026cc": {
                    "do_something": 1,
                    "do_something_else": 1,
                    "do_yet_another_something": 1,
                    "execute_another_function": 1,
                    "execute_function2": 1,
                    "execute_some_action": 1,
                    "func_d": 1,
                    "function2": 1,
                    "function4": 1,
                    "function_d": 5,
                    "function_with0x40_flag": 1,
                    "handle_condition": 1,
                    "handle_mismatch": 1,
                    "perform_action2": 1,
                    "perform_action_b": 1,
                    "perform_action_d": 1,
                    "perform_alternative_operation": 1,
                    "perform_another_action": 1,
                    "perform_another_special_operation": 1,
                    "perform_custom_operation2": 1,
                    "perform_function2": 1,
                    "perform_other_action": 1
                },
                "FUNC_0800293c": {
                    "do_another_thing": 1,
                    "do_something_else": 1,
                    "do_something_more": 1,
                    "execute_additional_action": 1,
                    "execute_additional_function": 1,
                    "execute_function3": 1,
                    "func_e": 1,
                    "function3": 1,
                    "function5": 1,
                    "function_e": 5,
                    "function_with0x20_flag": 1,
                    "handle_event": 1,
                    "handle_timeout": 1,
                    "perform_action3": 1,
                    "perform_action_c": 1,
                    "perform_action_e": 1,
                    "perform_additional_action": 2,
                    "perform_additional_operation": 1,
                    "perform_additional_special_operation": 1,
                    "perform_custom_operation3": 1,
                    "perform_function3": 1
                },
                "FUNC_0800293e": {
                    "do_another_something": 1,
                    "do_something": 1,
                    "do_something_else": 1,
                    "execute_function": 1,
                    "execute_function1": 1,
                    "execute_special_function": 1,
                    "func_c": 1,
                    "function1": 1,
                    "function3": 1,
                    "function_c": 5,
                    "function_with0x80_flag": 1,
                    "handle_error": 1,
                    "handle_event": 1,
                    "perform_action1": 1,
                    "perform_action_a": 1,
                    "perform_action_c": 1,
                    "perform_another_action": 1,
                    "perform_custom_operation1": 1,
                    "perform_extra_action": 1,
                    "perform_function1": 1,
                    "perform_operation": 1,
                    "perform_special_operation": 1
                },
                "FUNC_0800376e": {
                    "execute_if_valid_function": 1
                },
                "FUN_080026ce": {
                    "check_and_execute_callbacks": 2,
                    "execute_callbacks": 1,
                    "execute_callbacks_and_functions": 2,
                    "execute_enabled_callbacks": 1,
                    "execute_enabled_operations": 1,
                    "execute_operations": 2,
                    "execute_valid_operations": 1,
                    "process_callbacks": 1,
                    "process_flag_checks": 1,
                    "process_flags": 11,
                    "process_function": 3,
                    "process_input": 2,
                    "process_parameter": 1,
                    "process_parameters": 2
                },
                "execute_callback_if_enabled_08003754": {
                    "execute_callback": 6,
                    "execute_callback_if_enabled": 15,
                    "execute_enabled_callback": 5
                },
                "execute_if_valid_function_0800376e": {
                    "execute_function": 1,
                    "execute_if_valid_function": 8,
                    "execute_valid_function": 16
                },
                "iVar1": {
                    "current_flag": 3,
                    "current_item": 1,
                    "current_value": 2,
                    "data": 1,
                    "data_value": 1,
                    "func_value": 1,
                    "function_data_value": 1,
                    "operation": 1,
                    "temp_var1": 1,
                    "value": 15,
                    "var1": 2
                },
                "param_1": {
                    "callback_data": 1,
                    "data": 1,
                    "flag_array": 1,
                    "flags": 11,
                    "func_data": 1,
                    "function_data": 2,
                    "input": 1,
                    "input_array": 3,
                    "operation_data": 3,
                    "param": 2,
                    "param_list": 1,
                    "param_ptr": 1,
                    "params": 2
                }
            },
            "called": [
                "FUN_0800376e",
                "FUN_080026cc",
                "FUN_0800293e",
                "FUN_08003754",
                "FUN_080026c8",
                "FUN_0800293c",
                "FUN_080026ca"
            ],
            "calling": [
                "FUN_0800377c"
            ],
            "code": "\nvoid process_flags_080026ce(int *flags)\n\n{\n  int value;\n  \n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 2) != 0) && ((*(uint *)(value + 0xc) & 2) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffd;\n    *(undefined *)(flags + 6) = 1;\n    if ((*(uint *)(*flags + 0x18) & 3) == 0) {\n      execute_callback_if_enabled();\n      FUNC_080026ca(flags);\n    }\n    else {\n      FUNC_080026c8();\n    }\n    *(undefined *)(flags + 6) = 0;\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 4) != 0) && ((*(uint *)(value + 0xc) & 4) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffb;\n    *(undefined *)(flags + 6) = 2;\n    if ((*(uint *)(*flags + 0x18) & 0x300) == 0) {\n      execute_callback_if_enabled(flags);\n      FUNC_080026ca(flags);\n    }\n    else {\n      FUNC_080026c8(flags);\n    }\n    *(undefined *)(flags + 6) = 0;\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 8) != 0) && ((*(uint *)(value + 0xc) & 8) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffff7;\n    *(undefined *)(flags + 6) = 4;\n    if ((*(uint *)(*flags + 0x1c) & 3) == 0) {\n      execute_callback_if_enabled(flags);\n      FUNC_080026ca(flags);\n    }\n    else {\n      FUNC_080026c8(flags);\n    }\n    *(undefined *)(flags + 6) = 0;\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 0x10) != 0) && ((*(uint *)(value + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffef;\n    *(undefined *)(flags + 6) = 8;\n    if ((*(uint *)(*flags + 0x1c) & 0x300) == 0) {\n      execute_callback_if_enabled(flags);\n      FUNC_080026ca(flags);\n    }\n    else {\n      FUNC_080026c8(flags);\n    }\n    *(undefined *)(flags + 6) = 0;\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 1) != 0) && ((*(uint *)(value + 0xc) & 1) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffe;\n    execute_valid_function(flags);\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 0x80) != 0) && ((*(uint *)(value + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffff7f;\n    FUNC_0800293e(flags);\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 0x40) != 0) && ((*(uint *)(value + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffbf;\n    FUNC_080026cc(flags);\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 0x20) != 0) && ((*(uint *)(value + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffdf;\n    FUNC_0800293c(flags);\n  }\n  return;\n}\n\n",
            "current_name": "process_flags_080026ce",
            "entrypoint": "0x080026ce",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080026ce": "process_flags_080026ce",
                "execute_callback_if_enabled_08003754": "execute_callback_if_enabled",
                "execute_if_valid_function_0800376e": "execute_valid_function",
                "iVar1": "value",
                "param_1": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002848": {
            "additional_data": {
                "FUN_08002848": {
                    "bitwise_operation": 1,
                    "set_bit_value": 2,
                    "update_bit": 5,
                    "update_bit_at_position": 2,
                    "update_bit_value": 4,
                    "update_bitfield": 1,
                    "update_bitmask": 1,
                    "update_bits": 9,
                    "update_bitwise_or_shift": 1,
                    "update_bitwise_value": 5
                },
                "param_1": {
                    "address": 1,
                    "base_address": 23,
                    "bitfield": 1,
                    "data": 3,
                    "data_address": 1,
                    "input_array": 1,
                    "memory_address": 1
                },
                "param_2": {
                    "bit_index": 2,
                    "bit_offset": 1,
                    "bit_position": 27,
                    "position": 1
                },
                "param_3": {
                    "bit_value": 15,
                    "data_to_insert": 1,
                    "new_value": 11,
                    "value": 3,
                    "value_to_set": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002864"
            ],
            "code": "\nvoid update_bitwise_or_shift_08002848(int base_address,uint bit_position,int bit_value)\n\n{\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & ~(1 << (bit_position & 0xff));\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) | bit_value << (bit_position & 0xff);\n  return;\n}\n\n",
            "current_name": "update_bitwise_or_shift_08002848",
            "entrypoint": "0x08002848",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002848": "update_bitwise_or_shift_08002848",
                "param_1": "base_address",
                "param_2": "bit_position",
                "param_3": "bit_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002864": {
            "additional_data": {
                "0x40010000": {
                    "constant1": 1,
                    "special_case_1": 1,
                    "special_value_1": 1,
                    "specific_address_1": 1
                },
                "0x40010400": {
                    "constant2": 1,
                    "special_case_2": 1,
                    "special_value_2": 1,
                    "specific_address_2": 1
                },
                "FUN_08002864": {
                    "update_and_check_bits": 1,
                    "update_and_check_bitwise": 1,
                    "update_and_check_conditions": 1,
                    "update_and_check_flags": 7,
                    "update_and_check_status": 1,
                    "update_and_check_values": 1,
                    "update_and_toggle_bits": 1,
                    "update_and_validate": 1,
                    "update_bits": 1,
                    "update_bitwise_and_clear_flags": 1,
                    "update_bitwise_flags": 1,
                    "update_bitwise_operations": 2,
                    "update_bitwise_shift": 3,
                    "update_config": 1,
                    "update_data": 1,
                    "update_flags": 2,
                    "update_function": 1,
                    "update_parameters": 1,
                    "update_permissions": 1,
                    "update_shift_and_set_bit": 1,
                    "update_values": 1
                },
                "bVar1": {
                    "is_flag_set": 1,
                    "is_pointer_equal": 1,
                    "is_pointer_special": 1,
                    "is_special": 2,
                    "is_special_addr": 1,
                    "is_special_address": 2,
                    "is_special_case": 7,
                    "is_special_location": 1,
                    "is_special_permission": 1,
                    "is_special_ptr": 1,
                    "is_special_value": 5,
                    "is_specific_address": 1,
                    "is_valid": 1,
                    "is_valid_address": 5
                },
                "param_1": {
                    "array_pointer": 1,
                    "bit_array": 3,
                    "bits": 2,
                    "bits_pointer": 1,
                    "bitwise_data": 1,
                    "config_ptr": 1,
                    "data": 5,
                    "data_array": 1,
                    "data_pointer": 3,
                    "data_ptr": 1,
                    "flags": 2,
                    "input": 1,
                    "input_array": 2,
                    "input_data": 1,
                    "input_parameters": 1,
                    "input_ptr": 1,
                    "parameter_array": 1,
                    "permissions": 1,
                    "ptr_array": 1,
                    "values": 1
                },
                "param_2": {
                    "bit_mask": 1,
                    "bitwise_value": 1,
                    "flag": 1,
                    "flag_value": 3,
                    "param": 1,
                    "param_value": 1,
                    "permission_value": 1,
                    "status": 2,
                    "value": 20
                },
                "puVar2": {
                    "address_ptr": 1,
                    "array": 1,
                    "array_ptr": 1,
                    "bits_ptr_temp": 1,
                    "current_address": 1,
                    "current_bits": 1,
                    "current_permissions": 1,
                    "current_ptr": 2,
                    "data": 1,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "flag_ptr": 1,
                    "pointer": 7,
                    "pointer_value": 1,
                    "ptr": 3,
                    "ptr_bit_array": 1,
                    "ptr_to_array": 1,
                    "ptr_value": 2,
                    "temp_data_pointer": 1
                },
                "update_bitwise_or_shift_08002848": {
                    "update_bits": 1,
                    "update_bits_shift": 1,
                    "update_bitwise_or_shift": 2,
                    "update_bitwise_shift": 2,
                    "update_flags_with_shift": 1
                }
            },
            "called": [
                "FUN_08002848"
            ],
            "calling": [
                "FUN_08003414"
            ],
            "code": "\nundefined4 update_and_check_flags_08002864(uint **data,undefined4 value)\n\n{\n  bool is_special_case;\n  uint *pointer;\n  \n  update_bitwise_or_shift(*data,value,0);\n  pointer = *data;\n  if (pointer == (uint *)0x40010000) {\n    is_special_case = true;\n  }\n  else if (pointer == (uint *)0x40010400) {\n    is_special_case = true;\n  }\n  else {\n    is_special_case = false;\n  }\n  if (((is_special_case) && ((pointer[8] & 0x1111) == 0)) && ((pointer[8] & 0x444) == 0)) {\n    pointer[0x11] = pointer[0x11] & 0xffff7fff;\n  }\n  pointer = *data;\n  if (((pointer[8] & 0x1111) == 0) && ((pointer[8] & 0x444) == 0)) {\n    *pointer = *pointer & 0xfffffffe;\n  }\n  *(undefined *)((int)data + 0x39) = 1;\n  return 0;\n}\n\n",
            "current_name": "update_and_check_flags_08002864",
            "entrypoint": "0x08002864",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002864": "update_and_check_flags_08002864",
                "bVar1": "is_special_case",
                "param_1": "data",
                "param_2": "value",
                "puVar2": "pointer",
                "update_bitwise_or_shift_08002848": "update_bitwise_or_shift"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080028d4": {
            "additional_data": {
                "FUN_080028d4": {
                    "apply_and_shift_bits": 1,
                    "apply_bitmask_and_shift": 1,
                    "set_bit_value": 1,
                    "set_bits_in_memory": 1,
                    "update_bit_at_position": 1,
                    "update_bit_value": 2,
                    "update_bitfield": 1,
                    "update_bitmask": 1,
                    "update_bits": 3,
                    "update_bitwise": 1,
                    "update_bitwise_operation": 1,
                    "update_bitwise_operators": 1,
                    "update_bitwise_value": 6,
                    "update_data": 1,
                    "update_flags": 1,
                    "update_parameter_value": 1,
                    "update_parameters": 1,
                    "update_register": 1,
                    "update_register_bits": 1,
                    "update_register_value": 1,
                    "update_value": 1,
                    "update_value_with_bit_mask": 1,
                    "write_bit_to_memory": 1
                },
                "param_1": {
                    "base": 1,
                    "base_address": 22,
                    "data": 1,
                    "data_address": 3,
                    "memory_addr": 1,
                    "register": 1,
                    "register_address": 1,
                    "register_base": 1
                },
                "param_2": {
                    "bit_offset": 11,
                    "bit_position": 19,
                    "position": 1
                },
                "param_3": {
                    "bit_value": 10,
                    "bits_to_apply": 1,
                    "new_value": 16,
                    "value": 3,
                    "value_to_set": 1
                },
                "param_4": {
                    "bit_mask": 1
                },
                "param_5": {
                    "bit_shift": 1
                },
                "param_6": {
                    "updated_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080028f0"
            ],
            "code": "\nvoid update_bitwise_value_080028d4(int base_address,uint bit_position,int new_value)\n\n{\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & ~(4 << (bit_position & 0xff));\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) | new_value << (bit_position & 0xff);\n  return;\n}\n\n",
            "current_name": "update_bitwise_value_080028d4",
            "entrypoint": "0x080028d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080028d4": "update_bitwise_value_080028d4",
                "param_1": "base_address",
                "param_2": "bit_position",
                "param_3": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080028f0": {
            "additional_data": {
                "DAT_080028d4": {
                    "bitwise_update_function": 1
                },
                "FUN_080028f0": {
                    "clear_bits_if_conditions_met": 1,
                    "update_and_check_bitwise_values": 1,
                    "update_and_check_values": 1,
                    "update_and_validate": 1,
                    "update_bitwise_information": 1,
                    "update_bitwise_value": 11,
                    "update_bitwise_values": 11,
                    "update_flags": 1,
                    "update_value_and_bits": 1,
                    "update_values": 2
                },
                "param_1": {
                    "bitwise_array": 3,
                    "bitwise_data": 2,
                    "bitwise_values": 5,
                    "data": 2,
                    "data_array": 2,
                    "data_ptr": 1,
                    "input": 2,
                    "input_array": 2,
                    "input_data": 5,
                    "pointer_array": 1,
                    "pointer_to_values": 1,
                    "value_array": 1,
                    "value_array_ptr": 1,
                    "value_ptr": 1,
                    "values": 2
                },
                "param_2": {
                    "bit_mask": 1,
                    "bit_value": 3,
                    "bitwise_mask": 1,
                    "bitwise_param": 2,
                    "bitwise_value": 3,
                    "flag": 1,
                    "new_value": 2,
                    "param_value": 1,
                    "update_value": 1,
                    "value": 15,
                    "value_to_update": 1
                },
                "puVar1": {
                    "array_pointer": 1,
                    "array_ptr": 2,
                    "bitwise_value": 2,
                    "current_array": 1,
                    "current_data": 2,
                    "current_pointer_value": 1,
                    "current_ptr": 1,
                    "current_value": 3,
                    "data_pointer": 2,
                    "data_ptr": 5,
                    "local_ptr": 1,
                    "ptr": 3,
                    "ptr_values": 1,
                    "updated_data": 1,
                    "updated_values": 1,
                    "updated_values_ptr": 1,
                    "value": 1,
                    "value_ptr": 2
                },
                "update_bitwise_value_080028d4": {
                    "update_bitwise_value": 1
                }
            },
            "called": [
                "FUN_080028d4"
            ],
            "calling": [
                "FUN_08003414"
            ],
            "code": "\nundefined4 update_and_check_bitwise_values_080028f0(uint **bitwise_values,undefined4 value)\n\n{\n  uint *data_ptr;\n  \n  update_bitwise_value(*bitwise_values,value,0);\n  data_ptr = *bitwise_values;\n  if (((data_ptr[8] & 0x1111) == 0) && ((data_ptr[8] & 0x444) == 0)) {\n    data_ptr[0x11] = data_ptr[0x11] & 0xffff7fff;\n  }\n  data_ptr = *bitwise_values;\n  if (((data_ptr[8] & 0x1111) == 0) && ((data_ptr[8] & 0x444) == 0)) {\n    *data_ptr = *data_ptr & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_and_check_bitwise_values_080028f0",
            "entrypoint": "0x080028f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080028f0": "update_and_check_bitwise_values_080028f0",
                "param_1": "bitwise_values",
                "param_2": "value",
                "puVar1": "data_ptr",
                "update_bitwise_value_080028d4": "update_bitwise_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800293c": {
            "called": [],
            "calling": [
                "FUN_080026ce"
            ],
            "code": "\nvoid FUNC_0800293c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800293c",
            "entrypoint": "0x0800293c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800293c": "FUNC_0800293c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800293e": {
            "called": [],
            "calling": [
                "FUN_080026ce"
            ],
            "code": "\nvoid FUNC_0800293e(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800293e",
            "entrypoint": "0x0800293e",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800293e": "FUNC_0800293e"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002940": {
            "additional_data": {
                "0x14": {
                    "another_flag_address": 1,
                    "flag2_offset": 1,
                    "mask2": 1,
                    "offset2": 2,
                    "other_flags_offset": 1,
                    "value2": 1,
                    "value_index2": 1
                },
                "0x20": {
                    "new_value": 2
                },
                "0x3a": {
                    "byte_index": 1,
                    "offset": 1
                },
                "0xc": {
                    "flag1_offset": 1,
                    "flag_address": 1,
                    "flags_offset": 1,
                    "mask1": 1,
                    "offset1": 2,
                    "value1": 1,
                    "value_index1": 1
                },
                "0xfffffedf": {
                    "bitwise_mask1": 1,
                    "flags_mask": 1,
                    "value1": 1
                },
                "0xfffffffe": {
                    "bitwise_mask2": 1,
                    "other_flags_mask": 1,
                    "value2": 1
                },
                "DAT_": {
                    "dat_": 1
                },
                "FUN_08002940": {
                    "clear_bits_and_set_character_spacing": 1,
                    "clear_bits_and_set_flag": 3,
                    "clear_flags": 7,
                    "clear_flags_and_set_space": 1,
                    "clear_flags_and_set_space_character": 1,
                    "modify_data": 1,
                    "reset_flags": 1,
                    "set_bit_values": 1,
                    "set_flags_and_values": 1,
                    "update_data": 4,
                    "update_flags_and_value": 1,
                    "update_flags_and_values": 2,
                    "update_memory": 1,
                    "update_memory_and_set_flag": 1,
                    "update_parameters": 2,
                    "update_values": 3
                },
                "PTR_": {
                    "ptr_": 1
                },
                "array": {
                    "array": 1
                },
                "int": {
                    "flags_ptr": 1,
                    "integer": 1
                },
                "param_1": {
                    "array": 2,
                    "array_ptr": 1,
                    "data": 5,
                    "data_pointer": 2,
                    "data_ptr": 3,
                    "flags": 3,
                    "flags_ptr": 2,
                    "input_array": 3,
                    "input_data": 1,
                    "input_pointer": 2,
                    "memory_address": 1,
                    "memory_pointer": 1,
                    "p_values": 1,
                    "parameters": 2,
                    "pointer": 1,
                    "ptr": 1
                },
                "undefined": {
                    "byte": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ffc"
            ],
            "code": "\nvoid clear_flags_and_set_space_character_08002940(integer *data)\n\n{\n  *(uinteger *)(*data + 0xc) = *(uinteger *)(*data + 0xc) & 0xfffffedf;\n  *(uinteger *)(*data + 0x14) = *(uinteger *)(*data + 0x14) & 0xfffffffe;\n  *(byte *)((integer)data + 0x3a) = 0x20;\n  return;\n}\n\n",
            "current_name": "clear_flags_and_set_space_character_08002940",
            "entrypoint": "0x08002940",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002940": "clear_flags_and_set_space_character_08002940",
                "int": "integer",
                "param_1": "data",
                "undefined": "byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800295c": {
            "additional_data": {
                "0x1000": {
                    "special_val": 1
                },
                "0x26": {
                    "iterations_remaining_offset": 1
                },
                "0x39": {
                    "special_char_offset": 1
                },
                "FUN_0800295c": {
                    "decode_data": 1,
                    "extract_and_decrement": 1,
                    "extract_data": 1,
                    "parse_and_modify": 1,
                    "parse_data": 1,
                    "parse_input": 1,
                    "parse_param": 1,
                    "process_data": 21,
                    "process_input": 1,
                    "process_param": 1
                },
                "param_1": {
                    "data": 17,
                    "data_array": 1,
                    "data_ptr": 6,
                    "input": 1,
                    "input_array": 2,
                    "input_data": 2,
                    "param_array": 2
                },
                "pbVar2": {
                    "byte_pointer": 7,
                    "byte_ptr": 18,
                    "data_ptr": 1,
                    "ptr_byte": 1,
                    "ptr_data_byte": 1
                },
                "sVar1": {
                    "count": 10,
                    "counter": 6,
                    "num_iterations": 1,
                    "remaining_count": 5,
                    "remaining_iterations": 5,
                    "remaining_trials": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ffc"
            ],
            "code": "\nundefined4 process_data_0800295c(int *data)\n\n{\n  short count;\n  byte *byte_ptr;\n  \n  if (*(char *)((int)data + 0x39) != '!') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    *(uint *)(*data + 4) = *(ushort *)data[8] & 0x1ff;\n    if (data[4] == 0) {\n      data[8] = data[8] + 2;\n    }\n    else {\n      data[8] = data[8] + 1;\n    }\n  }\n  else {\n    byte_ptr = (byte *)data[8];\n    data[8] = (int)(byte_ptr + 1);\n    *(uint *)(*data + 4) = (uint)*byte_ptr;\n  }\n  count = *(short *)((int)data + 0x26) + -1;\n  *(short *)((int)data + 0x26) = count;\n  if (count == 0) {\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffff7f;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_0800295c",
            "entrypoint": "0x0800295c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800295c": "process_data_0800295c",
                "param_1": "data",
                "pbVar2": "byte_ptr",
                "sVar1": "count"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080029c8": {
            "additional_data": {
                "FUN_080029c8": {
                    "calculate_and_set_values": 2,
                    "calculate_and_update_value": 1,
                    "calculate_and_update_values": 4,
                    "calculate_data": 1,
                    "calculate_data_value": 5,
                    "calculate_modified_value": 1,
                    "calculate_new_value": 3,
                    "calculate_shifted_value": 1,
                    "calculate_value": 3,
                    "process_data": 1,
                    "update_config_values": 1,
                    "update_data_values": 3,
                    "update_value": 1,
                    "update_values": 4
                },
                "get_data_value_shifted_080025ec": {
                    "get_data_value_shifted": 3
                },
                "get_shifted_data_value_0800260c": {
                    "get_shifted_data_value": 3
                },
                "iVar1": {
                    "data_value1": 7,
                    "data_value_1": 1,
                    "data_value_shifted1": 1,
                    "first_value": 1,
                    "shifted_value1": 2,
                    "value1": 19
                },
                "iVar10": {
                    "address": 1,
                    "base_address": 6,
                    "config_address": 1,
                    "data_pointer": 1,
                    "data_value": 1,
                    "data_value10": 4,
                    "data_value_10": 1,
                    "data_value_pointer": 1,
                    "data_value_ptr": 1,
                    "initial_value": 1,
                    "param1_value5": 1,
                    "ptr": 1,
                    "ptr_value": 1,
                    "value10": 10
                },
                "iVar2": {
                    "data_value2": 7,
                    "data_value_2": 1,
                    "data_value_shifted2": 1,
                    "second_value": 1,
                    "shifted_value2": 2,
                    "value2": 19
                },
                "iVar3": {
                    "data_value3": 7,
                    "data_value_3": 1,
                    "data_value_shifted3": 1,
                    "shifted_value3": 2,
                    "third_value": 1,
                    "value3": 19
                },
                "iVar4": {
                    "data_value4": 7,
                    "data_value_4": 1,
                    "data_value_shifted4": 1,
                    "fourth_value": 1,
                    "shifted_value4": 2,
                    "value4": 19
                },
                "iVar5": {
                    "data_value5": 7,
                    "data_value_5": 1,
                    "data_value_shifted5": 1,
                    "fifth_value": 1,
                    "shifted_value5": 2,
                    "value5": 19
                },
                "iVar6": {
                    "data_value6": 7,
                    "data_value_6": 1,
                    "data_value_shifted6": 1,
                    "param1_value": 1,
                    "param1_value1": 2,
                    "sixth_value": 1,
                    "value6": 18
                },
                "iVar7": {
                    "data_value7": 7,
                    "data_value_7": 1,
                    "data_value_shifted7": 1,
                    "param1_value": 1,
                    "param1_value2": 2,
                    "seventh_value": 1,
                    "value7": 18
                },
                "iVar8": {
                    "data_value8": 7,
                    "data_value_8": 1,
                    "data_value_shifted8": 1,
                    "eighth_value": 1,
                    "param1_value": 1,
                    "param1_value3": 2,
                    "value8": 18
                },
                "iVar9": {
                    "data_value9": 7,
                    "data_value_9": 1,
                    "data_value_shifted9": 1,
                    "ninth_value": 1,
                    "param1_value": 1,
                    "param1_value4": 2,
                    "value9": 18
                },
                "param_1": {
                    "config_values": 1,
                    "data": 2,
                    "data_values": 6,
                    "input": 2,
                    "input_array": 6,
                    "input_data": 1,
                    "input_params": 3,
                    "input_values": 2,
                    "parameters": 8
                }
            },
            "called": [
                "FUN_080025ec",
                "FUN_0800260c"
            ],
            "calling": [
                "FUN_08002d72"
            ],
            "code": "\nvoid calculate_data_value_080029c8(int *parameters)\n\n{\n  int value1;\n  int value2;\n  int value3;\n  int value4;\n  int value5;\n  int value6;\n  int value7;\n  int value8;\n  int value9;\n  int value10;\n  \n  *(uint *)(*parameters + 0x10) = *(uint *)(*parameters + 0x10) & 0xffffcfff | parameters[3];\n  *(uint *)(*parameters + 0xc) =\n       *(uint *)(*parameters + 0xc) & 0xffff69f3 | parameters[2] | parameters[4] | parameters[5] | parameters[7];\n  *(uint *)(*parameters + 0x14) = *(uint *)(*parameters + 0x14) & 0xfffffcff | parameters[6];\n  if (parameters[7] == 0x8000) {\n    value10 = *parameters;\n    if ((value10 != 0x40011000) && (value10 != 0x40011400)) {\n      value1 = get_data_value_shifted();\n      value6 = parameters[1];\n      value2 = get_data_value_shifted();\n      value7 = parameters[1];\n      value3 = get_data_value_shifted();\n      value8 = parameters[1];\n      value4 = get_data_value_shifted();\n      value9 = parameters[1];\n      value5 = get_data_value_shifted();\n      *(uint *)(value10 + 8) =\n           ((uint)((int)((ulonglong)\n                         (((uint)(value4 * 0x19) / (uint)(value9 << 1) +\n                          (int)(((ulonglong)(uint)(value5 * 0x19) /\n                                (ulonglong)(uint)(parameters[1] << 1)) / 100) * -100) * 8 + 0x32) *\n                         0x51eb851f >> 0x20) << 0x18) >> 0x1d) +\n           ((((uint)(value2 * 0x19) / (uint)(value7 << 1) +\n             (int)(((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(value8 << 1)) / 100) * -100)\n             * 8 + 0x32) / 100 & 0xf8) * 2 +\n           (int)(((ulonglong)(uint)(value1 * 0x19) / (ulonglong)(uint)(value6 << 1)) / 100) * 0x10;\n      return;\n    }\n    value1 = get_shifted_data_value();\n    value6 = parameters[1];\n    value2 = get_shifted_data_value();\n    value7 = parameters[1];\n    value3 = get_shifted_data_value();\n    value8 = parameters[1];\n    value4 = get_shifted_data_value();\n    value9 = parameters[1];\n    value5 = get_shifted_data_value();\n    *(uint *)(value10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(value4 * 0x19) / (uint)(value9 << 1) +\n                        (int)(((ulonglong)(uint)(value5 * 0x19) / (ulonglong)(uint)(parameters[1] << 1))\n                             / 100) * -100) * 8 + 0x32) * 0x51eb851f >> 0x20) << 0x18) >> 0x1d) +\n         ((((uint)(value2 * 0x19) / (uint)(value7 << 1) +\n           (int)(((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(value8 << 1)) / 100) * -100) *\n           8 + 0x32) / 100 & 0xf8) * 2 +\n         (int)(((ulonglong)(uint)(value1 * 0x19) / (ulonglong)(uint)(value6 << 1)) / 100) * 0x10;\n    return;\n  }\n  value10 = *parameters;\n  if ((value10 != 0x40011000) && (value10 != 0x40011400)) {\n    value1 = get_data_value_shifted();\n    value6 = parameters[1];\n    value2 = get_data_value_shifted();\n    value7 = parameters[1];\n    value3 = get_data_value_shifted();\n    value8 = parameters[1];\n    value4 = get_data_value_shifted();\n    value9 = parameters[1];\n    value5 = get_data_value_shifted();\n    *(uint *)(value10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(value4 * 0x19) / (uint)(value9 << 2) +\n                        (int)(((ulonglong)(uint)(value5 * 0x19) / (ulonglong)(uint)(parameters[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(value2 * 0x19) / (uint)(value7 << 2) +\n           (int)(((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(value8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(value1 * 0x19) / (ulonglong)(uint)(value6 << 2)) / 100) * 0x10;\n    return;\n  }\n  value1 = get_shifted_data_value();\n  value6 = parameters[1];\n  value2 = get_shifted_data_value();\n  value7 = parameters[1];\n  value3 = get_shifted_data_value();\n  value8 = parameters[1];\n  value4 = get_shifted_data_value();\n  value9 = parameters[1];\n  value5 = get_shifted_data_value();\n  *(uint *)(value10 + 8) =\n       ((uint)((int)((ulonglong)\n                     (((uint)(value4 * 0x19) / (uint)(value9 << 2) +\n                      (int)(((ulonglong)(uint)(value5 * 0x19) / (ulonglong)(uint)(parameters[1] << 2)) /\n                           100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n       ((((uint)(value2 * 0x19) / (uint)(value7 << 2) +\n         (int)(((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(value8 << 2)) / 100) * -100) *\n         0x10 + 0x32) / 100 & 0xf0) +\n       (int)(((ulonglong)(uint)(value1 * 0x19) / (ulonglong)(uint)(value6 << 2)) / 100) * 0x10;\n  return;\n}\n\n",
            "current_name": "calculate_data_value_080029c8",
            "entrypoint": "0x080029c8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080029c8": "calculate_data_value_080029c8",
                "get_data_value_shifted_080025ec": "get_data_value_shifted",
                "get_shifted_data_value_0800260c": "get_shifted_data_value",
                "iVar1": "value1",
                "iVar10": "value10",
                "iVar2": "value2",
                "iVar3": "value3",
                "iVar4": "value4",
                "iVar5": "value5",
                "iVar6": "value6",
                "iVar7": "value7",
                "iVar8": "value8",
                "iVar9": "value9",
                "param_1": "parameters"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002d0c": {
            "additional_data": {
                "FUN_08002d0c": {
                    "check_and_update_data": 2,
                    "check_condition": 1,
                    "check_condition_and_modify": 2,
                    "check_condition_and_update": 2,
                    "check_conditions_and_update": 1,
                    "check_conditions_and_update_data": 1,
                    "check_data_integrity": 1,
                    "check_data_validity": 2,
                    "check_parameters": 6,
                    "check_params": 1,
                    "check_params_and_modify": 1,
                    "check_permission": 1,
                    "check_permissions": 2,
                    "reverse_binary_param": 1,
                    "reverse_check": 1,
                    "reverse_data_check": 1,
                    "validate_param": 1,
                    "validate_parameters": 2,
                    "verify_permission": 2
                },
                "dataValue": {
                    "get_data_value": 1
                },
                "get_data_value_08000e30": {
                    "get_data_value": 3
                },
                "iVar1": {
                    "calculated_difference": 1,
                    "data_difference": 1,
                    "data_value": 23,
                    "data_var": 1,
                    "delta": 1,
                    "get_data_result": 1
                },
                "param_1": {
                    "array_ptr": 2,
                    "binary_data": 1,
                    "data": 2,
                    "data_pointer": 5,
                    "data_ptr": 7,
                    "input_array": 1,
                    "input_data": 3,
                    "param_array": 2,
                    "parameter_array": 3,
                    "permission": 1,
                    "permission_data": 1,
                    "permissions": 2,
                    "pointer_array": 1
                },
                "param_2": {
                    "bit_mask": 1,
                    "bitmask": 1,
                    "check_value": 1,
                    "checked_value": 1,
                    "condition": 1,
                    "condition_mask": 1,
                    "flag": 4,
                    "flag1": 1,
                    "flag_1": 2,
                    "flags": 1,
                    "input_flag": 2,
                    "mask": 6,
                    "mask_value": 1,
                    "required": 1,
                    "required_permission": 1,
                    "required_permissions": 2,
                    "target_mask": 1,
                    "value": 3
                },
                "param_3": {
                    "check_condition": 1,
                    "condition": 7,
                    "desired_flag": 1,
                    "expected_flag": 1,
                    "expected_result": 9,
                    "flag": 5,
                    "flag2": 1,
                    "flag_2": 2,
                    "is_granted": 1,
                    "is_permission_check_enabled": 1,
                    "is_true": 2
                },
                "param_4": {
                    "base_value": 1,
                    "compare_value": 1,
                    "compared_value": 1,
                    "comparison": 1,
                    "comparison_value": 5,
                    "current_permission": 1,
                    "current_value": 1,
                    "data": 1,
                    "data_start": 1,
                    "data_value": 6,
                    "reference_value": 4,
                    "start_value": 1,
                    "value": 5,
                    "value1": 1,
                    "value_1": 1
                },
                "param_5": {
                    "limit": 1,
                    "max_difference": 17,
                    "max_distance": 1,
                    "max_value": 1,
                    "maximum_difference": 1,
                    "range": 1,
                    "range_limit": 1,
                    "threshold": 5,
                    "upper_limit": 1,
                    "value2": 1,
                    "value_2": 1
                },
                "return": {
                    "result": 1
                }
            },
            "called": [
                "FUN_08000e30"
            ],
            "calling": [
                "FUN_08002dd0"
            ],
            "code": "\nundefined4 check_parameters_08002d0c(uint **data_ptr,uint mask,uint expected_result,int data_value,uint max_difference)\n\n{\n  int data_value;\n  \n  do {\n    if (((mask & ~**data_ptr) == 0) != expected_result) {\n      result 0;\n    }\n  } while ((max_difference == 0xffffffff) ||\n          ((max_difference != 0 && (data_value = get_data_value(), (uint)(data_value - data_value) <= max_difference))));\n  (*data_ptr)[3] = (*data_ptr)[3] & 0xfffffe5f;\n  (*data_ptr)[5] = (*data_ptr)[5] & 0xfffffffe;\n  *(undefined *)((int)data_ptr + 0x39) = 0x20;\n  *(undefined *)((int)data_ptr + 0x3a) = 0x20;\n  *(undefined *)(data_ptr + 0xe) = 0;\n  result 3;\n}\n\n",
            "current_name": "check_parameters_08002d0c",
            "entrypoint": "0x08002d0c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002d0c": "check_parameters_08002d0c",
                "get_data_value_08000e30": "get_data_value",
                "iVar1": "data_value",
                "param_1": "data_ptr",
                "param_2": "mask",
                "param_3": "expected_result",
                "param_4": "data_value",
                "param_5": "max_difference",
                "return": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002d70": {
            "called": [],
            "calling": [
                "FUN_08002d72"
            ],
            "code": "\nvoid FUNC_08002d70(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08002d70",
            "entrypoint": "0x08002d70",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08002d70": "FUNC_08002d70"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08002d72": {
            "additional_data": {
                "0": {
                    "result_success": 1
                },
                "0x0": {
                    "null": 2
                },
                "0x10": {
                    "value_2": 1
                },
                "0x14": {
                    "value_3": 1
                },
                "0x20": {
                    "marker_b": 1,
                    "some_constant": 1
                },
                "0x2000": {
                    "flag_d": 1
                },
                "0x24": {
                    "marker_a": 1,
                    "valid_flag": 1
                },
                "0x39": {
                    "is_valid": 1
                },
                "0xc": {
                    "value_1": 1
                },
                "0xf": {
                    "some_other_value": 1
                },
                "0xffffb7ff": {
                    "flag_b": 1
                },
                "0xffffdfff": {
                    "flag_a": 1
                },
                "0xffffffd5": {
                    "flag_c": 1
                },
                "1": {
                    "result_failure": 1
                },
                "FUNC_08002d70": {
                    "another_function": 1,
                    "do_something": 2,
                    "execute_function": 3,
                    "initialize": 2,
                    "initialize_data": 1,
                    "initialize_function": 2,
                    "log_validation_error": 1,
                    "perform_action": 1,
                    "perform_additional_action": 1,
                    "perform_extra_setup": 1,
                    "perform_initialization_operations": 1,
                    "perform_operation": 1,
                    "process_data": 1,
                    "update_function": 1
                },
                "FUN_08002d72": {
                    "check_and_update_data": 3,
                    "extract_data": 1,
                    "initialize_data": 10,
                    "initialize_data_structure": 3,
                    "process_data": 8,
                    "reset_data_values": 1,
                    "update_data": 1,
                    "update_data_values": 1,
                    "validate_and_modify_data": 1,
                    "validate_and_update_params": 1,
                    "validate_param_ptr": 1
                },
                "calculate_data_value_080029c8": {
                    "calculate_data": 2,
                    "calculate_data_value": 21,
                    "calculate_value": 1
                },
                "char_0x39": {
                    "flag_variable": 1
                },
                "param_1": {
                    "data": 8,
                    "data_array": 6,
                    "data_pointer": 1,
                    "data_ptr": 9,
                    "data_struct": 1,
                    "data_structure": 2,
                    "data_structure_ptr": 1,
                    "input_data": 1,
                    "param_list": 1,
                    "param_ptr": 1
                },
                "uint_0x10": {
                    "value_2": 1
                },
                "uint_0x14": {
                    "value_3": 1
                },
                "uint_0x2000": {
                    "bitmask_value": 1
                },
                "uint_0xc": {
                    "value_1": 1
                }
            },
            "called": [
                "FUN_08002d70",
                "FUN_080029c8"
            ],
            "calling": [
                "FUN_08003978"
            ],
            "code": "\nundefined4 initialize_data_structure_08002d72(int *data_ptr)\n\n{\n  if (data_ptr != (int *)0x0) {\n    if (*(char *)((int)data_ptr + 0x39) == '\\0') {\n      *(undefined *)(data_ptr + 0xe) = 0;\n      FUNC_08002d70();\n    }\n    *(undefined *)((int)data_ptr + 0x39) = 0x24;\n    *(uint *)(*data_ptr + 0xc) = *(uint *)(*data_ptr + 0xc) & 0xffffdfff;\n    calculate_data_value(data_ptr);\n    *(uint *)(*data_ptr + 0x10) = *(uint *)(*data_ptr + 0x10) & 0xffffb7ff;\n    *(uint *)(*data_ptr + 0x14) = *(uint *)(*data_ptr + 0x14) & 0xffffffd5;\n    *(uint *)(*data_ptr + 0xc) = *(uint *)(*data_ptr + 0xc) | 0x2000;\n    data_ptr[0xf] = 0;\n    *(undefined *)((int)data_ptr + 0x39) = 0x20;\n    *(undefined *)((int)data_ptr + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_data_structure_08002d72",
            "entrypoint": "0x08002d72",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002d72": "initialize_data_structure_08002d72",
                "calculate_data_value_080029c8": "calculate_data_value",
                "param_1": "data_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002dd0": {
            "additional_data": {
                "FUN_08002dd0": {
                    "decode_data": 1,
                    "process_data": 27,
                    "process_input": 1,
                    "process_input_data": 1,
                    "process_parameters": 1
                },
                "check_parameters_08002d0c": {
                    "check_parameters": 4
                },
                "get_data_value_08000e30": {
                    "get_data_value": 4
                },
                "iVar1": {
                    "check_result": 6,
                    "invalid_check_result": 1,
                    "result": 20,
                    "return_value": 4
                },
                "param_1": {
                    "data": 5,
                    "data_array": 5,
                    "data_buffer": 1,
                    "data_pointer": 2,
                    "data_ptr": 11,
                    "input_array": 4,
                    "input_data": 1,
                    "input_data_ptr": 1,
                    "param1": 1
                },
                "param_2": {
                    "buffer_pointer": 1,
                    "buffer_ptr": 1,
                    "byte_array": 1,
                    "data_array": 3,
                    "data_buffer": 2,
                    "data_values": 2,
                    "input_array": 2,
                    "input_array_ptr": 1,
                    "input_data": 1,
                    "param2": 1,
                    "param_array": 1,
                    "ushort_array": 1,
                    "ushort_ptr": 1,
                    "value_array": 2,
                    "value_ptr": 5,
                    "values": 5,
                    "values_ptr": 1
                },
                "param_3": {
                    "array_length": 2,
                    "array_size": 1,
                    "buffer_size": 4,
                    "byte_array_length": 1,
                    "count": 2,
                    "data_count": 1,
                    "data_len": 1,
                    "data_length": 2,
                    "data_size": 2,
                    "input_length": 2,
                    "length": 2,
                    "num_values": 4,
                    "param3": 1,
                    "value_count": 6
                },
                "param_4": {
                    "additional_param": 2,
                    "config_value": 1,
                    "data": 1,
                    "data_flag": 1,
                    "data_info": 1,
                    "data_size": 1,
                    "data_value": 5,
                    "extra_param": 2,
                    "input_value": 1,
                    "param": 1,
                    "param4": 3,
                    "param_4": 7,
                    "param_value": 1,
                    "result": 2,
                    "unknown_param": 1,
                    "value": 1
                },
                "uVar2": {
                    "result": 5,
                    "return_val": 1,
                    "return_value": 14,
                    "status": 11
                }
            },
            "called": [
                "FUN_08000e30",
                "FUN_08002d0c"
            ],
            "calling": [
                "FUN_08003d18"
            ],
            "code": "\nundefined4 process_input_data_08002dd0(int *data_ptr,ushort *value_ptr,int value_count,undefined4 param_4)\n\n{\n  int result;\n  undefined4 return_value;\n  \n  if (*(char *)((int)data_ptr + 0x39) == ' ') {\n    if (value_ptr == (ushort *)0x0) {\n      return_value = 1;\n    }\n    else if (value_count == 0) {\n      return_value = 1;\n    }\n    else if (*(char *)(data_ptr + 0xe) == '\\x01') {\n      return_value = 2;\n    }\n    else {\n      *(undefined *)(data_ptr + 0xe) = 1;\n      data_ptr[0xf] = 0;\n      *(undefined *)((int)data_ptr + 0x39) = 0x21;\n      return_value = get_data_value();\n      *(short *)(data_ptr + 9) = (short)value_count;\n      *(short *)((int)data_ptr + 0x26) = (short)value_count;\n      while (*(short *)((int)data_ptr + 0x26) != 0) {\n        *(short *)((int)data_ptr + 0x26) = *(short *)((int)data_ptr + 0x26) + -1;\n        if (data_ptr[2] == 0x1000) {\n          result = check_parameters(data_ptr,0x80,0,return_value,param_4);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_ptr + 4) = *value_ptr & 0x1ff;\n          if (data_ptr[4] == 0) {\n            value_ptr = value_ptr + 1;\n          }\n          else {\n            value_ptr = (ushort *)((int)value_ptr + 1);\n          }\n        }\n        else {\n          result = check_parameters(data_ptr,0x80,0,return_value,param_4);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_ptr + 4) = (uint)*(byte *)value_ptr;\n          value_ptr = (ushort *)((int)value_ptr + 1);\n        }\n      }\n      result = check_parameters(data_ptr,0x40,0,return_value,param_4);\n      if (result == 0) {\n        *(undefined *)((int)data_ptr + 0x39) = 0x20;\n        *(undefined *)(data_ptr + 0xe) = 0;\n        return_value = 0;\n      }\n      else {\n        return_value = 3;\n      }\n    }\n  }\n  else {\n    return_value = 2;\n  }\n  return return_value;\n}\n\n",
            "current_name": "process_input_data_08002dd0",
            "entrypoint": "0x08002dd0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002dd0": "process_input_data_08002dd0",
                "check_parameters_08002d0c": "check_parameters",
                "get_data_value_08000e30": "get_data_value",
                "iVar1": "result",
                "param_1": "data_ptr",
                "param_2": "value_ptr",
                "param_3": "value_count",
                "uVar2": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002eb2": {
            "additional_data": {
                "0x21": {
                    "modified_character": 1
                },
                "0x26": {
                    "offset_2": 1
                },
                "0x39": {
                    "offset": 1
                },
                "0xe": {
                    "index": 1
                },
                "FUN_08002eb2": {
                    "check_params_and_update": 1,
                    "extract_and_update_data": 1,
                    "initialize_data": 6,
                    "process_data": 5,
                    "process_input": 1,
                    "process_parameters": 1,
                    "process_params": 2,
                    "set_param_values": 1,
                    "update_configuration": 1,
                    "update_data": 3,
                    "update_param": 1,
                    "update_parameter": 1,
                    "update_parameters": 1,
                    "validate_and_update_data": 1,
                    "validate_and_update_params": 1,
                    "validate_input": 2,
                    "validate_inputs": 1,
                    "validate_parameters": 1
                },
                "char": {
                    "character": 1
                },
                "config": {
                    "config_array": 1
                },
                "data": {
                    "data": 1
                },
                "dataBuffer": {
                    "data": 1
                },
                "dataChar": {
                    "data_character": 1
                },
                "flagChar": {
                    "flag_character": 1
                },
                "input_array": {
                    "input": 1,
                    "input_array": 1
                },
                "int": {
                    "integer": 1
                },
                "param_1": {
                    "array_ptr": 1,
                    "config": 1,
                    "data": 11,
                    "data_array": 2,
                    "data_buffer": 2,
                    "data_ptr": 1,
                    "input_array": 4,
                    "input_data": 1,
                    "param_array": 2,
                    "param_list": 1,
                    "param_values": 1,
                    "parameters": 2,
                    "params": 1,
                    "params_array": 1
                },
                "param_2": {
                    "length": 2,
                    "new_value1": 1,
                    "param2": 1,
                    "size": 1,
                    "value": 1,
                    "value1": 18,
                    "value_1": 7
                },
                "param_3": {
                    "flag": 1,
                    "new_value2": 1,
                    "param3": 1,
                    "size": 1,
                    "value": 2,
                    "value2": 18,
                    "value_2": 7
                },
                "paramsArray": {
                    "params_array": 1
                },
                "short": {
                    "short_value": 1
                },
                "uint": {
                    "unsigned_int": 1
                },
                "undefined": {
                    "undefined_value": 1
                },
                "value1": {
                    "initial_value": 1,
                    "length": 1,
                    "param2_value": 1,
                    "value1": 1
                },
                "value2": {
                    "length": 1,
                    "param3_value": 1,
                    "value2": 1,
                    "width": 1
                },
                "value_1": {
                    "value_1": 1
                },
                "value_2": {
                    "value_2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003f48",
                "FUN_08003eac"
            ],
            "code": "\nundefined_value4 initialize_data_08002eb2(integer *data,integer value1,integer value2)\n\n{\n  if (*(character *)((integer)data + 0x39) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(character *)(data + 0xe) != '\\x01') {\n    data[8] = value1;\n    *(short_value *)(data + 9) = (short_value)value2;\n    *(short_value *)((integer)data + 0x26) = (short_value)value2;\n    data[0xf] = 0;\n    *(undefined_value *)((integer)data + 0x39) = 0x21;\n    *(undefined_value *)(data + 0xe) = 0;\n    *(unsigned_int *)(*data + 0xc) = *(unsigned_int *)(*data + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "current_name": "initialize_data_08002eb2",
            "entrypoint": "0x08002eb2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002eb2": "initialize_data_08002eb2",
                "char": "character",
                "int": "integer",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "short": "short_value",
                "uint": "unsigned_int",
                "undefined": "undefined_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002efa": {
            "additional_data": {
                "0x14": {
                    "offset1": 1
                },
                "0x22": {
                    "space_char": 1
                },
                "0x3a": {
                    "char_index": 1
                },
                "0xc": {
                    "offset2": 1
                },
                "FUN_08002efa": {
                    "initialize_data": 3,
                    "process_data": 3,
                    "process_input": 1,
                    "process_parameters": 1,
                    "process_params": 1,
                    "set_data": 1,
                    "update_config": 1,
                    "update_data": 5,
                    "update_parameters": 2,
                    "update_params": 2,
                    "validate_and_set_parameters": 1,
                    "validate_and_update_data": 1,
                    "validate_input": 8,
                    "validate_inputs": 1
                },
                "char1": {
                    "character": 1
                },
                "char_1": {
                    "character": 1
                },
                "inputArray": {
                    "param_array": 1
                },
                "input_array": {
                    "input": 1
                },
                "int1": {
                    "value": 1
                },
                "param_1": {
                    "array": 1,
                    "config": 1,
                    "data": 12,
                    "data_pointer": 1,
                    "input_array": 9,
                    "parameter_array": 1,
                    "parameters": 4,
                    "params": 1,
                    "params_array": 1
                },
                "param_2": {
                    "num1": 1,
                    "parameter2": 1,
                    "size_of_param_2": 1,
                    "value1": 26,
                    "value_1": 2
                },
                "param_3": {
                    "num2": 1,
                    "parameter3": 1,
                    "size_of_param_3": 1,
                    "value2": 26,
                    "value_2": 2
                },
                "short": {
                    "short_value": 1
                },
                "short1": {
                    "short_value": 1
                },
                "short_1": {
                    "short_value": 1
                },
                "uint1": {
                    "unsigned_value": 1
                },
                "uint_1": {
                    "unsigned_integer": 1
                },
                "undefined4": {
                    "return_type": 1
                },
                "validateInput": {
                    "is_input_valid": 1
                },
                "value1": {
                    "first_value": 1
                },
                "value2": {
                    "second_value": 1
                },
                "value_1": {
                    "length": 1
                },
                "value_2": {
                    "size": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003e54",
                "FUN_08003e18"
            ],
            "code": "\nreturn_type validate_input_08002efa(int *data,int value1,int value2)\n\n{\n  if (*(char *)((int)data + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(data + 0xe) != '\\x01') {\n    data[10] = value1;\n    *(short_value *)(data + 0xb) = (short_value)value2;\n    *(short_value *)((int)data + 0x2e) = (short_value)value2;\n    data[0xf] = 0;\n    *(undefined *)((int)data + 0x3a) = 0x22;\n    *(undefined *)(data + 0xe) = 0;\n    *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) | 1;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x120;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "current_name": "validate_input_08002efa",
            "entrypoint": "0x08002efa",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002efa": "validate_input_08002efa",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "short": "short_value",
                "undefined4": "return_type"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f4c": {
            "additional_data": {
                "0x39": {
                    "constant_value": 1
                },
                "0xc": {
                    "offset": 1
                },
                "0xffffffbf": {
                    "bitmask": 1
                },
                "FUN_08002f4c": {
                    "clear_bit_and_set_character": 1,
                    "clear_bit_and_set_flag": 1,
                    "initialize_and_process_data": 15,
                    "initialize_data_and_process": 1,
                    "initialize_data_processing": 4,
                    "process_data": 4,
                    "set_clear_flag_and_space_character": 1,
                    "update_and_process_data": 1,
                    "update_data": 1,
                    "update_data_and_initialize": 1,
                    "update_flags_and_data": 1
                },
                "initialize_and_process_data_08003f48": {
                    "init_and_process_data": 1,
                    "initialize_and_process_data": 10
                },
                "int": {
                    "integer": 1
                },
                "param_1": {
                    "array_ptr": 1,
                    "data": 8,
                    "data_array": 1,
                    "data_pointer": 8,
                    "data_ptr": 11,
                    "input": 1,
                    "input_array": 1
                },
                "uint": {
                    "unsigned_integer": 1
                }
            },
            "called": [
                "FUN_08003f48"
            ],
            "calling": [
                "FUN_08002ffc"
            ],
            "code": "\nundefined4 initialize_data_and_process_08002f4c(integer *data_ptr)\n\n{\n  *(unsigned_integer *)(*data_ptr + 0xc) = *(unsigned_integer *)(*data_ptr + 0xc) & 0xffffffbf;\n  *(undefined *)((integer)data_ptr + 0x39) = 0x20;\n  initialize_and_process_data();\n  return 0;\n}\n\n",
            "current_name": "initialize_data_and_process_08002f4c",
            "entrypoint": "0x08002f4c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f4c": "initialize_data_and_process_08002f4c",
                "initialize_and_process_data_08003f48": "initialize_and_process_data",
                "int": "integer",
                "param_1": "data_ptr",
                "uint": "unsigned_integer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f66": {
            "additional_data": {
                "FUN_08002f66": {
                    "decode_string": 1,
                    "decode_value": 1,
                    "parse_and_execute_action": 1,
                    "parse_data": 1,
                    "parse_input": 1,
                    "parse_string": 3,
                    "process_binary_data": 3,
                    "process_data": 10,
                    "process_input": 5,
                    "process_input_string": 2,
                    "process_parameter_value": 1,
                    "process_string": 1,
                    "process_string_data": 1
                },
                "execute_function_based_on_value_08003f24": {
                    "execute_next_function": 1,
                    "execute_relevant_function": 1,
                    "execute_specific_function": 1
                },
                "param_1": {
                    "action_data": 1,
                    "binary_data": 2,
                    "data": 11,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input": 2,
                    "input_array": 2,
                    "input_buffer": 1,
                    "input_data": 6,
                    "input_param": 1,
                    "parameter": 1,
                    "string": 1,
                    "string_data": 1
                },
                "pbVar1": {
                    "byte_array": 1,
                    "byte_buffer": 1,
                    "byte_pointer": 10,
                    "byte_ptr": 9,
                    "output_byte": 7,
                    "output_byte_pointer": 1
                },
                "puVar3": {
                    "byte_data_ptr": 1,
                    "byte_element": 1,
                    "byte_pointer": 1,
                    "byte_pointer2": 1,
                    "byte_ptr2": 2,
                    "char_ptr": 1,
                    "output_byte_ptr": 3,
                    "output_data": 1,
                    "output_pointer": 3,
                    "output_ptr": 1,
                    "ptr": 1,
                    "undefined_pointer": 8,
                    "undefined_ptr": 5
                },
                "sVar2": {
                    "count": 2,
                    "counter": 10,
                    "dec_value": 1,
                    "decremented_short_value": 1,
                    "decremented_value": 1,
                    "loop_counter": 1,
                    "remaining_chars": 1,
                    "remaining_count": 2,
                    "remaining_iterations": 6,
                    "remaining_length": 1,
                    "remaining_steps": 1,
                    "short_value": 2,
                    "value": 1
                }
            },
            "called": [
                "FUN_08003f24"
            ],
            "calling": [
                "FUN_08002ffc"
            ],
            "code": "\nundefined4 process_binary_data_08002f66(int *data)\n\n{\n  byte *byte_pointer;\n  short counter;\n  undefined *undefined_pointer;\n  \n  if (*(char *)((int)data + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    if (data[4] == 0) {\n      *(ushort *)data[10] = (ushort)((uint)(*(int *)(*data + 4) << 0x17) >> 0x17);\n      data[10] = data[10] + 2;\n    }\n    else {\n      *(ushort *)data[10] = (ushort)*(undefined4 *)(*data + 4) & 0xff;\n      data[10] = data[10] + 1;\n    }\n  }\n  else if (data[4] == 0) {\n    undefined_pointer = (undefined *)data[10];\n    data[10] = (int)(undefined_pointer + 1);\n    *undefined_pointer = (char)*(undefined4 *)(*data + 4);\n  }\n  else {\n    byte_pointer = (byte *)data[10];\n    data[10] = (int)(byte_pointer + 1);\n    *byte_pointer = (byte)*(undefined4 *)(*data + 4) & 0x7f;\n  }\n  counter = *(short *)((int)data + 0x2e) + -1;\n  *(short *)((int)data + 0x2e) = counter;\n  if (counter != 0) {\n    return 0;\n  }\n  *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xfffffedf;\n  *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) & 0xfffffffe;\n  *(undefined *)((int)data + 0x3a) = 0x20;\n  execute_next_function();\n  return 0;\n}\n\n",
            "current_name": "process_binary_data_08002f66",
            "entrypoint": "0x08002f66",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f66": "process_binary_data_08002f66",
                "execute_function_based_on_value_08003f24": "execute_next_function",
                "param_1": "data",
                "pbVar1": "byte_pointer",
                "puVar3": "undefined_pointer",
                "sVar2": "counter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ffc": {
            "additional_data": {
                "FUNC_08003f94": {
                    "clear_flags": 1,
                    "do_something": 1,
                    "finalize_data": 1,
                    "finalize_process_data": 1,
                    "finish_processing": 1
                },
                "FUN_08002ffc": {
                    "check_and_process_data": 1,
                    "process_data": 25,
                    "process_func": 1,
                    "process_input": 1,
                    "process_input_data": 1,
                    "process_param_data": 1
                },
                "LAB_0800311c_1": {
                    "constant_label": 1,
                    "label_1": 1,
                    "operation_label": 1,
                    "process_data_label": 1,
                    "some_constant": 1
                },
                "clear_flags_and_set_space_character_08002940": {
                    "clear_flags_and_set_space_character": 5
                },
                "iVar1": {
                    "index": 1,
                    "result": 22,
                    "result_value": 1,
                    "return_value": 4,
                    "value": 1
                },
                "initialize_data_and_process_08002f4c": {
                    "initialize_and_process_data": 1,
                    "initialize_data_and_process": 4
                },
                "param_1": {
                    "data": 19,
                    "data_array": 1,
                    "data_ptr": 2,
                    "input_data": 3,
                    "param": 3,
                    "parameters": 2
                },
                "process_binary_data_08002f66": {
                    "process_binary_data": 5
                },
                "process_data_0800295c": {
                    "process_data": 5
                },
                "puVar3": {
                    "array_ptr": 1,
                    "data": 2,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "input_ptr": 1,
                    "pointer": 5,
                    "ptr": 11,
                    "ptr1": 1,
                    "ptr_data": 3,
                    "value1": 1
                },
                "uVar2": {
                    "data_2": 1,
                    "data_3": 1,
                    "data_value": 1,
                    "flag": 2,
                    "flag2": 1,
                    "flag_2": 1,
                    "flag_variable": 1,
                    "flags": 1,
                    "flags2": 1,
                    "value": 4,
                    "value1": 5,
                    "value2": 6,
                    "value_1": 2,
                    "value_2": 1,
                    "value_x": 1,
                    "var3": 1
                },
                "uVar4": {
                    "check": 1,
                    "data_5": 1,
                    "flag": 13,
                    "flag1": 1,
                    "flag_3": 1,
                    "flag_bit": 1,
                    "flag_value": 1,
                    "is_zero": 1,
                    "value": 1,
                    "value2": 3,
                    "value4": 2,
                    "value_2": 2,
                    "value_y": 1,
                    "var6": 1
                },
                "uVar5": {
                    "data": 1,
                    "data_1": 2,
                    "flag": 1,
                    "flag2": 5,
                    "flag3": 1,
                    "flag_1": 1,
                    "flag_mask": 1,
                    "flag_value2": 1,
                    "flags1": 1,
                    "value1": 3,
                    "value2": 2,
                    "value3": 3,
                    "value5": 2,
                    "value_1": 1,
                    "value_3": 2,
                    "value_mask": 1,
                    "value_z": 1,
                    "var5": 1
                },
                "update_parameter_value_08000f8c": {
                    "update_parameter_value": 5
                }
            },
            "called": [
                "FUN_0800295c",
                "FUN_08000f8c",
                "FUN_08002f66",
                "FUN_08002f4c",
                "FUN_08003f94",
                "FUN_08002940"
            ],
            "calling": [],
            "code": "\nvoid process_param_data_08002ffc(uint **data)\n\n{\n  int result;\n  uint value2;\n  uint *ptr;\n  uint flag;\n  uint flag2;\n  \n  ptr = *data;\n  flag2 = *ptr;\n  value2 = ptr[3];\n  if ((((flag2 & 0xf) == 0) && ((flag2 & 0x20) != 0)) && ((value2 & 0x20) != 0)) {\n    process_binary_data(data);\n    return;\n  }\n  if (((flag2 & 0xf) == 0) || ((flag = ptr[5] & 1, flag == 0 && ((value2 & 0x120) == 0)))) {\n    if (((flag2 & 0x80) != 0) && ((value2 & 0x80) != 0)) {\n      process_data(data);\n      return;\n    }\n    if (((flag2 & 0x40) != 0) && ((value2 & 0x40) != 0)) {\n      initialize_data_and_process(data);\n    }\n  }\n  else {\n    if (((flag2 & 1) != 0) && ((value2 & 0x100) != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 1);\n    }\n    if (((flag2 & 4) != 0) && (flag != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 2);\n    }\n    if (((flag2 & 2) != 0) && (flag != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 4);\n    }\n    if (((flag2 & 8) != 0) && (flag != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 8);\n    }\n    if (data[0xf] != (uint *)0x0) {\n      if (((flag2 & 0x20) != 0) && ((value2 & 0x20) != 0)) {\n        process_binary_data(data);\n      }\n      if ((((uint)data[0xf] & 8) == 0) && (((*data)[5] & 0x40) == 0)) {\n        FUNC_08003f94(data);\n        data[0xf] = (uint *)0x0;\n        return;\n      }\n      clear_flags_and_set_space_character(data);\n      ptr = *data;\n      if ((ptr[5] & 0x40) == 0) {\n        FUNC_08003f94(data);\n        return;\n      }\n      ptr[5] = ptr[5] & 0xffffffbf;\n      if (data[0xd] == (uint *)0x0) {\n        FUNC_08003f94(data);\n        return;\n      }\n      data[0xd][0x14] = (uint)&process_data_label;\n      result = update_parameter_value(data[0xd]);\n      if (result != 0) {\n        (*(code *)data[0xd][0x14])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_param_data_08002ffc",
            "entrypoint": "0x08002ffc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ffc": "process_param_data_08002ffc",
                "LAB_0800311c_1": "process_data_label",
                "clear_flags_and_set_space_character_08002940": "clear_flags_and_set_space_character",
                "iVar1": "result",
                "initialize_data_and_process_08002f4c": "initialize_data_and_process",
                "param_1": "data",
                "process_binary_data_08002f66": "process_binary_data",
                "process_data_0800295c": "process_data",
                "puVar3": "ptr",
                "uVar2": "value2",
                "uVar4": "flag",
                "uVar5": "flag2",
                "update_parameter_value_08000f8c": "update_parameter_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800312c": {
            "additional_data": {
                "0x39": {
                    "offset2": 3,
                    "offset_b": 1
                },
                "0x3a": {
                    "offset1": 3,
                    "offset_a": 1
                },
                "FUN_0800312c": {
                    "combine_bits": 1,
                    "combine_bytes": 29,
                    "combine_two_bytes": 1
                },
                "byte": {
                    "combined_byte": 1
                },
                "byte_var_1": {
                    "byte1": 1
                },
                "byte_var_2": {
                    "byte2": 1
                },
                "param_1": {
                    "address": 8,
                    "data_pointer": 1,
                    "input": 15,
                    "input_number": 1,
                    "input_value": 4,
                    "offset": 2
                },
                "var_1": {
                    "offset1": 1
                },
                "var_2": {
                    "offset2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003df4",
                "FUN_08003dd0"
            ],
            "code": "\ncombined_byte combine_two_bytes_0800312c(int input)\n\n{\n  return *(combined_byte *)(input + 0x3a) | *(combined_byte *)(input + 0x39);\n}\n\n",
            "current_name": "combine_two_bytes_0800312c",
            "entrypoint": "0x0800312c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800312c": "combine_two_bytes_0800312c",
                "byte": "combined_byte",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003138": {
            "additional_data": {
                "DAT_": {
                    "": 1
                },
                "FUN_08003138": {
                    "bit_mask_value": 1,
                    "bitwise_access": 1,
                    "bitwise_check": 1,
                    "check_bit_value": 1,
                    "extract_bit": 3,
                    "extract_bit_from_memory": 1,
                    "extract_bit_from_sequence": 1,
                    "extract_bit_from_uint": 3,
                    "extract_bit_from_word": 2,
                    "extract_bit_value": 2,
                    "get_bit": 2,
                    "get_bit_from_array": 1,
                    "get_bit_from_offset": 1,
                    "get_bit_from_uint_array": 1,
                    "get_bit_value": 7,
                    "read_bit": 1,
                    "retrieve_bit": 1,
                    "retrieve_bit_from_offset": 1
                },
                "PTR_": {
                    "": 1
                },
                "param_1": {
                    "bit_index": 1,
                    "bit_position": 3,
                    "data": 4,
                    "index": 4,
                    "input_data": 1,
                    "input_value": 6,
                    "offset": 2,
                    "sequence": 1,
                    "value": 8,
                    "word": 1
                },
                "param_2": {
                    "address": 6,
                    "array": 1,
                    "array_address": 2,
                    "array_base": 2,
                    "array_base_address": 1,
                    "array_offset": 1,
                    "array_pointer": 1,
                    "array_ptr": 4,
                    "array_start": 1,
                    "base_address": 3,
                    "base_pointer": 1,
                    "data_address": 1,
                    "data_array": 2,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "index": 1,
                    "pointer": 1
                },
                "ptr_1": {
                    "word_pointer": 1
                },
                "ptr_2": {
                    "bit_pointer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004110",
                "FUN_080041bc"
            ],
            "code": "\nuint get_bit_value_08003138(uint value,int address)\n\n{\n  return *(uint *)(address + ((value << 0x18) >> 0x1c) * 4) >> (value & 0xf) & 1;\n}\n\n",
            "current_name": "get_bit_value_08003138",
            "entrypoint": "0x08003138",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003138": "get_bit_value_08003138",
                "param_1": "value",
                "param_2": "address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800314e": {
            "additional_data": {
                "FUN_0800314e": {
                    "apply_bitmask": 2,
                    "map_value_to_bit": 1,
                    "modify_memory": 1,
                    "set_bit": 6,
                    "set_bit_in_array": 10,
                    "set_bit_in_array_at_index": 1,
                    "set_bit_in_data_array": 1,
                    "update_bit_in_array": 2,
                    "update_bit_value": 1,
                    "update_bitmask": 1,
                    "update_data": 1,
                    "update_data_bit": 1,
                    "update_memory": 1,
                    "update_value": 1,
                    "write_bit": 1
                },
                "param_1": {
                    "bit_index": 5,
                    "bit_position": 8,
                    "index": 5,
                    "input": 1,
                    "input_value": 7,
                    "value": 5
                },
                "param_2": {
                    "array": 12,
                    "array_address": 4,
                    "array_base": 1,
                    "array_pointer": 4,
                    "array_ptr": 1,
                    "data": 1,
                    "data_array": 2,
                    "data_pointer": 3,
                    "map_address": 1,
                    "memory_address": 1,
                    "memory_array": 1
                },
                "uVar1": {
                    "array_index": 1,
                    "bit_index": 1,
                    "byte_index": 3,
                    "byte_offset": 3,
                    "index": 7,
                    "shift_amount": 1,
                    "shifted_bit_position": 1,
                    "shifted_index": 11,
                    "shifted_value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08004110"
            ],
            "code": "\nvoid set_bit_in_array_at_index_0800314e(uint bit_position,int array)\n\n{\n  uint shifted_index;\n  \n  shifted_index = (bit_position << 0x18) >> 0x1c;\n  *(uint *)(array + shifted_index * 4) = *(uint *)(array + shifted_index * 4) | 1 << (bit_position & 0xf);\n  return;\n}\n\n",
            "current_name": "set_bit_in_array_at_index_0800314e",
            "entrypoint": "0x0800314e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800314e": "set_bit_in_array_at_index_0800314e",
                "param_1": "bit_position",
                "param_2": "array",
                "uVar1": "shifted_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800316c": {
            "additional_data": {
                "FUN_0800316c": {
                    "clear_bit": 1,
                    "clear_bit_in_array": 1,
                    "store_bitwise_value": 1,
                    "update_and_clear_bit": 1,
                    "update_bit": 12,
                    "update_bit_in_array": 4,
                    "update_bit_in_u_int_array": 1,
                    "update_bit_value": 5,
                    "update_data": 1,
                    "update_memory": 1,
                    "update_memory_value": 1,
                    "update_value": 1,
                    "update_value_in_memory": 1
                },
                "new_variable_name_1": {
                    "new_value": 1
                },
                "param_1": {
                    "bit": 1,
                    "bit_index": 2,
                    "bit_number": 2,
                    "bit_position": 17,
                    "bit_value": 1,
                    "data_index": 1,
                    "input": 1,
                    "input_value": 3,
                    "value": 3
                },
                "param_2": {
                    "array": 5,
                    "array_address": 11,
                    "array_base": 1,
                    "array_base_address": 1,
                    "array_index": 1,
                    "array_pointer": 1,
                    "array_start": 1,
                    "bit_array": 1,
                    "data": 1,
                    "data_address": 1,
                    "data_array": 3,
                    "data_pointer": 1,
                    "memory_address": 2,
                    "memory_location": 1
                },
                "uVar1": {
                    "array_index": 3,
                    "bit_offset": 2,
                    "byte_index": 1,
                    "byte_offset": 1,
                    "index": 5,
                    "offset": 1,
                    "shifted_bit_position": 3,
                    "shifted_bits": 1,
                    "shifted_index": 6,
                    "shifted_position": 4,
                    "shifted_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004110"
            ],
            "code": "\nvoid update_bit_value_0800316c(uint bit_position,int array_address)\n\n{\n  uint shifted_index;\n  \n  shifted_index = (bit_position << 0x18) >> 0x1c;\n  *(uint *)(array_address + shifted_index * 4) = *(uint *)(array_address + shifted_index * 4) & ~(1 << (bit_position & 0xf));\n  return;\n}\n\n",
            "current_name": "update_bit_value_0800316c",
            "entrypoint": "0x0800316c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800316c": "update_bit_value_0800316c",
                "param_1": "bit_position",
                "param_2": "array_address",
                "uVar1": "shifted_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800318c": {
            "additional_data": {
                "0": {
                    "0x40020000": 3,
                    "address0": 1,
                    "address_0": 3,
                    "address_zero": 1,
                    "base_address": 3,
                    "base_address_0": 3,
                    "memory_address0": 1,
                    "memory_address_0": 3,
                    "result_0": 1
                },
                "1": {
                    "0x40020400": 3,
                    "address1": 1,
                    "address_1": 3,
                    "address_one": 1,
                    "base_address_1": 3,
                    "memory_address1": 1,
                    "memory_address_1": 3,
                    "result_1": 1
                },
                "10": {
                    "0x40022800": 3,
                    "address10": 1,
                    "address_10": 3,
                    "address_ten": 1,
                    "base_address_10": 3,
                    "memory_address10": 1,
                    "memory_address_10": 3,
                    "result_10": 1
                },
                "2": {
                    "0x40020800": 3,
                    "address2": 1,
                    "address_2": 3,
                    "address_two": 1,
                    "base_address_2": 3,
                    "memory_address2": 1,
                    "memory_address_2": 3,
                    "result_2": 1
                },
                "3": {
                    "0x40020c00": 3,
                    "address3": 1,
                    "address_3": 3,
                    "address_three": 1,
                    "base_address_3": 3,
                    "memory_address3": 1,
                    "memory_address_3": 3,
                    "result_3": 1
                },
                "4": {
                    "0x40021000": 3,
                    "address4": 1,
                    "address_4": 3,
                    "address_four": 1,
                    "base_address_4": 3,
                    "memory_address4": 1,
                    "memory_address_4": 3,
                    "result_4": 1
                },
                "5": {
                    "0x40021400": 3,
                    "address5": 1,
                    "address_5": 3,
                    "address_five": 1,
                    "base_address_5": 3,
                    "memory_address5": 1,
                    "memory_address_5": 3,
                    "result_5": 1
                },
                "6": {
                    "0x40021800": 3,
                    "address6": 1,
                    "address_6": 3,
                    "address_six": 1,
                    "base_address_6": 3,
                    "memory_address6": 1,
                    "memory_address_6": 3,
                    "result_6": 1
                },
                "7": {
                    "0x40021c00": 3,
                    "address7": 1,
                    "address_7": 3,
                    "address_seven": 1,
                    "base_address_7": 3,
                    "memory_address7": 1,
                    "memory_address_7": 3,
                    "result_7": 1
                },
                "8": {
                    "0x40022000": 3,
                    "address8": 1,
                    "address_8": 3,
                    "address_eight": 1,
                    "base_address_8": 3,
                    "memory_address8": 1,
                    "memory_address_8": 3,
                    "result_8": 1
                },
                "9": {
                    "0x40022400": 3,
                    "address9": 1,
                    "address_9": 3,
                    "address_nine": 1,
                    "base_address_9": 3,
                    "memory_address9": 1,
                    "memory_address_9": 3,
                    "result_9": 1
                },
                "FUN_0800318c": {
                    "get_address_by_index": 1,
                    "get_address_from_param": 1,
                    "get_memory_address": 22,
                    "get_memory_location": 1,
                    "get_value_from_param": 1,
                    "map_input_to_address": 1,
                    "map_param_to_value": 1,
                    "map_parameter_to_value": 1,
                    "map_value_to_address": 1,
                    "translate_param_to_address": 1
                },
                "param_1": {
                    "index": 3,
                    "input": 12,
                    "input_index": 1,
                    "input_num": 1,
                    "input_param": 2,
                    "input_value": 8,
                    "param": 3,
                    "value": 1
                },
                "return": {
                    "memory_address": 1
                },
                "return_value": {
                    "address": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080041bc"
            ],
            "code": "\nundefined4 get_memory_address_0800318c(undefined4 input)\n\n{\n  switch(input) {\n  case 0:\n    memory_address 0x40020000;\n  case 1:\n    memory_address 0x40020400;\n  case 2:\n    memory_address 0x40020800;\n  case 3:\n    memory_address 0x40020c00;\n  case 4:\n    memory_address 0x40021000;\n  case 5:\n    memory_address 0x40021400;\n  case 6:\n    memory_address 0x40021800;\n  case 7:\n    memory_address 0x40021c00;\n  case 8:\n    memory_address 0x40022000;\n  case 9:\n    memory_address 0x40022400;\n  case 10:\n    memory_address 0x40022800;\n  default:\n    memory_address 0;\n  }\n}\n\n",
            "current_name": "get_memory_address_0800318c",
            "entrypoint": "0x0800318c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800318c": "get_memory_address_0800318c",
                "param_1": "input",
                "return": "memory_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080031fc": {
            "additional_data": {
                "0": {
                    "memory_map_index_0": 1
                },
                "1": {
                    "memory_map_index_1": 1
                },
                "10": {
                    "memory_map_index_10": 1
                },
                "2": {
                    "memory_map_index_2": 1
                },
                "3": {
                    "memory_map_index_3": 1
                },
                "4": {
                    "memory_map_index_4": 1
                },
                "5": {
                    "memory_map_index_5": 1
                },
                "6": {
                    "memory_map_index_6": 1
                },
                "7": {
                    "memory_map_index_7": 1
                },
                "8": {
                    "memory_map_index_8": 1
                },
                "9": {
                    "memory_map_index_9": 1
                },
                "FUN_080031fc": {
                    "enable_feature": 1,
                    "set_bit_and_return_address": 1,
                    "set_flag_and_return_address": 4,
                    "set_flag_value": 3,
                    "set_memory_access_permission": 1,
                    "set_memory_address": 5,
                    "set_memory_address_access": 1,
                    "set_memory_address_and_value": 1,
                    "set_memory_address_flag": 1,
                    "set_memory_flag": 2,
                    "set_memory_flags": 1,
                    "set_memory_map_base_address": 1,
                    "set_memory_permission": 1,
                    "set_memory_region_permissions": 2,
                    "set_peripheral_mask": 1,
                    "set_permission_bits": 1,
                    "set_pin_state": 1,
                    "set_register_bit": 1,
                    "set_register_value": 1,
                    "set_registers": 1
                },
                "_DAT_40023830": {
                    "data_register": 1,
                    "flag_register": 1,
                    "memory_access_flags": 1,
                    "memory_address": 1,
                    "memory_map_value": 1,
                    "permission_flags": 1
                },
                "param_1": {
                    "access_level": 1,
                    "address_index": 5,
                    "bit_index": 1,
                    "feature_id": 1,
                    "flag": 8,
                    "flag_index": 2,
                    "input_index": 1,
                    "memory_index": 1,
                    "memory_map_index": 1,
                    "memory_region": 1,
                    "memory_section": 1,
                    "peripheral_index": 1,
                    "permission_index": 1,
                    "pin_number": 1,
                    "region_index": 2,
                    "register_index": 2,
                    "register_value": 1
                },
                "uVar1": {
                    "address": 2,
                    "base_address": 11,
                    "memory_address": 2,
                    "new_address": 5,
                    "new_memory_address": 3,
                    "peripheral_address": 1,
                    "pin_address": 1,
                    "register_address": 1,
                    "return_address": 3,
                    "return_value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08003978",
                "FUN_08003486"
            ],
            "code": "\n\n\nundefined4 set_memory_address_and_value_080031fc(undefined4 flag)\n\n{\n  undefined4 base_address;\n  \n  switch(flag) {\n  case 0:\n    _DAT_40023830 = _DAT_40023830 | 1;\n    base_address = 0x40020000;\n    break;\n  case 1:\n    _DAT_40023830 = _DAT_40023830 | 2;\n    base_address = 0x40020400;\n    break;\n  case 2:\n    _DAT_40023830 = _DAT_40023830 | 4;\n    base_address = 0x40020800;\n    break;\n  case 3:\n    _DAT_40023830 = _DAT_40023830 | 8;\n    base_address = 0x40020c00;\n    break;\n  case 4:\n    _DAT_40023830 = _DAT_40023830 | 0x10;\n    base_address = 0x40021000;\n    break;\n  case 5:\n    _DAT_40023830 = _DAT_40023830 | 0x20;\n    base_address = 0x40021400;\n    break;\n  case 6:\n    _DAT_40023830 = _DAT_40023830 | 0x40;\n    base_address = 0x40021800;\n    break;\n  case 7:\n    _DAT_40023830 = _DAT_40023830 | 0x80;\n    base_address = 0x40021c00;\n    break;\n  case 8:\n    _DAT_40023830 = _DAT_40023830 | 0x100;\n    base_address = 0x40022000;\n    break;\n  case 9:\n    _DAT_40023830 = _DAT_40023830 | 0x200;\n    base_address = 0x40022400;\n    break;\n  case 10:\n    _DAT_40023830 = _DAT_40023830 | 0x400;\n    base_address = 0x40022800;\n    break;\n  default:\n    base_address = 0;\n  }\n  return base_address;\n}\n\n",
            "current_name": "set_memory_address_and_value_080031fc",
            "entrypoint": "0x080031fc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080031fc": "set_memory_address_and_value_080031fc",
                "param_1": "flag",
                "uVar1": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003380": {
            "additional_data": {
                "0x10": {
                    "valid_return_value": 1
                },
                "0x1b": {
                    "bit_shift_value": 1
                },
                "DAT_08005a18": {
                    "data_array": 1
                },
                "FUN_08003380": {
                    "check_and_return": 1,
                    "check_if_value_is_valid": 1,
                    "check_input_and_return_value": 1,
                    "check_valid_value": 1,
                    "check_validity": 4,
                    "check_validity_and_return_size": 1,
                    "check_value": 8,
                    "check_value_and_return": 8,
                    "check_value_and_return_size": 2,
                    "validate_input": 1,
                    "validate_input_and_get_value": 1,
                    "validate_value": 2
                },
                "find_value_or_return_negative_one_0800354a": {
                    "find_value": 1,
                    "find_value_or_return_negative_one": 1
                },
                "iVar1": {
                    "find_result": 1,
                    "result": 26,
                    "value_result": 1
                },
                "param_1": {
                    "data": 1,
                    "input_1": 1,
                    "input_param": 2,
                    "input_param_1": 1,
                    "input_value": 8,
                    "value": 17,
                    "value_1": 1
                },
                "param_2": {
                    "array": 1,
                    "array_pointer": 1,
                    "data": 3,
                    "data_pointer": 1,
                    "ignored": 1,
                    "input_2": 1,
                    "input_param_2": 1,
                    "param_2": 6,
                    "pointer": 1,
                    "ptr": 4,
                    "ptr_1": 1,
                    "ptr_data": 1,
                    "unused": 1,
                    "unused1": 1,
                    "unused_param": 4
                },
                "param_3": {
                    "array_start": 1,
                    "buffer": 1,
                    "data1": 1,
                    "data_1": 1,
                    "data_ptr": 1,
                    "data_size": 1,
                    "input_3": 1,
                    "input_param_1": 1,
                    "input_param_3": 1,
                    "length": 1,
                    "param": 3,
                    "param1": 1,
                    "param3": 2,
                    "param_3": 9,
                    "ptr_2": 1,
                    "start_index": 1,
                    "unused2": 1,
                    "value1": 1,
                    "value_1": 1,
                    "value_2": 1
                },
                "param_4": {
                    "array_end": 1,
                    "data2": 1,
                    "data_2": 1,
                    "data_ptr": 1,
                    "end_index": 1,
                    "flag": 1,
                    "index": 1,
                    "input_4": 1,
                    "input_param_2": 1,
                    "input_param_4": 1,
                    "length": 1,
                    "param": 1,
                    "param2": 2,
                    "param4": 2,
                    "param_4": 9,
                    "param_ptr": 1,
                    "ptr_3": 1,
                    "unused3": 1,
                    "value2": 1,
                    "value_2": 1,
                    "value_3": 1
                }
            },
            "called": [
                "FUN_0800354a"
            ],
            "calling": [
                "FUN_080033d8"
            ],
            "code": "\nundefined4 check_value_and_return_size_08003380(undefined4 value,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  \n  result = find_value_or_return_negative_one(value,&DAT_08005a18,param_3,param_4,param_4);\n  if ((uint)(result << 0xc) >> 0x1b != 2) {\n    return 0;\n  }\n  return 0x10;\n}\n\n",
            "current_name": "check_value_and_return_size_08003380",
            "entrypoint": "0x08003380",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003380": "check_value_and_return_size_08003380",
                "find_value_or_return_negative_one_0800354a": "find_value_or_return_negative_one",
                "iVar1": "result",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800339c": {
            "additional_data": {
                "0": {
                    "result_0": 1
                },
                "0xc": {
                    "result_c": 1
                },
                "2": {
                    "shifted_value_2": 1
                },
                "3": {
                    "shifted_value_3": 1
                },
                "4": {
                    "shifted_value_4": 1
                },
                "8": {
                    "result_8": 1
                },
                "FUN_0800339c": {
                    "analyze_value": 1,
                    "check_condition": 1,
                    "check_value_and_return": 3,
                    "check_value_and_return_code": 1,
                    "convert_value_to_length": 1,
                    "decode_value": 2,
                    "find_and_return_value": 1,
                    "find_magic_value": 1,
                    "find_result": 3,
                    "find_result_shifted": 2,
                    "find_return_value": 1,
                    "find_shifted_value": 1,
                    "find_value_and_get_result": 1,
                    "find_value_and_return": 2,
                    "find_value_and_return_length": 1,
                    "find_value_and_return_result": 1,
                    "find_value_and_return_size": 3,
                    "find_value_or_return_size": 1,
                    "get_shifted_value": 2,
                    "get_value_type": 1,
                    "lookup_and_return_value": 1
                },
                "iVar1": {
                    "encoded_result": 1,
                    "found_value": 3,
                    "length": 1,
                    "result": 23,
                    "return_value": 1,
                    "shifted_value": 1,
                    "value_found": 1
                },
                "param_1": {
                    "input": 1,
                    "input_1": 1,
                    "input_param": 2,
                    "input_value": 13,
                    "value": 10,
                    "value_1": 4
                },
                "param_2": {
                    "config": 1,
                    "data_1": 1,
                    "input_2": 1,
                    "param2": 1,
                    "param_2": 8,
                    "param_unused": 1,
                    "pointer": 1,
                    "search_criteria": 1,
                    "unknown": 1,
                    "unused_1": 1,
                    "unused_param": 2,
                    "value_2": 2
                },
                "param_3": {
                    "additional_param": 1,
                    "additional_param_1": 1,
                    "array_ptr": 1,
                    "array_size": 1,
                    "data": 1,
                    "data_2": 1,
                    "data_param": 1,
                    "input_3": 1,
                    "param3": 1,
                    "param_1": 1,
                    "param_3": 10,
                    "param_3_value": 1,
                    "param_a": 2,
                    "param_array1": 1,
                    "parameter_a": 1,
                    "unknown": 1,
                    "unused_2": 1,
                    "value_2": 1,
                    "value_3": 3
                },
                "param_4": {
                    "additional_param_2": 1,
                    "buffer_param": 1,
                    "data_3": 1,
                    "input_4": 1,
                    "param4": 1,
                    "param_2": 1,
                    "param_4": 11,
                    "param_4_value": 1,
                    "param_array2": 1,
                    "param_b": 2,
                    "parameter_b": 1,
                    "size_param": 1,
                    "start_index": 1,
                    "unknown": 1,
                    "unused_3": 1,
                    "value2": 1,
                    "value_3": 1,
                    "value_4": 3
                },
                "uVar2": {
                    "decoded_value": 1,
                    "shift_value": 1,
                    "shifted_bits": 2,
                    "shifted_result": 13,
                    "shifted_value": 12,
                    "value_shifted": 1,
                    "value_type": 1
                }
            },
            "called": [
                "FUN_0800354a"
            ],
            "calling": [
                "FUN_08003414"
            ],
            "code": "\nundefined4 find_value_and_return_size_0800339c(undefined4 input_value,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  uint shifted_result;\n  \n  result = find_value_or_return_negative_one_0800354a(input_value,&DAT_08005a3c,param_3,param_4,param_4);\n  shifted_result = (uint)(result << 0xc) >> 0x1b;\n  if (shifted_result == 3) {\n    return 8;\n  }\n  if (shifted_result != 4) {\n    if (shifted_result != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "current_name": "find_value_and_return_size_0800339c",
            "entrypoint": "0x0800339c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800339c": "find_value_and_return_size_0800339c",
                "iVar1": "result",
                "param_1": "input_value",
                "uVar2": "shifted_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080033c8": {
            "additional_data": {
                "0xdfffffff": {
                    "bit_mask": 1,
                    "bit_to_clear": 1
                },
                "DAT_40023840": {
                    "register_value": 1
                },
                "FUN_080033c8": {
                    "clear_bit": 2,
                    "clear_bit_in_memory": 9,
                    "clear_bit_in_memory_address": 1,
                    "clear_bit_in_register": 2,
                    "clear_bit_in_variable": 1,
                    "clear_bits": 2,
                    "clear_flag": 1,
                    "clear_flag_bits": 4,
                    "clear_flag_in_data": 1,
                    "clear_flag_on_address": 1,
                    "clear_flag_on_bit30": 1,
                    "clear_flags": 1,
                    "clear_high_bit": 1,
                    "clear_memory": 1,
                    "clear_memory_bits": 1,
                    "clear_memory_flag": 1,
                    "clear_protected_flag": 1
                },
                "_DAT_40023840": {
                    "data": 4,
                    "data_flag": 1,
                    "data_register": 2,
                    "flag": 3,
                    "flag_address": 1,
                    "flag_bits": 1,
                    "flag_register": 1,
                    "flag_variable": 1,
                    "flags": 1,
                    "memory_address": 6,
                    "memory_data": 1,
                    "memory_flag": 1,
                    "memory_location": 1,
                    "memory_location_to_clear": 1,
                    "memory_value": 1,
                    "register_value": 1,
                    "status_register": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08000f56"
            ],
            "code": "\n\n\nvoid clear_bit_in_memory_address_080033c8(void)\n\n{\n  _DAT_40023840 = _DAT_40023840 & 0xdfffffff;\n  return;\n}\n\n",
            "current_name": "clear_bit_in_memory_address_080033c8",
            "entrypoint": "0x080033c8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080033c8": "clear_bit_in_memory_address_080033c8"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080033d8": {
            "additional_data": {
                "CHECK_VALUE_AND_RETURN_SIZE": {
                    "check_value_and_return_size": 1
                },
                "CLEAR_BIT_AND_SET_FLAG": {
                    "clear_bit_and_set_flag": 1
                },
                "FIND_VALUE_OR_ZERO": {
                    "find_value_or_zero": 1
                },
                "FUN_080033d8": {
                    "initialize_and_clear_flag": 1,
                    "initialize_data": 1,
                    "initialize_data_structure": 8,
                    "process_binary_data": 1,
                    "process_data": 19
                },
                "INITIALIZE_DATA_STRUCTURE": {
                    "initialize_data_structure": 1
                },
                "check_value_and_return_size_08003380": {
                    "check_value_and_get_size": 1,
                    "check_value_and_return_size": 7
                },
                "clear_bit_and_set_flag_08000f72": {
                    "clear_bit_and_set_flag": 8
                },
                "find_value_or_zero_080034f4": {
                    "find_value_or_zero": 8
                },
                "iVar1": {
                    "result": 2,
                    "size": 1,
                    "validate_result": 1,
                    "value_check_result": 1,
                    "value_size": 1
                },
                "initialize_data_structure_08000f56": {
                    "initialize_data_structure": 8
                },
                "local_1c": {
                    "data_array": 1,
                    "data_buffer": 1,
                    "found_values": 2,
                    "input_values": 1,
                    "result_array": 9,
                    "results": 1,
                    "value_array": 6,
                    "values": 6,
                    "values_array": 4
                },
                "param_1": {
                    "data": 1,
                    "input": 6,
                    "input_data": 11,
                    "input_param": 6,
                    "input_parameter": 3,
                    "input_value": 3,
                    "param": 1
                }
            },
            "called": [
                "FUN_08000f56",
                "FUN_08000f72",
                "FUN_08003380",
                "FUN_080034f4"
            ],
            "calling": [
                "FUN_08004110"
            ],
            "code": "\nvoid process_binary_data_080033d8(undefined4 input_data)\n\n{\n  int result;\n  int result_array [5];\n  \n  result_array[0] = find_value_or_zero(input_data,&DAT_08005a18);\n  if ((result_array[0] != 0) && ((result = check_value_and_return_size(input_data), result == 0 || (result == 0x10)))) {\n    clear_bit_and_set_flag(result_array,result);\n    initialize_data_structure(result_array);\n  }\n  return;\n}\n\n",
            "current_name": "process_binary_data_080033d8",
            "entrypoint": "0x080033d8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080033d8": "process_binary_data_080033d8",
                "check_value_and_return_size_08003380": "check_value_and_return_size",
                "clear_bit_and_set_flag_08000f72": "clear_bit_and_set_flag",
                "find_value_or_zero_080034f4": "find_value_or_zero",
                "iVar1": "result",
                "initialize_data_structure_08000f56": "initialize_data_structure",
                "local_1c": "result_array",
                "param_1": "input_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800340c": {
            "additional_data": {
                "FAN_0800340c": {
                    "update_data_registers": 1
                },
                "FUN_0800340c": {
                    "initialize_data_registers": 7,
                    "update_data_registers": 20,
                    "update_registers": 3
                },
                "original_parameter_name_1": {
                    "new_parameter_name_1": 1
                },
                "original_variable_name_1": {
                    "new_variable_name_1": 1
                },
                "update_data_registers_080035fc": {
                    "fetch_updated_registers": 1,
                    "update_data_registers": 22,
                    "update_registers": 6
                }
            },
            "called": [
                "FUN_080035fc"
            ],
            "calling": [
                "FUN_0800268e"
            ],
            "code": "\nvoid update_data_registers_0800340c(void)\n\n{\n  update_data_registers_0800340c();\n  return;\n}\n\n",
            "current_name": "update_data_registers_0800340c",
            "entrypoint": "0x0800340c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800340c": "update_data_registers_0800340c",
                "update_data_registers_080035fc": "update_data_registers"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003414": {
            "additional_data": {
                "DAT_08005a3c": {
                    "data1": 1,
                    "data_array": 1
                },
                "FUN_08003414": {
                    "find_and_update_values": 2,
                    "process_data": 23,
                    "process_function": 1,
                    "process_input": 1,
                    "process_parameters": 2,
                    "process_values": 1,
                    "update_data_and_flags": 1
                },
                "find_value_and_return_size_0800339c": {
                    "find_value_and_return_size": 14
                },
                "find_value_or_return_negative_one_0800354a": {
                    "find_value_or_negative_one": 2,
                    "find_value_or_return_neg_one": 1,
                    "find_value_or_return_negative_one": 11
                },
                "find_value_or_zero_080034f4": {
                    "find_value_or_zero": 13,
                    "find_value_or_zero_1": 1
                },
                "iVar1": {
                    "return_value": 1,
                    "size": 2,
                    "value_size": 2
                },
                "local_4c": {
                    "data_array": 1,
                    "found_values": 4,
                    "processed_values": 1,
                    "results": 1,
                    "value_array": 1,
                    "values": 16,
                    "values_array": 7
                },
                "param_1": {
                    "argument": 1,
                    "data": 4,
                    "input": 7,
                    "input_data": 10,
                    "input_param": 1,
                    "input_value": 7,
                    "parameter": 1
                },
                "uVar2": {
                    "flags": 1,
                    "return_value": 1,
                    "value_flags": 1,
                    "value_with_flags": 1
                },
                "update_and_check_bitwise_values_080028f0": {
                    "update_and_check_bitwise": 1,
                    "update_and_check_bitwise_values": 10,
                    "update_bitwise_values": 3
                },
                "update_and_check_flags_08002864": {
                    "update_and_check_flags": 11,
                    "update_flags": 3
                },
                "update_data_and_registers_0800268e": {
                    "update_data_and_registers": 14
                }
            },
            "called": [
                "FUN_0800268e",
                "FUN_080028f0",
                "FUN_0800354a",
                "FUN_0800339c",
                "FUN_08002864",
                "FUN_080034f4"
            ],
            "calling": [
                "FUN_08004110"
            ],
            "code": "\nvoid process_data_08003414(undefined4 input_data)\n\n{\n  int size;\n  uint return_value;\n  int values [16];\n  \n  values[0] = find_value_or_zero(input_data,&DAT_08005a3c);\n  if ((values[0] != 0) &&\n     ((((size = find_value_and_return_size(input_data), size == 0 || (size == 4)) || (size == 8)) ||\n      ((size == 0xc || (size == 0x18)))))) {\n    return_value = find_value_or_return_negative_one(input_data,&DAT_08005a3c);\n    if ((return_value & 0x100000) == 0) {\n      update_and_check_flags(values,size);\n    }\n    else {\n      update_and_check_bitwise_values(values,size);\n    }\n    update_data_and_registers(values);\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08003414",
            "entrypoint": "0x08003414",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003414": "process_data_08003414",
                "find_value_and_return_size_0800339c": "find_value_and_return_size",
                "find_value_or_return_negative_one_0800354a": "find_value_or_return_negative_one",
                "find_value_or_zero_080034f4": "find_value_or_zero",
                "iVar1": "size",
                "local_4c": "values",
                "param_1": "input_data",
                "uVar2": "return_value",
                "update_and_check_bitwise_values_080028f0": "update_and_check_bitwise_values",
                "update_and_check_flags_08002864": "update_and_check_flags",
                "update_data_and_registers_0800268e": "update_data_and_registers"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800346c": {
            "additional_data": {
                "FUN_0800346c": {
                    "fetch_data": 1,
                    "get_data": 1,
                    "get_data_value": 5,
                    "initialize_data": 13,
                    "initialize_data_value": 2,
                    "initialize_data_values": 5,
                    "retrieve_data": 1,
                    "retrieve_data_value": 3
                },
                "get_data_value_08000e30": {
                    "extract_data_value": 1,
                    "fetch_data": 5,
                    "fetch_data_value": 9,
                    "fetch_data_values": 1,
                    "get_data_value": 6,
                    "initialize_data": 1,
                    "retrieve_data": 3,
                    "retrieve_data_value": 2,
                    "retrieve_data_values": 2
                }
            },
            "called": [
                "FUN_08000e30"
            ],
            "calling": [
                "FUN_08004204"
            ],
            "code": "\nvoid initialize_data_values_0800346c(void)\n\n{\n  fetch_data_value();\n  return;\n}\n\n",
            "current_name": "initialize_data_values_0800346c",
            "entrypoint": "0x0800346c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800346c": "initialize_data_values_0800346c",
                "get_data_value_08000e30": "fetch_data_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003474": {
            "called": [],
            "calling": [
                "FUN_08003476"
            ],
            "code": "\nvoid FUNC_08003474(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08003474",
            "entrypoint": "0x08003474",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08003474": "FUNC_08003474"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08003476": {
            "additional_data": {
                "FUNC_08003474": {
                    "end_application": 1,
                    "execute": 1,
                    "execute_additional_function": 8,
                    "execute_additional_functions": 1,
                    "execute_additional_operations": 1,
                    "execute_finalization": 1,
                    "execute_function": 7,
                    "execute_function_08003474": 2,
                    "execute_operation": 1,
                    "finalize_application": 1,
                    "perform_additional_operations": 3,
                    "perform_additional_tasks": 1,
                    "perform_operation": 1,
                    "process_function": 1
                },
                "FUN_08003476": {
                    "execute_application": 2,
                    "initialize_and_execute_application": 2,
                    "initialize_and_process_application": 1,
                    "initialize_application": 22,
                    "initialize_application_and_execute_operations": 1,
                    "initialize_application_and_perform_addition": 1,
                    "initialize_application_and_perform_operations": 1,
                    "start_application": 1
                },
                "addition_operation_08000e18": {
                    "perform_addition": 8,
                    "perform_addition_operation": 21
                },
                "initialize_application_08000f4e": {
                    "init_app": 1,
                    "initialize_application": 9,
                    "initialize_application_components": 8,
                    "initialize_application_context": 1,
                    "initialize_application_data": 3,
                    "initialize_application_helper": 1,
                    "initialize_application_resources": 3,
                    "initialize_application_settings": 1,
                    "setup_application": 2
                }
            },
            "called": [
                "FUN_08003474",
                "FUN_08000f4e",
                "FUN_08000e18"
            ],
            "calling": [],
            "code": "\nvoid initialize_application_and_execute_operations_08003476(void)\n\n{\n  perform_addition_operation();\n  initialize_application();\n  FUNC_08003474();\n  return;\n}\n\n",
            "current_name": "initialize_application_and_execute_operations_08003476",
            "entrypoint": "0x08003476",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003476": "initialize_application_and_execute_operations_08003476",
                "addition_operation_08000e18": "perform_addition_operation",
                "initialize_application_08000f4e": "initialize_application"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003486": {
            "additional_data": {
                "FUN_08003486": {
                    "edit_memory_address_and_bit": 1,
                    "set_and_reverse_bits": 1,
                    "set_memory_address_and_value": 5,
                    "set_memory_and_update": 1,
                    "set_memory_and_update_registers": 3,
                    "update_memory_address_and_bits": 1,
                    "update_memory_and_register": 1,
                    "update_memory_and_registers": 3,
                    "update_register_with_bit": 2,
                    "update_registers": 9,
                    "update_registers_with_bit": 1,
                    "update_registers_with_memory": 1,
                    "update_registers_with_memory_value": 2
                },
                "local_18": {
                    "constant": 9,
                    "constant1": 2,
                    "constant2": 2,
                    "constant_2": 5,
                    "constant_value": 5,
                    "local_var": 1,
                    "register_num": 1,
                    "register_number": 1,
                    "register_value3": 1
                },
                "local_1c": {
                    "constant3": 2,
                    "data_temp_2": 1,
                    "input_value": 1,
                    "local_param3": 1,
                    "memory_address_2": 1,
                    "new_value2": 3,
                    "param3": 1,
                    "param_2_copy": 1,
                    "param_3": 1,
                    "parameter3": 1,
                    "parameter_3": 1,
                    "reg2": 1,
                    "register2": 1,
                    "register4": 1,
                    "register_2_copy": 1,
                    "register_value2": 1,
                    "register_value4": 1,
                    "register_value_2": 1,
                    "register_value_4": 2,
                    "value2": 2,
                    "value2_copy": 4,
                    "value4": 1,
                    "value_param": 1
                },
                "local_20": {
                    "address_param": 1,
                    "constant2": 2,
                    "data_temp": 1,
                    "input_address": 1,
                    "local_param2": 1,
                    "new_value": 1,
                    "new_value1": 3,
                    "param_1_copy": 1,
                    "param_2": 1,
                    "parameter2": 1,
                    "parameter_2": 1,
                    "reg1": 1,
                    "register1": 1,
                    "register3": 1,
                    "register_1_copy": 1,
                    "register_value1": 1,
                    "register_value3": 1,
                    "register_value_1": 1,
                    "register_value_2": 1,
                    "register_value_3": 2,
                    "value1": 2,
                    "value1_copy": 4,
                    "value3": 1
                },
                "local_24": {
                    "bit_mask": 27,
                    "bitmask": 2,
                    "mask": 2
                },
                "param_1": {
                    "address": 4,
                    "bit_position": 3,
                    "data": 1,
                    "input": 7,
                    "input_data": 1,
                    "input_param": 2,
                    "input_value": 10,
                    "memory_address": 3
                },
                "param_2": {
                    "address": 2,
                    "data_1": 1,
                    "param2": 2,
                    "param_1": 1,
                    "parameter2": 1,
                    "parameter_2": 1,
                    "reg_value1": 1,
                    "reg_value_1": 1,
                    "register1": 1,
                    "register_1": 1,
                    "register_value": 1,
                    "register_value1": 1,
                    "register_value_1": 2,
                    "value1": 14,
                    "value_1": 1
                },
                "param_3": {
                    "data_2": 1,
                    "memory_address": 1,
                    "param3": 2,
                    "param_2": 1,
                    "parameter3": 1,
                    "parameter_3": 1,
                    "reg_value2": 1,
                    "reg_value_2": 1,
                    "register2": 1,
                    "register_2": 1,
                    "register_value2": 1,
                    "register_value_2": 2,
                    "value": 2,
                    "value2": 14,
                    "value_2": 1
                },
                "reverse_bits_and_update_registers_08000fb4": {
                    "reverse_bits_and_update_registers": 1
                },
                "set_memory_address_and_value_080031fc": {
                    "set_memory_address_and_value": 1
                },
                "uVar1": {
                    "address": 2,
                    "address_value": 3,
                    "decoded_address": 1,
                    "memory": 1,
                    "memory_address": 15,
                    "memory_value": 1,
                    "result": 1
                }
            },
            "called": [
                "FUN_08000fb4",
                "FUN_080031fc"
            ],
            "calling": [
                "FUN_08004110"
            ],
            "code": "\nvoid set_memory_and_update_registers_08003486(uint input_value,undefined4 value1,undefined4 value2)\n\n{\n  undefined4 memory_address;\n  uint bit_mask;\n  undefined4 value1_copy;\n  undefined4 value2_copy;\n  undefined4 constant;\n  \n  memory_address = set_memory_address_and_value((input_value << 0x18) >> 0x1c);\n  bit_mask = 1 << (input_value & 0xf) & 0xffff;\n  constant = 2;\n  value1_copy = value1;\n  value2_copy = value2;\n  reverse_bits_and_update_registers(memory_address,&bit_mask);\n  return;\n}\n\n",
            "current_name": "set_memory_and_update_registers_08003486",
            "entrypoint": "0x08003486",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003486": "set_memory_and_update_registers_08003486",
                "local_18": "constant",
                "local_1c": "value2_copy",
                "local_20": "value1_copy",
                "local_24": "bit_mask",
                "param_1": "input_value",
                "param_2": "value1",
                "param_3": "value2",
                "reverse_bits_and_update_registers_08000fb4": "reverse_bits_and_update_registers",
                "set_memory_address_and_value_080031fc": "set_memory_address_and_value",
                "uVar1": "memory_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080034b6": {
            "additional_data": {
                "FUN_080034b6": {
                    "set_param_value": 16,
                    "set_param_value_based_on_condition": 8,
                    "set_param_value_conditionally": 1,
                    "set_param_value_if_condition": 1,
                    "set_param_value_if_condition_is_met": 1,
                    "set_parameter_value": 1,
                    "update_param_value": 3
                },
                "param_1": {
                    "function_id": 1,
                    "param1": 5,
                    "param_addr": 1,
                    "param_value": 4,
                    "param_value1": 2,
                    "param_value_1": 6,
                    "param_value_ptr": 1,
                    "parameter_1": 1,
                    "target_object": 1,
                    "value": 3,
                    "value1": 2,
                    "value_1": 2,
                    "value_param": 1
                },
                "param_2": {
                    "flag": 1,
                    "param2": 5,
                    "param_flag": 4,
                    "param_type": 1,
                    "param_value": 2,
                    "param_value2": 2,
                    "param_value_2": 6,
                    "parameter_2": 1,
                    "target_property": 1,
                    "type": 2,
                    "value": 1,
                    "value2": 2,
                    "value_2": 2,
                    "value_param_2": 1
                },
                "param_3": {
                    "check": 1,
                    "condition": 13,
                    "condition_flag": 1,
                    "condition_value": 3,
                    "flag": 6,
                    "is_zero": 1,
                    "param3": 2,
                    "param_check": 1,
                    "param_condition": 1,
                    "parameter_3": 1,
                    "status": 1
                },
                "param_4": {
                    "additional_param": 1,
                    "common_param": 1,
                    "data": 3,
                    "data_value": 1,
                    "default_value": 1,
                    "param": 3,
                    "param4": 2,
                    "param_data": 2,
                    "param_value": 3,
                    "param_value2": 1,
                    "param_value4": 2,
                    "param_value_3": 1,
                    "param_value_4": 2,
                    "parameter_4": 1,
                    "value": 3,
                    "value3": 1,
                    "value4": 1,
                    "value_3": 1,
                    "value_4": 1
                },
                "set_param_value_08001198": {
                    "set_param_value": 5,
                    "update_param_value_08001198": 1
                }
            },
            "called": [
                "FUN_08001198"
            ],
            "calling": [
                "FUN_080041bc"
            ],
            "code": "\nvoid set_param_value_based_on_condition_080034b6(undefined4 param_value_1,undefined2 param_value_2,int condition,undefined4 data)\n\n{\n  if (condition == 0) {\n    set_param_value(param_value_1,param_value_2,0,data,data);\n    return;\n  }\n  set_param_value(param_value_1,param_value_2,1,data,data);\n  return;\n}\n\n",
            "current_name": "set_param_value_based_on_condition_080034b6",
            "entrypoint": "0x080034b6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080034b6": "set_param_value_based_on_condition_080034b6",
                "param_1": "param_value_1",
                "param_2": "param_value_2",
                "param_3": "condition",
                "param_4": "data",
                "set_param_value_08001198": "set_param_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080034ce": {
            "additional_data": {
                "FUN_080034ce": {
                    "initialize_and_update": 1,
                    "initialize_and_update_character_data": 8,
                    "initialize_and_update_character_system": 3,
                    "initialize_and_update_data": 1,
                    "initialize_character_data": 1,
                    "initialize_character_data_and_system": 10,
                    "initialize_game": 6,
                    "initialize_game_data": 1
                },
                "initialize_and_update_character_data_08000de4": {
                    "": 1,
                    "character_data_initialize_and_update": 1,
                    "initialize_and_update_character_data": 21,
                    "initialize_character_data": 7,
                    "initialize_update_character_data": 1
                },
                "initialize_system_08000c8c": {
                    "": 1,
                    "initialize_game_system": 1,
                    "initialize_system": 28,
                    "system_initialize": 1
                }
            },
            "called": [
                "FUN_08000c8c",
                "FUN_08000de4"
            ],
            "calling": [
                "FUN_08000d8e"
            ],
            "code": "\nvoid initialize_character_data_and_system_080034ce(void)\n\n{\n  initialize_and_update_character_data();\n  initialize_system();\n  return;\n}\n\n",
            "current_name": "initialize_character_data_and_system_080034ce",
            "entrypoint": "0x080034ce",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080034ce": "initialize_character_data_and_system_080034ce",
                "initialize_and_update_character_data_08000de4": "initialize_and_update_character_data",
                "initialize_system_08000c8c": "initialize_system"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080034da": {
            "additional_data": {
                "DAT_": {
                    "": 1
                },
                "FUN_080034da": {
                    "find_and_return_value": 2,
                    "find_next_match": 1,
                    "find_value": 3,
                    "find_value_in_array": 16,
                    "find_value_index": 9
                },
                "PTR_": {
                    "": 1
                },
                "break": {
                    "found_value": 1
                },
                "param_1": {
                    "desired_value": 1,
                    "search_value": 1,
                    "target_value": 8,
                    "value": 13,
                    "value_to_find": 8
                },
                "param_2": {
                    "array": 18,
                    "array_of_values": 2,
                    "array_pointer": 1,
                    "array_ptr": 2,
                    "data_array": 2,
                    "value_array": 2,
                    "values_array": 4
                },
                "return": {
                    "found_value": 1
                }
            },
            "called": [
                "FUN_080034da"
            ],
            "calling": [
                "FUN_080034da",
                "FUN_080034f4"
            ],
            "code": "\nundefined4 find_value_in_array_080034da(int value,short *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      found_value 0;\n    }\n    if (*array == value) found_value;\n    array = array + 6;\n  }\n  found_value *(undefined4 *)(array + 2);\n}\n\n",
            "current_name": "find_value_in_array_080034da",
            "entrypoint": "0x080034da",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080034da": "find_value_in_array_080034da",
                "break": "found_value",
                "param_1": "value",
                "param_2": "array",
                "return": "found_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080034f4": {
            "additional_data": {
                "FUN_080034f4": {
                    "check_value": 1,
                    "find_array_value": 1,
                    "find_value": 7,
                    "find_value_if_not_minus_one": 1,
                    "find_value_if_not_negative": 2,
                    "find_value_index": 1,
                    "find_value_or_default": 8,
                    "find_value_or_zero": 9,
                    "get_value_from_array": 1
                },
                "param_1": {
                    "input_value": 11,
                    "value": 12,
                    "value_to_find": 8
                },
                "uVar1": {
                    "found_index": 1,
                    "found_value": 21,
                    "result": 7
                }
            },
            "called": [
                "FUN_080034da"
            ],
            "calling": [
                "FUN_08003d18",
                "FUN_08003978",
                "FUN_08003cc8",
                "FUN_08003414",
                "FUN_080033d8"
            ],
            "code": "\nundefined4 find_value_or_zero_080034f4(int value)\n\n{\n  undefined4 found_value;\n  \n  if (value != -1) {\n    found_value = find_value_in_array_080034da();\n    return found_value;\n  }\n  return 0;\n}\n\n",
            "current_name": "find_value_or_zero_080034f4",
            "entrypoint": "0x080034f4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080034f4": "find_value_or_zero_080034f4",
                "param_1": "value",
                "uVar1": "found_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003506": {
            "additional_data": {
                "FUN_08003506": {
                    "find_and_return_value": 1,
                    "find_element": 3,
                    "find_element_index": 2,
                    "find_item_index": 1,
                    "find_param_in_array": 1,
                    "find_value": 2,
                    "find_value_by_index": 2,
                    "find_value_by_key": 2,
                    "find_value_in_array": 13,
                    "find_value_index": 4
                },
                "param_1": {
                    "element": 2,
                    "element_to_find": 1,
                    "index": 2,
                    "item": 1,
                    "key": 2,
                    "search_value": 2,
                    "target": 1,
                    "target_value": 6,
                    "value": 13,
                    "value_to_find": 1
                },
                "param_2": {
                    "array": 21,
                    "array_ptr": 3,
                    "data": 2,
                    "data_array": 4,
                    "values_array": 1
                }
            },
            "called": [
                "FUN_08003506"
            ],
            "calling": [
                "FUN_08003506",
                "FUN_0800351e"
            ],
            "code": "\nint find_value_in_array_08003506(int value,short *array)\n\n{\n  while( true ) {\n    if (*(int *)(array + 2) == 0) {\n      return -1;\n    }\n    if (*(int *)(array + 2) == value) break;\n    array = array + 6;\n  }\n  return (int)*array;\n}\n\n",
            "current_name": "find_value_in_array_08003506",
            "entrypoint": "0x08003506",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003506": "find_value_in_array_08003506",
                "param_1": "value",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800351e": {
            "additional_data": {
                "FUN_0800351e": {
                    "check_param_and_find_value": 1,
                    "find_value_from_array": 1,
                    "find_value_if_not_zero": 1,
                    "find_value_or_default": 13,
                    "find_value_or_error": 2,
                    "find_value_or_error_code": 1,
                    "find_value_or_fail": 5,
                    "find_value_or_invalid": 1,
                    "find_value_or_negative": 1,
                    "find_value_or_return_error": 1,
                    "find_value_or_undefined": 1,
                    "get_value_from_array": 2
                },
                "param_1": {
                    "input": 2,
                    "input_param": 1,
                    "input_value": 8,
                    "value": 16,
                    "value_to_find": 4
                },
                "uVar1": {
                    "found_value": 16,
                    "result": 13,
                    "value_found": 2
                }
            },
            "called": [
                "FUN_08003506"
            ],
            "calling": [
                "FUN_0800447c",
                "FUN_08003cc8"
            ],
            "code": "\nundefined4 find_value_or_default_0800351e(int value)\n\n{\n  undefined4 found_value;\n  \n  if (value != 0) {\n    found_value = find_value_in_array_08003506();\n    return found_value;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "find_value_or_default_0800351e",
            "entrypoint": "0x0800351e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800351e": "find_value_or_default_0800351e",
                "param_1": "value",
                "uVar1": "found_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800352e": {
            "additional_data": {
                "DAT_": {
                    "": 1
                },
                "FUN_0800352e": {
                    "find_and_return_value": 1,
                    "find_index": 1,
                    "find_item_index": 1,
                    "find_next_occurrence": 1,
                    "find_value": 2,
                    "find_value_by_key": 1,
                    "find_value_from_array": 1,
                    "find_value_in_array": 12,
                    "find_value_index": 10,
                    "find_value_offset": 1
                },
                "PTR_": {
                    "": 1
                },
                "break": {
                    "found_value": 1
                },
                "param_1": {
                    "item": 1,
                    "key": 1,
                    "search_value": 1,
                    "target_value": 10,
                    "value": 10,
                    "value_to_find": 8
                },
                "param_2": {
                    "array": 18,
                    "array_of_pairs": 1,
                    "array_of_values": 3,
                    "array_ptr": 4,
                    "array_values": 1,
                    "data_array": 1,
                    "item_list": 1,
                    "short_array": 1,
                    "value_list": 1
                },
                "ptr_2": {
                    "current_element": 1
                },
                "return": {
                    "found_index": 1,
                    "found_value": 1
                }
            },
            "called": [
                "FUN_0800352e"
            ],
            "calling": [
                "FUN_0800354a",
                "FUN_0800352e"
            ],
            "code": "\nundefined4 find_value_in_array_0800352e(int target_value,short *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      found_index 0xffffffff;\n    }\n    if (*array == target_value) found_value;\n    array = array + 6;\n  }\n  found_index *(undefined4 *)(array + 4);\n}\n\n",
            "current_name": "find_value_in_array_0800352e",
            "entrypoint": "0x0800352e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800352e": "find_value_in_array_0800352e",
                "break": "found_value",
                "param_1": "target_value",
                "param_2": "array",
                "return": "found_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800354a": {
            "additional_data": {
                "FUN_0800354a": {
                    "find_value": 3,
                    "find_value_or_default": 7,
                    "find_value_or_neg1": 3,
                    "find_value_or_neg_1": 1,
                    "find_value_or_negative": 5,
                    "find_value_or_negative_one": 3,
                    "find_value_or_return": 1,
                    "find_value_or_return_neg1": 1,
                    "find_value_or_return_negative_one": 4,
                    "get_array_value": 2,
                    "get_value_from_array": 1
                },
                "param_1": {
                    "input": 2,
                    "input_value": 10,
                    "value": 16,
                    "value_to_find": 3
                },
                "uVar1": {
                    "array_value": 1,
                    "found_value": 21,
                    "result": 9
                }
            },
            "called": [
                "FUN_0800352e"
            ],
            "calling": [
                "FUN_0800339c",
                "FUN_08003978",
                "FUN_08003380",
                "FUN_08003414"
            ],
            "code": "\nundefined4 find_value_or_return_negative_one_0800354a(int value)\n\n{\n  undefined4 found_value;\n  \n  if (value == -1) {\n    return 0xffffffff;\n  }\n  found_value = find_value_in_array_0800352e();\n  return found_value;\n}\n\n",
            "current_name": "find_value_or_return_negative_one_0800354a",
            "entrypoint": "0x0800354a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800354a": "find_value_or_return_negative_one_0800354a",
                "param_1": "value",
                "uVar1": "found_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800355e": {
            "additional_data": {
                "FUN_0800355e": {
                    "check_match": 3,
                    "check_param": 1,
                    "check_param_in_array": 1,
                    "check_value_in_array": 3,
                    "check_value_in_list": 1,
                    "check_value_presence": 1,
                    "compare_param_and_array": 1,
                    "find_in_array": 1,
                    "find_index": 1,
                    "find_integer_in_array": 1,
                    "find_value": 4,
                    "find_value_in_array": 10,
                    "find_value_index": 2,
                    "search_value_in_array": 1
                },
                "break": {
                    "found_match": 1,
                    "value_found": 1
                },
                "param_1": {
                    "input_value": 2,
                    "search_integer": 1,
                    "search_value": 2,
                    "target": 1,
                    "target_value": 4,
                    "value": 13,
                    "value_to_check": 1,
                    "value_to_find": 7
                },
                "param_2": {
                    "array": 20,
                    "array_of_values": 4,
                    "array_ptr": 2,
                    "data_array": 2,
                    "list": 1,
                    "short_array": 1,
                    "value_array": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004110"
            ],
            "code": "\nundefined4 find_value_in_array_0800355e(int value,short *array)\n\n{\n  if (value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (value == *array) found_match;\n    array = array + 6;\n  }\n  return 1;\n}\n\n",
            "current_name": "find_value_in_array_0800355e",
            "entrypoint": "0x0800355e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800355e": "find_value_in_array_0800355e",
                "break": "found_match",
                "param_1": "value",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003582": {
            "additional_data": {
                "FUN_08003582": {
                    "compare_and_return_if_equal": 1,
                    "compare_and_return_if_not_equal": 1,
                    "compare_and_return_non_zero": 3,
                    "compare_and_return_smaller": 2,
                    "compare_and_return_zero": 2,
                    "compare_and_return_zero_if_not_equal": 1,
                    "compare_and_return_zero_param": 1,
                    "find_common_value": 2,
                    "find_non_matching_param": 1,
                    "find_non_zero_param": 1,
                    "find_nonzero": 2,
                    "find_nonzero_param": 7,
                    "find_nonzero_value": 1,
                    "get_non_zero_value": 1,
                    "get_nonzero_parameter": 1,
                    "get_nonzero_value": 1,
                    "return_smallest_nonzero_parameter": 1,
                    "return_value_if_not_equal": 1,
                    "select_minimum": 1
                },
                "param_1": {
                    "a": 3,
                    "first_param": 4,
                    "first_parameter": 1,
                    "input1": 2,
                    "input_1": 2,
                    "num1": 4,
                    "number1": 1,
                    "result": 1,
                    "value1": 10,
                    "value_1": 3
                },
                "param_2": {
                    "b": 3,
                    "input2": 2,
                    "input_2": 2,
                    "num2": 4,
                    "number2": 1,
                    "result": 1,
                    "second_param": 4,
                    "second_parameter": 1,
                    "value2": 10,
                    "value_2": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08003978"
            ],
            "code": "\nint find_nonzero_param_08003582(int value1,int value2)\n\n{\n  if (value1 != value2) {\n    if (value1 == 0) {\n      return value2;\n    }\n    if (value2 == 0) {\n      return value1;\n    }\n    value1 = 0;\n  }\n  return value1;\n}\n\n",
            "current_name": "find_nonzero_param_08003582",
            "entrypoint": "0x08003582",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003582": "find_nonzero_param_08003582",
                "param_1": "value1",
                "param_2": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003594": {
            "additional_data": {
                "DAT_20000188": {
                    "call_back_function": 1,
                    "callback": 1,
                    "callback_function": 13,
                    "callback_function_pointer": 5,
                    "callback_function_ptr": 1,
                    "callback_pointer": 1,
                    "function_pointer": 1
                },
                "DAT_200001ac": {
                    "callback_arg": 1,
                    "callback_argument": 1,
                    "callback_data": 5,
                    "callback_function_argument": 1,
                    "callback_function_param": 1,
                    "callback_function_parameter": 5,
                    "callback_parameter": 8,
                    "data": 1,
                    "function_argument": 1,
                    "input_data": 1,
                    "parameter": 1
                },
                "FUN_08003594": {
                    "execute_call_back": 1,
                    "execute_callback": 15,
                    "execute_callback_function": 12,
                    "execute_callback_if_available": 1,
                    "execute_callback_if_exists": 1,
                    "execute_function": 1
                },
                "callback": {
                    "callback": 1
                },
                "callbackFunction": {
                    "callback_function": 1
                },
                "code": {
                    "callback_function": 3
                },
                "executeCallback": {
                    "call_callback_function": 1,
                    "execute_callback": 2
                },
                "execute_callback_function": {
                    "execute_callback_function": 1
                },
                "void": {
                    "void": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_0800262c"
            ],
            "code": "\nvoid execute_callback_function_08003594(void)\n\n{\n  if (DAT_20000188 != (callback_function *)0x0) {\n    (*DAT_20000188)(DAT_200001ac);\n  }\n  return;\n}\n\n",
            "current_name": "execute_callback_function_08003594",
            "entrypoint": "0x08003594",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003594": "execute_callback_function_08003594",
                "code": "callback_function"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080035bc": {
            "additional_data": {
                "0x24003010": {
                    "memory_value": 1
                },
                "FUN_080035bc": {
                    "configure_peripheral": 1,
                    "initialize_hardware": 2,
                    "initialize_memory": 4,
                    "initialize_peripheral": 2,
                    "initialize_registers": 3,
                    "initialize_settings": 2,
                    "initialize_system": 17
                },
                "_DAT_40023800": {
                    "config_register": 1,
                    "control_flags": 1,
                    "control_reg": 2,
                    "control_register": 14,
                    "data_register": 1,
                    "gpio_configuration_register": 1,
                    "gpio_control_register": 1,
                    "gpio_registers": 1,
                    "interrupt_control_register": 1,
                    "peripheral_configuration": 1,
                    "register_value": 3,
                    "system_config": 2,
                    "temp_register": 1,
                    "var3": 1
                },
                "_DAT_40023804": {
                    "base_address": 9,
                    "base_address_register": 1,
                    "baud_rate_register": 1,
                    "config": 1,
                    "config_register": 1,
                    "control_register": 2,
                    "flag2": 1,
                    "gpio_base_address": 3,
                    "io_control_register": 1,
                    "mem_base_addr": 1,
                    "memory_address": 3,
                    "memory_base_address": 1,
                    "peripheral_address": 1,
                    "peripheral_base_address": 1,
                    "system_address": 1,
                    "var2": 1
                },
                "_DAT_40023808": {
                    "data_register": 1,
                    "flag": 2,
                    "flag1": 1,
                    "peripheral_status": 1,
                    "status_flag": 1,
                    "status_register": 2,
                    "var1": 1
                },
                "_DAT_4002380c": {
                    "counter": 3,
                    "counter_register": 1,
                    "data_register": 1,
                    "gpio_status_register": 1,
                    "interrupt_register": 1,
                    "memory_control_register": 1,
                    "parameter": 1,
                    "status_register": 2,
                    "temp_variable": 1,
                    "var4": 1
                },
                "_DAT_e000ed08": {
                    "exception_handler": 1,
                    "exception_register": 3,
                    "interrupt_config": 1,
                    "interrupt_control": 1,
                    "interrupt_control_register": 2,
                    "interrupt_en_reg": 1,
                    "interrupt_enable": 1,
                    "interrupt_enable_register": 6,
                    "interrupt_flag": 1,
                    "interrupt_flags": 1,
                    "interrupt_register": 3,
                    "nested_interrupts": 1,
                    "reset_control_register": 1,
                    "system_control_register": 4,
                    "system_interrupt_control": 1,
                    "system_reset_register": 1,
                    "system_status": 1,
                    "var5": 1
                },
                "void": {
                    "": 1
                }
            },
            "called": [],
            "calling": [
                "entry"
            ],
            "code": "\n\n\nvoid initialize_system_080035bc(void)\n\n{\n  _DAT_40023808 = 0;\n  _DAT_40023804 = 0x24003010;\n  _DAT_40023800 = _DAT_40023800 & 0xfef2ffff | 1;\n  _DAT_4002380c = 0;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "current_name": "initialize_system_080035bc",
            "entrypoint": "0x080035bc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080035bc": "initialize_system_080035bc"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080035fc": {
            "additional_data": {
                "0x40000000": {
                    "register_2_mask": 1
                },
                "0x40000400": {
                    "register_2_mask_2": 1
                },
                "0x40000800": {
                    "register_2_mask_3": 1
                },
                "0x40000c00": {
                    "register_2_mask_4": 1
                },
                "0x40001000": {
                    "register_2_mask_5": 1
                },
                "0x40001400": {
                    "register_2_mask_6": 1
                },
                "0x40001800": {
                    "register_2_mask_7": 1
                },
                "0x40001c00": {
                    "register_2_mask_8": 1
                },
                "0x40002000": {
                    "register_2_mask_9": 1
                },
                "0x40010000": {
                    "register_1_mask": 1
                },
                "0x40010400": {
                    "register_1_mask_2": 1
                },
                "0x40014000": {
                    "register_1_mask_3": 1
                },
                "0x40014400": {
                    "register_1_mask_4": 1
                },
                "0x40014800": {
                    "register_1_mask_5": 1
                },
                "FUN_080035fc": {
                    "clear_flag_bits": 1,
                    "clear_flags": 1,
                    "set_memory_bits": 1,
                    "update_config": 1,
                    "update_configuration": 2,
                    "update_data": 3,
                    "update_data_according_to_param": 1,
                    "update_data_based_on_value": 2,
                    "update_data_registers": 1,
                    "update_flags_based_on_param": 5,
                    "update_flags_based_on_value": 3,
                    "update_memory_config": 1,
                    "update_memory_flags": 1,
                    "update_memory_values": 1,
                    "update_register_value": 1,
                    "update_registers": 5,
                    "update_settings": 1
                },
                "_DAT_40023840": {
                    "configuration_value1": 1,
                    "data2": 3,
                    "data_register1": 1,
                    "data_register_a": 1,
                    "data_register_b": 1,
                    "display_control2": 1,
                    "flag2": 3,
                    "flag_b": 1,
                    "flag_register_b": 1,
                    "hardware_register2": 1,
                    "memory_config2": 1,
                    "memory_flag_b": 1,
                    "memory_value_b": 1,
                    "register2": 4,
                    "register2_value": 1,
                    "register_2": 1,
                    "register_b": 5,
                    "register_value_1": 1
                },
                "_DAT_40023844": {
                    "configuration_value2": 1,
                    "data1": 3,
                    "data_register2": 1,
                    "data_register_a": 1,
                    "data_register_b": 1,
                    "display_control1": 1,
                    "flag1": 3,
                    "flag_a": 1,
                    "flag_register_a": 1,
                    "hardware_register1": 1,
                    "memory_config1": 1,
                    "memory_flag_a": 1,
                    "memory_value_a": 1,
                    "register1": 4,
                    "register1_value": 1,
                    "register_1": 1,
                    "register_a": 5,
                    "register_value_2": 1
                },
                "param": {
                    "param": 1
                },
                "param_1": {
                    "config_value": 4,
                    "data": 2,
                    "data_to_update": 1,
                    "data_value": 1,
                    "flag": 1,
                    "flag_pointer": 1,
                    "input_value": 1,
                    "memory_address": 2,
                    "memory_value": 1,
                    "param": 5,
                    "register_value": 3,
                    "settings": 1,
                    "value": 6,
                    "value_to_update": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800340c"
            ],
            "code": "\n\n\nvoid update_data_registers_080035fc(int *value)\n\n{\n  if (*value == 0x40010000) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffffffe;\n  }\n  if (*value == 0x40000000) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffe;\n  }\n  if (*value == 0x40000400) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffd;\n  }\n  if (*value == 0x40000800) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffb;\n  }\n  if (*value == 0x40000c00) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffff7;\n  }\n  if (*value == 0x40001000) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffef;\n  }\n  if (*value == 0x40001400) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffdf;\n  }\n  if (*value == 0x40010400) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffffffd;\n  }\n  if (*value == 0x40014000) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffeffff;\n  }\n  if (*value == 0x40014400) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffdffff;\n  }\n  if (*value == 0x40014800) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffbffff;\n  }\n  if (*value == 0x40001800) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffbf;\n  }\n  if (*value == 0x40001c00) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffff7f;\n  }\n  if (*value == 0x40002000) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffeff;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_registers_080035fc",
            "entrypoint": "0x080035fc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080035fc": "update_data_registers_080035fc",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003750": {
            "additional_data": {
                "FUN_08003750": {
                    "decrease_by_four": 1,
                    "subtract_by_four": 2,
                    "subtract_four": 27,
                    "subtract_four_from_value": 1
                },
                "PTR_variable": {
                    "new_variable": 1
                },
                "auto_generated_variable_1": {
                    "result": 1
                },
                "param_1": {
                    "input": 6,
                    "input_num": 1,
                    "input_number": 4,
                    "input_value": 6,
                    "num": 4,
                    "number": 2,
                    "original_num": 1,
                    "result": 4,
                    "updated_value": 1,
                    "val": 1,
                    "value": 1
                },
                "param_2": {
                    "new_param": 1,
                    "new_param_name_2": 1,
                    "output": 1,
                    "temp": 1
                },
                "param_3": {
                    "result": 1
                },
                "result": {
                    "output": 1
                },
                "return": {
                    "result": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_0800376e",
                "FUN_08003754"
            ],
            "code": "\nint subtract_by_four_08003750(int input)\n\n{\n  result input + -4;\n}\n\n",
            "current_name": "subtract_by_four_08003750",
            "entrypoint": "0x08003750",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003750": "subtract_by_four_08003750",
                "param_1": "input",
                "return": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003754": {
            "additional_data": {
                "0x0": {
                    "null_pointer": 4,
                    "null_ptr": 1
                },
                "0x18": {
                    "condition_offset": 3,
                    "flag_offset": 1,
                    "offset_to_check": 1
                },
                "0x48": {
                    "callback_offset": 1,
                    "function_offset": 5,
                    "function_ptr_offset": 1
                },
                "FUN_08003754": {
                    "execute_callback": 5,
                    "execute_callback_function": 1,
                    "execute_callback_if_condition_is_met": 1,
                    "execute_callback_if_condition_met": 1,
                    "execute_callback_if_condition_true": 1,
                    "execute_callback_if_enabled": 3,
                    "execute_callback_if_flag_set": 1,
                    "execute_code": 1,
                    "execute_conditional": 1,
                    "execute_function": 1,
                    "execute_function_if_condition_met": 3,
                    "execute_function_if_condition_true": 2,
                    "execute_function_if_needed": 1,
                    "execute_if_condition_is_met": 1,
                    "execute_if_condition_met": 2,
                    "execute_if_function_exists": 1,
                    "execute_if_param_valid": 1,
                    "execute_if_valid": 1,
                    "execute_if_valid_code": 1,
                    "execute_subtract_by_four": 1,
                    "execute_subtraction": 1
                },
                "PTR_08003748": {
                    "function_pointer_address": 1
                },
                "code": {
                    "callback_function": 3,
                    "callback_type": 1,
                    "function_pointer": 4,
                    "function_type": 1
                },
                "iVar1": {
                    "callback": 1,
                    "callback_address": 1,
                    "callback_func": 1,
                    "callback_function": 2,
                    "callback_pointer": 1,
                    "callback_ptr": 1,
                    "callback_result": 2,
                    "function_pointer": 1,
                    "result": 19,
                    "subtract_result": 1,
                    "subtracted_value": 1
                },
                "param_1": {
                    "callback_arg": 1,
                    "callback_argument": 1,
                    "callback_data": 5,
                    "callback_input": 1,
                    "callback_param": 3,
                    "callback_parameter": 2,
                    "data": 1,
                    "function_parameter": 1,
                    "input": 4,
                    "input_param": 5,
                    "input_parameter": 1,
                    "input_value": 5,
                    "parameter": 1
                },
                "subtract_by_four_08003750": {
                    "calculate_offset": 2,
                    "find_callback_address": 1,
                    "get_callback_address": 1,
                    "get_callback_func": 1,
                    "get_callback_function": 1,
                    "get_callback_function_offset": 1,
                    "get_callback_function_pointer": 1,
                    "get_callback_pointer": 1,
                    "get_callback_ptr": 1,
                    "get_function_address": 3,
                    "get_function_pointer": 5,
                    "perform_subtraction": 1,
                    "subtract_by_four": 2,
                    "subtract_four": 2,
                    "subtraction_function": 1
                }
            },
            "called": [
                "FUN_08003750"
            ],
            "calling": [
                "FUN_080026ce"
            ],
            "code": "\nvoid execute_callback_if_enabled_08003754(int input_param)\n\n{\n  int result;\n  \n  result = get_function_pointer();\n  if ((*(function_pointer **)(result + 0x48) != (function_pointer *)0x0) && (*(char *)(input_param + 0x18) == '\\x01')) {\n    (**(function_pointer **)(result + 0x48))(result,0);\n  }\n  return;\n}\n\n",
            "current_name": "execute_callback_if_enabled_08003754",
            "entrypoint": "0x08003754",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003754": "execute_callback_if_enabled_08003754",
                "code": "function_pointer",
                "iVar1": "result",
                "param_1": "input_param",
                "subtract_by_four_08003750": "get_function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800376e": {
            "additional_data": {
                "0x44": {
                    "function_offset": 1,
                    "offset": 4
                },
                "FUN_0800376e": {
                    "execute_callback": 4,
                    "execute_callback_function": 1,
                    "execute_code_from_address": 1,
                    "execute_function": 5,
                    "execute_function_if_available": 1,
                    "execute_function_if_exists": 1,
                    "execute_function_if_not_null": 1,
                    "execute_if_valid_function": 2,
                    "execute_subroutine": 3,
                    "execute_subtract_and_call": 2,
                    "execute_subtract_by_four": 3,
                    "execute_subtract_by_four_and_call": 1,
                    "execute_subtract_by_four_function": 1,
                    "execute_subtracted_function": 1,
                    "execute_subtraction": 3,
                    "execute_subtraction_function": 1
                },
                "code": {
                    "function_pointer": 8
                },
                "iVar1": {
                    "callback_function_ptr": 1,
                    "function_address": 2,
                    "function_pointer": 1,
                    "function_ptr": 1,
                    "result": 25,
                    "subtraction_result": 1
                },
                "subtract_by_four_08003750": {
                    "calculate_subtraction": 1,
                    "get_callback_address": 3,
                    "get_callback_function_address": 1,
                    "get_callback_function_ptr": 1,
                    "get_function_address": 3,
                    "get_function_address_offset": 1,
                    "get_function_pointer": 6,
                    "get_function_ptr": 1,
                    "get_subtraction_result": 3,
                    "get_subtraction_value": 1,
                    "perform_subtraction": 2,
                    "subtract_and_return": 1,
                    "subtract_by_four": 5,
                    "subtract_by_four_function": 1
                }
            },
            "called": [
                "FUN_08003750"
            ],
            "calling": [
                "FUN_080026ce"
            ],
            "code": "\nvoid execute_if_valid_function_0800376e(void)\n\n{\n  int result;\n  \n  result = get_function_pointer();\n  if (*(function_pointer **)(result + 0x44) != (function_pointer *)0x0) {\n    (**(function_pointer **)(result + 0x44))();\n  }\n  return;\n}\n\n",
            "current_name": "execute_if_valid_function_0800376e",
            "entrypoint": "0x0800376e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800376e": "execute_if_valid_function_0800376e",
                "code": "function_pointer",
                "iVar1": "result",
                "subtract_by_four_08003750": "get_function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800377c": {
            "additional_data": {
                "DAT_200001b0": {
                    "flag1": 12,
                    "flag_1": 8
                },
                "DAT_200001d4": {
                    "flag2": 12,
                    "flag_2": 8
                },
                "FUN_0800377c": {
                    "check_and_process_flags": 3,
                    "handle_flags": 1,
                    "process_flag_check": 3,
                    "process_flagged_data": 1,
                    "process_flags": 19,
                    "process_flags_if_set": 3,
                    "process_important_flags": 1
                },
                "original_parameter_name_1": {
                    "new_parameter_name_1": 1
                },
                "original_parameter_name_2": {
                    "new_parameter_name_2": 1
                },
                "original_variable_name_1": {
                    "new_variable_name_1": 1
                },
                "original_variable_name_2": {
                    "new_variable_name_2": 1
                },
                "process_flags_080026ce": {
                    "do_flag_processing": 1,
                    "process_flags": 6
                }
            },
            "called": [
                "FUN_080026ce"
            ],
            "calling": [],
            "code": "\nvoid process_flags_if_set_0800377c(void)\n\n{\n  if (DAT_200001b0 != 0) {\n    process_flags();\n  }\n  if (DAT_200001d4 != 0) {\n    process_flags();\n  }\n  return;\n}\n\n",
            "current_name": "process_flags_if_set_0800377c",
            "entrypoint": "0x0800377c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800377c": "process_flags_if_set_0800377c",
                "process_flags_080026ce": "process_flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800387c": {
            "additional_data": {
                "FUN_0800387c": {
                    "decrement_by_4": 1,
                    "subtract_four": 30
                },
                "local_1": {
                    "result": 1
                },
                "param_1": {
                    "input": 10,
                    "input_num": 2,
                    "input_number": 3,
                    "input_value": 4,
                    "num": 6,
                    "number": 1,
                    "original_value": 1,
                    "output": 1,
                    "result": 3
                },
                "param_2": {
                    "input2": 1,
                    "new_num": 1,
                    "new_parameter_name_2": 2,
                    "output": 2,
                    "unused": 1
                },
                "param_n": {
                    "new_parameter_name_n": 2
                },
                "var_1": {
                    "result": 2
                },
                "var_2": {
                    "new_variable_name_2": 2
                },
                "var_n": {
                    "new_variable_name_n": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_080038d0",
                "FUN_08003880",
                "FUN_08003900"
            ],
            "code": "\nint subtract_four_0800387c(int input)\n\n{\n  return input + -4;\n}\n\n",
            "current_name": "subtract_four_0800387c",
            "entrypoint": "0x0800387c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800387c": "subtract_four_0800387c",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003880": {
            "additional_data": {
                "FUN_08003880": {
                    "process_data": 16,
                    "process_input": 10,
                    "process_input_parameters": 1,
                    "process_params": 2,
                    "process_params_or_input": 2
                },
                "code": {
                    "function_pointer": 1
                },
                "iVar1": {
                    "result": 28,
                    "result_var": 1,
                    "subtracted_value": 1,
                    "temp_var": 1
                },
                "param_1": {
                    "base_address": 2,
                    "buffer": 1,
                    "data_pointer": 1,
                    "data_ptr": 5,
                    "input": 3,
                    "input_data": 8,
                    "input_param": 6,
                    "input_param_1": 1,
                    "input_ptr": 4
                },
                "param_2": {
                    "condition_param": 1,
                    "flag": 25,
                    "flag_param": 2,
                    "input_param_2": 1,
                    "is_zero": 1,
                    "zero_flag": 1
                },
                "param_3": {
                    "check_param": 3,
                    "check_val": 1,
                    "check_value": 8,
                    "comp_value": 1,
                    "compare_val": 1,
                    "comparison_param": 1,
                    "condition": 5,
                    "data": 1,
                    "data_value": 1,
                    "input_param_3": 1,
                    "param_value": 1,
                    "size": 1,
                    "value": 5,
                    "value_to_check": 1
                },
                "param_4": {
                    "additional_param": 1,
                    "another_param": 1,
                    "callback": 4,
                    "callback_func": 2,
                    "code": 1,
                    "code_ptr": 2,
                    "data": 1,
                    "extra_param": 2,
                    "input_param_4": 1,
                    "param": 3,
                    "param_4": 4,
                    "param_four": 1,
                    "param_ptr": 1,
                    "param_value": 1,
                    "undefined_param": 4,
                    "unknown_param": 1,
                    "unknown_val": 1
                },
                "process_input_data_080014ec": {
                    "process_input": 1,
                    "process_input_data": 29
                },
                "process_params_08001460": {
                    "process_parameters": 16,
                    "process_params": 13,
                    "process_params_helper": 1
                },
                "subtract_four_0800387c": {
                    "calculate_offset": 1,
                    "calculate_result": 1,
                    "get_result": 1,
                    "get_temp_var": 1,
                    "subtract_four": 25
                }
            },
            "called": [
                "FUN_08001460",
                "FUN_0800387c",
                "FUN_080014ec"
            ],
            "calling": [
                "FUN_0800165a"
            ],
            "code": "\nvoid process_data_08003880(int input_data,int flag,int check_value,undefined4 callback)\n\n{\n  int result;\n  \n  result = subtract_four();\n  if (check_value == *(int *)(input_data + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(result + 0x88) = 0;\n      *(undefined *)(result + 0x5e) = 0;\n      if (*(function_pointer **)(result + 100) != (function_pointer *)0x0) {\n        (**(function_pointer **)(result + 100))();\n      }\n      process_parameters(input_data,result + 0x68,*(undefined *)(result + 0x88),8);\n      return;\n    }\n    *(undefined *)(result + 0x5e) = 1;\n    process_input_data(input_data,result + 0x68,0x20,8,callback);\n  }\n  return;\n}\n\n",
            "current_name": "process_data_08003880",
            "entrypoint": "0x08003880",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003880": "process_data_08003880",
                "code": "function_pointer",
                "iVar1": "result",
                "param_1": "input_data",
                "param_2": "flag",
                "param_3": "check_value",
                "param_4": "callback",
                "process_input_data_080014ec": "process_input_data",
                "process_params_08001460": "process_parameters",
                "subtract_four_0800387c": "subtract_four"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080038d0": {
            "additional_data": {
                "FUN_080038d0": {
                    "execute_action": 1,
                    "execute_callback_if_condition_met": 1,
                    "execute_callback_if_conditions_met": 1,
                    "execute_command": 1,
                    "execute_conditional_action": 1,
                    "execute_function": 6,
                    "execute_function_and_initialize_data_structure": 3,
                    "execute_if_valid_condition": 1,
                    "execute_subtraction": 1,
                    "execute_subtraction_function": 1,
                    "initialize_and_call_function": 2,
                    "initialize_and_execute": 7,
                    "initialize_and_execute_function": 2,
                    "initialize_data": 2
                },
                "code": {
                    "function_pointer": 4,
                    "function_ptr": 1
                },
                "iVar1": {
                    "callback_address": 1,
                    "function_pointer": 1,
                    "result": 22,
                    "result_value": 1,
                    "subtract_result": 1,
                    "subtracted_value": 2,
                    "subtraction_result": 2,
                    "temp_variable": 1
                },
                "initialize_data_structure_08001578": {
                    "initialize_data_structure": 25
                },
                "param_1": {
                    "argument": 3,
                    "command": 1,
                    "data": 5,
                    "data_structure_param": 1,
                    "initial_value": 1,
                    "input_argument": 1,
                    "input_data": 1,
                    "input_param": 2,
                    "input_parameter": 5,
                    "param": 8,
                    "parameter": 1,
                    "parameter_1": 1,
                    "user_input": 1
                },
                "subtract_four_0800387c": {
                    "calculate_offset": 1,
                    "get_action": 1,
                    "get_callback_address": 1,
                    "get_code_structure": 1,
                    "get_function_address": 2,
                    "get_function_and_params": 1,
                    "get_function_data": 1,
                    "get_function_pointer": 10,
                    "get_function_ptr": 1,
                    "get_function_result": 1,
                    "get_offset": 1,
                    "get_result_function": 1,
                    "get_subtracted_result": 1,
                    "get_subtraction_function": 1,
                    "subtract_four": 1
                }
            },
            "called": [
                "FUN_0800387c",
                "FUN_08001578"
            ],
            "calling": [
                "FUN_08001bfc",
                "FUN_08001ab0",
                "FUN_08001684"
            ],
            "code": "\nvoid execute_function_and_initialize_data_structure_080038d0(undefined4 param)\n\n{\n  int result;\n  \n  result = get_function_pointer();\n  if (((*(function_pointer **)(result + 0x60) != (function_pointer *)0x0) && (*(char *)(result + 0x5e) == '\\x01')) &&\n     (*(char *)(result + 0x2c) != ' ')) {\n    (**(function_pointer **)(result + 0x60))(result + 0x68);\n  }\n  initialize_data_structure(param);\n  return;\n}\n\n",
            "current_name": "execute_function_and_initialize_data_structure_080038d0",
            "entrypoint": "0x080038d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080038d0": "execute_function_and_initialize_data_structure_080038d0",
                "code": "function_pointer",
                "iVar1": "result",
                "initialize_data_structure_08001578": "initialize_data_structure",
                "param_1": "param",
                "subtract_four_0800387c": "get_function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003900": {
            "additional_data": {
                "FUN_08003900": {
                    "check_and_initialize_data": 1,
                    "check_and_initialize_data_structure": 7,
                    "initialize_data_structure": 2,
                    "initialize_data_structure_if_needed": 3,
                    "initialize_data_structure_if_not_initialized": 1,
                    "initialize_data_structure_if_subtracted_4_is_zero": 1,
                    "initialize_if_data_not_initialized": 1,
                    "initialize_if_data_not_present": 1,
                    "initialize_if_data_structure_is_not_initialized": 1,
                    "initialize_if_data_structure_not_initialized": 2,
                    "initialize_if_flag_is_zero": 1,
                    "initialize_if_not_initialized": 4,
                    "initialize_if_structure_empty": 1,
                    "initialize_or_skip": 2,
                    "initialize_or_skip_data_structure": 1,
                    "initialize_structure_if_not_initialized": 1,
                    "process_data_structure": 1
                },
                "PTR_08001578": {
                    "data_structure": 1
                },
                "iVar1": {
                    "four_subtraction_result": 1,
                    "offset": 2,
                    "result": 25,
                    "result_of_subtract_four": 1,
                    "subtract_result": 1,
                    "subtracted_value": 1
                },
                "initialize_data_structure_08001578": {
                    "initialize_data_structure": 14,
                    "initialize_structure": 1,
                    "perform_initialization_process_08001578": 1
                },
                "param_1": {
                    "data": 4,
                    "data_parameter": 1,
                    "data_structure": 1,
                    "data_structure_handle": 1,
                    "data_structure_parameter": 1,
                    "input": 2,
                    "input_data": 2,
                    "input_param": 10,
                    "input_parameter": 4,
                    "param": 5
                },
                "subtract_four_0800387c": {
                    "calculate_offset": 2,
                    "calculate_value": 1,
                    "compute_offset": 1,
                    "get_index_to_check": 1,
                    "get_initialization_address": 1,
                    "get_offset": 4,
                    "get_result_by_subtracting_four_0800387c": 1,
                    "get_result_from_subtracting_four": 1,
                    "get_subtracted_value": 1,
                    "subtract_four": 2
                }
            },
            "called": [
                "FUN_0800387c",
                "FUN_08001578"
            ],
            "calling": [
                "FUN_08001ab0"
            ],
            "code": "\nvoid initialize_if_data_structure_is_not_initialized_08003900(undefined4 input_param)\n\n{\n  int result;\n  \n  result = get_offset();\n  if (*(char *)(result + 0x5f) == '\\0') {\n    initialize_data_structure(input_param);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_if_data_structure_is_not_initialized_08003900",
            "entrypoint": "0x08003900",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003900": "initialize_if_data_structure_is_not_initialized_08003900",
                "iVar1": "result",
                "initialize_data_structure_08001578": "initialize_data_structure",
                "param_1": "input_param",
                "subtract_four_0800387c": "get_offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003978": {
            "additional_data": {
                "FUN_08003978": {
                    "configure_peripheral_uart": 1,
                    "configure_uart": 1,
                    "configure_uart_pin": 1,
                    "configure_uart_pins": 14,
                    "initialize_and_configure_uart_pins": 1,
                    "initialize_uart": 1,
                    "initialize_uart_peripheral": 3,
                    "initialize_uart_pins": 7,
                    "setup_uart_pins": 1,
                    "update_peripheral_settings": 1
                },
                "SETUP_ADDRESS_VAL": {
                    "set_memory_addr_val": 1
                },
                "SETUP_DATA_STRUCTURE": {
                    "initialize_data_structure": 1
                },
                "UART_PINS_ERROR_MSG": {
                    "uart_pins_error_msg": 1
                },
                "UART_PINS_MISMATCH_MSG": {
                    "uart_pins_mismatch_msg": 1
                },
                "find_value_or_return_negative_one_0800354a": {
                    "find_pin_value_or_negative_one": 1,
                    "find_uart_value_or_return_negative_one": 1,
                    "find_value_or_negative_one": 1,
                    "find_value_or_return_negative": 1,
                    "find_value_or_return_negative_one": 1
                },
                "iVar1": {
                    "peripheral1": 4,
                    "peripheral_value1": 1,
                    "pin1_value": 1,
                    "uart1_pin_value": 1,
                    "uart_periph1": 1,
                    "uart_periph_value": 1,
                    "uart_peripheral": 1,
                    "uart_peripheral1": 2,
                    "uart_peripheral_1": 1,
                    "uart_peripheral_value": 1,
                    "uart_peripherals": 1,
                    "uart_pin": 2,
                    "uart_pin1": 1,
                    "uart_pin1_config": 1,
                    "uart_pin1_peripheral": 2,
                    "uart_pin1_val": 1,
                    "uart_pin1_value": 1,
                    "uart_pin_1_peripheral": 1,
                    "uart_pin_1_value": 2,
                    "uart_pin_base_address": 1,
                    "uart_pin_config": 1,
                    "uart_pin_value": 2,
                    "uart_tx_pin_value": 1
                },
                "iVar2": {
                    "peripheral2": 4,
                    "peripheral_pin": 1,
                    "peripheral_pin_config": 1,
                    "peripheral_value2": 1,
                    "pin2_value": 1,
                    "uart2_pin_value": 1,
                    "uart_periph2": 1,
                    "uart_periph_value2": 1,
                    "uart_peripheral": 1,
                    "uart_peripheral2": 2,
                    "uart_peripheral_2": 1,
                    "uart_peripheral_value_2": 1,
                    "uart_peripherals": 1,
                    "uart_pin": 1,
                    "uart_pin2": 1,
                    "uart_pin2_config": 1,
                    "uart_pin2_peripheral": 2,
                    "uart_pin2_val": 1,
                    "uart_pin2_value": 2,
                    "uart_pin_2_peripheral": 1,
                    "uart_pin_2_value": 2,
                    "uart_pin_peripheral": 2,
                    "uart_rx_pin_value": 1
                },
                "initialize_data_structure_08002d72": {
                    "initialize_data_structure": 5,
                    "initialize_uart_data_structure": 1
                },
                "local_1c": {
                    "bit_mask4": 2,
                    "bit_offset1": 1,
                    "bits3": 1,
                    "data_offset": 1,
                    "masked_value": 1,
                    "peripheral_pin_shift2": 1,
                    "pin2_configuration": 1,
                    "pin_mode": 1,
                    "pin_pull_up_down": 1,
                    "pin_special_function": 1,
                    "register_field4": 1,
                    "register_mask": 1,
                    "register_mask_shift": 1,
                    "shift_amount3": 1,
                    "shifted_val2": 1,
                    "shifted_value": 2,
                    "shifted_value2": 3,
                    "shifted_value3": 1,
                    "uart_data_bits": 1,
                    "uart_flags_1c": 1,
                    "uart_pin_1_bit_shift": 1,
                    "uart_pin_2_encoding_shifted": 1,
                    "uart_pin_number": 1,
                    "uart_pin_shift2": 1,
                    "uart_pin_shift_2": 1,
                    "uart_regs_mid": 1,
                    "uart_stop_bits": 1
                },
                "local_20": {
                    "config_value": 1,
                    "constant": 1,
                    "constant3": 1,
                    "constant_val": 1,
                    "constant_value": 4,
                    "data_length": 1,
                    "data_structure_value": 1,
                    "dummy": 1,
                    "memory_address_and_value3": 1,
                    "memory_value": 1,
                    "pin1_gpio_config": 1,
                    "pin_number": 1,
                    "pin_output_type": 1,
                    "register_field3": 1,
                    "register_offset": 1,
                    "register_update_value": 1,
                    "register_value": 2,
                    "shift_amount2": 1,
                    "shifted_value2": 1,
                    "uart_data_bits": 1,
                    "uart_flags": 1,
                    "uart_pin_1_settings": 1,
                    "uart_pin_configuration2": 1,
                    "uart_pin_mode": 1,
                    "uart_regs_low": 1,
                    "uart_start_bit": 1
                },
                "local_24": {
                    "bit_mask3": 2,
                    "bit_width1": 1,
                    "bits2": 1,
                    "peripheral_pin_shift": 1,
                    "pin1_alt_config": 1,
                    "pin_field": 1,
                    "pin_mask_24": 1,
                    "pin_shift": 2,
                    "pin_speed": 1,
                    "register_bit_shift": 1,
                    "register_field2": 1,
                    "shift_amount": 2,
                    "shift_amount1": 1,
                    "shifted_bits": 1,
                    "shifted_val": 1,
                    "shifted_value": 2,
                    "shifted_value1": 4,
                    "uart_bit_shift": 1,
                    "uart_mode": 1,
                    "uart_pin_2_bit_shift": 1,
                    "uart_pin_2_encoding_shifted": 1,
                    "uart_pin_shift": 1,
                    "uart_pin_shift1": 1,
                    "uart_regs_high": 1
                },
                "local_28": {
                    "bit_mask2": 4,
                    "bit_position1": 1,
                    "bits1": 1,
                    "bits_shifted": 1,
                    "control_bits": 1,
                    "gpio_pin_config": 1,
                    "peripheral_pin_settings": 1,
                    "peripheral_settings": 1,
                    "pin1_configuration": 1,
                    "pin_config": 3,
                    "pin_configuration": 2,
                    "register_bit_value": 1,
                    "register_field1": 1,
                    "register_update_value": 1,
                    "register_value": 3,
                    "special_value1": 1,
                    "uart2_pin_mask": 1,
                    "uart_bits": 1,
                    "uart_config": 1,
                    "uart_pin_2_encoding": 1,
                    "uart_pin_2_settings": 1,
                    "uart_pin_configuration1": 1,
                    "uart_pin_settings": 1
                },
                "local_2c": {
                    "bit_mask": 7,
                    "bit_mask1": 7,
                    "pin1_mask": 1,
                    "pin_bit": 1,
                    "pin_bit_mask": 1,
                    "pin_mask": 4,
                    "pin_mask1": 1,
                    "tx_pin_mask": 1,
                    "uart1_pin_mask": 1,
                    "uart_bit": 1,
                    "uart_pin_1_bit": 1,
                    "uart_pin_2_mask": 1,
                    "uart_pin_bitmask1": 1,
                    "uart_pin_mask": 3
                },
                "param_1": {
                    "peripheral_array": 1,
                    "pin_config": 3,
                    "pin_configuration": 1,
                    "pin_settings": 1,
                    "pins": 3,
                    "uart_config": 2,
                    "uart_pin": 1,
                    "uart_pin_configuration": 1,
                    "uart_pin_settings": 1,
                    "uart_pins": 16,
                    "uart_pins_config": 1
                },
                "reverse_bits_and_update_registers_08000fb4": {
                    "reverse_bits_and_update_registers": 4,
                    "reverse_bits_and_update_uart_registers": 1,
                    "reverse_bits_update_registers": 1
                },
                "set_memory_address_and_value_080031fc": {
                    "set_address_and_value": 1,
                    "set_memory_address_and_value": 3,
                    "set_memory_and_value": 1,
                    "set_uart_memory_address_and_value": 1
                },
                "uVar3": {
                    "addr_value": 1,
                    "address": 1,
                    "address1": 1,
                    "address_and_value": 1,
                    "address_and_value1": 1,
                    "mem_addr_value1": 1,
                    "mem_address": 1,
                    "mem_address_and_value": 1,
                    "memory_address": 3,
                    "memory_address_and_value": 7,
                    "memory_address_and_value1": 5,
                    "memory_address_value_1": 1,
                    "memory_config1": 1,
                    "memory_value": 2,
                    "uart_memory": 1,
                    "uart_memory_address_and_value": 1,
                    "uart_value": 2
                },
                "uVar4": {
                    "address2": 1,
                    "found_value": 2,
                    "memory_address_and_value2": 1,
                    "memory_address_value_2": 1,
                    "peripheral_value": 1,
                    "pin_config_value": 2,
                    "pin_info": 1,
                    "pin_value": 2,
                    "uart_pin_value": 1,
                    "uart_value": 1,
                    "value": 5,
                    "value1": 5,
                    "value_or_negative_one": 5,
                    "value_or_return": 1,
                    "value_or_return_negative": 1,
                    "value_or_return_negative_one": 1
                }
            },
            "called": [
                "FUN_0800354a",
                "FUN_08004fdc",
                "FUN_08003582",
                "FUN_08000fb4",
                "FUN_080031fc",
                "FUN_08002d72",
                "FUN_080034f4"
            ],
            "calling": [
                "FUN_08003cc8",
                "FUN_08004388"
            ],
            "code": "\n\n\nvoid initialize_and_configure_uart_pins_08003978(int *uart_pins)\n\n{\n  int peripheral1;\n  int peripheral2;\n  undefined4 memory_address_and_value;\n  uint value1;\n  uint bit_mask;\n  uint bit_mask2;\n  uint shifted_value1;\n  undefined4 constant_value;\n  uint shifted_value2;\n  \n  if (uart_pins != (int *)0x0) {\n    peripheral1 = find_value_or_zero_080034f4((int)*(short *)(uart_pins + 0x16),&DAT_08005ca0);\n    peripheral2 = find_value_or_zero_080034f4((int)*(short *)((int)uart_pins + 0x5a),&DAT_08005c10);\n    if ((peripheral2 == 0) || (peripheral1 == 0)) {\n      process_and_decode_data_08004fdc(\"ERROR: at least one UART pin has no peripheral\\n\",peripheral2);\n    }\n    else {\n      peripheral1 = find_nonzero_param_08003582(peripheral1);\n      *uart_pins = peripheral1;\n      if (peripheral1 == 0) {\n        process_and_decode_data_08004fdc(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (peripheral1 == 0x40011000) {\n          _DAT_40023824 = _DAT_40023824 & 0xffffffef;\n          _DAT_40023844 = _DAT_40023844 | 0x10;\n          *(undefined *)(uart_pins + 0x11) = 0;\n          *(undefined *)(uart_pins + 0x17) = 0x25;\n        }\n        else if (peripheral1 == 0x40004400) {\n          _DAT_40023820 = _DAT_40023820 & 0xfffdffff;\n          _DAT_40023840 = _DAT_40023840 | 0x20000;\n          *(undefined *)(uart_pins + 0x11) = 1;\n          *(undefined *)(uart_pins + 0x17) = 0x26;\n        }\n        else if (peripheral1 == 0x40004800) {\n          _DAT_40023820 = _DAT_40023820 & 0xfffbffff;\n          _DAT_40023840 = _DAT_40023840 | 0x40000;\n          *(undefined *)(uart_pins + 0x11) = 2;\n          *(undefined *)(uart_pins + 0x17) = 0x27;\n        }\n        else if (peripheral1 == 0x40004c00) {\n          _DAT_40023820 = _DAT_40023820 & 0xfff7ffff;\n          _DAT_40023840 = _DAT_40023840 | 0x80000;\n          *(undefined *)(uart_pins + 0x11) = 3;\n          *(undefined *)(uart_pins + 0x17) = 0x34;\n        }\n        else if (peripheral1 == 0x40005000) {\n          _DAT_40023820 = _DAT_40023820 & 0xffefffff;\n          _DAT_40023840 = _DAT_40023840 | 0x100000;\n          *(undefined *)(uart_pins + 0x11) = 4;\n          *(undefined *)(uart_pins + 0x17) = 0x35;\n        }\n        else if (peripheral1 == 0x40011400) {\n          _DAT_40023824 = _DAT_40023824 & 0xffffffdf;\n          _DAT_40023844 = _DAT_40023844 | 0x20;\n          *(undefined *)(uart_pins + 0x11) = 5;\n          *(undefined *)(uart_pins + 0x17) = 0x47;\n        }\n        else if (peripheral1 == 0x40007800) {\n          _DAT_40023820 = _DAT_40023820 & 0xbfffffff;\n          _DAT_40023840 = _DAT_40023840 | 0x40000000;\n          *(undefined *)(uart_pins + 0x11) = 6;\n          *(undefined *)(uart_pins + 0x17) = 0x52;\n        }\n        else if (peripheral1 == 0x40007c00) {\n          _DAT_40023820 = _DAT_40023820 & 0x7fffffff;\n          _DAT_40023840 = _DAT_40023840 | 0x80000000;\n          *(undefined *)(uart_pins + 0x11) = 7;\n          *(undefined *)(uart_pins + 0x17) = 0x53;\n        }\n        memory_address_and_value = set_memory_address_and_value((uint)((int)*(short *)((int)uart_pins + 0x5a) << 0x18) >> 0x1c);\n        value1 = find_value_or_return_negative((int)*(short *)((int)uart_pins + 0x5a),&DAT_08005c10);\n        bit_mask = 1 << (*(ushort *)((int)uart_pins + 0x5a) & 0xf) & 0xffff;\n        bit_mask2 = (value1 >> 3 & 1) << 4 | value1 & 7;\n        shifted_value1 = (value1 << 0x1a) >> 0x1e;\n        shifted_value2 = (value1 << 0x11) >> 0x19;\n        constant_value = 3;\n        reverse_bits_and_update_registers(memory_address_and_value,&bit_mask);\n        memory_address_and_value = set_memory_address_and_value((uint)((int)*(short *)(uart_pins + 0x16) << 0x18) >> 0x1c);\n        value1 = find_value_or_return_negative((int)*(short *)(uart_pins + 0x16),&DAT_08005ca0);\n        bit_mask = 1 << (*(ushort *)(uart_pins + 0x16) & 0xf) & 0xffff;\n        bit_mask2 = (value1 >> 3 & 1) << 4 | value1 & 7;\n        shifted_value1 = (value1 << 0x1a) >> 0x1e;\n        reverse_bits_and_update_registers(memory_address_and_value,&bit_mask);\n        (&DAT_200002b4)[*(byte *)(uart_pins + 0x11)] = uart_pins + 1;\n        uart_pins[1] = *uart_pins;\n        uart_pins[2] = uart_pins[0x12];\n        uart_pins[3] = uart_pins[0x13];\n        uart_pins[4] = uart_pins[0x14];\n        uart_pins[5] = uart_pins[0x15];\n        uart_pins[6] = 0xc;\n        uart_pins[7] = 0;\n        uart_pins[8] = 0;\n        initialize_data_structure(uart_pins + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_and_configure_uart_pins_08003978",
            "entrypoint": "0x08003978",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003978": "initialize_and_configure_uart_pins_08003978",
                "find_value_or_return_negative_one_0800354a": "find_value_or_return_negative",
                "iVar1": "peripheral1",
                "iVar2": "peripheral2",
                "initialize_data_structure_08002d72": "initialize_data_structure",
                "local_1c": "shifted_value2",
                "local_20": "constant_value",
                "local_24": "shifted_value1",
                "local_28": "bit_mask2",
                "local_2c": "bit_mask",
                "param_1": "uart_pins",
                "reverse_bits_and_update_registers_08000fb4": "reverse_bits_and_update_registers",
                "set_memory_address_and_value_080031fc": "set_memory_address_and_value",
                "uVar3": "memory_address_and_value",
                "uVar4": "value1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003cc8": {
            "additional_data": {
                "DAT_08005c10": {
                    "default_array": 1
                },
                "DAT_08005ca0": {
                    "value_array": 1
                },
                "DAT_20000030": {
                    "uart_configuration": 1
                },
                "DAT_20000078": {
                    "baud_rate": 2
                },
                "DAT_2000007c": {
                    "some_flag": 1,
                    "stop_bits": 1
                },
                "DAT_20000080": {
                    "another_flag": 1,
                    "parity": 1
                },
                "DAT_20000084": {
                    "data_bits": 1,
                    "error_flag": 1
                },
                "DAT_20000088": {
                    "buffer_size": 2,
                    "value_size": 1
                },
                "DAT_2000008a": {
                    "configured_value": 1,
                    "found_value": 1,
                    "uart_value": 1
                },
                "FUN_08003cc8": {
                    "configure_uart": 1,
                    "initialize_and_configure_uart": 1,
                    "initialize_uart": 21,
                    "initialize_uart_configuration": 4,
                    "initialize_uart_pins": 4
                },
                "find_value_or_default_0800351e": {
                    "find_value_or_default": 3
                },
                "find_value_or_zero_080034f4": {
                    "find_value_or_zero": 3
                },
                "iVar1": {
                    "first_value": 1,
                    "found_value": 2,
                    "result": 1,
                    "value": 6,
                    "value1": 13,
                    "value_found": 7
                },
                "initialize_and_configure_uart_pins_08003978": {
                    "configure_uart_pins": 4,
                    "initialize_uart_pins": 2,
                    "interface_pins_initializer": 1
                },
                "uVar2": {
                    "default_value": 8,
                    "found_value_2": 1,
                    "second_value": 1,
                    "second_value_found": 1,
                    "uart_value": 1,
                    "value": 2,
                    "value2": 15,
                    "value_found_again": 1
                }
            },
            "called": [
                "FUN_08003978",
                "FUN_0800351e",
                "FUN_080034f4"
            ],
            "calling": [
                "FUN_08003d18"
            ],
            "code": "\nvoid initialize_uart_pins_08003cc8(void)\n\n{\n  int value1;\n  undefined4 value2;\n  \n  value1 = find_value_or_zero(0x38,&DAT_08005ca0);\n  if (value1 != 0) {\n    value2 = find_value_or_zero(0x38,&DAT_08005ca0);\n    DAT_2000008a = find_value_or_default(value2,&DAT_08005c10);\n    DAT_20000088 = 0x38;\n    DAT_20000078 = 0x2580;\n    DAT_20000084 = 0;\n    DAT_2000007c = 0;\n    DAT_20000080 = 0;\n    configure_uart_pins(&DAT_20000030);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_uart_pins_08003cc8",
            "entrypoint": "0x08003cc8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003cc8": "initialize_uart_pins_08003cc8",
                "find_value_or_default_0800351e": "find_value_or_default",
                "find_value_or_zero_080034f4": "find_value_or_zero",
                "iVar1": "value1",
                "initialize_and_configure_uart_pins_08003978": "configure_uart_pins",
                "uVar2": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003d18": {
            "additional_data": {
                "1000": {
                    "threshold": 1
                },
                "DAT_08005ca0": {
                    "array_1": 1,
                    "constant_data": 1,
                    "data_array": 1,
                    "input_data": 1
                },
                "DAT_20000074": {
                    "limit": 1,
                    "max_index": 2,
                    "max_value": 3,
                    "uart_limit": 1,
                    "uart_pins": 1,
                    "uart_pins_value": 1
                },
                "DAT_200002b4": {
                    "array_2": 1,
                    "data_array": 3,
                    "input_data_array": 1
                },
                "FUN_08003d18": {
                    "process_and_check_data": 2,
                    "process_and_validate_data": 2,
                    "process_and_validate_input": 1,
                    "process_and_verify_data": 2,
                    "process_and_verify_input": 1,
                    "process_data": 16,
                    "process_input": 6,
                    "process_input_data": 1
                },
                "find_value_or_zero_080034f4": {
                    "find_value_or_zero": 5
                },
                "get_data_value_08000e30": {
                    "get_current_data_value": 1,
                    "get_data_value": 5
                },
                "iVar1": {
                    "data_value": 3,
                    "data_value1": 11,
                    "data_value_1": 12,
                    "data_value_before": 1,
                    "initial_data_value": 2,
                    "initial_value": 1,
                    "previous_data_value": 1
                },
                "iVar2": {
                    "data_value2": 10,
                    "data_value_2": 12,
                    "data_value_found": 1,
                    "found_value": 7,
                    "target_value": 1
                },
                "initialize_uart_pins_08003cc8": {
                    "initialize_pins": 1,
                    "initialize_uart_pins": 12
                },
                "param_1": {
                    "data": 1,
                    "data_size": 1,
                    "data_type": 1,
                    "data_value": 1,
                    "input": 1,
                    "input_address": 1,
                    "input_param": 4,
                    "input_param1": 2,
                    "input_value": 13,
                    "param1": 1,
                    "param_1": 1,
                    "some_param": 1,
                    "status_code": 1,
                    "undefined_param": 2
                },
                "param_2": {
                    "data_mask": 1,
                    "data_param": 1,
                    "data_value": 2,
                    "flag_value": 1,
                    "flags": 4,
                    "initial_result": 1,
                    "initial_value": 1,
                    "input_length": 1,
                    "input_param": 2,
                    "input_param2": 2,
                    "input_value": 7,
                    "input_value_len": 1,
                    "original_result": 1,
                    "output_value": 2,
                    "param2": 1,
                    "param_2": 1,
                    "unsigned_value": 1,
                    "value": 1
                },
                "process_input_data_08002dd0": {
                    "process_data": 3,
                    "process_input_data": 10
                },
                "uVar3": {
                    "count": 1,
                    "counter": 5,
                    "index": 16,
                    "iterator": 1,
                    "loop_counter": 5,
                    "loop_index": 3
                },
                "uVar4": {
                    "input_data": 1
                },
                "uVar5": {
                    "uart_pins": 1
                }
            },
            "called": [
                "FUN_08003cc8",
                "FUN_08002dd0",
                "FUN_08000e30",
                "FUN_080034f4"
            ],
            "calling": [
                "FUN_080040ec"
            ],
            "code": "\nuint process_and_validate_data_08003d18(undefined4 input_value,uint input_value)\n\n{\n  int data_value_1;\n  int data_value_2;\n  uint index;\n  \n  data_value_1 = get_data_value();\n  data_value_2 = find_value_or_zero(0x38,&DAT_08005ca0);\n  if (data_value_2 == 0) {\n    return 0;\n  }\n  for (index = 0;\n      (index < 10 &&\n      (((&DAT_200002b4)[index] == 0 ||\n       (data_value_2 = find_value_or_zero(0x38,&DAT_08005ca0), *(int *)(&DAT_200002b4)[index] != data_value_2))));\n      index = index + 1 & 0xff) {\n  }\n  if (9 < index) {\n    if ((9 < DAT_20000074) && (initialize_uart_pins(), 9 < DAT_20000074)) {\n      return 0;\n    }\n    index = (uint)DAT_20000074;\n  }\n  do {\n    data_value_2 = process_input_data((&DAT_200002b4)[index],input_value,input_value & 0xffff,1000);\n    if (data_value_2 == 0) {\n      return input_value;\n    }\n    data_value_2 = get_data_value();\n  } while ((uint)(data_value_2 - data_value_1) < 1000);\n  return 0;\n}\n\n",
            "current_name": "process_and_validate_data_08003d18",
            "entrypoint": "0x08003d18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003d18": "process_and_validate_data_08003d18",
                "find_value_or_zero_080034f4": "find_value_or_zero",
                "get_data_value_08000e30": "get_data_value",
                "iVar1": "data_value_1",
                "iVar2": "data_value_2",
                "initialize_uart_pins_08003cc8": "initialize_uart_pins",
                "param_1": "input_value",
                "param_2": "input_value",
                "process_input_data_08002dd0": "process_input_data",
                "uVar3": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003dd0": {
            "additional_data": {
                "0x200002b4": {
                    "data_array": 1
                },
                "0x22": {
                    "bit_pattern": 1,
                    "pattern": 1
                },
                "0x44": {
                    "offset": 2
                },
                "DAT_200002b4": {
                    "byte_array": 1
                },
                "FUN_08003dd0": {
                    "check_bit_pattern": 3,
                    "check_combination": 12,
                    "check_combination_validity": 2,
                    "check_combined_bytes": 2,
                    "check_condition": 2,
                    "check_flag_combination": 2,
                    "check_flag_value": 1,
                    "check_flags": 1,
                    "check_if_bit_5_and_6_are_set": 1,
                    "check_two_bytes_combination": 1,
                    "is_bits_22_set": 1,
                    "is_combination_valid": 2,
                    "is_flag_set": 1
                },
                "byte": {
                    "flag_byte": 1,
                    "index": 2
                },
                "combine_two_bytes_0800312c": {
                    "combine_bytes": 4,
                    "get_combined_value": 1
                },
                "param_1": {
                    "flag": 4,
                    "input": 5,
                    "input_value": 22
                },
                "uVar1": {
                    "combined_bytes": 9,
                    "combined_result": 3,
                    "combined_value": 19
                }
            },
            "called": [
                "FUN_0800312c"
            ],
            "calling": [
                "FUN_08003e54",
                "FUN_08003e18"
            ],
            "code": "\nbool check_flag_combination_08003dd0(int input_value)\n\n{\n  uint combined_value;\n  \n  combined_value = combine_bytes((&DAT_200002b4)[*(index *)(input_value + 0x44)]);\n  return (combined_value & 0x22) == 0x22;\n}\n\n",
            "current_name": "check_flag_combination_08003dd0",
            "entrypoint": "0x08003dd0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003dd0": "check_flag_combination_08003dd0",
                "byte": "index",
                "combine_two_bytes_0800312c": "combine_bytes",
                "param_1": "input_value",
                "uVar1": "combined_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003df4": {
            "additional_data": {
                "0x21": {
                    "condition_value": 1,
                    "expected_result": 1,
                    "mask": 2
                },
                "DAT_200002b4": {
                    "data_array": 1
                },
                "FUN_08003df4": {
                    "check_bit_combination": 1,
                    "check_byte_combination": 1,
                    "check_combination": 13,
                    "check_combination_validity": 1,
                    "check_combined_bytes": 1,
                    "check_condition": 1,
                    "check_flag_combination": 1,
                    "check_input_condition": 1,
                    "is_bit_set": 1,
                    "is_byte_combination_valid": 1,
                    "is_combination_valid": 5,
                    "is_combined_value_valid": 1,
                    "is_condition_met": 1,
                    "is_flag_set": 1,
                    "is_valid_combination": 1
                },
                "byte": {
                    "byte_value": 1,
                    "char": 1,
                    "extracted_byte": 1
                },
                "combine_two_bytes_0800312c": {
                    "combine_bytes": 3,
                    "combine_two_bytes": 1
                },
                "param_1": {
                    "flag_value": 1,
                    "input": 1,
                    "input_param": 1,
                    "input_value": 26,
                    "value": 2
                },
                "uVar1": {
                    "combined_bytes": 11,
                    "combined_result": 4,
                    "combined_value": 16
                }
            },
            "called": [
                "FUN_0800312c"
            ],
            "calling": [
                "FUN_080042e8"
            ],
            "code": "\nbool check_bit_combination_08003df4(int input_value)\n\n{\n  uint combined_value;\n  \n  combined_value = combine_bytes((&DAT_200002b4)[*(char *)(input_value + 0x44)]);\n  return (combined_value & 0x21) == 0x21;\n}\n\n",
            "current_name": "check_bit_combination_08003df4",
            "entrypoint": "0x08003df4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003df4": "check_bit_combination_08003df4",
                "byte": "char",
                "combine_two_bytes_0800312c": "combine_bytes",
                "param_1": "input_value",
                "uVar1": "combined_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003e18": {
            "additional_data": {
                "DAT_200002b4": {
                    "data": 1
                },
                "FUN_08003e18": {
                    "copy_and_validate_input": 1,
                    "extract_and_validate_data": 1,
                    "extract_and_validate_flag": 1,
                    "extract_and_validate_input": 3,
                    "extract_data": 1,
                    "extract_data_from_binary": 1,
                    "extract_flag": 8,
                    "extract_flag_char": 1,
                    "extract_input_and_validate": 1,
                    "extract_value_from_binary": 1,
                    "process_input": 5,
                    "process_input_and_validate": 1,
                    "validate_and_copy_data": 1,
                    "validate_and_extract_flag": 1,
                    "validate_and_extract_value": 1,
                    "validate_flag_combination": 1,
                    "validate_input_and_extract_byte": 1,
                    "validate_input_and_get_value": 1
                },
                "byte": {
                    "index": 1
                },
                "check_flag_combination_08003dd0": {
                    "check_flag_combination": 1
                },
                "iVar1": {
                    "check_result": 1,
                    "combination_check_result": 1,
                    "flag_check_result": 5,
                    "flag_combination_check": 4,
                    "flag_combination_check_result": 6,
                    "flag_combination_result": 12,
                    "flag_combo_check_result": 1,
                    "is_valid_combination": 1
                },
                "param_1": {
                    "binary_address": 1,
                    "data_address": 1,
                    "data_length": 1,
                    "flag": 6,
                    "flag_address": 3,
                    "flag_combination": 1,
                    "flag_index": 2,
                    "flag_offset": 1,
                    "flag_ptr": 1,
                    "input": 2,
                    "input_address": 1,
                    "input_data": 2,
                    "input_flag": 2,
                    "input_length": 2,
                    "input_size": 2,
                    "input_value": 3
                },
                "param_2": {
                    "extracted_data": 2,
                    "extracted_flag": 2,
                    "extracted_value": 1,
                    "flag": 1,
                    "flag_output": 1,
                    "output": 14,
                    "output_buffer": 3,
                    "output_data": 3,
                    "output_ptr": 2,
                    "output_value": 1,
                    "result_char": 1
                },
                "param_3": {
                    "additional_param_1": 1,
                    "check_result": 1,
                    "config_param_3": 1,
                    "extra_param_1": 1,
                    "flag1": 1,
                    "flag_1": 2,
                    "flag_check": 1,
                    "flag_value": 1,
                    "flags_1": 1,
                    "input1": 1,
                    "input_validation_result": 1,
                    "input_value": 1,
                    "param3": 2,
                    "param_3": 6,
                    "result_1": 1,
                    "size": 3,
                    "size_of_flag": 1,
                    "size_param": 1,
                    "unused_param": 2,
                    "validated_flag": 1,
                    "validation_param_1": 1
                },
                "param_4": {
                    "additional_param": 2,
                    "additional_param_2": 1,
                    "config": 1,
                    "config_param_4": 1,
                    "extra_param_2": 1,
                    "flag": 1,
                    "flag2": 1,
                    "flag_2": 2,
                    "flag_combination": 1,
                    "flags_2": 1,
                    "input2": 1,
                    "output_value": 1,
                    "param4": 2,
                    "param_4": 6,
                    "result_2": 1,
                    "unused_param": 1,
                    "validation_code": 1,
                    "validation_data": 1,
                    "validation_flag": 1,
                    "validation_param": 2,
                    "validation_param_2": 1,
                    "validation_result": 1
                },
                "validate_input_08002efa": {
                    "validate_input": 3
                }
            },
            "called": [
                "FUN_08002efa",
                "FUN_08003dd0"
            ],
            "calling": [
                "FUN_080042ac"
            ],
            "code": "\nundefined4 extract_and_validate_flag_08003e18(int flag,undefined *output,undefined4 param_3,undefined4 param_4)\n\n{\n  int flag_combination_result;\n  \n  if (flag == 0) {\n    return 0xffffffff;\n  }\n  flag_combination_result = check_flag_combination();\n  if (flag_combination_result == 0) {\n    *output = *(undefined *)(flag + 0x45);\n    validate_input((&DAT_200002b4)[*(index *)(flag + 0x44)],flag + 0x45,1,&DAT_200002b4,param_4);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "extract_and_validate_flag_08003e18",
            "entrypoint": "0x08003e18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003e18": "extract_and_validate_flag_08003e18",
                "byte": "index",
                "check_flag_combination_08003dd0": "check_flag_combination",
                "iVar1": "flag_combination_result",
                "param_1": "flag",
                "param_2": "output",
                "validate_input_08002efa": "validate_input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003e54": {
            "additional_data": {
                "FUN_08003e54": {
                    "process_flag": 2,
                    "process_flag_combination": 1,
                    "update_and_validate_character_data": 1,
                    "update_character": 1,
                    "update_character_data": 11,
                    "update_character_data_from_flag": 1,
                    "update_character_from_input": 1,
                    "update_combination": 1,
                    "update_flag_combination": 9,
                    "update_flag_data": 2,
                    "update_flag_status": 1
                },
                "check_flag_combination_08003dd0": {
                    "check_flag_combination": 1
                },
                "iVar1": {
                    "check_result": 2,
                    "combination_result": 2,
                    "flag_check_result": 9,
                    "flag_comb_result": 1,
                    "flag_combination_check_result": 2,
                    "flag_combination_result": 8,
                    "flag_result": 2,
                    "flag_validation_result": 2,
                    "is_valid_flag_combination": 1,
                    "result": 2
                },
                "param_1": {
                    "character": 1,
                    "character_data": 2,
                    "character_pointer": 1,
                    "flag": 3,
                    "flag_address": 10,
                    "flag_data": 1,
                    "flag_pointer": 4,
                    "flag_ptr": 1,
                    "input": 2,
                    "input_data": 1,
                    "input_flag": 2,
                    "input_param": 1,
                    "input_pointer": 1,
                    "input_ptr": 1
                },
                "param_2": {
                    "data": 3,
                    "data1": 1,
                    "new_flag_value": 3,
                    "new_value": 16,
                    "value": 7,
                    "value1": 1
                },
                "param_3": {
                    "data2": 1,
                    "unused": 7,
                    "unused1": 5,
                    "unused_param": 7,
                    "unused_param_1": 1,
                    "unused_parameter": 1,
                    "value2": 1
                },
                "param_4": {
                    "additional_param": 1,
                    "character_data": 9,
                    "character_data_pointer": 2,
                    "character_data_ptr": 1,
                    "character_index": 2,
                    "data3": 1,
                    "extra_data": 1,
                    "flag_value": 1,
                    "param": 2,
                    "unknown": 1,
                    "unused2": 5,
                    "unused_param_2": 1,
                    "update_flag": 1,
                    "user_data": 1,
                    "value3": 1,
                    "value_to_update": 1
                },
                "set_bit_in_pointer_array_08000ec4": {
                    "set_bit_in_pointer_array": 3,
                    "set_flag_in_pointer_array": 1
                },
                "uVar2": {
                    "byte_index": 1,
                    "byte_value": 5,
                    "flag_index": 21,
                    "flag_value": 1,
                    "index": 2,
                    "offset": 1
                },
                "update_character_data_08000e60": {
                    "update_character_data": 3,
                    "update_character_stats": 2
                },
                "validate_input_08002efa": {
                    "validate_flag": 1,
                    "validate_input": 4
                }
            },
            "called": [
                "FUN_08002efa",
                "FUN_08003dd0",
                "FUN_08000ec4",
                "FUN_08000e60"
            ],
            "calling": [
                "FUN_08004388"
            ],
            "code": "\nvoid update_character_data_from_flag_08003e54(int flag_address,undefined4 new_value,undefined4 unused_param,undefined4 character_data)\n\n{\n  int flag_check_result;\n  uint flag_index;\n  \n  if (flag_address != 0) {\n    flag_check_result = check_flag_combination();\n    if (flag_check_result == 0) {\n      flag_index = (uint)*(byte *)(flag_address + 0x44);\n      *(undefined4 *)(&DAT_20000214 + flag_index * 4) = new_value;\n      *(int *)(&DAT_2000023c + flag_index * 4) = flag_address;\n      update_character_data((int)*(char *)(flag_address + 0x5c),0,1,flag_index,character_data);\n      set_bit_in_pointer_array((int)*(char *)(flag_address + 0x5c));\n      validate_input((&DAT_200002b4)[*(byte *)(flag_address + 0x44)],flag_address + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "update_character_data_from_flag_08003e54",
            "entrypoint": "0x08003e54",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003e54": "update_character_data_from_flag_08003e54",
                "check_flag_combination_08003dd0": "check_flag_combination",
                "iVar1": "flag_check_result",
                "param_1": "flag_address",
                "param_2": "new_value",
                "param_3": "unused_param",
                "param_4": "character_data",
                "set_bit_in_pointer_array_08000ec4": "set_bit_in_pointer_array",
                "uVar2": "flag_index",
                "update_character_data_08000e60": "update_character_data",
                "validate_input_08002efa": "validate_input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003eac": {
            "additional_data": {
                "FUN_08003eac": {
                    "update_and_initialize_character_data": 1,
                    "update_character": 1,
                    "update_character_data": 22,
                    "update_character_info": 5,
                    "update_character_information": 1,
                    "update_character_params": 1
                },
                "bVar1": {
                    "byte_value": 10,
                    "char_index": 1,
                    "character_byte": 1,
                    "character_index": 16,
                    "index": 3
                },
                "initialize_data_08002eb2": {
                    "initialize_character_data": 2,
                    "initialize_data": 5,
                    "initialize_data_function": 1
                },
                "param_1": {
                    "char_info": 1,
                    "character_address": 1,
                    "character_data": 15,
                    "character_data_address": 1,
                    "character_data_ptr": 1,
                    "character_info": 1,
                    "character_info_ptr": 2,
                    "character_pointer": 6,
                    "character_ptr": 3
                },
                "param_2": {
                    "data": 5,
                    "data_value": 3,
                    "new_character_data": 1,
                    "new_data": 9,
                    "new_param": 1,
                    "new_param_value": 1,
                    "new_value": 9,
                    "updated_value": 1,
                    "value": 1
                },
                "set_bit_in_pointer_array_08000ec4": {
                    "set_bit": 1,
                    "set_bit_in_pointer_array": 4,
                    "set_bit_in_pointer_array_function": 1,
                    "set_character_bit": 2
                },
                "update_character_data_08000e60": {
                    "update_character": 1,
                    "update_character_data": 1,
                    "update_character_data_function": 1,
                    "update_character_info": 1,
                    "update_character_stats": 3,
                    "update_character_status": 1
                }
            },
            "called": [
                "FUN_08002eb2",
                "FUN_08000ec4",
                "FUN_08000e60"
            ],
            "calling": [
                "FUN_080042e8"
            ],
            "code": "\nvoid update_and_initialize_character_data_08003eac(int character_data,undefined4 new_data)\n\n{\n  byte character_index;\n  \n  if (character_data != 0) {\n    character_index = *(byte *)(character_data + 0x44);\n    *(undefined4 *)(&DAT_20000264 + (uint)character_index * 4) = new_data;\n    *(int *)(&DAT_2000028c + (uint)character_index * 4) = character_data;\n    update_character_stats((int)*(char *)(character_data + 0x5c),0,2);\n    set_bit_in_pointer_array((int)*(char *)(character_data + 0x5c));\n    initialize_data((&DAT_200002b4)[*(byte *)(character_data + 0x44)],\n                 *(int *)(character_data + 0x68) + (uint)*(ushort *)(character_data + 0x6e),1);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "update_and_initialize_character_data_08003eac",
            "entrypoint": "0x08003eac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003eac": "update_and_initialize_character_data_08003eac",
                "bVar1": "character_index",
                "initialize_data_08002eb2": "initialize_data",
                "param_1": "character_data",
                "param_2": "new_data",
                "set_bit_in_pointer_array_08000ec4": "set_bit_in_pointer_array",
                "update_character_data_08000e60": "update_character_stats"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f00": {
            "additional_data": {
                "0": {
                    "initial_index": 1
                },
                "10": {
                    "not_found_index": 1
                },
                "9": {
                    "max_index": 1
                },
                "FUN_08003f00": {
                    "find_element_index": 1,
                    "find_first_index": 1,
                    "find_index": 6,
                    "find_index_in_array": 2,
                    "find_index_of_value": 2,
                    "find_index_or_default": 1,
                    "find_matching_index": 2,
                    "find_matching_value": 1,
                    "find_number": 1,
                    "find_number_in_array": 2,
                    "find_number_index": 1,
                    "find_number_position": 2,
                    "find_value_in_array": 1,
                    "find_value_index": 6,
                    "find_value_or_default": 1,
                    "find_value_position": 1
                },
                "param_1": {
                    "input": 1,
                    "input_number": 1,
                    "input_value": 3,
                    "num": 1,
                    "number": 5,
                    "value": 16,
                    "value_to_find": 4
                },
                "uVar1": {
                    "found_index": 2,
                    "found_value": 1,
                    "index": 22,
                    "matching_index": 2,
                    "position": 3,
                    "value_index": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003f48",
                "FUN_08003f24"
            ],
            "code": "\nuint find_index_of_value_08003f00(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 10;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (9 < index) {\n        return index;\n      }\n      if (value == (&DAT_200002b4)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "current_name": "find_index_of_value_08003f00",
            "entrypoint": "0x08003f00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003f00": "find_index_of_value_08003f00",
                "param_1": "value",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f24": {
            "additional_data": {
                "DAT_20000214": {
                    "array_of_functions": 1,
                    "function_array": 1,
                    "function_pointers": 4,
                    "function_pointers_array": 1,
                    "function_table": 6,
                    "function_table_start": 1,
                    "ptr_array": 1,
                    "value_function_table": 1
                },
                "DAT_2000023c": {
                    "argument_table": 3,
                    "argument_table_start": 1,
                    "arguments": 2,
                    "arguments_array": 1,
                    "arguments_table": 1,
                    "array_of_pointers": 1,
                    "function_arguments": 2,
                    "parameter_array": 1,
                    "parameter_table": 3,
                    "value_array": 1
                },
                "FUN_08003f24": {
                    "execute_appropriate_function": 1,
                    "execute_function": 8,
                    "execute_function_at_index": 1,
                    "execute_function_based_on_index": 3,
                    "execute_function_based_on_value": 5,
                    "execute_function_if_index_small": 1,
                    "execute_function_if_index_valid": 1,
                    "execute_function_if_value_lt_10": 2,
                    "execute_functions": 1,
                    "execute_index_value_function": 1,
                    "execute_indexed_function": 1,
                    "execute_proper_function": 1,
                    "execute_selected_function": 2,
                    "execute_specific_operation": 1,
                    "execute_value_function": 1,
                    "process_value": 1
                },
                "code": {
                    "function_pointer": 4
                },
                "find_index_of_value_08003f00": {
                    "find_index": 2,
                    "find_index_of_value": 17,
                    "find_value_index": 6
                },
                "uVar1": {
                    "index": 23,
                    "index_of_value": 3,
                    "index_value": 1,
                    "value_index": 4
                }
            },
            "called": [
                "FUN_08003f00"
            ],
            "calling": [
                "FUN_08002f66"
            ],
            "code": "\nvoid execute_function_based_on_value_08003f24(void)\n\n{\n  uint index;\n  \n  index = find_index_of_value();\n  if (index < 10) {\n    (**(function_pointer **)(&DAT_20000214 + index * 4))(*(undefined4 *)(&DAT_2000023c + index * 4));\n  }\n  return;\n}\n\n",
            "current_name": "execute_function_based_on_value_08003f24",
            "entrypoint": "0x08003f24",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003f24": "execute_function_based_on_value_08003f24",
                "code": "function_pointer",
                "find_index_of_value_08003f00": "find_index_of_value",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f48": {
            "additional_data": {
                "DAT_20000264": {
                    "function_array": 4,
                    "function_pointer_array": 1,
                    "function_ptr_array": 1,
                    "function_table": 1,
                    "p_functions": 1,
                    "unknown_data2": 1
                },
                "DAT_2000028c": {
                    "data_array": 5,
                    "data_item_array": 1,
                    "data_offset": 1,
                    "p_data": 1,
                    "unknown_data1": 1
                },
                "DAT_200002b4": {
                    "byte_array": 2,
                    "data_address": 1,
                    "data_array": 1,
                    "data_buffer": 1,
                    "data_offset_array": 1,
                    "data_pointer": 1,
                    "p_data_array": 1,
                    "unknown_data3": 1
                },
                "FUN_08003f48": {
                    "initialize_and_process_data": 1,
                    "initialize_data": 4,
                    "initialize_data_based_on_value": 2,
                    "initialize_data_for_value": 1,
                    "initialize_data_from_binary": 3,
                    "initialize_data_from_index": 3,
                    "initialize_data_from_value": 1,
                    "initialize_data_if_found": 1,
                    "initialize_data_if_index_found": 3,
                    "initialize_data_if_needed": 1,
                    "initialize_data_if_valid": 2,
                    "initialize_data_if_valid_index": 2,
                    "initialize_data_if_valid_value": 1,
                    "initialize_data_if_value_found": 1,
                    "initialize_related_data": 1,
                    "process_data": 4
                },
                "find_index_of_value_08003f00": {
                    "find_index_of_value": 12,
                    "find_value_index": 3
                },
                "iVar2": {
                    "function_result": 1,
                    "result": 30
                },
                "iVar3": {
                    "address": 1,
                    "data": 8,
                    "data_address": 5,
                    "data_entry": 1,
                    "data_item": 1,
                    "data_pointer": 6,
                    "data_ptr": 5,
                    "memory_address": 1,
                    "value": 3
                },
                "initialize_data_08002eb2": {
                    "initialize_data": 13,
                    "initialize_data_08002eb2": 1
                },
                "uVar1": {
                    "index": 21,
                    "index_of_value": 1,
                    "value_index": 9
                }
            },
            "called": [
                "FUN_08002eb2",
                "FUN_08003f00"
            ],
            "calling": [
                "FUN_08002f4c"
            ],
            "code": "\nvoid initialize_and_process_data_08003f48(void)\n\n{\n  uint index;\n  int result;\n  int data;\n  \n  index = find_index_of_value();\n  data = *(int *)(&DAT_2000028c + index * 4);\n  if ((index < 10) && (result = (**(code **)(&DAT_20000264 + index * 4))(data), result != -1)) {\n    initialize_data((&DAT_200002b4)[*(byte *)(data + 0x44)],\n                 *(int *)(data + 0x68) + (uint)*(ushort *)(data + 0x6e),1);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_and_process_data_08003f48",
            "entrypoint": "0x08003f48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003f48": "initialize_and_process_data_08003f48",
                "find_index_of_value_08003f00": "find_index_of_value",
                "iVar2": "result",
                "iVar3": "data",
                "initialize_data_08002eb2": "initialize_data",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f94": {
            "called": [],
            "calling": [
                "FUN_08002ffc"
            ],
            "code": "\nvoid FUNC_08003f94(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08003f94",
            "entrypoint": "0x08003f94",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08003f94": "FUNC_08003f94"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004094": {
            "additional_data": {
                "DAT_200002dc": {
                    "current_allocation_pointer": 1,
                    "current_memory": 6,
                    "current_memory_block": 1,
                    "current_memory_pointer": 2,
                    "current_memory_position": 1,
                    "current_memory_ptr": 2,
                    "current_pointer": 4,
                    "current_position": 2,
                    "current_ptr": 4
                },
                "DAT_20000674": {
                    "error_code": 18,
                    "error_flag": 2,
                    "error_value": 1
                },
                "DAT_20000678": {
                    "base_ptr": 1,
                    "default_memory": 1,
                    "default_memory_pointer": 1,
                    "default_ptr": 1,
                    "initial_memory": 2,
                    "initial_memory_block": 1,
                    "initial_memory_pointer": 1,
                    "initial_memory_ptr": 1,
                    "initial_pointer": 2,
                    "initial_position": 1,
                    "start_of_heap": 1,
                    "start_position": 1,
                    "starting_address": 1
                },
                "FUN_08004094": {
                    "allocate_memory": 29,
                    "allocate_memory_block": 1,
                    "reserve_memory_block": 1
                },
                "param_1": {
                    "block_size": 1,
                    "bytes_to_allocate": 1,
                    "num_bytes": 1,
                    "requested_memory_size": 1,
                    "size": 27
                },
                "puVar1": {
                    "allocated_block": 1,
                    "allocated_mem": 1,
                    "allocated_memory": 26,
                    "allocated_memory_block": 1,
                    "allocated_ptr": 1,
                    "memory_pointer": 1
                },
                "stack0x00000000": {
                    "end_of_stack": 1,
                    "end_of_stack_memory": 1,
                    "max_stack_memory": 1,
                    "stack_bottom": 1,
                    "stack_bottom_address": 1,
                    "stack_boundary": 1,
                    "stack_end_pointer": 1,
                    "stack_limit": 2,
                    "stack_memory": 1,
                    "stack_pointer": 2,
                    "stack_ptr": 2,
                    "stack_start_address": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800500c"
            ],
            "code": "\nundefined * allocate_memory_block_08004094(int size)\n\n{\n  undefined *allocated_memory;\n  \n  if (DAT_200002dc == (undefined *)0x0) {\n    DAT_200002dc = &DAT_20000678;\n  }\n  allocated_memory = DAT_200002dc;\n  if (DAT_200002dc + size <= &stack_ptr) {\n    DAT_200002dc = DAT_200002dc + size;\n    return allocated_memory;\n  }\n  DAT_20000674 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "current_name": "allocate_memory_block_08004094",
            "entrypoint": "0x08004094",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004094": "allocate_memory_block_08004094",
                "param_1": "size",
                "puVar1": "allocated_memory",
                "stack0x00000000": "stack_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040d0": {
            "additional_data": {
                "DAT_": {
                    "dat_": 1
                },
                "FUN_080040d0": {
                    "calculate_error_code": 1,
                    "get_default_value": 4,
                    "get_error_code": 5,
                    "get_negative_one": 2,
                    "get_return_value": 1,
                    "get_value": 1,
                    "initialize_default_return_value": 1,
                    "initialize_default_value": 1,
                    "initialize_error_code": 4,
                    "initialize_error_value": 1,
                    "initialize_function": 1,
                    "initialize_return_code": 1,
                    "initialize_return_value": 4,
                    "initialize_value": 3,
                    "set_return_value_to_max": 1
                },
                "PTR_": {
                    "ptr_": 1
                },
                "return": {
                    "error_code": 1,
                    "result": 1,
                    "return_value": 1
                },
                "undefined4": {
                    "error_code": 2,
                    "int": 2,
                    "return_value": 1,
                    "uint32": 2,
                    "uint32_t": 5,
                    "unsigned_int": 3
                }
            },
            "called": [],
            "calling": [],
            "code": "\nuint32_t initialize_default_return_value_080040d0(void)\n\n{\n  return_value 0xffffffff;\n}\n\n",
            "current_name": "initialize_default_return_value_080040d0",
            "entrypoint": "0x080040d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040d0": "initialize_default_return_value_080040d0",
                "return": "return_value",
                "undefined4": "uint32_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040d6": {
            "additional_data": {
                "4": {
                    "constant": 1
                },
                "FUN_080040d6": {
                    "initialize_memory": 7,
                    "initialize_memory_region": 1,
                    "initialize_memory_segment": 1,
                    "set_flag": 1,
                    "set_memory_attribute": 1,
                    "set_memory_block_size": 1,
                    "set_memory_flag": 2,
                    "set_memory_flag_value": 1,
                    "set_memory_flags": 1,
                    "set_memory_page": 1,
                    "set_memory_page_size": 5,
                    "set_memory_permission": 1,
                    "set_memory_permissions": 1,
                    "set_memory_segment_permission": 1,
                    "set_memory_size": 2,
                    "set_memory_value": 3,
                    "set_page_size": 1
                },
                "param_1": {
                    "address": 3,
                    "base_address": 1,
                    "buffer": 1,
                    "data": 1,
                    "flags": 1,
                    "memory_address": 1,
                    "memory_location": 1,
                    "new_param": 1,
                    "param": 5,
                    "param1": 4,
                    "param_1": 1,
                    "param_page": 1,
                    "ptr_flag": 1,
                    "result": 4,
                    "segment": 1,
                    "unused_param": 1,
                    "value": 1,
                    "value_to_set": 2
                },
                "param_2": {
                    "address": 4,
                    "base_address": 4,
                    "buffer": 2,
                    "buffer_address": 1,
                    "flag_address": 1,
                    "memory": 1,
                    "memory_address": 6,
                    "memory_location": 1,
                    "memory_offset": 1,
                    "memory_segment": 1,
                    "offset": 1,
                    "page_table": 1,
                    "param2": 2,
                    "param_offset": 1,
                    "pointer_address": 1,
                    "ptr_data": 1,
                    "target_address": 2
                },
                "return": {
                    "return_value": 1
                },
                "temp_1": {
                    "memory_size": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080056d4"
            ],
            "code": "\nundefined4 set_memory_page_size_080040d6(undefined4 param,int memory_address)\n\n{\n  *(undefined4 *)(memory_address + 4) = 0x2000;\n  return_value 0;\n}\n\n",
            "current_name": "set_memory_page_size_080040d6",
            "entrypoint": "0x080040d6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040d6": "set_memory_page_size_080040d6",
                "param_1": "param",
                "param_2": "memory_address",
                "return": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040e0": {
            "additional_data": {
                "1": {
                    "success": 2
                },
                "DAT_87654321": {
                    "return_code": 1
                },
                "FUN_080040e0": {
                    "calculate_return_value": 1,
                    "check_if_true": 1,
                    "check_return_value": 2,
                    "check_status": 1,
                    "check_success": 1,
                    "get_boolean_value": 1,
                    "get_one": 1,
                    "get_result": 2,
                    "get_return_value": 2,
                    "initialize": 8,
                    "initialize_application": 2,
                    "initialize_flag": 1,
                    "initialize_process": 1,
                    "initialize_program": 4,
                    "initialize_return_value": 1,
                    "initialize_system": 1,
                    "return_one": 1
                },
                "PTR_12345678": {
                    "application_data": 1
                },
                "_": {
                    "": 1
                },
                "new_function_name_1": {
                    "original_function_name": 1
                },
                "new_function_name_2": {
                    "original_function_name": 1
                },
                "new_variable_name_1": {
                    "original_variable_name": 1
                },
                "new_variable_name_2": {
                    "original_variable_name": 1
                },
                "original_function_name": {
                    "improve_application": 1
                },
                "original_variable_name_1": {
                    "result": 1
                },
                "original_variable_name_2": {
                    "status": 1
                },
                "original_variable_name_n": {
                    "counter": 1
                },
                "return": {
                    "status": 1,
                    "success": 1
                },
                "undefined4": {
                    "bool": 1,
                    "int": 2,
                    "status": 3,
                    "uint32": 1,
                    "uint32_t": 1,
                    "void": 5
                }
            },
            "called": [],
            "calling": [
                "FUN_080056f8"
            ],
            "code": "\nvoid initialize_program_080040e0(void)\n\n{\n  success 1;\n}\n\n",
            "current_name": "initialize_program_080040e0",
            "entrypoint": "0x080040e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040e0": "initialize_program_080040e0",
                "return": "success",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040e4": {
            "additional_data": {
                "DAT_08012345": {
                    "status": 1
                },
                "DAT_08098765": {
                    "result": 1
                },
                "FUN_080040e4": {
                    "get_default_value": 2,
                    "get_zero": 2,
                    "get_zero_value": 1,
                    "init": 1,
                    "initialize": 13,
                    "initialize_application": 5,
                    "initialize_data": 2,
                    "initialize_function": 1,
                    "initialize_program": 2,
                    "initialize_system": 1,
                    "return_zero": 1
                },
                "undefined4": {
                    "int": 2,
                    "return_type": 1,
                    "void": 12
                }
            },
            "called": [],
            "calling": [
                "FUN_08005718"
            ],
            "code": "\nvoid initialize_application_080040e4(void)\n\n{\n  return 0;\n}\n\n",
            "current_name": "initialize_application_080040e4",
            "entrypoint": "0x080040e4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040e4": "initialize_application_080040e4",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040e8": {
            "additional_data": {
                "DAT_": {
                    "dat_": 1
                },
                "FUN_080040e8": {
                    "do_nothing": 1,
                    "execute_function": 1,
                    "get_default_value": 3,
                    "get_result": 1,
                    "get_zero_value": 1,
                    "initialize": 16,
                    "initialize_application": 2,
                    "initialize_data": 1,
                    "initialize_function": 1,
                    "initialize_program": 1,
                    "initialize_system": 1,
                    "run_function": 1
                },
                "PTR_": {
                    "ptr_": 1
                },
                "PTR_FUN_080040e8": {
                    "program_ptr": 1
                },
                "new_name_1": {
                    "old_name_1": 1
                },
                "new_name_2": {
                    "old_name_2": 1
                },
                "new_parameter_name_1": {
                    "old_parameter_name_1": 1
                },
                "new_parameter_name_2": {
                    "old_parameter_name_2": 1
                },
                "new_parameter_name_n": {
                    "old_parameter_name_n": 1
                },
                "return_value": {
                    "result": 2
                },
                "undefined4": {
                    "int": 2,
                    "return_type": 1,
                    "void": 14
                }
            },
            "called": [],
            "calling": [
                "FUN_0800573c"
            ],
            "code": "\nvoid initialize_application_080040e8(void)\n\n{\n  return 0;\n}\n\n",
            "current_name": "initialize_application_080040e8",
            "entrypoint": "0x080040e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040e8": "initialize_application_080040e8",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040ec": {
            "additional_data": {
                "FUN_080040ec": {
                    "process_and_validate": 2,
                    "process_and_validate_data": 25,
                    "process_data_and_validate": 1,
                    "validate_and_process_data": 3
                },
                "param_1": {
                    "data_1": 1,
                    "input_1": 1,
                    "new_param_1": 1,
                    "param1": 2,
                    "param_1": 7,
                    "unrelated_param": 1,
                    "unused": 5,
                    "unused_param": 10
                },
                "param_2": {
                    "data1": 1,
                    "data_1": 3,
                    "data_2": 1,
                    "data_param": 4,
                    "data_param_1": 6,
                    "data_parameter_1": 1,
                    "data_ptr1": 1,
                    "input_1": 3,
                    "input_2": 1,
                    "input_data": 3,
                    "input_data_1": 1,
                    "input_param1": 1,
                    "input_param_1": 3,
                    "input_parameter_1": 1,
                    "processed_data_1": 1
                },
                "param_3": {
                    "data2": 1,
                    "data_2": 3,
                    "data_3": 1,
                    "data_param_2": 6,
                    "data_parameter_2": 1,
                    "data_ptr2": 1,
                    "input_2": 3,
                    "input_3": 1,
                    "input_data_2": 1,
                    "input_param2": 1,
                    "input_param_2": 3,
                    "input_parameter_2": 1,
                    "param_3": 1,
                    "processed_data_2": 1,
                    "validate_param": 1,
                    "validate_param_1": 1,
                    "validation_key": 1,
                    "validation_param1": 2,
                    "validation_param_1": 1
                },
                "param_4": {
                    "additional_data": 1,
                    "data3": 1,
                    "data_3": 2,
                    "data_4": 1,
                    "data_param_3": 6,
                    "data_parameter_3": 1,
                    "data_ptr3": 1,
                    "input_3": 3,
                    "input_4": 1,
                    "input_param3": 1,
                    "input_param_3": 2,
                    "new_param_4": 1,
                    "param_4": 1,
                    "processed_data_3": 1,
                    "unused": 2,
                    "unused_param": 1,
                    "unused_param_2": 1,
                    "validate_param_2": 1,
                    "validation_param2": 2,
                    "validation_param_2": 1
                },
                "process_and_validate_data_08003d18": {
                    "process_and_validate_data": 1
                }
            },
            "called": [
                "FUN_08003d18"
            ],
            "calling": [
                "FUN_0800562a"
            ],
            "code": "\nvoid process_data_and_validate_080040ec(undefined4 unused_param,undefined4 data_param_1,undefined4 data_param_2,undefined4 data_param_3)\n\n{\n  process_and_validate_data(data_param_1,data_param_2,data_param_2,data_param_3,data_param_3);\n  return;\n}\n\n",
            "current_name": "process_data_and_validate_080040ec",
            "entrypoint": "0x080040ec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040ec": "process_data_and_validate_080040ec",
                "param_1": "unused_param",
                "param_2": "data_param_1",
                "param_3": "data_param_2",
                "param_4": "data_param_3",
                "process_and_validate_data_08003d18": "process_and_validate_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040f8": {
            "additional_data": {
                "DAT_": {
                    "dat_": 1,
                    "unchanged": 1
                },
                "DAT_xxxxx": {
                    "unchanged_variable": 1
                },
                "FUN_080040f8": {
                    "do_nothing_loop": 1,
                    "idle_loop": 1,
                    "infinite_loop": 25,
                    "loop_forever": 2,
                    "never_ending_loop": 1,
                    "run_infinite_loop": 1
                },
                "PTR_": {
                    "ptr_": 1,
                    "unchanged": 1
                },
                "do": {
                    "execute": 1,
                    "loop": 1,
                    "while": 1
                },
                "original_variable_name_1": {
                    "counter": 1,
                    "unimportant_variable": 1
                },
                "original_variable_name_2": {
                    "temporary_variable": 1
                },
                "true": {
                    "always_true": 1,
                    "condition": 1
                }
            },
            "called": [
                "FUN_080040f8"
            ],
            "calling": [
                "FUN_080040f8",
                "FUN_080051ac"
            ],
            "code": "\nvoid run_infinite_loop_080040f8(void)\n\n{\n  while {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( always_true );\n}\n\n",
            "current_name": "run_infinite_loop_080040f8",
            "entrypoint": "0x080040f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040f8": "run_infinite_loop_080040f8",
                "do": "while",
                "true": "always_true"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040fc": {
            "additional_data": {
                "DAT_20000674": {
                    "counter": 1,
                    "data_length": 1,
                    "data_size": 1,
                    "data_value": 10,
                    "default_data_value": 1,
                    "default_variable": 1,
                    "global_var": 1,
                    "global_variable": 1,
                    "initial_value": 8,
                    "value": 2
                },
                "FUN_080040fc": {
                    "initialize_counter": 2,
                    "initialize_data": 15,
                    "initialize_default_variable": 1,
                    "initialize_global_variable": 1,
                    "initialize_value": 3,
                    "initialize_value_and_return": 1,
                    "set_data_length": 1,
                    "set_global_variable": 1,
                    "set_initial_value": 6
                },
                "return": {
                    "success_code": 1
                },
                "undefined4": {
                    "void": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080055d0"
            ],
            "code": "\nvoid initialize_data_080040fc(void)\n\n{\n  DAT_20000674 = 0x16;\n  success_code 0xffffffff;\n}\n\n",
            "current_name": "initialize_data_080040fc",
            "entrypoint": "0x080040fc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040fc": "initialize_data_080040fc",
                "return": "success_code",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800410c": {
            "additional_data": {
                "": {
                    "": 1
                },
                "FUN_0800410c": {
                    "check_return_value": 1,
                    "check_success": 5,
                    "count_to_one": 1,
                    "get_constant_one": 1,
                    "get_default_value": 1,
                    "get_one": 4,
                    "get_return_value": 4,
                    "initialize": 8,
                    "initialize_application": 2,
                    "initialize_flag": 1,
                    "initialize_return_value": 1,
                    "initialize_value": 1
                },
                "return": {
                    "result": 5
                },
                "return_1": {
                    "status": 1
                },
                "return_value": {
                    "result": 1
                },
                "undefined4": {
                    "int": 7,
                    "status": 3,
                    "success_flag": 1,
                    "void": 1
                }
            },
            "called": [],
            "calling": [
                "thunk_FUN_0800410c"
            ],
            "code": "\nint initialize_application_0800410c(void)\n\n{\n  result 1;\n}\n\n",
            "current_name": "initialize_application_0800410c",
            "entrypoint": "0x0800410c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800410c": "initialize_application_0800410c",
                "return": "result",
                "undefined4": "int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004110": {
            "additional_data": {
                "FUN_08004110": {
                    "process_and_update_data": 1,
                    "process_binary_data": 1,
                    "process_bit_data": 1,
                    "process_data": 22,
                    "process_data_and_update_array": 1,
                    "process_function": 2,
                    "process_input": 1,
                    "process_input_data": 1,
                    "process_param": 1
                },
                "find_value_in_array_0800355e": {
                    "find_value_in_array": 15
                },
                "get_bit_value_08003138": {
                    "get_bit_value": 13
                },
                "iVar1": {
                    "bit_value": 26,
                    "is_bit_value_valid": 1,
                    "result": 4
                },
                "iVar3": {
                    "array_index": 6,
                    "array_value": 2,
                    "index": 6,
                    "index_value": 1,
                    "lookup_index": 1,
                    "value": 14,
                    "value_index": 1
                },
                "param_1": {
                    "index": 21,
                    "input_index": 4,
                    "input_param": 1,
                    "input_value": 3,
                    "param": 1,
                    "value": 1
                },
                "param_2": {
                    "action": 1,
                    "mode": 23,
                    "operation_type": 1,
                    "option": 6
                },
                "param_3": {
                    "array_offset": 1,
                    "config": 1,
                    "data": 9,
                    "data_index": 1,
                    "data_offset": 1,
                    "data_size": 1,
                    "input": 1,
                    "length": 1,
                    "options": 1,
                    "param": 3,
                    "param3": 2,
                    "param_3": 2,
                    "param_data": 1,
                    "value": 6
                },
                "param_4": {
                    "array": 6,
                    "array_data": 1,
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "buffer": 2,
                    "data": 10,
                    "data_ptr": 4,
                    "param4": 2,
                    "param_4": 2,
                    "pointer": 1,
                    "ptr": 1
                },
                "process_binary_data_080033d8": {
                    "process_binary_data": 15
                },
                "process_data_08003414": {
                    "process_data": 14,
                    "process_data_with_value": 1
                },
                "puVar2": {
                    "array": 3,
                    "array_address": 1,
                    "array_pointer": 5,
                    "array_pointer2": 1,
                    "array_ptr": 11,
                    "bit_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "pointer": 1,
                    "ptr": 1,
                    "ptr_index": 1,
                    "ptr_to_data": 1,
                    "pu_var2": 1,
                    "table": 1
                },
                "set_bit_in_array_at_index_0800314e": {
                    "set_bit_in_array": 3,
                    "set_bit_in_array_at_index": 12
                },
                "set_memory_and_update_registers_08003486": {
                    "set_memory_and_registers": 3,
                    "set_memory_and_update_registers": 12
                },
                "update_bit_value_0800316c": {
                    "update_bit_value": 15
                }
            },
            "called": [
                "FUN_0800355e",
                "FUN_08003138",
                "FUN_0800316c",
                "FUN_08003414",
                "FUN_08003486",
                "FUN_080033d8",
                "FUN_0800314e"
            ],
            "calling": [
                "FUN_08000600"
            ],
            "code": "\nvoid process_data_and_update_array_08004110(uint index,undefined4 mode,undefined4 data,undefined *data)\n\n{\n  int bit_value;\n  undefined *array_ptr;\n  int value;\n  \n  if (index < 0x60) {\n    value = (int)*(short *)(&DAT_08005d3c + index * 2);\n    array_ptr = &DAT_08005d3c;\n  }\n  else {\n    value = -1;\n    array_ptr = data;\n  }\n  if (value != -1) {\n    bit_value = get_bit_value(value,&DAT_200002e0,data,array_ptr,data);\n    if (bit_value != 0) {\n      bit_value = find_value_in_array(value,&DAT_08005a18);\n      if (bit_value == 0) {\n        bit_value = find_value_in_array(value,&DAT_08005a3c);\n        if (bit_value != 0) {\n          process_data(value);\n        }\n      }\n      else {\n        process_binary_data(value);\n      }\n      update_bit_value(value,&DAT_200002e0);\n    }\n    switch(mode) {\n    case 0:\n      set_memory_and_update_registers(value,0);\n      break;\n    case 1:\n      set_memory_and_update_registers(value,1,0);\n      break;\n    case 2:\n      set_memory_and_update_registers(value,0,1);\n      break;\n    case 3:\n      set_memory_and_update_registers(value,0,2);\n    }\n    set_bit_in_array_at_index(value,&DAT_2000030c);\n  }\n  return;\n}\n\n",
            "current_name": "process_data_and_update_array_08004110",
            "entrypoint": "0x08004110",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004110": "process_data_and_update_array_08004110",
                "find_value_in_array_0800355e": "find_value_in_array",
                "get_bit_value_08003138": "get_bit_value",
                "iVar1": "bit_value",
                "iVar3": "value",
                "param_1": "index",
                "param_2": "mode",
                "param_3": "data",
                "param_4": "data",
                "process_binary_data_080033d8": "process_binary_data",
                "process_data_08003414": "process_data",
                "puVar2": "array_ptr",
                "set_bit_in_array_at_index_0800314e": "set_bit_in_array_at_index",
                "set_memory_and_update_registers_08003486": "set_memory_and_update_registers",
                "update_bit_value_0800316c": "update_bit_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080041bc": {
            "additional_data": {
                "DAT_2000030c": {
                    "some_data": 1
                },
                "FUN_080041bc": {
                    "check_and_set_param_value": 2,
                    "check_and_update_param": 1,
                    "execute_condition_based_operation": 1,
                    "perform_action": 1,
                    "process_data": 17,
                    "process_param": 2,
                    "process_parameter": 2,
                    "process_parameter_value": 1,
                    "process_value": 2,
                    "set_param_value_based_on_condition": 1,
                    "update_parameter_based_on_condition": 1
                },
                "get_bit_value_08003138": {
                    "get_bit_value": 4
                },
                "get_memory_address_0800318c": {
                    "get_memory_address": 4
                },
                "iVar1": {
                    "bit_result": 3,
                    "bit_value": 26,
                    "condition_result": 1,
                    "result": 1
                },
                "param_1": {
                    "index": 22,
                    "input": 1,
                    "input_index": 2,
                    "param": 1,
                    "param_index": 2,
                    "value": 1,
                    "value_index": 2
                },
                "param_2": {
                    "bit_mask": 1,
                    "condition": 2,
                    "condition_flag": 1,
                    "condition_mask": 1,
                    "flag": 2,
                    "param1": 1,
                    "param1_bit": 1,
                    "param2": 4,
                    "value": 6,
                    "value1": 9,
                    "value_1": 2,
                    "value_to_update": 1
                },
                "param_3": {
                    "condition": 10,
                    "condition_value": 1,
                    "data": 1,
                    "memory_address": 1,
                    "param2": 1,
                    "param2_bit": 1,
                    "param3": 5,
                    "value2": 9,
                    "value_2": 2
                },
                "param_4": {
                    "buffer": 1,
                    "data": 15,
                    "data_arr": 1,
                    "data_array": 1,
                    "data_ptr": 7,
                    "param4": 2,
                    "param_buffer": 1,
                    "param_ptr": 1,
                    "pointer": 1,
                    "ptr_data": 1
                },
                "puVar3": {
                    "array": 1,
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "base_ptr": 1,
                    "bit_data": 1,
                    "bit_data_ptr": 1,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_ptr2": 1,
                    "lookup_table": 1,
                    "pointer": 5,
                    "ptr": 4,
                    "ptr_data": 1,
                    "ptr_value": 1,
                    "short_ptr": 4,
                    "source_addr": 1,
                    "start_address": 1,
                    "starting_address": 1,
                    "temp_ptr": 1
                },
                "set_param_value_based_on_condition_080034b6": {
                    "set_param_value": 1,
                    "set_param_value_based_on_condition": 2,
                    "set_parameter_based_on_condition": 1
                },
                "uVar2": {
                    "address": 8,
                    "mem_address": 3,
                    "memory_addr": 2,
                    "memory_address": 18
                },
                "uVar4": {
                    "array_value": 1,
                    "bit_data": 1,
                    "bit_index": 2,
                    "bit_mask": 2,
                    "bit_value": 4,
                    "data": 2,
                    "extracted_value": 1,
                    "index": 1,
                    "lookup_value": 2,
                    "short_value": 4,
                    "value": 10
                }
            },
            "called": [
                "FUN_08003138",
                "FUN_0800318c",
                "FUN_080034b6"
            ],
            "calling": [
                "FUN_080006b4",
                "FUN_08000600",
                "FUN_0800076c"
            ],
            "code": "\nvoid process_data_080041bc(uint index,undefined4 value1,undefined4 condition,undefined *data)\n\n{\n  int bit_value;\n  undefined4 memory_address;\n  undefined *pointer;\n  uint value;\n  \n  if (index < 0x60) {\n    value = (uint)*(short *)(&DAT_08005d3c + index * 2);\n    pointer = &DAT_08005d3c;\n  }\n  else {\n    value = 0xffffffff;\n    pointer = data;\n  }\n  if ((value != 0xffffffff) &&\n     (bit_value = get_bit_value(value,&DAT_2000030c,condition,pointer,data), bit_value != 0)) {\n    memory_address = get_memory_address((value << 0x18) >> 0x1c);\n    set_param_value_based_on_condition(memory_address,1 << (value & 0xf) & 0xffff,value1);\n  }\n  return;\n}\n\n",
            "current_name": "process_data_080041bc",
            "entrypoint": "0x080041bc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080041bc": "process_data_080041bc",
                "get_bit_value_08003138": "get_bit_value",
                "get_memory_address_0800318c": "get_memory_address",
                "iVar1": "bit_value",
                "param_1": "index",
                "param_2": "value1",
                "param_3": "condition",
                "param_4": "data",
                "puVar3": "pointer",
                "set_param_value_based_on_condition_080034b6": "set_param_value_based_on_condition",
                "uVar2": "memory_address",
                "uVar4": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004204": {
            "additional_data": {
                "": {
                    "": 1
                },
                "DAT_0800346c": {
                    "": 1
                },
                "FUN_08004204": {
                    "initialize_and_return_values": 1,
                    "initialize_data": 7,
                    "initialize_data_values": 23
                },
                "PTR_0800346c": {
                    "": 1
                },
                "initialize_data_values_0800346c": {
                    "initialize_data": 3,
                    "initialize_data_values": 17,
                    "initialize_values": 2
                },
                "void": {
                    "": 1
                }
            },
            "called": [
                "FUN_0800346c"
            ],
            "calling": [
                "FUN_08000b54",
                "FUN_0800076c"
            ],
            "code": "\nvoid initialize_data_values_08004204(void)\n\n{\n  initialize_data_values_08004204();\n  return;\n}\n\n",
            "current_name": "initialize_data_values_08004204",
            "entrypoint": "0x08004204",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004204": "initialize_data_values_08004204",
                "initialize_data_values_0800346c": "initialize_data_values"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004240": {
            "additional_data": {
                "0x138": {
                    "first_value_offset": 1,
                    "offset1": 1,
                    "offset_a": 1
                },
                "0x13a": {
                    "offset2": 1,
                    "offset_b": 1,
                    "second_value_offset": 1
                },
                "0x3f": {
                    "bitmask": 1,
                    "bitwise_and_mask": 1,
                    "bitwise_and_value": 1
                },
                "0x40": {
                    "constant_1": 1,
                    "constant_value": 1,
                    "constant_value_1": 1
                },
                "FUN_08004240": {
                    "calculate_and_adjust_value": 1,
                    "calculate_checksum": 5,
                    "calculate_difference": 2,
                    "calculate_hash": 1,
                    "calculate_offset": 12,
                    "calculate_result": 3,
                    "calculate_revised_value": 1,
                    "calculate_shift_amount": 4,
                    "calculate_shifted_difference": 1,
                    "calculate_shifted_value": 1
                },
                "_1": {
                    "first_value": 1
                },
                "_2": {
                    "second_value": 1
                },
                "param_1": {
                    "address": 4,
                    "address_offset": 1,
                    "base_address": 10,
                    "data_address": 2,
                    "data_offset": 2,
                    "input": 1,
                    "input_offset": 1,
                    "input_value": 7,
                    "offset": 1,
                    "offset_parameter": 1,
                    "offset_value": 1
                },
                "short": {
                    "ushort": 1,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004338"
            ],
            "code": "\nuushort calculate_offset_08004240(int base_address)\n\n{\n  return (*(ushort *)(base_address + 0x138) + 0x40) - *(ushort *)(base_address + 0x13a) & 0x3f;\n}\n\n",
            "current_name": "calculate_offset_08004240",
            "entrypoint": "0x08004240",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004240": "calculate_offset_08004240",
                "_1": "first_value",
                "param_1": "base_address",
                "short": "ushort"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080042ac": {
            "additional_data": {
                "FUN_080042ac": {
                    "extract_and_update_flag": 6,
                    "extract_and_validate_flag": 5,
                    "process_flag": 2,
                    "update_flag": 6,
                    "update_flag_value": 4,
                    "validate_and_store_data": 2,
                    "validate_and_store_flag": 2,
                    "validate_and_update_flag": 2,
                    "validate_flag": 2
                },
                "extract_and_validate_flag_08003e18": {
                    "extract_and_validate_flag": 1
                },
                "iVar1": {
                    "extraction_result": 1,
                    "flag_extraction_result": 1,
                    "flag_validation_result": 1,
                    "is_valid_flag": 1,
                    "result": 13,
                    "return_value": 1,
                    "validation_result": 13
                },
                "local_9": {
                    "extracted_data": 1,
                    "extracted_flag": 10,
                    "extracted_flag_value": 2,
                    "extracted_value": 5,
                    "flag": 1,
                    "flag_character": 1,
                    "flag_value": 7,
                    "new_flag": 1,
                    "new_value": 1,
                    "validated_flag_value": 1
                },
                "param_1": {
                    "flag": 3,
                    "flag_address": 3,
                    "flag_array": 1,
                    "flag_buffer": 1,
                    "flag_data": 3,
                    "flag_memory_address": 1,
                    "flag_parameter": 1,
                    "flag_ptr": 1,
                    "input": 12,
                    "input_data": 2,
                    "input_param": 1,
                    "input_value": 2
                },
                "uVar2": {
                    "current_value": 1,
                    "incremented_value": 2,
                    "new_flag": 4,
                    "new_flag_index": 1,
                    "new_flag_value": 8,
                    "new_index": 9,
                    "new_value": 1,
                    "next_index": 1,
                    "old_flag": 1,
                    "updated_flag": 1,
                    "updated_flag_value": 1,
                    "updated_value": 1
                }
            },
            "called": [
                "FUN_08003e18"
            ],
            "calling": [],
            "code": "\nvoid extract_and_update_flag_080042ac(int input)\n\n{\n  int result;\n  ushort new_index;\n  undefined extracted_flag;\n  \n  result = extract_and_validate_flag(input,&extracted_flag);\n  if ((result == 0) &&\n     (new_index = *(short *)(input + 100) + 1U & 0x3f, new_index != *(ushort *)(input + 0x66))) {\n    *(undefined *)(*(int *)(input + 0x60) + (uint)*(ushort *)(input + 100)) = extracted_flag;\n    *(ushort *)(input + 100) = new_index;\n  }\n  return;\n}\n\n",
            "current_name": "extract_and_update_flag_080042ac",
            "entrypoint": "0x080042ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080042ac": "extract_and_update_flag_080042ac",
                "extract_and_validate_flag_08003e18": "extract_and_validate_flag",
                "iVar1": "result",
                "local_9": "extracted_flag",
                "param_1": "input",
                "uVar2": "new_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080042e8": {
            "additional_data": {
                "FUN_080042e8": {
                    "initialize_and_store_data": 3,
                    "initialize_and_update_character_data": 1,
                    "initialize_character": 3,
                    "initialize_character_data": 5,
                    "initialize_data": 5,
                    "process_data": 1,
                    "set_flag_and_store_data": 1,
                    "update_and_store_data": 1,
                    "update_character_data": 11
                },
                "LAB_0800420c_1": {
                    "temporary_label": 1
                },
                "bVar1": {
                    "adjusted_value": 1,
                    "byte_count": 1,
                    "byte_counter": 2,
                    "byte_val_1": 1,
                    "byte_value": 16,
                    "byte_value1": 1,
                    "counter": 2,
                    "counter_byte": 1,
                    "incremented_value_byte": 1,
                    "new_value": 2,
                    "temp_byte": 1,
                    "temp_byte1": 1,
                    "temp_var1": 1
                },
                "bVar2": {
                    "adjusted_byte_count": 1,
                    "adjusted_byte_value": 2,
                    "adjusted_counter": 1,
                    "byte_val_2": 1,
                    "byte_value2": 1,
                    "masked_byte": 3,
                    "masked_byte_value": 7,
                    "masked_counter": 1,
                    "masked_incremented_value": 1,
                    "masked_value": 8,
                    "modified_byte": 1,
                    "modified_byte_value": 1,
                    "positive_value": 1,
                    "temp_byte2": 1,
                    "temp_var2": 1
                },
                "check_bit_combination_08003df4": {
                    "check_bit_combination": 3
                },
                "iVar3": {
                    "added_value": 1,
                    "bit_combination_check": 1,
                    "bit_combination_result": 2,
                    "check_result": 2,
                    "combination_check_result": 1,
                    "count": 1,
                    "counter": 6,
                    "increment": 1,
                    "incremented_value": 10,
                    "new_value": 2,
                    "new_value2": 1,
                    "result": 2,
                    "temp_var3": 1
                },
                "original_param_1": {
                    "original_data_pointer": 1
                },
                "original_param_2": {
                    "original_data_value": 1
                },
                "param_1": {
                    "base_address": 2,
                    "character": 1,
                    "character_address": 1,
                    "character_data": 9,
                    "character_data_address": 2,
                    "character_data_pointer": 1,
                    "character_data_ptr": 2,
                    "data_address": 4,
                    "data_buffer": 1,
                    "data_pointer": 6,
                    "data_ptr": 1,
                    "data_structure": 1
                },
                "param_2": {
                    "character_data": 2,
                    "character_data_value": 1,
                    "character_value": 2,
                    "data": 6,
                    "data_value": 3,
                    "input_data": 2,
                    "new_character": 1,
                    "new_character_data": 1,
                    "new_character_value": 2,
                    "new_data": 3,
                    "new_value": 7,
                    "parameter": 1
                },
                "update_and_initialize_character_data_08003eac": {
                    "initialize_character_data": 1,
                    "update_and_initialize_character_data": 2
                }
            },
            "called": [
                "FUN_08003df4",
                "FUN_08003eac"
            ],
            "calling": [],
            "code": "\nundefined4 initialize_and_update_character_data_080042e8(int character_data,undefined new_value)\n\n{\n  byte byte_value;\n  byte masked_value;\n  int incremented_value;\n  \n  *(undefined *)(character_data + 0x10) = 1;\n  incremented_value = *(ushort *)(character_data + 0x140) + 1;\n  byte_value = (byte)incremented_value;\n  masked_value = byte_value & 0x7f;\n  if (incremented_value == 0) {\n    masked_value = -(-byte_value & 0x7f);\n  }\n  do {\n  } while (*(ushort *)(character_data + 0x142) == (ushort)masked_value);\n  *(undefined *)(*(int *)(character_data + 0x13c) + (uint)*(ushort *)(character_data + 0x140)) = new_value;\n  *(ushort *)(character_data + 0x140) = (ushort)masked_value;\n  incremented_value = check_bit_combination(character_data + 0xd4);\n  if (incremented_value == 0) {\n    update_and_initialize_character_data(character_data + 0xd4,&temporary_label);\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_and_update_character_data_080042e8",
            "entrypoint": "0x080042e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080042e8": "initialize_and_update_character_data_080042e8",
                "LAB_0800420c_1": "temporary_label",
                "bVar1": "byte_value",
                "bVar2": "masked_value",
                "check_bit_combination_08003df4": "check_bit_combination",
                "iVar3": "incremented_value",
                "param_1": "character_data",
                "param_2": "new_value",
                "update_and_initialize_character_data_08003eac": "update_and_initialize_character_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004338": {
            "called": [
                "FUN_08004240"
            ],
            "calling": [
                "FUN_08004658"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800433e) */\n/* WARNING: Removing unreachable block (ram,0x08004350) */\n/* WARNING: Removing unreachable block (ram,0x08004346) */\n/* WARNING: Removing unreachable block (ram,0x08004358) */\n\nvoid FUNC_08004338(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004338",
            "entrypoint": "0x08004338",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004338": "FUNC_08004338"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004364": {
            "additional_data": {
                "0x11": {
                    "initial_value1": 1,
                    "offset2": 1,
                    "offset_value1": 1
                },
                "0x134": {
                    "address_offset1": 2,
                    "offset1": 6
                },
                "0x138": {
                    "address_offset2": 1,
                    "offset2": 1,
                    "short1": 1,
                    "value1": 5
                },
                "0x13a": {
                    "address_offset3": 1,
                    "offset3": 1,
                    "short2": 1,
                    "value2": 5
                },
                "0x13c": {
                    "address_offset2": 1,
                    "address_offset4": 1,
                    "offset2": 4,
                    "offset3": 1,
                    "offset4": 1
                },
                "0x140": {
                    "address_offset5": 1,
                    "offset5": 1,
                    "short3": 1,
                    "value3": 5
                },
                "0x142": {
                    "address_offset6": 1,
                    "offset6": 1,
                    "short4": 1,
                    "value4": 5
                },
                "0x51": {
                    "initial_value2": 1,
                    "offset4": 1,
                    "offset_value2": 1
                },
                "FUN_08004364": {
                    "initialize_data": 6,
                    "initialize_data_structure": 2,
                    "initialize_data_structures": 2,
                    "initialize_function": 2,
                    "initialize_memory": 2,
                    "initialize_memory_block": 1,
                    "initialize_parameters": 11,
                    "initialize_params": 1,
                    "initialize_user_data": 1,
                    "set_initial_values": 1,
                    "update_param_values": 1,
                    "update_parameters": 1
                },
                "param_1": {
                    "base_address": 18,
                    "data": 3,
                    "data_address": 1,
                    "data_structure_address": 1,
                    "initial_value": 1,
                    "input": 1,
                    "input_param": 1,
                    "memory_block_address": 1,
                    "param": 2,
                    "parameter": 1,
                    "user_data": 1
                },
                "param_2": {
                    "input_param2": 1
                },
                "param_3": {
                    "input_param3": 1
                },
                "pointer1": {
                    "pointer1_value": 1
                },
                "pointer2": {
                    "pointer2_value": 1
                },
                "var_1": {
                    "updated_var1": 1
                },
                "var_2": {
                    "updated_var2": 1
                },
                "var_3": {
                    "updated_var3": 1
                },
                "var_4": {
                    "updated_var4": 1
                },
                "var_5": {
                    "updated_var5": 1
                },
                "var_6": {
                    "updated_var6": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800447c"
            ],
            "code": "\nvoid initialize_parameters_08004364(int base_address)\n\n{\n  *(int *)(base_address + 0x134) = base_address + 0x11;\n  *(undefined2 *)(base_address + 0x138) = 0;\n  *(undefined2 *)(base_address + 0x13a) = 0;\n  *(int *)(base_address + 0x13c) = base_address + 0x51;\n  *(undefined2 *)(base_address + 0x140) = 0;\n  *(undefined2 *)(base_address + 0x142) = 0;\n  return;\n}\n\n",
            "current_name": "initialize_parameters_08004364",
            "entrypoint": "0x08004364",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004364": "initialize_parameters_08004364",
                "param_1": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004388": {
            "additional_data": {
                "FUN_08004388": {
                    "configure_hardware_serial": 2,
                    "configure_serial": 1,
                    "configure_serial_interface": 2,
                    "configure_serial_port": 9,
                    "configure_uart": 2,
                    "initialize_hardware_serial": 1,
                    "initialize_serial": 4,
                    "initialize_serial_communication": 4,
                    "initialize_serial_port": 1,
                    "initialize_uart_and_configure_pins": 1,
                    "initialize_uart_pins": 1,
                    "initialize_uart_pins_and_update_character_data": 1,
                    "set_serial_configuration": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "assertion_failure_handler": 1,
                    "error_handler": 1,
                    "jump_table": 13,
                    "jumper_table": 1,
                    "jumptable": 3,
                    "jumptable_address": 2,
                    "jumptable_func": 1,
                    "jumptable_function": 3,
                    "jumptable_function_pointer": 1,
                    "process_assertion": 1,
                    "recovery_function": 1,
                    "unrecovered_jump_table": 2
                },
                "bVar1": {
                    "config_bits": 7,
                    "config_byte_flag": 1,
                    "config_flag": 1,
                    "config_flag1": 1,
                    "config_flag_mask": 1,
                    "config_flag_subset": 1,
                    "config_mask": 2,
                    "config_value": 1,
                    "flag": 5,
                    "flag_bits": 1,
                    "flag_mask": 4,
                    "flag_value": 1,
                    "parity": 1,
                    "port_setting_pattern": 1,
                    "serial_config_masked": 1,
                    "serial_flags_masked": 1,
                    "serial_mode_bits": 1
                },
                "decode_data_and_process_assertion_08004808": {
                    "decode_data_and_process_assertion": 1,
                    "process_assertion": 1
                },
                "extraout_r1": {
                    "character_data": 2,
                    "comparison_result": 2,
                    "decoder_result": 1,
                    "error_code": 2,
                    "extra_output": 1,
                    "flag_result": 1,
                    "result": 3,
                    "return_value": 2
                },
                "iVar2": {
                    "config_count": 2,
                    "config_flag2": 1,
                    "config_option": 1,
                    "config_value": 8,
                    "config_variable": 1,
                    "configuration_options": 1,
                    "flag_value": 1,
                    "flags": 1,
                    "num_flags": 1,
                    "option": 1,
                    "option_value": 1,
                    "stop_bits": 1,
                    "uart_config": 6,
                    "uart_config_value": 1,
                    "uart_configuration": 1,
                    "uart_index": 1,
                    "uart_mode": 2
                },
                "initialize_and_configure_uart_pins_08003978": {
                    "initialize_and_configure_uart_pins": 1,
                    "initialize_uart_pins": 1
                },
                "param_1": {
                    "base_address": 3,
                    "device": 1,
                    "device_address": 2,
                    "port_address": 6,
                    "serial_address": 2,
                    "serial_config": 1,
                    "serial_data_address": 1,
                    "serial_instance": 1,
                    "serial_instance_address": 1,
                    "serial_interface": 1,
                    "serial_interface_address": 1,
                    "serial_object_address": 1,
                    "serial_port": 8,
                    "serial_port_address": 2
                },
                "param_2": {
                    "baud_rate": 27,
                    "config": 1,
                    "config_value": 1,
                    "configuration": 1,
                    "uart_config": 1
                },
                "param_3": {
                    "config": 2,
                    "config_byte": 4,
                    "config_data": 1,
                    "config_flags": 7,
                    "configuration_byte": 1,
                    "configuration_flags": 1,
                    "data_bits_and_parity_and_stop_bits": 1,
                    "flags": 6,
                    "port_settings": 1,
                    "serial_config": 5,
                    "serial_flags": 1,
                    "serial_mode": 1
                },
                "uRam0000012e": {
                    "data": 1
                },
                "update_character_data_from_flag_08003e54": {
                    "update_character_data": 1,
                    "update_character_data_from_flag": 1
                }
            },
            "called": [
                "FUN_08003e54",
                "FUN_08003978",
                "FUN_08004808"
            ],
            "calling": [
                "FUN_08000600"
            ],
            "code": "\nvoid configure_serial_port_08004388(int serial_port,undefined4 baud_rate,byte config_flags)\n\n{\n  uint result;\n  byte config_bits;\n  int config_value;\n  code *jump_table;\n  \n  *(undefined4 *)(serial_port + 0x11c) = baud_rate;\n  *(byte *)(serial_port + 0x144) = config_flags;\n  config_bits = config_flags & 7;\n  if (config_bits == 4) {\n    config_value = 7;\n  }\n  else if (config_bits == 6) {\n    config_value = 8;\n  }\n  else if (config_bits == 2) {\n    config_value = 6;\n  }\n  else {\n    config_value = 0;\n  }\n  if ((config_flags & 0x30) == 0x30) {\n    *(undefined4 *)(serial_port + 0x128) = 0x600;\n    config_value = config_value + 1;\n  }\n  else if ((config_flags & 0x20) == 0) {\n    *(undefined4 *)(serial_port + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serial_port + 0x128) = 0x400;\n    config_value = config_value + 1;\n  }\n  if ((config_flags & 8) == 0) {\n    *(undefined4 *)(serial_port + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serial_port + 0x124) = 0x2000;\n  }\n  if (config_value == 8) {\n    *(undefined4 *)(serial_port + 0x120) = 0;\n  }\n  else if (config_value == 9) {\n    *(undefined4 *)(serial_port + 0x120) = 0x1000;\n  }\n  else {\n    config_value = 0;\n  }\n  if (config_value != 0) {\n    initialize_and_configure_uart_pins(serial_port + 0xd4);\n    update_character_data_from_flag(serial_port + 0xd4,0x80042ad);\n    return;\n  }\n  jump_table = (code *)0x8004432;\n  decode_data_and_process_assertion(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\");\n  if (result < 0x60) {\n    data = *(undefined2 *)(&DAT_08005d3c + result * 2);\n  }\n  else {\n    data = 0xffff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08004452. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "configure_serial_port_08004388",
            "entrypoint": "0x08004388",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004388": "configure_serial_port_08004388",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "bVar1": "config_bits",
                "decode_data_and_process_assertion_08004808": "decode_data_and_process_assertion",
                "extraout_r1": "result",
                "iVar2": "config_value",
                "initialize_and_configure_uart_pins_08003978": "initialize_and_configure_uart_pins",
                "param_1": "serial_port",
                "param_2": "baud_rate",
                "param_3": "config_flags",
                "uRam0000012e": "data",
                "update_character_data_from_flag_08003e54": "update_character_data_from_flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004444": {
            "additional_data": {
                "FUN_08004444": {
                    "assign_default_color": 1,
                    "assign_value_to_param": 1,
                    "initialize_parameter": 1,
                    "set_function_parameter": 1,
                    "set_function_pointer": 1,
                    "set_function_result": 1,
                    "set_jump_table_entry": 1,
                    "set_jump_table_value": 1,
                    "set_jumptable_index": 1,
                    "set_output_value": 1,
                    "set_parameter_value": 1,
                    "set_result_based_on_param": 1,
                    "set_return_value": 4,
                    "set_return_value_based_on_input": 1,
                    "set_return_value_based_on_param": 2,
                    "update_data": 1,
                    "update_parameter": 5,
                    "update_parameter_and_call_function": 1,
                    "update_parameter_value": 4,
                    "update_value": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "jump_table": 11,
                    "jump_table_fn": 1,
                    "jump_table_func": 1,
                    "jump_table_function": 1,
                    "jumptable": 1
                },
                "param_1": {
                    "address": 6,
                    "base_address": 5,
                    "data": 1,
                    "data_address": 1,
                    "destination_address": 1,
                    "function_argument1": 1,
                    "input_buffer_address": 1,
                    "output_address": 5,
                    "output_buffer": 1,
                    "param1": 2,
                    "param_offset": 1,
                    "parameter1": 1,
                    "result_address": 2,
                    "result_pointer": 1,
                    "target_address": 2
                },
                "param_2": {
                    "color_index": 1,
                    "current_index": 1,
                    "function_argument2": 1,
                    "index": 4,
                    "input_value": 8,
                    "offset": 5,
                    "param2": 2,
                    "param_value": 1,
                    "parameter2": 1,
                    "value": 6,
                    "value_index": 1
                },
                "uVar1": {
                    "assigned_value": 1,
                    "default_color": 1,
                    "entry_value": 1,
                    "jump_target": 1,
                    "new_value": 6,
                    "output_value": 1,
                    "parameter_value": 1,
                    "result": 3,
                    "return_value": 8,
                    "selected_value": 1,
                    "updated_value": 4,
                    "value": 2,
                    "value_to_set": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800447c"
            ],
            "code": "\nvoid update_parameter_value_08004444(int address,uint input_value)\n\n{\n  undefined2 return_value;\n  code *jump_table;\n  \n  if (input_value < 0x60) {\n    return_value = *(undefined2 *)(&DAT_08005d3c + input_value * 2);\n  }\n  else {\n    return_value = 0xffff;\n  }\n  *(undefined2 *)(address + 0x12e) = return_value;\n                    /* WARNING: Could not recover jumptable at 0x08004452. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "update_parameter_value_08004444",
            "entrypoint": "0x08004444",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004444": "update_parameter_value_08004444",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "param_1": "address",
                "param_2": "input_value",
                "uVar1": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004460": {
            "additional_data": {
                "FUN_08004460": {
                    "assign_value_to_parameter": 1,
                    "set_default_value": 1,
                    "set_param": 1,
                    "set_param_value": 11,
                    "set_parameter_value": 6,
                    "set_result_value": 1,
                    "set_special_value": 1,
                    "set_ushort_at_offset": 1,
                    "update_data": 3,
                    "update_data_value": 1,
                    "update_memory_value": 1,
                    "update_parameter": 1,
                    "update_parameter_value": 2
                },
                "param_1": {
                    "address": 1,
                    "base_address": 11,
                    "data_start": 1,
                    "destination_address": 1,
                    "device_address": 1,
                    "function_ptr": 1,
                    "mem_address": 1,
                    "object_address": 4,
                    "output_address": 1,
                    "output_ptr": 1,
                    "param_array": 1,
                    "param_base": 1,
                    "target_address": 5,
                    "target_location": 1
                },
                "param_2": {
                    "index": 16,
                    "input_index": 1,
                    "input_value": 1,
                    "offset": 5,
                    "param_index": 2,
                    "param_value": 1,
                    "parameter_index": 4,
                    "value_index": 1
                },
                "uVar1": {
                    "assigned_value": 1,
                    "default_value": 2,
                    "new_value": 6,
                    "param_value": 2,
                    "parameter_value": 3,
                    "result": 1,
                    "special_value": 1,
                    "updated_value": 1,
                    "value": 12
                }
            },
            "called": [],
            "calling": [
                "FUN_0800447c"
            ],
            "code": "\nvoid set_param_value_08004460(int base_address,uint index)\n\n{\n  undefined2 value;\n  \n  if (index < 0x60) {\n    value = *(undefined2 *)(&DAT_08005d3c + index * 2);\n  }\n  else {\n    value = 0xffff;\n  }\n  *(undefined2 *)(base_address + 300) = value;\n  return;\n}\n\n",
            "current_name": "set_param_value_08004460",
            "entrypoint": "0x08004460",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004460": "set_param_value_08004460",
                "param_1": "base_address",
                "param_2": "index",
                "uVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800447c": {
            "additional_data": {
                "0x12e": {
                    "param_1_offset": 1
                },
                "0x4b": {
                    "param_2_offset": 1
                },
                "0x4c": {
                    "param_2_value": 1
                },
                "0x4d": {
                    "param_3_value": 1
                },
                "1000": {
                    "default_value": 1
                },
                "FUN_0800447c": {
                    "initialize_and_set_parameters": 2,
                    "initialize_and_update_param_values": 1,
                    "initialize_and_update_parameters": 1,
                    "initialize_config": 1,
                    "initialize_configuration": 2,
                    "initialize_param_values": 4,
                    "initialize_parameters": 18,
                    "initialize_params": 2
                },
                "find_value_or_default_0800351e": {
                    "find_default_value": 1,
                    "find_or_default_value": 4,
                    "find_value_or_default": 24
                },
                "initialize_parameters_08004364": {
                    "init_params": 1,
                    "initialize_parameters": 22,
                    "initialize_parameters_helper": 2,
                    "initialize_params": 4
                },
                "param_1": {
                    "config": 2,
                    "configuration": 1,
                    "param_array": 2,
                    "param_values": 2,
                    "parameter": 1,
                    "parameter_array": 5,
                    "parameters": 14,
                    "parameters_array": 1,
                    "params": 3
                },
                "param_2": {
                    "default_value": 1,
                    "param2": 1,
                    "value": 7,
                    "value1": 6,
                    "value_1": 14,
                    "value_param": 1,
                    "value_param_1": 1
                },
                "param_3": {
                    "default_value": 2,
                    "param": 1,
                    "param3": 1,
                    "param_3_value": 1,
                    "param_value": 1,
                    "parameter_value": 1,
                    "update_flag": 1,
                    "update_param": 1,
                    "update_value": 1,
                    "value2": 6,
                    "value_2": 14,
                    "value_param_2": 1
                },
                "param_4": {
                    "param4": 1,
                    "param_4_value": 1,
                    "param_value": 1,
                    "set_flag": 1,
                    "set_param": 1,
                    "set_value": 3,
                    "setting": 1,
                    "value2": 1,
                    "value3": 6,
                    "value_3": 14,
                    "value_param_3": 1
                },
                "parameters": {
                    "parameter_list": 1
                },
                "set_param_value_08004460": {
                    "set_param_value": 13,
                    "set_parameter_value": 15
                },
                "uVar1": {
                    "default_found_value": 1,
                    "default_value": 18,
                    "found_value": 10
                },
                "update_parameter_value_08004444": {
                    "update_param_value": 5,
                    "update_parameter_value": 22,
                    "update_value_param": 1
                },
                "value_1": {
                    "parameter_list_1": 1
                },
                "value_2": {
                    "parameter_list_2": 1
                }
            },
            "called": [
                "FUN_08004444",
                "FUN_0800351e",
                "FUN_08004364",
                "FUN_08004460"
            ],
            "calling": [
                "FUN_080044d8"
            ],
            "code": "\nundefined4 *\ninitialize_and_set_parameters_0800447c(undefined4 *parameters,undefined4 value_1,undefined4 value_2,undefined4 value_3)\n\n{\n  undefined2 default_value;\n  \n  parameters[1] = 0;\n  parameters[2] = 1000;\n  *parameters = &PTR_FUN_080042e8_1_08005ed4;\n  if (parameters == &DAT_20000338) {\n    update_parameter_value(&DAT_20000338,0x4c,value_2,&DAT_20000338,value_3);\n    set_parameter_value(&DAT_20000338,0x4d);\n  }\n  else {\n    default_value = find_value_or_default(value_1,&DAT_08005c10);\n    *(undefined2 *)((int)parameters + 0x12e) = default_value;\n    default_value = find_value_or_default(value_1,&DAT_08005ca0);\n    *(undefined2 *)(parameters + 0x4b) = default_value;\n  }\n  initialize_parameters(parameters);\n  return parameters;\n}\n\n",
            "current_name": "initialize_and_set_parameters_0800447c",
            "entrypoint": "0x0800447c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800447c": "initialize_and_set_parameters_0800447c",
                "find_value_or_default_0800351e": "find_value_or_default",
                "initialize_parameters_08004364": "initialize_parameters",
                "param_1": "parameters",
                "param_2": "value_1",
                "param_3": "value_2",
                "param_4": "value_3",
                "parameters": "parameter_list",
                "set_param_value_08004460": "set_parameter_value",
                "uVar1": "default_value",
                "update_parameter_value_08004444": "update_parameter_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080044d8": {
            "additional_data": {
                "FUN_080044d8": {
                    "initialize_and_set_parameters": 1,
                    "initialize_default_parameters": 1,
                    "initialize_if_first_parameter_is_1": 1,
                    "initialize_if_needed": 1,
                    "initialize_if_param1_equals_1": 2,
                    "initialize_if_param1_equals_one": 1,
                    "initialize_if_param1_is_1": 3,
                    "initialize_if_param1_is_one": 6,
                    "initialize_if_param_1_equals_1": 2,
                    "initialize_if_param_1_is_1": 1,
                    "initialize_if_param_1_is_one": 2,
                    "initialize_if_param_is_1": 2,
                    "initialize_if_param_is_one": 2,
                    "initialize_if_parameter_is_one": 1,
                    "initialize_if_parameter_valid": 1,
                    "initialize_if_required": 1,
                    "initialize_parameters": 2,
                    "initialize_parameters_if_condition_met": 1
                },
                "initialize_and_set_parameters_0800447c": {
                    "initialize_and_set_parameters": 6,
                    "initialize_parameters": 1
                },
                "param_1": {
                    "check_param1": 1,
                    "condition": 2,
                    "first_param": 1,
                    "flag": 7,
                    "input_condition": 1,
                    "is_one": 1,
                    "is_param1": 3,
                    "is_param1_one": 3,
                    "is_param_1": 2,
                    "is_param_1_1": 1,
                    "is_param_1_one": 1,
                    "is_param_one": 2,
                    "param_condition": 1,
                    "parameter_1": 2,
                    "status": 1,
                    "status_flag": 1,
                    "value_1": 1
                },
                "param_2": {
                    "check_param2": 1,
                    "input_value": 1,
                    "is_param2": 1,
                    "is_param_2": 2,
                    "param2": 3,
                    "param2_value": 4,
                    "param_2_value": 2,
                    "param_two": 1,
                    "param_value": 2,
                    "parameter_2": 2,
                    "second_param": 1,
                    "value": 10,
                    "value_2": 1
                },
                "param_3": {
                    "config_param_1": 1,
                    "new_param_3": 1,
                    "param3": 7,
                    "param3_value": 3,
                    "param_3": 7,
                    "param_3_value": 2,
                    "param_a": 4,
                    "param_three": 1,
                    "parameter1": 1,
                    "parameter_1": 1,
                    "parameter_3": 2,
                    "third_param": 1
                },
                "param_4": {
                    "config_param_2": 1,
                    "fourth_param": 1,
                    "new_param_4": 1,
                    "param4": 7,
                    "param4_value": 3,
                    "param_4": 7,
                    "param_4_value": 2,
                    "param_b": 4,
                    "param_four": 1,
                    "parameter2": 1,
                    "parameter_2": 1,
                    "parameter_4": 2
                }
            },
            "called": [
                "FUN_0800447c"
            ],
            "calling": [],
            "code": "\nvoid initialize_if_param_1_is_one_080044d8(int flag,int value,undefined4 param_3,undefined4 param4)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    initialize_and_set_parameters(&DAT_20000338,0x40004800,param_3,0xffff,param4);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_if_param_1_is_one_080044d8",
            "entrypoint": "0x080044d8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080044d8": "initialize_if_param_1_is_one_080044d8",
                "initialize_and_set_parameters_0800447c": "initialize_and_set_parameters",
                "param_1": "flag",
                "param_2": "value",
                "param_4": "param4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004544": {
            "additional_data": {
                "FUN_08004544": {
                    "initialize_data": 21,
                    "initialize_data_pointer": 1,
                    "initialize_data_struct": 1,
                    "initialize_function": 1,
                    "initialize_memory": 1,
                    "initialize_parameter_array": 1,
                    "initialize_params": 2,
                    "set_and_save_data": 1,
                    "set_data": 1,
                    "set_parameters": 1
                },
                "int": {
                    "offset": 1
                },
                "param_1": {
                    "data_pointer": 12,
                    "data_struct": 1,
                    "output": 3,
                    "output_address": 2,
                    "output_array": 1,
                    "output_data": 5,
                    "output_data_ptr": 1,
                    "output_pointer": 4,
                    "parameter_array": 1,
                    "pointer_to_memory": 1
                },
                "param_2": {
                    "value1": 29,
                    "value_1": 2
                },
                "param_3": {
                    "value2": 29,
                    "value_2": 2
                },
                "param_4": {
                    "value3": 29,
                    "value_3": 2
                },
                "param_5": {
                    "value4": 29,
                    "value_4": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08004560"
            ],
            "code": "\nvoid initialize_data_struct_08004544(undefined4 *data_pointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *data_pointer = &DAT_08005f28;\n  *(undefined *)(data_pointer + 1) = value1;\n  *(undefined *)((offset)data_pointer + 5) = value2;\n  *(undefined *)((offset)data_pointer + 6) = value3;\n  *(undefined *)((offset)data_pointer + 7) = value4;\n  return;\n}\n\n",
            "current_name": "initialize_data_struct_08004544",
            "entrypoint": "0x08004544",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004544": "initialize_data_struct_08004544",
                "int": "offset",
                "param_1": "data_pointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004560": {
            "additional_data": {
                "DAT_20000480": {
                    "data_structure": 1
                },
                "FUN_08004560": {
                    "initialize_data": 7,
                    "initialize_data_08004560": 1,
                    "initialize_data_if_parameters_match": 1,
                    "initialize_data_struct": 7,
                    "initialize_data_struct_if_condition": 1,
                    "initialize_data_struct_if_conditions_met": 1,
                    "initialize_data_struct_if_param1_is_1_and_param2_is_0xffff": 1,
                    "initialize_data_struct_or_default": 1,
                    "initialize_data_structure": 6,
                    "initialize_data_structures": 1,
                    "initialize_if_condition": 1,
                    "initialize_if_param_is_one_and_param2_is_max": 1,
                    "initialize_if_parameters_valid": 1,
                    "initialize_or_reset_data": 1
                },
                "initialize_data_struct_08004544": {
                    "initialize_data_struct": 2,
                    "initialize_data_structure": 1
                },
                "param_1": {
                    "condition_1": 1,
                    "first_param": 1,
                    "flag": 6,
                    "flag_1": 1,
                    "flag_one": 1,
                    "flag_parameter": 1,
                    "input_condition": 1,
                    "input_condition_1": 1,
                    "input_param1": 2,
                    "input_value_1": 1,
                    "is_match": 1,
                    "is_param1_equal_to_1": 1,
                    "is_param1_true": 1,
                    "is_param_1_one": 1,
                    "is_param_one_equal_to_one": 1,
                    "param1": 1,
                    "param_1": 1,
                    "param_is_one": 1,
                    "status": 2,
                    "status_check": 1,
                    "status_code": 1,
                    "value1": 2,
                    "value_1": 1
                },
                "param_2": {
                    "condition_2": 1,
                    "flag": 2,
                    "flag_2": 1,
                    "flag_two": 1,
                    "input_condition_2": 1,
                    "input_param2": 2,
                    "input_value": 1,
                    "input_value_2": 1,
                    "is_param2_equal_to_0xffff": 1,
                    "is_param_2_max_value": 1,
                    "is_param_two_equal_to_ffff": 1,
                    "param2": 1,
                    "param2_is_max": 1,
                    "param2_value": 1,
                    "param_2": 1,
                    "second_param": 1,
                    "value": 8,
                    "value2": 2,
                    "value_2": 1,
                    "value_check": 1,
                    "value_parameter": 1
                }
            },
            "called": [
                "FUN_08004544"
            ],
            "calling": [],
            "code": "\nvoid initialize_data_struct_or_default_08004560(int flag,int value)\n\n{\n  if ((flag == 1) && (value == 0xffff)) {\n    initialize_data_struct(&DAT_20000480,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_struct_or_default_08004560",
            "entrypoint": "0x08004560",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004560": "initialize_data_struct_or_default_08004560",
                "initialize_data_struct_08004544": "initialize_data_struct",
                "param_1": "flag",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004640": {
            "additional_data": {
                "FUN_08004640": {
                    "bitwise_combine_and_shift": 1,
                    "combine_and_shift": 1,
                    "combine_bits": 2,
                    "combine_bytes": 2,
                    "combine_data": 1,
                    "combine_param_and_shift": 1,
                    "combine_param_with_shifted_value": 1,
                    "combine_params": 7,
                    "combine_values": 13,
                    "combine_with_shift": 1,
                    "merge_values": 1
                },
                "param_1": {
                    "first_value": 1,
                    "input": 3,
                    "input1": 4,
                    "input_byte": 1,
                    "input_shifted": 1,
                    "input_value": 5,
                    "input_value1": 1,
                    "number": 1,
                    "value1": 13,
                    "value_to_shift": 1
                },
                "param_2": {
                    "base": 1,
                    "bit_mask": 3,
                    "bitmask": 2,
                    "flag": 1,
                    "input": 1,
                    "input2": 4,
                    "input_value2": 1,
                    "input_word": 1,
                    "mask": 2,
                    "mask_to_combine_with_shifted_value": 1,
                    "second_value": 1,
                    "value2": 13
                },
                "param_3": {
                    "bit_shifted_value": 1,
                    "combined_value": 2,
                    "new_input3": 1,
                    "result": 3,
                    "shifted_value": 3,
                    "value": 1
                },
                "param_4": {
                    "combined_result": 1,
                    "temp": 1
                },
                "param_5": {
                    "mask": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080007f0",
                "FUN_08000b04",
                "FUN_08000a7a",
                "FUN_080008e2",
                "FUN_08000a00",
                "FUN_08000a4e",
                "FUN_08000998"
            ],
            "code": "\nuint combine_values_08004640(int value1,uint value2)\n\n{\n  return value2 | value1 << 8;\n}\n\n",
            "current_name": "combine_values_08004640",
            "entrypoint": "0x08004640",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004640": "combine_values_08004640",
                "param_1": "value1",
                "param_2": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004646": {
            "called": [],
            "calling": [
                "FUN_08004658"
            ],
            "code": "\nvoid FUNC_08004646(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004646",
            "entrypoint": "0x08004646",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004646": "FUNC_08004646"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004648": {
            "additional_data": {
                "FUN_08004648": {
                    "initialize_and_update_data": 3,
                    "initialize_character_and_system": 17,
                    "initialize_character_and_system_data": 1,
                    "initialize_character_data": 1,
                    "initialize_character_system": 2,
                    "initialize_data": 1,
                    "initialize_game": 1,
                    "initialize_game_data": 3,
                    "initialize_system": 2
                },
                "initialize_character_and_system_data_08000d8e": {
                    "initialize_character_and_system_data": 28,
                    "initialize_character_system_data": 1,
                    "initialize_data": 1,
                    "initialize_system_data": 1
                },
                "update_data_register_08000e3c": {
                    "set_data_register": 1,
                    "update_data_register": 29,
                    "update_register": 1
                }
            },
            "called": [
                "FUN_08000e3c",
                "FUN_08000d8e"
            ],
            "calling": [
                "FUN_08004884"
            ],
            "code": "\nvoid initialize_character_and_system_data_08004648(void)\n\n{\n  update_data_register(3);\n  initialize_character_and_system_data_08004648();\n  return;\n}\n\n",
            "current_name": "initialize_character_and_system_data_08004648",
            "entrypoint": "0x08004648",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004648": "initialize_character_and_system_data_08004648",
                "initialize_character_and_system_data_08000d8e": "initialize_character_and_system_data",
                "update_data_register_08000e3c": "update_data_register"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004658": {
            "additional_data": {
                "FUNC_08004338": {
                    "clean_up": 2,
                    "cleanup": 5,
                    "cleanup_and_exit": 1,
                    "cleanup_and_reset": 1,
                    "cleanup_system_components": 1,
                    "execute_additional_tasks": 1,
                    "execute_cleanup": 1,
                    "execute_cleanup_function": 1,
                    "execute_end_process": 1,
                    "execute_second_function": 2,
                    "execute_system_function": 1,
                    "finalize_processing": 3,
                    "log_data": 1,
                    "perform_action": 1,
                    "perform_additional_operation": 1,
                    "perform_additional_operations": 1,
                    "perform_additional_processing": 2,
                    "perform_cleanup": 2,
                    "send_data": 1,
                    "update_gui_count": 1,
                    "update_serial_output": 1
                },
                "FUNC_08004646": {
                    "execute_first_function": 2,
                    "execute_initialization": 1,
                    "initialize": 6,
                    "initialize_components": 1,
                    "initialize_device": 1,
                    "initialize_hardware": 1,
                    "initialize_system": 11,
                    "initialize_system_components": 1,
                    "perform_initialization": 1
                },
                "FUN_08004658": {
                    "do_data_processing": 1,
                    "execute_data_processing": 1,
                    "execute_main_loop": 1,
                    "execute_main_process": 1,
                    "execute_processing_loop": 1,
                    "execute_serial_data_processing": 2,
                    "execute_serial_processing": 2,
                    "initialize_and_process_data": 3,
                    "initialize_serial_and_process_data": 1,
                    "initialize_serial_communication_loop": 1,
                    "main_loop": 3,
                    "maintain_serial_communication_loop": 1,
                    "process_serial_data": 2,
                    "run_continuous_process": 1,
                    "run_continuous_processing": 1,
                    "run_serial_communication": 1,
                    "run_serial_data_processing": 4,
                    "run_serial_processing": 2,
                    "serial_communication_loop": 1,
                    "serial_data_processing": 1
                },
                "initialize_serial_communication_08000c4c": {
                    "init_serial_comm": 1,
                    "init_serial_communication": 3,
                    "initialize_serial": 1,
                    "initialize_serial_comm": 3,
                    "initialize_serial_communication": 23
                },
                "process_data_and_count_08000c64": {
                    "process_and_count_data": 1,
                    "process_data": 1,
                    "process_data_and_count": 19,
                    "process_data_and_increment_count": 1,
                    "process_data_and_increment_counter": 1,
                    "process_data_and_update_count": 6,
                    "process_data_and_update_counter": 1,
                    "process_serial_data_and_count": 1
                }
            },
            "called": [
                "FUN_08004338",
                "FUN_08004646",
                "FUN_08000c4c",
                "FUN_08000c64"
            ],
            "calling": [
                "entry"
            ],
            "code": "\nvoid run_serial_data_processing_08004658(void)\n\n{\n  FUNC_08004646();\n  initialize_serial_communication();\n  do {\n    process_data_and_count();\n    FUNC_08004338();\n  } while( true );\n}\n\n",
            "current_name": "run_serial_data_processing_08004658",
            "entrypoint": "0x08004658",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004658": "run_serial_data_processing_08004658",
                "initialize_serial_communication_08000c4c": "initialize_serial_communication",
                "process_data_and_count_08000c64": "process_data_and_count"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004678": {
            "additional_data": {
                "FUN_08004678": {
                    "count_bits": 9,
                    "count_bits_set": 5,
                    "count_set_bits": 17
                },
                "cVar1": {
                    "bit_count": 28,
                    "bits_count": 1,
                    "bits_set": 1,
                    "count": 1
                },
                "param_1": {
                    "input": 3,
                    "input_num": 2,
                    "input_number": 2,
                    "num": 8,
                    "number": 15,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080047d0"
            ],
            "code": "\nchar count_bits_set_08004678(uint number)\n\n{\n  char bit_count;\n  \n  bit_count = '\\0';\n  for (; number != 1; number = number >> 1) {\n    bit_count = bit_count + '\\x01';\n  }\n  return bit_count;\n}\n\n",
            "current_name": "count_bits_set_08004678",
            "entrypoint": "0x08004678",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004678": "count_bits_set_08004678",
                "cVar1": "bit_count",
                "param_1": "number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080046b4": {
            "additional_data": {
                "FUN_080046b4": {
                    "initialize_constants": 1,
                    "initialize_data": 15,
                    "initialize_memory": 1,
                    "initialize_parameters": 9,
                    "initialize_registers": 1,
                    "initialize_settings": 3,
                    "update_settings": 1
                },
                "LAB_0800468c_1": {
                    "data_1": 1,
                    "label1": 5,
                    "label_0800468c_1": 2,
                    "shift_destination": 1,
                    "unused3": 3,
                    "unused_label": 2
                },
                "data_1": {
                    "data_1": 1
                },
                "flag": {
                    "flag": 2
                },
                "initializeData": {
                    "initialize_data": 4
                },
                "initializeParameters": {
                    "initialize_parameters": 3
                },
                "label1": {
                    "label1": 2
                },
                "left_shift_by32_bits_080047fe": {
                    "left_shift32_bits": 1,
                    "left_shift_by32_bits": 9,
                    "perform_left_shift": 11,
                    "perform_shift": 1,
                    "shift_data_left": 2,
                    "shift_data_left_by32_bits": 1,
                    "shift_values": 1
                },
                "param1": {
                    "param1": 1
                },
                "param2": {
                    "param2": 1
                },
                "param3": {
                    "param3": 1
                },
                "param4": {
                    "param4": 1
                },
                "param_1": {
                    "condition": 6,
                    "data_flag": 1,
                    "flag": 12,
                    "input": 1,
                    "mode": 1,
                    "param1": 1,
                    "parameter1": 2,
                    "status": 7
                },
                "param_2": {
                    "flag": 2,
                    "param2": 1,
                    "param_value": 2,
                    "parameter": 2,
                    "parameter2": 2,
                    "value": 22
                },
                "param_3": {
                    "param1": 1,
                    "param3": 4,
                    "param_3": 3,
                    "parameter3": 1,
                    "unused": 1,
                    "unused1": 6,
                    "unused_param": 2,
                    "unused_param1": 3,
                    "unused_param_1": 3,
                    "unused_parameter1": 1,
                    "value1": 1
                },
                "param_4": {
                    "param2": 1,
                    "param4": 4,
                    "param_4": 3,
                    "parameter4": 1,
                    "shift_amount": 1,
                    "shift_param": 1,
                    "shift_value": 2,
                    "unused": 1,
                    "unused2": 6,
                    "unused_param2": 4,
                    "unused_param_2": 3,
                    "unused_parameter2": 1,
                    "value2": 1
                },
                "shift_param": {
                    "shift_param": 1
                },
                "status": {
                    "status": 2
                },
                "value": {
                    "value": 4
                }
            },
            "called": [
                "FUN_080047fe"
            ],
            "calling": [],
            "code": "\nvoid initialize_data_080046b4(int flag,int value,undefined4 unused1,undefined4 unused2)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_20000488 = 6;\n    DAT_20000494 = 0;\n    DAT_2000049c = 7;\n    DAT_200004a8 = 0;\n    DAT_200004b0 = 8;\n    DAT_200004bc = 0;\n    DAT_200004c4 = 9;\n    DAT_200004d0 = 0;\n    DAT_200004d8 = 10;\n    DAT_200004e4 = 0;\n    DAT_200004ec = 0x17;\n    DAT_200004f8 = 0;\n    DAT_20000500 = 0x17;\n    DAT_2000050c = 0;\n    DAT_20000514 = 0x17;\n    DAT_20000520 = 0;\n    DAT_20000528 = 0x17;\n    DAT_20000534 = 0;\n    DAT_2000053c = 0x17;\n    DAT_20000548 = 0;\n    DAT_20000550 = 0x28;\n    DAT_2000055c = 0;\n    DAT_20000564 = 0x28;\n    DAT_20000570 = 0;\n    DAT_20000578 = 0x28;\n    DAT_20000584 = 0;\n    DAT_2000058c = 0x28;\n    DAT_20000598 = 0;\n    DAT_200005a0 = 0x28;\n    DAT_200005ac = 0;\n    DAT_200005b4 = 0x28;\n    DAT_200005c0 = 0;\n    perform_left_shift(0,&label1,&DAT_20000000,&DAT_20000488,unused2);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_080046b4",
            "entrypoint": "0x080046b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080046b4": "initialize_data_080046b4",
                "LAB_0800468c_1": "label1",
                "left_shift_by32_bits_080047fe": "perform_left_shift",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "unused1",
                "param_4": "unused2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080047c0": {
            "additional_data": {
                "DAT_20000494": {
                    "data_arr": 2,
                    "data_array": 4,
                    "data_buffer": 1
                },
                "FUN_080047c0": {
                    "check_and_update_data": 1,
                    "process_and_update": 1,
                    "process_and_update_data": 4,
                    "process_data": 10,
                    "process_data_and_check": 2,
                    "process_data_and_update": 4,
                    "process_data_or_call_callback": 1,
                    "process_data_or_call_updates": 1,
                    "process_or_call": 1,
                    "process_or_continue": 1,
                    "process_or_continue_execution": 1,
                    "process_or_recurse": 3,
                    "process_or_reroute_data": 1
                },
                "PTR_FUN_08004678": {
                    "count_bits_set": 1
                },
                "PTR_FUN_08005760": {
                    "process_data": 1
                },
                "count_bits_set_08004678": {
                    "calculate_set_bits_count": 1,
                    "count_bits_set": 1,
                    "count_set_bits": 20,
                    "count_set_bits_08004678": 1
                },
                "iVar1": {
                    "bit_count": 28,
                    "bits_count": 1,
                    "bits_set_count": 2
                },
                "param_1": {
                    "arg": 3,
                    "data": 13,
                    "data_input": 1,
                    "data_ptr": 1,
                    "data_structure": 1,
                    "input": 5,
                    "input_data": 2,
                    "input_param": 4,
                    "input_parameter": 1
                },
                "process_data_and_update_08005760": {
                    "process_and_update_data": 1,
                    "process_data": 1,
                    "process_data_and_update": 14,
                    "process_data_and_update_08005760": 1,
                    "process_data_and_update_subroutine": 1,
                    "process_data_update": 1,
                    "update_data": 4
                }
            },
            "called": [
                "FUN_08005760"
            ],
            "calling": [
                "FUN_080047d0"
            ],
            "code": "\nvoid process_data_and_update_080047c0(int data)\n\n{\n  int bit_count;\n  \n  if (*(int *)(data + 8) != 0) {\n    (**(code **)(data + 0xc))();\n    return;\n  }\n  process_data_and_update_080047c0();\n  bit_count = count_set_bits();\n  if ((&DAT_20000494)[bit_count * 5] != 0) {\n    process_data_and_update_080047c0();\n  }\n  return;\n}\n\n",
            "current_name": "process_data_and_update_080047c0",
            "entrypoint": "0x080047c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080047c0": "process_data_and_update_080047c0",
                "count_bits_set_08004678": "count_set_bits",
                "iVar1": "bit_count",
                "param_1": "data",
                "process_data_and_update_08005760": "process_data_and_update"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080047d0": {
            "additional_data": {
                "DAT_20000494": {
                    "data": 1
                },
                "FUN_080047d0": {
                    "check_and_process_data": 3,
                    "check_and_update_data": 5,
                    "process_and_update_data": 1,
                    "process_bit_data": 1,
                    "process_bit_set_data": 1,
                    "process_bits_if_not_zero": 1,
                    "process_bits_set": 3,
                    "process_data_if_bit_set": 7,
                    "process_data_if_bits_set": 1,
                    "process_if_bit_set": 3,
                    "process_if_bits_set": 3,
                    "process_set_bits": 1,
                    "update_data_if_bits_set": 1
                },
                "count_bits_set_08004678": {
                    "calculate_set_bit_count": 1,
                    "calculate_set_bits": 1,
                    "calculate_set_bits_count": 1,
                    "count_bits_set": 2,
                    "count_set_bits": 12,
                    "get_bit_count": 1,
                    "get_set_bit_count": 1,
                    "get_set_bits_count": 3
                },
                "iVar1": {
                    "bit_count": 11,
                    "count": 1,
                    "num_bits": 1,
                    "num_bits_set": 3,
                    "num_set_bits": 3,
                    "number_of_set_bits": 2,
                    "set_bit_count": 3,
                    "set_bits_count": 2
                },
                "process_data_and_update_080047c0": {
                    "process_and_sync_data": 1,
                    "process_and_upate_data": 1,
                    "process_and_update_data": 7,
                    "process_data_and_update": 1,
                    "update_bit_set_data": 1,
                    "update_data": 11
                }
            },
            "called": [
                "FUN_080047c0",
                "FUN_08004678"
            ],
            "calling": [
                "FUN_080011a4"
            ],
            "code": "\nvoid process_data_if_bit_set_080047d0(void)\n\n{\n  int bit_count;\n  \n  bit_count = count_set_bits();\n  if ((&DAT_20000494)[bit_count * 5] != 0) {\n    update_data();\n  }\n  return;\n}\n\n",
            "current_name": "process_data_if_bit_set_080047d0",
            "entrypoint": "0x080047d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080047d0": "process_data_if_bit_set_080047d0",
                "count_bits_set_08004678": "count_set_bits",
                "iVar1": "bit_count",
                "process_data_and_update_080047c0": "update_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080047fe": {
            "additional_data": {
                "FUN_080047fe": {
                    "bitwise_left_shift": 1,
                    "left_shift_32_bits": 1,
                    "left_shift_by32": 1,
                    "left_shift_by32_bits": 5,
                    "left_shift_by_32_bits": 4,
                    "reverse_bits": 1,
                    "shift_by32_bits": 1,
                    "shift_left_by32_bits": 11,
                    "shift_left_by_32_bits": 6
                },
                "param_1": {
                    "arg1": 1,
                    "destination": 1,
                    "input1": 7,
                    "input_1": 4,
                    "input_data": 1,
                    "input_parameter": 1,
                    "input_value": 5,
                    "input_value1": 1,
                    "num1": 1,
                    "param1": 1,
                    "source": 5,
                    "value": 1,
                    "value1": 1,
                    "value_one": 1
                },
                "param_2": {
                    "arg2": 1,
                    "destination": 5,
                    "input2": 7,
                    "input_2": 4,
                    "input_value2": 1,
                    "num2": 1,
                    "output_parameter": 1,
                    "output_value": 1,
                    "param2": 1,
                    "shift_amount": 3,
                    "shift_value": 3,
                    "source": 1,
                    "value2": 1,
                    "value_two": 1
                }
            },
            "called": [
                "FUN_08004844"
            ],
            "calling": [
                "FUN_080046b4"
            ],
            "code": "\nvoid left_shift_by32_bits_080047fe(undefined4 input1,undefined4 input2)\n\n{\n  left_shift_by32_bits_080047fe_08004844(input2,input1);\n  return;\n}\n\n",
            "current_name": "left_shift_by32_bits_080047fe",
            "entrypoint": "0x080047fe",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080047fe": "left_shift_by32_bits_080047fe",
                "param_1": "input1",
                "param_2": "input2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004808": {
            "additional_data": {
                "FUN_08004808": {
                    "assertion_failed": 6,
                    "assertion_failed_handler": 1,
                    "assertion_failure": 2,
                    "decode_and_process_assertion": 8,
                    "decode_and_process_assertion_error": 1,
                    "decode_and_process_data": 1,
                    "decode_assert_failed_msg": 1,
                    "decode_assertion_error": 1,
                    "decode_data_and_process_assertion": 1,
                    "handle_assertion_failure": 1,
                    "process_assertion": 5,
                    "process_assertion_failed": 2,
                    "process_failed_assertion": 1
                },
                "decode_and_process_data_08004860": {
                    "decode_and_process": 1,
                    "decode_and_process_data": 2,
                    "process_assertion": 1
                },
                "param_1": {
                    "assertion": 4,
                    "assertion_message": 5,
                    "error_message": 1,
                    "file": 11,
                    "file_name": 6,
                    "file_path": 2,
                    "filename": 1,
                    "message": 1
                },
                "param_2": {
                    "assertion_file": 1,
                    "file": 3,
                    "file_name": 6,
                    "line": 9,
                    "line_number": 12
                },
                "param_3": {
                    "additional_message": 1,
                    "assertion": 2,
                    "assertion_line": 1,
                    "assertion_message": 8,
                    "assertion_msg": 1,
                    "condition": 1,
                    "filename": 1,
                    "function_name": 2,
                    "line": 1,
                    "line_number": 5,
                    "message": 8
                },
                "param_4": {
                    "additional_info": 10,
                    "additional_message": 2,
                    "assertion_func": 1,
                    "format_specs": 1,
                    "function": 7,
                    "function_name": 5,
                    "line_number": 3,
                    "message": 2
                },
                "pcVar2": {
                    "additional_info": 5,
                    "additional_message": 2,
                    "comma_function": 1,
                    "declaration": 1,
                    "delimiter": 4,
                    "extra_info": 1,
                    "format_string": 1,
                    "function": 1,
                    "function_description": 2,
                    "function_info": 1,
                    "function_message": 1,
                    "function_name": 1,
                    "function_string": 1,
                    "function_text": 1,
                    "message": 1,
                    "message_part": 1,
                    "message_prefix": 1,
                    "message_suffix": 1,
                    "prefix": 2,
                    "suffix": 1
                },
                "process_and_update_data_080051ac": {
                    "process_and_update": 1,
                    "process_and_update_data": 3,
                    "update_data": 1
                },
                "uVar1": {
                    "assertion": 2,
                    "assertion_data": 1,
                    "assertion_failure_code": 1,
                    "assertion_flag": 3,
                    "assertion_info": 1,
                    "assertion_message": 1,
                    "assertion_offset": 4,
                    "assertion_pointer": 1,
                    "constant_value": 1,
                    "data": 3,
                    "data_address": 1,
                    "data_offset": 2,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_variable": 1,
                    "file_offset": 1,
                    "file_ptr": 1,
                    "ptr_data": 1,
                    "ptr_offset": 1,
                    "result": 1,
                    "temp_value": 1
                },
                "uVar3": {
                    "data": 1,
                    "data_result": 1,
                    "process_result": 1,
                    "processed_data": 12,
                    "result": 8,
                    "updated_data": 7
                },
                "uVar4": {
                    "additional_data": 4,
                    "additional_info": 2,
                    "additional_info_copy": 5,
                    "assertion_param": 1,
                    "constant_value2": 1,
                    "format_specs_copy": 1,
                    "func_argument": 1,
                    "function_flag": 1,
                    "function_offset": 1,
                    "function_param": 1,
                    "line_suffix": 1,
                    "message": 1,
                    "processed_line_number": 1,
                    "ptr_offset_2": 1,
                    "ptr_param_4": 1,
                    "suffix2": 1,
                    "temp": 1,
                    "temp_param4": 1,
                    "temp_var": 1,
                    "update": 1,
                    "updated_function_name": 1,
                    "updated_message": 1
                }
            },
            "called": [
                "FUN_08004860",
                "FUN_080051ac"
            ],
            "calling": [
                "FUN_08004388"
            ],
            "code": "\nvoid decode_data_and_process_assertion_08004808(undefined4 file,undefined4 line_number,char *assertion_message,undefined4 additional_info)\n\n{\n  undefined4 assertion_offset;\n  char *additional_info;\n  undefined8 processed_data;\n  undefined4 additional_info_copy;\n  \n  assertion_offset = *(undefined4 *)(DAT_200000a0 + 0xc);\n  additional_info_copy = additional_info;\n  if (assertion_message == (char *)0x0) goto LAB_0800482c;\n  additional_info = \", function: \";\n  do {\n    decode_and_process_data(assertion_offset,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",additional_info,file,line_number\n                 ,additional_info,assertion_message,additional_info_copy);\n    processed_data = process_and_update_data();\n    line_number = (undefined4)((ulonglong)processed_data >> 0x20);\n    assertion_offset = (undefined4)processed_data;\nLAB_0800482c:\n    assertion_message = \"\";\n    additional_info = assertion_message;\n  } while( true );\n}\n\n",
            "current_name": "decode_data_and_process_assertion_08004808",
            "entrypoint": "0x08004808",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004808": "decode_data_and_process_assertion_08004808",
                "decode_and_process_data_08004860": "decode_and_process_data",
                "param_1": "file",
                "param_2": "line_number",
                "param_3": "assertion_message",
                "param_4": "additional_info",
                "pcVar2": "additional_info",
                "process_and_update_data_080051ac": "process_and_update_data",
                "uVar1": "assertion_offset",
                "uVar3": "processed_data",
                "uVar4": "additional_info_copy"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004844": {
            "additional_data": {
                "0x20": {
                    "shift_by": 1
                },
                "DAT_": {
                    "": 1
                },
                "FUN_08004844": {
                    "convert_u_int_to_long_long": 1,
                    "left_shift64_bits": 2,
                    "left_shift_64_bit": 1,
                    "left_shift_64_bits": 1,
                    "left_shift_by32_bits": 1,
                    "left_shift_long": 1,
                    "left_shift_param_to_long_long": 1,
                    "left_shift_uint64": 1,
                    "shift_and_extend": 1,
                    "shift_left64": 1,
                    "shift_left_64_bits": 1,
                    "shift_left_by32": 5,
                    "shift_left_by32_bits": 5,
                    "shift_param2_left64": 1,
                    "shift_param_to_high_bits": 3,
                    "shift_parameter_to64_bits": 1,
                    "shift_uint64_left": 1,
                    "shift_unsigned_integer_left64": 1,
                    "shift_value_left": 1
                },
                "PTR_": {
                    "": 1
                },
                "param_1": {
                    "convert_param_1": 1,
                    "first_argument": 1,
                    "flags": 3,
                    "input": 3,
                    "input_mask": 1,
                    "input_param": 1,
                    "input_value": 4,
                    "num_bits_to_shift": 1,
                    "param": 6,
                    "param1": 5,
                    "size": 1,
                    "specifier": 1,
                    "undefined": 1,
                    "undefined_value": 1,
                    "value": 1
                },
                "param_2": {
                    "bit_value": 1,
                    "input": 1,
                    "input_uint": 1,
                    "input_value": 4,
                    "integer_to_shift": 1,
                    "param2": 2,
                    "shift_amount": 2,
                    "shift_value": 1,
                    "shifted_number": 1,
                    "value": 13,
                    "value_to_shift": 4
                },
                "ulonglong": {
                    "uint64": 1,
                    "unsigned_long_long": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080047fe"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800484c) */\n\nlonglong left_shift_by32_bits_08004844(undefined4 param,uint value)\n\n{\n  return (uint64)value << 0x20;\n}\n\n",
            "current_name": "left_shift_by32_bits_08004844",
            "entrypoint": "0x08004844",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004844": "left_shift_by32_bits_08004844",
                "param_1": "param",
                "param_2": "value",
                "ulonglong": "uint64"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004860": {
            "additional_data": {
                "FUN_08004860": {
                    "decode_and_process_data": 2,
                    "process_and_decode": 3,
                    "process_and_decode_data": 25,
                    "process_data": 1
                },
                "param_1": {
                    "data1": 3,
                    "data_1": 2,
                    "data_param1": 2,
                    "input1": 8,
                    "input_1": 2,
                    "input_data": 2,
                    "input_param": 3,
                    "input_param1": 5,
                    "input_param_1": 3,
                    "input_size": 1
                },
                "param_2": {
                    "data2": 3,
                    "data_2": 2,
                    "data_param2": 2,
                    "decoded_data": 1,
                    "input2": 8,
                    "input_2": 2,
                    "input_param2": 5,
                    "input_param_2": 4,
                    "output_data": 2,
                    "output_param": 2
                },
                "param_3": {
                    "aux_param_1": 1,
                    "buffer1": 1,
                    "data1": 1,
                    "data_1": 1,
                    "data_3": 1,
                    "data_param3": 2,
                    "data_pointer1": 1,
                    "decode_param1": 2,
                    "decode_param_1": 1,
                    "decoded_data": 2,
                    "decoded_data_ptr": 1,
                    "decoded_param": 3,
                    "decoded_param1": 1,
                    "input_param3": 1,
                    "input_param_3": 2,
                    "output1": 3,
                    "output_param1": 1,
                    "param3": 5,
                    "stack_arg1": 1
                },
                "param_4": {
                    "aux_param_2": 1,
                    "buffer2": 1,
                    "data2": 1,
                    "data_2": 1,
                    "data_4": 1,
                    "data_param4": 2,
                    "data_pointer2": 1,
                    "decode_param2": 2,
                    "decode_param_2": 1,
                    "decoded_data_size": 1,
                    "decoded_data_size_ptr": 1,
                    "decoded_param2": 3,
                    "input_param4": 1,
                    "input_param_4": 2,
                    "output2": 3,
                    "output_param2": 1,
                    "param4": 5,
                    "stack_arg2": 1,
                    "temporary_data": 1,
                    "unused_param": 1
                },
                "uStack_4": {
                    "buffer4": 1,
                    "data4": 1,
                    "data_pointer": 1,
                    "decode_param4": 1,
                    "decode_param_4": 1,
                    "decoded_data_2": 1,
                    "decoded_data_param2": 1,
                    "decoded_data_size": 1,
                    "decoded_output2": 1,
                    "decoded_param2": 2,
                    "decoded_param4": 1,
                    "output2_copy": 1,
                    "output_param2_copy": 1,
                    "temp_data_size": 1,
                    "temp_value": 1,
                    "temporary_data": 1,
                    "temporary_data_copy": 1,
                    "unused": 1,
                    "unused_data": 2,
                    "unused_data_pointer": 1,
                    "unused_var": 1,
                    "unused_variable": 2
                },
                "uStack_8": {
                    "buffer3": 1,
                    "data3": 1,
                    "decode_param3": 1,
                    "decode_param_3": 1,
                    "decoded_data": 8,
                    "decoded_data_1": 1,
                    "decoded_data_copy": 1,
                    "decoded_data_param1": 1,
                    "decoded_data_pointer": 1,
                    "decoded_output1": 1,
                    "decoded_param": 3,
                    "decoded_param3": 1,
                    "decoded_value": 1,
                    "output1_copy": 1,
                    "output_param1_copy": 1,
                    "temp_data": 1
                }
            },
            "called": [
                "FUN_08004a84"
            ],
            "calling": [
                "FUN_08004808"
            ],
            "code": "\nvoid decode_and_process_data_08004860(undefined4 input1,undefined4 input2,undefined4 param3,undefined4 param4)\n\n{\n  undefined4 decoded_data;\n  undefined4 unused_data;\n  \n  decoded_data = param3;\n  unused_data = param4;\n  process_and_decode_data_08004a84(DAT_200000a0,input1,input2,&decoded_data,input1,&decoded_data);\n  return;\n}\n\n",
            "current_name": "decode_and_process_data_08004860",
            "entrypoint": "0x08004860",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004860": "decode_and_process_data_08004860",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "param3",
                "param_4": "param4",
                "uStack_4": "unused_data",
                "uStack_8": "decoded_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004884": {
            "additional_data": {
                "DAT_08006008": {
                    "function_pointers": 1
                },
                "FUNC_080059f8": {
                    "additional_function": 1,
                    "cleanup": 1,
                    "cleanup_operations": 1,
                    "final_cleanup": 1,
                    "second_function": 1
                },
                "FUN_08004884": {
                    "execute_all_callbacks": 1,
                    "execute_all_functions": 2,
                    "execute_functions": 24,
                    "execute_two_loops": 1,
                    "iterate_and_call_functions": 1,
                    "run_function_array": 1,
                    "run_function_sequence": 1
                },
                "code": {
                    "function_array": 1,
                    "function_pointer": 1
                },
                "iVar1": {
                    "counter": 5,
                    "index": 26
                }
            },
            "called": [
                "FUN_08004648",
                "FUN_080059f8"
            ],
            "calling": [
                "entry"
            ],
            "code": "\nvoid execute_all_functions_08004884(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(function_array *)(&DAT_08006008)[index])();\n  }\n  FUNC_080059f8();\n  for (index = 0; index != 10; index = index + 1) {\n    (*(function_array *)(&DAT_08006008)[index])();\n  }\n  return;\n}\n\n",
            "current_name": "execute_all_functions_08004884",
            "entrypoint": "0x08004884",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004884": "execute_all_functions_08004884",
                "code": "function_array",
                "iVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080048cc": {
            "additional_data": {
                "FUN_080048cc": {
                    "clear_memory": 1,
                    "fill_memory": 12,
                    "fill_memory_block": 1,
                    "fill_memory_with": 1,
                    "fill_memory_with_byte": 1,
                    "fill_memory_with_value": 1,
                    "fill_with_byte": 1,
                    "fill_with_value": 2,
                    "initialize_array": 1,
                    "initialize_memory": 2,
                    "memset": 6,
                    "set_memory": 1
                },
                "param_1": {
                    "array": 2,
                    "buffer": 1,
                    "dest": 1,
                    "destination": 17,
                    "memory": 5,
                    "memory_array": 1,
                    "memory_block": 3
                },
                "param_2": {
                    "byte_to_fill": 2,
                    "value": 28
                },
                "param_3": {
                    "block_size": 1,
                    "count": 2,
                    "length": 10,
                    "length_of_memory_array": 1,
                    "num_elements": 1,
                    "size": 15
                },
                "puVar": {
                    "end_ptr": 1
                },
                "puVar1": {
                    "end": 2,
                    "end_address": 11,
                    "end_memory": 2,
                    "end_of_block": 1,
                    "end_ptr": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08005400",
                "FUN_0800532c",
                "FUN_08005374"
            ],
            "code": "\nvoid fill_memory_block_080048cc(undefined *destination,undefined value,int size)\n\n{\n  undefined *end_address;\n  \n  end_address = destination + size;\n  for (; destination != end_address; destination = destination + 1) {\n    *destination = value;\n  }\n  return;\n}\n\n",
            "current_name": "fill_memory_block_080048cc",
            "entrypoint": "0x080048cc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080048cc": "fill_memory_block_080048cc",
                "param_1": "destination",
                "param_2": "value",
                "param_3": "size",
                "puVar": "end_ptr",
                "puVar1": "end_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080048dc": {
            "additional_data": {
                "DAT_200005c8": {
                    "data_param": 1,
                    "head_ptr": 2,
                    "list_head": 1,
                    "start_ptr": 1
                },
                "FUNC_0800557c": {
                    "dummy_function1": 1,
                    "initialize": 2,
                    "initialize_data": 1,
                    "initialize_data_structure": 1,
                    "initialize_globals": 1
                },
                "FUNC_0800557e": {
                    "dummy_function2": 1,
                    "perform_operation": 1,
                    "process_data": 2,
                    "process_result": 1
                },
                "FUN_080048dc": {
                    "extract_and_update_elements": 1,
                    "process_data": 3,
                    "rearrange_data": 1,
                    "reorder_linked_list": 1,
                    "reverse_linked_list": 2,
                    "update_data": 3,
                    "update_data_list": 1,
                    "update_data_structure": 3,
                    "update_int_array": 1,
                    "update_linked_list": 11,
                    "update_pointer_array": 1,
                    "update_pointer_list": 1
                },
                "bVar6": {
                    "bool_var": 1,
                    "condition": 2,
                    "condition_result": 1,
                    "is_adjusted": 1,
                    "is_condition_met": 1,
                    "is_condition_true": 4,
                    "is_current_node_end": 1,
                    "is_end": 2,
                    "is_equal": 4,
                    "is_first_node": 1,
                    "is_head": 1,
                    "is_last_node": 3,
                    "is_linked_list_empty": 1,
                    "is_match": 2,
                    "is_new_node": 1,
                    "is_pointer_equal": 1,
                    "is_same": 2,
                    "is_same_node": 2
                },
                "extraout_r1": {
                    "curr_node": 1,
                    "extra": 1,
                    "extra_out_r1": 1,
                    "extra_out_var1": 1,
                    "extra_output": 2,
                    "extra_output1": 1,
                    "extra_ptr": 1,
                    "next": 2,
                    "next_element": 1,
                    "next_node": 1,
                    "ppi_var2": 1,
                    "ptr2": 1,
                    "temp": 2,
                    "temp2": 1,
                    "temp_pointer": 1,
                    "temp_pointer2": 1,
                    "temp_ptr": 2,
                    "temp_ptr1": 2,
                    "temp_ptr2": 4,
                    "temp_ptr_2": 2,
                    "temp_ptr_array": 1
                },
                "param_1": {
                    "array": 1,
                    "array_pointer": 3,
                    "array_ptr": 1,
                    "data": 1,
                    "head": 1,
                    "linked_list": 1,
                    "list": 1,
                    "node": 1,
                    "output": 5,
                    "output_array": 3,
                    "output_data": 1,
                    "pointer_list": 1,
                    "result": 9,
                    "result_ptr": 2
                },
                "param_2": {
                    "array_length": 3,
                    "array_size": 5,
                    "count": 3,
                    "input_array_size": 2,
                    "list_ptr": 1,
                    "list_size": 4,
                    "num_elements": 1,
                    "num_nodes": 1,
                    "size": 11
                },
                "param_3": {
                    "arg1": 1,
                    "arg3": 2,
                    "arg_1": 1,
                    "input1": 1,
                    "input_1": 1,
                    "param": 1,
                    "param1": 4,
                    "param3": 10,
                    "param_3": 6,
                    "param_a": 1,
                    "unknown1": 1,
                    "unused1": 1,
                    "val1": 1
                },
                "param_4": {
                    "arg2": 1,
                    "arg4": 2,
                    "arg_2": 1,
                    "config": 1,
                    "input2": 1,
                    "input_2": 1,
                    "param2": 4,
                    "param4": 10,
                    "param_4": 6,
                    "param_b": 1,
                    "unknown2": 1,
                    "unused2": 1,
                    "val2": 1
                },
                "piVar1": {
                    "current": 2,
                    "current_element": 1,
                    "current_index": 1,
                    "current_node": 1,
                    "current_value": 1,
                    "item_ptr": 1,
                    "node_value": 1,
                    "num_ptr": 1,
                    "ptr": 1,
                    "ptr1": 1,
                    "temp": 4,
                    "temp1": 2,
                    "temp_int": 1,
                    "temp_pointer1": 1,
                    "temp_ptr": 3,
                    "temp_ptr1": 4,
                    "temp_ptr_1": 1,
                    "temp_var1": 4
                },
                "pivVar2": {
                    "temp2": 1
                },
                "pivVar3": {
                    "temp3": 1
                },
                "pivVar4": {
                    "temp4": 1
                },
                "pivVar5": {
                    "temp5": 1
                },
                "ppiVar2": {
                    "curr_ptr": 2,
                    "current": 4,
                    "current_head": 1,
                    "current_node": 3,
                    "current_node_ptr": 1,
                    "current_pointer": 1,
                    "current_ptr": 4,
                    "current_ptr1": 1,
                    "current_ptr_1": 1,
                    "head": 1,
                    "new_node": 1,
                    "new_pointer1": 1,
                    "prev": 1,
                    "prev_element_ptr": 1,
                    "prev_node": 1,
                    "previous_node": 1,
                    "temp2": 1,
                    "temp_ptr2": 1,
                    "temp_ptr3": 2,
                    "temp_var2": 2
                },
                "ppiVar3": {
                    "current_node": 1,
                    "current_ptr": 2,
                    "current_ptr2": 1,
                    "current_ptr_2": 1,
                    "list_start": 1,
                    "next": 1,
                    "next_node": 2,
                    "next_node_ptr": 1,
                    "next_ptr": 2,
                    "node": 1,
                    "prev": 3,
                    "prev_node": 3,
                    "prev_ptr": 4,
                    "previous_pointer": 1,
                    "previous_ptr": 1,
                    "temp3": 1,
                    "temp_pointer3": 1,
                    "temp_ptr2": 1,
                    "temp_ptr3": 1,
                    "temp_ptr4": 1,
                    "temp_var3": 1
                },
                "ppiVar4": {
                    "current_ptr": 1,
                    "iterating_ptr": 1,
                    "next": 1,
                    "next_element_ptr": 1,
                    "next_node": 1,
                    "next_ptr": 2,
                    "node": 2,
                    "prev_node": 1,
                    "prev_ptr": 2,
                    "previous": 1,
                    "previous_node": 1,
                    "previous_ptr1": 1,
                    "ptr_4": 1,
                    "temp": 1,
                    "temp3": 1,
                    "temp4": 1,
                    "temp_node": 2,
                    "temp_pointer1": 1,
                    "temp_pointer4": 1,
                    "temp_ptr": 1,
                    "temp_ptr2": 1,
                    "temp_ptr3": 2,
                    "temp_ptr4": 1,
                    "temp_ptr5": 1,
                    "temp_ptr_3": 1,
                    "temp_var4": 1
                },
                "ppiVar5": {
                    "adjusted_ptr": 2,
                    "current_node": 1,
                    "head": 1,
                    "new_elem": 1,
                    "new_element": 2,
                    "new_element_ptr": 1,
                    "new_node": 9,
                    "new_node_ptr": 2,
                    "new_ptr": 3,
                    "node": 1,
                    "pointer_array": 1,
                    "previous_ptr2": 1,
                    "ptr_5": 1,
                    "temp5": 1,
                    "temp_pointer2": 1,
                    "temp_ptr5": 1,
                    "temp_ptr6": 1,
                    "temp_var5": 1
                }
            },
            "called": [
                "FUN_0800557c",
                "FUN_0800557e"
            ],
            "calling": [
                "FUN_080050d0",
                "FUN_080051ac"
            ],
            "code": "\nvoid update_linked_list_080048dc(undefined4 *result,int size,undefined4 param3,undefined4 param4)\n\n{\n  int *temp;\n  int **temp_ptr2;\n  int **current;\n  int **prev_ptr;\n  int **temp_ptr3;\n  int **new_node;\n  bool is_equal;\n  \n  if (size == 0) {\n    return;\n  }\n  new_node = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    new_node = (int **)((int)new_node + *(int *)(size + -4));\n  }\n  FUNC_0800557c();\n  prev_ptr = (int **)&DAT_200005c8;\n  if (DAT_200005c8 == (int **)0x0) {\n    new_node[1] = (int *)0x0;\n    current = temp_ptr2;\n    DAT_200005c8 = new_node;\n  }\n  else {\n    prev_ptr = DAT_200005c8;\n    if (new_node < DAT_200005c8) {\n      current = (int **)*new_node;\n      prev_ptr = (int **)((int)new_node + (int)current);\n      is_equal = DAT_200005c8 == prev_ptr;\n      if (is_equal) {\n        prev_ptr = (int **)*DAT_200005c8;\n        DAT_200005c8 = (int **)DAT_200005c8[1];\n      }\n      new_node[1] = (int *)DAT_200005c8;\n      DAT_200005c8 = new_node;\n      if (is_equal) {\n        prev_ptr = (int **)((int)prev_ptr + (int)current);\n        *new_node = (int *)prev_ptr;\n      }\n    }\n    else {\n      do {\n        temp_ptr3 = prev_ptr;\n        prev_ptr = (int **)temp_ptr3[1];\n        if (prev_ptr == (int **)0x0) break;\n      } while (prev_ptr <= new_node);\n      current = (int **)*temp_ptr3;\n      if ((int **)((int)temp_ptr3 + (int)current) == new_node) {\n        current = (int **)((int)current + (int)*new_node);\n        *temp_ptr3 = (int *)current;\n        if (prev_ptr == (int **)((int)temp_ptr3 + (int)current)) {\n          temp = *prev_ptr;\n          prev_ptr = (int **)prev_ptr[1];\n          temp_ptr3[1] = (int *)prev_ptr;\n          current = (int **)((int)current + (int)temp);\n          *temp_ptr3 = (int *)current;\n        }\n      }\n      else if (new_node < (int **)((int)temp_ptr3 + (int)current)) {\n        *result = 0xc;\n      }\n      else {\n        current = (int **)((int)new_node + (int)*new_node);\n        is_equal = prev_ptr == current;\n        if (is_equal) {\n          current = (int **)*prev_ptr;\n          prev_ptr = (int **)prev_ptr[1];\n        }\n        new_node[1] = (int *)prev_ptr;\n        if (is_equal) {\n          current = (int **)((int)current + (int)*new_node);\n          *new_node = (int *)current;\n        }\n        temp_ptr3[1] = (int *)new_node;\n      }\n    }\n  }\n  FUNC_0800557e(result,current,prev_ptr,param4);\n  return;\n}\n\n",
            "current_name": "update_linked_list_080048dc",
            "entrypoint": "0x080048dc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080048dc": "update_linked_list_080048dc",
                "bVar6": "is_equal",
                "extraout_r1": "temp_ptr2",
                "param_1": "result",
                "param_2": "size",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "temp",
                "ppiVar2": "current",
                "ppiVar3": "prev_ptr",
                "ppiVar4": "temp_ptr3",
                "ppiVar5": "new_node"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004978": {
            "additional_data": {
                "DAT_200005c8": {
                    "block_list": 1,
                    "first_block": 2,
                    "first_entry": 1,
                    "head": 2,
                    "head_ptr": 1,
                    "memory_list": 1,
                    "start_block": 1
                },
                "DAT_200005cc": {
                    "allocated_block": 2,
                    "allocation_flag": 2,
                    "first_block_initialized": 1,
                    "initialized": 2,
                    "is_block_list_initialized": 1,
                    "is_first_block_allocated": 1
                },
                "FUNC_0800557c": {
                    "function1": 1,
                    "function_1": 1,
                    "initialize": 1,
                    "some_function_1": 2
                },
                "FUNC_0800557e": {
                    "function2": 1,
                    "function_2": 1,
                    "some_function_2": 2
                },
                "FUN_08004978": {
                    "allocate_and_assign_block": 2,
                    "allocate_and_assign_memory": 12,
                    "allocate_and_assign_memory_block": 15,
                    "allocate_and_initialize_memory": 1,
                    "allocate_and_initialize_memory_block": 1
                },
                "allocate_and_assign_memory_block": {
                    "alloc_ptr": 1
                },
                "allocate_and_initialize_memory_block": {
                    "allocate_and_initialize_memory_block": 1
                },
                "allocate_memory_block_and_assign_to_param_0800500c": {
                    "allocate_and_assign_block": 1,
                    "allocate_and_assign_memory_block_2": 1,
                    "allocate_and_assign_memory_block_func": 2,
                    "allocate_block": 1,
                    "allocate_block_and_assign": 1,
                    "allocate_memory_and_assign": 1,
                    "allocate_memory_block_and_assign_to_result_0800500c": 1
                },
                "allocate_memory_block_and_assign_to_result_0800500c": {
                    "allocate_memory_block": 1
                },
                "iVar2": {
                    "block_diff": 2,
                    "block_size": 6,
                    "block_size_diff": 1,
                    "counter": 1,
                    "diff": 2,
                    "difference": 12,
                    "offset": 2,
                    "overflow_size": 1,
                    "padding": 1,
                    "remaining_bytes": 1,
                    "remaining_space": 1,
                    "size_difference": 1
                },
                "malloc": {
                    "allocate_memory_block_and_assign_to_result_0800500c": 1
                },
                "param_1": {
                    "output": 5,
                    "output_buffer": 3,
                    "output_pointer": 1,
                    "output_ptr": 5,
                    "result": 16,
                    "result_ptr": 1
                },
                "param_2": {
                    "block_size": 1,
                    "buffer_length": 1,
                    "input_size": 8,
                    "requested_size": 1,
                    "size": 20
                },
                "puVar1": {
                    "current": 4,
                    "current_block": 21,
                    "current_block_ptr": 1,
                    "current_entry": 1,
                    "current_ptr": 1,
                    "prev_block": 1,
                    "ptr1": 1,
                    "temp_ptr": 1
                },
                "puVar3": {
                    "current_block": 1,
                    "current_block_next": 3,
                    "current_ptr": 1,
                    "next": 4,
                    "next_block": 13,
                    "next_block_ptr": 1,
                    "next_entry": 1,
                    "previous_block": 3,
                    "ptr2": 1,
                    "ptr_to_be_replaced": 1,
                    "temp": 1,
                    "temp_block": 1
                },
                "puVar5": {
                    "allocated_block": 1,
                    "last_block": 1,
                    "prev": 1,
                    "prev_block": 2,
                    "prev_block_ptr": 1,
                    "prev_ptr": 1,
                    "previous": 3,
                    "previous_block": 14,
                    "previous_block_next": 3,
                    "previous_block_ptr": 1,
                    "previous_entry": 1,
                    "previous_ptr": 2
                },
                "uVar4": {
                    "block_diff": 3,
                    "block_diff_minus_input_size": 1,
                    "block_diff_minus_size": 1,
                    "block_difference": 4,
                    "block_size": 2,
                    "block_size_difference": 2,
                    "comparison": 1,
                    "diff": 3,
                    "difference": 5,
                    "difference_abs": 1,
                    "difference_between_pointers": 1,
                    "entry_difference": 1,
                    "new_block_size": 1,
                    "offset_difference": 1,
                    "ptr_difference": 1,
                    "size_diff": 1,
                    "size_difference": 1,
                    "temp_diff": 1
                },
                "uVar6": {
                    "adjusted_block_size": 1,
                    "adjusted_size": 2,
                    "aligned_block_size": 1,
                    "aligned_size": 4,
                    "alloc_size": 1,
                    "allocated_block_size": 1,
                    "allocated_bytes": 1,
                    "allocated_length": 1,
                    "allocated_size": 10,
                    "block_size": 3,
                    "final_size": 1,
                    "new_block_size": 4,
                    "new_size": 1
                }
            },
            "called": [
                "FUN_0800500c",
                "FUN_0800557c",
                "FUN_0800557e"
            ],
            "calling": [
                "FUN_080054fc",
                "FUN_08005374"
            ],
            "code": "\nuint allocate_and_assign_memory_block_08004978(undefined4 *result,uint size)\n\n{\n  uint *current_block;\n  int difference;\n  uint *next_block;\n  uint difference;\n  uint *previous_block;\n  uint allocated_size;\n  \n  allocated_size = (size + 3 & 0xfffffffc) + 8;\n  if (allocated_size < 0xc) {\n    allocated_size = 0xc;\n  }\n  if (((int)allocated_size < 0) || (allocated_size < size)) {\n    *result = 0xc;\n  }\n  else {\n    FUNC_0800557c();\n    current_block = DAT_200005c8;\n    previous_block = DAT_200005c8;\n    while (next_block = current_block, next_block != (uint *)0x0) {\n      difference = *next_block - allocated_size;\n      if (-1 < (int)difference) {\n        if (difference < 0xc) {\n          if (previous_block == next_block) {\n            current_block = (uint *)previous_block[1];\n          }\n          else {\n            current_block = (uint *)next_block[1];\n          }\n          if (previous_block != next_block) {\n            previous_block[1] = (uint)current_block;\n            previous_block = next_block;\n            current_block = DAT_200005c8;\n          }\n        }\n        else {\n          *next_block = difference;\n          *(uint *)((int)next_block + difference) = allocated_size;\n          previous_block = (uint *)((int)next_block + difference);\n          current_block = DAT_200005c8;\n        }\n        goto LAB_080049dc;\n      }\n      previous_block = next_block;\n      current_block = (uint *)next_block[1];\n    }\n    if (DAT_200005cc == 0) {\n      DAT_200005cc = allocate_and_assign_memory_block_08004978_func(result);\n    }\n    current_block = (uint *)allocate_and_assign_memory_block_08004978_func(result,allocated_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((previous_block = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == previous_block ||\n        (difference = allocate_and_assign_memory_block_08004978_func(result,(int)previous_block - (int)current_block), difference != -1)))) {\n      *previous_block = allocated_size;\n      current_block = DAT_200005c8;\nLAB_080049dc:\n      DAT_200005c8 = current_block;\n      FUNC_0800557e(result);\n      allocated_size = (int)previous_block + 0xbU & 0xfffffff8;\n      difference = allocated_size - (int)(previous_block + 1);\n      if (difference != 0) {\n        *(int *)((int)previous_block + difference) = -difference;\n        return allocated_size;\n      }\n      return allocated_size;\n    }\n    *result = 0xc;\n    FUNC_0800557e(result);\n  }\n  return 0;\n}\n\n",
            "current_name": "allocate_and_assign_memory_block_08004978",
            "entrypoint": "0x08004978",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004978": "allocate_and_assign_memory_block_08004978",
                "allocate_memory_block_and_assign_to_param_0800500c": "allocate_and_assign_memory_block_func",
                "iVar2": "difference",
                "param_1": "result",
                "param_2": "size",
                "puVar1": "current_block",
                "puVar3": "next_block",
                "puVar5": "previous_block",
                "uVar4": "difference",
                "uVar6": "allocated_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004a34": {
            "additional_data": {
                "DAT_08005fa0": {
                    "constant3": 1,
                    "constant_3": 1,
                    "dat_08005fa0": 2
                },
                "DAT_08005fc0": {
                    "constant1": 1,
                    "constant_1": 1,
                    "dat_08005fc0": 2
                },
                "DAT_08005fe0": {
                    "constant2": 1,
                    "constant_2": 1,
                    "dat_08005fe0": 2
                },
                "FUN_08004a34": {
                    "process_and_decode_data": 6,
                    "process_and_store_data": 1,
                    "process_byte": 5,
                    "process_data": 14,
                    "process_data_and_decode": 1,
                    "process_input": 3,
                    "process_input_data": 1
                },
                "decode_and_process_data_080052cc": {
                    "decode_and_process_data": 6,
                    "decode_and_process_data_080052cc": 1,
                    "decode_and_process_data_function": 1
                },
                "iVar1": {
                    "index": 7,
                    "index_var": 1,
                    "int_var1": 1,
                    "length": 1,
                    "temp": 1,
                    "temp1": 2,
                    "temp_var": 7,
                    "temp_var1": 2,
                    "temp_var_1": 3,
                    "temp_variable_1": 1,
                    "var1": 1
                },
                "initialize_memory_blocks_080053a0": {
                    "initialize_memory_blocks": 8
                },
                "param_1": {
                    "arg1": 3,
                    "context": 1,
                    "data": 1,
                    "function_param": 1,
                    "function_ptr": 1,
                    "input": 4,
                    "input_data": 3,
                    "input_index": 1,
                    "input_param": 6,
                    "input_param_1": 1,
                    "input_parameter": 1,
                    "input_ptr": 1,
                    "input_value": 1,
                    "integer_param": 1,
                    "param1": 4,
                    "ptr_to_data": 1
                },
                "param_2": {
                    "arg2": 3,
                    "byte_param": 3,
                    "byte_to_process": 1,
                    "byte_val": 1,
                    "byte_value": 10,
                    "data": 1,
                    "data_byte": 5,
                    "input_byte": 3,
                    "input_param_2": 1,
                    "param2": 3
                },
                "param_3": {
                    "arg3": 3,
                    "buffer": 1,
                    "byte_array": 1,
                    "byte_array_ptr": 1,
                    "byte_double_ptr": 1,
                    "byte_pointer": 1,
                    "byte_ptr_array": 2,
                    "byte_ptr_ptr": 3,
                    "data_array": 3,
                    "data_buffer": 2,
                    "data_param": 1,
                    "data_ptr": 4,
                    "input_array": 1,
                    "input_buffer": 1,
                    "input_byte_array": 1,
                    "input_data": 1,
                    "input_param_3": 1,
                    "param3": 3
                },
                "pbVar2": {
                    "array_index": 1,
                    "array_ptr": 1,
                    "buffer_ptr": 2,
                    "byte_ptr": 1,
                    "byte_var2": 1,
                    "current_byte": 5,
                    "data_ptr_minus_1": 1,
                    "index": 1,
                    "last_byte": 1,
                    "last_byte_ptr": 1,
                    "prev_data_byte": 1,
                    "previous_byte": 1,
                    "ptr1": 2,
                    "temp2": 1,
                    "temp_byte_ptr": 1,
                    "temp_ptr1": 1,
                    "temp_ptr_1": 2,
                    "temp_var2": 2,
                    "temp_var_2": 3,
                    "temp_variable_2": 1,
                    "var2": 1
                },
                "pbVar3": {
                    "byte_ptr2": 1,
                    "byte_var3": 1,
                    "data": 1,
                    "data_ptr": 3,
                    "data_ptr_2": 1,
                    "decoded_byte": 1,
                    "decoded_data_ptr": 1,
                    "next_byte": 3,
                    "next_element": 1,
                    "previous_byte": 1,
                    "process_data_ptr": 1,
                    "ptr2": 2,
                    "short_value": 1,
                    "temp3": 1,
                    "temp_byte_ptr_2": 1,
                    "temp_data_byte": 1,
                    "temp_ptr2": 1,
                    "temp_ptr_2": 2,
                    "temp_var3": 2,
                    "temp_var_3": 3,
                    "temp_variable_3": 1,
                    "var3": 1
                },
                "process_data_080050d0": {
                    "process_data": 5,
                    "process_data_080050d0": 1,
                    "process_data_function": 1,
                    "process_data_helper": 1
                },
                "uVar4": {
                    "param_2_converted": 1,
                    "processed_byte": 1,
                    "result": 14,
                    "return_val": 1,
                    "return_value": 12,
                    "temp4": 1,
                    "uint_var4": 1
                }
            },
            "called": [
                "FUN_080052cc",
                "FUN_080053a0",
                "FUN_080050d0"
            ],
            "calling": [
                "FUN_08004a60"
            ],
            "code": "\nuint process_data_and_decode_08004a34(int input_param,byte byte_value,byte **data_ptr)\n\n{\n  int temp_var;\n  byte *current_byte;\n  byte *temp_var_3;\n  uint result;\n  \n  current_byte = data_ptr[2] + -1;\n  data_ptr[2] = current_byte;\n  if ((-1 < (int)current_byte) ||\n     (((int)data_ptr[6] <= (int)current_byte && (current_byte = (byte *)(uint)byte_value, current_byte != (byte *)0xa))))\n  {\n    current_byte = *data_ptr;\n    *data_ptr = current_byte + 1;\n    *current_byte = byte_value;\n    return (uint)byte_value;\n  }\n  if ((input_param != 0) && (*(int *)(input_param + 0x18) == 0)) {\n    initialize_memory_blocks();\n  }\n  if (data_ptr == (byte **)&DAT_08005fc0) {\n    data_ptr = *(byte ***)(input_param + 4);\n  }\n  else if (data_ptr == (byte **)&DAT_08005fe0) {\n    data_ptr = *(byte ***)(input_param + 8);\n  }\n  else if (data_ptr == (byte **)&DAT_08005fa0) {\n    data_ptr = *(byte ***)(input_param + 0xc);\n  }\n  data_ptr[2] = data_ptr[6];\n  temp_var_3 = (byte *)(uint)*(ushort *)(data_ptr + 3);\n  temp_var = (int)temp_var_3 << 0x1c;\n  if (((temp_var < 0) && (temp_var_3 = data_ptr[4], temp_var_3 != (byte *)0x0)) ||\n     (temp_var = process_data(input_param,data_ptr,temp_var,temp_var_3,current_byte), temp_var == 0)) {\n    temp_var = (int)*data_ptr - (int)data_ptr[4];\n    result = (uint)byte_value;\n    if ((temp_var < (int)data_ptr[5]) || (temp_var = decode_and_process_data(input_param,data_ptr), temp_var == 0)) {\n      data_ptr[2] = data_ptr[2] + -1;\n      current_byte = *data_ptr;\n      *data_ptr = current_byte + 1;\n      *current_byte = byte_value;\n      if ((byte *)(temp_var + 1) != data_ptr[5]) {\n        if (-1 < (int)((uint)*(ushort *)(data_ptr + 3) << 0x1f)) {\n          return result;\n        }\n        if (result != 10) {\n          return result;\n        }\n      }\n      temp_var = decode_and_process_data(input_param,data_ptr);\n      if (temp_var == 0) {\n        return result;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "process_data_and_decode_08004a34",
            "entrypoint": "0x08004a34",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004a34": "process_data_and_decode_08004a34",
                "decode_and_process_data_080052cc": "decode_and_process_data",
                "iVar1": "temp_var",
                "initialize_memory_blocks_080053a0": "initialize_memory_blocks",
                "param_1": "input_param",
                "param_2": "byte_value",
                "param_3": "data_ptr",
                "pbVar2": "current_byte",
                "pbVar3": "temp_var_3",
                "process_data_080050d0": "process_data",
                "uVar4": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004a60": {
            "additional_data": {
                "FUN_08004a60": {
                    "decode_and_process_data": 7,
                    "decode_data": 2,
                    "process_and_decode_data": 22
                },
                "iVar1": {
                    "result": 31
                },
                "iVar3": {
                    "curr_length": 1,
                    "current_index": 9,
                    "current_length": 12,
                    "current_pos": 1,
                    "current_size": 1,
                    "iter": 1,
                    "length_counter": 1,
                    "remaining_data_len": 1,
                    "remaining_len": 1,
                    "remaining_length": 3
                },
                "param_1": {
                    "arg1": 9,
                    "arg_1": 1,
                    "data": 1,
                    "data_1": 1,
                    "data_processing_param": 1,
                    "data_processor": 1,
                    "input1": 1,
                    "input_1": 3,
                    "input_param": 6,
                    "input_param1": 1,
                    "input_param_1": 6
                },
                "param_2": {
                    "arg2": 9,
                    "arg_2": 1,
                    "data_2": 1,
                    "decode_param": 4,
                    "input2": 1,
                    "input_2": 3,
                    "input_param2": 1,
                    "input_param_2": 6,
                    "length": 1,
                    "output_param": 4
                },
                "param_3": {
                    "data": 8,
                    "data_array": 2,
                    "data_pointer": 1,
                    "data_ptr": 16,
                    "input": 1,
                    "input_data": 3
                },
                "param_4": {
                    "array_size": 1,
                    "data_len": 3,
                    "data_length": 17,
                    "data_size": 2,
                    "length": 6,
                    "size": 2
                },
                "puVar2": {
                    "end_of_array": 1,
                    "end_of_data": 13,
                    "end_of_data_ptr": 1,
                    "end_pointer": 1,
                    "end_ptr": 15
                }
            },
            "called": [
                "FUN_08004a34"
            ],
            "calling": [
                "FUN_08004a84"
            ],
            "code": "\nint decode_and_process_data_08004a60(undefined4 arg1,undefined4 arg2,undefined *data_ptr,int data_length)\n\n{\n  int result;\n  undefined *end_ptr;\n  int current_length;\n  \n  end_ptr = data_ptr + data_length;\n  current_length = data_length;\n  do {\n    if (data_ptr == end_ptr) {\n      return 0;\n    }\n    result = process_data_and_decode_08004a34(arg1,*data_ptr,arg2,data_length,current_length);\n    data_length = result + 1;\n    data_ptr = data_ptr + 1;\n  } while (data_length != 0);\n  return result;\n}\n\n",
            "current_name": "decode_and_process_data_08004a60",
            "entrypoint": "0x08004a60",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004a60": "decode_and_process_data_08004a60",
                "iVar1": "result",
                "iVar3": "current_length",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "data_ptr",
                "param_4": "data_length",
                "puVar2": "end_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004a84": {
            "additional_data": {
                "FUN_08004a84": {
                    "decode_and_process": 2,
                    "decode_and_process_data": 6,
                    "decode_and_process_input": 2,
                    "process_and_decode_data": 5,
                    "process_data": 12,
                    "process_function": 2,
                    "process_input_data": 1
                },
                "bVar3": {
                    "flag": 3,
                    "found": 2,
                    "found_digit": 2,
                    "found_number": 1,
                    "found_offset": 1,
                    "has_digit": 1,
                    "has_digits": 1,
                    "has_number": 1,
                    "is_digit": 7,
                    "is_number": 2,
                    "is_numeric": 3,
                    "is_true": 3,
                    "is_valid": 4
                },
                "decode_and_process_data_08004a60": {
                    "decode_and_process_data": 2
                },
                "decode_and_process_data_08004d9c": {
                    "decode_and_process_data": 1,
                    "decode_and_process_data2": 1
                },
                "find_byte_sequence_offset_08000230": {
                    "find_byte_sequence_offset": 1,
                    "find_sequence_offset": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "result": 28,
                    "return_value": 1,
                    "status": 1
                },
                "iVar6": {
                    "count": 1,
                    "counter": 3,
                    "current_index": 1,
                    "index": 4,
                    "int_var1": 1,
                    "iterator": 1,
                    "offset": 4,
                    "temp": 3,
                    "temp_var": 8,
                    "temp_var2": 2,
                    "temp_var_2": 1,
                    "value": 2
                },
                "initialize_memory_blocks_080053a0": {
                    "initialize_memory_blocks": 2
                },
                "local_30": {
                    "const4": 1,
                    "constant4": 1,
                    "e_and_g_flags": 1,
                    "flag4": 2,
                    "flag5": 1,
                    "local_30": 1,
                    "local_var11": 1,
                    "offset_sequence": 1,
                    "opt5": 1,
                    "pointer": 1,
                    "reserved_2": 1,
                    "temp_value2": 1,
                    "temp_var2": 1,
                    "temp_var_3": 1,
                    "undefined4_val2": 1,
                    "unknown2": 2,
                    "unknown_ptr": 1,
                    "unknown_var_5": 1,
                    "unused": 1,
                    "unused2": 1,
                    "unused_flag": 1,
                    "unused_var2": 1,
                    "unused_variable2": 1,
                    "unused_variable3": 1,
                    "value4": 1,
                    "value7": 1
                },
                "local_45": {
                    "alignment_flag": 1,
                    "asterisk": 1,
                    "character3": 1,
                    "const3": 1,
                    "constant3": 1,
                    "flag": 1,
                    "flag2": 1,
                    "flag3": 3,
                    "flag4": 1,
                    "flag_3": 2,
                    "flag_qualifier": 1,
                    "format_sign": 1,
                    "hash_char": 1,
                    "local_45": 1,
                    "local_byte2": 1,
                    "local_var10": 1,
                    "mode_flag": 1,
                    "modifier": 1,
                    "opt4": 1,
                    "temp_undefined3": 1,
                    "undefined_val3": 1,
                    "unknown_var_4": 1,
                    "value3": 1,
                    "value6": 1,
                    "variable3": 1
                },
                "local_6e": {
                    "char_plus": 1,
                    "char_val2": 1,
                    "character2": 1,
                    "const2": 1,
                    "constant2": 1,
                    "constant_2": 1,
                    "default_char2": 1,
                    "flag2": 3,
                    "flag_2": 2,
                    "flag_b": 1,
                    "local_6e": 1,
                    "local_var9": 1,
                    "opt3b": 1,
                    "plus": 1,
                    "plus_char": 1,
                    "plus_flag": 1,
                    "second_flag_bit": 1,
                    "temp_undefined2": 1,
                    "undefined_val2": 1,
                    "unknown_char2": 1,
                    "unknown_var_3": 1,
                    "unused_variable2": 1,
                    "value2": 1,
                    "value5": 1,
                    "variable2": 1
                },
                "local_6f": {
                    "char_space": 1,
                    "char_val1": 1,
                    "character1": 1,
                    "const1": 1,
                    "constant1": 1,
                    "constant_1": 1,
                    "default_char1": 1,
                    "first_flag_bit": 1,
                    "flag1": 3,
                    "flag_1": 2,
                    "flag_a": 1,
                    "local_6f": 1,
                    "local_var8": 1,
                    "opt3a": 1,
                    "space": 1,
                    "space_char": 1,
                    "space_flag": 1,
                    "temp_undefined1": 1,
                    "undefined_val1": 1,
                    "unknown_char1": 1,
                    "unknown_var_2": 1,
                    "unused_variable1": 1,
                    "value1": 1,
                    "value4": 1,
                    "variable1": 1
                },
                "local_70": {
                    "additional_byte": 1,
                    "byte_val": 3,
                    "byte_val1": 1,
                    "byte_value": 2,
                    "byte_var1": 1,
                    "char_value": 2,
                    "character": 1,
                    "current_byte": 3,
                    "current_char": 3,
                    "current_character": 2,
                    "current_flag": 1,
                    "current_option": 1,
                    "flag_char": 1,
                    "format_char": 1,
                    "format_specifier": 1,
                    "local_byte": 1,
                    "local_var7": 1,
                    "mode": 1,
                    "special_char": 1,
                    "symbol": 1,
                    "temp_byte": 1
                },
                "local_74": {
                    "local_int3": 1,
                    "local_var6": 1,
                    "processed_bytes": 1,
                    "total": 4,
                    "total_bytes": 2,
                    "total_bytes_processed": 2,
                    "total_length": 11,
                    "total_processed": 1,
                    "total_size": 7
                },
                "local_7c": {
                    "counter": 1,
                    "decimal_value2": 1,
                    "flag2": 1,
                    "int_val2": 1,
                    "int_value": 1,
                    "integer": 1,
                    "integer_val_2": 1,
                    "iteration": 1,
                    "local_7c": 1,
                    "local_int2": 1,
                    "local_var5": 1,
                    "multiplier": 1,
                    "num3": 1,
                    "num_digits": 1,
                    "num_offset": 1,
                    "number": 3,
                    "numeric_value": 1,
                    "offset": 3,
                    "opt2": 1,
                    "value": 1,
                    "value1": 1,
                    "value3": 2,
                    "width": 3
                },
                "local_80": {
                    "config_ptr_2": 1,
                    "constant_value": 1,
                    "decimal_unit": 1,
                    "flag1": 1,
                    "flag3": 1,
                    "local_80": 1,
                    "local_u_int2": 1,
                    "local_var4": 1,
                    "num2": 1,
                    "opt1": 1,
                    "reserved": 1,
                    "temp_value": 2,
                    "temp_var1": 1,
                    "undefined": 1,
                    "undefined4_val": 1,
                    "unknown": 4,
                    "unknown_value": 1,
                    "unknown_var": 1,
                    "unused": 2,
                    "unused_var": 2,
                    "unused_variable": 1,
                    "value2": 2,
                    "zero": 1
                },
                "local_84": {
                    "count": 1,
                    "decimal": 2,
                    "decimal_places": 2,
                    "decimal_point_position": 1,
                    "decimal_value": 1,
                    "flag2": 1,
                    "float_value": 1,
                    "int_val": 1,
                    "integer_val": 1,
                    "integer_value": 2,
                    "length_modifier": 1,
                    "local_int": 1,
                    "local_var3": 1,
                    "multiplier": 3,
                    "num1": 1,
                    "num_decimal_places": 1,
                    "numeric_opt": 1,
                    "numeric_value": 1,
                    "precision": 1,
                    "star_value": 1,
                    "threshold": 2,
                    "value": 1,
                    "value1": 2
                },
                "local_88": {
                    "bit_flags": 2,
                    "bit_mask": 1,
                    "byte_flags": 1,
                    "flag": 1,
                    "flag1": 1,
                    "flags": 17,
                    "local_u_int": 1,
                    "local_var2": 1,
                    "option_flags": 1,
                    "options": 1,
                    "sequence_flags": 3
                },
                "local_8c": {
                    "block_size_ptr": 1,
                    "counter_ptr": 1,
                    "int_array": 1,
                    "lengths_ptr": 1,
                    "local_array": 1,
                    "local_int_array": 2,
                    "local_var1": 1,
                    "local_variables": 1,
                    "local_vars": 1,
                    "offsets_ptr": 1,
                    "output_array": 2,
                    "output_pointer": 3,
                    "output_ptr": 8,
                    "param_array": 1,
                    "param_list_ptr": 1,
                    "ptr_counter": 1,
                    "ptr_output": 1,
                    "result_array": 1,
                    "var_args": 1
                },
                "param_1": {
                    "arg_1": 1,
                    "buffer": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "data_struct": 1,
                    "data_structure": 1,
                    "input": 8,
                    "input_1": 2,
                    "input_data": 5,
                    "input_param": 4,
                    "input_param1": 1,
                    "input_pointer": 1,
                    "input_ptr": 2,
                    "param1": 1
                },
                "param_2": {
                    "arg_2": 1,
                    "config": 1,
                    "config_data": 2,
                    "config_ptr": 1,
                    "data": 1,
                    "data_param": 4,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "flags": 1,
                    "header": 1,
                    "header_ptr": 1,
                    "input_2": 2,
                    "input_data": 1,
                    "input_param2": 1,
                    "metadata_ptr": 1,
                    "options": 1,
                    "param2": 1,
                    "param_array": 6,
                    "param_list": 1,
                    "params_array": 1,
                    "strings": 1
                },
                "param_3": {
                    "byte_array": 8,
                    "byte_array_param": 1,
                    "byte_ptr": 1,
                    "byte_sequence": 2,
                    "data": 7,
                    "data_buffer": 3,
                    "data_ptr": 1,
                    "data_string": 1,
                    "input_3": 2,
                    "input_param3": 1,
                    "input_string": 2,
                    "param3": 1,
                    "text_data": 1
                },
                "param_4": {
                    "arg_4": 1,
                    "block_size_ptr": 1,
                    "input_4": 2,
                    "input_param4": 1,
                    "int_array": 2,
                    "lengths": 1,
                    "offsets": 2,
                    "output": 5,
                    "output_data": 5,
                    "output_param": 4,
                    "output_pointer": 1,
                    "output_ptr": 2,
                    "param4": 1,
                    "result": 2,
                    "result_ptr": 1
                },
                "pbVar4": {
                    "byte_pointer1": 1,
                    "byte_ptr": 4,
                    "byte_ptr1": 3,
                    "byte_ptr_temp1": 1,
                    "byte_var1": 1,
                    "curr_byte": 1,
                    "current_byte": 12,
                    "current_char": 4,
                    "ptr1": 3,
                    "ptr_data": 1
                },
                "pbVar5": {
                    "byte_pointer2": 1,
                    "byte_ptr2": 5,
                    "byte_ptr_temp2": 1,
                    "byte_var2": 1,
                    "current_byte": 1,
                    "current_byte_ptr": 1,
                    "next_byte": 13,
                    "next_char": 4,
                    "ptr2": 3,
                    "ptr_data_temp": 1
                },
                "piVar2": {
                    "block_size": 1,
                    "count": 1,
                    "int_ptr": 1,
                    "length_ptr": 1,
                    "offset_ptr": 2,
                    "output_ptr_current": 1,
                    "output_ptr_temp": 1,
                    "param_array": 1,
                    "pointer": 3,
                    "pointer_var": 2,
                    "ptr": 7,
                    "ptr1": 1,
                    "ptr_counter": 1,
                    "ptr_data": 1,
                    "ptr_tmp": 1,
                    "ptr_var": 4,
                    "temp_pointer": 2
                },
                "process_data_080050d0": {
                    "process_data": 2
                },
                "unaff_r9": {
                    "additional_data": 2,
                    "additional_result": 2,
                    "buffer_size": 1,
                    "decode_result": 1,
                    "decoded_data": 1,
                    "decoded_length": 1,
                    "extra_var": 1,
                    "offset": 3,
                    "result_2": 1,
                    "return_value": 1,
                    "temp_value": 1,
                    "temp_var": 4,
                    "temp_var1": 1,
                    "unaff_r9": 6,
                    "unaff_var1": 1,
                    "unaff_variable": 1,
                    "unaffected_variable": 1,
                    "unavoidable_reg9": 1,
                    "unused": 1
                }
            },
            "called": [
                "FUN_08000230",
                "FUN_08004a60",
                "FUN_080053a0",
                "FUN_080050d0",
                "FUN_08004d9c"
            ],
            "calling": [
                "FUN_08004fdc",
                "FUN_08004860"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08004c58) */\n\nint process_and_decode_data_08004a84(int input,undefined4 *param_array,byte *byte_array,int *output_data)\n\n{\n  int result;\n  int *ptr;\n  bool is_digit;\n  byte *current_byte;\n  byte *next_byte;\n  int unaff_r9;\n  int temp_var;\n  int *output_ptr;\n  uint flags;\n  int multiplier;\n  undefined4 unknown;\n  int width;\n  int total_length;\n  byte current_char;\n  undefined flag1;\n  undefined flag2;\n  undefined flag3;\n  undefined4 flag4;\n  \n  output_ptr = output_data;\n  if ((input != 0) && (*(int *)(input + 0x18) == 0)) {\n    initialize_memory_blocks();\n  }\n  if (param_array == &DAT_08005fc0) {\n    param_array = *(undefined4 **)(input + 4);\n  }\n  else if (param_array == (undefined4 *)&DAT_08005fe0) {\n    param_array = *(undefined4 **)(input + 8);\n  }\n  else if (param_array == (undefined4 *)&DAT_08005fa0) {\n    param_array = *(undefined4 **)(input + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(param_array + 3) << 0x1c)) || (param_array[4] == 0)) &&\n     (temp_var = process_data(input,param_array), temp_var != 0)) {\n    return -1;\n  }\n  total_length = 0;\n  flag1 = 0x20;\n  flag2 = 0x30;\n  current_byte = byte_array;\nLAB_08004ac6:\n  next_byte = current_byte;\n  if (*next_byte != 0) goto LAB_08004b7c;\n  goto LAB_08004ad0;\nLAB_08004b7c:\n  current_byte = next_byte + 1;\n  if (*next_byte != 0x25) goto LAB_08004ac6;\nLAB_08004ad0:\n  temp_var = (int)next_byte - (int)byte_array;\n  if (temp_var != 0) {\n    result = decode_and_process_data(input,param_array,byte_array,temp_var);\n    if (result == -1) {\nLAB_08004c70:\n      if ((int)((uint)*(ushort *)(param_array + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return total_length;\n    }\n    total_length = total_length + temp_var;\n  }\n  if (*next_byte == 0) goto LAB_08004c70;\n  flags = 0;\n  width = 0;\n  multiplier = -1;\n  unknown = 0;\n  flag3 = 0;\n  flag4 = 0;\n  current_byte = next_byte + 1;\n  while( true ) {\n    temp_var = find_byte_sequence_offset(\"#-0+ \",*current_byte);\n    byte_array = current_byte + 1;\n    if (temp_var == 0) break;\n    flags = 1 << (temp_var + 0xf7ffa094U & 0xff) | flags;\n    current_byte = byte_array;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    flag3 = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    flag3 = 0x2b;\n  }\n  if (*current_byte == 0x2a) {\n    ptr = output_ptr + 1;\n    temp_var = *output_ptr;\n    output_ptr = ptr;\n    if (temp_var < 0) {\n      width = -temp_var;\n      flags = flags | 2;\n      goto LAB_08004bae;\n    }\n  }\n  else {\n    is_digit = false;\n    temp_var = width;\n    byte_array = current_byte;\n    while( true ) {\n      if (9 < *byte_array - 0x30) break;\n      temp_var = temp_var * 10 + (*byte_array - 0x30);\n      is_digit = true;\n      byte_array = byte_array + 1;\n    }\n    if (!is_digit) goto LAB_08004bae;\n  }\n  width = temp_var;\nLAB_08004bae:\n  if (*byte_array == 0x2e) {\n    if (byte_array[1] == 0x2a) {\n      multiplier = *output_ptr;\n      if (multiplier < 0) {\n        multiplier = -1;\n      }\n      byte_array = byte_array + 2;\n      output_ptr = output_ptr + 1;\n    }\n    else {\n      is_digit = false;\n      multiplier = 0;\n      temp_var = 0;\n      while( true ) {\n        byte_array = byte_array + 1;\n        if (9 < *byte_array - 0x30) break;\n        temp_var = temp_var * 10 + (*byte_array - 0x30);\n        is_digit = true;\n      }\n      if (is_digit) {\n        multiplier = temp_var;\n      }\n    }\n  }\n  temp_var = find_byte_sequence_offset(&DAT_08005f72,*byte_array,3);\n  if (temp_var != 0) {\n    flags = flags | 0x40 << (temp_var + 0xf7ffa08eU & 0xff);\n    byte_array = byte_array + 1;\n  }\n  current_char = *byte_array;\n  byte_array = byte_array + 1;\n  temp_var = find_byte_sequence_offset(\"efgEFG\",current_char,6);\n  if (temp_var == 0) {\n    unaff_r9 = decode_and_process_data(input,&flags,param_array,0x8004a61,&output_ptr);\n    if (unaff_r9 == -1) goto LAB_08004c70;\n  }\n  else {\n    output_ptr = (int *)(((int)output_ptr + 7U & 0xfffffff8) + 8);\n  }\n  total_length = total_length + unaff_r9;\n  current_byte = byte_array;\n  goto LAB_08004ac6;\n}\n\n",
            "current_name": "process_and_decode_data_08004a84",
            "entrypoint": "0x08004a84",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004a84": "process_and_decode_data_08004a84",
                "bVar3": "is_digit",
                "decode_and_process_data_08004a60": "decode_and_process_data",
                "decode_and_process_data_08004d9c": "decode_and_process_data",
                "find_byte_sequence_offset_08000230": "find_byte_sequence_offset",
                "iVar1": "result",
                "iVar6": "temp_var",
                "initialize_memory_blocks_080053a0": "initialize_memory_blocks",
                "local_30": "flag4",
                "local_45": "flag3",
                "local_6e": "flag2",
                "local_6f": "flag1",
                "local_70": "current_char",
                "local_74": "total_length",
                "local_7c": "width",
                "local_80": "unknown",
                "local_84": "multiplier",
                "local_88": "flags",
                "local_8c": "output_ptr",
                "param_1": "input",
                "param_2": "param_array",
                "param_3": "byte_array",
                "param_4": "output_data",
                "pbVar4": "current_byte",
                "pbVar5": "next_byte",
                "piVar2": "ptr",
                "process_data_080050d0": "process_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004cb0": {
            "additional_data": {
                "FUN_08004cb0": {
                    "calculate_data_size": 3,
                    "clean_up_data": 1,
                    "decode_and_modify": 1,
                    "decode_and_process_data": 2,
                    "extract_data": 1,
                    "parse_data": 1,
                    "process_data": 18,
                    "reverse_binary": 1
                },
                "bVar5": {
                    "condition": 7,
                    "flag": 4,
                    "has_condition": 1,
                    "has_flag": 1,
                    "is_case4": 1,
                    "is_condition_met": 5,
                    "is_condition_true": 4,
                    "is_flag_set": 6,
                    "is_flagged": 1,
                    "is_true": 1
                },
                "iVar1": {
                    "counter": 1,
                    "i": 2,
                    "index": 16,
                    "index1": 2,
                    "iter": 1,
                    "iteration": 1,
                    "iteration1": 1,
                    "iteration_counter1": 1,
                    "iterator": 1,
                    "loop_counter1": 1,
                    "loop_index_1": 1,
                    "loop_var1": 1,
                    "loop_var_1": 1,
                    "result": 1
                },
                "iVar2": {
                    "callback_result": 2,
                    "func_result": 1,
                    "index2": 2,
                    "iteration2": 1,
                    "iteration_counter2": 1,
                    "j": 2,
                    "loop_counter2": 1,
                    "loop_index_2": 1,
                    "loop_var2": 1,
                    "loop_var_2": 1,
                    "result": 15,
                    "return_value": 1,
                    "retval": 1,
                    "temp": 1
                },
                "param_1": {
                    "arg1": 1,
                    "data": 5,
                    "data_buffer": 1,
                    "data_ptr": 1,
                    "input": 10,
                    "input1": 2,
                    "input_data": 4,
                    "input_obj": 1,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_value": 3,
                    "param1": 1
                },
                "param_2": {
                    "array": 1,
                    "binary_arr": 1,
                    "buffer": 1,
                    "config": 1,
                    "data": 7,
                    "data_array": 6,
                    "data_buffer": 1,
                    "data_param": 1,
                    "data_ptr": 1,
                    "header": 1,
                    "info": 1,
                    "info_ptr": 1,
                    "input": 2,
                    "input_array": 2,
                    "input_buffer": 1,
                    "input_data": 1,
                    "metadata": 1,
                    "source_array": 1
                },
                "param_3": {
                    "data_size": 1,
                    "destination_array": 1,
                    "final_size": 1,
                    "length_ptr": 1,
                    "output": 10,
                    "output_arr": 1,
                    "output_len": 1,
                    "output_length": 6,
                    "output_param": 1,
                    "output_size": 5,
                    "output_value": 1,
                    "result": 1,
                    "result_ptr": 1
                },
                "param_4": {
                    "additional_param": 2,
                    "additional_parameter": 1,
                    "arg": 1,
                    "arg2": 1,
                    "extra_param": 4,
                    "flags": 2,
                    "input2": 2,
                    "option": 1,
                    "param": 3,
                    "param1": 1,
                    "param4": 5,
                    "param_4": 7,
                    "unused": 1
                },
                "param_5": {
                    "callback": 15,
                    "callback_func": 6,
                    "callback_function": 9,
                    "decode_func": 1
                },
                "uVar3": {
                    "calculated_length": 1,
                    "calculated_size": 1,
                    "data_offset": 1,
                    "max_data_size": 2,
                    "max_elements": 1,
                    "max_len": 1,
                    "max_length": 5,
                    "max_output_length": 1,
                    "max_output_size": 1,
                    "max_size": 6,
                    "max_value": 8,
                    "source_array_element": 1,
                    "temp_1": 1,
                    "temp_size": 1
                },
                "uVar4": {
                    "count": 12,
                    "counter": 12,
                    "current_count": 1,
                    "current_size": 1,
                    "iterated": 1,
                    "iteration": 1,
                    "iteration_counter3": 1,
                    "loop_counter": 1,
                    "temp_2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08004d9c"
            ],
            "code": "\nundefined4\ndecode_and_process_data_08004cb0(undefined4 input,uint *data,uint *output,undefined4 param_4,code *callback)\n\n{\n  int index;\n  int result;\n  uint max_value;\n  uint count;\n  bool condition;\n  \n  max_value = data[4];\n  if ((int)data[4] < (int)data[2]) {\n    max_value = data[2];\n  }\n  *output = max_value;\n  if (*(char *)((int)data + 0x43) != '\\0') {\n    *output = max_value + 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *output = *output + 2;\n  }\n  if ((*data & 6) == 0) {\n    for (index = 0; index < (int)(data[3] - *output); index = index + 1) {\n      result = (*callback)(input,param_4,(int)data + 0x19,1);\n      if (result == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  max_value = (uint)*(byte *)((int)data + 0x43);\n  if (max_value != 0) {\n    max_value = 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *(undefined *)((int)data + max_value + 0x43) = 0x30;\n    *(undefined *)((int)data + max_value + 0x44) = *(undefined *)((int)data + 0x45);\n    max_value = max_value + 2;\n  }\n  index = (*callback)(input,param_4,(int)data + 0x43,max_value);\n  if (index != -1) {\n    max_value = data[3];\n    condition = (*data & 6) == 4;\n    if (condition) {\n      max_value = max_value - *output;\n    }\n    if (condition) {\n      max_value = max_value & ~((int)max_value >> 0x1f);\n    }\n    else {\n      max_value = 0;\n    }\n    if ((int)data[4] < (int)data[2]) {\n      max_value = max_value + (data[2] - data[4]);\n    }\n    count = 0;\n    while( true ) {\n      if (max_value == count) {\n        return 0;\n      }\n      index = (*callback)(input,param_4,(int)data + 0x1a,1);\n      if (index == -1) break;\n      count = count + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "decode_and_process_data_08004cb0",
            "entrypoint": "0x08004cb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004cb0": "decode_and_process_data_08004cb0",
                "bVar5": "condition",
                "iVar1": "index",
                "iVar2": "result",
                "param_1": "input",
                "param_2": "data",
                "param_3": "output",
                "param_5": "callback",
                "uVar3": "max_value",
                "uVar4": "count"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d9c": {
            "additional_data": {
                "FUN_08004d9c": {
                    "decode_and_process": 3,
                    "decode_and_process_data": 25,
                    "process_data": 2
                },
                "bVar1": {
                    "byte1": 1,
                    "byte_val": 9,
                    "byte_value": 16,
                    "byte_var": 1,
                    "data_type": 1,
                    "first_byte": 1
                },
                "iVar2": {
                    "current_index": 1,
                    "index": 14,
                    "int_var1": 1,
                    "result": 10,
                    "return_value": 2,
                    "temp_variable_1": 1
                },
                "iVar4": {
                    "callback_result": 2,
                    "inner_index": 1,
                    "inner_result": 2,
                    "int_var2": 1,
                    "loop_index": 2,
                    "loop_variable": 1,
                    "result": 12,
                    "status": 1,
                    "temp": 3,
                    "temp_index": 1,
                    "temp_result": 1,
                    "temp_var": 1,
                    "temp_variable_3": 1
                },
                "local_24": {
                    "array": 1,
                    "buffer": 1,
                    "data_info": 1,
                    "limits": 2,
                    "local_array": 4,
                    "local_buffer": 1,
                    "local_values": 2,
                    "local_vars": 3,
                    "offset_array": 1,
                    "offsets": 3,
                    "range": 1,
                    "result_array": 1,
                    "result_buffer": 1,
                    "result_info": 1,
                    "size_array": 1,
                    "temp_array": 3,
                    "uint_arr1": 1
                },
                "param_1": {
                    "arg1": 6,
                    "arg_1": 1,
                    "data": 1,
                    "function_param": 1,
                    "input": 4,
                    "input_1": 1,
                    "input_arg1": 1,
                    "input_data": 2,
                    "input_param": 3,
                    "input_size": 1,
                    "input_value": 2,
                    "param1": 3,
                    "param_1": 3,
                    "param_ptr1": 1
                },
                "param_2": {
                    "arg2": 3,
                    "arg_2": 1,
                    "buffer": 1,
                    "data": 10,
                    "data_array": 4,
                    "data_ptr": 2,
                    "input_2": 1,
                    "input_arg2": 1,
                    "input_array": 2,
                    "input_buffer": 2,
                    "input_data": 1,
                    "output_data": 2
                },
                "param_3": {
                    "arg2": 1,
                    "arg3": 5,
                    "arg_3": 1,
                    "flag": 1,
                    "input_3": 1,
                    "input_arg3": 1,
                    "input_length": 1,
                    "input_size": 1,
                    "length": 1,
                    "output": 1,
                    "output_size": 1,
                    "param3": 4,
                    "param_3": 6,
                    "param_ptr3": 1,
                    "size": 4
                },
                "param_4": {
                    "arg4": 3,
                    "arg_4": 1,
                    "callback": 12,
                    "callback_func": 3,
                    "callback_function": 3,
                    "data_callback": 1,
                    "data_processor": 1,
                    "func_ptr": 1,
                    "input_4": 1,
                    "input_arg4": 1,
                    "output_func": 1,
                    "process_function": 1,
                    "processing_function": 1
                },
                "param_5": {
                    "additional_data": 1,
                    "arg5": 3,
                    "arg_5": 1,
                    "buffer": 1,
                    "callback_userdata": 1,
                    "count": 3,
                    "counter": 4,
                    "counter_ptr": 1,
                    "data_pointer": 1,
                    "input_5": 1,
                    "input_arg5": 1,
                    "output": 3,
                    "output_array": 2,
                    "output_data": 1,
                    "output_param": 1,
                    "param_5": 1,
                    "param_ptr5": 1,
                    "ptr_to_data": 1,
                    "ptr_to_data_array": 1,
                    "ptr_to_ptr": 1
                },
                "pcVar11": {
                    "buf": 1,
                    "char_pointer": 1,
                    "char_ptr": 2,
                    "char_ptr2": 2,
                    "converted_value": 1,
                    "current_char": 5,
                    "current_digit": 1,
                    "current_ptr": 1,
                    "dest": 1,
                    "new_value": 1,
                    "output": 1,
                    "output_buffer": 2,
                    "output_hex": 1,
                    "p": 1,
                    "pchar": 1,
                    "ptr_temp": 1,
                    "result_string": 1,
                    "str": 2,
                    "str_pointer": 1,
                    "str_ptr1": 1,
                    "var11": 1
                },
                "pcVar12": {
                    "char_ptr3": 2,
                    "converted_chars": 1,
                    "current_char": 1,
                    "current_string": 1,
                    "d": 1,
                    "data_ptr": 1,
                    "data_ptr_2": 1,
                    "formatted_output": 1,
                    "hex_str": 1,
                    "hex_string": 1,
                    "input": 1,
                    "input_ptr": 2,
                    "output_end": 1,
                    "output_start": 1,
                    "output_string": 1,
                    "param2_43": 1,
                    "ptr2": 1,
                    "ptr_temp2": 1,
                    "source": 1,
                    "str": 2,
                    "str_ptr": 1,
                    "str_ptr2": 1,
                    "string_ptr": 2,
                    "string_value": 1,
                    "var12": 1
                },
                "pcVar5": {
                    "char_ptr": 2,
                    "char_ptr1": 1,
                    "chars": 1,
                    "digits": 1,
                    "hex_characters": 1,
                    "hex_chars": 12,
                    "hex_digits": 11
                },
                "ppcVar8": {
                    "char_double_ptr": 1,
                    "char_ptr_ptr": 1,
                    "char_ptr_ptr1": 1,
                    "ptr_ptr_char": 1,
                    "ptr_to_ptr_to_char": 1,
                    "str_ptr_ptr": 1,
                    "string_pointer": 1
                },
                "ppuVar7": {
                    "double_ptr": 1,
                    "pointer_pointer": 1,
                    "ptr_ptr": 2,
                    "ptr_ptr_data": 1,
                    "ptr_ptr_var1": 1,
                    "ptr_to_ptr": 1
                },
                "puVar3": {
                    "data_ptr": 1,
                    "pointer": 4,
                    "pointer_value": 1,
                    "ptr": 13,
                    "ptr1": 2,
                    "ptr_data": 2,
                    "ptr_to_data": 1,
                    "ptr_value": 2,
                    "ptr_var1": 1,
                    "temp_ptr": 1,
                    "temp_variable_2": 1
                },
                "uVar10": {
                    "copy_value": 1,
                    "data_value": 1,
                    "length": 3,
                    "param2_1": 1,
                    "size": 2,
                    "temp": 4,
                    "temp2": 1,
                    "temp_value": 11,
                    "temp_var_2": 1,
                    "temp_variable_4": 1,
                    "uint_var3": 1,
                    "value2": 1,
                    "var10": 1
                },
                "uVar6": {
                    "base": 18,
                    "base_value": 3,
                    "hex_value": 1,
                    "num_base": 2,
                    "num_digits": 1,
                    "temp_var": 1,
                    "uint_var1": 1,
                    "value": 2
                },
                "uVar9": {
                    "data_value": 1,
                    "dec_value": 1,
                    "num_value": 1,
                    "result": 6,
                    "return_value": 1,
                    "temp1": 1,
                    "uint_var2": 1,
                    "value": 16,
                    "value1": 1
                }
            },
            "called": [
                "FUN_08000230",
                "FUN_08004cb0"
            ],
            "calling": [
                "FUN_08004a84"
            ],
            "code": "\nuint decode_and_process_data_08004d9c(undefined4 arg1,uint *data,undefined4 param_3,code *callback,uint **counter)\n\n{\n  byte byte_value;\n  int index;\n  uint *ptr;\n  int result;\n  char *hex_chars;\n  uint base;\n  uint **ptr_ptr;\n  char **string_pointer;\n  uint value;\n  uint temp_value;\n  char *current_char;\n  char *str;\n  uint local_array [2];\n  \n  byte_value = *(byte *)(data + 6);\n  str = (char *)((int)data + 0x43);\n  if (byte_value != 0x6e) {\n    if (byte_value < 0x6f) {\n      if (byte_value != 99) {\n        if (byte_value < 100) {\n          if (byte_value == 0) goto LAB_08004f56;\n          if (byte_value != 0x58) goto LAB_08004dcc;\n          *(undefined *)((int)data + 0x45) = 0x58;\n          hex_chars = \"0123456789ABCDEF\";\nLAB_08004ee6:\n          base = *data;\n          ptr = *counter;\n          *counter = ptr + 1;\n          if (((base & 0x80) == 0) && ((int)(base << 0x19) < 0)) {\n            value = (uint)*(ushort *)ptr;\n          }\n          else {\n            value = *ptr;\n          }\n          if ((int)(base << 0x1f) < 0) {\n            *data = base | 0x20;\n          }\n          if (value == 0) {\n            *data = *data & 0xffffffdf;\n          }\n          base = 0x10;\nLAB_08004e7c:\n          *(undefined *)((int)data + 0x43) = 0;\n        }\n        else {\n          if ((byte_value != 100) && (byte_value != 0x69)) goto LAB_08004dcc;\n          value = *data;\n          ptr = *counter;\n          if ((value & 0x80) == 0) {\n            *counter = ptr + 1;\n            if ((value & 0x40) == 0) goto LAB_08004dec;\n            value = (uint)(short)*(ushort *)ptr;\n          }\n          else {\n            *counter = ptr + 1;\nLAB_08004dec:\n            value = *ptr;\n          }\n          if ((int)value < 0) {\n            value = -value;\n            *(undefined *)((int)data + 0x43) = 0x2d;\n          }\n          hex_chars = \"0123456789ABCDEF\";\n          base = 10;\n        }\n        temp_value = data[1];\n        data[2] = temp_value;\n        current_char = str;\n        if ((int)temp_value < 0) {\n          if (value != 0) goto LAB_08004f1a;\nLAB_08004fc8:\n          *(char *)((int)data + 0x42) = *hex_chars;\n          current_char = (char *)((int)data + 0x42);\n        }\n        else {\n          *data = *data & 0xfffffffb;\n          if (value == 0) {\n            if (temp_value != 0) goto LAB_08004fc8;\n          }\n          else {\nLAB_08004f1a:\n            do {\n              temp_value = value / base;\n              current_char = current_char + -1;\n              *current_char = hex_chars[value - base * temp_value];\n              value = temp_value;\n            } while (temp_value != 0);\n          }\n        }\n        if (((base == 8) && ((int)(*data << 0x1f) < 0)) && ((int)data[1] <= (int)data[4]))\n        {\n          current_char[-1] = '0';\n          current_char = current_char + -1;\n        }\n        data[4] = (int)str - (int)current_char;\n        str = current_char;\n        goto LAB_08004ec2;\n      }\n      ptr = *counter;\n      *counter = ptr + 1;\n      *(char *)((int)data + 0x42) = (char)*ptr;\nLAB_08004e2c:\n      str = (char *)((int)data + 0x42);\n      value = 1;\n    }\n    else {\n      if (byte_value != 0x73) {\n        if (byte_value < 0x74) {\n          if (byte_value == 0x6f) {\nLAB_08004e52:\n            value = *data;\n            ptr = *counter;\n            if ((value & 0x80) == 0) {\n              *counter = ptr + 1;\n              if ((value & 0x40) == 0) goto LAB_08004e60;\n              value = (uint)*(ushort *)ptr;\n            }\n            else {\n              *counter = ptr + 1;\nLAB_08004e60:\n              value = *ptr;\n            }\n            hex_chars = \"0123456789ABCDEF\";\n            if (byte_value == 0x6f) {\n              base = 8;\n            }\n            else {\n              base = 10;\n            }\n            goto LAB_08004e7c;\n          }\n          if (byte_value == 0x70) {\n            *data = *data | 0x20;\nLAB_08004e12:\n            *(undefined *)((int)data + 0x45) = 0x78;\n            hex_chars = \"0123456789abcdef\";\n            goto LAB_08004ee6;\n          }\n        }\n        else {\n          if (byte_value == 0x75) goto LAB_08004e52;\n          if (byte_value == 0x78) goto LAB_08004e12;\n        }\nLAB_08004dcc:\n        *(byte *)((int)data + 0x42) = byte_value;\n        goto LAB_08004e2c;\n      }\n      string_pointer = (char **)*counter;\n      *counter = (uint *)(string_pointer + 1);\n      str = *string_pointer;\n      index = find_byte_sequence_offset_08000230(str,0,data[1]);\n      if (index != 0) {\n        data[1] = index - (int)str;\n      }\n      value = data[1];\n    }\n    data[4] = value;\n    *(undefined *)((int)data + 0x43) = 0;\n    goto LAB_08004ec2;\n  }\n  value = *data;\n  ptr_ptr = (uint **)*counter;\n  base = data[5];\n  if ((value & 0x80) == 0) {\n    *counter = (uint *)(ptr_ptr + 1);\n    ptr = *ptr_ptr;\n    if ((value & 0x40) == 0) goto LAB_08004f42;\n    *(short *)ptr = (short)base;\n  }\n  else {\n    *counter = (uint *)(ptr_ptr + 1);\n    ptr = *ptr_ptr;\nLAB_08004f42:\n    *ptr = base;\n  }\nLAB_08004f56:\n  data[4] = 0;\nLAB_08004ec2:\n  index = decode_and_process_data_08004d9c_08004cb0(arg1,data,local_array,param_3,callback);\n  if ((index == -1) || (index = (*callback)(arg1,param_3,str,data[4]), index == -1)) {\nLAB_08004ed6:\n    value = 0xffffffff;\n  }\n  else {\n    if ((int)(*data << 0x1e) < 0) {\n      for (index = 0; index < (int)(data[3] - local_array[0]); index = index + 1) {\n        result = (*callback)(arg1,param_3,(int)data + 0x19,1);\n        if (result == -1) goto LAB_08004ed6;\n      }\n    }\n    value = data[3];\n    if ((int)data[3] < (int)local_array[0]) {\n      value = local_array[0];\n    }\n  }\n  return value;\n}\n\n",
            "current_name": "decode_and_process_data_08004d9c",
            "entrypoint": "0x08004d9c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d9c": "decode_and_process_data_08004d9c",
                "bVar1": "byte_value",
                "iVar2": "index",
                "iVar4": "result",
                "local_24": "local_array",
                "param_1": "arg1",
                "param_2": "data",
                "param_4": "callback",
                "param_5": "counter",
                "pcVar11": "current_char",
                "pcVar12": "str",
                "pcVar5": "hex_chars",
                "ppcVar8": "string_pointer",
                "ppuVar7": "ptr_ptr",
                "puVar3": "ptr",
                "uVar10": "temp_value",
                "uVar6": "base",
                "uVar9": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004fdc": {
            "additional_data": {
                "FUN_08004fdc": {
                    "decode_and_process_data": 14,
                    "initialize_and_process_data": 7,
                    "initialize_data_processing": 1,
                    "process_and_decode": 1,
                    "process_and_decode_data": 5,
                    "process_data": 3
                },
                "iVar1": {
                    "data": 1,
                    "data_address": 11,
                    "data_offset": 2,
                    "data_pointer": 3,
                    "data_ptr": 8,
                    "data_var1": 1,
                    "memory_block": 3,
                    "memory_block_address": 1,
                    "pointer_to_i_var": 1
                },
                "initialize_memory_blocks_080053a0": {
                    "initialize_memory_blocks": 1
                },
                "param_1": {
                    "arg1": 1,
                    "data": 1,
                    "data_pointer": 2,
                    "data_ptr": 2,
                    "first_param": 1,
                    "input1": 1,
                    "input_buffer": 1,
                    "input_param": 13,
                    "input_param1": 3,
                    "input_param_1": 4,
                    "input_ptr": 1,
                    "pointer_to_data": 1
                },
                "param_2": {
                    "arg2": 2,
                    "input2": 1,
                    "input_param2": 3,
                    "input_param_2": 4,
                    "param2": 8,
                    "param_2": 10,
                    "param_ptr": 1,
                    "parameter_2": 1,
                    "second_param": 1
                },
                "param_3": {
                    "arg3": 2,
                    "arg_ptr": 1,
                    "input3": 1,
                    "input_param3": 3,
                    "input_param_3": 4,
                    "param3": 8,
                    "param_3": 10,
                    "parameter_3": 1,
                    "third_param": 1
                },
                "param_4": {
                    "arg4": 2,
                    "fourth_param": 1,
                    "input4": 1,
                    "input_param4": 3,
                    "input_param_4": 4,
                    "param4": 8,
                    "param_4": 11,
                    "parameter_4": 1
                },
                "process_and_decode_data_08004a84": {
                    "process_and_decode_data": 1
                },
                "uStack_4": {
                    "arg4_copy": 1,
                    "param4_copy": 2,
                    "param_4_copy": 1,
                    "param_4_inner": 1,
                    "stack4": 1,
                    "stack_4": 1,
                    "stack_param3": 1,
                    "stack_var3": 3,
                    "stack_var_3": 1,
                    "temp": 1,
                    "u_stack_4": 1,
                    "var4": 1
                },
                "uStack_8": {
                    "arg": 1,
                    "arg3_copy": 1,
                    "param3_copy": 2,
                    "param_3_copy": 1,
                    "param_3_inner": 1,
                    "stack8": 1,
                    "stack_8": 1,
                    "stack_param2": 1,
                    "stack_var2": 4,
                    "stack_var_2": 1,
                    "u_stack_8": 1,
                    "var3": 1
                },
                "uStack_c": {
                    "arg2_copy": 1,
                    "param": 1,
                    "param2_copy": 3,
                    "param_2_copy": 1,
                    "param_2_inner": 1,
                    "stack_c": 2,
                    "stack_param1": 1,
                    "stack_var1": 4,
                    "stack_var_1": 1,
                    "u_stack_c": 1,
                    "var2": 1
                },
                "uVar2": {
                    "arg1_copy": 1,
                    "copy_of_input_param": 1,
                    "data_copy": 1,
                    "data_param1": 1,
                    "data_var2": 1,
                    "input1_copy": 1,
                    "input_param_1_copy": 2,
                    "input_param_copy": 6,
                    "input_ptr": 1,
                    "input_value": 1,
                    "input_var": 3,
                    "param1_copy": 2,
                    "param_1_copy": 2,
                    "param_1_inner": 1,
                    "param_copy": 2,
                    "temp_var": 2,
                    "u_var": 1,
                    "u_var2": 1,
                    "var1": 1
                }
            },
            "called": [
                "FUN_08004a84",
                "FUN_080053a0"
            ],
            "calling": [
                "FUN_08003978"
            ],
            "code": "\nvoid process_and_decode_data_08004fdc(undefined4 input_param,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int data_address;\n  undefined4 input_param_copy;\n  undefined4 stack_var1;\n  undefined4 stack_var2;\n  undefined4 stack_var3;\n  \n  data_address = DAT_200000a0;\n  input_param_copy = input_param;\n  stack_var1 = param_2;\n  stack_var2 = param_3;\n  stack_var3 = param_4;\n  if ((DAT_200000a0 != 0) && (*(int *)(DAT_200000a0 + 0x18) == 0)) {\n    initialize_memory_blocks(DAT_200000a0);\n  }\n  process_and_decode_data_08004fdc(data_address,*(undefined4 *)(data_address + 8),input_param,&stack_var1,input_param_copy,&stack_var1);\n  return;\n}\n\n",
            "current_name": "process_and_decode_data_08004fdc",
            "entrypoint": "0x08004fdc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004fdc": "process_and_decode_data_08004fdc",
                "iVar1": "data_address",
                "initialize_memory_blocks_080053a0": "initialize_memory_blocks",
                "param_1": "input_param",
                "process_and_decode_data_08004a84": "process_and_decode_data",
                "uStack_4": "stack_var3",
                "uStack_8": "stack_var2",
                "uStack_c": "stack_var1",
                "uVar2": "input_param_copy"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800500c": {
            "additional_data": {
                "FUN_0800500c": {
                    "allocate_and_assign_memory": 5,
                    "allocate_and_assign_memory_block": 3,
                    "allocate_and_set_memory": 1,
                    "allocate_and_set_memory_block": 1,
                    "allocate_and_store_memory": 6,
                    "allocate_memory": 1,
                    "allocate_memory_and_assign_pointer": 1,
                    "allocate_memory_and_check": 1,
                    "allocate_memory_and_store": 1,
                    "allocate_memory_block_and_assign_to_param": 1,
                    "init_memory": 1,
                    "initialize_and_allocate_memory": 1,
                    "initialize_memory": 7,
                    "initialize_memory_block": 1
                },
                "allocate_memory_block_08004094": {
                    "allocate_memory_block": 1
                },
                "iVar1": {
                    "allocated_block": 2,
                    "allocated_memory_block": 1,
                    "allocation_result": 21,
                    "allocation_status": 2,
                    "memory_block": 4
                },
                "param_1": {
                    "memory_address": 1,
                    "memory_block": 1,
                    "output_address": 1,
                    "output_param": 1,
                    "output_parameter": 1,
                    "output_pointer": 4,
                    "output_ptr": 4,
                    "pointer": 1,
                    "result": 6,
                    "result_address": 3,
                    "result_pointer": 5,
                    "result_ptr": 3
                },
                "param_2": {
                    "block_size": 8,
                    "input_param": 1,
                    "input_value": 1,
                    "memory_size": 6,
                    "num_bytes": 1,
                    "requested_size": 1,
                    "size": 13
                }
            },
            "called": [
                "FUN_08004094"
            ],
            "calling": [
                "FUN_08004978"
            ],
            "code": "\nvoid allocate_memory_block_and_assign_to_param_0800500c(int *result,undefined4 size)\n\n{\n  int allocation_result;\n  \n  DAT_20000674 = 0;\n  allocation_result = allocate_memory_block(size);\n  if ((allocation_result == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return;\n}\n\n",
            "current_name": "allocate_memory_block_and_assign_to_param_0800500c",
            "entrypoint": "0x0800500c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800500c": "allocate_memory_block_and_assign_to_param_0800500c",
                "allocate_memory_block_08004094": "allocate_memory_block",
                "iVar1": "allocation_result",
                "param_1": "result",
                "param_2": "size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080050d0": {
            "additional_data": {
                "FUN_080050d0": {
                    "decode_and_update_data": 1,
                    "process_data": 19,
                    "update_data": 1,
                    "update_flags_and_return": 1,
                    "update_program_status": 3,
                    "update_status": 1
                },
                "iVar1": {
                    "base_address": 2,
                    "data_addr": 1,
                    "data_address": 5,
                    "data_identifier": 1,
                    "data_offset": 1,
                    "data_pointer": 5,
                    "data_ptr": 13,
                    "global_var1": 1,
                    "local_var1": 1,
                    "p_data_address": 1
                },
                "initialize_program_080054fc": {
                    "initialize_program": 5
                },
                "param_1": {
                    "data_ptr": 1,
                    "output": 5,
                    "output_array": 1,
                    "output_buffer": 2,
                    "output_flags": 1,
                    "output_param": 11,
                    "output_parameter": 1,
                    "output_pointer": 1,
                    "output_ptr": 2,
                    "output_status": 2,
                    "program_status": 1,
                    "result": 2,
                    "status_ptr": 1
                },
                "param_2": {
                    "data": 1,
                    "data_ptr": 1,
                    "input": 5,
                    "input_array": 1,
                    "input_buffer": 2,
                    "input_data": 2,
                    "input_param": 11,
                    "input_parameter": 1,
                    "input_pointer": 1,
                    "input_ptr": 2,
                    "input_status": 2,
                    "program_data": 1,
                    "source_ptr": 1
                },
                "uVar2": {
                    "converted_status": 1,
                    "data_value": 1,
                    "output": 1,
                    "result": 23,
                    "return_value": 1,
                    "status": 1,
                    "temp_var": 1,
                    "value": 2
                },
                "uVar3": {
                    "data_flags": 1,
                    "data_value": 1,
                    "flag": 5,
                    "flags": 17,
                    "status": 1,
                    "status_bits": 1,
                    "status_flag": 1,
                    "temp_value": 1,
                    "ushort_var": 1,
                    "value": 2
                },
                "update_linked_list_080048dc": {
                    "update_linked_list": 5
                }
            },
            "called": [
                "FUN_080054fc",
                "FUN_080053a0",
                "FUN_080048dc"
            ],
            "calling": [
                "FUN_08004a84",
                "FUN_08004a34"
            ],
            "code": "\nuint process_data_080050d0(undefined4 *output_param,undefined4 *input_param)\n\n{\n  int data_ptr;\n  uint result;\n  ushort flags;\n  \n  data_ptr = DAT_200000a0;\n  if ((DAT_200000a0 != 0) && (*(int *)(DAT_200000a0 + 0x18) == 0)) {\n    initialize_memory_blocks_080053a0(DAT_200000a0);\n  }\n  if (input_param == &DAT_08005fc0) {\n    input_param = *(undefined4 **)(data_ptr + 4);\n  }\n  else if (input_param == (undefined4 *)&DAT_08005fe0) {\n    input_param = *(undefined4 **)(data_ptr + 8);\n  }\n  else if (input_param == (undefined4 *)&DAT_08005fa0) {\n    input_param = *(undefined4 **)(data_ptr + 0xc);\n  }\n  flags = *(ushort *)(input_param + 3);\n  result = (uint)flags;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output_param = 9;\n      goto LAB_08005100;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)input_param[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input_param[0xd] != input_param + 0x11) {\n          update_linked_list(output_param);\n        }\n        input_param[0xd] = 0;\n      }\n      *(ushort *)(input_param + 3) = *(ushort *)(input_param + 3) & 0xffdb;\n      input_param[1] = 0;\n      *input_param = input_param[4];\n    }\n    *(ushort *)(input_param + 3) = *(ushort *)(input_param + 3) | 8;\n  }\n  if ((input_param[4] == 0) && ((*(ushort *)(input_param + 3) & 0x280) != 0x200)) {\n    initialize_program(output_param,input_param);\n  }\n  flags = *(ushort *)(input_param + 3);\n  result = flags & 1;\n  if ((flags & 1) == 0) {\n    if (-1 < (int)((uint)flags << 0x1e)) {\n      result = input_param[5];\n    }\n    input_param[2] = result;\n  }\n  else {\n    input_param[2] = 0;\n    input_param[6] = -input_param[5];\n  }\n  if (input_param[4] == 0) {\n    flags = *(ushort *)(input_param + 3);\n    result = (int)(short)flags & 0x80;\n    if (result != 0) {\nLAB_08005100:\n      *(ushort *)(input_param + 3) = flags | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "code_backup": "\nuint FUN_080050d0(undefined4 *param_1,undefined4 *param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  ushort uVar3;\n  \n  iVar1 = DAT_200000a0;\n  if ((DAT_200000a0 != 0) && (*(int *)(DAT_200000a0 + 0x18) == 0)) {\n    FUNC_080053a0(DAT_200000a0);\n  }\n  if (param_2 == &DAT_08005fc0) {\n    param_2 = *(undefined4 **)(iVar1 + 4);\n  }\n  else if (param_2 == (undefined4 *)&DAT_08005fe0) {\n    param_2 = *(undefined4 **)(iVar1 + 8);\n  }\n  else if (param_2 == (undefined4 *)&DAT_08005fa0) {\n    param_2 = *(undefined4 **)(iVar1 + 0xc);\n  }\n  uVar3 = *(ushort *)(param_2 + 3);\n  uVar2 = (uint)uVar3;\n  if (-1 < (int)(uVar2 << 0x1c)) {\n    if (-1 < (int)(uVar2 << 0x1b)) {\n      *param_1 = 9;\n      goto LAB_08005100;\n    }\n    if ((int)(uVar2 << 0x1d) < 0) {\n      if ((undefined4 *)param_2[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)param_2[0xd] != param_2 + 0x11) {\n          update_linked_list_080048dc(param_1);\n        }\n        param_2[0xd] = 0;\n      }\n      *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) & 0xffdb;\n      param_2[1] = 0;\n      *param_2 = param_2[4];\n    }\n    *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) | 8;\n  }\n  if ((param_2[4] == 0) && ((*(ushort *)(param_2 + 3) & 0x280) != 0x200)) {\n    initialize_program_080054fc(param_1,param_2);\n  }\n  uVar3 = *(ushort *)(param_2 + 3);\n  uVar2 = uVar3 & 1;\n  if ((uVar3 & 1) == 0) {\n    if (-1 < (int)((uint)uVar3 << 0x1e)) {\n      uVar2 = param_2[5];\n    }\n    param_2[2] = uVar2;\n  }\n  else {\n    param_2[2] = 0;\n    param_2[6] = -param_2[5];\n  }\n  if (param_2[4] == 0) {\n    uVar3 = *(ushort *)(param_2 + 3);\n    uVar2 = (int)(short)uVar3 & 0x80;\n    if (uVar2 != 0) {\nLAB_08005100:\n      *(ushort *)(param_2 + 3) = uVar3 | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    uVar2 = 0;\n  }\n  return uVar2;\n}\n\n",
            "current_name": "process_data_080050d0",
            "entrypoint": "0x080050d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080050d0": "process_data_080050d0",
                "iVar1": "data_ptr",
                "initialize_program_080054fc": "initialize_program",
                "param_1": "output_param",
                "param_2": "input_param",
                "uVar2": "result",
                "uVar3": "flags",
                "update_linked_list_080048dc": "update_linked_list"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080051ac": {
            "additional_data": {
                "FUN_080051ac": {
                    "process_and_update_data": 1,
                    "process_data": 27,
                    "process_function": 2
                },
                "UNRECOVERED_JUMPTABLE_00": {
                    "handle_error": 1,
                    "jmp_table": 1,
                    "jump_table": 9,
                    "jump_table_function": 2,
                    "jumptable": 1,
                    "unrecovered_code": 1,
                    "unrecovered_jump_table": 2
                },
                "bVar11": {
                    "bool_value": 1,
                    "is_condition_met": 1,
                    "is_flag_zero": 1,
                    "is_zero": 21
                },
                "iVar2": {
                    "count": 2,
                    "counter": 2,
                    "data_length": 1,
                    "data_value3": 1,
                    "index": 1,
                    "length": 1,
                    "offset": 5,
                    "result": 1,
                    "temp": 1,
                    "temp_var": 4,
                    "temp_var1": 1,
                    "temp_variable": 2,
                    "temp_variable_1": 1,
                    "total": 1,
                    "total_length": 1,
                    "value": 2,
                    "var1": 1,
                    "var2": 1
                },
                "iVar3": {
                    "temp_var3": 1
                },
                "iVar4": {
                    "temp_var2": 1
                },
                "iVar5": {
                    "temp_var5": 1
                },
                "iVar6": {
                    "temp_var6": 1
                },
                "iVar7": {
                    "count": 1,
                    "data_value4": 1,
                    "i_var7": 1,
                    "increment": 1,
                    "loop_counter": 3,
                    "loop_var": 2,
                    "offset": 4,
                    "temp": 3,
                    "temp_value": 2,
                    "temp_var": 1,
                    "temp_var2": 3,
                    "temp_variable": 2,
                    "temp_variable_2": 1,
                    "value": 2,
                    "var2": 1,
                    "var7": 1
                },
                "iVar8": {
                    "temp_var7": 1
                },
                "iVar9": {
                    "count": 3,
                    "counter": 1,
                    "data_value5": 1,
                    "length": 3,
                    "loop_count": 1,
                    "loop_counter": 1,
                    "loop_length": 1,
                    "loop_size": 1,
                    "offset": 1,
                    "remaining": 4,
                    "remaining_length": 2,
                    "size": 2,
                    "temp_var": 1,
                    "temp_var3": 2,
                    "temp_variable2": 1,
                    "temp_variable_3": 1,
                    "var3": 1
                },
                "initialize_and_process_data_080055d0": {
                    "initialize_and_process": 1,
                    "initialize_and_process_data": 6
                },
                "pcVar8": {
                    "callback": 4,
                    "callback_func": 1,
                    "callback_function": 2,
                    "code_ptr": 1,
                    "function_pointer": 9,
                    "function_pointer_1": 1,
                    "function_ptr": 3,
                    "handler": 1,
                    "loop_func": 1,
                    "loop_function": 2,
                    "process_function": 1
                },
                "piVar3": {
                    "array_pointer": 1,
                    "data": 1,
                    "data_array": 3,
                    "data_pointer": 10,
                    "data_ptr": 3,
                    "function_pointer": 1,
                    "function_pointers_array": 1,
                    "int_ptr": 1,
                    "parameters": 1,
                    "pointer_1": 1,
                    "pointer_array": 1,
                    "pointer_to_data": 2,
                    "pointer_to_values": 1,
                    "ptr_data": 1,
                    "var3": 1
                },
                "piVar4": {
                    "auxiliary_parameters": 1,
                    "current_pointer": 1,
                    "linked_data": 2,
                    "linked_data_ptr": 1,
                    "linked_list": 1,
                    "linked_list_pointer": 1,
                    "linked_list_ptr": 2,
                    "linkedlist_pointer": 1,
                    "list_pointer": 1,
                    "pointer_to_temp_variable": 1,
                    "temp_pointer": 1,
                    "var4": 1
                },
                "puVar1": {
                    "data_pointer": 8,
                    "data_ptr": 3,
                    "data_value": 1,
                    "input_pointer": 3,
                    "pointer_2": 1,
                    "pointer_to_result": 1,
                    "pointer_to_value": 1,
                    "ptr_result": 1,
                    "result_array": 1,
                    "result_pointer": 1,
                    "result_ptr": 1,
                    "value_pointer": 5,
                    "value_ptr": 2
                },
                "run_infinite_loop_080040f8": {
                    "run_infinite_loop": 7
                },
                "uVar10": {
                    "initial_value": 2,
                    "original_value": 2,
                    "temp": 1,
                    "temp_data_value": 1,
                    "temp_flag": 1,
                    "temp_uint": 1,
                    "temp_value": 8,
                    "temp_value2": 1,
                    "temp_var2": 1,
                    "temp_var4": 2,
                    "temp_variable_4": 1,
                    "u_var10": 1,
                    "var10": 1
                },
                "uVar12": {
                    "inf_loop_result": 1,
                    "loop_result": 3,
                    "result": 8,
                    "return_value": 6
                },
                "uVar5": {
                    "data": 1,
                    "data_value": 3,
                    "data_value2": 1,
                    "flag_mask": 1,
                    "flag_value": 1,
                    "input_value": 1,
                    "lower_flags": 1,
                    "result": 1,
                    "result_value": 1,
                    "short_masked_value": 1,
                    "short_value_1": 1,
                    "temp_value": 1,
                    "u_var5": 1,
                    "ushort_value": 3,
                    "ushort_var": 1,
                    "ushort_variable": 1,
                    "value": 4
                },
                "uVar6": {
                    "data_flag": 2,
                    "data_value": 1,
                    "data_value1": 1,
                    "flag": 9,
                    "flag_value": 2,
                    "flags": 6,
                    "flg_value": 1,
                    "modified_ushort_value": 2,
                    "short_value": 1,
                    "short_value_2": 1,
                    "temp_ushort_variable": 1,
                    "ushort_var2": 1,
                    "var6": 1
                },
                "update_linked_list_080048dc": {
                    "update_linked_list": 3
                }
            },
            "called": [
                "FUN_080055d0",
                "FUN_080040f8",
                "FUN_080048dc"
            ],
            "calling": [
                "FUN_08004808",
                "FUN_08005760"
            ],
            "code": "\nvoid process_and_update_data_080051ac(void)\n\n{\n  uint *data_pointer;\n  int offset;\n  int *data_pointer;\n  int *linked_data;\n  uint value;\n  ushort flag;\n  int offset;\n  code *function_pointer;\n  int remaining;\n  uint temp_value;\n  code *jump_table;\n  bool is_zero;\n  undefined8 result;\n  \n  initialize_and_process_data(6);\n  jump_table = (code *)0x80051bb;\n  result = run_infinite_loop(1);\n  data_pointer = (int *)((ulonglong)result >> 0x20);\n  data_pointer = (uint *)result;\n  flag = *(ushort *)(data_pointer + 3);\n  value = (uint)flag;\n  if ((int)(value << 0x1c) < 0) {\n    offset = data_pointer[4];\n    if (offset != 0) {\n      offset = value << 0x1e;\n      is_zero = offset == 0;\n      remaining = *data_pointer;\n      if (is_zero) {\n        offset = data_pointer[5];\n      }\n      *data_pointer = offset;\n      if (!is_zero) {\n        offset = 0;\n      }\n      data_pointer[2] = offset;\n      for (remaining = remaining - offset; 0 < remaining; remaining = remaining - offset) {\n        offset = (*(code *)data_pointer[10])(data_pointer,data_pointer[8],offset,remaining);\n        if (offset < 1) {\n          flag = *(ushort *)(data_pointer + 3);\n          goto LAB_080052b2;\n        }\n        offset = offset + offset;\n      }\n    }\n  }\n  else if (((0 < data_pointer[1]) || (0 < data_pointer[0x10])) &&\n          (function_pointer = (code *)data_pointer[0xb], function_pointer != (code *)0x0)) {\n    temp_value = *data_pointer;\n    *data_pointer = 0;\n    if ((flag & 0x1000) == 0) {\n      offset = (*function_pointer)(data_pointer,data_pointer[8],value & 0x1000,1);\n      if ((offset == -1) && (value = *data_pointer, value != 0)) {\n        if ((value != 0x1d) && (value != 0x16)) {\n          *(ushort *)(data_pointer + 3) = *(ushort *)(data_pointer + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x0800527c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jump_table)();\n          return;\n        }\n        *data_pointer = temp_value;\n        goto LAB_080051d6;\n      }\n    }\n    else {\n      offset = data_pointer[0x15];\n    }\n    if (((int)((uint)*(ushort *)(data_pointer + 3) << 0x1d) < 0) &&\n       (offset = offset - data_pointer[1], data_pointer[0xd] != 0)) {\n      offset = offset - data_pointer[0x10];\n    }\n    offset = (*(code *)data_pointer[0xb])(data_pointer,data_pointer[8],offset,0);\n    flag = *(ushort *)(data_pointer + 3);\n    if ((offset == -1) &&\n       ((0x1d < *data_pointer || (-1 < (int)((0x20400001U >> (*data_pointer & 0xff)) << 0x1f))))) {\nLAB_080052b2:\n      *(ushort *)(data_pointer + 3) = flag | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x080052bc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jump_table)(0xffffffff);\n      return;\n    }\n    data_pointer[1] = 0;\n    *data_pointer = data_pointer[4];\n    if (((int)((uint)flag << 0x13) < 0) && ((offset != -1 || (*data_pointer == 0)))) {\n      data_pointer[0x15] = offset;\n    }\n    linked_data = (int *)data_pointer[0xd];\n    *data_pointer = temp_value;\n    if (linked_data != (int *)0x0) {\n      if (linked_data != data_pointer + 0x11) {\n        update_linked_list(data_pointer);\n      }\n      data_pointer[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08005252. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jump_table)();\n      return;\n    }\n  }\nLAB_080051d6:\n                    /* WARNING: Could not recover jumptable at 0x080051d8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)(0);\n  return;\n}\n\n",
            "current_name": "process_and_update_data_080051ac",
            "entrypoint": "0x080051ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080051ac": "process_and_update_data_080051ac",
                "UNRECOVERED_JUMPTABLE_00": "jump_table",
                "bVar11": "is_zero",
                "iVar2": "offset",
                "iVar3": "temp_var3",
                "iVar4": "temp_var2",
                "iVar7": "offset",
                "iVar9": "remaining",
                "initialize_and_process_data_080055d0": "initialize_and_process_data",
                "pcVar8": "function_pointer",
                "piVar3": "data_pointer",
                "piVar4": "linked_data",
                "puVar1": "data_pointer",
                "run_infinite_loop_080040f8": "run_infinite_loop",
                "uVar10": "temp_value",
                "uVar12": "result",
                "uVar5": "value",
                "uVar6": "flag",
                "update_linked_list_080048dc": "update_linked_list"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080052cc": {
            "additional_data": {
                "FUN_080052cc": {
                    "analyze_and_process_data": 1,
                    "decode_and_process_data": 1,
                    "execute_task": 1,
                    "extract_data": 1,
                    "process_data": 17,
                    "process_function": 1,
                    "run_decompiler": 1
                },
                "UNRECOVERED_JUMPTABLE_00": {
                    "jump_table": 13,
                    "jumptable": 1,
                    "jumptable_00": 1,
                    "unknown_function": 1,
                    "unknown_jump_table": 1
                },
                "bVar10": {
                    "b_var10": 1,
                    "bool_flag": 1,
                    "bool_value": 2,
                    "bool_var": 2,
                    "bool_variable": 1,
                    "condition": 1,
                    "conditional_flag": 1,
                    "flag": 1,
                    "flag2": 1,
                    "is_true": 1,
                    "is_zero": 3
                },
                "bVar11": {
                    "check_flag": 1,
                    "comparison_flag": 1
                },
                "iVar2": {
                    "array_size": 1,
                    "config_value1": 1,
                    "count": 4,
                    "counter": 1,
                    "index": 1,
                    "length": 2,
                    "loop_counter": 1,
                    "loop_index": 1,
                    "num_iterations": 1,
                    "offset": 3,
                    "output_length": 2,
                    "param2_var": 1,
                    "remaining_iterations": 1,
                    "return_value": 1,
                    "size": 2,
                    "temp1": 1,
                    "temp_var1": 1,
                    "temp_variable1": 1,
                    "tmp_var1": 1,
                    "value": 1,
                    "var1": 3
                },
                "iVar6": {
                    "config_value2": 1,
                    "i_var6": 3,
                    "increment": 7,
                    "item_size": 1,
                    "iter_count": 1,
                    "iteration": 1,
                    "iteration_length": 1,
                    "new_increment": 1,
                    "offset": 2,
                    "temp5": 1,
                    "temp_int1": 1,
                    "temp_var": 1,
                    "temp_var4": 1,
                    "temp_var5": 1,
                    "temp_var_3": 1,
                    "temp_variable": 1,
                    "temp_variable5": 1,
                    "tmp_var5": 1,
                    "var3": 1,
                    "var5": 3
                },
                "iVar8": {
                    "count": 1,
                    "counter": 2,
                    "i_var8": 3,
                    "iteration_count": 1,
                    "length": 1,
                    "loop_counter": 4,
                    "loop_var": 1,
                    "remaining": 1,
                    "remaining_count": 1,
                    "remaining_size": 1,
                    "temp": 2,
                    "temp1": 1,
                    "temp6": 1,
                    "temp_int2": 1,
                    "temp_var": 1,
                    "temp_var5": 1,
                    "temp_var6": 1,
                    "temp_var_4": 1,
                    "temp_variable2": 1,
                    "temp_variable6": 1,
                    "tmp_var8": 1,
                    "var8": 3
                },
                "param_1": {
                    "array": 1,
                    "data": 3,
                    "data_array": 7,
                    "data_buffer": 1,
                    "data_pointer": 5,
                    "data_ptr": 3,
                    "input_array": 4,
                    "input_data": 2,
                    "param_array": 1,
                    "parameter_1": 1,
                    "task_parameters": 1,
                    "uint_array": 1
                },
                "param_2": {
                    "config": 3,
                    "config_params": 1,
                    "config_pointer": 1,
                    "execution_parameters": 1,
                    "helper_data": 1,
                    "info_array": 1,
                    "info_pointer": 2,
                    "info_ptr": 1,
                    "int_array": 1,
                    "options": 1,
                    "output_array": 4,
                    "output_data": 1,
                    "param_arr": 1,
                    "param_array": 6,
                    "param_pointer": 1,
                    "param_ptr": 1,
                    "parameter_2": 1,
                    "params_ptr": 1,
                    "pointer": 1
                },
                "pcVar7": {
                    "callback": 4,
                    "callback_func": 1,
                    "func_pointer": 1,
                    "func_ptr": 1,
                    "function_pointer": 14,
                    "function_ptr": 10
                },
                "piVar3": {
                    "linked_data": 2,
                    "linked_info_ptr": 1,
                    "linked_list": 4,
                    "linked_list_element": 1,
                    "linked_list_item": 1,
                    "linked_list_ptr": 1,
                    "linked_params": 1,
                    "linked_pointer": 1,
                    "linked_ptr": 1,
                    "linked_var": 1,
                    "linkedlist_pointer": 1,
                    "list_entry": 1,
                    "list_pointer": 2,
                    "list_ptr": 2,
                    "pointer_var": 1,
                    "ptr": 1,
                    "ptr_to_update": 1,
                    "temp2": 1,
                    "temp_var": 1,
                    "temp_var2": 1,
                    "temp_variable2": 1,
                    "tmp_var2": 1,
                    "var2": 3
                },
                "uVar1": {
                    "result": 15,
                    "return_value": 15,
                    "status": 1
                },
                "uVar10": {
                    "b_var10": 2,
                    "bool_value": 1,
                    "boolean_flag": 3,
                    "boolean_var": 1,
                    "boolean_variable": 1,
                    "comparison_result": 1,
                    "flag": 3,
                    "temp3": 1,
                    "temp_flag": 1,
                    "temp_var3": 1,
                    "unused": 1,
                    "var10": 2
                },
                "uVar4": {
                    "flags": 1,
                    "param_value": 1,
                    "short_value": 2,
                    "temp": 2,
                    "temp3": 1,
                    "temp_value": 2,
                    "temp_var": 2,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temp_variable3": 1,
                    "tmp_var3": 1,
                    "u_value": 1,
                    "u_var4": 4,
                    "ushort_val": 2,
                    "ushort_value": 3,
                    "ushort_var": 1,
                    "value": 1,
                    "var1": 1,
                    "var3": 3
                },
                "uVar5": {
                    "flag": 9,
                    "flag_value": 1,
                    "status": 1,
                    "temp4": 1,
                    "temp_flag": 1,
                    "temp_short": 1,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "temp_var_2": 1,
                    "temp_variable4": 1,
                    "tmp_var4": 1,
                    "u_flags": 1,
                    "ushort_flag": 2,
                    "ushort_result": 1,
                    "ushort_temp": 1,
                    "ushort_value": 2,
                    "ushort_var": 1,
                    "var2": 1,
                    "var4": 3
                },
                "uVar9": {
                    "backup_value": 1,
                    "original_value": 2,
                    "param1_value": 1,
                    "temp2": 2,
                    "temp7": 1,
                    "temp_data": 2,
                    "temp_value": 7,
                    "temp_var": 3,
                    "temp_var2": 1,
                    "temp_var7": 2,
                    "temp_var_2": 1,
                    "temp_var_5": 1,
                    "temp_variable7": 1,
                    "tmp_var9": 1,
                    "u_var9": 1,
                    "value": 1,
                    "var9": 3
                },
                "unaff_r4": {
                    "constant1": 1,
                    "register1": 1,
                    "register4": 2,
                    "register_value1": 1,
                    "result_register4": 1,
                    "tmp_var6": 1,
                    "unaff_4": 1,
                    "unaff_r4": 3,
                    "unaff_temp_var1": 1,
                    "unaff_value1": 1,
                    "unaff_var4": 2,
                    "unaffected_r4": 1,
                    "unaffected_register4": 1,
                    "unaffected_register_4": 2,
                    "unused1": 1,
                    "unused_r4": 2,
                    "unused_var1": 1,
                    "unused_variable1": 1,
                    "value1": 1,
                    "var1": 2,
                    "var6": 3
                },
                "unaff_r5": {
                    "constant2": 1,
                    "register2": 1,
                    "register5": 2,
                    "register_value2": 1,
                    "result_register5": 1,
                    "tmp_var7": 1,
                    "unaff_5": 1,
                    "unaff_r5": 3,
                    "unaff_temp_var2": 1,
                    "unaff_value2": 1,
                    "unaff_var5": 2,
                    "unaffected_r5": 1,
                    "unaffected_register5": 1,
                    "unaffected_register_5": 2,
                    "unused2": 1,
                    "unused_r5": 2,
                    "unused_var2": 1,
                    "unused_variable2": 1,
                    "value2": 1,
                    "var2": 2,
                    "var7": 3
                }
            },
            "called": [
                "FUN_080053a0"
            ],
            "calling": [
                "FUN_08004a34"
            ],
            "code": "\nundefined4 decode_and_process_data_080052cc(uint *data_array,int *param_array)\n\n{\n  undefined4 return_value;\n  int count;\n  int *linked_list;\n  uint u_var4;\n  ushort flag;\n  int increment;\n  undefined4 var6;\n  undefined4 unaff_r5;\n  code *function_pointer;\n  int loop_counter;\n  uint temp_value;\n  code *jump_table;\n  bool is_zero;\n  \n  if (param_array[4] != 0) {\n    if ((data_array != (uint *)0x0) && (data_array[6] == 0)) {\n      initialize_memory_blocks_080053a0();\n    }\n    if (param_array == &DAT_08005fc0) {\n      param_array = (int *)data_array[1];\n    }\n    else if (param_array == (int *)&DAT_08005fe0) {\n      param_array = (int *)data_array[2];\n    }\n    else if (param_array == (int *)&DAT_08005fa0) {\n      param_array = (int *)data_array[3];\n    }\n    if (*(short *)(param_array + 3) != 0) {\n      flag = *(ushort *)(param_array + 3);\n      u_var4 = (uint)flag;\n      if ((int)(u_var4 << 0x1c) < 0) {\n        count = param_array[4];\n        if (count != 0) {\n          increment = u_var4 << 0x1e;\n          is_zero = increment == 0;\n          loop_counter = *param_array;\n          if (is_zero) {\n            increment = param_array[5];\n          }\n          *param_array = count;\n          if (!is_zero) {\n            increment = 0;\n          }\n          param_array[2] = increment;\n          for (loop_counter = loop_counter - count; 0 < loop_counter; loop_counter = loop_counter - increment) {\n            increment = (*(code *)param_array[10])(data_array,param_array[8],count,loop_counter,var6,unaff_r5);\n            if (increment < 1) {\n              flag = *(ushort *)(param_array + 3);\n              goto LAB_080052b2;\n            }\n            count = count + increment;\n          }\n        }\n      }\n      else if (((0 < param_array[1]) || (0 < param_array[0x10])) &&\n              (function_pointer = (code *)param_array[0xb], function_pointer != (code *)0x0)) {\n        temp_value = *data_array;\n        *data_array = 0;\n        if ((flag & 0x1000) == 0) {\n          count = (*function_pointer)(data_array,param_array[8],u_var4 & 0x1000,1);\n          if ((count == -1) && (u_var4 = *data_array, u_var4 != 0)) {\n            if ((u_var4 != 0x1d) && (u_var4 != 0x16)) {\n              *(ushort *)(param_array + 3) = *(ushort *)(param_array + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x0800527c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              return_value = (*jump_table)();\n              return return_value;\n            }\n            *data_array = temp_value;\n            goto LAB_080051d6;\n          }\n        }\n        else {\n          count = param_array[0x15];\n        }\n        if (((int)((uint)*(ushort *)(param_array + 3) << 0x1d) < 0) &&\n           (count = count - param_array[1], param_array[0xd] != 0)) {\n          count = count - param_array[0x10];\n        }\n        count = (*(code *)param_array[0xb])(data_array,param_array[8],count,0);\n        flag = *(ushort *)(param_array + 3);\n        if ((count == -1) &&\n           ((0x1d < *data_array || (-1 < (int)((0x20400001U >> (*data_array & 0xff)) << 0x1f))))) {\nLAB_080052b2:\n          *(ushort *)(param_array + 3) = flag | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x080052bc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          return_value = (*jump_table)(0xffffffff);\n          return return_value;\n        }\n        param_array[1] = 0;\n        *param_array = param_array[4];\n        if (((int)((uint)flag << 0x13) < 0) && ((count != -1 || (*data_array == 0)))) {\n          param_array[0x15] = count;\n        }\n        linked_list = (int *)param_array[0xd];\n        *data_array = temp_value;\n        if (linked_list != (int *)0x0) {\n          if (linked_list != param_array + 0x11) {\n            update_linked_list_080048dc(data_array);\n          }\n          param_array[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08005252. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          return_value = (*jump_table)();\n          return return_value;\n        }\n      }\nLAB_080051d6:\n                    /* WARNING: Could not recover jumptable at 0x080051d8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      return_value = (*jump_table)(0);\n      return return_value;\n    }\n  }\n  return 0;\n}\n\n",
            "code_backup": "\nundefined4 FUN_080052cc(uint *param_1,int *param_2)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  int *piVar3;\n  uint uVar4;\n  ushort uVar5;\n  int iVar6;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  code *pcVar7;\n  int iVar8;\n  uint uVar9;\n  code *UNRECOVERED_JUMPTABLE_00;\n  bool bVar10;\n  \n  if (param_2[4] != 0) {\n    if ((param_1 != (uint *)0x0) && (param_1[6] == 0)) {\n      FUNC_080053a0();\n    }\n    if (param_2 == &DAT_08005fc0) {\n      param_2 = (int *)param_1[1];\n    }\n    else if (param_2 == (int *)&DAT_08005fe0) {\n      param_2 = (int *)param_1[2];\n    }\n    else if (param_2 == (int *)&DAT_08005fa0) {\n      param_2 = (int *)param_1[3];\n    }\n    if (*(short *)(param_2 + 3) != 0) {\n      uVar5 = *(ushort *)(param_2 + 3);\n      uVar4 = (uint)uVar5;\n      if ((int)(uVar4 << 0x1c) < 0) {\n        iVar2 = param_2[4];\n        if (iVar2 != 0) {\n          iVar6 = uVar4 << 0x1e;\n          bVar10 = iVar6 == 0;\n          iVar8 = *param_2;\n          if (bVar10) {\n            iVar6 = param_2[5];\n          }\n          *param_2 = iVar2;\n          if (!bVar10) {\n            iVar6 = 0;\n          }\n          param_2[2] = iVar6;\n          for (iVar8 = iVar8 - iVar2; 0 < iVar8; iVar8 = iVar8 - iVar6) {\n            iVar6 = (*(code *)param_2[10])(param_1,param_2[8],iVar2,iVar8,unaff_r4,unaff_r5);\n            if (iVar6 < 1) {\n              uVar5 = *(ushort *)(param_2 + 3);\n              goto LAB_080052b2;\n            }\n            iVar2 = iVar2 + iVar6;\n          }\n        }\n      }\n      else if (((0 < param_2[1]) || (0 < param_2[0x10])) &&\n              (pcVar7 = (code *)param_2[0xb], pcVar7 != (code *)0x0)) {\n        uVar9 = *param_1;\n        *param_1 = 0;\n        if ((uVar5 & 0x1000) == 0) {\n          iVar2 = (*pcVar7)(param_1,param_2[8],uVar4 & 0x1000,1);\n          if ((iVar2 == -1) && (uVar4 = *param_1, uVar4 != 0)) {\n            if ((uVar4 != 0x1d) && (uVar4 != 0x16)) {\n              *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x0800527c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              uVar1 = (*UNRECOVERED_JUMPTABLE_00)();\n              return uVar1;\n            }\n            *param_1 = uVar9;\n            goto LAB_080051d6;\n          }\n        }\n        else {\n          iVar2 = param_2[0x15];\n        }\n        if (((int)((uint)*(ushort *)(param_2 + 3) << 0x1d) < 0) &&\n           (iVar2 = iVar2 - param_2[1], param_2[0xd] != 0)) {\n          iVar2 = iVar2 - param_2[0x10];\n        }\n        iVar2 = (*(code *)param_2[0xb])(param_1,param_2[8],iVar2,0);\n        uVar5 = *(ushort *)(param_2 + 3);\n        if ((iVar2 == -1) &&\n           ((0x1d < *param_1 || (-1 < (int)((0x20400001U >> (*param_1 & 0xff)) << 0x1f))))) {\nLAB_080052b2:\n          *(ushort *)(param_2 + 3) = uVar5 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x080052bc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          uVar1 = (*UNRECOVERED_JUMPTABLE_00)(0xffffffff);\n          return uVar1;\n        }\n        param_2[1] = 0;\n        *param_2 = param_2[4];\n        if (((int)((uint)uVar5 << 0x13) < 0) && ((iVar2 != -1 || (*param_1 == 0)))) {\n          param_2[0x15] = iVar2;\n        }\n        piVar3 = (int *)param_2[0xd];\n        *param_1 = uVar9;\n        if (piVar3 != (int *)0x0) {\n          if (piVar3 != param_2 + 0x11) {\n            update_linked_list_080048dc(param_1);\n          }\n          param_2[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08005252. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          uVar1 = (*UNRECOVERED_JUMPTABLE_00)();\n          return uVar1;\n        }\n      }\nLAB_080051d6:\n                    /* WARNING: Could not recover jumptable at 0x080051d8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      uVar1 = (*UNRECOVERED_JUMPTABLE_00)(0);\n      return uVar1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "decode_and_process_data_080052cc",
            "entrypoint": "0x080052cc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080052cc": "decode_and_process_data_080052cc",
                "UNRECOVERED_JUMPTABLE_00": "jump_table",
                "bVar10": "is_zero",
                "iVar2": "count",
                "iVar6": "increment",
                "iVar8": "loop_counter",
                "param_1": "data_array",
                "param_2": "param_array",
                "pcVar7": "function_pointer",
                "piVar3": "linked_list",
                "uVar1": "return_value",
                "uVar4": "u_var4",
                "uVar5": "flag",
                "uVar9": "temp_value",
                "unaff_r4": "var6"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800532c": {
            "additional_data": {
                "FUN_0800532c": {
                    "initialize_block": 1,
                    "initialize_data": 1,
                    "initialize_data_struct": 3,
                    "initialize_data_structure": 8,
                    "initialize_function": 2,
                    "initialize_memory": 10,
                    "initialize_memory_block": 1,
                    "initialize_parameters": 3,
                    "initialize_params": 1,
                    "initialize_struct": 1
                },
                "LAB_08005686_1": {
                    "constant_function_address": 1,
                    "function_label": 1,
                    "label": 7,
                    "label08005686": 2,
                    "label_08005686": 1,
                    "label_08005686_1": 4,
                    "label_1": 3,
                    "some_label": 4
                },
                "data_structure": {
                    "data_structure": 1
                },
                "fill_memory_block": {
                    "fill_memory_block": 1
                },
                "fill_memory_block_080048cc": {
                    "fill_memory_block": 24,
                    "initialize_memory_block": 1
                },
                "initialize_data_structure": {
                    "initialize_data_structure": 1
                },
                "label_08005686": {
                    "label_08005686": 1
                },
                "param_1": {
                    "block": 1,
                    "data_array": 1,
                    "data_struct": 2,
                    "data_struct_ptr": 1,
                    "data_structure": 8,
                    "memory": 4,
                    "memory_array": 1,
                    "memory_block": 5,
                    "memory_buffer": 1,
                    "output_array": 2,
                    "parameter_array": 1,
                    "parameters": 2,
                    "result": 1,
                    "struct_ptr": 1
                },
                "param_2": {
                    "initial_value1": 1,
                    "input_value1": 1,
                    "param_2_value": 1,
                    "value": 1,
                    "value1": 21,
                    "value_1": 6
                },
                "param_2_value": {
                    "param_2_value": 1
                },
                "param_3": {
                    "additional_value": 1,
                    "initial_value2": 1,
                    "input_value2": 1,
                    "param_3_value": 1,
                    "value2": 21,
                    "value_2": 6
                },
                "param_3_value": {
                    "param_3_value": 1
                }
            },
            "called": [
                "FUN_080048cc"
            ],
            "calling": [
                "FUN_080053a0"
            ],
            "code": "\nvoid initialize_memory_block_0800532c(undefined4 *data_structure,undefined2 value1,undefined2 value2)\n\n{\n  *data_structure = 0;\n  data_structure[1] = 0;\n  data_structure[2] = 0;\n  *(undefined2 *)(data_structure + 3) = value1;\n  data_structure[0x19] = 0;\n  *(undefined2 *)((int)data_structure + 0xe) = value2;\n  data_structure[4] = 0;\n  data_structure[5] = 0;\n  data_structure[6] = 0;\n  fill_memory_block(data_structure + 0x17,0,8);\n  data_structure[9] = 0x8005609;\n  data_structure[10] = 0x800562b;\n  data_structure[0xb] = 0x8005663;\n  data_structure[8] = data_structure;\n  data_structure[0xc] = &label;\n  return;\n}\n\n",
            "current_name": "initialize_memory_block_0800532c",
            "entrypoint": "0x0800532c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800532c": "initialize_memory_block_0800532c",
                "LAB_08005686_1": "label",
                "fill_memory_block_080048cc": "fill_memory_block",
                "param_1": "data_structure",
                "param_2": "value1",
                "param_3": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005374": {
            "additional_data": {
                "FUN_08005374": {
                    "allocate_and_fill_memory": 1,
                    "allocate_and_fill_memory_block": 8,
                    "allocate_and_init_memory_block": 1,
                    "allocate_and_initialize_block": 2,
                    "allocate_and_initialize_memory": 5,
                    "allocate_and_initialize_memory_block": 7,
                    "allocate_memory_and_assign": 1,
                    "allocate_memory_block": 1,
                    "create_and_init_memory_block": 1,
                    "initialize_block_with_size": 1,
                    "initialize_memory_block": 3
                },
                "fill_memory_block_080048cc": {
                    "fill_memory_block": 1
                },
                "iVar2": {
                    "adjusted_size": 1,
                    "allocated_memory_size": 1,
                    "block_offset": 3,
                    "block_size": 16,
                    "memory_block_offset": 1,
                    "memory_offset": 2,
                    "offset": 1,
                    "size": 2,
                    "total_memory_size": 2,
                    "total_size": 2
                },
                "param_1": {
                    "address": 1,
                    "arg1": 1,
                    "base_address": 1,
                    "block_start_address": 1,
                    "data": 1,
                    "func_param_1": 1,
                    "initial_value": 5,
                    "input": 1,
                    "input_param": 3,
                    "input_parameter": 1,
                    "input_value": 2,
                    "memory": 2,
                    "memory_address": 1,
                    "memory_block_address": 2,
                    "memory_block_size": 1,
                    "memory_block_start": 2,
                    "output_parameter": 1,
                    "param": 1,
                    "param1": 1,
                    "size": 1,
                    "value": 1
                },
                "param_2": {
                    "arg2": 1,
                    "block_length": 1,
                    "block_size": 7,
                    "count": 3,
                    "input_number": 1,
                    "num_blocks": 6,
                    "num_elements": 7,
                    "num_iterations": 1,
                    "param2": 1,
                    "size": 3
                },
                "puVar1": {
                    "allocated_block": 5,
                    "allocated_memory": 6,
                    "allocated_memory_block": 3,
                    "allocated_memory_ptr": 1,
                    "block_pointer": 1,
                    "block_ptr": 2,
                    "memory_block": 8,
                    "memory_ptr": 1,
                    "new_block": 1,
                    "ptr": 2,
                    "result": 1
                }
            },
            "called": [
                "FUN_08004978",
                "FUN_080048cc"
            ],
            "calling": [
                "FUN_08005400"
            ],
            "code": "\nundefined4 * allocate_and_initialize_memory_block_08005374(undefined4 initial_value,int block_size)\n\n{\n  undefined4 *memory_block;\n  int block_size;\n  \n  block_size = (block_size + -1) * 0x68;\n  memory_block = (undefined4 *)allocate_and_assign_memory_block_08004978(initial_value,block_size + 0x74);\n  if (memory_block != (undefined4 *)0x0) {\n    *memory_block = 0;\n    memory_block[1] = block_size;\n    memory_block[2] = memory_block + 3;\n    fill_memory_block(memory_block + 3,0,block_size + 0x68);\n  }\n  return memory_block;\n}\n\n",
            "current_name": "allocate_and_initialize_memory_block_08005374",
            "entrypoint": "0x08005374",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005374": "allocate_and_initialize_memory_block_08005374",
                "fill_memory_block_080048cc": "fill_memory_block",
                "iVar2": "block_size",
                "param_1": "initial_value",
                "param_2": "block_size",
                "puVar1": "memory_block"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080053a0": {
            "additional_data": {
                "DAT_200000a4": {
                    "constant": 1,
                    "initial_data_pointer": 1,
                    "memory_block": 1
                },
                "FUN_080053a0": {
                    "initialize_data_structure": 1,
                    "initialize_memory": 14,
                    "initialize_memory_and_set_defaults": 1,
                    "initialize_memory_block": 1,
                    "initialize_memory_blocks": 13,
                    "initialize_memory_function": 1
                },
                "LAB_08005320_1": {
                    "constant_value": 1,
                    "function_08005320": 1,
                    "label": 2,
                    "memory_label": 1
                },
                "initialize_memory_block_0800532c": {
                    "initialize_and_set_memory_block": 1,
                    "initialize_block_with_data": 1,
                    "initialize_block_with_value": 1,
                    "initialize_memory": 1,
                    "initialize_memory_block": 3,
                    "initialize_memory_block2": 4,
                    "initialize_memory_block_3": 1,
                    "initialize_memory_block_values": 1,
                    "initialize_memory_block_with_params": 1,
                    "initialize_memory_block_with_value": 1,
                    "initialize_memory_block_with_values": 2,
                    "initialize_subblock": 1,
                    "set_memory_block": 1,
                    "set_memory_block_values": 1
                },
                "initialize_memory_block_08005400": {
                    "allocate_block": 1,
                    "allocate_memory": 1,
                    "allocate_memory_block": 6,
                    "initialize_block": 3,
                    "initialize_memory_block": 9,
                    "initialize_memory_block_2": 1
                },
                "param_1": {
                    "block": 1,
                    "block_array": 1,
                    "block_pointers": 1,
                    "data_structure": 1,
                    "input_array": 1,
                    "memory_array": 1,
                    "memory_block": 13,
                    "memory_blocks": 5,
                    "param": 2,
                    "parameters": 3,
                    "pointer": 1,
                    "pointer_param": 1
                },
                "puVar2": {
                    "additional_data": 1,
                    "alternative_ptr": 1,
                    "pointer": 14,
                    "pointer_to_dat_200000a4": 1,
                    "pointer_var": 1,
                    "ptr": 1,
                    "temp": 1,
                    "temp_memory_block": 1,
                    "temp_pointer": 4,
                    "temp_ptr": 6
                },
                "uVar1": {
                    "initialized_block": 1,
                    "memory_block": 2,
                    "memory_block_result": 1,
                    "result": 21,
                    "return_val": 1,
                    "return_value": 4,
                    "temp_value": 1
                }
            },
            "called": [
                "FUN_08005400",
                "FUN_0800532c"
            ],
            "calling": [
                "FUN_08004a84",
                "FUN_08004fdc",
                "FUN_080052cc",
                "FUN_08005400",
                "FUN_080050d0",
                "FUN_08004a34"
            ],
            "code": "\nvoid initialize_memory_blocks_080053a0(undefined4 *memory_block)\n\n{\n  undefined4 result;\n  undefined4 *pointer;\n  \n  if (memory_block[6] == 0) {\n    memory_block[0x12] = 0;\n    memory_block[0x13] = 0;\n    memory_block[0x14] = 0;\n    pointer = &DAT_200000a4;\n    memory_block[10] = &label;\n    if (memory_block == &DAT_200000a4) {\n      pointer = (undefined4 *)0x1;\n    }\n    if (memory_block == &DAT_200000a4) {\n      memory_block[6] = pointer;\n    }\n    result = initialize_memory_block();\n    memory_block[1] = result;\n    result = initialize_memory_block(memory_block);\n    memory_block[2] = result;\n    result = initialize_memory_block(memory_block);\n    memory_block[3] = result;\n    initialize_memory_block2(memory_block[1],4,0);\n    initialize_memory_block2(memory_block[2],9,1);\n    initialize_memory_block2(memory_block[3],0x12,2);\n    memory_block[6] = 1;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_memory_blocks_080053a0",
            "entrypoint": "0x080053a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080053a0": "initialize_memory_blocks_080053a0",
                "LAB_08005320_1": "label",
                "initialize_memory_block_0800532c": "initialize_memory_block2",
                "initialize_memory_block_08005400": "initialize_memory_block",
                "param_1": "memory_block",
                "puVar2": "pointer",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005400": {
            "additional_data": {
                "DAT_200000a4": {
                    "block_address": 1,
                    "dat_1": 1,
                    "data": 1,
                    "data_address": 1,
                    "data_var1": 1,
                    "global_data": 1,
                    "initial_memory_block": 1,
                    "memory_block_data": 1,
                    "memory_data": 1,
                    "temporary_data_block": 1
                },
                "DAT_200000bc": {
                    "block_initialized": 1,
                    "dat_flag": 1,
                    "data_flag": 3,
                    "data_initialized_flag": 1,
                    "flag": 1,
                    "global_data_flag": 1,
                    "is_initialized": 1,
                    "memory_initialized_flag": 1
                },
                "DAT_200000ec": {
                    "block_list": 1,
                    "block_list_ptr": 1,
                    "dat_2": 1,
                    "data_block_array": 1,
                    "data_block_list_address": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "global_memory_block": 1,
                    "memory_block_list": 1
                },
                "FUNC_080053a0": {
                    "initialize_data": 3,
                    "initialize_global_data": 1,
                    "initialize_memory": 1
                },
                "FUN_08005400": {
                    "initialize_block": 1,
                    "initialize_data": 2,
                    "initialize_data_block": 3,
                    "initialize_data_structure": 2,
                    "initialize_data_structures": 1,
                    "initialize_memory": 2,
                    "initialize_memory_block": 12,
                    "initialize_memory_blocks": 4,
                    "process_data": 2
                },
                "allocate_and_initialize_memory_block_08005374": {
                    "allocate_and_initialize_block": 1,
                    "allocate_and_initialize_memory_block": 7
                },
                "fill_memory_block_080048cc": {
                    "fill_memory_block": 8
                },
                "param_1": {
                    "error_code": 9,
                    "error_flag": 4,
                    "error_msg": 1,
                    "error_pointer": 1,
                    "error_status": 1,
                    "output": 3,
                    "output_pointer": 2,
                    "output_ptr": 2,
                    "result": 6,
                    "status": 1,
                    "status_flag": 1
                },
                "param_2": {
                    "arg2": 2,
                    "input1": 3,
                    "input_param_2": 1,
                    "param2": 21,
                    "param_2": 3,
                    "unknown_param_1": 1
                },
                "param_3": {
                    "arg3": 2,
                    "input2": 3,
                    "input_param_3": 1,
                    "param3": 21,
                    "param_3": 3,
                    "unknown_param_2": 1
                },
                "param_4": {
                    "arg4": 2,
                    "block_fill_type": 1,
                    "input3": 3,
                    "input_param_4": 1,
                    "memory_flag": 1,
                    "param4": 21,
                    "param_4": 2
                },
                "piVar1": {
                    "allocated_memory": 1,
                    "current_block": 13,
                    "current_data_block": 1,
                    "current_pointer": 7,
                    "current_ptr": 2,
                    "inner_loop_var": 1,
                    "new_memory_block": 1,
                    "p_var1": 1,
                    "pointer1": 1,
                    "ptr1": 1,
                    "temp_ptr1": 2
                },
                "piVar2": {
                    "block": 1,
                    "current_block": 1,
                    "current_block_item": 2,
                    "current_element": 1,
                    "current_entry": 1,
                    "current_item": 4,
                    "current_memory_block": 1,
                    "current_sub_block": 1,
                    "current_subblock": 1,
                    "data_block": 1,
                    "inner_pointer": 4,
                    "inner_ptr": 2,
                    "nested_pointer": 2,
                    "next_data_block": 1,
                    "outer_loop_var": 1,
                    "p_var2": 1,
                    "pointer2": 1,
                    "ptr2": 1,
                    "sub_block": 1,
                    "sub_pointer": 1,
                    "temp_ptr2": 2
                },
                "ppiVar3": {
                    "block_list": 7,
                    "block_list_ptr": 2,
                    "block_pointer": 1,
                    "data_block_list": 1,
                    "data_structures_pointer": 1,
                    "memory_block": 2,
                    "memory_block_array": 1,
                    "memory_block_pointer": 1,
                    "memory_block_ptr": 1,
                    "memory_blocks": 1,
                    "memory_blocks_pointer": 1,
                    "memory_list": 1,
                    "memory_list_ptr": 1,
                    "nested_pointer_list": 1,
                    "pointer3": 1,
                    "pointer_array": 1,
                    "pp_array_of_data_structures": 1,
                    "pp_var3": 1,
                    "ppi_var": 1,
                    "ptr_ptr": 2,
                    "ptr_to_ptr": 1,
                    "ptr_to_ptr_to_block": 1
                },
                "short": {
                    "short_var": 1
                }
            },
            "called": [
                "FUN_080053a0",
                "FUN_08005374",
                "FUN_080048cc"
            ],
            "calling": [
                "FUN_080053a0"
            ],
            "code": "\nint * initialize_memory_block_08005400(undefined4 *error_code,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *current_block;\n  int *current_item;\n  int **block_list;\n  \n  if (DAT_200000bc == 0) {\n    initialize_memory_blocks_080053a0(&DAT_200000a4);\n  }\n  block_list = (int **)&DAT_200000ec;\n  do {\n    current_item = block_list[2];\n    current_block = block_list[1];\n    while (current_block = (int *)((int)current_block + -1), -1 < (int)current_block) {\n      if (*(short_var *)(current_item + 3) == 0) {\n        *(undefined2 *)((int)current_item + 0xe) = 0xffff;\n        *(undefined2 *)(current_item + 3) = 1;\n        current_item[0x19] = 0;\n        *current_item = 0;\n        current_item[2] = 0;\n        current_item[1] = 0;\n        current_item[4] = 0;\n        current_item[5] = 0;\n        current_item[6] = 0;\n        fill_memory_block(current_item + 0x17,0,8,1,param4);\n        current_item[0xd] = 0;\n        current_item[0xe] = 0;\n        current_item[0x12] = 0;\n        current_item[0x13] = 0;\n        return current_item;\n      }\n      current_item = current_item + 0x1a;\n    }\n    if (*block_list == (int *)0x0) {\n      current_block = (int *)allocate_and_initialize_memory_block_08005400(error_code,4);\n      *block_list = current_block;\n      if (current_block == (int *)0x0) {\n        *error_code = 0xc;\n        return (int *)0x0;\n      }\n    }\n    block_list = (int **)*block_list;\n  } while( true );\n}\n\n",
            "code_backup": "\nint * FUN_08005400(undefined4 *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int *piVar1;\n  int *piVar2;\n  int **ppiVar3;\n  \n  if (DAT_200000bc == 0) {\n    FUNC_080053a0(&DAT_200000a4);\n  }\n  ppiVar3 = (int **)&DAT_200000ec;\n  do {\n    piVar2 = ppiVar3[2];\n    piVar1 = ppiVar3[1];\n    while (piVar1 = (int *)((int)piVar1 + -1), -1 < (int)piVar1) {\n      if (*(short *)(piVar2 + 3) == 0) {\n        *(undefined2 *)((int)piVar2 + 0xe) = 0xffff;\n        *(undefined2 *)(piVar2 + 3) = 1;\n        piVar2[0x19] = 0;\n        *piVar2 = 0;\n        piVar2[2] = 0;\n        piVar2[1] = 0;\n        piVar2[4] = 0;\n        piVar2[5] = 0;\n        piVar2[6] = 0;\n        fill_memory_block_080048cc(piVar2 + 0x17,0,8,1,param_4);\n        piVar2[0xd] = 0;\n        piVar2[0xe] = 0;\n        piVar2[0x12] = 0;\n        piVar2[0x13] = 0;\n        return piVar2;\n      }\n      piVar2 = piVar2 + 0x1a;\n    }\n    if (*ppiVar3 == (int *)0x0) {\n      piVar1 = (int *)allocate_and_initialize_memory_block_08005374(param_1,4);\n      *ppiVar3 = piVar1;\n      if (piVar1 == (int *)0x0) {\n        *param_1 = 0xc;\n        return (int *)0x0;\n      }\n    }\n    ppiVar3 = (int **)*ppiVar3;\n  } while( true );\n}\n\n",
            "current_name": "initialize_memory_block_08005400",
            "entrypoint": "0x08005400",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005400": "initialize_memory_block_08005400",
                "allocate_and_initialize_memory_block_08005374": "allocate_and_initialize_memory_block",
                "fill_memory_block_080048cc": "fill_memory_block",
                "param_1": "error_code",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "current_block",
                "piVar2": "current_item",
                "ppiVar3": "block_list",
                "short": "short_var"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080054b4": {
            "additional_data": {
                "FUN_080054b4": {
                    "analyze_memory": 1,
                    "calculate_memory_access": 1,
                    "calculate_memory_permissions": 1,
                    "calculate_permission": 1,
                    "check_memory_access": 3,
                    "check_memory_access_permission": 1,
                    "check_memory_access_permissions": 1,
                    "check_memory_and_set_flag": 1,
                    "check_memory_availability": 1,
                    "check_page_access": 1,
                    "determine_memory_access": 1,
                    "get_memory_info": 2,
                    "get_memory_page_info": 2,
                    "get_memory_page_size": 1,
                    "get_memory_status": 1,
                    "get_page_attributes": 1,
                    "get_page_size": 1,
                    "initialize_and_check_memory": 3,
                    "initialize_memory": 2,
                    "initialize_memory_page": 3,
                    "initialize_page": 1,
                    "initialize_page_attributes": 1
                },
                "auStack_4c": {
                    "aux_stack": 1,
                    "buffer": 3,
                    "stack_4c": 1,
                    "stack_array": 1,
                    "stack_data": 2,
                    "stack_var": 4,
                    "stack_variable": 5,
                    "temp": 1,
                    "temp_array": 2,
                    "temp_buffer": 4,
                    "temp_stack": 4,
                    "temporary_buffer": 1,
                    "temporary_data": 1,
                    "temporary_storage": 1
                },
                "iVar1": {
                    "error_code": 2,
                    "init_result": 1,
                    "initialize_result": 4,
                    "memory_init_result": 2,
                    "result": 13,
                    "return_value": 2,
                    "status": 7
                },
                "local_48": {
                    "data": 1,
                    "file_permission": 1,
                    "flags": 4,
                    "info": 1,
                    "local_data": 1,
                    "local_flag": 2,
                    "local_value": 2,
                    "local_var": 5,
                    "local_variable": 4,
                    "mask": 1,
                    "memory_state": 1,
                    "page_attributes": 1,
                    "page_info": 2,
                    "page_info_value": 1,
                    "page_protection": 1,
                    "permissions": 1,
                    "temp_value": 1,
                    "temporary_variable": 1
                },
                "param_1": {
                    "access_type": 1,
                    "arg1": 5,
                    "context": 1,
                    "input1": 1,
                    "input_param": 1,
                    "memory": 1,
                    "method_id": 1,
                    "page_address": 1,
                    "page_info": 1,
                    "page_size": 1,
                    "param": 2,
                    "param1": 9,
                    "param_1": 1,
                    "param_address": 1,
                    "param_ptr": 1,
                    "return_value": 1,
                    "status": 2
                },
                "param_2": {
                    "access_info": 1,
                    "arg2": 5,
                    "buffer": 3,
                    "data": 7,
                    "data_address": 1,
                    "data_pointer": 1,
                    "input2": 1,
                    "input_data": 1,
                    "memory_info": 1,
                    "page_info": 1,
                    "param2": 7,
                    "param_int": 1,
                    "param_offset": 1
                },
                "param_3": {
                    "access_level": 1,
                    "access_mode": 1,
                    "access_permission": 1,
                    "flags": 1,
                    "out_param": 1,
                    "out_param1": 1,
                    "output": 3,
                    "output1": 1,
                    "output_code": 1,
                    "output_data": 1,
                    "output_param": 2,
                    "output_parameter": 1,
                    "output_ptr": 1,
                    "page_type": 1,
                    "param3": 2,
                    "param_ptr_output": 1,
                    "permissions": 1,
                    "result": 7,
                    "result_flags": 1,
                    "result_ptr": 2
                },
                "param_4": {
                    "flag": 5,
                    "flag_parameter": 1,
                    "flag_ptr": 1,
                    "flags": 3,
                    "has_permission_ptr": 1,
                    "is_executable": 4,
                    "memory_access_ptr": 1,
                    "out_flag": 1,
                    "out_param2": 1,
                    "output2": 1,
                    "output_value": 1,
                    "page_flags": 1,
                    "param4": 2,
                    "param_uint_output": 1,
                    "result": 4,
                    "status": 2,
                    "value_ptr": 1
                },
                "uVar2": {
                    "access_flag": 1,
                    "access_level": 1,
                    "access_mode": 1,
                    "access_permission": 1,
                    "access_permission_value": 1,
                    "access_type": 1,
                    "default_permission": 1,
                    "flag": 3,
                    "flag_value": 1,
                    "page_attribute": 1,
                    "page_attributes": 1,
                    "page_size": 5,
                    "permission": 4,
                    "ret_value": 1,
                    "return_value": 3,
                    "return_value2": 1,
                    "value": 3
                }
            },
            "called": [
                "FUN_080056d4"
            ],
            "calling": [
                "FUN_080054fc"
            ],
            "code": "\nundefined4 initialize_and_check_memory_080054b4(undefined4 param1,int param2,undefined4 *result,uint *flag)\n\n{\n  int result;\n  undefined4 page_size;\n  undefined stack_variable [4];\n  uint local_var;\n  \n  if ((*(short *)(param2 + 0xe) < 0) ||\n     (result = initialize_memory_page_size_080056d4(param1,(int)*(short *)(param2 + 0xe),stack_variable), result < 0)) {\n    *flag = 0;\n    if ((int)((uint)*(ushort *)(param2 + 0xc) << 0x18) < 0) {\n      page_size = 0x40;\n      goto LAB_080054f4;\n    }\n  }\n  else {\n    *flag = (uint)((local_var & 0xf000) == 0x2000);\n  }\n  page_size = 0x400;\nLAB_080054f4:\n  *result = page_size;\n  return 0;\n}\n\n",
            "current_name": "initialize_and_check_memory_080054b4",
            "entrypoint": "0x080054b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080054b4": "initialize_and_check_memory_080054b4",
                "auStack_4c": "stack_variable",
                "iVar1": "result",
                "local_48": "local_var",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "result",
                "param_4": "flag",
                "uVar2": "page_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080054fc": {
            "additional_data": {
                "FUNC_080054fc": {
                    "initialize_and_assign_memory_block": 1
                },
                "FUN_080054fc": {
                    "initialize_and_assign_memory": 2,
                    "initialize_and_check_function": 1,
                    "initialize_and_check_memory": 1,
                    "initialize_function": 1,
                    "initialize_memory": 5,
                    "initialize_memory_block": 1,
                    "initialize_program": 19
                },
                "allocate_and_assign_memory_block_08004978": {
                    "allocate_memory_block": 1
                },
                "iVar2": {
                    "alloc_result": 1,
                    "allocated_block": 4,
                    "allocated_memory": 10,
                    "allocated_memory_block": 2,
                    "allocation_result": 1,
                    "block": 1,
                    "memory_allocation_result": 2,
                    "memory_assignment_result": 1,
                    "memory_block": 4,
                    "memory_block_address": 1,
                    "memory_block_allocation_result": 1,
                    "memory_block_result": 1,
                    "result_2": 1
                },
                "initialize_and_check_memory_080054b4": {
                    "setup_memory": 1
                },
                "initialize_and_check_program_080056f8": {
                    "initialize_program_check": 1
                },
                "local_14": {
                    "initialization_data": 1,
                    "is_valid_program": 1,
                    "local_block": 1,
                    "local_data_2": 1,
                    "local_info": 1,
                    "local_memory": 2,
                    "local_memory_address": 1,
                    "local_memory_block": 2,
                    "local_memory_pointer": 1,
                    "local_parameters": 1,
                    "local_program_data": 1,
                    "local_program_info": 1,
                    "local_program_memory": 1,
                    "local_variable2": 1,
                    "local_variable_2": 2,
                    "memory_address": 2,
                    "memory_block_address": 1,
                    "memory_info_local": 1,
                    "program_chunk_info": 1,
                    "program_data": 3,
                    "program_info": 2,
                    "program_pointer": 1,
                    "sub_data_pointer": 1,
                    "user_info": 1
                },
                "local_18": {
                    "allocated_memory": 1,
                    "allocated_size": 1,
                    "local_base": 1,
                    "local_base_address": 2,
                    "local_data_1": 1,
                    "local_handle": 1,
                    "local_memory": 1,
                    "local_memory_size": 2,
                    "local_program": 2,
                    "local_program_address": 2,
                    "local_program_handle": 1,
                    "local_variable1": 1,
                    "local_variable_1": 2,
                    "memory_block_local": 1,
                    "memory_block_size": 1,
                    "memory_size": 5,
                    "parameter": 1,
                    "program_allocation_size": 1,
                    "program_data": 1,
                    "program_id": 1,
                    "program_size": 2
                },
                "param_1": {
                    "base_address": 3,
                    "function_param": 1,
                    "input_param": 1,
                    "input_ptr": 1,
                    "memory_address": 1,
                    "memory_base_address": 1,
                    "memory_block": 1,
                    "memory_block_address": 1,
                    "memory_pointer": 1,
                    "memory_start_address": 1,
                    "program": 3,
                    "program_address": 3,
                    "program_base": 2,
                    "program_base_address": 3,
                    "program_config": 1,
                    "program_context": 1,
                    "program_data": 1,
                    "program_handle": 4,
                    "program_ptr": 1
                },
                "param_2": {
                    "data_param": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "memory": 1,
                    "memory_block": 6,
                    "memory_info": 3,
                    "memory_parameters": 1,
                    "output_param": 1,
                    "parameters": 3,
                    "parameters_ptr": 1,
                    "program_data": 4,
                    "program_info": 7,
                    "program_memory": 1
                },
                "uVar1": {
                    "check_result": 1,
                    "initialization_result": 2,
                    "initialize_result": 1,
                    "initialized_block_status": 1,
                    "initialized_flag": 3,
                    "initialized_value": 7,
                    "memory_check": 1,
                    "memory_check_result": 3,
                    "memory_initialization_result": 1,
                    "memory_status": 4,
                    "result": 3,
                    "result_1": 1,
                    "returned_value": 1,
                    "status": 1
                }
            },
            "called": [
                "FUN_080056f8",
                "FUN_080054b4",
                "FUN_08004978"
            ],
            "calling": [
                "FUN_080050d0"
            ],
            "code": "\nvoid initialize_program_080054fc(int program_handle,int *program_info)\n\n{\n  ushort initialized_value;\n  int allocated_memory;\n  int memory_size;\n  int *program_data;\n  \n  if (-1 < (int)((uint)*(ushort *)(program_info + 3) << 0x1e)) {\n    memory_size = program_handle;\n    program_data = program_info;\n    initialized_value = setup_memory(program_handle,program_info,&memory_size,&program_data);\n    allocated_memory = allocate_memory_block(program_handle,memory_size);\n    if (allocated_memory != 0) {\n      *(undefined **)(program_handle + 0x28) = &LAB_08005320_1;\n      *program_info = allocated_memory;\n      *(ushort *)(program_info + 3) = *(ushort *)(program_info + 3) | 0x80;\n      program_info[5] = memory_size;\n      program_info[4] = allocated_memory;\n      if ((program_data != (int *)0x0) &&\n         (allocated_memory = initialize_program_080054fc_check(program_handle,(int)*(short *)((int)program_info + 0xe)), allocated_memory != 0)) {\n        *(ushort *)(program_info + 3) = *(ushort *)(program_info + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(program_info + 3) = initialized_value | *(ushort *)(program_info + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(program_info + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(program_info + 3) = *(ushort *)(program_info + 3) & 0xfffc | 2;\n  }\n  *program_info = (int)program_info + 0x47;\n  program_info[4] = (int)program_info + 0x47;\n  program_info[5] = 1;\n  return;\n}\n\n",
            "current_name": "initialize_program_080054fc",
            "entrypoint": "0x080054fc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080054fc": "initialize_program_080054fc",
                "allocate_and_assign_memory_block_08004978": "allocate_memory_block",
                "iVar2": "allocated_memory",
                "initialize_and_check_memory_080054b4": "setup_memory",
                "initialize_and_check_program_080056f8": "initialize_program_check",
                "local_14": "program_data",
                "local_18": "memory_size",
                "param_1": "program_handle",
                "param_2": "program_info",
                "uVar1": "initialized_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800557c": {
            "called": [],
            "calling": [
                "FUN_08004978",
                "FUN_080048dc"
            ],
            "code": "\nvoid FUNC_0800557c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800557c",
            "entrypoint": "0x0800557c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800557c": "FUNC_0800557c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800557e": {
            "called": [],
            "calling": [
                "FUN_08004978",
                "FUN_080048dc"
            ],
            "code": "\nvoid FUNC_0800557e(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800557e",
            "entrypoint": "0x0800557e",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800557e": "FUNC_0800557e"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080055d0": {
            "additional_data": {
                "DAT_200000a0": {
                    "data_array": 1
                },
                "DAT_20000674": {
                    "error_code": 1
                },
                "FUN_080055d0": {
                    "execute_function": 3,
                    "initialize": 3,
                    "initialize_and_execute": 1,
                    "initialize_and_execute_function": 1,
                    "initialize_and_process_data": 1,
                    "initialize_application": 4,
                    "initialize_data": 1,
                    "initialize_or_execute": 1,
                    "initialize_or_execute_function": 1,
                    "initialize_resource": 1,
                    "perform_action": 1,
                    "perform_operation": 1,
                    "process_data": 4,
                    "process_input": 2,
                    "process_param": 2
                },
                "iVar3": {
                    "action_index": 1,
                    "check_result": 1,
                    "code_index": 1,
                    "current_value": 2,
                    "data": 3,
                    "data_index": 1,
                    "data_length": 1,
                    "data_value": 4,
                    "element": 1,
                    "function_ptr": 1,
                    "index": 8,
                    "resource_status": 1,
                    "return_value2": 1,
                    "status": 1,
                    "value": 2,
                    "variable": 1,
                    "variable1": 1
                },
                "in_lr": {
                    "register_value": 1,
                    "return_addr": 1,
                    "return_address": 2,
                    "undefined_value": 1,
                    "unknown3": 1,
                    "unused_lr": 1,
                    "unused_var3": 1,
                    "unused_variable": 1
                },
                "param_1": {
                    "action_id": 1,
                    "data": 2,
                    "function_code": 1,
                    "function_id": 1,
                    "index": 3,
                    "input": 6,
                    "input_data": 1,
                    "input_param": 5,
                    "input_parameter": 1,
                    "input_value": 5,
                    "param": 3,
                    "parameter": 1,
                    "resource_id": 1
                },
                "pcVar4": {
                    "action_function": 1,
                    "callback": 1,
                    "code_pointer": 2,
                    "function": 1,
                    "function_pointer": 7,
                    "function_ptr": 18,
                    "resource_func": 1
                },
                "piVar1": {
                    "action_list": 1,
                    "current_value_ptr": 1,
                    "data": 2,
                    "data_array": 1,
                    "data_pointer": 5,
                    "data_ptr": 11,
                    "data_ptr_1": 1,
                    "pointer1": 2,
                    "pointer_to_output": 1,
                    "ptr_data": 1,
                    "resource_ptr": 1,
                    "result": 3,
                    "result_ptr": 1
                },
                "puVar5": {
                    "action_list_ptr": 1,
                    "data_array_ptr": 1,
                    "data_pointer": 2,
                    "data_pointer2": 1,
                    "data_pointer_backup": 1,
                    "data_pointer_pointer": 1,
                    "data_ptr": 5,
                    "data_ptr_2": 1,
                    "data_ptr_address": 1,
                    "data_ptr_copy": 1,
                    "data_ptr_pointer": 1,
                    "data_ptr_ptr": 7,
                    "first_value_ptr": 1,
                    "global_data_ptr": 1,
                    "pointer": 1,
                    "pointer2": 2,
                    "pointer_ptr": 1,
                    "pointer_to_dat": 1,
                    "resource_table_ptr": 1
                },
                "uVar2": {
                    "app_initialized": 1,
                    "app_status": 1,
                    "initialization_result": 1,
                    "initialize_result": 2,
                    "result": 19,
                    "result_value": 3,
                    "return_value": 2,
                    "status": 2
                },
                "unaff_r4": {
                    "unknown1": 1,
                    "unused_reg4": 1,
                    "unused_var1": 1,
                    "unused_variable": 1,
                    "val1": 1
                },
                "unaff_r5": {
                    "unknown2": 1,
                    "unused_reg5": 1,
                    "unused_var2": 1,
                    "unused_variable": 1,
                    "val2": 1
                }
            },
            "called": [
                "FUN_080040fc",
                "thunk_FUN_0800410c"
            ],
            "calling": [
                "FUN_080051ac"
            ],
            "code": "\nint initialize_and_process_data_080055d0(uint input)\n\n{\n  int *data_ptr;\n  undefined4 result;\n  int index;\n  code *function_ptr;\n  undefined4 unused_reg4;\n  undefined4 val2;\n  undefined4 return_address;\n  undefined4 *data_ptr_ptr;\n  \n  data_ptr = DAT_200000a0;\n  data_ptr_ptr = &DAT_200000a0;\n  if (0x1f < input) {\n    *DAT_200000a0 = 0x16;\n    return -1;\n  }\n  index = DAT_200000a0[0x11];\n  if ((index != 0) && (function_ptr = *(code **)(index + input * 4), function_ptr != (code *)0x0)) {\n    if (function_ptr != (code *)0x1) {\n      if (function_ptr == (code *)0xffffffff) {\n        *DAT_200000a0 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(index + input * 4) = 0;\n      (*function_ptr)(input);\n    }\n    return 0;\n  }\n  result = thunk_initialize_application_0800410c(DAT_200000a0);\n  DAT_20000674 = 0;\n  index = initialize_data_080040fc(result,input,input,0,data_ptr_ptr,unused_reg4,val2,return_address);\n  if ((index == -1) && (DAT_20000674 != 0)) {\n    *data_ptr = DAT_20000674;\n  }\n  return index;\n}\n\n",
            "current_name": "initialize_and_process_data_080055d0",
            "entrypoint": "0x080055d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080055d0": "initialize_and_process_data_080055d0",
                "iVar3": "index",
                "in_lr": "return_address",
                "param_1": "input",
                "pcVar4": "function_ptr",
                "piVar1": "data_ptr",
                "puVar5": "data_ptr_ptr",
                "uVar2": "result",
                "unaff_r4": "unused_reg4",
                "unaff_r5": "val2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005608": {
            "additional_data": {
                "FUN_08005608": {
                    "apply_application_settings": 1,
                    "initialize_and_check_error": 1,
                    "initialize_and_update": 3,
                    "initialize_and_update_application": 1,
                    "initialize_and_update_data": 3,
                    "initialize_and_update_value": 1,
                    "initialize_and_update_values": 4,
                    "initialize_application": 1,
                    "update_application": 2,
                    "update_application_and_check_error": 1,
                    "update_application_data": 2,
                    "update_application_error": 1,
                    "update_application_info": 1,
                    "update_application_parameter": 1,
                    "update_application_state": 2,
                    "update_application_value": 1,
                    "update_data": 2,
                    "update_data_value": 1,
                    "update_value": 1,
                    "update_variable": 1
                },
                "bVar3": {
                    "is_app_successful": 1,
                    "is_error": 5,
                    "is_initialized": 7,
                    "is_success": 9,
                    "is_successful": 2,
                    "is_valid": 6,
                    "success": 1
                },
                "iVar1": {
                    "app_result": 1,
                    "error": 2,
                    "error_check": 1,
                    "error_check_result": 3,
                    "error_code": 4,
                    "error_status": 1,
                    "error_value": 1,
                    "init_result": 5,
                    "initialization_result": 1,
                    "initialized_value": 2,
                    "result": 9,
                    "return_value": 1
                },
                "param_1": {
                    "app_data": 1,
                    "app_id": 1,
                    "app_info": 1,
                    "app_param": 2,
                    "application": 4,
                    "application_config": 2,
                    "application_data": 5,
                    "application_handle": 1,
                    "application_id": 1,
                    "application_param": 2,
                    "application_state": 1,
                    "initial_value": 1,
                    "param": 1,
                    "param1": 5,
                    "param_1": 1,
                    "param_a": 1,
                    "settings": 1
                },
                "param_2": {
                    "binary_data": 4,
                    "data": 6,
                    "data_address": 1,
                    "data_param": 4,
                    "data_pointer": 2,
                    "data_ptr": 4,
                    "param2": 5,
                    "param_2": 2,
                    "param_b": 1,
                    "parameter_data": 1,
                    "state_data": 1
                },
                "uVar2": {
                    "calculated_value": 1,
                    "new_value": 3,
                    "updated_value": 27
                }
            },
            "called": [
                "FUN_0800573c"
            ],
            "calling": [],
            "code": "\nvoid initialize_and_update_values_08005608(undefined4 application_data,int data)\n\n{\n  int result;\n  uint updated_value;\n  bool is_success;\n  \n  result = initialize_application_and_check_error_0800573c(application_data,(int)*(short *)(data + 0xe));\n  is_success = -1 < result;\n  if (is_success) {\n    updated_value = *(int *)(data + 0x54) + result;\n  }\n  else {\n    updated_value = *(ushort *)(data + 0xc) & 0xffffefff;\n  }\n  if (is_success) {\n    *(uint *)(data + 0x54) = updated_value;\n  }\n  if (!is_success) {\n    *(short *)(data + 0xc) = (short)updated_value;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_and_update_values_08005608",
            "entrypoint": "0x08005608",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005608": "initialize_and_update_values_08005608",
                "bVar3": "is_success",
                "iVar1": "result",
                "param_1": "application_data",
                "param_2": "data",
                "uVar2": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800562a": {
            "additional_data": {
                "DAT_20000674": {
                    "error_code": 2
                },
                "FUN_0800562a": {
                    "handle_application": 1,
                    "initialize_and_check": 1,
                    "initialize_and_check_application": 3,
                    "initialize_and_process_data": 2,
                    "process_and_validate_data": 7,
                    "process_application": 1,
                    "process_application_data": 1,
                    "process_data": 1,
                    "process_data_and_check": 1,
                    "process_data_and_validate": 4,
                    "validate_and_process_data": 4,
                    "validate_and_update_data": 4,
                    "validate_data": 1
                },
                "iVar1": {
                    "process_result": 2,
                    "result": 14,
                    "result_code": 1,
                    "return_value": 1,
                    "validation_result": 10
                },
                "in_lr": {
                    "in_link_register": 2,
                    "link_register": 3,
                    "link_return": 1,
                    "temp3": 3,
                    "unnamed_var_3": 1,
                    "unused_param3": 1,
                    "unused_param_3": 1,
                    "unused_var3": 5,
                    "var3": 1,
                    "var_3": 1
                },
                "initialize_and_check_application_08005718": {
                    "initialize_and_check_application": 2,
                    "initialize_application": 2
                },
                "param_1": {
                    "data": 1,
                    "data_array": 1,
                    "output": 9,
                    "output_array": 3,
                    "output_buffer": 1,
                    "output_data": 2,
                    "output_ptr": 2,
                    "output_values": 1,
                    "result": 9,
                    "result_buffer": 1,
                    "result_ptr": 1
                },
                "param_2": {
                    "data": 7,
                    "data_address": 1,
                    "data_buffer": 2,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "input": 6,
                    "input_array": 2,
                    "input_buffer": 2,
                    "input_data": 4,
                    "input_data_ptr": 1,
                    "input_ptr": 1,
                    "input_values": 1
                },
                "param_3": {
                    "arg1": 1,
                    "config1": 1,
                    "input1": 1,
                    "param3": 5,
                    "param_3": 8,
                    "param_a": 12,
                    "value1": 3
                },
                "param_4": {
                    "arg2": 1,
                    "config2": 1,
                    "input2": 1,
                    "param4": 5,
                    "param_4": 7,
                    "param_b": 12,
                    "size": 1,
                    "value2": 3
                },
                "process_data_and_validate_080040ec": {
                    "process_and_validate_data": 1,
                    "process_data_and_validate": 2,
                    "validate_data": 1
                },
                "unaff_r4": {
                    "additional_config1": 1,
                    "param4_unaff": 1,
                    "temp1": 3,
                    "unaff_var1": 1,
                    "unaffected_r4": 1,
                    "unaffected_register4": 1,
                    "unnamed_var_1": 1,
                    "unused_param": 1,
                    "unused_param_1": 1,
                    "unused_var1": 5,
                    "unused_variable1": 1,
                    "var1": 1,
                    "var_1": 1,
                    "variable_a": 1
                },
                "unaff_r5": {
                    "additional_config2": 1,
                    "param5_unaff": 1,
                    "temp2": 3,
                    "unaff_var2": 1,
                    "unaffected_r5": 1,
                    "unaffected_register5": 1,
                    "unnamed_var_2": 1,
                    "unused_param2": 1,
                    "unused_param_2": 1,
                    "unused_var2": 5,
                    "unused_variable2": 1,
                    "var2": 1,
                    "var_2": 1,
                    "variable_b": 1
                }
            },
            "called": [
                "FUN_08005718",
                "FUN_080040ec"
            ],
            "calling": [],
            "code": "\nvoid validate_and_process_data_0800562a(int *output,int data,undefined4 param_a,undefined4 param_b)\n\n{\n  int result;\n  undefined4 unused_var1;\n  undefined4 unused_var2;\n  undefined4 unused_var3;\n  \n  if ((int)((uint)*(ushort *)(data + 0xc) << 0x17) < 0) {\n    initialize_and_check_application(output,(int)*(short *)(data + 0xe),0,2);\n  }\n  *(ushort *)(data + 0xc) = *(ushort *)(data + 0xc) & 0xefff;\n  DAT_20000674 = 0;\n  result = process_data_and_validate((int)*(short *)(data + 0xe),param_a,param_b,param_b,param_b,unused_var1,\n                       unused_var2,unused_var3);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *output = DAT_20000674;\n  }\n  return;\n}\n\n",
            "current_name": "validate_and_process_data_0800562a",
            "entrypoint": "0x0800562a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800562a": "validate_and_process_data_0800562a",
                "iVar1": "result",
                "in_lr": "unused_var3",
                "initialize_and_check_application_08005718": "initialize_and_check_application",
                "param_1": "output",
                "param_2": "data",
                "param_3": "param_a",
                "param_4": "param_b",
                "process_data_and_validate_080040ec": "process_data_and_validate",
                "unaff_r4": "unused_var1",
                "unaff_r5": "unused_var2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005662": {
            "additional_data": {
                "FUN_08005662": {
                    "check_and_update_application": 1,
                    "initialize_and_check": 1,
                    "initialize_and_check_application": 2,
                    "initialize_and_update_application": 15,
                    "initialize_and_update_application_state": 1,
                    "initialize_and_update_flags": 4,
                    "initialize_and_update_status": 3,
                    "initialize_application": 2,
                    "initialize_application_check_errors": 1,
                    "process_application": 1
                },
                "bVar3": {
                    "is_error": 29,
                    "is_init_failure": 1,
                    "is_invalid": 1
                },
                "iVar1": {
                    "app_result": 1,
                    "app_status": 2,
                    "application_result": 4,
                    "application_status": 1,
                    "init_result": 2,
                    "initialize_result": 1,
                    "initialized_app": 1,
                    "initialized_application": 1,
                    "initialized_check_result": 1,
                    "initialized_value": 1,
                    "result": 16
                },
                "param_1": {
                    "app_info": 1,
                    "application": 3,
                    "application_config": 1,
                    "application_context": 1,
                    "application_data": 6,
                    "application_handle": 1,
                    "application_param": 2,
                    "application_ptr": 1,
                    "application_state": 1,
                    "argument_1": 1,
                    "config": 1,
                    "param": 5,
                    "param1": 3,
                    "param_1": 4
                },
                "param_2": {
                    "arg": 2,
                    "argument_2": 1,
                    "binary_data": 1,
                    "context": 2,
                    "context_param": 1,
                    "data": 7,
                    "data_block": 1,
                    "data_buffer": 1,
                    "data_param": 1,
                    "data_ptr": 2,
                    "function_context": 1,
                    "function_data": 4,
                    "input": 1,
                    "param2": 3,
                    "param_2": 3
                },
                "uVar2": {
                    "data_value": 1,
                    "flags": 3,
                    "modified_flags": 2,
                    "modified_value": 6,
                    "new_data": 1,
                    "new_status": 1,
                    "updated_flags": 6,
                    "updated_value": 11
                }
            },
            "called": [
                "FUN_08005718"
            ],
            "calling": [],
            "code": "\nvoid initialize_and_update_application_state_08005662(undefined4 application_data,int data)\n\n{\n  int result;\n  ushort updated_value;\n  bool is_error;\n  \n  result = initialize_and_check_application_08005718(application_data,(int)*(short *)(data + 0xe));\n  is_error = result == -1;\n  if (is_error) {\n    updated_value = *(ushort *)(data + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(data + 0x54) = result;\n    updated_value = *(ushort *)(data + 0xc) | 0x1000;\n  }\n  if (is_error) {\n    *(ushort *)(data + 0xc) = updated_value;\n  }\n  if (!is_error) {\n    *(ushort *)(data + 0xc) = updated_value;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_and_update_application_state_08005662",
            "entrypoint": "0x08005662",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005662": "initialize_and_update_application_state_08005662",
                "bVar3": "is_error",
                "iVar1": "result",
                "param_1": "application_data",
                "param_2": "data",
                "uVar2": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080056d4": {
            "additional_data": {
                "FUN_080056d4": {
                    "configure_memory_page_size": 1,
                    "initialize_memory": 12,
                    "initialize_memory_page": 6,
                    "initialize_memory_page_size": 2,
                    "set_memory_page": 1,
                    "set_memory_page_size": 5,
                    "set_memory_page_size_safe": 1,
                    "set_page_size": 3
                },
                "iVar1": {
                    "error_code": 1,
                    "memory_page_size_result": 1,
                    "page_set_result": 1,
                    "page_size": 5,
                    "page_size_result": 1,
                    "result": 11,
                    "result_check": 2,
                    "result_code": 1,
                    "result_set": 1,
                    "result_set_memory": 1,
                    "result_value": 1,
                    "return_value": 1,
                    "set_result": 1,
                    "status": 2
                },
                "param_1": {
                    "memory_pointer": 1,
                    "memory_ptr": 1,
                    "output": 2,
                    "output_pointer": 6,
                    "output_ptr": 1,
                    "output_value": 3,
                    "result": 16,
                    "result_ptr": 1
                },
                "param_2": {
                    "arg1": 3,
                    "input1": 1,
                    "input_param1": 1,
                    "input_value1": 1,
                    "input_value_1": 1,
                    "memory_size": 1,
                    "page": 1,
                    "page_number": 1,
                    "page_size": 5,
                    "param1": 1,
                    "param_a": 1,
                    "size": 10,
                    "size_1": 1,
                    "size_param": 1,
                    "size_param_1": 1,
                    "value1": 1
                },
                "param_3": {
                    "align": 1,
                    "arg1": 2,
                    "arg2": 3,
                    "count": 1,
                    "input2": 1,
                    "input_param2": 1,
                    "input_value2": 1,
                    "input_value_2": 1,
                    "page_count": 2,
                    "page_offset": 1,
                    "page_size": 2,
                    "param": 1,
                    "param1": 2,
                    "param2": 1,
                    "param_3": 4,
                    "param_b": 1,
                    "size": 1,
                    "size_2": 1,
                    "size_param_2": 1,
                    "start": 1,
                    "start_address": 1,
                    "value2": 1
                },
                "param_4": {
                    "additional_params": 1,
                    "arg2": 2,
                    "arg3": 3,
                    "end": 1,
                    "flag": 2,
                    "flags": 4,
                    "input3": 1,
                    "input_param3": 1,
                    "input_value3": 1,
                    "input_value_3": 1,
                    "option": 1,
                    "page_size": 1,
                    "param2": 2,
                    "param3": 1,
                    "param_4": 4,
                    "param_c": 1,
                    "size_param_3": 1,
                    "unused": 1,
                    "value": 1,
                    "value3": 1
                },
                "set_memory_page_size_080040d6": {
                    "set_memory_page_size": 2
                }
            },
            "called": [
                "FUN_080040d6"
            ],
            "calling": [
                "FUN_080054b4"
            ],
            "code": "\nvoid initialize_memory_page_size_080056d4(int *result,undefined4 size,undefined4 param_3,undefined4 flags)\n\n{\n  int result;\n  \n  DAT_20000674 = 0;\n  result = set_memory_page_size(size,param_3,param_3,0,flags);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_memory_page_size_080056d4",
            "entrypoint": "0x080056d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080056d4": "initialize_memory_page_size_080056d4",
                "iVar1": "result",
                "param_1": "result",
                "param_2": "size",
                "param_4": "flags",
                "set_memory_page_size_080040d6": "set_memory_page_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080056f8": {
            "additional_data": {
                "FUN_080056f8": {
                    "initialize_and_check_error": 1,
                    "initialize_and_check_program": 17,
                    "initialize_program": 13
                },
                "iVar1": {
                    "init_result": 13,
                    "initialization_result": 2,
                    "initialize_result": 1,
                    "program_init_result": 1,
                    "result": 5,
                    "result_variable": 1,
                    "return_value": 2,
                    "status": 5
                },
                "param_1": {
                    "output": 2,
                    "output_param": 1,
                    "output_ptr": 1,
                    "output_result": 1,
                    "output_value": 4,
                    "result": 14,
                    "result_code": 1,
                    "result_pointer": 3,
                    "result_ptr": 4
                },
                "param_2": {
                    "argument": 2,
                    "init_value": 2,
                    "initial_value": 1,
                    "input": 4,
                    "input_param": 5,
                    "input_parameter": 2,
                    "input_value": 11,
                    "input_var": 1,
                    "param": 1,
                    "parameter": 1,
                    "program_parameter": 1
                }
            },
            "called": [
                "FUN_080040e0"
            ],
            "calling": [
                "FUN_080054fc"
            ],
            "code": "\nvoid initialize_and_check_program_080056f8(int *result,undefined4 input_value)\n\n{\n  int init_result;\n  \n  DAT_20000674 = 0;\n  init_result = initialize_program_080040e0(input_value);\n  if ((init_result == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_and_check_program_080056f8",
            "entrypoint": "0x080056f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080056f8": "initialize_and_check_program_080056f8",
                "iVar1": "init_result",
                "param_1": "result",
                "param_2": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005718": {
            "additional_data": {
                "DAT_20000674": {
                    "error_code": 1
                },
                "FUN_08005718": {
                    "initialize_and_assign_error": 1,
                    "initialize_and_check_app": 1,
                    "initialize_and_check_application": 9,
                    "initialize_and_check_error": 4,
                    "initialize_and_check_errors": 1,
                    "initialize_and_check_result": 1,
                    "initialize_and_handle_errors": 1,
                    "initialize_app_and_check_error": 1,
                    "initialize_application": 12
                },
                "iVar1": {
                    "error_code": 1,
                    "init_result": 17,
                    "initialization_result": 1,
                    "initialize_result": 1,
                    "result": 4,
                    "result_code": 1,
                    "result_initialization": 1,
                    "return_value": 2
                },
                "initialize_application_080040e4": {
                    "initialize_application": 1
                },
                "param_1": {
                    "error_code": 2,
                    "output": 2,
                    "output_error": 2,
                    "output_param": 2,
                    "output_result": 2,
                    "output_value": 4,
                    "output_variable": 1,
                    "result": 12,
                    "result_code": 1,
                    "result_ptr": 3
                },
                "param_2": {
                    "arg1": 14,
                    "arg2": 1,
                    "arg_1": 3,
                    "input_1": 1,
                    "input_param1": 1,
                    "input_param2": 1,
                    "input_param_1": 2,
                    "input_value_1": 1,
                    "param1": 1,
                    "param2": 2,
                    "param_2": 1,
                    "parameter_2": 1
                },
                "param_3": {
                    "arg2": 14,
                    "arg3": 1,
                    "arg_2": 3,
                    "input_2": 1,
                    "input_param2": 1,
                    "input_param3": 1,
                    "input_param_2": 2,
                    "input_value_2": 1,
                    "param2": 1,
                    "param3": 2,
                    "param_3": 1,
                    "parameter_3": 1
                },
                "param_4": {
                    "arg3": 14,
                    "arg4": 1,
                    "arg_3": 3,
                    "input_3": 1,
                    "input_param3": 1,
                    "input_param4": 1,
                    "input_param_3": 2,
                    "input_value_3": 1,
                    "param3": 1,
                    "param4": 2,
                    "param_4": 1,
                    "parameter_4": 1
                }
            },
            "called": [
                "FUN_080040e4"
            ],
            "calling": [
                "FUN_0800562a",
                "FUN_08005662"
            ],
            "code": "\nvoid initialize_and_check_application_08005718(int *result,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  int init_result;\n  \n  DAT_20000674 = 0;\n  init_result = initialize_application(arg1,arg2,arg3,arg3,arg3);\n  if ((init_result == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_and_check_application_08005718",
            "entrypoint": "0x08005718",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005718": "initialize_and_check_application_08005718",
                "iVar1": "init_result",
                "initialize_application_080040e4": "initialize_application",
                "param_1": "result",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800573c": {
            "additional_data": {
                "FUN_0800573c": {
                    "initialize_and_check": 1,
                    "initialize_and_check_app": 2,
                    "initialize_and_check_application": 8,
                    "initialize_and_check_errors": 1,
                    "initialize_and_set_result": 1,
                    "initialize_app": 2,
                    "initialize_application": 14,
                    "initialize_application_and_check_error": 2
                },
                "iVar1": {
                    "error_value": 1,
                    "init_result": 15,
                    "initialization_result": 3,
                    "initialize_result": 1,
                    "result": 1,
                    "return_value": 2,
                    "status": 2
                },
                "initialize_application_080040e8": {
                    "initialize_app": 1,
                    "initialize_application": 1
                },
                "param_1": {
                    "error_code": 2,
                    "output": 3,
                    "output_param": 1,
                    "output_ptr": 1,
                    "output_result": 1,
                    "output_value": 1,
                    "result": 19,
                    "result_ptr": 2,
                    "return_value": 1
                },
                "param_2": {
                    "arg1": 25,
                    "arg2": 1,
                    "config_1": 2,
                    "input_1": 2,
                    "param2": 1
                },
                "param_3": {
                    "arg2": 25,
                    "arg3": 1,
                    "config_2": 2,
                    "input_2": 2,
                    "param3": 1
                },
                "param_4": {
                    "arg3": 25,
                    "arg4": 1,
                    "config_3": 2,
                    "input_3": 2,
                    "param4": 1
                }
            },
            "called": [
                "FUN_080040e8"
            ],
            "calling": [
                "FUN_08005608"
            ],
            "code": "\nvoid initialize_application_and_check_error_0800573c(int *result,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  int init_result;\n  \n  DAT_20000674 = 0;\n  init_result = initialize_application(arg1,arg2,arg3,arg3,arg3);\n  if ((init_result == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_application_and_check_error_0800573c",
            "entrypoint": "0x0800573c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800573c": "initialize_application_and_check_error_0800573c",
                "iVar1": "init_result",
                "initialize_application_080040e8": "initialize_application",
                "param_1": "result",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005760": {
            "additional_data": {
                "DAT_200005d0": {
                    "data12": 1,
                    "data_12": 1,
                    "data_flag_12": 1,
                    "var12": 1
                },
                "DAT_200005d4": {
                    "data11": 1,
                    "data_11": 1,
                    "data_flag_11": 1,
                    "var11": 1
                },
                "DAT_200005d8": {
                    "data10": 1,
                    "data_10": 1,
                    "data_flag_10": 1,
                    "var10": 1
                },
                "DAT_200005dc": {
                    "data9": 1,
                    "data_9": 1,
                    "data_flag_9": 1,
                    "var9": 1
                },
                "DAT_200005e0": {
                    "data8": 1,
                    "data_8": 1,
                    "data_flag_8": 1,
                    "var8": 1
                },
                "DAT_200005e4": {
                    "data7": 1,
                    "data_7": 1,
                    "data_flag_7": 1,
                    "var7": 1
                },
                "DAT_200005e8": {
                    "data6": 1,
                    "data_6": 1,
                    "data_flag_6": 1,
                    "var6": 1
                },
                "DAT_200005ec": {
                    "data5": 1,
                    "data_5": 1,
                    "data_flag_5": 1,
                    "var5": 1
                },
                "DAT_200005f0": {
                    "data4": 1,
                    "data_4": 1,
                    "data_flag_4": 1,
                    "var4": 1
                },
                "DAT_200005f4": {
                    "data3": 1,
                    "data_3": 1,
                    "data_flag_3": 1,
                    "var3": 1
                },
                "DAT_200005f8": {
                    "data2": 1,
                    "data_2": 1,
                    "data_flag_2": 1,
                    "var2": 1
                },
                "DAT_200005fc": {
                    "data1": 1,
                    "data_1": 1,
                    "data_flag_1": 1,
                    "var1": 1
                },
                "FUNK_08005760": {
                    "update_data": 1
                },
                "FUN_08005760": {
                    "initialize_data": 1,
                    "process_and_update_data": 6,
                    "process_data": 2,
                    "process_data_and_call_jumptable": 1,
                    "process_data_and_update": 1,
                    "update_and_process_data": 1,
                    "update_data": 13,
                    "update_data_and_process": 4,
                    "update_data_with_flags": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "jump_table": 14,
                    "jumptable": 7,
                    "next_function": 1,
                    "process_function": 1,
                    "update_data": 1,
                    "update_data_function": 1,
                    "update_data_jumptable": 2,
                    "update_data_with_flags": 1
                },
                "process_and_update_data": {
                    "process_and_update_data": 1
                },
                "process_and_update_data_080051ac": {
                    "process_and_modify_data": 1,
                    "process_and_update_data": 13,
                    "process_data": 2,
                    "process_data_and_update": 1
                }
            },
            "called": [
                "FUN_080051ac"
            ],
            "calling": [
                "FUN_080047c0"
            ],
            "code": "\nvoid process_data_and_update_08005760(void)\n\n{\n  code *jump_table;\n  \n  jump_table = process_data_and_update_08005760;\n  process_and_update_data();\n  if (-1 < DAT_200005fc << 0x1f) {\n    DAT_200005fc = 1;\n  }\n  if (-1 < DAT_200005f8 << 0x1f) {\n    DAT_200005f8 = 1;\n  }\n  if (-1 < DAT_200005f4 << 0x1f) {\n    DAT_200005f4 = 1;\n  }\n  if (-1 < DAT_200005f0 << 0x1f) {\n    DAT_200005f0 = 1;\n  }\n  if (-1 < DAT_200005ec << 0x1f) {\n    DAT_200005ec = 1;\n  }\n  if (-1 < DAT_200005e8 << 0x1f) {\n    DAT_200005e8 = 1;\n  }\n  if (-1 < DAT_200005e4 << 0x1f) {\n    DAT_200005e4 = 1;\n  }\n  if (-1 < DAT_200005e0 << 0x1f) {\n    DAT_200005e0 = 1;\n  }\n  if (-1 < DAT_200005dc << 0x1f) {\n    DAT_200005dc = 1;\n  }\n  if (-1 < DAT_200005d8 << 0x1f) {\n    DAT_200005d8 = 1;\n  }\n  if (-1 < DAT_200005d4 << 0x1f) {\n    DAT_200005d4 = 1;\n  }\n  if (-1 < DAT_200005d0 << 0x1f) {\n    DAT_200005d0 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x080057f8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "process_data_and_update_08005760",
            "entrypoint": "0x08005760",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005760": "process_data_and_update_08005760",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "process_and_update_data_080051ac": "process_and_update_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080059f8": {
            "called": [],
            "calling": [
                "FUN_080001ac",
                "FUN_08004884"
            ],
            "code": "\nvoid FUNC_080059f8(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080059f8",
            "entrypoint": "0x080059f8",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080059f8": "FUNC_080059f8"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005a04": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_08005a04(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005a04",
            "entrypoint": "0x08005a04",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005a04": "FUNC_08005a04"
            },
            "skipped": true,
            "tags": []
        },
        "entry": {
            "called": [
                "FUN_08004884",
                "FUN_080035bc",
                "FUN_08004658"
            ],
            "calling": [],
            "code": "\n/* WARNING: This function may have set the stack pointer */\n\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_20000104; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8006034);\n  }\n  for (puVar2 = &DAT_20000104; puVar2 < &DAT_20000678; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  initialize_system_080035bc();\n  execute_all_functions_08004884();\n  UNRECOVERED_JUMPTABLE = (code *)0x8000d72;\n  run_serial_data_processing_08004658();\n                    /* WARNING: Could not recover jumptable at 0x08000d72. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "current_name": "entry",
            "entrypoint": "0x08000d3c",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "thunk_FUN_0800410c": {
            "additional_data": {
                "1": {
                    "result": 1
                },
                "DAT_": {
                    "": 1
                },
                "FUNK_0800410c": {
                    "calculate_result": 1
                },
                "F_UNK_0800410c": {
                    "get_value": 1
                },
                "PTR_": {
                    "": 1
                },
                "new_variable_name_1": {
                    "result": 1
                },
                "return": {
                    "result": 1,
                    "status": 1
                },
                "thunk_FUN_0800410c": {
                    "check_result": 1,
                    "get_default_value": 1,
                    "get_one": 2,
                    "get_result": 1,
                    "get_return_val": 1,
                    "get_return_value": 7,
                    "get_status": 7,
                    "get_status_code": 1,
                    "get_true_value": 3,
                    "initialize": 2,
                    "initialize_flag": 1,
                    "initialize_status": 1,
                    "is_returning_one": 1
                },
                "undefined4": {
                    "int": 5,
                    "status": 6,
                    "uint32_t": 1,
                    "void": 1
                }
            },
            "called": [
                "FUN_0800410c"
            ],
            "calling": [
                "FUN_080055d0"
            ],
            "code": "\nstatus get_status_code_thunk_0800410c(void)\n\n{\n  result 1;\n}\n\n",
            "current_name": "get_status_code_thunk_0800410c",
            "entrypoint": "0x08005604",
            "imported": false,
            "improved": true,
            "renaming": {
                "return": "result",
                "thunk_FUN_0800410c": "get_status_code_thunk_0800410c",
                "undefined4": "status"
            },
            "skipped": false,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_080001ac",
            "FUN_08000230",
            "FUN_08000300",
            "FUN_080005e0",
            "FUN_0800066c",
            "FUN_08000728",
            "FUN_080008cc",
            "FUN_08000e18",
            "FUN_08000e30",
            "FUN_08000e3c",
            "FUN_08000e60",
            "FUN_08000ec4",
            "FUN_08000ee0",
            "FUN_08000f0c",
            "FUN_08000f2c",
            "FUN_08000f4e",
            "FUN_08000f72",
            "FUN_08000f8c",
            "FUN_08000fb4",
            "FUN_08001198",
            "FUN_080011c0",
            "FUN_0800124a",
            "FUN_08001256",
            "FUN_08001420",
            "FUN_08001440",
            "FUN_08001460",
            "FUN_080014ec",
            "FUN_08001578",
            "FUN_080015bc",
            "FUN_0800160e",
            "FUN_0800171a",
            "FUN_08001864",
            "FUN_08001904",
            "FUN_080019a0",
            "FUN_080025e0",
            "FUN_08002848",
            "FUN_080028d4",
            "FUN_08002940",
            "FUN_0800295c",
            "FUN_08002eb2",
            "FUN_08002efa",
            "FUN_0800312c",
            "FUN_08003138",
            "FUN_0800314e",
            "FUN_0800316c",
            "FUN_0800318c",
            "FUN_080031fc",
            "FUN_080033c8",
            "FUN_080034da",
            "FUN_08003506",
            "FUN_0800352e",
            "FUN_0800355e",
            "FUN_08003582",
            "FUN_08003594",
            "FUN_080035bc",
            "FUN_080035fc",
            "FUN_08003750",
            "FUN_0800387c",
            "FUN_08003f00",
            "FUN_08004094",
            "FUN_080040d0",
            "FUN_080040d6",
            "FUN_080040e0",
            "FUN_080040e4",
            "FUN_080040e8",
            "FUN_080040f8",
            "FUN_080040fc",
            "FUN_0800410c",
            "FUN_08004240",
            "FUN_08004364",
            "FUN_08004444",
            "FUN_08004460",
            "FUN_08004544",
            "FUN_08004640",
            "FUN_08004678",
            "FUN_08004844",
            "FUN_08004884",
            "FUN_080048cc",
            "FUN_080048dc",
            "FUN_08004cb0",
            "thunk_FUN_0800410c"
        ],
        [
            "FUN_080002d0",
            "FUN_080005e4",
            "FUN_08000682",
            "FUN_080007f0",
            "FUN_08000d98",
            "FUN_08000f56",
            "FUN_08001f9c",
            "FUN_0800201c",
            "FUN_080025ec",
            "FUN_0800260c",
            "FUN_0800262c",
            "FUN_08002864",
            "FUN_080028f0",
            "FUN_08002d0c",
            "FUN_0800340c",
            "FUN_0800346c",
            "FUN_08003476",
            "FUN_08003486",
            "FUN_080034b6",
            "FUN_080034f4",
            "FUN_0800351e",
            "FUN_0800354a",
            "FUN_08003754",
            "FUN_0800376e",
            "FUN_08003880",
            "FUN_080038d0",
            "FUN_08003900",
            "FUN_08003dd0",
            "FUN_08003df4",
            "FUN_08003eac",
            "FUN_08003f24",
            "FUN_08003f48",
            "FUN_08004560",
            "FUN_080047fe",
            "FUN_08004d9c",
            "FUN_0800500c",
            "FUN_0800532c",
            "FUN_080055d0",
            "FUN_080056d4",
            "FUN_080056f8",
            "FUN_08005718",
            "FUN_0800573c"
        ],
        [
            "FUN_08000690",
            "FUN_08000de4",
            "FUN_0800165a",
            "FUN_08001684",
            "FUN_08001ab0",
            "FUN_080023b4",
            "FUN_0800268e",
            "FUN_080026ce",
            "FUN_080029c8",
            "FUN_08002dd0",
            "FUN_08002f4c",
            "FUN_08002f66",
            "FUN_08003380",
            "FUN_0800339c",
            "FUN_08003e18",
            "FUN_08003e54",
            "FUN_080041bc",
            "FUN_08004204",
            "FUN_080042e8",
            "FUN_0800447c",
            "FUN_080046b4",
            "FUN_08004978",
            "FUN_080051ac",
            "FUN_080054b4",
            "FUN_08005608",
            "FUN_08005662"
        ],
        [
            "FUN_080006b4",
            "FUN_0800076c",
            "FUN_08001bfc",
            "FUN_08001e68",
            "FUN_08002488",
            "FUN_08002d72",
            "FUN_08002ffc",
            "FUN_080033d8",
            "FUN_08003414",
            "FUN_0800377c",
            "FUN_080042ac",
            "FUN_080044d8",
            "FUN_08005374",
            "FUN_080054fc"
        ],
        [
            "FUN_080008e2",
            "FUN_08000998",
            "FUN_08000a00",
            "FUN_08000a4e",
            "FUN_08000a7a",
            "FUN_08000b04",
            "FUN_08000c8c",
            "FUN_08001d00",
            "FUN_08004110"
        ],
        [
            "FUN_08000b54",
            "FUN_080034ce"
        ],
        [
            "FUN_08000c64",
            "FUN_08000d8e"
        ],
        [
            "FUN_08004648"
        ],
        [
            "FUN_08005760"
        ],
        [
            "FUN_080047c0"
        ],
        [
            "FUN_080047d0"
        ],
        [
            "FUN_080011a4"
        ],
        [
            "FUN_080050d0",
            "FUN_080052cc",
            "FUN_08005400"
        ],
        [
            "FUN_080053a0"
        ],
        [
            "FUN_08004a34"
        ],
        [
            "FUN_08004a60"
        ],
        [
            "FUN_08004a84"
        ],
        [
            "FUN_08004860",
            "FUN_08004fdc"
        ],
        [
            "FUN_08003978",
            "FUN_08004808"
        ],
        [
            "FUN_08003cc8",
            "FUN_08004388"
        ],
        [
            "FUN_08000600",
            "FUN_08003d18"
        ],
        [
            "FUN_08000c4c",
            "FUN_080040ec"
        ],
        [
            "FUN_08004658",
            "FUN_0800562a"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 677829
}