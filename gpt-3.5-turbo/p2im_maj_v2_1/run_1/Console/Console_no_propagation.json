{
    "functions": {
        "FUN_00000410": {
            "additional_data": {
                "FUN_00000410": {
                    "call_sub_function_with_no_parameters": 1,
                    "execute_initial_function": 1,
                    "execute_initial_setup": 1,
                    "execute_initialization": 5,
                    "initialize": 2,
                    "initialize_application": 4,
                    "initialize_data": 1,
                    "initialize_program": 1,
                    "initialize_system": 14
                },
                "FUN_00000df4": {
                    "configure_device": 1,
                    "do_something": 2,
                    "execute_initialization": 5,
                    "execute_initialization_steps": 1,
                    "execute_startup_operations": 1,
                    "execute_subfunction": 1,
                    "execute_task": 1,
                    "initialize_components": 1,
                    "initialize_data": 2,
                    "initialize_system": 1,
                    "perform_action": 1,
                    "perform_additional_tasks": 1,
                    "perform_initial_setup": 2,
                    "perform_initialization": 8,
                    "perform_sub_operation": 1,
                    "sub_function": 1
                }
            },
            "called": [
                "FUN_00000df4"
            ],
            "calling": [
                "FUN_0000459c"
            ],
            "code": "\nvoid initialize_system_00000410(void)\n\n{\n  FUN_00000df4();\n  return;\n}\n\n",
            "current_name": "initialize_system_00000410",
            "entrypoint": "0x00000410",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000410": "initialize_system_00000410"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000428": {
            "additional_data": {
                "Elf32_Rel_ARRAY_1fff0200": {
                    "array_data": 1,
                    "elf32_rel_array": 1
                },
                "FUN_00000428": {
                    "adjust_offset": 1,
                    "calculate_adjusted_offset": 1,
                    "calculate_offset": 1,
                    "calculate_relative_offset": 1,
                    "check_and_update_offset": 2,
                    "check_offset_and_update": 1,
                    "extract_and_offset": 1,
                    "extracted_function": 1,
                    "perform_relocation": 1,
                    "process_relocation": 2,
                    "process_relocation_entry": 1,
                    "relocate_symbol": 1,
                    "reverse_and_update_offset": 1,
                    "update_offset": 1,
                    "update_offset_and_return": 1,
                    "update_relocation_offset": 2,
                    "validate_and_update_offset": 2,
                    "validate_offset": 2
                },
                "FUN_00000cd0": {
                    "get_error_code": 1,
                    "get_initial_value": 2
                },
                "FUN_00000d0c": {
                    "cleanup": 1,
                    "cleanup_resources": 1,
                    "release_error_code": 1
                },
                "F_Undefined4_fun": {
                    "get_initial_value": 1
                },
                "local_c": {
                    "adjusted_offset": 2,
                    "current_offset": 2,
                    "modified_offset": 2,
                    "new_offset": 7,
                    "offset": 2,
                    "old_offset": 1,
                    "relocated_offset": 1,
                    "relocated_value": 1,
                    "result": 4,
                    "result_offset": 2,
                    "return_value": 4,
                    "updated_offset": 3
                },
                "param_1": {
                    "error_code_ptr": 1,
                    "output": 3,
                    "output_buffer": 4,
                    "output_error_code": 1,
                    "output_param": 1,
                    "output_pointer": 3,
                    "output_ptr": 1,
                    "param": 1,
                    "param_array": 1,
                    "result": 5,
                    "result_param": 1,
                    "result_pointer": 3,
                    "result_ptr": 5
                },
                "param_2": {
                    "base_address": 1,
                    "current_offset": 1,
                    "input": 2,
                    "input_offset": 9,
                    "input_param": 1,
                    "input_value": 7,
                    "new_offset": 1,
                    "offset": 8,
                    "original_offset": 1
                },
                "uVar1": {
                    "context": 1,
                    "function_result": 3,
                    "helper_variable": 1,
                    "init_value": 1,
                    "random_value": 1,
                    "result": 9,
                    "result_of_fun_00000cd0": 1,
                    "result_var": 1,
                    "return_value": 9
                }
            },
            "called": [
                "FUN_00000d0c",
                "FUN_00000cd0"
            ],
            "calling": [
                "FUN_00004bd0"
            ],
            "code": "\ndword validate_and_update_offset_00000428(undefined4 *result_ptr,int input_offset)\n\n{\n  undefined4 return_value;\n  dword new_offset;\n  \n  return_value = FUN_00000cd0();\n  new_offset = array_data[0].r_offset;\n  if ((input_offset + array_data[0].r_offset < 0x20030001) &&\n     (0x1fff0def < input_offset + array_data[0].r_offset)) {\n    array_data[0].r_offset = input_offset + array_data[0].r_offset;\n  }\n  else {\n    *result_ptr = 0xc;\n    new_offset = 0xffffffff;\n  }\n  FUN_00000d0c(return_value);\n  return new_offset;\n}\n\n",
            "current_name": "validate_and_update_offset_00000428",
            "entrypoint": "0x00000428",
            "imported": false,
            "improved": true,
            "renaming": {
                "Elf32_Rel_ARRAY_1fff0200": "array_data",
                "FUN_00000428": "validate_and_update_offset_00000428",
                "local_c": "new_offset",
                "param_1": "result_ptr",
                "param_2": "input_offset",
                "uVar1": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000490": {
            "additional_data": {
                "FUN_00000490": {
                    "calculate_result": 2,
                    "extract_and_return_result": 1,
                    "extract_data": 1,
                    "extracted_function": 3,
                    "process_data": 4,
                    "process_function": 1,
                    "reverse_binary": 1
                },
                "FUN_00000e14": {
                    "compute_result": 1,
                    "process_data": 2,
                    "sub_function": 3
                },
                "param_1": {
                    "arg1": 1,
                    "input1": 15,
                    "input_1": 9,
                    "input_param": 1,
                    "input_param1": 2,
                    "input_param_1": 2,
                    "param1": 1
                },
                "param_2": {
                    "arg2": 1,
                    "input2": 15,
                    "input_2": 9,
                    "input_param2": 2,
                    "input_param_2": 2,
                    "output_param": 1,
                    "param2": 1
                },
                "param_3": {
                    "arg3": 1,
                    "calc_param1": 1,
                    "data1": 2,
                    "data_1": 3,
                    "data_param": 1,
                    "input3": 7,
                    "input_3": 5,
                    "input_param3": 2,
                    "input_param_3": 2,
                    "param3": 3,
                    "param_3": 1,
                    "param_a": 2,
                    "parameter_a": 1
                },
                "param_4": {
                    "arg4": 1,
                    "calc_param2": 1,
                    "config_param": 1,
                    "data2": 2,
                    "data_2": 3,
                    "input4": 7,
                    "input_4": 5,
                    "input_param4": 2,
                    "input_param_4": 2,
                    "param4": 3,
                    "param_4": 1,
                    "param_b": 2,
                    "parameter_b": 1
                },
                "uVar1": {
                    "result": 18,
                    "return_value": 2
                }
            },
            "called": [
                "FUN_00000e14"
            ],
            "calling": [
                "FUN_00004dc8"
            ],
            "code": "\nundefined4 process_data_00000490(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 result;\n  \n  result = FUN_00000e14(input3,input4);\n  return result;\n}\n\n",
            "current_name": "process_data_00000490",
            "entrypoint": "0x00000490",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000490": "process_data_00000490",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000004f2": {
            "additional_data": {
                "0x13": {
                    "19": 1,
                    "default_value": 2,
                    "value_to_set": 1
                },
                "0xffffffff": {
                    "error_code": 1,
                    "return_value": 1
                },
                "FUN_000004f2": {
                    "initialize_memory": 3,
                    "initialize_param": 1,
                    "initialize_param_and_return": 1,
                    "initialize_parameter": 2,
                    "initialize_value": 1,
                    "initialize_value_and_return": 1,
                    "initialize_value_and_return_error": 2,
                    "initialize_variable": 1,
                    "initialize_variables": 1,
                    "set_default_return_value": 1,
                    "set_default_value": 5,
                    "set_error_code": 1,
                    "set_param_and_return_error_code": 1,
                    "set_param_to19": 1,
                    "set_return_value": 1,
                    "set_return_value_and_assign": 1,
                    "set_return_value_to19": 1,
                    "set_to19_and_return_neg_one": 1,
                    "set_value_and_return": 3,
                    "set_value_and_return_error": 1,
                    "set_zero_and_return_maximum": 1
                },
                "param_1": {
                    "data_pointer": 1,
                    "error_code": 1,
                    "memory_address": 1,
                    "memory_pointer": 2,
                    "output": 2,
                    "output_parameter": 1,
                    "output_pointer": 1,
                    "output_value": 13,
                    "output_variable": 1,
                    "param": 1,
                    "pointer_to_value": 1,
                    "result": 1,
                    "result_pointer": 2,
                    "return_value_pointer": 1,
                    "value": 1
                },
                "param_1_new": {
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00004e26",
                "FUN_00004dee"
            ],
            "code": "\nundefined4 set_default_return_value_000004f2(undefined4 *output_value)\n\n{\n  *output_value = 0x13;\n  return 0xffffffff;\n}\n\n",
            "current_name": "set_default_return_value_000004f2",
            "entrypoint": "0x000004f2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000004f2": "set_default_return_value_000004f2",
                "param_1": "output_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000514": {
            "additional_data": {
                "0x13": {
                    "19": 1,
                    "initial_value": 6
                },
                "0xffffffff": {
                    "error_code": 2,
                    "return_value": 1
                },
                "FUN_00000514": {
                    "initialize_data": 2,
                    "initialize_memory": 3,
                    "initialize_param": 1,
                    "initialize_param_with_value": 1,
                    "initialize_parameter": 3,
                    "initialize_value": 3,
                    "initialize_value_and_return": 1,
                    "initialize_value_and_return_error_code": 1,
                    "initialize_variable": 2,
                    "set_default_value": 4,
                    "set_initial_value": 1,
                    "set_param_and_return": 2,
                    "set_param_to19": 1,
                    "set_parameters_and_return": 1,
                    "set_to19": 2,
                    "set_to19_and_return_neg_one": 1,
                    "set_value_and_return": 2
                },
                "param_1": {
                    "data_pointer": 1,
                    "memory_address": 1,
                    "memory_pointer": 3,
                    "output": 1,
                    "output_data": 1,
                    "output_parameter": 1,
                    "output_pointer": 1,
                    "output_ptr": 1,
                    "output_value": 8,
                    "output_variable": 2,
                    "param": 1,
                    "result": 1,
                    "result_pointer": 3,
                    "result_ptr": 1,
                    "value_pointer": 1,
                    "value_ptr": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_000056b8"
            ],
            "code": "\nundefined4 initialize_value_and_return_error_code_00000514(undefined4 *output_value)\n\n{\n  *output_value = 0x13;\n  return 0xffffffff;\n}\n\n",
            "current_name": "initialize_value_and_return_error_code_00000514",
            "entrypoint": "0x00000514",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000514": "initialize_value_and_return_error_code_00000514",
                "param_1": "output_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000534": {
            "additional_data": {
                "FUN_00000534": {
                    "check_input": 1,
                    "check_input_validity": 1,
                    "check_input_value": 1,
                    "check_param": 1,
                    "check_param_validity": 1,
                    "check_valid_input": 7,
                    "check_valid_param": 9,
                    "check_valid_param_value": 1,
                    "check_valid_parameter": 2,
                    "check_validity": 1,
                    "is_valid_input": 2,
                    "is_valid_parameter": 1,
                    "validate_input": 2,
                    "validate_param": 1
                },
                "param_1": {
                    "output": 7,
                    "output_value": 6,
                    "result": 16,
                    "result_ptr": 1,
                    "valid_flag": 1
                },
                "param_2": {
                    "input": 6,
                    "input_param": 9,
                    "input_value": 15,
                    "value": 1
                },
                "uVar1": {
                    "is_valid": 28,
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00005700"
            ],
            "code": "\nundefined4 check_valid_param_value_00000534(undefined4 *result,int input_value)\n\n{\n  undefined4 is_valid;\n  \n  *result = 0;\n  if (((input_value == 0) || (input_value == 1)) || (input_value == 2)) {\n    is_valid = 1;\n  }\n  else {\n    is_valid = 0;\n  }\n  return is_valid;\n}\n\n",
            "current_name": "check_valid_param_value_00000534",
            "entrypoint": "0x00000534",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000534": "check_valid_param_value_00000534",
                "param_1": "result",
                "param_2": "input_value",
                "uVar1": "is_valid"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000566": {
            "additional_data": {
                "FUN_00000566": {
                    "byte_to_int": 1,
                    "byte_to_integer_conversion": 1,
                    "convert_byte_to_int": 1,
                    "convert_int_to_byte": 1,
                    "convert_int_to_bytes": 1,
                    "convert_to_big_endian": 1,
                    "convert_to_little_endian": 3,
                    "count_leading_zeros": 1,
                    "count_set_bits": 1,
                    "decode_bits": 1,
                    "decode_int": 2,
                    "decode_integer": 3,
                    "decode_unsigned_int": 1,
                    "extract_bit_indices": 1,
                    "extract_bit_sequence": 1,
                    "extract_byte": 1,
                    "extract_byte_value": 1,
                    "extract_least_significant_byte": 2,
                    "extract_lz_count": 1,
                    "extract_reverse_bits": 1,
                    "getbit_count": 1,
                    "reverse_binary": 1,
                    "reverse_byte_order": 3
                },
                "bVar1": {
                    "bit_position0": 1,
                    "byte0": 1,
                    "byte1": 11,
                    "byte3": 5,
                    "byte4": 1,
                    "byte_1": 2,
                    "byte_3": 1,
                    "extracted_byte1": 1,
                    "first_byte": 2,
                    "fourth_byte": 1,
                    "input_byte0": 1,
                    "input_byte1": 1,
                    "input_byte4": 1,
                    "msb": 1,
                    "shifted_byte1": 1
                },
                "bVar2": {
                    "bit_position8": 1,
                    "byte0": 5,
                    "byte1": 2,
                    "byte2": 11,
                    "byte_0": 1,
                    "byte_2": 2,
                    "extracted_byte2": 1,
                    "first_byte": 1,
                    "input_byte1": 2,
                    "input_byte2": 1,
                    "lsb": 1,
                    "second_byte": 2,
                    "shifted_byte2": 1
                },
                "bVar3": {
                    "bit_position16": 1,
                    "byte1": 5,
                    "byte2": 2,
                    "byte3": 11,
                    "byte_1": 1,
                    "byte_3": 2,
                    "extracted_byte3": 1,
                    "input_byte2": 2,
                    "input_byte3": 1,
                    "second_byte": 2,
                    "shifted_byte3": 1,
                    "third_byte": 2
                },
                "bVar4": {
                    "bit_position24": 1,
                    "byte2": 5,
                    "byte3": 2,
                    "byte4": 11,
                    "byte_2": 1,
                    "byte_4": 2,
                    "extracted_byte4": 1,
                    "fourth_byte": 2,
                    "input_byte3": 2,
                    "input_byte4": 1,
                    "shifted_byte4": 1,
                    "third_byte": 2
                },
                "iVar5": {
                    "big_endian_value": 1,
                    "bit_count": 1,
                    "converted_value": 4,
                    "decoded_value": 4,
                    "leading_zeros": 1,
                    "result": 16,
                    "reversed_order": 1,
                    "reversed_value": 3
                },
                "param_1": {
                    "input": 14,
                    "input_number": 1,
                    "input_value": 12,
                    "value": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_00000610"
            ],
            "code": "\nint decode_unsigned_int_00000566(int input)\n\n{\n  byte byte1;\n  byte byte2;\n  byte byte3;\n  byte byte4;\n  int result;\n  \n  byte2 = (byte)input;\n  byte3 = (byte)((uint)input >> 8);\n  byte4 = (byte)((uint)input >> 0x10);\n  byte1 = (byte)((uint)input >> 0x18);\n  result = LZCOUNT((uint)(byte)((((((((byte2 & 1) << 1 | byte2 >> 1 & 1) << 1 | byte2 >> 2 & 1) << 1\n                                  | byte2 >> 3 & 1) << 1 | byte2 >> 4 & 1) << 1 | byte2 >> 5 & 1) <<\n                                1 | byte2 >> 6 & 1) << 1 | byte2 >> 7) << 0x18 |\n                  (uint)(byte)((((((((byte3 & 1) << 1 | byte3 >> 1 & 1) << 1 | byte3 >> 2 & 1) << 1\n                                  | byte3 >> 3 & 1) << 1 | byte3 >> 4 & 1) << 1 | byte3 >> 5 & 1) <<\n                                1 | byte3 >> 6 & 1) << 1 | byte3 >> 7) << 0x10 |\n                  (uint)(byte)((((((((byte4 & 1) << 1 | byte4 >> 1 & 1) << 1 | byte4 >> 2 & 1) << 1\n                                  | byte4 >> 3 & 1) << 1 | byte4 >> 4 & 1) << 1 | byte4 >> 5 & 1) <<\n                                1 | byte4 >> 6 & 1) << 1 | byte4 >> 7) << 8 |\n                  (uint)(byte)((((((((byte1 & 1) << 1 | byte1 >> 1 & 1) << 1 | byte1 >> 2 & 1) << 1\n                                  | byte1 >> 3 & 1) << 1 | byte1 >> 4 & 1) << 1 | byte1 >> 5 & 1) <<\n                                1 | byte1 >> 6 & 1) << 1 | byte1 >> 7));\n  if (input == 0) {\n    result = -1;\n  }\n  return result;\n}\n\n",
            "current_name": "decode_unsigned_int_00000566",
            "entrypoint": "0x00000566",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000566": "decode_unsigned_int_00000566",
                "bVar1": "byte1",
                "bVar2": "byte2",
                "bVar3": "byte3",
                "bVar4": "byte4",
                "iVar5": "result",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0000058e": {
            "additional_data": {
                "FUN_0000058e": {
                    "assign_or_redirect": 1,
                    "assign_pointer_and_value": 1,
                    "copy_and_swap_values": 1,
                    "extract_data": 1,
                    "extract_value_and_update_list": 1,
                    "rearrange_pointers": 1,
                    "reassign_pointer": 1,
                    "reverse_and_update_pointer": 2,
                    "reverse_update_pointer": 1,
                    "set_next_pointer": 1,
                    "update_and_store_pointer": 1,
                    "update_pointer": 12,
                    "update_pointer_and_value": 1,
                    "update_pointer_value": 3,
                    "update_pointers": 1,
                    "update_ptr_value": 1,
                    "update_variable_and_pointer": 1
                },
                "newValue": {
                    "new_value": 1
                },
                "param_1": {
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "current_pointer": 1,
                    "input_list": 1,
                    "input_pointer": 2,
                    "linked_list_ptr": 1,
                    "pointer": 2,
                    "ptr_data": 1,
                    "ptr_to_value": 1,
                    "source": 1,
                    "source_pointer": 11,
                    "source_ptr": 6,
                    "src_pointer": 1,
                    "variable_to_check": 1
                },
                "param_2": {
                    "destination": 1,
                    "destination_pointer": 9,
                    "destination_ptr": 5,
                    "dst_pointer": 1,
                    "new_next_pointer": 1,
                    "new_node_ptr": 1,
                    "new_value": 5,
                    "output_pointer": 2,
                    "output_value": 1,
                    "ptr_result": 1,
                    "target_pointer": 2,
                    "target_ptr": 1,
                    "variable_to_update": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00000698"
            ],
            "code": "\nvoid update_pointer_and_value_0000058e(int *source_pointer,undefined4 *destination_pointer)\n\n{\n  if (*source_pointer == 0) {\n    *destination_pointer = destination_pointer;\n  }\n  else {\n    *destination_pointer = *(undefined4 *)*source_pointer;\n    *(undefined4 **)*source_pointer = destination_pointer;\n  }\n  *source_pointer = (int)destination_pointer;\n  return;\n}\n\n",
            "current_name": "update_pointer_and_value_0000058e",
            "entrypoint": "0x0000058e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0000058e": "update_pointer_and_value_0000058e",
                "param_1": "source_pointer",
                "param_2": "destination_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000005ca": {
            "additional_data": {
                "FUN_000005ca": {
                    "dequeue": 1,
                    "extract_and_remove_first_element": 1,
                    "extract_data": 1,
                    "extract_data_from_pointer": 1,
                    "extract_element_from_pointer": 1,
                    "extract_four_bytes_from_pointer": 1,
                    "extract_list_from_pointer": 1,
                    "extract_memory_value": 1,
                    "extract_number": 1,
                    "extract_pointed_value": 1,
                    "extract_pointer": 2,
                    "extract_pointer_from_integer": 1,
                    "extract_ptr_from_param": 1,
                    "extract_value_and_reset": 2,
                    "extract_value_and_reset_pointer": 1,
                    "extract_value_from_array": 1,
                    "extract_value_from_pointer": 9,
                    "extract_value_or_default": 1,
                    "extracted_data": 1,
                    "reverse_linked_list": 1,
                    "reverse_list": 1
                },
                "param_1": {
                    "array": 2,
                    "array_pointer": 1,
                    "array_ptr": 2,
                    "data_pointer": 1,
                    "input_pointer": 6,
                    "input_ptr": 4,
                    "integer_ptr": 1,
                    "list_head": 2,
                    "list_pointer": 1,
                    "memory_address": 1,
                    "pointer": 2,
                    "pointer_list": 1,
                    "pointer_to_value": 2,
                    "queue": 1,
                    "source_pointer": 1,
                    "value_pointer": 1,
                    "value_ptr": 2
                },
                "puVar1": {
                    "dequeued_item": 1,
                    "extracted_data": 2,
                    "extracted_element": 2,
                    "extracted_list": 1,
                    "extracted_pointer": 2,
                    "extracted_ptr": 1,
                    "extracted_value": 15,
                    "node": 1,
                    "output_pointer": 2,
                    "output_ptr": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_00000698"
            ],
            "code": "\nundefined4 * extract_value_from_pointer_000005ca(int *input_pointer)\n\n{\n  undefined4 *extracted_value;\n  \n  if (*input_pointer == 0) {\n    extracted_value = (undefined4 *)0x0;\n  }\n  else {\n    extracted_value = *(undefined4 **)*input_pointer;\n    if (extracted_value == (undefined4 *)*input_pointer) {\n      *input_pointer = 0;\n    }\n    else {\n      *(undefined4 *)*input_pointer = *extracted_value;\n    }\n  }\n  return extracted_value;\n}\n\n",
            "current_name": "extract_value_from_pointer_000005ca",
            "entrypoint": "0x000005ca",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000005ca": "extract_value_from_pointer_000005ca",
                "param_1": "input_pointer",
                "puVar1": "extracted_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000610": {
            "additional_data": {
                "DAT_1fff0354": {
                    "counter": 2,
                    "valid_count": 1
                },
                "DAT_1fff03dc": {
                    "input_length_copy": 1,
                    "original_value": 1
                },
                "DAT_1fff03e0": {
                    "new_value": 1
                },
                "DAT_1fff03e4": {
                    "index_array": 1
                },
                "DAT_1fff0424": {
                    "data_array": 1
                },
                "FUN_00000566": {
                    "fetch_value": 1,
                    "find_data_index": 2,
                    "find_index": 1,
                    "get_data": 1,
                    "get_data_index": 2,
                    "get_index": 2,
                    "get_modified_index": 1,
                    "get_pointer_value": 1,
                    "get_result": 1,
                    "get_valid_index": 1,
                    "get_value": 1,
                    "get_value_from_param": 1,
                    "retrieve_data": 1
                },
                "FUN_00000610": {
                    "check_and_modify_data": 2,
                    "check_and_update_data": 5,
                    "check_and_update_variable": 1,
                    "check_memory_consistency": 1,
                    "decode_and_modify": 1,
                    "process_data": 4,
                    "validate_condition": 1,
                    "validate_data": 3,
                    "validate_input": 1,
                    "verify_condition": 1,
                    "verify_data_integrity": 1
                },
                "iVar1": {
                    "buffer_address": 1,
                    "current_value": 2,
                    "data_address": 4,
                    "data_pointer": 3,
                    "input_data": 1,
                    "input_length": 1,
                    "input_value": 5,
                    "input_value1": 1,
                    "input_variable": 1,
                    "memory_address": 1,
                    "original_data": 2,
                    "original_i_var": 1,
                    "original_value": 5,
                    "original_var": 1
                },
                "iVar2": {
                    "calculated_result": 1,
                    "data_array": 1,
                    "decoded_value": 1,
                    "index": 10,
                    "input_value2": 1,
                    "modified_data": 1,
                    "modified_value": 1,
                    "output_variable": 1,
                    "pointer_index": 1,
                    "result": 5,
                    "result_address": 2,
                    "selected_index": 1,
                    "sub_function_result": 1,
                    "temp_i_var": 1,
                    "temp_variable": 1
                },
                "param_1": {
                    "data_index": 1,
                    "input": 1,
                    "input_data": 2,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_value": 1
                },
                "uVar3": {
                    "is_valid": 1,
                    "output": 1,
                    "result": 14,
                    "return_status": 1,
                    "return_value": 9,
                    "status": 1,
                    "success": 1,
                    "success_flag": 1
                }
            },
            "called": [
                "FUN_00000566"
            ],
            "calling": [],
            "code": "\nundefined4 check_and_update_data_00000610(void)\n\n{\n  int original_value;\n  int index;\n  undefined4 result;\n  \n  original_value = DAT_1fff03dc;\n  DAT_1fff0354 = 0;\n  index = FUN_00000566(DAT_1fff0424);\n  index = **(int **)(&DAT_1fff03e4 + index * 4);\n  if (original_value == index + -8) {\n    result = 0;\n  }\n  else {\n    if ((original_value != 0) && (*(char *)(original_value + 4) == '\\t')) {\n      *(undefined *)(original_value + 4) = 10;\n    }\n    *(undefined *)(index + -4) = 9;\n    DAT_1fff03e0 = *(undefined2 *)(index + -2);\n    result = 1;\n    DAT_1fff03dc = index + -8;\n  }\n  return result;\n}\n\n",
            "current_name": "check_and_update_data_00000610",
            "entrypoint": "0x00000610",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000610": "check_and_update_data_00000610",
                "iVar1": "original_value",
                "iVar2": "index",
                "uVar3": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000698": {
            "additional_data": {
                "DAT_1fff03e4": {
                    "byte_array": 1,
                    "data": 1,
                    "data_arr": 1,
                    "data_array": 2,
                    "data_table": 1
                },
                "DAT_1fff0424": {
                    "bitmask": 1,
                    "data2": 1,
                    "data_flags": 1,
                    "flag": 3,
                    "flag_table": 1,
                    "flags": 5,
                    "result": 1,
                    "status": 1
                },
                "FUN_0000058e": {
                    "assign_and_update": 1,
                    "copy_array": 2,
                    "copy_data": 1,
                    "copy_data_value": 1,
                    "copy_value_to_address": 1,
                    "copy_value_to_memory": 1,
                    "modify_data": 1,
                    "modify_value": 1,
                    "set_bits": 1,
                    "set_value": 1,
                    "set_value_and_set_flag": 1,
                    "update_character_data": 1,
                    "update_data": 2,
                    "update_data2": 1,
                    "update_data_with_value": 1,
                    "update_pointer": 1,
                    "update_value": 1,
                    "update_value_pointer": 1,
                    "update_value_with_address": 1,
                    "update_value_with_offset": 1
                },
                "FUN_000005ca": {
                    "check_and_update": 2,
                    "check_and_update_array": 1,
                    "check_and_update_data": 1,
                    "check_and_update_data1": 1,
                    "check_and_update_value": 6,
                    "check_character_data_validity": 1,
                    "check_data": 1,
                    "check_data_validity": 1,
                    "check_value": 3,
                    "check_value_and_clear": 1,
                    "initialize_data": 1,
                    "update_array_value": 1,
                    "update_data_value": 1,
                    "update_value_at_address": 1,
                    "validate_and_clear_bits": 1
                },
                "FUN_00000698": {
                    "set_param_value": 1,
                    "update_byte_property": 1,
                    "update_byte_value": 1,
                    "update_character_information": 1,
                    "update_data": 9,
                    "update_data_entry": 1,
                    "update_param": 1,
                    "update_param_and_flag": 1,
                    "update_parameter": 7,
                    "update_parameter_value": 5,
                    "update_value": 3
                },
                "byte": {
                    "byte": 1,
                    "byte_array": 1,
                    "byte_data": 1,
                    "byte_val": 1,
                    "byte_value": 3,
                    "character_data": 1,
                    "value": 1
                },
                "byteVal1": {
                    "byte_val1": 1
                },
                "byteVal10": {
                    "byte_val10": 1
                },
                "byteVal11": {
                    "byte_val11": 1
                },
                "byteVal12": {
                    "byte_val12": 1
                },
                "byteVal13": {
                    "byte_val13": 1
                },
                "byteVal14": {
                    "byte_val14": 1
                },
                "byteVal2": {
                    "byte_val2": 1
                },
                "byteVal3": {
                    "byte_val3": 1
                },
                "byteVal4": {
                    "byte_val4": 1
                },
                "byteVal5": {
                    "byte_val5": 1
                },
                "byteVal6": {
                    "byte_val6": 1
                },
                "byteVal7": {
                    "byte_val7": 1
                },
                "byteVal8": {
                    "byte_val8": 1
                },
                "byteVal9": {
                    "byte_val9": 1
                },
                "byte_1": {
                    "current_value": 1
                },
                "byte_2": {
                    "index": 1
                },
                "char": {
                    "char": 1
                },
                "param_1": {
                    "address": 3,
                    "character_index": 1,
                    "data": 1,
                    "data_address": 2,
                    "data_index": 3,
                    "data_offset": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "entry_address": 1,
                    "input": 1,
                    "input_data": 1,
                    "input_param": 1,
                    "param": 2,
                    "param1": 3,
                    "param_address": 3,
                    "param_ptr": 1,
                    "parameter1": 1,
                    "value_index": 1,
                    "value_pointer": 1,
                    "variable_ptr": 1
                },
                "param_2": {
                    "destination_array": 1,
                    "new_character_value": 1,
                    "new_data": 2,
                    "new_param": 1,
                    "new_param_value": 4,
                    "new_value": 16,
                    "param2": 3,
                    "param_value": 1,
                    "parameter2": 1,
                    "value": 1
                },
                "ptr1": {
                    "ptr1": 1
                },
                "ptr2": {
                    "ptr2": 1
                },
                "ptr3": {
                    "ptr3": 1
                },
                "ptr4": {
                    "ptr4": 1
                },
                "sbyte": {
                    "bit_index": 1,
                    "byte_offset": 1,
                    "signed_byte": 2,
                    "signed_byte_data": 1,
                    "signed_byte_value": 1
                }
            },
            "called": [
                "FUN_000005ca",
                "FUN_0000058e"
            ],
            "calling": [
                "FUN_000010d4",
                "FUN_000024bc",
                "FUN_00002434",
                "FUN_00000794"
            ],
            "code": "\nvoid update_parameter_value_00000698(int data_index,uint new_value)\n\n{\n  if (new_value < 9) {\n    if ((8 < *(byte_value *)(data_index + 4)) &&\n       (FUN_000005ca(&DAT_1fff03e4 + (uint)*(byte_value *)(data_index + 5) * 4),\n       *(int *)(&DAT_1fff03e4 + (uint)*(byte_value *)(data_index + 5) * 4) == 0)) {\n      DAT_1fff0424 = DAT_1fff0424 & ~(1 << *(signed_byte *)(data_index + 5));\n    }\n  }\n  else if (*(byte_value *)(data_index + 4) < 9) {\n    FUN_0000058e(&DAT_1fff03e4 + (uint)*(byte_value *)(data_index + 5) * 4,data_index + 8);\n    DAT_1fff0424 = DAT_1fff0424 | 1 << *(signed_byte *)(data_index + 5);\n  }\n  *(char *)(data_index + 4) = (char)new_value;\n  return;\n}\n\n",
            "current_name": "update_parameter_value_00000698",
            "entrypoint": "0x00000698",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000698": "update_parameter_value_00000698",
                "byte": "byte_value",
                "param_1": "data_index",
                "param_2": "new_value",
                "sbyte": "signed_byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000738": {
            "additional_data": {
                "DAT_1fff0354": {
                    "flag": 1
                },
                "DAT_1fff03dc": {
                    "data_address": 1
                },
                "FUN_00000738": {
                    "check_and_execute": 2,
                    "check_and_execute_function": 2,
                    "check_and_update_parameters": 1,
                    "check_and_update_values": 2,
                    "check_compatibility": 1,
                    "check_conditions": 2,
                    "check_conditions_and_handle": 1,
                    "check_constraints": 1,
                    "check_input_validity": 2,
                    "check_param_and_execute": 2,
                    "check_parameter": 2,
                    "check_parameters": 4,
                    "check_params_and_execute": 1,
                    "check_threshold": 1,
                    "check_threshold_and_call": 1,
                    "check_threshold_and_execute": 1,
                    "check_threshold_and_perform_action": 1,
                    "check_validity": 1,
                    "validate_input": 1,
                    "validate_inputs": 1,
                    "verify_input_limits": 1
                },
                "FUN_0000093c": {
                    "execute_action": 3,
                    "execute_code": 1,
                    "execute_if_condition_met": 1,
                    "execute_operation": 1,
                    "handle_condition": 1,
                    "handle_error": 2,
                    "handle_invalid_input": 1,
                    "handle_positive_result": 1,
                    "handle_success": 1,
                    "perform_action": 6,
                    "perform_operation": 1,
                    "process_success": 1
                },
                "FUN_00000d2a": {
                    "check_condition": 17,
                    "check_validity": 1,
                    "check_value": 2
                },
                "iVar1": {
                    "condition_result": 1,
                    "func_return_value": 1,
                    "result": 24,
                    "return_value": 4,
                    "status": 1
                },
                "param_1": {
                    "input": 2,
                    "input_param": 4,
                    "input_parameter": 1,
                    "input_value": 19,
                    "param": 1,
                    "parameter": 1,
                    "value": 2,
                    "value_to_check": 1
                }
            },
            "called": [
                "FUN_00000d2a",
                "FUN_0000093c"
            ],
            "calling": [
                "FUN_000010d4",
                "FUN_000024bc"
            ],
            "code": "\nvoid check_and_update_parameters_00000738(ushort input_value)\n\n{\n  int result;\n  \n  if ((*(byte *)(DAT_1fff03dc + 4) < 9) || (input_value < *(byte *)(DAT_1fff03dc + 5))) {\n    result = FUN_00000d2a();\n    if (result == 0) {\n      FUN_0000093c();\n    }\n    else {\n      DAT_1fff0354 = 1;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "check_and_update_parameters_00000738",
            "entrypoint": "0x00000738",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000738": "check_and_update_parameters_00000738",
                "iVar1": "result",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000794": {
            "additional_data": {
                "DAT_1fff0350": {
                    "array_length": 1,
                    "data_value1": 1
                },
                "DAT_1fff0358": {
                    "data_address1": 1,
                    "data_array": 1
                },
                "DAT_1fff03dc": {
                    "data": 1,
                    "data_value2": 1
                },
                "DAT_1fff03e0": {
                    "data_address2": 1,
                    "data_index": 1
                },
                "FUN_00000698": {
                    "call_function": 1,
                    "initialize_register": 1,
                    "reset_data": 1,
                    "set_action": 1,
                    "set_array_value": 1,
                    "set_data": 1,
                    "set_memory": 3,
                    "set_value": 1
                },
                "FUN_00000794": {
                    "decode_data": 1,
                    "initialize_array": 7,
                    "initialize_data": 8,
                    "initialize_function": 1,
                    "initialize_int_array": 1,
                    "initialize_memory": 5,
                    "initialize_stack": 4,
                    "initiate_process": 1,
                    "reverse_bytes": 1
                },
                "FUN_00000930": {
                    "clear_memory": 3,
                    "execute_function": 1,
                    "initialize_data2": 1,
                    "initialize_memory": 1,
                    "initialize_value": 1,
                    "perform_action": 1,
                    "print_data": 1,
                    "reset_variables": 1
                },
                "FUN_00000cd0": {
                    "another_function": 1,
                    "calculate_offset": 1,
                    "initialize": 1,
                    "initialize_action": 1,
                    "initialize_data": 2,
                    "initialize_data3": 1,
                    "initialize_other_value": 1,
                    "initialize_random": 1,
                    "reverse_operation": 1
                },
                "extraout_r1": {
                    "error": 2,
                    "error_code": 3,
                    "extra_value": 1,
                    "out_value": 1,
                    "result": 11,
                    "return_val": 1,
                    "return_value": 8,
                    "size": 1
                },
                "iStack_18": {
                    "count2": 1,
                    "counter2": 3,
                    "i": 1,
                    "i_counter2": 1,
                    "inner_loop_counter": 5,
                    "inner_loop_variable": 3,
                    "j": 1,
                    "loop_counter": 2,
                    "loop_counter1": 2,
                    "loop_counter2": 8,
                    "loop_index2": 1,
                    "loop_variable_2": 1
                },
                "iStack_1c": {
                    "count": 1,
                    "count1": 1,
                    "counter": 1,
                    "counter1": 3,
                    "i": 1,
                    "i_counter1": 1,
                    "loop_counter1": 8,
                    "loop_counter2": 2,
                    "loop_index1": 1,
                    "loop_variable_1": 1,
                    "num": 1,
                    "outer_loop_counter": 5,
                    "outer_loop_variable": 3
                },
                "iVar1": {
                    "count": 1,
                    "counter": 6,
                    "idx": 1,
                    "index": 11,
                    "index1": 1,
                    "iteration": 2,
                    "iterator": 1,
                    "loop_counter": 4,
                    "temp_var1": 1
                },
                "piStack_14": {
                    "array": 1,
                    "array_index": 1,
                    "array_pointer": 9,
                    "array_ptr": 1,
                    "current_pointer": 1,
                    "data_pointer": 2,
                    "memory_pointer": 2,
                    "output_array": 1,
                    "ptr": 2,
                    "stack_pointer": 5,
                    "stack_ptr": 4
                },
                "puVar2": {
                    "array_ptr": 1,
                    "data_pointer": 5,
                    "data_ptr": 3,
                    "pointer": 12,
                    "ptr": 3,
                    "ptr_data": 2,
                    "ptr_var": 1,
                    "temp_pointer": 1
                },
                "uVar3": {
                    "address": 1,
                    "adjusted_address": 1,
                    "adjusted_pointer": 1,
                    "aligned_address": 7,
                    "aligned_data_pointer": 2,
                    "aligned_data_ptr": 2,
                    "aligned_pointer": 3,
                    "aligned_ptr": 6,
                    "alignment": 1,
                    "calculated_index": 1,
                    "combined_value": 1,
                    "offset": 1,
                    "shifted_value": 1
                }
            },
            "called": [
                "FUN_00000930",
                "FUN_00000698",
                "FUN_00000cd0"
            ],
            "calling": [],
            "code": "\nint * initialize_int_array_00000794(void)\n\n{\n  int result;\n  int index;\n  undefined4 *pointer;\n  uint aligned_address;\n  int loop_counter1;\n  int loop_counter2;\n  int *array_pointer;\n  \n  FUN_00000cd0();\n  *(undefined4 *)(&DAT_1fff0358 + DAT_1fff03e0 * 4) = 0;\n  DAT_1fff0350 = DAT_1fff0350 + -1;\n  FUN_00000698(DAT_1fff03dc,0);\n  pointer = &DAT_1fff03dc;\n  index = 0;\n  DAT_1fff03dc = 0;\n  FUN_00000930();\n  aligned_address = (int)pointer + index & 0xfffffffc;\n  array_pointer = (int *)(aligned_address - 4);\n  *array_pointer = 0x77777777;\n  if (((uint)array_pointer & 7) != 0) {\n    array_pointer = (int *)(aligned_address - 8);\n    *array_pointer = 0x88888888;\n  }\n  array_pointer[-1] = 0x1000000;\n  array_pointer[-2] = index << 0xd;\n  array_pointer[-3] = 0x795;\n  array_pointer = array_pointer + -4;\n  *array_pointer = 0;\n  for (loop_counter2 = 3; 0 < loop_counter2; loop_counter2 = loop_counter2 + -1) {\n    array_pointer = array_pointer + -1;\n    *array_pointer = loop_counter2;\n  }\n  array_pointer = array_pointer + -1;\n  *array_pointer = result;\n  for (loop_counter1 = 0xb; 3 < loop_counter1; loop_counter1 = loop_counter1 + -1) {\n    array_pointer = array_pointer + -1;\n    *array_pointer = loop_counter1;\n  }\n  array_pointer[-1] = -3;\n  return array_pointer + -1;\n}\n\n",
            "current_name": "initialize_int_array_00000794",
            "entrypoint": "0x00000794",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000794": "initialize_int_array_00000794",
                "extraout_r1": "result",
                "iStack_18": "loop_counter2",
                "iStack_1c": "loop_counter1",
                "iVar1": "index",
                "piStack_14": "array_pointer",
                "puVar2": "pointer",
                "uVar3": "aligned_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000007dc": {
            "additional_data": {
                "FUN_000007dc": {
                    "initialize_buffer": 1,
                    "initialize_data": 1,
                    "initialize_data_structure": 1,
                    "initialize_memory": 27,
                    "initialize_memory_block": 1
                },
                "local_10": {
                    "count": 2,
                    "count1": 1,
                    "count2": 1,
                    "count_down": 1,
                    "count_down_from3": 1,
                    "count_up": 1,
                    "counter": 1,
                    "counter2": 6,
                    "counter_2": 1,
                    "index": 1,
                    "index_2": 1,
                    "inner_counter": 1,
                    "j": 7,
                    "loop_counter2": 4,
                    "loop_var": 1,
                    "value": 1
                },
                "local_14": {
                    "count": 1,
                    "count1": 1,
                    "count2": 1,
                    "count_down": 1,
                    "count_down_from_b": 1,
                    "count_down_var": 1,
                    "counter": 1,
                    "counter1": 6,
                    "counter_1": 1,
                    "i": 8,
                    "index": 2,
                    "index_1": 1,
                    "iteration": 1,
                    "loop_counter1": 4,
                    "value": 1
                },
                "local_8": {
                    "temp": 1
                },
                "local_c": {
                    "address": 2,
                    "allocated_memory": 1,
                    "buffer_ptr": 1,
                    "current_address": 1,
                    "data_pointer": 2,
                    "mem_ptr": 1,
                    "memory_block": 2,
                    "memory_pointer": 2,
                    "memory_ptr": 5,
                    "ptr": 14
                },
                "param_1": {
                    "address": 1,
                    "arg1": 5,
                    "base_address": 3,
                    "initial_value": 4,
                    "initialize_value": 1,
                    "input": 1,
                    "input_1": 1,
                    "input_param": 2,
                    "mem_address": 1,
                    "param1": 7,
                    "value": 4,
                    "value_to_set": 1
                },
                "param_2": {
                    "arg2": 5,
                    "count": 1,
                    "data": 1,
                    "input": 1,
                    "input_2": 1,
                    "param2": 9,
                    "param_2": 1,
                    "param_value": 1,
                    "size": 3,
                    "value": 6,
                    "value_to_set": 1,
                    "value_to_store": 1
                },
                "param_3": {
                    "alignment": 2,
                    "arg3": 5,
                    "base_address": 1,
                    "buffer_length": 1,
                    "memory_size": 1,
                    "offset": 7,
                    "offset1": 2,
                    "param3": 7,
                    "size": 1,
                    "size1": 1,
                    "start": 1,
                    "start_address": 1,
                    "start_padding": 1
                },
                "param_4": {
                    "alignment": 3,
                    "arg4": 5,
                    "base_address": 1,
                    "end": 1,
                    "end_padding": 1,
                    "memory_size": 1,
                    "offset": 3,
                    "offset2": 2,
                    "param4": 7,
                    "size": 6,
                    "size2": 1
                },
                "uVar1": {
                    "adjusted_size": 2,
                    "aligned_length": 1,
                    "aligned_offset": 1,
                    "aligned_param4": 1,
                    "aligned_size": 13,
                    "memory_size": 1,
                    "size": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_000010d4"
            ],
            "code": "\nint * initialize_memory_block_000007dc(undefined4 param1,int param2,int param3,int param4)\n\n{\n  uint aligned_size;\n  int i;\n  int j;\n  int *ptr;\n  \n  aligned_size = param4 + param3 & 0xfffffffc;\n  ptr = (int *)(aligned_size - 4);\n  *ptr = 0x77777777;\n  if (((uint)ptr & 7) != 0) {\n    ptr = (int *)(aligned_size - 8);\n    *ptr = 0x88888888;\n  }\n  ptr[-1] = 0x1000000;\n  ptr[-2] = param1;\n  ptr[-3] = 0x795;\n  ptr = ptr + -4;\n  *ptr = 0;\n  for (j = 3; 0 < j; j = j + -1) {\n    ptr = ptr + -1;\n    *ptr = j;\n  }\n  ptr = ptr + -1;\n  *ptr = param2;\n  for (i = 0xb; 3 < i; i = i + -1) {\n    ptr = ptr + -1;\n    *ptr = i;\n  }\n  ptr[-1] = -3;\n  return ptr + -1;\n}\n\n",
            "current_name": "initialize_memory_block_000007dc",
            "entrypoint": "0x000007dc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000007dc": "initialize_memory_block_000007dc",
                "local_10": "j",
                "local_14": "i",
                "local_c": "ptr",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "aligned_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000008b8": {
            "additional_data": {
                "Elf32_Rel": {
                    "relocation_entry": 2
                },
                "Elf32_Rel_ARRAY_1fff0200": {
                    "array_end_address": 1,
                    "rel_array": 2,
                    "rel_array_ptr": 1,
                    "relocation_array": 1,
                    "relocation_entries": 1,
                    "relocation_entry_array": 1
                },
                "FUN_000008b8": {
                    "calculate_array_length": 1,
                    "calculate_array_offset": 2,
                    "calculate_array_size": 4,
                    "calculate_elf32_rel_array_size": 1,
                    "calculate_length": 1,
                    "calculate_offset": 1,
                    "calculate_offset_difference": 1,
                    "calculate_rel_offset": 1,
                    "calculate_relative_offset": 1,
                    "calculate_relocation_offset": 2,
                    "calculate_relocation_size": 1,
                    "calculate_remaining_offset": 2,
                    "count_relocated_entries": 1,
                    "count_relocation_entries": 2,
                    "find_array_offset": 1,
                    "find_last_matching_offset": 1,
                    "find_last_offset": 2,
                    "get_array_offset": 2,
                    "get_offset_difference": 1,
                    "get_rel_offset": 1,
                    "get_relative_offset": 1,
                    "get_remaining_offset": 1
                },
                "local_c": {
                    "current": 1,
                    "current_element": 1,
                    "current_entry": 3,
                    "current_rel": 1,
                    "current_rel_entry": 7,
                    "current_relocation": 3,
                    "rel_entry": 5,
                    "rel_pointer": 1,
                    "rel_ptr": 5,
                    "relative_entry": 1,
                    "relocation_entry": 2
                },
                "r_info": {
                    "info": 1
                },
                "r_offset": {
                    "offset": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0000211c"
            ],
            "code": "\nint calculate_elf32_rel_array_size_000008b8(void)\n\n{\n  relocation_entry *current_rel_entry;\n  \n  for (current_rel_entry = (relocation_entry *)&DAT_1fff0000;\n      (current_rel_entry->offset == 0xe7fee7fe && (current_rel_entry < rel_array));\n      current_rel_entry = (relocation_entry *)&current_rel_entry->info) {\n  }\n  return ((int)rel_array - (int)current_rel_entry >> 2) << 2;\n}\n\n",
            "current_name": "calculate_elf32_rel_array_size_000008b8",
            "entrypoint": "0x000008b8",
            "imported": false,
            "improved": true,
            "renaming": {
                "Elf32_Rel": "relocation_entry",
                "Elf32_Rel_ARRAY_1fff0200": "rel_array",
                "FUN_000008b8": "calculate_elf32_rel_array_size_000008b8",
                "local_c": "current_rel_entry",
                "r_info": "info",
                "r_offset": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000900": {
            "additional_data": {
                "FUN_00000900": {
                    "get_main_stack_pointer": 27,
                    "get_stack_pointer": 4
                },
                "uVar1": {
                    "main_stack_pointer": 18,
                    "return_value": 1,
                    "stack_pointer": 12
                }
            },
            "called": [],
            "calling": [
                "FUN_0000211c"
            ],
            "code": "\nundefined4 get_main_stack_pointer_00000900(void)\n\n{\n  undefined4 main_stack_pointer;\n  \n  main_stack_pointer = getMainStackPointer();\n  return main_stack_pointer;\n}\n\n",
            "current_name": "get_main_stack_pointer_00000900",
            "entrypoint": "0x00000900",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000900": "get_main_stack_pointer_00000900",
                "uVar1": "main_stack_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0000091c": {
            "additional_data": {
                "": {
                    "": 1
                },
                "0x1fff0000": {
                    "base_address": 1,
                    "max_constant_value": 1
                },
                "DAT_FUN_00000xxx": {
                    "new_data_variable": 1
                },
                "FUN_0000091c": {
                    "get_base_address": 5,
                    "get_const_value": 1,
                    "get_constant_value": 2,
                    "get_default_value": 1,
                    "get_flag_value": 2,
                    "get_magic_number": 1,
                    "get_magic_value": 1,
                    "get_mask": 1,
                    "get_masked_value": 1,
                    "get_memory_address": 12,
                    "get_memory_boundary": 1,
                    "get_memory_offset": 2
                },
                "PTR_00000f08": {
                    "base_address": 1
                },
                "PTR_1fff0000": {
                    "memory_address": 1
                },
                "PTR_FUN_00000xxx": {
                    "new_ptr_variable": 1
                },
                "return": {
                    "base_address": 1
                },
                "undefined4": {
                    "uint32": 1,
                    "uint32_t": 14
                },
                "undefined4_FUN_0000091c": {
                    "unsigned_integer_return_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0000211c"
            ],
            "code": "\nuint32_t get_memory_address_0000091c(void)\n\n{\n  base_address 0x1fff0000;\n}\n\n",
            "current_name": "get_memory_address_0000091c",
            "entrypoint": "0x0000091c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0000091c": "get_memory_address_0000091c",
                "return": "base_address",
                "undefined4": "uint32_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000930": {
            "additional_data": {
                "FUN_00000930": {
                    "endless_loop": 2,
                    "execute_infinite_loop": 4,
                    "infinite_loop": 4,
                    "loop_forever": 3,
                    "run_and_interrupt": 1,
                    "run_forever": 2,
                    "run_function_forever": 1,
                    "run_infinite_loop": 10,
                    "run_software_interrupt": 1,
                    "start_infinite_loop": 1,
                    "start_loop": 1
                },
                "FUN_00000cf0": {
                    "execute_code": 1,
                    "execute_initialization": 1,
                    "execute_startup_routine": 1,
                    "initialize": 12,
                    "initialize_device": 1,
                    "initialize_resources": 1,
                    "initialize_software": 1,
                    "initialize_system": 12,
                    "perform_initialization": 1
                },
                "software_interrupt": {
                    "perform_interrupt": 1,
                    "trigger_interrupt": 5,
                    "trigger_software_interrupt": 2
                },
                "undefined4": {
                    "void": 2
                }
            },
            "called": [
                "FUN_00000cf0"
            ],
            "calling": [
                "FUN_00000f8c",
                "FUN_00000794"
            ],
            "code": "\nvoid run_infinite_loop_00000930(void)\n\n{\n  FUN_00000cf0();\n  trigger_interrupt(1);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "run_infinite_loop_00000930",
            "entrypoint": "0x00000930",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000930": "run_infinite_loop_00000930",
                "software_interrupt": "trigger_interrupt"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0000093c": {
            "additional_data": {
                "0x10000000": {
                    "bit_mask": 1
                },
                "FUN_0000093c": {
                    "enable_cache": 1,
                    "enable_external_interrupt": 1,
                    "enable_hardware_interrupt": 1,
                    "enable_interrupt": 1,
                    "enable_interrupt_flag": 1,
                    "enable_interrupt_on_event": 1,
                    "enable_interrupts": 2,
                    "enable_memory_protection": 3,
                    "initialize_status_register": 1,
                    "set_bit_in_register": 2,
                    "set_e000_ed04_bit": 1,
                    "set_flag": 2,
                    "set_flag_bit": 1,
                    "set_flag_bits": 1,
                    "set_flag_gedr": 1,
                    "set_flag_in_control_register": 2,
                    "set_flag_in_register": 2,
                    "set_flag_on": 1,
                    "set_flag_to_enable_interrupts": 1,
                    "set_high_bit_in_register": 1,
                    "set_memory_flag": 2,
                    "set_memory_protection_flag": 2
                },
                "_DAT_e000ed04": {
                    "cache_register": 1,
                    "control_register": 2,
                    "e000_ed04": 1,
                    "flag": 1,
                    "flag_register": 3,
                    "interrupt_control_register": 3,
                    "interrupt_flags": 2,
                    "interrupt_register": 2,
                    "interrupt_state": 1,
                    "memory_flag": 2,
                    "memory_protection_flag": 2,
                    "memory_protection_register": 3,
                    "register": 2,
                    "register_flag": 1,
                    "register_value": 3,
                    "status_register": 1
                },
                "_e000ed04": {
                    "status_register": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00000738",
                "FUN_00002798",
                "FUN_00001cf0",
                "FUN_00002434",
                "FUN_00001348"
            ],
            "code": "\n\n\nvoid set_memory_protection_flag_0000093c(void)\n\n{\n  _DATstatus_register = _DATstatus_register | 0x10000000;\n  return;\n}\n\n",
            "current_name": "set_memory_protection_flag_0000093c",
            "entrypoint": "0x0000093c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0000093c": "set_memory_protection_flag_0000093c",
                "_e000ed04": "status_register"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000990": {
            "called": [],
            "calling": [
                "entry"
            ],
            "code": "\nvoid FUNC_00000990(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00000990",
            "entrypoint": "0x00000990",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00000990": "FUNC_00000990"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00000a30": {
            "additional_data": {
                "FUN_00000a30": {
                    "calculate_adjusted_address": 1,
                    "calculate_nmi_handler_address": 2,
                    "decrement_stack_pointer": 1,
                    "get_adjusted_stack_pointer": 1,
                    "get_nmi_error_handler_address": 1,
                    "get_nmi_handler": 2,
                    "get_nmi_handler_address": 21,
                    "initialize_nmi_handler": 1
                },
                "FUN_00000f04": {
                    "log_message": 1,
                    "print_debug_message": 9,
                    "print_error_message": 2,
                    "print_message": 11
                },
                "in_r3": {
                    "address_offset": 2,
                    "base_address": 6,
                    "base_offset": 1,
                    "handler_offset": 1,
                    "input_argument": 1,
                    "input_parameter": 1,
                    "input_register3": 1,
                    "input_value": 1,
                    "input_variable": 1,
                    "offset": 6,
                    "param": 2,
                    "param1": 2,
                    "processor_register": 1,
                    "register_value": 4,
                    "stack_pointer": 1
                },
                "param_1": {
                    "char_input": 1,
                    "debug_level": 1,
                    "message_type": 10,
                    "severity": 1,
                    "severity_level": 1
                },
                "param_2": {
                    "message": 12,
                    "message_address": 1,
                    "message_data": 1
                },
                "stack0xe000ffe0": {
                    "base_address": 2,
                    "stack_base": 2,
                    "stack_pointer": 1
                }
            },
            "called": [
                "FUN_00000f04"
            ],
            "calling": [],
            "code": "\nundefined * get_nmi_error_handler_address_00000a30(void)\n\n{\n  int offset;\n  \n  FUN_00000f04(4,\"NMI HANDLER\");\n  return &stack_base + -*(int *)(offset + 0x4c);\n}\n\n",
            "current_name": "get_nmi_error_handler_address_00000a30",
            "entrypoint": "0x00000a30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000a30": "get_nmi_error_handler_address_00000a30",
                "in_r3": "offset",
                "stack0xe000ffe0": "stack_base"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000cc0": {
            "additional_data": {
                "FUN_00000cc0": {
                    "disable_and_check_interrupts": 2,
                    "disable_and_get_interrupt_state": 1,
                    "disable_and_get_interrupt_status": 1,
                    "disable_and_get_irq_status": 1,
                    "disable_interrupts": 2,
                    "disable_interrupts_and_return_irq_status": 1,
                    "disable_ir_qinterrupts_and_check_irq_status": 1,
                    "disable_ir_qinterrupts_and_get_interrupt_state": 1,
                    "disable_ir_qinterrupts_and_get_interrupt_status": 1,
                    "disable_ir_qinterrupts_and_get_irq_interrupts_state": 2,
                    "disable_ir_qinterrupts_and_return_ir_qinterrupts_state": 2,
                    "disable_ir_qinterrupts_and_return_ir_qinterrupts_status": 1,
                    "disable_ir_qinterrupts_and_return_irq_status": 4,
                    "disable_ir_qinterrupts_if_needed": 1,
                    "disable_irq_and_get_interrupt_status": 1,
                    "disable_irq_interrupts": 2,
                    "disable_irq_interrupts_and_return": 1,
                    "disable_irq_interrupts_and_return_irq_enabled_status": 1,
                    "disable_irq_interrupts_and_return_prev_status": 1,
                    "disable_irq_interrupts_and_return_status": 1,
                    "get_interrupt_status": 1,
                    "get_ir_qinterrupts_status": 1,
                    "get_irq_interrupts_status": 1
                },
                "FUN_00000f04": {
                    "dummy_handler": 1,
                    "log_dummy_handler": 1,
                    "log_dummy_handler_message": 1,
                    "print_debug_message": 4,
                    "print_dummy_handler": 2
                },
                "bVar1": {
                    "is_current_mode_privileged": 1,
                    "is_current_mode_privileged_result": 1,
                    "is_privileged": 8,
                    "is_privileged_mode": 19,
                    "privileged_mode": 1
                },
                "disableIRQinterrupts": {
                    "disable_irq_interrupts": 1
                },
                "isCurrentModePrivileged": {
                    "check_current_mode_privileged": 1,
                    "check_if_current_mode_privileged": 1,
                    "check_privileged_mode": 2
                },
                "isIRQinterruptsEnabled": {
                    "check_if_ir_qinterrupts_enabled": 1,
                    "check_interrupts_enabled": 1,
                    "check_ir_qinterrupts_status": 1,
                    "check_irq_interrupts_enabled": 1
                },
                "param_1": {
                    "char_value": 1,
                    "character": 1,
                    "debug_level": 1,
                    "dummy_param": 1,
                    "handler_id": 3,
                    "handler_index": 1,
                    "handler_type": 4,
                    "interrupt_handler_index": 2,
                    "interrupt_number": 1,
                    "message_length": 1,
                    "message_type": 1,
                    "param": 1
                },
                "param_2": {
                    "debug_message": 1,
                    "description": 1,
                    "dummy_message": 1,
                    "handler_description": 1,
                    "handler_message": 1,
                    "handler_name": 10,
                    "message": 2,
                    "string_value": 1
                },
                "uVar2": {
                    "are_ir_qinterrupts_enabled": 1,
                    "are_irq_interrupts_enabled": 2,
                    "current_irq_interrupt_state": 1,
                    "interrupt_state": 2,
                    "interrupt_status": 4,
                    "interrupts_enabled": 6,
                    "ir_qinterrupts_state": 1,
                    "ir_qinterrupts_status": 1,
                    "irq_interrupts_enabled": 2,
                    "irq_interrupts_state": 2,
                    "irq_interrupts_status": 2,
                    "irq_status": 5,
                    "is_irq_interrupts_enabled": 1,
                    "status": 1
                }
            },
            "called": [
                "FUN_00000f04"
            ],
            "calling": [
                "FUN_00000dc0"
            ],
            "code": "\nundefined4 disable_ir_qinterrupts_and_get_irq_interrupts_state_00000cc0(void)\n\n{\n  bool is_privileged_mode;\n  undefined4 interrupts_enabled;\n  \n  FUN_00000f04(10,\"DUMMY HANDLER\");\n  interrupts_enabled = 0;\n  is_privileged_mode = (bool)check_privileged_mode();\n  if (is_privileged_mode) {\n    interrupts_enabled = check_irq_interrupts_enabled();\n  }\n  disable_irq_interrupts();\n  return interrupts_enabled;\n}\n\n",
            "current_name": "disable_ir_qinterrupts_and_get_irq_interrupts_state_00000cc0",
            "entrypoint": "0x00000cc0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000cc0": "disable_ir_qinterrupts_and_get_irq_interrupts_state_00000cc0",
                "bVar1": "is_privileged_mode",
                "disableIRQinterrupts": "disable_irq_interrupts",
                "isCurrentModePrivileged": "check_privileged_mode",
                "isIRQinterruptsEnabled": "check_irq_interrupts_enabled",
                "uVar2": "interrupts_enabled"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000cd0": {
            "additional_data": {
                "FUN_00000cd0": {
                    "check_and_disable_interrupts": 1,
                    "check_and_disable_ir_qinterrupts": 1,
                    "check_interrupt_state": 1,
                    "check_interrupt_status": 2,
                    "check_interrupts": 1,
                    "check_ir_qinterrupt_status": 2,
                    "check_ir_qinterrupts": 1,
                    "check_ir_qinterrupts_enabled": 1,
                    "check_irq_interrupts": 2,
                    "check_irq_interrupts_enabled": 1,
                    "check_irq_interrupts_status": 1,
                    "disable_and_check_interrupts": 1,
                    "disable_and_get_interrupt_state": 1,
                    "disable_and_get_interrupt_status": 1,
                    "disable_and_get_interrupts_state": 1,
                    "disable_and_get_irq_interrupts": 1,
                    "disable_interrupts_and_get_irq_state": 1,
                    "disable_irq_and_return_previous_state": 1,
                    "get_enabled_interrupts": 1,
                    "get_interrupt_status": 4,
                    "get_ir_qinterrupts_status": 1,
                    "get_irq_interrupt_state": 1,
                    "get_irq_interrupt_status": 2,
                    "get_irq_interrupts_status": 1
                },
                "bVar1": {
                    "is_current_mode_privileged": 3,
                    "is_privileged": 3,
                    "is_privileged_mode": 21
                },
                "disableIRQinterrupts": {
                    "disable_irq_interrupts": 1
                },
                "isCurrentModePrivileged": {
                    "check_current_mode": 1,
                    "check_current_mode_privileged": 1,
                    "check_if_current_mode_is_privileged": 1,
                    "is_current_mode_privileged": 1,
                    "is_privileged_mode": 1
                },
                "isIRQinterruptsEnabled": {
                    "are_irq_interrupts_enabled": 1,
                    "check_if_ir_qinterrupts_are_enabled": 1,
                    "check_ir_qinterrupts_enabled": 1,
                    "check_irq_enabled": 1,
                    "is_ir_qinterrupts_enabled": 1
                },
                "uVar2": {
                    "are_interrupts_enabled": 1,
                    "are_irq_interrupts_enabled": 1,
                    "enabled_interrupts": 1,
                    "interrupt_state": 2,
                    "interrupt_status": 5,
                    "interrupts_enabled": 9,
                    "interrupts_state": 1,
                    "irq_interrupts_enabled": 4,
                    "is_interrupts_enabled": 1,
                    "is_ir_qinterrupts_enabled": 1,
                    "previous_interrupt_state": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_000010d4",
                "FUN_00000e58",
                "FUN_000024bc",
                "FUN_00000f8c",
                "FUN_00000428",
                "FUN_00001c84",
                "FUN_00000f04",
                "FUN_00002434",
                "FUN_00000794"
            ],
            "code": "\nundefined4 get_irq_interrupt_status_00000cd0(void)\n\n{\n  bool is_privileged_mode;\n  undefined4 interrupts_enabled;\n  \n  interrupts_enabled = 0;\n  is_privileged_mode = (bool)is_privileged_mode();\n  if (is_privileged_mode) {\n    interrupts_enabled = is_ir_qinterrupts_enabled();\n  }\n  disable_irq_interrupts();\n  return interrupts_enabled;\n}\n\n",
            "current_name": "get_irq_interrupt_status_00000cd0",
            "entrypoint": "0x00000cd0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000cd0": "get_irq_interrupt_status_00000cd0",
                "bVar1": "is_privileged_mode",
                "disableIRQinterrupts": "disable_irq_interrupts",
                "isCurrentModePrivileged": "is_privileged_mode",
                "isIRQinterruptsEnabled": "is_ir_qinterrupts_enabled",
                "uVar2": "interrupts_enabled"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000cf0": {
            "additional_data": {
                "FUN_00000cf0": {
                    "check_interrupt_status": 2,
                    "check_interrupts_enabled": 1,
                    "check_ir_qinterrupt_status": 1,
                    "check_ir_qinterrupts": 6,
                    "check_ir_qinterrupts_enabled": 5,
                    "check_irq_interrups_enabled": 1,
                    "check_irq_interrupt_status": 1,
                    "check_irq_interrupts": 3,
                    "check_irq_interrupts_enabled": 3,
                    "check_irq_interrupts_status": 1,
                    "get_enabled_ir_qinterrupt": 1,
                    "get_enabled_irq_interrupts": 1,
                    "get_interrupt_status": 1,
                    "get_ir_qinterrupt_status": 1,
                    "get_ir_qinterrupts_status": 2,
                    "get_irq_interrupt_status": 1
                },
                "bVar1": {
                    "is_current_mode_privileged": 12,
                    "is_privileged": 2,
                    "is_privileged_mode": 15
                },
                "isCurrentModePrivileged": {
                    "check_current_mode_privileged": 2,
                    "get_current_mode": 1,
                    "is_mode_privileged": 1
                },
                "isIRQinterruptsEnabled": {
                    "are_interrupts_enabled": 1,
                    "check_if_ir_qinterrupts_enabled": 1,
                    "check_ir_qinterrupts_enabled": 1,
                    "is_irq_interrupts_enabled": 1
                },
                "uVar2": {
                    "interrupt_status": 1,
                    "interrupts_enabled": 20,
                    "interrupts_enabled_value": 1,
                    "is_enabled": 1,
                    "is_enabled_irq_interrupts": 1,
                    "is_interrupts_enabled": 1,
                    "is_ir_qinterrupts_enabled": 2,
                    "is_irq_interrups_enabled": 1,
                    "status": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00000930"
            ],
            "code": "\nundefined4 check_ir_qinterrupts_enabled_00000cf0(void)\n\n{\n  bool is_privileged_mode;\n  undefined4 interrupts_enabled;\n  \n  enableIRQinterrupts();\n  interrupts_enabled = 0;\n  is_privileged_mode = (bool)check_current_mode_privileged();\n  if (is_privileged_mode) {\n    interrupts_enabled = are_interrupts_enabled();\n  }\n  return interrupts_enabled;\n}\n\n",
            "current_name": "check_ir_qinterrupts_enabled_00000cf0",
            "entrypoint": "0x00000cf0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000cf0": "check_ir_qinterrupts_enabled_00000cf0",
                "bVar1": "is_privileged_mode",
                "isCurrentModePrivileged": "check_current_mode_privileged",
                "isIRQinterruptsEnabled": "are_interrupts_enabled",
                "uVar2": "interrupts_enabled"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000d0c": {
            "additional_data": {
                "FUN_00000d0c": {
                    "enable_interrupt": 1,
                    "enable_interrupts_if_mode_privileged": 1,
                    "enable_interrupts_if_privileged": 4,
                    "enable_interrupts_if_privileged_mode": 1,
                    "enable_interrupts_in_privileged_mode": 1,
                    "enable_ir_qinterrupts_if_needed": 8,
                    "enable_ir_qinterrupts_if_privileged": 7,
                    "enable_ir_qinterrupts_with_privilege_check": 1,
                    "enable_irq_interrupt_if_privileged": 1,
                    "enable_irq_interrupts_if_needed": 1,
                    "enable_irq_interrupts_if_privileged": 3,
                    "enable_irq_interrupts_in_privileged_mode": 1,
                    "enable_irq_interrupts_with_privilege_check": 1
                },
                "bVar1": {
                    "is_current_mode_privileged_flag": 1,
                    "is_privileged": 7,
                    "is_privileged_mode": 11
                },
                "enableIRQinterrupts": {
                    "": 1,
                    "enable_interrupts": 1,
                    "enable_ir_qinterrupts": 1,
                    "enable_irq_interrupts": 1,
                    "set_interrupts_enabled": 1,
                    "set_ir_qinterrupts_enabled": 1,
                    "toggle_irq_interrupts": 1
                },
                "isCurrentModePrivileged": {
                    "": 1,
                    "check_if_mode_privileged": 1,
                    "check_privilege": 1,
                    "check_privileged_mode": 3,
                    "is_current_mode_privileged": 1
                },
                "param_1": {
                    "flag": 1,
                    "flags": 3,
                    "input": 1,
                    "input_flag": 1,
                    "input_mask": 1,
                    "input_param": 1,
                    "input_value": 1,
                    "interrupt_bitmask": 2,
                    "interrupt_code": 1,
                    "interrupt_control_flag": 1,
                    "interrupt_flag": 9,
                    "interrupt_flags": 7,
                    "interrupt_option": 1,
                    "irq_control_flag": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_000010d4",
                "FUN_000024bc",
                "FUN_00000428",
                "FUN_00001c84",
                "FUN_00002434"
            ],
            "code": "\nvoid enable_ir_qinterrupts_if_needed_00000d0c(uint interrupt_flag)\n\n{\n  bool is_privileged_mode;\n  \n  is_privileged_mode = (bool)check_privileged_mode();\n  if (is_privileged_mode) {\n    enableIRQinterrupts((interrupt_flag & 1) == 1);\n  }\n  return;\n}\n\n",
            "current_name": "enable_ir_qinterrupts_if_needed_00000d0c",
            "entrypoint": "0x00000d0c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000d0c": "enable_ir_qinterrupts_if_needed_00000d0c",
                "bVar1": "is_privileged_mode",
                "isCurrentModePrivileged": "check_privileged_mode",
                "param_1": "interrupt_flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000d2a": {
            "additional_data": {
                "FUN_00000d2a": {
                    "get_current_exception_number": 3,
                    "get_current_exception_number_and_privileged_mode": 1,
                    "get_exception_number": 26,
                    "get_privileged_exception_number": 1
                },
                "bVar1": {
                    "is_current_mode_privileged": 1,
                    "is_privileged": 7,
                    "is_privileged_mode": 19
                },
                "getCurrentExceptionNumber": {
                    "fetch_exception_number": 2,
                    "get_current_exception": 1,
                    "get_current_exception_number": 5
                },
                "isCurrentModePrivileged": {
                    "check_privilege_mode": 1,
                    "is_current_mode_privileged": 5,
                    "is_privileged_mode": 4
                },
                "uVar2": {
                    "current_exception_number": 1,
                    "exception_number": 28
                }
            },
            "called": [],
            "calling": [
                "FUN_00000738"
            ],
            "code": "\nuint get_current_exception_number_and_privileged_mode_00000d2a(void)\n\n{\n  bool is_privileged_mode;\n  uint exception_number;\n  \n  exception_number = 0;\n  is_privileged_mode = (bool)is_current_mode_privileged();\n  if (is_privileged_mode) {\n    exception_number = get_current_exception_number();\n    exception_number = exception_number & 0x1f;\n  }\n  return exception_number;\n}\n\n",
            "current_name": "get_current_exception_number_and_privileged_mode_00000d2a",
            "entrypoint": "0x00000d2a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000d2a": "get_current_exception_number_and_privileged_mode_00000d2a",
                "bVar1": "is_privileged_mode",
                "getCurrentExceptionNumber": "get_current_exception_number",
                "isCurrentModePrivileged": "is_current_mode_privileged",
                "uVar2": "exception_number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000d44": {
            "additional_data": {
                "0x2000000": {
                    "constant": 1,
                    "constant_offset": 1,
                    "constant_value": 1,
                    "offset": 1
                },
                "0xf0000000": {
                    "mask": 1,
                    "mask1": 1
                },
                "0xfffff": {
                    "lower_mask": 1,
                    "mask2": 1
                },
                "FUN_00000d44": {
                    "calculate_final_value": 1,
                    "calculate_offset": 20,
                    "calculate_param_offset": 1,
                    "calculate_result": 5,
                    "calculate_shifted_sum": 1,
                    "calculate_updated_value": 1,
                    "calculate_value": 1,
                    "multiply_and_combine": 1
                },
                "param_1": {
                    "address": 2,
                    "argument_a": 1,
                    "base_address": 1,
                    "base_value": 1,
                    "input1": 1,
                    "input_number": 1,
                    "input_value": 20,
                    "input_value1": 1,
                    "num_a": 1,
                    "offset1": 1,
                    "value": 1
                },
                "param_2": {
                    "argument_b": 1,
                    "input2": 1,
                    "input_value2": 1,
                    "multiplier": 24,
                    "num_b": 1,
                    "offset": 2,
                    "offset2": 1
                },
                "param_3": {
                    "constant": 1,
                    "input_value3": 1,
                    "num_c": 1
                },
                "param_4": {
                    "input_value4": 1
                },
                "param_5": {
                    "input_value5": 1
                },
                "param_6": {
                    "input_value6": 1
                },
                "result": {
                    "offset": 1,
                    "output": 1,
                    "output_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00000d76"
            ],
            "code": "\nint calculate_param_offset_00000d44(uint input_value,int multiplier)\n\n{\n  return multiplier * 4 + (input_value & 0xf0000000 | (input_value & 0xfffff) << 5) + 0x2000000;\n}\n\n",
            "current_name": "calculate_param_offset_00000d44",
            "entrypoint": "0x00000d44",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000d44": "calculate_param_offset_00000d44",
                "param_1": "input_value",
                "param_2": "multiplier"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000d76": {
            "additional_data": {
                "FUN_00000d76": {
                    "clear_memory": 18,
                    "clear_value": 1,
                    "clear_value_in_memory": 1,
                    "initialize_memory": 4,
                    "initialize_pointer": 3,
                    "initialize_variable": 1,
                    "initialize_zero": 1,
                    "reset_memory": 1,
                    "set_return_value_to_zero": 1
                },
                "param_1": {
                    "address": 1,
                    "arg1": 2,
                    "data": 2,
                    "data_pointer": 1,
                    "input": 4,
                    "input1": 4,
                    "input_param": 3,
                    "input_param1": 1,
                    "input_parameter": 1,
                    "input_ptr": 1,
                    "input_size": 1,
                    "input_value": 5,
                    "num1": 1,
                    "param": 2,
                    "uint_value": 1,
                    "value": 1
                },
                "param_2": {
                    "arg2": 2,
                    "count": 1,
                    "flag": 6,
                    "flags": 1,
                    "input": 1,
                    "input2": 4,
                    "input_param2": 1,
                    "input_size": 1,
                    "int_value": 1,
                    "length": 4,
                    "num2": 1,
                    "output_param": 1,
                    "size": 4,
                    "size_in_bytes": 1,
                    "value": 2
                },
                "puVar1": {
                    "memory_pointer": 4,
                    "memory_ptr": 1,
                    "output_pointer": 3,
                    "output_ptr": 2,
                    "pointer": 2,
                    "pointer_to_uint_value": 1,
                    "ptr_result": 1,
                    "ptr_to_memory": 1,
                    "result": 3,
                    "result_pointer": 9,
                    "result_ptr": 3,
                    "return_pointer": 1
                }
            },
            "called": [
                "FUN_00000d44"
            ],
            "calling": [
                "FUN_00000d9c"
            ],
            "code": "\nvoid clear_value_in_memory_00000d76(undefined4 input_value,undefined flag)\n\n{\n  undefined4 *result_pointer;\n  \n  result_pointer = (undefined4 *)FUN_00000d44(input_value,flag);\n  *result_pointer = 0;\n  return;\n}\n\n",
            "current_name": "clear_value_in_memory_00000d76",
            "entrypoint": "0x00000d76",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000d76": "clear_value_in_memory_00000d76",
                "param_1": "input_value",
                "param_2": "flag",
                "puVar1": "result_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000d9c": {
            "additional_data": {
                "FUN_00000d76": {
                    "call_sub_function": 4,
                    "configure_device": 2,
                    "configure_hardware": 2,
                    "configure_peripheral": 3,
                    "configure_registers": 1,
                    "configure_system": 1,
                    "execute_command": 1,
                    "initialize_component": 1,
                    "initialize_io": 1,
                    "send_command": 1,
                    "send_data_to_peripheral": 1,
                    "set_component_value": 1,
                    "set_configuration": 4,
                    "set_hardware_configuration": 1,
                    "set_register": 1,
                    "set_register_value": 2,
                    "write_to_register": 1
                },
                "FUN_00000d9c": {
                    "initialize_component": 1,
                    "initialize_data": 1,
                    "initialize_device": 2,
                    "initialize_hardware": 10,
                    "initialize_peripheral": 2,
                    "initialize_registers": 1,
                    "initialize_system": 13,
                    "initiate_process": 1
                },
                "param_1": {
                    "address": 7,
                    "base_address": 4,
                    "command_address": 1,
                    "config_address": 1,
                    "config_data": 1,
                    "configuration_address": 1,
                    "device_address": 2,
                    "param": 1,
                    "peripheral_address": 1,
                    "register_address": 4
                },
                "param_2": {
                    "command_param": 1,
                    "config_value": 2,
                    "configuration_value": 2,
                    "data": 1,
                    "flag": 8,
                    "initial_value": 1,
                    "mode": 1,
                    "option": 1,
                    "param": 1,
                    "unused_parameter": 2,
                    "value": 3
                }
            },
            "called": [
                "FUN_00000d76"
            ],
            "calling": [
                "FUN_00000db0"
            ],
            "code": "\nvoid initialize_system_00000d9c(void)\n\n{\n  FUN_00000d76(0x40048040,0);\n  return;\n}\n\n",
            "current_name": "initialize_system_00000d9c",
            "entrypoint": "0x00000d9c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000d9c": "initialize_system_00000d9c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000db0": {
            "additional_data": {
                "FUN_00000d9c": {
                    "execute_task_a": 2,
                    "initialize": 1,
                    "initialize_module": 1,
                    "initialize_subcomponent": 2,
                    "initialize_subsystem": 1,
                    "initialize_subsystem_a": 2,
                    "perform_first_operation": 1,
                    "perform_first_task": 2,
                    "perform_initial_setup": 1,
                    "perform_initialization": 10,
                    "perform_preparation": 1,
                    "perform_preprocessing": 2,
                    "perform_step_one": 1,
                    "perform_task_1": 1,
                    "perform_task_a": 3
                },
                "FUN_00000db0": {
                    "execute_initial_setup": 1,
                    "execute_initialization": 1,
                    "execute_preliminary_tasks": 1,
                    "execute_setup": 1,
                    "execute_startup_routine": 1,
                    "execute_startup_tasks": 2,
                    "initialize": 3,
                    "initialize_application": 3,
                    "initialize_components": 3,
                    "initialize_program": 1,
                    "initialize_system": 14
                },
                "FUN_00000dcc": {
                    "configure_device": 2,
                    "configure_system": 1,
                    "execute_additional_tasks": 2,
                    "execute_operation": 1,
                    "execute_preparation": 1,
                    "execute_procedure": 1,
                    "execute_startup_code": 1,
                    "execute_task_b": 2,
                    "initialize_components": 1,
                    "initialize_maincomponent": 1,
                    "initialize_subcomponent_helper": 1,
                    "initialize_subsystem_b": 2,
                    "perform_actions": 1,
                    "perform_cleanup": 1,
                    "perform_configuration": 1,
                    "perform_initialization": 1,
                    "perform_second_operation": 1,
                    "perform_second_task": 2,
                    "perform_setup": 1,
                    "perform_step_two": 1,
                    "perform_task_2": 1,
                    "perform_task_b": 3,
                    "run_system_tests": 1,
                    "trigger_system_update": 1
                }
            },
            "called": [
                "FUN_00000d9c",
                "FUN_00000dcc"
            ],
            "calling": [
                "entry"
            ],
            "code": "\nvoid initialize_system_00000db0(void)\n\n{\n  FUN_00000dcc();\n  FUN_00000d9c();\n  return;\n}\n\n",
            "current_name": "initialize_system_00000db0",
            "entrypoint": "0x00000db0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000db0": "initialize_system_00000db0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000dc0": {
            "additional_data": {
                "FUN_00000cc0": {
                    "call_subfunction": 2,
                    "do_something": 2,
                    "execute_initialization": 4,
                    "execute_sub_function": 1,
                    "execute_subfunction": 2,
                    "initialize_sub_system": 1,
                    "initialize_subsystem": 2,
                    "initialize_system": 1,
                    "perform_initialization": 11,
                    "perform_preparations": 1,
                    "perform_setup": 1,
                    "reinitialize_system": 1,
                    "start_initialization": 1,
                    "sub_function": 1
                },
                "FUN_00000cc0_RESULT": {
                    "subfunction_result": 1
                },
                "FUN_00000dc0": {
                    "execute_initialization": 2,
                    "execute_setup": 1,
                    "initialize": 4,
                    "initialize_and_execute": 1,
                    "initialize_application": 6,
                    "initialize_program": 3,
                    "initialize_system": 13,
                    "main_function": 1
                }
            },
            "called": [
                "FUN_00000cc0"
            ],
            "calling": [],
            "code": "\nvoid initialize_system_00000dc0(void)\n\n{\n  FUN_00000cc0();\n  return;\n}\n\n",
            "current_name": "initialize_system_00000dc0",
            "entrypoint": "0x00000dc0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000dc0": "initialize_system_00000dc0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000dcc": {
            "additional_data": {
                "": {
                    "": 5
                },
                "FUN_00000dcc": {
                    "initialize_constants": 1,
                    "initialize_data": 13,
                    "initialize_memory": 13,
                    "initialize_registers": 2,
                    "initialize_variables": 1,
                    "set_initial_values": 1
                },
                "_": {
                    "": 1,
                    "temp": 1,
                    "temporary_variable": 1
                },
                "_40052000": {
                    "data_constant": 1
                },
                "_4005200e": {
                    "address_constant": 1
                },
                "_DAT_40052000": {
                    "config_value": 1,
                    "control_register": 1,
                    "data": 1,
                    "data2": 1,
                    "data_flag": 1,
                    "data_index": 1,
                    "data_offset": 1,
                    "data_register2": 1,
                    "data_size": 1,
                    "data_value": 4,
                    "data_value2": 3,
                    "flag": 1,
                    "memory_address2": 1,
                    "memory_value": 2,
                    "memory_value2": 1,
                    "sensor_id": 1,
                    "threshold": 1,
                    "value": 1,
                    "value_to_set": 1
                },
                "_DAT_4005200e": {
                    "constant": 1,
                    "data1": 1,
                    "data_address": 3,
                    "data_register1": 1,
                    "data_value": 4,
                    "data_value1": 3,
                    "initial_value": 2,
                    "memory_address": 2,
                    "memory_address1": 1,
                    "memory_pointer": 1,
                    "memory_value1": 1,
                    "port_address": 1,
                    "register_value": 1,
                    "start_address": 1,
                    "starting_value": 1,
                    "temperature_value": 1
                },
                "_FUN_00000dcc_00": {
                    "": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00000db0"
            ],
            "code": "\n\n\nvoid initialize_constants_00000dcc(void)\n\n{\n  _DATaddress_constant = 0xd928;\n  _DATdata_constant = 0xd2;\n  return;\n}\n\n",
            "current_name": "initialize_constants_00000dcc",
            "entrypoint": "0x00000dcc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000dcc": "initialize_constants_00000dcc",
                "_40052000": "data_constant",
                "_4005200e": "address_constant"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000df4": {
            "additional_data": {
                "FUN_00000df4": {
                    "execute_initial_process": 1,
                    "execute_initial_setup": 1,
                    "execute_initialization": 1,
                    "execute_operation": 1,
                    "initialize": 1,
                    "initialize_communication": 4,
                    "initialize_component": 1,
                    "initialize_device": 10,
                    "initialize_function": 1,
                    "initialize_hardware": 3,
                    "initialize_peripheral": 2,
                    "initialize_system": 3,
                    "initiate_data_transmission": 1,
                    "initiate_process": 1
                },
                "FUN_000013b8": {
                    "call_sub_function": 2,
                    "configure_device": 4,
                    "execute_operation": 1,
                    "execute_sub_function": 1,
                    "initialize_data": 1,
                    "perform_initial_configuration": 1,
                    "perform_initialization": 2,
                    "perform_operation": 3,
                    "perform_peripheral_operation": 1,
                    "perform_sub_function": 1,
                    "perform_sub_process": 1,
                    "send_data": 4,
                    "send_device_command": 1,
                    "set_device_parameters": 2,
                    "sub_function": 4
                },
                "param_1": {
                    "arg1": 3,
                    "arg_1": 1,
                    "argument1": 1,
                    "command_param1": 1,
                    "configure_option": 1,
                    "count": 3,
                    "data1": 1,
                    "data_type": 1,
                    "device_id": 3,
                    "index": 1,
                    "input1": 1,
                    "int_param": 1,
                    "mode": 1,
                    "operation_type": 4,
                    "param1": 2,
                    "status": 1,
                    "sub_function_param1": 1,
                    "sub_process_parameter1": 1,
                    "unused_param": 1
                },
                "param_2": {
                    "address": 4,
                    "arg2": 3,
                    "arg_2": 1,
                    "argument2": 1,
                    "command_param2": 1,
                    "config_1": 1,
                    "data2": 1,
                    "data_pointer": 1,
                    "data_size": 1,
                    "input1": 1,
                    "input2": 1,
                    "memory_address": 1,
                    "operation_param1": 1,
                    "param1": 1,
                    "param2": 2,
                    "param_2": 2,
                    "parameter1": 1,
                    "start_address": 1,
                    "sub_function_param2": 1,
                    "sub_process_parameter2": 1,
                    "value1": 1,
                    "var1": 1
                },
                "param_3": {
                    "arg3": 3,
                    "arg_3": 1,
                    "argument3": 1,
                    "command_param3": 1,
                    "config_2": 1,
                    "data3": 1,
                    "data_1": 1,
                    "data_size": 2,
                    "data_value": 1,
                    "input2": 1,
                    "input3": 1,
                    "operation_param2": 1,
                    "param2": 1,
                    "param3": 2,
                    "param_3": 2,
                    "parameter2": 1,
                    "sub_function_param3": 1,
                    "sub_process_parameter3": 1,
                    "value": 1,
                    "value1": 2,
                    "value2": 1,
                    "value_1": 1,
                    "var2": 1
                },
                "param_4": {
                    "arg4": 3,
                    "arg_4": 1,
                    "argument4": 1,
                    "command_param4": 1,
                    "config": 1,
                    "config_3": 1,
                    "data4": 1,
                    "data_2": 1,
                    "data_address": 1,
                    "device_config": 1,
                    "input3": 1,
                    "input4": 1,
                    "operation_param3": 1,
                    "param3": 1,
                    "param4": 2,
                    "param_4": 2,
                    "parameter3": 1,
                    "status": 1,
                    "sub_function_param4": 1,
                    "sub_process_parameter4": 1,
                    "value2": 2,
                    "value3": 1,
                    "value_2": 1,
                    "var3": 1
                }
            },
            "called": [
                "FUN_000013b8"
            ],
            "calling": [
                "FUN_00000410"
            ],
            "code": "\nvoid initialize_device_00000df4(void)\n\n{\n  FUN_000013b8(0,0x1c200,0x12b5,0x1fff0204);\n  return;\n}\n\n",
            "current_name": "initialize_device_00000df4",
            "entrypoint": "0x00000df4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000df4": "initialize_device_00000df4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000e14": {
            "additional_data": {
                "FUN_00000e14": {
                    "call_another_function": 1,
                    "decode_and_process_data": 1,
                    "execute_function": 1,
                    "extract_and_return_data": 3,
                    "extract_data": 6,
                    "extract_data_from_binary": 1,
                    "initialize": 1,
                    "process_data": 7,
                    "reverse_binary_operation": 1,
                    "reverse_something": 1
                },
                "FUN_000012e2": {
                    "perform_operation": 1,
                    "retrieve_data": 1,
                    "reverse": 1,
                    "reverse_operation": 1
                },
                "param_1": {
                    "data": 2,
                    "data_1": 1,
                    "data_param": 1,
                    "data_param_1": 1,
                    "data_ptr": 1,
                    "data_source": 1,
                    "data_value": 1,
                    "input": 1,
                    "input1": 8,
                    "input_1": 3,
                    "input_param": 8,
                    "input_parameter1": 1,
                    "input_value": 1,
                    "input_value1": 1
                },
                "param_2": {
                    "data_2": 1,
                    "data_destination": 1,
                    "data_param": 1,
                    "data_param_2": 1,
                    "input2": 8,
                    "input_2": 3,
                    "input_parameter2": 1,
                    "input_value2": 1,
                    "length": 2,
                    "output": 1,
                    "output_param": 8,
                    "output_value": 1,
                    "size": 1,
                    "size_param": 1
                },
                "param_3": {
                    "index_param": 1
                },
                "uVar1": {
                    "result": 11,
                    "return_value": 5
                }
            },
            "called": [
                "FUN_000012e2"
            ],
            "calling": [
                "FUN_00000490"
            ],
            "code": "\nundefined4 extract_and_return_data_00000e14(undefined4 input_param,undefined4 output_param)\n\n{\n  undefined4 result;\n  \n  result = FUN_000012e2(0x1fff0204,input_param,output_param);\n  return result;\n}\n\n",
            "current_name": "extract_and_return_data_00000e14",
            "entrypoint": "0x00000e14",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000e14": "extract_and_return_data_00000e14",
                "param_1": "input_param",
                "param_2": "output_param",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000e38": {
            "additional_data": {
                "FUN_00000e38": {
                    "execute_and_return": 1,
                    "execute_and_return_param2": 3,
                    "execute_function": 8,
                    "execute_function_with_params": 1,
                    "execute_operation": 1,
                    "execute_process": 1,
                    "extract_and_return_param2": 1,
                    "extracted_function": 1,
                    "process_and_return": 1,
                    "process_and_return_param": 1,
                    "process_and_return_second_param": 1,
                    "process_data": 7,
                    "update_param": 1,
                    "update_param2": 1
                },
                "FUN_000015d0": {
                    "call_sub_function": 5,
                    "call_sub_function_with_params": 1,
                    "call_subfunction": 2,
                    "compute_result": 1,
                    "execute_sub_function": 1,
                    "execute_subfunction": 1,
                    "execute_with_params": 1,
                    "handle_data": 2,
                    "invoke_sub_function": 2,
                    "perform_action": 1,
                    "perform_operation": 3,
                    "perform_task": 1,
                    "process_data": 4,
                    "process_subfunction": 1
                },
                "param_1": {
                    "arg1": 1,
                    "config_param1": 1,
                    "in_param": 1,
                    "initial_value": 1,
                    "input": 1,
                    "input1": 12,
                    "input_1": 1,
                    "input_1_compute": 1,
                    "input_param": 2,
                    "input_param1": 1,
                    "input_parameter": 1,
                    "input_value": 1,
                    "param1": 3,
                    "process_handle": 1,
                    "sub_param_1": 1,
                    "subfunction_param_1": 1,
                    "unused_param1": 1
                },
                "param_2": {
                    "additional_param": 1,
                    "arg2": 1,
                    "config_param2": 1,
                    "final_value": 1,
                    "input2": 8,
                    "input_2": 1,
                    "input_2_compute": 1,
                    "modified_param2": 1,
                    "output": 5,
                    "output_param": 3,
                    "output_parameter": 1,
                    "output_value": 1,
                    "param2": 3,
                    "result": 1,
                    "sub_param_2": 1,
                    "subfunction_param_2": 1
                },
                "param_3": {
                    "data": 1,
                    "data_param": 2,
                    "input_3_compute": 1,
                    "param3": 3,
                    "parameter3": 2,
                    "some_parameter": 1,
                    "sub_function_param": 1,
                    "sub_param_3": 1,
                    "subfunction_param3": 1,
                    "subfunction_param_3": 2,
                    "value": 2
                }
            },
            "called": [
                "FUN_000015d0"
            ],
            "calling": [
                "FUN_00004dee"
            ],
            "code": "\nundefined4 execute_function_with_params_00000e38(undefined4 input1,undefined4 input2)\n\n{\n  FUN_000015d0(0,input1,input2);\n  return input2;\n}\n\n",
            "current_name": "execute_function_with_params_00000e38",
            "entrypoint": "0x00000e38",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000e38": "execute_function_with_params_00000e38",
                "param_1": "input1",
                "param_2": "input2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000e58": {
            "additional_data": {
                "FUN_00000cd0": {
                    "execute_function": 1,
                    "execute_preparation": 1,
                    "initialize": 16,
                    "initialize_function": 2,
                    "initialize_resources": 2,
                    "initialize_stuff": 1,
                    "initialize_subsystem": 1,
                    "initialize_system": 6,
                    "sub_function": 1
                },
                "FUN_00000e58": {
                    "endless_loop": 1,
                    "infinite_loop": 13,
                    "run_infinite_loop": 17
                },
                "FUN_00000e58_var1": {
                    "loop_counter": 1
                }
            },
            "called": [
                "FUN_00000cd0"
            ],
            "calling": [
                "FUN_00000f04"
            ],
            "code": "\nvoid run_infinite_loop_00000e58(void)\n\n{\n  FUN_00000cd0();\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "run_infinite_loop_00000e58",
            "entrypoint": "0x00000e58",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000e58": "run_infinite_loop_00000e58"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000e64": {
            "additional_data": {
                "0x200": {
                    "memory_protection_flag": 1
                },
                "0x2055": {
                    "region_c": 1
                },
                "0x2056": {
                    "region_a": 1
                },
                "0x511a": {
                    "region_b": 1
                },
                "0xfefff8ff": {
                    "memory_permission_mask": 1
                },
                "FUN_00000e64": {
                    "configure_device": 1,
                    "configure_hardware": 1,
                    "configure_peripherals": 1,
                    "enable_interrupts": 1,
                    "enable_memory_protection": 1,
                    "enable_peripheral_access": 2,
                    "initialize": 1,
                    "initialize_configuration": 1,
                    "initialize_device": 4,
                    "initialize_hardware": 10,
                    "initialize_peripheral": 5,
                    "initialize_system": 3
                },
                "FUN_00001274": {
                    "execute_initialization_routine": 1,
                    "init_process": 1,
                    "initialize": 2,
                    "initialize_device": 2,
                    "initialize_driver": 1,
                    "initialize_hardware": 1,
                    "initialize_peripheral": 1,
                    "initialize_subsystem": 1,
                    "initialize_system": 4,
                    "perform_additional_setup": 1,
                    "perform_initialization": 11,
                    "perform_setup": 1,
                    "perform_system_check": 1,
                    "perform_system_init": 1,
                    "perform_task": 1,
                    "preliminary_setup": 1
                },
                "FUN_00001eea": {
                    "configure_device": 5,
                    "configure_interrupt": 1,
                    "configure_module": 2,
                    "configure_periph": 1,
                    "configure_peripheral": 6,
                    "configure_port": 2,
                    "configure_register": 2,
                    "configure_transmission": 1,
                    "initialize_component": 1,
                    "set_address": 1,
                    "set_config": 1,
                    "set_configuration": 3,
                    "set_memory_permission": 1,
                    "set_mode": 2,
                    "set_peripheral_config": 1,
                    "set_register": 1
                },
                "FUN_00001ff6": {
                    "activate_device": 1,
                    "activate_feature": 2,
                    "apply_config": 1,
                    "apply_configuration": 1,
                    "configure_component": 1,
                    "configure_device": 1,
                    "configure_mode": 1,
                    "enable_feature": 8,
                    "enable_interrupt": 4,
                    "enable_periph": 1,
                    "enable_peripheral": 1,
                    "enable_port": 1,
                    "enable_transmission": 1,
                    "execute_memory_permission": 1,
                    "execute_operation": 1,
                    "initialize_peripheral": 1,
                    "reset_peripheral": 1,
                    "set_register_bits": 1,
                    "set_register_value": 1,
                    "trigger_interrupt": 1
                },
                "_DAT_40048038": {
                    "control_register": 1,
                    "hardware_status": 1
                },
                "_DAT_40049048": {
                    "component_configuration": 1,
                    "system_config": 1
                },
                "param_1": {
                    "address": 1,
                    "component_id": 1,
                    "device_code": 1,
                    "interrupt_type": 1,
                    "port_number": 1,
                    "value": 1
                },
                "param_2": {
                    "config_value": 1,
                    "configuration": 1,
                    "device_flag": 1,
                    "flags": 1,
                    "interrupt_priority": 1,
                    "mask": 1
                }
            },
            "called": [
                "FUN_00001eea",
                "FUN_00001ff6",
                "FUN_00001274"
            ],
            "calling": [
                "entry"
            ],
            "code": "\n\n\nvoid initialize_hardware_00000e64(void)\n\n{\n  _DAT_40048038 = _DAT_40048038 | 0x200;\n  _DAT_40049048 = _DAT_40049048 & 0xfefff8ff;\n  FUN_00001274();\n  FUN_00001eea(0x2056,0x80);\n  FUN_00001eea(0x511a,0x80);\n  FUN_00001eea(0x2055,0x80);\n  FUN_00001ff6(0x2056);\n  FUN_00001ff6(0x511a);\n  FUN_00001ff6(0x2055);\n  return;\n}\n\n",
            "current_name": "initialize_hardware_00000e64",
            "entrypoint": "0x00000e64",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000e64": "initialize_hardware_00000e64"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000ed8": {
            "additional_data": {
                "FUN_00000ed8": {
                    "execute_main_function": 1,
                    "extract_data_from_binary": 1,
                    "initialize_application": 1,
                    "initialize_data": 27,
                    "initialize_data_structures": 1
                },
                "FUN_00004c84": {
                    "call_sub_function": 1,
                    "execute_sub_function": 2,
                    "process_binary_data": 1,
                    "process_data": 17,
                    "sub_function": 1,
                    "update_data": 1
                },
                "in_lr": {
                    "input_link_register": 1,
                    "link_register": 7,
                    "lr": 1,
                    "lr_register": 1,
                    "return_address": 2,
                    "reuse_value": 1,
                    "stack_pointer": 1
                },
                "param_1": {
                    "data": 1,
                    "data_address": 1,
                    "data_pointer": 8,
                    "input_data": 1
                },
                "param_2": {
                    "additional_param1": 1,
                    "in_lr": 4,
                    "link_register": 1,
                    "lr": 1,
                    "lr_value": 2,
                    "return_address": 2
                },
                "param_3": {
                    "additional_param2": 1,
                    "param_3": 1,
                    "parameter1": 1,
                    "unused_param3": 1
                },
                "param_4": {
                    "additional_param3": 1,
                    "param_4": 1,
                    "parameter2": 1,
                    "unused_param4": 1
                }
            },
            "called": [
                "FUN_00004c84"
            ],
            "calling": [
                "FUN_00000f04"
            ],
            "code": "\nvoid initialize_data_structures_00000ed8(void)\n\n{\n  undefined4 link_register;\n  \n  FUN_00004c84(&DAT_00006f58,link_register);\n  return;\n}\n\n",
            "current_name": "initialize_data_structures_00000ed8",
            "entrypoint": "0x00000ed8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000ed8": "initialize_data_structures_00000ed8",
                "in_lr": "link_register"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000ef8": {
            "called": [],
            "calling": [
                "FUN_00000f04"
            ],
            "code": "\nvoid FUNC_00000ef8(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00000ef8",
            "entrypoint": "0x00000ef8",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00000ef8": "FUNC_00000ef8"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_00000f04": {
            "additional_data": {
                "DAT_00006f78": {
                    "halt_message": 2,
                    "message": 1,
                    "string_constant": 1
                },
                "DAT_1fff0468": {
                    "cleanup_flag": 1,
                    "has_panic_occurred": 1,
                    "is_panic": 1,
                    "is_panic_initialized": 3,
                    "kernel_panic_flag": 1,
                    "panic_flag": 3
                },
                "FUNCTION_00002400": {
                    "perform_task2": 1
                },
                "FUNC_00000ef8": {
                    "additional_function": 1,
                    "another_operation": 1,
                    "do_something2": 1,
                    "execute_additional_actions": 1,
                    "execute_function": 1,
                    "execute_kernel": 1,
                    "execute_post_initialization": 1,
                    "execute_task": 1,
                    "execute_task_c": 1,
                    "finalize_execution": 1,
                    "function2": 1,
                    "function_3": 1,
                    "function_three": 1,
                    "function_two": 1,
                    "functional_logic": 1,
                    "initialize_components": 1,
                    "initialize_something": 1,
                    "perform_action": 3,
                    "perform_action_a": 1,
                    "perform_another_operation": 1,
                    "perform_checks": 1,
                    "perform_cleanup": 1,
                    "perform_task2": 1,
                    "perform_task3": 1,
                    "perform_task4": 1,
                    "reverse_something": 1
                },
                "FUNC_00002400": {
                    "another_operation": 1,
                    "cleanup_system": 1,
                    "do_something": 2,
                    "do_something4": 1,
                    "do_something_else": 1,
                    "execute_task": 1,
                    "execute_task2": 1,
                    "execute_task_two": 1,
                    "function4": 1,
                    "function_5": 1,
                    "handle_interrupts": 1,
                    "initialize_hardware": 1,
                    "initialize_system": 1,
                    "perform_action_a": 1,
                    "perform_action_b": 1,
                    "perform_another_operation": 1,
                    "perform_checks": 1,
                    "perform_system_check": 2,
                    "run_system": 1,
                    "second_step": 1,
                    "setup_system": 1
                },
                "FUN_00000cd0": {
                    "cleanup": 1,
                    "cleanup2": 1,
                    "cleanup_2": 1,
                    "do_something": 6,
                    "do_something1": 1,
                    "execute_task": 1,
                    "execute_task_a": 1,
                    "first_step": 1,
                    "function1": 1,
                    "function_2": 1,
                    "function_one": 2,
                    "init_kernel": 1,
                    "initialize": 3,
                    "initialize_device": 1,
                    "perform_extra_tasks": 1,
                    "perform_operation": 1,
                    "perform_task1": 3,
                    "process_data": 1
                },
                "FUN_00000e58": {
                    "do_something": 1,
                    "do_something3": 1,
                    "do_something_else": 1,
                    "execute_task1": 1,
                    "execute_task_one": 1,
                    "execute_tasks": 1,
                    "fourth_step": 1,
                    "function3": 1,
                    "function_4": 1,
                    "function_three": 1,
                    "initialize": 2,
                    "initialize_kernel": 1,
                    "initialize_something": 1,
                    "initialize_system": 9,
                    "perform_additional_tasks": 1,
                    "perform_initialization": 1,
                    "perform_task": 1,
                    "pre_execution_setup": 1,
                    "some_operation": 1
                },
                "FUN_00000ed8": {
                    "handle_error": 1,
                    "handle_exception": 6,
                    "handle_interrupt": 1,
                    "handle_kernel_exception": 1,
                    "handle_panic": 2,
                    "handle_panic03": 1,
                    "handle_panic_type3": 1,
                    "handle_panic_type_3": 2,
                    "handle_special_case": 1,
                    "handle_special_panic": 1,
                    "perform_action_c": 1,
                    "perform_cleanup": 2,
                    "recover_from_panic": 5,
                    "recover_kernel": 1,
                    "recovery_procedure": 1,
                    "special_case_handler": 1
                },
                "FUN_00000f04": {
                    "check_and_panic": 1,
                    "handle_kernel_panic": 21,
                    "handle_panic": 4,
                    "kernel_panic": 1,
                    "kernel_panic_handler": 4
                },
                "FUN_0000211c": {
                    "additional_cleanup": 1,
                    "cleanup": 6,
                    "cleanup1": 1,
                    "cleanup_1": 1,
                    "cleanup_before_exit": 1,
                    "cleanup_before_print": 1,
                    "cleanup_resources": 1,
                    "cleanup_system": 1,
                    "execute_post_cleanup": 1,
                    "execute_task_three": 1,
                    "finalize_execution": 1,
                    "function_1": 1,
                    "handle_cleanup": 1,
                    "log_error": 1,
                    "perform_action_b": 1,
                    "perform_cleanup": 4,
                    "print_separator": 1,
                    "reset_system": 1,
                    "shutdown_system": 1
                },
                "FUN_000023a4": {
                    "cleanup_3": 1,
                    "configure_system": 1,
                    "do_something5": 1,
                    "execute_task_b": 1,
                    "finalize_initialization": 1,
                    "function5": 1,
                    "function_6": 1,
                    "function_two": 1,
                    "get_configuration": 1,
                    "get_info": 1,
                    "get_result": 1,
                    "get_something": 1,
                    "get_status": 1,
                    "get_version": 3,
                    "initialize": 1,
                    "initialize_components": 1,
                    "initialize_hardware": 1,
                    "initialize_module": 1,
                    "perform_task2": 1,
                    "perform_task3": 1,
                    "print_system_info": 1,
                    "set_flags": 1,
                    "third_step": 1,
                    "yet_another_operation": 1
                },
                "FUN_00002400": {
                    "do_something": 1,
                    "execute_function": 1
                },
                "FUN_00004c84": {
                    "print_error": 2,
                    "print_error_message": 3,
                    "print_formatted": 1,
                    "print_formatted_message": 1,
                    "print_formatted_string": 1,
                    "print_kernel_panic_message": 1,
                    "print_message": 17,
                    "print_message2": 1,
                    "print_string": 1
                },
                "FUN_00004c84_2": {
                    "print_panic_message": 1,
                    "print_string2": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "jump_table": 10,
                    "jumptable": 1,
                    "jumptable_function": 1,
                    "jumptable_ptr": 1
                },
                "local_10": {
                    "error_desc": 1,
                    "error_message_copy": 1,
                    "error_message_length": 1,
                    "error_message_param": 1,
                    "formatted_message": 1,
                    "input_int_copy": 1,
                    "local_variable_1": 1,
                    "message": 8,
                    "message_address": 1,
                    "message_buffer": 1,
                    "message_param": 2,
                    "message_ptr": 1,
                    "msg_ptr": 1,
                    "panic_message_copy": 4,
                    "param_2": 1,
                    "param_2_copy": 1
                },
                "local_9": {
                    "code": 5,
                    "error_code_copy": 1,
                    "error_type": 1,
                    "error_type_param": 1,
                    "input_char_copy": 1,
                    "local_variable_2": 1,
                    "panic_char": 2,
                    "panic_char_copy": 1,
                    "panic_type_char": 1,
                    "panic_type_copy": 5,
                    "param_1": 1,
                    "trigger": 1,
                    "type": 5,
                    "type_ptr": 1
                },
                "param_1": {
                    "error_code": 1,
                    "error_type": 3,
                    "input_char": 1,
                    "panic_char": 1,
                    "panic_code": 9,
                    "panic_trigger": 1,
                    "panic_type": 14
                },
                "param_2": {
                    "error_desc": 1,
                    "error_message": 5,
                    "input_int": 1,
                    "panic_message": 22,
                    "panic_msg": 1
                },
                "uStack_18": {
                    "stack_18": 1,
                    "stack_frame": 1,
                    "stack_parameter": 1,
                    "stack_pointer": 1,
                    "stack_var": 3,
                    "stack_variable": 5,
                    "stack_variable_1": 1
                }
            },
            "called": [
                "FUN_00000e58",
                "FUN_00004c84",
                "FUN_00002400",
                "FUN_0000211c",
                "FUN_00000ed8",
                "FUN_00000cd0",
                "FUN_000023a4",
                "FUN_00000ef8"
            ],
            "calling": [
                "FUN_00001034",
                "FUN_00000fec",
                "FUN_00003ec4",
                "FUN_000013b8",
                "FUN_00000cc0",
                "FUN_00000a30"
            ],
            "code": "\nvoid handle_kernel_panic_00000f04(char panic_type,undefined4 panic_message)\n\n{\n  undefined4 stack_variable;\n  code *jump_table;\n  undefined4 message;\n  char panic_type_copy;\n  \n  message = panic_message;\n  panic_type_copy = panic_type;\n  if (DAT_1fff0468 == 0) {\n    DAT_1fff0468 = 1;\n    if (panic_type == '\\x03') {\n      FUN_00000ed8();\n    }\n    FUN_00004c84(\"*** RIOT kernel panic:\\n%s\\n\\n\",message);\n    FUN_0000211c();\n    FUN_00004c84(&DAT_00006f78);\n    FUN_00004c84(\"*** halted.\\n\\n\");\n  }\n  FUN_00000cd0();\n  FUNC_00000ef8();\n  jump_table = (code *)0xf4d;\n  FUN_00000e58();\n  stack_variable = (int)&stack_variable + 1;\n  FUNC_00002400();\n  FUN_00004c84(\"main(): This is RIOT! (Version: 2018.04-vm-HEAD)\\n\");\n  FUN_000023a4();\n                    /* WARNING: Could not recover jumptable at 0x00000f7a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)(0);\n  return;\n}\n\n",
            "current_name": "handle_kernel_panic_00000f04",
            "entrypoint": "0x00000f04",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000f04": "handle_kernel_panic_00000f04",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "local_10": "message",
                "local_9": "panic_type_copy",
                "param_1": "panic_type",
                "param_2": "panic_message",
                "uStack_18": "stack_variable"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000f8c": {
            "additional_data": {
                "DAT_1fff046c": {
                    "data_2": 1,
                    "data_pointer2": 1
                },
                "DAT_1fff0a6c": {
                    "data_1": 1,
                    "data_pointer1": 1
                },
                "FUN_00000930": {
                    "get_bit": 1,
                    "get_bit_mask": 1,
                    "get_bit_shift_value": 1,
                    "get_bit_value": 1,
                    "get_first_bit_set": 1,
                    "get_high_bit_value": 1,
                    "get_high_bits": 1,
                    "get_highest_bit_index": 1,
                    "get_highest_bit_set": 2,
                    "get_initial_value": 3,
                    "get_mask": 1,
                    "get_msb": 1,
                    "get_random_number": 1,
                    "get_random_value": 1,
                    "get_shifted_value": 4,
                    "get_value": 1
                },
                "FUN_00000cd0": {
                    "clear_memory": 1,
                    "get_data": 1,
                    "get_initial_value": 1,
                    "get_relocated_value": 1,
                    "initialize": 1,
                    "initialize_data": 9,
                    "initialize_elf_relocation": 1,
                    "initialize_function": 1,
                    "initialize_library": 1,
                    "initialize_other_data": 1,
                    "initialize_value": 1
                },
                "FUN_00000f8c": {
                    "initialize": 1,
                    "initialize_array": 1,
                    "initialize_data": 4,
                    "initialize_data_structures": 2,
                    "initialize_function": 4,
                    "initialize_memory": 14,
                    "initialize_memory_block": 1,
                    "initialize_memory_layout": 1,
                    "initialize_messaging_system": 1,
                    "initialize_variables": 1
                },
                "FUN_000010d4": {
                    "configure_buffer": 1,
                    "configure_memory": 1,
                    "copy_data": 3,
                    "copy_data_to_memory": 3,
                    "copy_memory": 2,
                    "fill_array_with_values": 1,
                    "initialize_block": 1,
                    "initialize_data": 2,
                    "initialize_memory_segment": 1,
                    "load_data": 1,
                    "perform_action": 1,
                    "perform_operation": 1,
                    "process_data": 2,
                    "set_memory": 1,
                    "write_memory": 1
                },
                "iStack_24": {
                    "index1": 1,
                    "relocation_offset": 1,
                    "shift": 1,
                    "shift_value": 1,
                    "shifted_loop_index": 1,
                    "shifted_offset": 3,
                    "shifted_rel_count": 1,
                    "shifted_value": 8,
                    "shifted_value2": 1,
                    "stack_value1": 1,
                    "stack_var": 1,
                    "stack_var_1": 1,
                    "stack_variable1": 1
                },
                "local_10": {
                    "data_offset": 1,
                    "local_value": 1,
                    "local_variable": 1,
                    "memory_address": 1,
                    "memory_offset": 1,
                    "offset": 3,
                    "offset_1": 1,
                    "offset_value": 1,
                    "parameter3": 1,
                    "parameter_c": 1,
                    "r_info": 1,
                    "rel_info": 1,
                    "rel_offset": 1,
                    "relocation_data": 1,
                    "relocation_info": 1,
                    "relocation_offset": 1,
                    "variable1": 1
                },
                "local_14": {
                    "constant_2": 1,
                    "constant_value3": 1,
                    "fill_value2": 1,
                    "index": 1,
                    "offset_2": 1,
                    "parameter2": 1,
                    "parameter_b": 1,
                    "rel_size": 1,
                    "relocation_value": 1,
                    "start": 1,
                    "temp_value1": 1,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "temporary_var1": 1,
                    "unused1": 1,
                    "value2": 2,
                    "variable2": 1,
                    "zero_value1": 1
                },
                "local_18": {
                    "constant_1": 1,
                    "constant_value2": 1,
                    "end": 1,
                    "fill_value1": 1,
                    "offset_3": 1,
                    "parameter1": 1,
                    "parameter_a": 1,
                    "rel_info_count": 1,
                    "relocated_bit_mask": 1,
                    "temp_value2": 1,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temporary_var2": 1,
                    "unused2": 1,
                    "value": 1,
                    "value1": 2,
                    "variable3": 1,
                    "zero_value2": 1
                },
                "param_1": {
                    "block_pointer": 1
                },
                "param_2": {
                    "block_size": 1
                },
                "param_3": {
                    "parameter3": 1
                },
                "param_4": {
                    "parameter4": 1
                },
                "piStack_20": {
                    "index2": 1,
                    "offset_pointer": 1,
                    "pointer_to_loop_index": 1,
                    "pointer_to_shifted_offset": 1,
                    "pointer_to_shifted_rel_count": 1,
                    "pointer_to_shifted_value": 2,
                    "pointer_to_stack_value": 1,
                    "ptr_stack": 1,
                    "ptr_to_offset": 1,
                    "relocation_offset_ptr": 1,
                    "shift_address": 1,
                    "shift_pointer": 1,
                    "shifted_pointer": 3,
                    "shifted_value2_ptr": 1,
                    "shifted_value_pointer": 2,
                    "shifted_value_ptr": 1,
                    "stack_pointer": 1,
                    "stack_variable2": 1
                },
                "puVar2": {
                    "array_pointer": 2,
                    "array_ptr": 1,
                    "data_pointer": 1,
                    "mem_pointer": 1,
                    "memory_pointer": 2,
                    "pointer": 6,
                    "pointer_array": 1,
                    "pointer_to_shifted_value2": 1,
                    "pointer_to_value": 2,
                    "ptr_operand": 1,
                    "ptr_to_memory": 1,
                    "relocation_ptr": 1,
                    "target_array": 1
                },
                "uStack_1c": {
                    "assertion_value": 1,
                    "constant": 2,
                    "constant_value": 11,
                    "initial_value": 2,
                    "magic_number": 1,
                    "stack_value": 1,
                    "stack_var_2": 1,
                    "temp_var1": 1
                },
                "uVar1": {
                    "bit_shift_value": 1,
                    "bit_value": 1,
                    "bitmask": 1,
                    "helper_var1": 1,
                    "high_bit_value": 1,
                    "highest_bit_index": 1,
                    "highest_bit_set": 1,
                    "mask": 1,
                    "random_value": 1,
                    "shifted_bits": 1,
                    "shifted_initial_value": 1,
                    "shifted_number": 1,
                    "shifted_result": 1,
                    "shifted_value": 5,
                    "shifted_value1": 1,
                    "shifted_value2": 1
                },
                "uVar3": {
                    "array_size": 1,
                    "constant_value2": 1,
                    "count": 2,
                    "counter": 1,
                    "loop_count": 1,
                    "loop_counter": 10,
                    "loop_index": 1,
                    "num_iterations": 2,
                    "rel_count": 1,
                    "size": 1
                }
            },
            "called": [
                "FUN_000010d4",
                "FUN_00000930",
                "FUN_00000cd0"
            ],
            "calling": [
                "entry"
            ],
            "code": "\nvoid initialize_memory_block_00000f8c(void)\n\n{\n  uint shifted_value;\n  undefined4 *pointer;\n  uint loop_counter;\n  int shifted_value;\n  int *shifted_pointer;\n  undefined4 constant_value;\n  undefined4 value1;\n  undefined4 value2;\n  dword offset;\n  \n  FUN_00000cd0();\n  offset = Elf32_Rel_ARRAY_1fff0200[3].r_info;\n  value2 = 0;\n  value1 = 0xf81;\n  FUN_000010d4(&DAT_1fff0a6c,0x100,0xf,0xc);\n  offset = Elf32_Rel_ARRAY_1fff0200[3].r_offset;\n  value2 = 0;\n  value1 = 0xf5d;\n  loop_counter = 0xc;\n  FUN_000010d4(&DAT_1fff046c,0x600,7);\n  constant_value = 0xfd3;\n  shifted_value = FUN_00000930();\n  shifted_value = shifted_value >> 0x1e;\n  pointer = (undefined4 *)(loop_counter * 0x100);\n  shifted_value = (loop_counter >> 0x1d) << 0x11;\n  shifted_pointer = &shifted_value;\n  if ((shifted_value & shifted_value - 1) != 0) {\n    FUN_00000f04(3,\"FAILED ASSERTION.\");\n  }\n  *pointer = 0;\n  pointer[1] = 0;\n  pointer[2] = shifted_value - 1;\n  return;\n}\n\n",
            "current_name": "initialize_memory_block_00000f8c",
            "entrypoint": "0x00000f8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000f8c": "initialize_memory_block_00000f8c",
                "iStack_24": "shifted_value",
                "local_10": "offset",
                "local_14": "value2",
                "local_18": "value1",
                "piStack_20": "shifted_pointer",
                "puVar2": "pointer",
                "uStack_1c": "constant_value",
                "uVar1": "shifted_value",
                "uVar3": "loop_counter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00000fec": {
            "additional_data": {
                "FUN_00000f04": {
                    "assertion_failed": 2,
                    "log_assertion_failure": 1,
                    "log_error": 1,
                    "log_error_message": 1,
                    "print_assertion_error": 1,
                    "print_assertion_failed": 1,
                    "print_error": 4,
                    "print_error_message": 7
                },
                "FUN_00000fec": {
                    "initialize_array": 17,
                    "initialize_data": 1,
                    "initialize_data_structure": 1,
                    "initialize_memory": 1,
                    "initialize_param": 2,
                    "initialize_param1": 1,
                    "initialize_param_array": 5,
                    "initialize_parameter": 1,
                    "initialize_parameter_array": 1,
                    "set_parameter_values": 1
                },
                "param_1": {
                    "array": 16,
                    "data_pointer": 1,
                    "data_structure": 1,
                    "error_code": 2,
                    "memory": 1,
                    "output_array": 3,
                    "param_array": 6,
                    "parameter_array": 1
                },
                "param_2": {
                    "array_length": 2,
                    "array_size": 8,
                    "error_message": 2,
                    "input_value": 1,
                    "length": 1,
                    "param_count": 1,
                    "param_size": 1,
                    "size": 14,
                    "value": 1
                }
            },
            "called": [
                "FUN_00000f04"
            ],
            "calling": [
                "FUN_000010d4"
            ],
            "code": "\nvoid initialize_param_array_00000fec(undefined4 *array,uint size)\n\n{\n  if ((size & size - 1) != 0) {\n    FUN_00000f04(3,\"FAILED ASSERTION.\");\n  }\n  *array = 0;\n  array[1] = 0;\n  array[2] = size - 1;\n  return;\n}\n\n",
            "current_name": "initialize_param_array_00000fec",
            "entrypoint": "0x00000fec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00000fec": "initialize_param_array_00000fec",
                "param_1": "array",
                "param_2": "size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001034": {
            "additional_data": {
                "FUN_00000f04": {
                    "handle_assertion_failure": 1,
                    "print_error_message": 2
                },
                "FUN_00001034": {
                    "find_and_replace": 1,
                    "find_and_set_pointer": 1,
                    "find_closest_pointer": 1,
                    "find_max_value": 1,
                    "find_next_element": 1,
                    "find_suitable_node": 1,
                    "find_target_and_insert": 1,
                    "find_valid_pointer": 1,
                    "linked_list_insertion": 1,
                    "modify_and_insert": 1,
                    "set_previous_pointer": 1,
                    "update_linked_list": 2,
                    "update_list": 2,
                    "update_param1": 1,
                    "update_param_list": 1,
                    "update_pointer": 10,
                    "update_pointer_array": 1,
                    "update_pointer_list": 2,
                    "update_value": 1
                },
                "local_1c": {
                    "current_element": 2,
                    "current_node": 10,
                    "current_param": 1,
                    "current_pointer": 17
                },
                "param_1": {
                    "array_of_pointers": 3,
                    "linked_list": 1,
                    "list": 8,
                    "list_head": 1,
                    "list_pointer": 2,
                    "node_list": 2,
                    "param_list": 1,
                    "pointer_array": 7,
                    "pointer_list": 6
                },
                "param_2": {
                    "array_index": 1,
                    "byte_offset": 1,
                    "element": 2,
                    "index": 14,
                    "length": 1,
                    "new_element_value": 1,
                    "new_node_value": 1,
                    "param": 1,
                    "size": 3,
                    "target_node": 1,
                    "target_value": 1,
                    "updated_index": 1,
                    "value": 3
                }
            },
            "called": [
                "FUN_00000f04"
            ],
            "calling": [
                "FUN_00002434"
            ],
            "code": "\nvoid update_pointer_list_00001034(int **list,int index)\n\n{\n  int **current_pointer;\n  \n  if (8 < *(byte *)(index + 4)) {\n    FUN_00000f04(3,\"FAILED ASSERTION.\");\n  }\n  for (current_pointer = list;\n      (*current_pointer != (int *)0x0 && (*(byte *)((int)*current_pointer + -3) <= *(byte *)(index + 5)));\n      current_pointer = (int **)*current_pointer) {\n  }\n  *(int **)(index + 8) = *current_pointer;\n  *current_pointer = (int *)(int **)(index + 8);\n  return;\n}\n\n",
            "current_name": "update_pointer_list_00001034",
            "entrypoint": "0x00001034",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001034": "update_pointer_list_00001034",
                "local_1c": "current_pointer",
                "param_1": "list",
                "param_2": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000010a0": {
            "additional_data": {
                "FUN_000010a0": {
                    "calculate_address_offset": 1,
                    "calculate_array_offset": 6,
                    "calculate_difference": 3,
                    "calculate_distance": 2,
                    "calculate_offset": 8,
                    "count_elements": 2,
                    "find_array_offset": 1,
                    "find_difference": 1,
                    "find_difference_between_addresses": 1,
                    "find_displacement": 1,
                    "find_first_nonmatching_index": 1,
                    "find_first_nonmatching_pointer": 1,
                    "find_last_offset": 1,
                    "find_offset_between_pointers": 1,
                    "get_offset_from_start": 1
                },
                "local_c": {
                    "current_address": 3,
                    "current_element": 17,
                    "current_index": 1,
                    "current_offset": 1,
                    "current_pointer": 2,
                    "current_ptr": 6,
                    "pointer": 1
                },
                "param_1": {
                    "address_ptr": 1,
                    "array": 19,
                    "array_ptr": 3,
                    "array_start": 1,
                    "data_array": 2,
                    "input_array": 1,
                    "offset_array": 1,
                    "pointer_array": 2,
                    "values": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0000211c"
            ],
            "code": "\nint calculate_array_offset_000010a0(int *array)\n\n{\n  int *current_element;\n  \n  for (current_element = array; (int *)*current_element == current_element; current_element = current_element + 1) {\n  }\n  return (int)current_element - (int)array;\n}\n\n",
            "current_name": "calculate_array_offset_000010a0",
            "entrypoint": "0x000010a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000010a0": "calculate_array_offset_000010a0",
                "local_c": "current_element",
                "param_1": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000010d4": {
            "additional_data": {
                "DAT_1fff0350": {
                    "counter2": 1
                },
                "DAT_1fff0358": {
                    "array": 1
                },
                "FUN_000010d4": {
                    "decode_and_improve": 1,
                    "decode_and_initialize_buffer": 1,
                    "decode_param": 1,
                    "extract_data": 2,
                    "handle_data": 1,
                    "initialize_buffer": 2,
                    "initialize_data_struct": 1,
                    "initialize_data_structure": 7,
                    "initialize_function": 1,
                    "parse_parameters": 1,
                    "process_data": 8
                },
                "iVar3": {
                    "error": 1,
                    "error_code": 4,
                    "output": 1,
                    "output_value": 1,
                    "output_var": 1,
                    "result": 5,
                    "return_value": 18
                },
                "local_10": {
                    "counter": 1,
                    "current_offset": 1,
                    "end_addr": 1,
                    "final_address": 1,
                    "local_10": 1,
                    "local_aux": 1,
                    "local_counter": 1,
                    "loop_counter": 6,
                    "loop_index": 2,
                    "loop_var": 4,
                    "loop_variable": 2,
                    "offset": 1,
                    "temp": 3,
                    "temp2": 1,
                    "temp4": 2,
                    "temp_4": 1,
                    "temp_var5": 1,
                    "temp_variable3": 1
                },
                "local_2c": {
                    "adjusted_address": 3,
                    "adjusted_buffer_address": 1,
                    "adjusted_buffer_offset": 1,
                    "adjusted_data_offset": 1,
                    "adjusted_input": 2,
                    "adjusted_input_value": 2,
                    "adjusted_offset": 1,
                    "adjusted_pointer": 1,
                    "adjusted_ptr": 2,
                    "adjusted_size": 1,
                    "aligned_address": 2,
                    "aligned_buffer": 1,
                    "aligned_data_address": 1,
                    "aligned_data_pointer": 1,
                    "aligned_input": 1,
                    "aligned_ptr": 1,
                    "aligned_value": 1,
                    "local_address": 1,
                    "start_addr": 1,
                    "temp3": 2,
                    "temp_3": 1,
                    "temp_offset": 1,
                    "temp_var4": 1,
                    "temp_variable2": 1
                },
                "local_30": {
                    "adjusted_buffer": 1,
                    "adjusted_buffer_size": 3,
                    "adjusted_data_length": 1,
                    "adjusted_input_size": 1,
                    "adjusted_length": 2,
                    "adjusted_size": 5,
                    "adjusted_size_and_input": 1,
                    "adjusted_size_temp": 2,
                    "aligned_data_length": 1,
                    "aligned_length": 1,
                    "aligned_offset": 1,
                    "aligned_size": 1,
                    "local_size": 1,
                    "padding": 1,
                    "remaining": 1,
                    "temp2": 2,
                    "temp_2": 1,
                    "temp_length": 1,
                    "temp_size": 1,
                    "temp_var3": 1,
                    "temp_variable1": 1,
                    "unaligned_length": 1
                },
                "local_a": {
                    "available_index": 5,
                    "available_slot": 1,
                    "break_value": 1,
                    "counter2": 1,
                    "counter_2": 1,
                    "empty_entry_index": 1,
                    "empty_slot": 1,
                    "found_index": 1,
                    "index": 2,
                    "index2": 5,
                    "index_a": 1,
                    "index_b": 1,
                    "local_index2": 1,
                    "loop_var2": 1,
                    "new_index": 1,
                    "result": 1,
                    "s2": 1,
                    "short_value_2": 1,
                    "temp2": 1,
                    "temp6": 1,
                    "temp_var7": 1,
                    "temp_variable5": 1
                },
                "local_c": {
                    "available_index": 1,
                    "counter": 1,
                    "counter1": 2,
                    "counter_1": 1,
                    "first_usable_index": 1,
                    "first_zero": 1,
                    "index": 3,
                    "index1": 5,
                    "index_a": 1,
                    "index_c": 1,
                    "inner_loop_counter": 1,
                    "local_index1": 1,
                    "loop_counter": 1,
                    "loop_var1": 1,
                    "loop_var2": 1,
                    "matching_entry": 1,
                    "s1": 1,
                    "search_result": 1,
                    "short_value_1": 1,
                    "temp1": 1,
                    "temp5": 1,
                    "temp_short": 1,
                    "temp_var6": 1,
                    "temp_variable4": 1
                },
                "param_1": {
                    "address": 5,
                    "buffer_address": 1,
                    "buffer_length": 1,
                    "buffer_offset": 1,
                    "data_address": 1,
                    "data_offset": 1,
                    "input": 2,
                    "input1": 1,
                    "input_data": 1,
                    "input_length": 1,
                    "input_offset": 1,
                    "input_param": 1,
                    "input_param1": 1,
                    "input_parameter": 1,
                    "input_ptr": 1,
                    "input_size": 1,
                    "input_value": 6,
                    "input_value1": 1,
                    "offset": 1,
                    "size": 2
                },
                "param_2": {
                    "buffer": 1,
                    "buffer_size": 3,
                    "data_length": 2,
                    "initial_value": 1,
                    "input2": 1,
                    "input_param2": 1,
                    "input_size": 3,
                    "input_value2": 1,
                    "length": 8,
                    "output_buffer": 1,
                    "size": 9
                },
                "param_3": {
                    "byte_count": 4,
                    "byte_value": 7,
                    "count": 2,
                    "data_byte": 1,
                    "data_length": 1,
                    "data_size": 1,
                    "data_type": 1,
                    "flag": 2,
                    "flags": 1,
                    "input3": 1,
                    "input_param3": 1,
                    "input_value3": 1,
                    "length": 5,
                    "num_bytes": 3
                },
                "param_4": {
                    "flag": 5,
                    "flags": 20,
                    "input4": 1,
                    "input_param4": 1,
                    "input_value4": 1,
                    "option": 2,
                    "param": 1
                },
                "param_5": {
                    "arg1": 4,
                    "arg5": 2,
                    "input5": 1,
                    "input_param5": 1,
                    "input_value5": 1,
                    "param1": 1,
                    "param5": 17,
                    "param_5": 2,
                    "param_a": 1,
                    "value1": 1
                },
                "param_6": {
                    "arg2": 4,
                    "arg6": 2,
                    "input6": 1,
                    "input_param6": 1,
                    "input_value6": 1,
                    "param2": 1,
                    "param6": 17,
                    "param_6": 2,
                    "param_b": 1,
                    "value2": 1
                },
                "param_7": {
                    "arg3": 4,
                    "arg7": 2,
                    "input7": 1,
                    "input_param7": 1,
                    "input_value7": 1,
                    "param3": 1,
                    "param7": 17,
                    "param_7": 2,
                    "param_c": 1,
                    "value3": 1
                },
                "puVar5": {
                    "address": 1,
                    "buffer": 1,
                    "buffer_pointer": 1,
                    "data_pointer": 7,
                    "data_ptr": 2,
                    "data_struct_ptr": 1,
                    "pointer": 4,
                    "pointer1": 2,
                    "pointer_var": 1,
                    "ptr": 7,
                    "ptr1": 1,
                    "temp_pointer": 1,
                    "temp_var2": 1,
                    "var_pointer": 1
                },
                "uVar1": {
                    "result": 8,
                    "result1": 17,
                    "result_1": 3,
                    "result_var1": 1,
                    "return_value1": 1,
                    "var1": 1
                },
                "uVar2": {
                    "result2": 18,
                    "result_2": 3,
                    "result_var2": 1,
                    "return_value": 3,
                    "return_value2": 1,
                    "temp": 3,
                    "u_var2": 1,
                    "var2": 1
                },
                "uVar4": {
                    "adjusted_length": 2,
                    "adjusted_size": 4,
                    "aligned_buffer_size": 1,
                    "aligned_length": 5,
                    "aligned_size": 4,
                    "alignment": 1,
                    "temp1": 3,
                    "temp_1": 1,
                    "temp_size": 1,
                    "temp_value": 3,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "u_var4": 1,
                    "var1": 1,
                    "var4": 2
                }
            },
            "called": [
                "FUN_00000738",
                "FUN_00000d0c",
                "FUN_00000fec",
                "FUN_00000698",
                "FUN_00000cd0",
                "FUN_000007dc"
            ],
            "calling": [
                "FUN_00000f8c"
            ],
            "code": "\nint process_data_000010d4(uint input_value,int size,byte byte_value,uint flags,undefined4 param5,\n                undefined4 param6,undefined4 param7)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int return_value;\n  uint aligned_length;\n  undefined4 *ptr;\n  int adjusted_size;\n  uint adjusted_address;\n  uint loop_counter;\n  short index1;\n  short available_index;\n  \n  if (byte_value < 0x10) {\n    adjusted_size = size;\n    adjusted_address = input_value;\n    if ((input_value & 3) != 0) {\n      adjusted_size = 4 - (input_value & 3);\n      adjusted_address = adjusted_size + input_value;\n      adjusted_size = size - adjusted_size;\n    }\n    aligned_length = adjusted_size - 0x30U & 0xfffffffc;\n    ptr = (undefined4 *)(aligned_length + adjusted_address);\n    if ((flags & 8) == 0) {\n      *(uint *)adjusted_address = adjusted_address;\n    }\n    else {\n      for (loop_counter = adjusted_address; loop_counter < aligned_length + adjusted_address; loop_counter = loop_counter + 4) {\n        *(uint *)loop_counter = loop_counter;\n      }\n    }\n    result1 = FUN_00000cd0();\n    available_index = 0;\n    for (index1 = 1; index1 < 0x21; index1 = index1 + 1) {\n      if (*(int *)(&DAT_1fff0358 + index1 * 4) == 0) {\n        available_index = index1;\n        break;\n      }\n    }\n    if (available_index == 0) {\n      FUN_00000d0c(result1);\n      return_value = -0x8b;\n    }\n    else {\n      *(undefined4 **)(&DAT_1fff0358 + available_index * 4) = ptr;\n      *(short *)((int)ptr + 6) = available_index;\n      result2 = FUN_000007dc(param5,param6,adjusted_address,aligned_length);\n      *ptr = result2;\n      ptr[9] = adjusted_address;\n      ptr[0xb] = size;\n      ptr[10] = param7;\n      *(byte *)((int)ptr + 5) = byte_value;\n      *(undefined *)(ptr + 1) = 0;\n      ptr[2] = 0;\n      ptr[3] = 0;\n      ptr[4] = 0;\n      FUN_00000fec(ptr + 5,0);\n      ptr[8] = 0;\n      DAT_1fff0350 = DAT_1fff0350 + 1;\n      if ((flags & 1) == 0) {\n        FUN_00000698(ptr,10);\n        if ((flags & 4) == 0) {\n          FUN_00000d0c(result1);\n          FUN_00000738(byte_value);\n          return (int)available_index;\n        }\n      }\n      else {\n        FUN_00000698(ptr,1);\n      }\n      FUN_00000d0c(result1);\n      return_value = (int)available_index;\n    }\n  }\n  else {\n    return_value = -0x16;\n  }\n  return return_value;\n}\n\n",
            "current_name": "process_data_000010d4",
            "entrypoint": "0x000010d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000010d4": "process_data_000010d4",
                "iVar3": "return_value",
                "local_10": "loop_counter",
                "local_2c": "adjusted_address",
                "local_30": "adjusted_size",
                "local_a": "available_index",
                "local_c": "index1",
                "param_1": "input_value",
                "param_2": "size",
                "param_3": "byte_value",
                "param_4": "flags",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "puVar5": "ptr",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar4": "aligned_length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001274": {
            "additional_data": {
                "FUN_00001274": {
                    "initialize": 3,
                    "initialize_data": 1,
                    "initialize_device": 1,
                    "initialize_hardware": 1,
                    "initialize_peripheral": 1,
                    "initialize_registers": 1,
                    "initialize_system": 22,
                    "initialize_system_components": 1
                },
                "FUN_00001c84": {
                    "configure_peripherals": 1,
                    "configure_settings": 3,
                    "configure_system": 3,
                    "configure_system_settings": 2,
                    "execute_initialization": 1,
                    "execute_task2": 1,
                    "initialize_component": 1,
                    "initialize_components": 7,
                    "initialize_data_structures": 1,
                    "initialize_system": 1,
                    "perform_action_b": 1,
                    "perform_initialization": 2,
                    "perform_operation_b": 1,
                    "perform_primary_action": 1,
                    "perform_setup": 1,
                    "perform_system_checks": 1,
                    "set_configuration": 1,
                    "set_up_configuration": 1,
                    "setup_configuration": 1
                },
                "FUN_00002396": {
                    "execute_additional_setup": 1,
                    "execute_cleanup": 1,
                    "execute_device_operation": 1,
                    "execute_operations": 1,
                    "execute_sub_process": 1,
                    "execute_task1": 1,
                    "handle_system_events": 1,
                    "perform_action_a": 1,
                    "perform_additional_setup": 1,
                    "perform_additional_tasks": 2,
                    "perform_cleanup": 9,
                    "perform_final_cleanup": 1,
                    "perform_final_setup": 1,
                    "perform_finalization": 1,
                    "perform_hardware_check": 1,
                    "perform_last_tasks": 1,
                    "perform_operation_c": 1,
                    "perform_post_processing": 1,
                    "perform_secondary_action": 1,
                    "perform_system_cleanup": 2,
                    "update_hardware_status": 1
                },
                "FUN_0000258c": {
                    "apply_settings": 1,
                    "check_system_status": 1,
                    "configure_hardware": 2,
                    "configure_peripheral": 1,
                    "configure_settings": 2,
                    "configure_system": 2,
                    "enable_interrupts": 2,
                    "initialize_components": 1,
                    "initialize_hardware": 6,
                    "initialize_peripheral_devices": 1,
                    "perform_action_c": 1,
                    "perform_operation_a": 1,
                    "perform_preparation": 1,
                    "perform_preparations": 1,
                    "perform_preprocessing": 1,
                    "perform_task": 1,
                    "set_device_flags": 1,
                    "set_flags": 1,
                    "update_flags": 2,
                    "update_system_status": 2
                }
            },
            "called": [
                "FUN_00002396",
                "FUN_00001c84",
                "FUN_0000258c"
            ],
            "calling": [
                "FUN_00000e64"
            ],
            "code": "\nvoid initialize_system_components_00001274(void)\n\n{\n  FUN_0000258c();\n  DAT_4007e000 = DAT_4007e000 | 0x28;\n  FUN_00001c84();\n  FUN_00002396();\n  return;\n}\n\n",
            "current_name": "initialize_system_components_00001274",
            "entrypoint": "0x00001274",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001274": "initialize_system_components_00001274"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0000129c": {
            "additional_data": {
                "FUN_0000129c": {
                    "initialize": 3,
                    "initialize_component": 1,
                    "initialize_data": 1,
                    "initialize_device": 3,
                    "initialize_foo": 1,
                    "initialize_function": 11,
                    "initialize_hardware": 1,
                    "initialize_module": 1,
                    "initialize_parameter_value": 1,
                    "initialize_settings": 1,
                    "initialize_subsystem": 1,
                    "initialize_with_one": 1,
                    "initiate_function": 1,
                    "initiate_process": 1,
                    "set_first_parameter_to_one": 1,
                    "set_flag": 2
                },
                "FUN_00002434": {
                    "configure_device": 1,
                    "configure_hardware": 1,
                    "execute_sub_function": 1,
                    "modify_data": 1,
                    "perform_action": 3,
                    "perform_operation": 1,
                    "perform_task": 1,
                    "process_data": 2,
                    "set_component_property": 1,
                    "set_configuration": 2,
                    "set_device_mode": 1,
                    "set_device_status": 1,
                    "set_flag": 4,
                    "set_flag_value": 1,
                    "set_foo_value": 1,
                    "set_int_value": 1,
                    "set_module_state": 1,
                    "set_parameter_to_one": 1,
                    "set_value": 1,
                    "set_variable_value": 1,
                    "sub_function": 1,
                    "update_value": 1
                },
                "param_1": {
                    "component": 1,
                    "data": 5,
                    "device": 2,
                    "device_ptr": 1,
                    "first_parameter": 1,
                    "flag": 1,
                    "flag_value": 1,
                    "flags": 1,
                    "foo_ptr": 1,
                    "function_parameter": 1,
                    "hardware_config": 1,
                    "input": 3,
                    "input_param": 2,
                    "input_parameter": 2,
                    "module": 1,
                    "param": 2,
                    "parameter": 3,
                    "process_data": 1,
                    "settings": 1
                },
                "param_2": {
                    "action_param": 1,
                    "action_parameter": 1,
                    "action_type": 1,
                    "config": 1,
                    "configuration": 1,
                    "configuration_option": 2,
                    "flag": 2,
                    "index": 1,
                    "int_value": 1,
                    "mode": 1,
                    "processing_mode": 1,
                    "property_value": 1,
                    "state": 1,
                    "status": 1,
                    "sub_function_param": 1,
                    "sub_function_parameter": 1,
                    "value": 6,
                    "value_to_update": 1
                }
            },
            "called": [
                "FUN_00002434"
            ],
            "calling": [
                "FUN_000012e2"
            ],
            "code": "\nvoid initialize_function_0000129c(undefined4 data)\n\n{\n  FUN_00002434(data,1);\n  return;\n}\n\n",
            "current_name": "initialize_function_0000129c",
            "entrypoint": "0x0000129c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0000129c": "initialize_function_0000129c",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000012b4": {
            "additional_data": {
                "FUN_000012b4": {
                    "execute_and_cleanup": 2,
                    "execute_and_log": 1,
                    "extract_and_process_data": 1,
                    "extract_data_and_process": 1,
                    "function_name": 1,
                    "process_and_cleanup": 1,
                    "process_data": 14,
                    "process_function": 5,
                    "process_input": 1,
                    "reverse_and_cleanup_binary": 1,
                    "reverse_and_reset": 1
                },
                "FUN_00002364": {
                    "calculate_result": 2,
                    "process_additional_data": 1,
                    "process_data": 3,
                    "process_data_helper": 1,
                    "process_data_step1": 1,
                    "process_input": 1,
                    "process_sub1": 1,
                    "process_sub_function1": 1,
                    "sub_function_a": 1,
                    "sub_process": 1,
                    "subfunction1": 1
                },
                "FUN_000024bc": {
                    "cleanup": 1,
                    "cleanup_data": 2,
                    "cleanup_input": 2,
                    "perform_action": 1,
                    "process_data_step2": 1,
                    "process_sub2": 1,
                    "process_sub_function2": 1,
                    "reset_data": 1,
                    "sub_cleanup": 1,
                    "sub_function_b": 1,
                    "subfunction2": 1
                },
                "param_1": {
                    "data": 2,
                    "data_location": 1,
                    "data_offset": 1,
                    "data_pointer": 1,
                    "data_size": 1,
                    "input": 10,
                    "input_array": 1,
                    "input_data": 1,
                    "input_integer": 1,
                    "input_param": 6,
                    "input_value": 4,
                    "param_offset": 1,
                    "sub_function2_input": 1
                },
                "param_2": {
                    "additional_data": 2,
                    "additional_param": 2,
                    "config": 1,
                    "config_data": 1,
                    "data": 5,
                    "extra_data": 1,
                    "extra_param": 1,
                    "flag": 3,
                    "input": 1,
                    "input_data": 3,
                    "input_param2": 1,
                    "input_value": 2,
                    "optional_argument": 1,
                    "param": 2,
                    "param_data": 1,
                    "undefined_param": 1,
                    "unused_param": 2,
                    "unused_parameter": 1
                },
                "uVar1": {
                    "function_result": 1,
                    "result": 24,
                    "return_value": 4
                }
            },
            "called": [
                "FUN_00002364",
                "FUN_000024bc"
            ],
            "calling": [],
            "code": "\nundefined4 extract_data_and_process_000012b4(int input,undefined data)\n\n{\n  undefined4 result;\n  \n  result = FUN_00002364(input + 4,data);\n  FUN_000024bc(input);\n  return result;\n}\n\n",
            "current_name": "extract_data_and_process_000012b4",
            "entrypoint": "0x000012b4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000012b4": "extract_data_and_process_000012b4",
                "param_1": "input",
                "param_2": "data",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000012e2": {
            "additional_data": {
                "FUN_0000129c": {
                    "cleanup": 1,
                    "cleanup_data": 2,
                    "cleanup_function": 1,
                    "cleanup_operation": 2,
                    "cleanup_sub_function": 1,
                    "execute_action": 1,
                    "perform_cleanup": 1,
                    "reset_input": 1
                },
                "FUN_000012e2": {
                    "check_and_perform_operation": 1,
                    "check_and_process_data": 2,
                    "check_condition_and_execute": 1,
                    "check_condition_and_process": 1,
                    "check_condition_in_loop": 1,
                    "check_condition_loop": 1,
                    "check_conditions_and_execute": 1,
                    "check_error_and_cleanup": 1,
                    "check_for_error": 2,
                    "check_for_errors": 1,
                    "check_for_nonzero_return": 1,
                    "check_for_positive_results": 1,
                    "check_function": 1,
                    "check_function_for_result": 1,
                    "check_return_value": 1,
                    "check_successive_values": 2,
                    "check_validation": 1,
                    "find_first_non_zero": 1,
                    "find_first_nonzero": 1,
                    "find_next_nonzero_value": 1,
                    "find_non_zero": 1,
                    "handle_error": 1,
                    "iterate_until_non_zero": 1,
                    "perform_operation": 1,
                    "process_data": 1
                },
                "FUN_0000231c": {
                    "check_condition": 3,
                    "check_data_validity": 2,
                    "check_result": 1,
                    "check_sub_function": 1,
                    "execute_condition": 1,
                    "perform_operation": 2
                },
                "iVar1": {
                    "error_code": 4,
                    "function_result": 1,
                    "result": 20,
                    "return_value": 3,
                    "status": 2
                },
                "param_1": {
                    "array": 3,
                    "array_start": 1,
                    "data": 7,
                    "data_ptr": 1,
                    "input": 2,
                    "input_array": 2,
                    "input_param": 5,
                    "input_ptr": 1,
                    "input_value": 7,
                    "value": 2
                },
                "param_2": {
                    "arg1": 2,
                    "config_param": 1,
                    "config_value": 1,
                    "data": 1,
                    "data1": 1,
                    "data_1": 1,
                    "func_param_1": 1,
                    "length": 1,
                    "param1": 2,
                    "param2": 4,
                    "param_2": 1,
                    "pointer": 4,
                    "pointer_to_data": 1,
                    "ptr": 1,
                    "ptr1": 1,
                    "ptr_data": 1,
                    "second_param": 1,
                    "size": 4,
                    "size_of_array": 1,
                    "var1": 1
                },
                "param_3": {
                    "arg2": 2,
                    "count": 1,
                    "counter": 1,
                    "data2": 1,
                    "data_2": 1,
                    "data_param": 1,
                    "element_size": 1,
                    "flag": 1,
                    "flags": 1,
                    "func_param_2": 1,
                    "length_of_data": 1,
                    "param2": 2,
                    "param3": 4,
                    "param_3": 1,
                    "ptr2": 1,
                    "size": 6,
                    "step": 1,
                    "third_param": 1,
                    "value": 2,
                    "var2": 1
                }
            },
            "called": [
                "FUN_0000231c",
                "FUN_0000129c"
            ],
            "calling": [
                "FUN_00000e14"
            ],
            "code": "\nint check_and_process_data_000012e2(int data,undefined4 param2,undefined4 size)\n\n{\n  int result;\n  \n  while( true ) {\n    result = FUN_0000231c(data + 4,param2,size);\n    if (result != 0) break;\n    FUN_0000129c(data);\n  }\n  return result;\n}\n\n",
            "current_name": "check_and_process_data_000012e2",
            "entrypoint": "0x000012e2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000012e2": "check_and_process_data_000012e2",
                "iVar1": "result",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001318": {
            "additional_data": {
                "FUN_00001318": {
                    "set_bit": 7,
                    "set_bit_at_index": 2,
                    "set_bit_at_offset": 3,
                    "set_bit_at_position": 1,
                    "set_bit_in_array": 1,
                    "set_bit_in_integer": 1,
                    "set_bit_in_memory": 13,
                    "set_bit_value": 1,
                    "set_bits_in_memory": 1,
                    "update_bitmask": 1
                },
                "PTR_rrrrrrrr": {
                    "bitmask": 1
                },
                "char": {
                    "char_ptr": 1,
                    "character": 2
                },
                "int": {
                    "int_ptr": 1,
                    "integer": 1
                },
                "param_1": {
                    "bit_index": 1,
                    "bit_position": 1,
                    "byte_to_set": 3,
                    "byte_value": 3,
                    "input": 1,
                    "input_byte": 20,
                    "position": 1,
                    "value_to_set": 1
                },
                "param_2": {
                    "new_parameter_name2": 1,
                    "position": 1
                },
                "uint": {
                    "uint_ptr": 1,
                    "unsigned_int": 1,
                    "unsigned_integer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_000014c4"
            ],
            "code": "\nvoid set_bit_in_memory_00001318(byte input_byte)\n\n{\n  *(int_ptr *)(((unsigned_int)(int_ptr)(character)input_byte >> 5) * 4 + -0x1fff1f00) = 1 << (input_byte & 0x1f);\n  return;\n}\n\n",
            "current_name": "set_bit_in_memory_00001318",
            "entrypoint": "0x00001318",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001318": "set_bit_in_memory_00001318",
                "char": "character",
                "int": "int_ptr",
                "param_1": "input_byte",
                "uint": "unsigned_int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001348": {
            "additional_data": {
                "FUN_0000093c": {
                    "call_sub_function": 1,
                    "do_action": 1,
                    "execute_action": 2,
                    "execute_function": 6,
                    "execute_if_data_not_empty": 1,
                    "execute_specific_function": 1,
                    "execute_sub_function": 6,
                    "execute_subfunction": 1,
                    "function_to_call": 1,
                    "handle_data": 1,
                    "invoke_sub_function": 2,
                    "perform_action": 4,
                    "process_data": 2,
                    "sub_function": 1,
                    "update_data": 1
                },
                "FUN_00001348": {
                    "check_and_call_function": 8,
                    "check_and_call_sub_function": 2,
                    "check_and_execute": 1,
                    "check_and_execute_function": 8,
                    "check_and_invoke_function": 3,
                    "check_and_invoke_sub_function": 1,
                    "check_and_update_data": 1,
                    "check_data": 1,
                    "check_data_and_call_function": 2,
                    "check_data_and_call_sub_function": 1,
                    "check_data_validity": 2,
                    "initialize_if_data_available": 1
                }
            },
            "called": [
                "FUN_0000093c"
            ],
            "calling": [
                "FUN_00001628"
            ],
            "code": "\nvoid check_data_and_call_sub_function_00001348(void)\n\n{\n  if (DAT_1fff0354 != 0) {\n    FUN_0000093c();\n  }\n  return;\n}\n\n",
            "current_name": "check_data_and_call_sub_function_00001348",
            "entrypoint": "0x00001348",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001348": "check_data_and_call_sub_function_00001348"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001360": {
            "additional_data": {
                "0x2000000": {
                    "constant_offset": 1
                },
                "DAT_": {
                    "dat_": 1
                },
                "FUN_00001360": {
                    "calculate_final_value": 1,
                    "calculate_new_value": 1,
                    "calculate_offset": 17,
                    "calculate_result": 7,
                    "calculate_shifted_value": 2,
                    "calculate_sum": 1,
                    "calculate_updated_value": 1,
                    "calculate_value": 1
                },
                "PTR_": {
                    "ptr_": 1
                },
                "param_1": {
                    "address": 7,
                    "base_address": 4,
                    "input1": 1,
                    "input_value": 10,
                    "input_value1": 1,
                    "number": 1,
                    "number1": 1,
                    "offset": 1,
                    "unsigned_input": 1,
                    "value": 1,
                    "value1": 3
                },
                "param_2": {
                    "count": 1,
                    "index": 3,
                    "input2": 1,
                    "input_value2": 1,
                    "multiplier": 19,
                    "number2": 1,
                    "offset": 2,
                    "value2": 3
                },
                "param_3": {
                    "offset": 2,
                    "result": 1,
                    "shifted_value": 1
                },
                "param_4": {
                    "constant": 1,
                    "mask": 1
                },
                "param_5": {
                    "mask": 1,
                    "shift": 1
                },
                "param_6": {
                    "constant_offset": 1,
                    "shift": 1
                },
                "param_7": {
                    "addition": 1
                },
                "param_8": {
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00001392"
            ],
            "code": "\nint calculate_offset_00001360(uint input_value,int multiplier)\n\n{\n  return multiplier * 4 + (input_value & 0xf0000000 | (input_value & 0xfffff) << 5) + 0x2000000;\n}\n\n",
            "current_name": "calculate_offset_00001360",
            "entrypoint": "0x00001360",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001360": "calculate_offset_00001360",
                "param_1": "input_value",
                "param_2": "multiplier"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001392": {
            "additional_data": {
                "FUN_00001360": {
                    "calculate_result": 1,
                    "fetch_flag_pointer": 1
                },
                "FUN_00001392": {
                    "initialize_flag": 1,
                    "initialize_memory": 1,
                    "initialize_pointer": 3,
                    "initialize_variable": 2,
                    "mark_function": 1,
                    "set_flag": 7,
                    "set_flag_to1": 3,
                    "set_flag_to_true": 5,
                    "set_result_to1": 1,
                    "set_return_value_to_one": 2,
                    "set_to1": 1,
                    "set_to_one": 3,
                    "write_value_to_memory": 1
                },
                "param_1": {
                    "address": 1,
                    "arg1": 4,
                    "data": 1,
                    "flag_pointer": 1,
                    "input": 2,
                    "input1": 4,
                    "input_param": 7,
                    "input_ptr": 1,
                    "input_value": 1,
                    "param": 1,
                    "param_1": 1,
                    "param_a": 1,
                    "param_ptr": 1,
                    "result_ptr": 1,
                    "value": 3,
                    "value_address": 1
                },
                "param_2": {
                    "arg2": 4,
                    "count": 1,
                    "data": 1,
                    "flag": 10,
                    "flag_param": 2,
                    "flag_value": 1,
                    "index": 1,
                    "input2": 4,
                    "input_value": 1,
                    "param_2": 1,
                    "param_b": 1,
                    "param_val": 1,
                    "status_flag": 1,
                    "value": 2
                },
                "puVar1": {
                    "flag_pointer": 3,
                    "flag_ptr": 2,
                    "memory_location": 1,
                    "output": 1,
                    "output_pointer": 2,
                    "output_ptr": 1,
                    "pointer": 1,
                    "ptr_flag": 1,
                    "ptr_to_address": 1,
                    "result": 1,
                    "result_pointer": 8,
                    "result_ptr": 7,
                    "return_value_pointer": 1,
                    "return_value_ptr": 1
                }
            },
            "called": [
                "FUN_00001360"
            ],
            "calling": [
                "FUN_000013b8"
            ],
            "code": "\nvoid set_flag_to_true_00001392(undefined4 input_param,undefined flag)\n\n{\n  undefined4 *result_pointer;\n  \n  result_pointer = (undefined4 *)FUN_00001360(input_param,flag);\n  *result_pointer = 1;\n  return;\n}\n\n",
            "current_name": "set_flag_to_true_00001392",
            "entrypoint": "0x00001392",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001392": "set_flag_to_true_00001392",
                "param_1": "input_param",
                "param_2": "flag",
                "puVar1": "result_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000013b8": {
            "additional_data": {
                "FUM_00001392": {
                    "process_data": 1
                },
                "FUN_00000f04": {
                    "display_error": 1,
                    "log_assertion_failure": 1,
                    "log_error": 2,
                    "print_assertion_error": 1,
                    "print_error": 2,
                    "print_error_message": 4,
                    "print_message": 1
                },
                "FUN_00001392": {
                    "apply_setting": 1,
                    "handle_data": 1,
                    "handle_data_update": 1,
                    "process_data": 6,
                    "update_data": 1,
                    "update_data_helper": 1
                },
                "FUN_000013b8": {
                    "handle_failed_assertion": 1,
                    "initialize_data": 5,
                    "process_assertion": 1,
                    "set_assertion_and_save_params": 1,
                    "set_param_and_check": 1,
                    "set_parameters_and_check": 1,
                    "store_data": 1,
                    "store_param_and_call_functions": 1,
                    "store_parameters_and_check_assertions": 1,
                    "update_data": 13,
                    "update_data_entry": 1,
                    "update_parameter": 2,
                    "update_record": 1,
                    "update_settings": 1
                },
                "FUN_00001448": {
                    "finalize_update": 1,
                    "initialize_data": 3,
                    "initialize_device": 1,
                    "perform_task": 1,
                    "process_index": 2,
                    "update_index": 1,
                    "update_parameter": 1,
                    "validate_index": 1,
                    "validate_settings": 1
                },
                "FUN_000014c4": {
                    "execute_if_condition": 1,
                    "handle_error": 5,
                    "handle_exception": 1,
                    "handle_failure": 4,
                    "process_result": 1
                },
                "param_1": {
                    "entry_index": 1,
                    "index": 29,
                    "record_index": 1
                },
                "param_2": {
                    "flag": 3,
                    "status": 7,
                    "value": 20,
                    "value1": 1
                },
                "param_3": {
                    "data": 1,
                    "data1": 18,
                    "data_1": 4,
                    "data_a": 1,
                    "param1": 2,
                    "param1_value": 1,
                    "param_value1": 1,
                    "setting1": 1,
                    "value1": 1,
                    "value2": 1
                },
                "param_4": {
                    "data2": 18,
                    "data_2": 4,
                    "data_b": 1,
                    "info": 1,
                    "param2": 2,
                    "param2_value": 1,
                    "param_value2": 1,
                    "setting2": 1,
                    "value2": 1,
                    "value3": 1
                },
                "uVar1": {
                    "result": 14,
                    "return_value": 10
                }
            },
            "called": [
                "FUN_00001392",
                "FUN_00001448",
                "FUN_00000f04",
                "FUN_000014c4"
            ],
            "calling": [
                "FUN_00000df4"
            ],
            "code": "\nundefined4 update_data_entry_000013b8(int index,undefined4 value,undefined4 data1,undefined4 data2)\n\n{\n  undefined4 result;\n  \n  if (index != 0) {\n    FUN_00000f04(3,\"FAILED ASSERTION.\");\n  }\n  *(undefined4 *)(&DAT_1fff0b6c + index * 8) = data1;\n  *(undefined4 *)(&DAT_1fff0b70 + index * 8) = data2;\n  FUN_00001448(index);\n  FUN_00001392(*(undefined4 *)(&DAT_00006ffc + index * 0x20),\n               *(undefined *)(index * 0x20 + 0x7000));\n  if ((&DAT_00007002)[index * 0x20] == '\\0') {\n    FUN_000014c4(index,value);\n    result = 0;\n  }\n  else {\n    result = 0xffffffff;\n  }\n  return result;\n}\n\n",
            "current_name": "update_data_entry_000013b8",
            "entrypoint": "0x000013b8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000013b8": "update_data_entry_000013b8",
                "param_1": "index",
                "param_2": "value",
                "param_3": "data1",
                "param_4": "data2",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001448": {
            "additional_data": {
                "FUN_00001448": {
                    "check_and_call_functions": 1,
                    "execute_function_based_on_param": 1,
                    "extract_data_and_call_functions": 1,
                    "process_data": 23,
                    "process_entries": 2,
                    "process_parameters": 2,
                    "process_params": 1
                },
                "FUN_00001f80": {
                    "call_function": 1,
                    "call_sub_function": 1,
                    "execute_action": 2,
                    "execute_command": 1,
                    "execute_function": 4,
                    "execute_operation": 1,
                    "execute_process": 1,
                    "execute_sub_function": 2,
                    "handle_data": 6,
                    "process_data": 2,
                    "process_sub_function": 4,
                    "send_data": 1
                },
                "param_1": {
                    "data_1": 1,
                    "entry_index": 2,
                    "function_id": 1,
                    "index": 19,
                    "input_index": 1,
                    "param1": 5,
                    "sub_param1": 1,
                    "value": 1
                },
                "param_2": {
                    "data": 5,
                    "data_2": 1,
                    "param": 2,
                    "param2": 5,
                    "param_value": 1,
                    "sub_param2": 1,
                    "val": 1
                }
            },
            "called": [
                "FUN_00001f80"
            ],
            "calling": [
                "FUN_000013b8"
            ],
            "code": "\nvoid process_data_00001448(int index)\n\n{\n  if (*(short *)(&DAT_00006fec + index * 0x20) != -1) {\n    FUN_00001f80(*(undefined2 *)(&DAT_00006fec + index * 0x20),\n                 *(undefined4 *)(&DAT_00006ff0 + index * 0x20));\n  }\n  if (*(short *)(&DAT_00006fee + index * 0x20) != -1) {\n    FUN_00001f80(*(undefined2 *)(&DAT_00006fee + index * 0x20),\n                 *(undefined4 *)(&DAT_00006ff4 + index * 0x20));\n  }\n  return;\n}\n\n",
            "current_name": "process_data_00001448",
            "entrypoint": "0x00001448",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001448": "process_data_00001448",
                "param_1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000014c4": {
            "additional_data": {
                "FUN_00001318": {
                    "init_device": 1,
                    "process_data": 1,
                    "reset_value": 1
                },
                "FUN_000014c4": {
                    "initialize_parameters": 1,
                    "process_data": 1,
                    "update_config": 1,
                    "update_configuration": 13,
                    "update_data": 9,
                    "update_device_info": 1,
                    "update_parameter": 1,
                    "update_parameters": 1,
                    "update_registers": 1
                },
                "param_1": {
                    "config_index": 2,
                    "configuration_index": 1,
                    "device_index": 1,
                    "index": 26,
                    "input_index": 1
                },
                "param_2": {
                    "block_size": 1,
                    "divider": 1,
                    "divisor": 8,
                    "factor": 2,
                    "input_value": 1,
                    "value": 18
                },
                "pbVar1": {
                    "byte_pointer": 1,
                    "byte_ptr": 1,
                    "config": 3,
                    "config_data": 1,
                    "config_pointer": 1,
                    "config_ptr": 5,
                    "configuration_pointer": 1,
                    "data_pointer": 5,
                    "data_ptr": 11,
                    "device_info_ptr": 1,
                    "register": 1
                },
                "uVar2": {
                    "config_data": 2,
                    "config_size": 1,
                    "config_value": 4,
                    "config_value1": 3,
                    "configuration_value": 1,
                    "data_size": 1,
                    "data_value": 6,
                    "offset": 1,
                    "register_value": 1,
                    "temp_var1": 1,
                    "total_size": 1,
                    "uint_var1": 1,
                    "value": 2,
                    "value1": 6
                },
                "uVar3": {
                    "adjusted_block_size": 1,
                    "calculated_value": 4,
                    "config_value2": 3,
                    "divided_value": 1,
                    "new_value": 1,
                    "ratio": 1,
                    "result": 4,
                    "scaled_value": 1,
                    "shifted_value": 5,
                    "temp": 1,
                    "temp_value": 1,
                    "temp_var2": 1,
                    "uint_var2": 1,
                    "value2": 6
                }
            },
            "called": [
                "FUN_00001318"
            ],
            "calling": [
                "FUN_000013b8"
            ],
            "code": "\nvoid update_configuration_000014c4(int index,uint value)\n\n{\n  byte *data_ptr;\n  uint value1;\n  uint value2;\n  \n  data_ptr = *(byte **)(&DAT_00006fe4 + index * 0x20);\n  value1 = *(uint *)(&DAT_00006fe8 + index * 0x20);\n  data_ptr[3] = data_ptr[3] & 0xf3;\n  data_ptr[2] = (&DAT_00007001)[index * 0x20];\n  value2 = value1 / (value << 4);\n  *data_ptr = (byte)(value2 >> 8) & 0x1f;\n  data_ptr[1] = (byte)value2;\n  data_ptr[10] = (byte)((value1 << 2) / value + 1 >> 1) & 0x1f;\n  data_ptr[0x10] = data_ptr[0x10] | 0x88;\n  if ((data_ptr[0x10] & 0x70) == 0) {\n    data_ptr[0x13] = 0;\n  }\n  else {\n    data_ptr[0x13] = (char)(2 << (data_ptr[0x10] >> 4 & 7)) - 1;\n  }\n  data_ptr[0x15] = 1;\n  data_ptr[0x11] = 0xc0;\n  data_ptr[3] = data_ptr[3] | 0x2c;\n  FUN_00001318((int)(char)(&DAT_00006ff8)[index * 0x20]);\n  return;\n}\n\n",
            "current_name": "update_configuration_000014c4",
            "entrypoint": "0x000014c4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000014c4": "update_configuration_000014c4",
                "param_1": "index",
                "param_2": "value",
                "pbVar1": "data_ptr",
                "uVar2": "value1",
                "uVar3": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000015d0": {
            "additional_data": {
                "FUN_000015d0": {
                    "copy_bytes": 1,
                    "copy_bytes_to_destination": 1,
                    "copy_bytes_to_memory": 3,
                    "copy_data": 15,
                    "copy_data_into_func": 1,
                    "copy_data_to_buffer": 1,
                    "copy_data_to_destination": 1,
                    "copy_data_to_memory": 6,
                    "copy_memory": 1,
                    "copy_to_destination": 1
                },
                "iVar1": {
                    "address": 2,
                    "base_address": 1,
                    "buffer_index": 1,
                    "data_addr": 1,
                    "data_address": 1,
                    "data_index": 1,
                    "data_offset": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "dest_address": 1,
                    "dest_ptr": 1,
                    "destination": 2,
                    "destination_address": 7,
                    "destination_index": 1,
                    "destination_start": 1,
                    "memory_offset": 1,
                    "offset": 1,
                    "pointer": 1,
                    "ptr": 1,
                    "target_address": 1,
                    "target_index": 1
                },
                "local_c": {
                    "byte_index": 2,
                    "count": 1,
                    "counter": 15,
                    "current_index": 3,
                    "element_index": 2,
                    "i": 7,
                    "source_index": 1
                },
                "param_1": {
                    "array_index": 1,
                    "index": 25,
                    "index1": 1,
                    "offset": 3,
                    "source_index": 1
                },
                "param_2": {
                    "index2": 1,
                    "source": 9,
                    "source_address": 10,
                    "source_array": 3,
                    "source_data": 1,
                    "source_data_address": 1,
                    "source_offset": 2,
                    "source_ptr": 1,
                    "source_start": 1,
                    "source_start_index": 1,
                    "src_address": 1
                },
                "param_3": {
                    "count": 2,
                    "length": 14,
                    "num_bytes": 2,
                    "num_elements": 6,
                    "number_of_elements": 1,
                    "size": 5,
                    "source_length": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00000e38"
            ],
            "code": "\nvoid copy_data_to_memory_000015d0(int index,int source_address,uint length)\n\n{\n  int destination_address;\n  uint counter;\n  \n  destination_address = *(int *)(&DAT_00006fe4 + index * 0x20);\n  for (counter = 0; counter < length; counter = counter + 1) {\n    do {\n    } while (-1 < *(char *)(destination_address + 4));\n    *(undefined *)(destination_address + 7) = *(undefined *)(counter + source_address);\n  }\n  return;\n}\n\n",
            "current_name": "copy_data_to_memory_000015d0",
            "entrypoint": "0x000015d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000015d0": "copy_data_to_memory_000015d0",
                "iVar1": "destination_address",
                "local_c": "counter",
                "param_1": "index",
                "param_2": "source_address",
                "param_3": "length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001628": {
            "additional_data": {
                "0x20": {
                    "offset": 1
                },
                "8": {
                    "function_offset": 1
                },
                "DAT_00006fe4": {
                    "array_of_pointers": 1,
                    "data_array": 3,
                    "data_ptr1": 1,
                    "data_table": 1,
                    "function_array": 1,
                    "function_table": 1,
                    "ptr1": 1
                },
                "DAT_1fff0b6c": {
                    "data_ptr2": 1,
                    "function_array": 3,
                    "function_data": 1,
                    "function_data_array": 1,
                    "function_pointer_array": 1,
                    "function_pointer_table": 1,
                    "function_table": 1,
                    "ptr2": 1
                },
                "DAT_1fff0b70": {
                    "arg1": 1,
                    "argument_data_array": 1,
                    "argument_table": 1,
                    "function_args_array": 1
                },
                "FUN_00001348": {
                    "cleanup": 14,
                    "cleanup_function": 3,
                    "execute_sub_function": 1,
                    "finalize_execution": 2,
                    "perform_cleanup": 5
                },
                "FUN_00001628": {
                    "execute_action": 2,
                    "execute_action_if_valid": 1,
                    "execute_callback_function": 1,
                    "execute_callback_if_enabled": 1,
                    "execute_callback_if_flag_set": 2,
                    "execute_code_if_condition_met": 1,
                    "execute_function": 6,
                    "execute_function_and_check_flag": 1,
                    "execute_function_if_condition_is_met": 1,
                    "execute_function_if_condition_met": 3,
                    "execute_function_if_enabled": 1,
                    "execute_function_if_flag_set": 1,
                    "execute_function_if_needed": 1,
                    "execute_function_if_valid": 2,
                    "execute_function_with_condition": 1,
                    "execute_param_function": 1,
                    "process_data": 3,
                    "process_function": 1
                },
                "PTR_funPointerArray": {
                    "function_pointer_array": 1
                },
                "byte": {
                    "access_flags": 1,
                    "byte_flag": 1,
                    "callback_info": 1,
                    "flag": 5,
                    "flag_byte": 1,
                    "flags": 8,
                    "status": 1
                },
                "code": {
                    "callback_function": 1,
                    "function": 1,
                    "function_pointer": 1,
                    "function_ptr": 1
                },
                "int": {
                    "callback_pointer": 1,
                    "callback_table_entry": 1,
                    "function_pointer": 4
                },
                "param_1": {
                    "action_index": 1,
                    "callback_index": 3,
                    "function_index": 1,
                    "index": 25,
                    "parameter": 1
                },
                "undefined": {
                    "arg2": 2,
                    "callback_arg": 1
                },
                "undefined4": {
                    "arg1": 2,
                    "callback_data": 1
                }
            },
            "called": [
                "FUN_00001348"
            ],
            "calling": [
                "FUN_00001688"
            ],
            "code": "\nvoid execute_function_if_condition_is_met_00001628(function_pointer index)\n\n{\n  if (((*(flags *)(*(function_pointer *)(&DAT_00006fe4 + index * 0x20) + 4) & 0x20) != 0) &&\n     (*(function_pointer *)(&DAT_1fff0b6c + index * 8) != 0)) {\n    (**(function_pointer **)(&DAT_1fff0b6c + index * 8))\n              (*(arg1 *)(&DAT_1fff0b70 + index * 8),\n               *(arg2 *)(*(function_pointer *)(&DAT_00006fe4 + index * 0x20) + 7));\n  }\n  FUN_00001348();\n  return;\n}\n\n",
            "current_name": "execute_function_if_condition_is_met_00001628",
            "entrypoint": "0x00001628",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001628": "execute_function_if_condition_is_met_00001628",
                "byte": "flags",
                "code": "function_pointer",
                "int": "function_pointer",
                "param_1": "index",
                "undefined": "arg2",
                "undefined4": "arg1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001688": {
            "additional_data": {
                "FUN_00001628": {
                    "call_sub_function": 3,
                    "call_subfunction": 1,
                    "configure": 1,
                    "execute_operation": 2,
                    "initialize": 1,
                    "initialize_subfunction": 1,
                    "initialize_value": 1,
                    "perform_operation": 1,
                    "set_initial_value": 10,
                    "set_param": 1,
                    "set_parameter": 2,
                    "set_parameter_value": 1
                },
                "FUN_00001688": {
                    "execute_function": 1,
                    "execute_initial_setup": 1,
                    "execute_initialization": 3,
                    "initialize": 11,
                    "initialize_code": 1,
                    "initialize_data": 2,
                    "initialize_device": 1,
                    "initialize_function": 6,
                    "initialize_function_a": 1,
                    "initialize_process": 1,
                    "initialize_system": 2,
                    "initialize_zero_parameter_function": 1
                },
                "param_1": {
                    "configuration": 1,
                    "device_id": 1,
                    "initial_value": 6,
                    "operation_id": 1,
                    "operation_type": 1,
                    "parameter": 2,
                    "sub_function_parameter": 2,
                    "subfunction_parameter": 1,
                    "value": 3
                }
            },
            "called": [
                "FUN_00001628"
            ],
            "calling": [],
            "code": "\nvoid initialize_function_a_00001688(void)\n\n{\n  FUN_00001628(0);\n  return;\n}\n\n",
            "current_name": "initialize_function_a_00001688",
            "entrypoint": "0x00001688",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001688": "initialize_function_a_00001688"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001696": {
            "additional_data": {
                "0x2000000": {
                    "addition_value": 1,
                    "constant": 1,
                    "constant_offset": 1,
                    "constant_value": 1
                },
                "0xf0000000": {
                    "mask": 1,
                    "mask1": 1
                },
                "0xfffff": {
                    "bit_mask": 1,
                    "mask2": 1
                },
                "FUN_00001696": {
                    "calculate_final_value": 1,
                    "calculate_modified_value": 2,
                    "calculate_new_value": 1,
                    "calculate_offset": 20,
                    "calculate_parameter_value": 1,
                    "calculate_result": 3,
                    "calculate_updated_value": 1,
                    "calculate_value": 1,
                    "multiply_and_shift": 1
                },
                "param_1": {
                    "address": 7,
                    "base_address": 3,
                    "base_value": 2,
                    "input1": 2,
                    "input_value": 9,
                    "input_value_1": 1,
                    "offset": 3,
                    "original_value": 1,
                    "shifted_input": 1,
                    "source_value": 1,
                    "value": 1
                },
                "param_2": {
                    "index": 2,
                    "input2": 1,
                    "input_value_2": 1,
                    "multiplier": 23,
                    "offset": 1,
                    "offset_multiplier": 1,
                    "shift_amount": 1,
                    "shifted_result": 1
                },
                "param_3": {
                    "offset": 1,
                    "result": 2
                },
                "param_4": {
                    "constant": 1,
                    "mask": 2
                },
                "param_5": {
                    "shift": 1,
                    "shift_amount": 1,
                    "shift_value": 1
                },
                "param_6": {
                    "added_constant": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_000016ec",
                "FUN_000016c8",
                "FUN_00001710"
            ],
            "code": "\nint calculate_offset_00001696(uint input_value,int multiplier)\n\n{\n  return multiplier * 4 + (input_value & 0xf0000000 | (input_value & 0xfffff) << 5) + 0x2000000;\n}\n\n",
            "current_name": "calculate_offset_00001696",
            "entrypoint": "0x00001696",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001696": "calculate_offset_00001696",
                "param_1": "input_value",
                "param_2": "multiplier"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000016c8": {
            "additional_data": {
                "FUN_000016c8": {
                    "initialize_flag": 2,
                    "initialize_pointer_to_value": 1,
                    "initialize_variable": 2,
                    "mark_as_processed": 1,
                    "set_flag": 9,
                    "set_flag_to1": 2,
                    "set_flag_to_true": 6,
                    "set_integer_to_one": 1,
                    "set_one_to_value_ptr": 1,
                    "set_one_value": 1,
                    "set_return_value_to_one": 1,
                    "set_to_one": 2,
                    "set_var_to1": 1,
                    "set_variable_to1": 1
                },
                "param_1": {
                    "arg1": 4,
                    "flag_pointer": 1,
                    "flags": 1,
                    "input": 1,
                    "input1": 6,
                    "input_param": 1,
                    "input_param1": 2,
                    "input_parameter": 1,
                    "input_parameter_1": 1,
                    "input_ptr": 1,
                    "input_value": 3,
                    "param": 2,
                    "param1": 1,
                    "param_value_ptr": 1,
                    "value": 5
                },
                "param_2": {
                    "arg2": 4,
                    "flag": 10,
                    "flag_value": 1,
                    "input2": 6,
                    "input_param2": 2,
                    "input_parameter_2": 1,
                    "mode": 1,
                    "option": 1,
                    "param": 1,
                    "param2": 1,
                    "value": 3
                },
                "puVar1": {
                    "flag_pointer": 2,
                    "flag_ptr": 2,
                    "output_pointer": 1,
                    "output_ptr": 3,
                    "pointer": 2,
                    "pointer_to_value": 1,
                    "ptr_to_flag": 1,
                    "ptr_to_value": 1,
                    "result": 4,
                    "result_pointer": 5,
                    "result_ptr": 7,
                    "return_value_ptr": 1
                }
            },
            "called": [
                "FUN_00001696"
            ],
            "calling": [
                "FUN_000017dc"
            ],
            "code": "\nvoid set_flag_to_true_000016c8(undefined4 input1,undefined flag)\n\n{\n  undefined4 *result_ptr;\n  \n  result_ptr = (undefined4 *)FUN_00001696(input1,flag);\n  *result_ptr = 1;\n  return;\n}\n\n",
            "current_name": "set_flag_to_true_000016c8",
            "entrypoint": "0x000016c8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000016c8": "set_flag_to_true_000016c8",
                "param_1": "input1",
                "param_2": "flag",
                "puVar1": "result_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000016ec": {
            "additional_data": {
                "FUN_00001696": {
                    "calculate_value": 1,
                    "find_memory_address": 1
                },
                "FUN_000016ec": {
                    "initialize_flag": 6,
                    "initialize_variable": 1,
                    "set_flag": 14,
                    "set_flag_to1": 1,
                    "set_flag_to_one": 1,
                    "set_flag_to_true": 8
                },
                "param_1": {
                    "arg1": 7,
                    "code": 1,
                    "data": 1,
                    "flag_address": 1,
                    "flag_value": 1,
                    "input": 1,
                    "input1": 8,
                    "input_flag": 1,
                    "input_param": 1,
                    "input_param1": 1,
                    "input_value1": 1,
                    "param": 4,
                    "val1": 1,
                    "value": 2
                },
                "param_2": {
                    "arg2": 7,
                    "data": 1,
                    "flag": 7,
                    "flag_value": 1,
                    "input2": 8,
                    "input_param2": 1,
                    "input_value2": 1,
                    "status": 1,
                    "unused_param": 1,
                    "val2": 1,
                    "value": 2
                },
                "puVar1": {
                    "flag_address": 1,
                    "flag_pointer": 3,
                    "flag_ptr": 5,
                    "output_ptr": 3,
                    "pointer_to_flag": 3,
                    "pointer_to_memory": 1,
                    "ptr_result": 1,
                    "ptr_to_flag": 2,
                    "result": 3,
                    "result_pointer": 4,
                    "result_ptr": 4,
                    "return_pointer": 1
                }
            },
            "called": [
                "FUN_00001696"
            ],
            "calling": [
                "FUN_0000182c",
                "FUN_00001a18",
                "FUN_00001a60",
                "FUN_00001778",
                "FUN_00001a3c"
            ],
            "code": "\nvoid set_flag_to_true_000016ec(undefined4 input1,undefined input2)\n\n{\n  undefined *flag_ptr;\n  \n  flag_ptr = (undefined *)FUN_00001696(input1,input2);\n  *flag_ptr = 1;\n  return;\n}\n\n",
            "current_name": "set_flag_to_true_000016ec",
            "entrypoint": "0x000016ec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000016ec": "set_flag_to_true_000016ec",
                "param_1": "input1",
                "param_2": "input2",
                "puVar1": "flag_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001710": {
            "additional_data": {
                "FUN_00001696": {
                    "calculate_address": 1
                },
                "FUN_00001710": {
                    "clear_data": 1,
                    "clear_memory": 21,
                    "initialize_memory": 6,
                    "initialize_pointer_to_zero": 1,
                    "set_memory_to_zero": 1,
                    "zero_out_memory": 1
                },
                "param_1": {
                    "address": 1,
                    "arg1": 3,
                    "argument": 1,
                    "buffer": 1,
                    "config": 1,
                    "data_address": 1,
                    "data_pointer": 2,
                    "input": 3,
                    "input1": 6,
                    "input_address": 1,
                    "input_param": 2,
                    "input_parameter1": 1,
                    "input_val": 1,
                    "input_value": 1,
                    "memory_pointer": 1,
                    "param": 3,
                    "param_1": 1,
                    "value": 1
                },
                "param_2": {
                    "arg2": 3,
                    "data": 1,
                    "flag": 8,
                    "flag_param": 1,
                    "flags": 2,
                    "input2": 6,
                    "input_parameter2": 1,
                    "input_value": 1,
                    "param_2": 1,
                    "size": 6,
                    "unused": 1
                },
                "puVar1": {
                    "destination": 1,
                    "memory_address": 4,
                    "memory_location": 1,
                    "memory_pointer": 5,
                    "memory_ptr": 3,
                    "pointer": 1,
                    "pointer_to_data": 1,
                    "pointer_to_result": 1,
                    "ptr_to_buffer": 1,
                    "ptr_to_data": 1,
                    "ptr_to_memory": 4,
                    "result": 1,
                    "result_pointer": 2,
                    "result_ptr": 2,
                    "target_pointer": 1
                }
            },
            "called": [
                "FUN_00001696"
            ],
            "calling": [
                "FUN_00001960",
                "FUN_0000182c",
                "FUN_000018bc",
                "FUN_000019c0",
                "FUN_00001bb8",
                "FUN_00001734",
                "FUN_00001a60",
                "FUN_00001778"
            ],
            "code": "\nvoid clear_memory_00001710(undefined4 input1,undefined flag)\n\n{\n  undefined *memory_pointer;\n  \n  memory_pointer = (undefined *)FUN_00001696(input1,flag);\n  *memory_pointer = 0;\n  return;\n}\n\n",
            "current_name": "clear_memory_00001710",
            "entrypoint": "0x00001710",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001710": "clear_memory_00001710",
                "param_1": "input1",
                "param_2": "flag",
                "puVar1": "memory_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001734": {
            "additional_data": {
                "FUN_00001710": {
                    "copy_data": 3,
                    "load_data": 1,
                    "process_data": 7,
                    "set_data": 5,
                    "set_default_value": 1,
                    "set_initial_values": 2,
                    "set_initialization_params": 1,
                    "set_memory": 1,
                    "set_values": 2,
                    "set_variable": 1,
                    "update_data": 1,
                    "write_data": 1
                },
                "FUN_00001734": {
                    "execute_process": 1,
                    "initialize_data": 30
                },
                "param_1": {
                    "data": 5,
                    "data_address": 4,
                    "data_pointer": 11,
                    "data_ptr": 1,
                    "memory_address": 1,
                    "source_data": 3,
                    "value": 1
                },
                "param_2": {
                    "data_size": 14,
                    "length": 4,
                    "num_elements": 2,
                    "size": 6
                }
            },
            "called": [
                "FUN_00001710"
            ],
            "calling": [
                "FUN_000019c0",
                "FUN_00001a18",
                "FUN_00001a3c"
            ],
            "code": "\nvoid initialize_data_00001734(void)\n\n{\n  FUN_00001710(&DAT_40064005,6);\n  return;\n}\n\n",
            "current_name": "initialize_data_00001734",
            "entrypoint": "0x00001734",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001734": "initialize_data_00001734"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001748": {
            "additional_data": {
                "0x1f": {
                    "mask": 1
                },
                "DAT_40064003": {
                    "configuration_data": 1,
                    "current_data": 2,
                    "current_flags": 2,
                    "current_value": 1,
                    "data": 1,
                    "existing_data": 1,
                    "existing_flags": 1,
                    "existing_mask": 1,
                    "existing_value": 1,
                    "flag_value": 1,
                    "flags": 1,
                    "register_value": 2
                },
                "FUN_00001748": {
                    "combine_and_mask": 1,
                    "merge_flags": 1,
                    "set_bitwise_or_with_mask": 1,
                    "set_masked_bits": 1,
                    "update_bit_mask": 1,
                    "update_bits": 1,
                    "update_configuration": 1,
                    "update_configuration_flags": 1,
                    "update_data": 1,
                    "update_data_with_mask": 3,
                    "update_flag": 1,
                    "update_flag_with_mask": 1,
                    "update_flags": 8,
                    "update_flags_with_mask": 1,
                    "update_mask_bits": 1,
                    "update_masked_bits": 1,
                    "update_parameter_bits": 1,
                    "update_parameter_value": 1,
                    "update_register": 1,
                    "update_register_value": 1,
                    "update_register_with_mask": 1,
                    "update_value_with_mask": 1
                },
                "param_1": {
                    "bit_pattern": 1,
                    "bit_value": 1,
                    "byte_value": 1,
                    "flag": 1,
                    "input_byte": 7,
                    "input_flag": 2,
                    "input_value": 1,
                    "mask": 1,
                    "new_bits": 1,
                    "new_data": 3,
                    "new_flag_value": 1,
                    "new_flags": 1,
                    "new_mask": 1,
                    "new_value": 5,
                    "updated_data": 1,
                    "updated_flag": 1,
                    "value": 2
                },
                "param_n": {
                    "new_parameter_name": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00001960",
                "FUN_000018bc",
                "FUN_000019c0",
                "FUN_00001bb8",
                "FUN_0000191c"
            ],
            "code": "\nvoid update_configuration_flags_00001748(byte input_byte)\n\n{\n  DAT_40064003 = input_byte | DAT_40064003 & 0x1f;\n  return;\n}\n\n",
            "current_name": "update_configuration_flags_00001748",
            "entrypoint": "0x00001748",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001748": "update_configuration_flags_00001748",
                "param_1": "input_byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001778": {
            "additional_data": {
                "DAT_40064001": {
                    "flags": 1,
                    "register": 1
                },
                "FUN_000016ec": {
                    "apply_bitmask": 1,
                    "apply_filter": 1,
                    "apply_mask": 1,
                    "clear_bit": 1,
                    "modify_flags": 1,
                    "modify_register": 1,
                    "modify_register_value": 1,
                    "modify_value": 1,
                    "process_data": 4,
                    "set_bitmask": 1,
                    "set_bits_in_register": 1,
                    "set_configuration_flag": 1,
                    "set_flag_value": 1,
                    "set_flags": 2,
                    "set_register_value": 2,
                    "update_bit": 1,
                    "update_byte": 1,
                    "update_flag": 1,
                    "update_flag_state": 1,
                    "update_flags": 2
                },
                "FUN_00001710": {
                    "apply_configuration_update": 1,
                    "call_function": 8,
                    "call_other_function": 1,
                    "call_sub_function": 1,
                    "invoke_function": 1,
                    "send_configuration_update": 1,
                    "send_data": 5,
                    "send_flag_value": 1,
                    "send_register_data": 1,
                    "send_register_value": 1,
                    "set_bit": 1,
                    "update_configuration": 1,
                    "update_register": 1,
                    "update_value": 1,
                    "write_register_data": 1
                },
                "FUN_00001778": {
                    "modify_flags_and_call": 1,
                    "set_bitmask_and_call_function": 1,
                    "update_and_call_function": 1,
                    "update_and_send_data": 2,
                    "update_binary_flags": 1,
                    "update_bit": 1,
                    "update_bitmask": 1,
                    "update_bits_in_register": 1,
                    "update_configuration": 2,
                    "update_configuration_flags": 2,
                    "update_data": 1,
                    "update_data_bits": 1,
                    "update_flag_and_call_function": 2,
                    "update_flag_value": 1,
                    "update_flags_and_call_function": 7,
                    "update_register": 2,
                    "update_register_value": 4
                },
                "param_1": {
                    "config": 1,
                    "data": 5,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "flag_pointer": 2,
                    "flags": 2,
                    "input": 1,
                    "ptr_data": 1,
                    "register_address": 2,
                    "register_data": 1,
                    "register_ptr": 1
                },
                "param_2": {
                    "data_size": 1,
                    "data_to_write": 1,
                    "flag_length": 1,
                    "length": 3,
                    "num_bits_to_update": 1,
                    "num_of_bytes": 1,
                    "param": 1,
                    "register_value": 1,
                    "size": 8,
                    "value": 1
                }
            },
            "called": [
                "FUN_000016ec",
                "FUN_00001710"
            ],
            "calling": [
                "FUN_000019c0",
                "FUN_0000191c"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0000179c) */\n/* WARNING: Removing unreachable block (ram,0x000017b2) */\n/* WARNING: Removing unreachable block (ram,0x000017c0) */\n\nvoid update_flags_and_call_function_00001778(void)\n\n{\n  DAT_40064001 = DAT_40064001 & 0xcf | 0x20;\n  FUN_00001710(&DAT_40064001,2);\n  return;\n}\n\n",
            "current_name": "update_flags_and_call_function_00001778",
            "entrypoint": "0x00001778",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001778": "update_flags_and_call_function_00001778"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000017dc": {
            "additional_data": {
                "DAT_4004803c": {
                    "data_array": 1
                },
                "FUN_000016c8": {
                    "configure_device": 1,
                    "configure_memory": 1,
                    "configure_peripheral": 4,
                    "configure_port": 1,
                    "configure_registers": 1,
                    "configure_system": 1,
                    "initialize_components": 1,
                    "initialize_data": 2,
                    "initialize_memory": 2,
                    "initialize_parameter": 1,
                    "initialize_sub_function": 1,
                    "initialize_subcomponent": 1,
                    "process_data": 1,
                    "set_buffer": 1,
                    "set_configuration": 2,
                    "set_configuration_params": 1,
                    "set_data": 1,
                    "set_initial_values": 2,
                    "set_memory": 1,
                    "set_memory_region": 1,
                    "set_register_value": 1,
                    "setup_memory": 1,
                    "setup_registers": 1
                },
                "FUN_000017dc": {
                    "initialize_component": 1,
                    "initialize_data": 2,
                    "initialize_device": 2,
                    "initialize_function": 1,
                    "initialize_hardware": 12,
                    "initialize_memory": 4,
                    "initialize_memory_and_config": 1,
                    "initialize_peripheral": 1,
                    "initialize_system": 4,
                    "initiate_data_processing": 1,
                    "set_configuration": 1,
                    "set_flags_and_permissions": 1
                },
                "_DAT_4003d010": {
                    "control_register": 5,
                    "flag": 1,
                    "flags_and_permissions": 1,
                    "hardware_status": 1,
                    "status_register": 5
                },
                "_DAT_40047000": {
                    "control_register": 1,
                    "device_config": 1,
                    "device_register": 1,
                    "hardware_config_register": 1,
                    "hardware_configuration": 1,
                    "hardware_control_register": 1,
                    "hardware_register": 1,
                    "memory_address": 1,
                    "memory_configuration_register": 1,
                    "memory_control_register": 1,
                    "memory_flags": 1,
                    "memory_register": 1,
                    "register_value": 1
                },
                "param_1": {
                    "buffer_address": 1,
                    "component_data": 1,
                    "config_data": 4,
                    "data": 1,
                    "data_address": 4,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "device_address": 1,
                    "memory_address": 4,
                    "memory_config": 1,
                    "memory_region_address": 1,
                    "parameter": 1,
                    "peripheral_address": 4,
                    "port_address": 1,
                    "register_address": 2,
                    "registers": 1,
                    "subcomponent_data": 1
                },
                "param_2": {
                    "buffer_size": 1,
                    "config_length": 1,
                    "config_size": 3,
                    "config_value": 4,
                    "configuration_value": 2,
                    "data": 1,
                    "data_length": 3,
                    "data_size": 3,
                    "length": 3,
                    "memory_region_size": 1,
                    "memory_size": 1,
                    "register_value": 1,
                    "size": 2,
                    "subcomponent_size": 1,
                    "value": 4
                }
            },
            "called": [
                "FUN_000016c8"
            ],
            "calling": [
                "FUN_00001c84"
            ],
            "code": "\n\n\nvoid initialize_hardware_000017dc(void)\n\n{\n  FUN_000016c8(&DAT_4004803c,0x1d);\n  if ((_DAT_4003d010 & 0x100) == 0) {\n    _DAT_4003d010 = 0x104;\n  }\n  _DAT_40047000 = _DAT_40047000 & 0xfff3ffff | 0x80000;\n  return;\n}\n\n",
            "current_name": "initialize_hardware_000017dc",
            "entrypoint": "0x000017dc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000017dc": "initialize_hardware_000017dc"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0000182c": {
            "additional_data": {
                "DAT_40064000": {
                    "flag_value": 1
                },
                "DAT_40064001": {
                    "pointer_value": 1
                },
                "DAT_40064008": {
                    "data": 1
                },
                "FUN_000016ec": {
                    "clear_data": 3,
                    "clear_data_value": 1,
                    "configure_data": 1,
                    "initialize_data": 6,
                    "initialize_flags": 1,
                    "initialize_param1": 1,
                    "initialize_value": 1,
                    "reset_flag": 1,
                    "set_data": 2,
                    "set_device_state": 1,
                    "set_flag": 5,
                    "set_flag_value": 1,
                    "set_initial_value": 1,
                    "set_parameter_value": 1,
                    "set_pin_value": 1,
                    "set_pointer_value": 1,
                    "update_config": 1,
                    "update_data_value": 1
                },
                "FUN_00001710": {
                    "configure_device": 1,
                    "configure_pin": 1,
                    "modify_flag": 2,
                    "process_data": 5,
                    "set_flag": 10,
                    "set_values": 1,
                    "toggle_data": 1,
                    "toggle_device_state": 1,
                    "toggle_flag": 3,
                    "update_data": 5
                },
                "FUN_0000182c": {
                    "clear_flags": 1,
                    "clear_flags_and_initialize": 1,
                    "initialize_data": 15,
                    "initialize_device": 1,
                    "set_reset_pins": 1,
                    "update_byte_and_call_functions": 1,
                    "update_data": 9,
                    "update_registers": 1,
                    "update_settings": 1
                },
                "param_1": {
                    "data_buffer": 1,
                    "data_pointer": 6,
                    "data_ptr": 2,
                    "pointer": 1,
                    "pointer_to_data": 1
                },
                "param_2": {
                    "flag": 11
                }
            },
            "called": [
                "FUN_000016ec",
                "FUN_00001710"
            ],
            "calling": [
                "FUN_00001c84"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0000187c) */\n/* WARNING: Removing unreachable block (ram,0x0000186a) */\n/* WARNING: Removing unreachable block (ram,0x00001898) */\n\nvoid initialize_data_0000182c(void)\n\n{\n  DAT_40064008 = DAT_40064008 & 0xd0;\n  FUN_000016ec(&DAT_40064001,0);\n  FUN_00001710(&DAT_40064000,1);\n  FUN_00001710(&DAT_40064000,0);\n  return;\n}\n\n",
            "current_name": "initialize_data_0000182c",
            "entrypoint": "0x0000182c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0000182c": "initialize_data_0000182c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000018bc": {
            "additional_data": {
                "DAT_1fff0b74": {
                    "completion_flag": 1,
                    "counter": 7,
                    "device_flag": 1,
                    "error_code": 2,
                    "loop_counter": 1,
                    "new_value": 1,
                    "result": 2,
                    "result_variable": 1
                },
                "DAT_40064000": {
                    "configuration": 1,
                    "configuration_flags": 1,
                    "data_flag": 1,
                    "data_value": 2,
                    "data_variable": 1,
                    "device_config": 2,
                    "device_status": 1,
                    "hardware_status": 1,
                    "old_data": 1,
                    "port_config": 1,
                    "system_config": 3,
                    "timer_config": 1
                },
                "DAT_40064001": {
                    "data_buffer": 2,
                    "data_pointer": 1,
                    "data_variable_2": 1,
                    "device_address": 1,
                    "device_settings": 1,
                    "feature_enable_flag": 1,
                    "flag_address": 1,
                    "flag_pointer": 1,
                    "flag_ptr": 1,
                    "memory_address": 1,
                    "memory_array": 1,
                    "memory_config": 1,
                    "settings_address": 1,
                    "timer_data": 1
                },
                "DAT_40064006": {
                    "control_flag": 1,
                    "data_variable_3": 1,
                    "device_control": 1,
                    "device_status": 3,
                    "flag": 1,
                    "status": 2,
                    "status_flags": 1,
                    "status_register": 2,
                    "status_value": 1,
                    "system_status": 2,
                    "timer_status": 1
                },
                "FUN_00001710": {
                    "configure_device": 4,
                    "configure_peripheral": 1,
                    "configure_settings": 1,
                    "enable_feature": 1,
                    "init_memory": 1,
                    "initialize_buffer": 1,
                    "initialize_data": 3,
                    "initialize_data_buffer": 1,
                    "initialize_device_settings": 1,
                    "initialize_flag": 1,
                    "initialize_memory": 2,
                    "send_data": 1,
                    "send_data_to_module": 1,
                    "set_buffer_size": 1,
                    "set_data": 2,
                    "set_flag": 1,
                    "set_memory_value": 1,
                    "set_system_config": 1,
                    "wait_for_flag": 1,
                    "wait_for_sensor_ready": 1,
                    "write_data": 2
                },
                "FUN_00001748": {
                    "send_data": 1,
                    "send_initialization_byte": 1,
                    "set_byte_value": 4,
                    "set_config_value": 1,
                    "set_configuration": 5,
                    "set_device_configuration": 1,
                    "set_device_mode": 1,
                    "set_device_power_state": 1,
                    "set_initial_value": 2,
                    "set_memory_address": 1,
                    "set_mode": 7,
                    "set_port": 1,
                    "set_register_value": 1,
                    "set_sensor_configuration": 1,
                    "set_timer": 1
                },
                "FUN_000018bc": {
                    "initialize": 1,
                    "initialize_and_reset": 1,
                    "initialize_communication": 1,
                    "initialize_data": 1,
                    "initialize_device": 5,
                    "initialize_hardware": 2,
                    "initialize_sensor": 1,
                    "initialize_system": 17,
                    "initialize_timer": 1
                },
                "param_1": {
                    "address": 1,
                    "byte_value": 5,
                    "config_data": 1,
                    "configuration": 2,
                    "data_pointer": 1,
                    "mode": 6,
                    "port_number": 1,
                    "power_state": 1,
                    "timer_value": 1,
                    "value": 3
                },
                "param_2": {
                    "config_flag": 1,
                    "data": 1,
                    "data_size": 1,
                    "device_config": 1,
                    "flag": 7,
                    "flag_value": 1,
                    "is_enabled": 1,
                    "length": 2,
                    "setting": 1,
                    "undefined_value": 1,
                    "unspecified": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_00001748",
                "FUN_00001710"
            ],
            "calling": [
                "FUN_00001b10"
            ],
            "code": "\nvoid initialize_system_000018bc(void)\n\n{\n  FUN_00001748(0xa0);\n  DAT_40064000 = DAT_40064000 & 0x3b | 4;\n  FUN_00001710(&DAT_40064001,1);\n  do {\n  } while ((DAT_40064006 & 0x10) == 0);\n  do {\n  } while ((DAT_40064006 & 0xc) != 0);\n  DAT_1fff0b74 = 0;\n  return;\n}\n\n",
            "current_name": "initialize_system_000018bc",
            "entrypoint": "0x000018bc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000018bc": "initialize_system_000018bc"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0000191c": {
            "additional_data": {
                "DAT_1fff0b74": {
                    "flag": 1,
                    "function_return": 1,
                    "initialized": 1,
                    "program_status": 1,
                    "result": 1
                },
                "DAT_40064000": {
                    "data_flag": 1,
                    "data_variable": 1,
                    "device_state": 1,
                    "flag": 1,
                    "system_state": 1
                },
                "DAT_40064006": {
                    "control_flag": 1,
                    "data": 1,
                    "device_status": 1,
                    "status_variable": 1,
                    "system_status": 1
                },
                "FUN_00001748": {
                    "allocate_memory": 1,
                    "set_bit": 1,
                    "set_buffer_length": 1,
                    "set_buffer_size": 1,
                    "set_byte": 1,
                    "set_configuration": 6,
                    "set_flag": 12,
                    "set_flag_value": 2,
                    "set_internal_memory_size": 1,
                    "set_memory_value": 1,
                    "set_mode": 3,
                    "set_parameter_value": 1
                },
                "FUN_00001778": {
                    "do_something": 1,
                    "execute_preparation": 1,
                    "function_a": 1,
                    "initialize_components": 6,
                    "initialize_configuration": 1,
                    "initialize_data": 1,
                    "initialize_device": 1,
                    "initialize_hardware": 2,
                    "initialize_system": 3,
                    "initiate_hardware": 1,
                    "perform_initial_setup": 1,
                    "perform_initialization": 4,
                    "perform_pre_tasks": 1,
                    "perform_preparation": 1,
                    "perform_startup": 1,
                    "perform_system_check": 1,
                    "perform_task": 1,
                    "prepare_data": 1,
                    "reset_flag": 1,
                    "reset_flags": 1
                },
                "FUN_0000191c": {
                    "initialize": 3,
                    "initialize_app": 1,
                    "initialize_data": 12,
                    "initialize_device": 4,
                    "initialize_flags": 1,
                    "initialize_hardware": 1,
                    "initialize_program": 1,
                    "initialize_system": 8
                },
                "param_1": {
                    "byte_value": 2,
                    "configuration_value": 1,
                    "flag_value": 2,
                    "mode": 2,
                    "size": 1,
                    "value": 3
                }
            },
            "called": [
                "FUN_00001748",
                "FUN_00001778"
            ],
            "calling": [
                "FUN_00001b10"
            ],
            "code": "\nvoid initialize_data_0000191c(void)\n\n{\n  FUN_00001778();\n  FUN_00001748(0x40);\n  DAT_40064000 = DAT_40064000 & 0x3b;\n  do {\n  } while ((DAT_40064006 & 0xc) != 0);\n  DAT_1fff0b74 = 1;\n  return;\n}\n\n",
            "current_name": "initialize_data_0000191c",
            "entrypoint": "0x0000191c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0000191c": "initialize_data_0000191c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001960": {
            "additional_data": {
                "0xa0": {
                    "mode": 1,
                    "power_mode": 1
                },
                "DAT_1fff0b74": {
                    "device_mode": 2,
                    "device_state": 3,
                    "flag": 1,
                    "flag_byte": 1,
                    "initialization_status": 1,
                    "result": 4,
                    "return_code": 1,
                    "return_value": 1,
                    "status": 1,
                    "system_state": 1,
                    "system_status": 3
                },
                "DAT_40064000": {
                    "config": 1,
                    "config_byte": 1,
                    "config_flag": 1,
                    "config_flags": 1,
                    "configuration": 1,
                    "control_flags": 1,
                    "control_register": 1,
                    "data": 1,
                    "data_value": 1,
                    "device_config": 1,
                    "device_control": 1,
                    "device_flags": 2,
                    "device_mode": 1,
                    "device_settings": 1,
                    "device_status": 2,
                    "flags": 1,
                    "memory_flag": 1,
                    "memory_value": 1
                },
                "DAT_40064001": {
                    "buffer": 1,
                    "config_data": 1,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "device_address": 1,
                    "device_config_ptr": 1,
                    "device_configuration": 1,
                    "device_register": 1,
                    "memory_address": 2,
                    "peripheral_address": 1,
                    "peripheral_register": 1
                },
                "DAT_40064006": {
                    "control_register": 1,
                    "device_control": 1,
                    "device_status": 5,
                    "peripheral_status": 1,
                    "register_value": 1,
                    "status": 4,
                    "status_byte": 1,
                    "status_flag": 2,
                    "status_flags": 1,
                    "status_register": 3
                },
                "FUN_00001710": {
                    "configure_device": 3,
                    "configure_peripheral": 2,
                    "initialize_data": 4,
                    "initialize_memory": 4,
                    "load_configuration": 1,
                    "set_configuration": 1,
                    "set_device_config": 1,
                    "set_device_status": 1,
                    "set_memory": 2,
                    "write_byte": 1,
                    "write_data": 4,
                    "write_memory": 1,
                    "write_to_device": 1
                },
                "FUN_00001748": {
                    "set_byte_value": 1,
                    "set_config_value": 1,
                    "set_configuration": 3,
                    "set_control_byte": 1,
                    "set_device_configuration": 2,
                    "set_device_mode": 2,
                    "set_device_parameter": 1,
                    "set_flag": 1,
                    "set_memory": 1,
                    "set_memory_value": 1,
                    "set_mode": 8,
                    "set_operation_mode": 1,
                    "set_parameter": 1,
                    "set_power_mode": 2
                },
                "FUN_00001960": {
                    "initialize_device": 7,
                    "initialize_hardware": 3,
                    "initialize_internal_data": 1,
                    "initialize_system": 18,
                    "initiate_process": 1
                },
                "FUn_00001960": {
                    "initialize_system": 1
                },
                "newVariableName_1": {
                    "modified_config_byte": 1
                },
                "newVariableName_2": {
                    "config_status": 1
                },
                "param_1": {
                    "byte_value": 5,
                    "config": 1,
                    "config_byte": 1,
                    "config_param": 1,
                    "config_value": 1,
                    "configuration_byte": 2,
                    "flag_value": 1,
                    "mode": 9,
                    "parameter": 1,
                    "power_mode": 1,
                    "value": 4
                },
                "param_2": {
                    "bool_value": 1,
                    "config": 3,
                    "config_flag": 2,
                    "configuration": 1,
                    "data": 5,
                    "data_param": 1,
                    "data_value": 1,
                    "flag": 3,
                    "memory_value": 1,
                    "size": 3,
                    "status": 1,
                    "undefined_value": 4,
                    "value": 1
                }
            },
            "called": [
                "FUN_00001748",
                "FUN_00001710"
            ],
            "calling": [
                "FUN_00001b10"
            ],
            "code": "\nvoid initialize_system_00001960(void)\n\n{\n  FUN_00001748(0xa0);\n  FUN_00001710(&DAT_40064001,1);\n  DAT_40064000 = DAT_40064000 & 0x3b | 0x44;\n  do {\n  } while ((DAT_40064006 & 0xc) != 4);\n  do {\n  } while ((DAT_40064006 & 0x10) == 0);\n  DAT_1fff0b74 = 2;\n  return;\n}\n\n",
            "current_name": "initialize_system_00001960",
            "entrypoint": "0x00001960",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001960": "initialize_system_00001960"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000019c0": {
            "additional_data": {
                "DAT_1fff0b74": {
                    "constant_value": 1,
                    "device_status": 1,
                    "error_code": 4,
                    "process_status": 1,
                    "result": 2,
                    "status": 1,
                    "system_state": 1
                },
                "DAT_40064000": {
                    "config_data": 1,
                    "config_value": 1,
                    "data": 1,
                    "data_value": 1,
                    "device_param2": 1,
                    "device_settings": 1,
                    "device_status": 3,
                    "flag": 1,
                    "memory_size": 1,
                    "memory_value": 1,
                    "system_state": 1
                },
                "DAT_40064001": {
                    "config_data": 2,
                    "data_address": 1,
                    "data_pointer": 1,
                    "device_address": 1,
                    "device_configuration": 2,
                    "memory_address": 4
                },
                "DAT_40064006": {
                    "data_mask": 1,
                    "device_flags": 3,
                    "device_status": 2,
                    "interrupt_status": 1,
                    "memory_status": 1,
                    "status": 1,
                    "status_register": 1,
                    "subsystem_status": 1,
                    "system_status": 1
                },
                "FUN_00001710": {
                    "configure_data": 1,
                    "configure_device": 6,
                    "configure_parameter": 1,
                    "configure_settings": 2,
                    "configure_subsystem": 1,
                    "enable_interrupt": 1,
                    "initialize_data": 1,
                    "initialize_memory": 2,
                    "set_address": 1,
                    "set_configuration": 3,
                    "set_data": 1,
                    "set_device_parameters": 1,
                    "set_memory": 2,
                    "set_memory_address": 1,
                    "set_mode": 1,
                    "set_options": 1,
                    "set_parameters": 1,
                    "set_register_value": 1,
                    "write_data": 1,
                    "write_data_to_memory": 1,
                    "write_value_to_memory": 1
                },
                "FUN_00001734": {
                    "cleanup": 13,
                    "cleanup_and_exit": 1,
                    "cleanup_operations": 1,
                    "cleanup_process": 1,
                    "cleanup_resources": 1,
                    "cleanup_system": 3,
                    "complete_initialization": 1,
                    "finalize_data": 1,
                    "finalize_initialization": 6,
                    "finalize_system": 2,
                    "post_processing": 1
                },
                "FUN_00001748": {
                    "configure": 1,
                    "set_buffer": 1,
                    "set_buffer_length": 1,
                    "set_buffer_size": 1,
                    "set_byte_value": 1,
                    "set_config": 1,
                    "set_configuration": 9,
                    "set_control_value": 2,
                    "set_device_state": 1,
                    "set_flag": 2,
                    "set_memory": 1,
                    "set_memory_size": 2,
                    "set_mode": 8
                },
                "FUN_00001778": {
                    "call_startup_routine": 1,
                    "check_memory": 1,
                    "configure_device": 1,
                    "configure_hardware": 1,
                    "establish_connection": 1,
                    "execute_setup": 1,
                    "initialize_components": 4,
                    "initialize_hardware": 2,
                    "initialize_memory": 1,
                    "initialize_modules": 2,
                    "initialize_service": 1,
                    "initialize_state": 1,
                    "initialize_subsystem": 3,
                    "initialize_subsystems": 1,
                    "initialize_system": 1,
                    "perform_calibration": 1,
                    "perform_initialization": 1,
                    "perform_pre_initialization": 3,
                    "pre_processing": 1,
                    "prepare_system": 1,
                    "setup_interrupts": 1
                },
                "FUN_000019c0": {
                    "initialize": 1,
                    "initialize_and_check_status": 1,
                    "initialize_communication": 2,
                    "initialize_data": 1,
                    "initialize_device": 13,
                    "initialize_hardware": 3,
                    "initialize_system": 10
                },
                "param_1": {
                    "buffer_length": 1,
                    "buffer_size": 2,
                    "byte_size": 1,
                    "byte_value": 5,
                    "config_byte": 2,
                    "config_param1": 1,
                    "configuration": 1,
                    "configuration_byte": 1,
                    "flag": 1,
                    "mode": 5,
                    "state": 1
                },
                "param_2": {
                    "config": 1,
                    "config_param2": 1,
                    "data": 1,
                    "default_value": 1,
                    "device_type": 1,
                    "flag": 3,
                    "num_params": 1,
                    "option": 2,
                    "undefined_value": 2,
                    "unused_param": 1,
                    "value": 1,
                    "value_to_write": 1
                }
            },
            "called": [
                "FUN_00001748",
                "FUN_00001734",
                "FUN_00001778",
                "FUN_00001710"
            ],
            "calling": [
                "FUN_00001b10"
            ],
            "code": "\nvoid initialize_device_000019c0(void)\n\n{\n  FUN_00001778();\n  FUN_00001748(0x40);\n  FUN_00001710(&DAT_40064001,1);\n  DAT_40064000 = DAT_40064000 & 0x3b | 0x80;\n  do {\n  } while ((DAT_40064006 & 0xc) != 8);\n  FUN_00001734();\n  DAT_1fff0b74 = 3;\n  return;\n}\n\n",
            "current_name": "initialize_device_000019c0",
            "entrypoint": "0x000019c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000019c0": "initialize_device_000019c0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001a18": {
            "additional_data": {
                "DAT_1fff0b74": {
                    "constant_value": 2,
                    "data_value": 1
                },
                "DAT_40064001": {
                    "data": 1
                },
                "FUN_000016ec": {
                    "load_data_block": 1,
                    "set_configuration": 12,
                    "set_data": 6,
                    "set_data_flag": 1,
                    "set_flag": 6,
                    "set_initial_value": 1,
                    "set_memory": 1,
                    "set_value": 2,
                    "write_data_to_memory": 1
                },
                "FUN_00001734": {
                    "do_something": 1,
                    "execute_process": 2,
                    "perform_action": 8,
                    "perform_additional_setup": 1,
                    "perform_additional_steps": 1,
                    "perform_additional_tasks": 1,
                    "perform_initialization": 8,
                    "perform_operation": 2,
                    "perform_setup": 3,
                    "perform_system_check": 1,
                    "perform_task": 1,
                    "reset_data": 1,
                    "reset_system": 1
                },
                "FUN_00001a18": {
                    "initialize_application": 1,
                    "initialize_data": 19,
                    "initialize_data_structures": 1,
                    "initialize_program": 1,
                    "initialize_settings": 1,
                    "initialize_system": 7,
                    "initialize_system_state": 1
                },
                "param_1": {
                    "config_data": 1,
                    "data_address": 1,
                    "data_block_address": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "value": 1
                },
                "param_2": {
                    "config_flag": 1,
                    "data_block_size": 1,
                    "flag": 4,
                    "flag_value": 1
                }
            },
            "called": [
                "FUN_000016ec",
                "FUN_00001734"
            ],
            "calling": [
                "FUN_00001b10"
            ],
            "code": "\nvoid initialize_data_structures_00001a18(void)\n\n{\n  FUN_000016ec(&DAT_40064001,1);\n  FUN_00001734();\n  DAT_1fff0b74 = 4;\n  return;\n}\n\n",
            "current_name": "initialize_data_structures_00001a18",
            "entrypoint": "0x00001a18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001a18": "initialize_data_structures_00001a18"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001a3c": {
            "additional_data": {
                "DAT_1fff0b74": {
                    "constant": 1,
                    "counter": 1,
                    "data_counter": 1,
                    "data_size": 1,
                    "data_status": 1,
                    "data_value": 2,
                    "flag_value": 1
                },
                "DAT_40064001": {
                    "data": 3
                },
                "FUN_000016ec": {
                    "initialize": 1,
                    "initialize_data": 2,
                    "initialize_data_with_parameter": 1,
                    "process_data": 1,
                    "set_config": 2,
                    "set_configuration": 4,
                    "set_data": 5,
                    "set_flag": 6,
                    "set_global_data": 1,
                    "set_initial_value": 1,
                    "set_initial_values": 1,
                    "set_memory": 1,
                    "set_pointer_value": 1,
                    "set_settings": 1,
                    "set_system_flag": 1,
                    "set_value": 1,
                    "update_data": 1
                },
                "FUN_00001734": {
                    "cleanup": 2,
                    "clear_memory": 1,
                    "clear_screen": 1,
                    "do_something": 2,
                    "execute_function": 1,
                    "execute_routine": 1,
                    "perform_action": 10,
                    "perform_additional_operations": 1,
                    "perform_additional_setup": 1,
                    "perform_additional_tasks": 1,
                    "perform_cleanup": 1,
                    "perform_initialization": 2,
                    "perform_operation": 1,
                    "perform_task": 4,
                    "reset_device": 1,
                    "reset_system": 1
                },
                "FUN_00001a3c": {
                    "initialize_data": 24,
                    "initialize_global_data": 1,
                    "initialize_settings": 1,
                    "initialize_system": 3,
                    "set_descriptive_name": 1,
                    "set_initial_values": 1
                },
                "param_1": {
                    "config_data": 2,
                    "data": 3,
                    "data_address": 1,
                    "data_pointer": 4,
                    "data_ptr": 2,
                    "flag_address": 2
                },
                "param_2": {
                    "data_value": 1,
                    "flag": 6,
                    "flag_value": 2,
                    "parameter": 2,
                    "value": 3
                }
            },
            "called": [
                "FUN_000016ec",
                "FUN_00001734"
            ],
            "calling": [
                "FUN_00001b10"
            ],
            "code": "\nvoid initialize_global_data_00001a3c(void)\n\n{\n  FUN_000016ec(&DAT_40064001,1);\n  FUN_00001734();\n  DAT_1fff0b74 = 5;\n  return;\n}\n\n",
            "current_name": "initialize_global_data_00001a3c",
            "entrypoint": "0x00001a3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001a3c": "initialize_global_data_00001a3c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001a60": {
            "additional_data": {
                "DAT_1fff0b74": {
                    "buffer_size": 1,
                    "counter": 1,
                    "error_code": 4,
                    "loop_counter": 1,
                    "result": 3,
                    "return_value": 1,
                    "sensor_count": 1
                },
                "DAT_40064000": {
                    "config_data": 1,
                    "config_flag": 1,
                    "device_control": 2,
                    "device_status": 1,
                    "flag_value": 1,
                    "flags": 1,
                    "mask": 1,
                    "modified_control_reg_data": 1,
                    "register_value": 1,
                    "status_register": 2
                },
                "DAT_40064001": {
                    "communication_data": 1,
                    "configuration_data": 1,
                    "control_register": 2,
                    "control_register_data": 1,
                    "device_address": 1,
                    "device_config_ptr": 1,
                    "flag_data": 1,
                    "flags": 1,
                    "hardware_config": 1,
                    "hardware_register": 1,
                    "memory_location": 1
                },
                "DAT_40064005": {
                    "config_buffer": 1,
                    "data": 2,
                    "data_address": 1,
                    "data_ptr": 1,
                    "data_register": 1,
                    "flag_register": 1,
                    "param_ptr": 1,
                    "register_address2": 1,
                    "send_data_buffer": 1,
                    "sensor_register": 1,
                    "transmission_params": 1
                },
                "DAT_40064006": {
                    "communication_status": 1,
                    "data_status": 1,
                    "device_flags": 1,
                    "device_status": 2,
                    "interrupt_register": 1,
                    "status": 1,
                    "status_flag": 1,
                    "status_flags": 1,
                    "status_register": 2,
                    "status_value": 1
                },
                "FUN_000016ec": {
                    "configure_hardware_component": 1,
                    "configure_sensor": 1,
                    "initialize_data": 1,
                    "initialize_registers": 1,
                    "send_command": 1,
                    "send_data": 7,
                    "set_buffer_values": 1,
                    "set_configuration": 4,
                    "set_control_bits": 2,
                    "set_device_parameters": 1,
                    "set_flag": 1,
                    "set_flag6_bit_value": 1,
                    "set_flag_bits": 2,
                    "set_param": 1,
                    "set_register": 1,
                    "set_register_value": 2,
                    "set_transmission_params": 1,
                    "set_values": 1,
                    "write_data": 1
                },
                "FUN_00001710": {
                    "config_module": 1,
                    "configure_communication": 2,
                    "configure_control": 1,
                    "configure_device": 5,
                    "configure_hardware": 2,
                    "configure_peripheral": 1,
                    "configure_settings": 1,
                    "enable_feature": 1,
                    "enable_interrupts": 1,
                    "initialize_data_buffer": 1,
                    "initialize_memory": 1,
                    "initialize_memory_buffer": 1,
                    "set_bits_in_register": 1,
                    "set_configuration": 1,
                    "set_configuration_bits": 1,
                    "set_control_bits": 2,
                    "set_flag": 2,
                    "set_flag1_bit_value": 1,
                    "set_flags": 2,
                    "set_hardware_value": 1,
                    "write_data": 1,
                    "write_data_to_memory": 1
                },
                "FUN_00001a60": {
                    "initialize_communication": 8,
                    "initialize_communication_protocol": 1,
                    "initialize_data": 1,
                    "initialize_device": 9,
                    "initialize_hardware": 8,
                    "initialize_hardware_component": 1,
                    "initialize_peripheral": 1,
                    "initialize_process": 1,
                    "initialize_system": 1
                },
                "param_1": {
                    "buffer": 1,
                    "buffer_address": 1,
                    "config_data": 3,
                    "config_param1": 1,
                    "config_params": 1,
                    "control_register": 1,
                    "data": 1,
                    "data_address": 1,
                    "data_buffer": 1,
                    "data_pointer": 3,
                    "data_pointer1": 1,
                    "device_config": 1,
                    "memory_address": 1,
                    "register_address": 3
                },
                "param_2": {
                    "bitmask": 1,
                    "buffer_size": 2,
                    "config_param2": 1,
                    "config_size": 2,
                    "data_length": 5,
                    "data_size": 3,
                    "length": 1,
                    "num_bits": 1,
                    "param": 1,
                    "register_value": 1,
                    "size": 2
                }
            },
            "called": [
                "FUN_000016ec",
                "FUN_00001710"
            ],
            "calling": [
                "FUN_00001b10"
            ],
            "code": "\nvoid initialize_communication_protocol_00001a60(void)\n\n{\n  FUN_00001710(&DAT_40064001,1);\n  DAT_40064000 = DAT_40064000 & 0x3f | 0x80;\n  do {\n  } while ((DAT_40064006 & 0xc) != 8);\n  FUN_000016ec(&DAT_40064005,6);\n  do {\n  } while ((DAT_40064006 & 0x20) == 0);\n  do {\n  } while ((DAT_40064006 & 0x40) == 0);\n  DAT_1fff0b74 = 6;\n  return;\n}\n\n",
            "current_name": "initialize_communication_protocol_00001a60",
            "entrypoint": "0x00001a60",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001a60": "initialize_communication_protocol_00001a60"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001ad4": {
            "additional_data": {
                "DAT_1fff0b74": {
                    "constant_seven": 1,
                    "constant_value": 1,
                    "count": 1,
                    "counter": 7,
                    "data_initial_value": 1,
                    "data_size": 1,
                    "data_value": 1,
                    "error_code": 1,
                    "flag": 1,
                    "flag_value": 1,
                    "initial_value": 1,
                    "loop_count": 1,
                    "magic_number": 1,
                    "new_mode": 1,
                    "new_status": 1,
                    "new_value": 3,
                    "number_of_items": 1,
                    "result": 2,
                    "sensor_status": 1,
                    "status": 1,
                    "value": 2
                },
                "DAT_40064000": {
                    "bitmask": 1,
                    "config": 1,
                    "configuration_flags": 1,
                    "control_register": 1,
                    "dat_register": 1,
                    "data": 2,
                    "data_flags": 1,
                    "data_mask": 4,
                    "data_masked": 1,
                    "data_masked_value": 1,
                    "data_value": 1,
                    "flag": 3,
                    "flags": 5,
                    "mask_value": 1,
                    "memory_address": 1,
                    "sensor_data": 1,
                    "settings": 1,
                    "settings_flags": 1,
                    "status_flag": 1,
                    "value": 1
                },
                "DAT_40064006": {
                    "bit_mask": 1,
                    "check_flag": 1,
                    "check_value": 2,
                    "condition": 1,
                    "condition_flags": 1,
                    "conditional_check": 1,
                    "control_register": 1,
                    "dat_flag": 1,
                    "data_check": 1,
                    "data_check_value": 1,
                    "flag": 3,
                    "flags": 1,
                    "flags_control": 1,
                    "mask_flags": 1,
                    "other_flags": 1,
                    "status": 4,
                    "status_flag": 1,
                    "status_flags": 2,
                    "status_register": 3,
                    "status_value": 1,
                    "temp_flag": 1
                },
                "FUN_00001ad4": {
                    "clear_bits_and_set_flag": 1,
                    "clear_bits_and_set_initial_value": 1,
                    "clear_bitwise_flags": 1,
                    "clear_flags": 1,
                    "clear_flags_and_set_mode": 1,
                    "initialize_data": 7,
                    "reset_and_set_flag": 1,
                    "reset_dat_register": 1,
                    "set_and_wait_for_bit": 1,
                    "set_bitmask_and_check": 1,
                    "set_bitmask_and_wait": 1,
                    "set_flag_value_to_seven": 1,
                    "update_and_set_flag": 1,
                    "update_and_validate_data": 1,
                    "update_config": 1,
                    "update_configuration": 1,
                    "update_data": 3,
                    "update_flags": 1,
                    "update_memory_address": 1,
                    "update_sensor_data": 1,
                    "update_settings": 2,
                    "update_status": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00001b10"
            ],
            "code": "\nvoid initialize_data_00001ad4(void)\n\n{\n  DAT_40064000 = DAT_40064000 & 0x3f;\n  do {\n  } while ((DAT_40064006 & 0xc) != 0xc);\n  DAT_1fff0b74 = 7;\n  return;\n}\n\n",
            "current_name": "initialize_data_00001ad4",
            "entrypoint": "0x00001ad4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001ad4": "initialize_data_00001ad4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001b10": {
            "additional_data": {
                "DAT_00007004": {
                    "function_table": 1
                },
                "DAT_1fff0b74": {
                    "function_table_size": 1,
                    "table_size": 1
                },
                "FUN_000018bc": {
                    "do_something0": 1,
                    "execute_case0": 1,
                    "execute_command0": 1,
                    "function0": 1,
                    "perform_action0": 1
                },
                "FUN_0000191c": {
                    "do_something1": 1,
                    "execute_case1": 1,
                    "execute_command1": 1,
                    "function1": 1,
                    "perform_action1": 1
                },
                "FUN_00001960": {
                    "do_something2": 1,
                    "execute_case2": 1,
                    "execute_command2": 1,
                    "function2": 1,
                    "perform_action2": 1
                },
                "FUN_000019c0": {
                    "do_something3": 1,
                    "execute_case3": 1,
                    "execute_command3": 1,
                    "function3": 1,
                    "perform_action3": 1
                },
                "FUN_00001a18": {
                    "do_something4": 1,
                    "execute_case4": 1,
                    "execute_command4": 1,
                    "function4": 1,
                    "perform_action4": 1
                },
                "FUN_00001a3c": {
                    "do_something5": 1,
                    "execute_case5": 1,
                    "execute_command5": 1,
                    "function5": 1,
                    "perform_action5": 1
                },
                "FUN_00001a60": {
                    "do_something6": 1,
                    "execute_case6": 1,
                    "execute_command6": 1,
                    "function6": 1,
                    "perform_action6": 1
                },
                "FUN_00001ad4": {
                    "do_something7": 1,
                    "execute_case7": 1,
                    "execute_command7": 1,
                    "function7": 1,
                    "perform_action7": 1
                },
                "FUN_00001b10": {
                    "execute_command": 1,
                    "execute_commands": 2,
                    "execute_function": 1,
                    "execute_functions": 1,
                    "execute_instructions": 1,
                    "execute_operations": 1,
                    "perform_action": 1,
                    "process_byte": 6,
                    "process_data": 8,
                    "process_function": 1,
                    "process_input": 6,
                    "process_parameter": 2
                },
                "param_1": {
                    "action_index": 1,
                    "byte_value": 6,
                    "command": 1,
                    "command_count": 1,
                    "data": 3,
                    "data_index": 1,
                    "index": 2,
                    "input": 6,
                    "input_byte": 3,
                    "input_data": 1,
                    "input_value": 1,
                    "instruction_index": 1,
                    "num_commands": 1,
                    "operation_index": 1,
                    "param": 1,
                    "parameter": 1
                },
                "uVar1": {
                    "result": 12,
                    "return_value": 16
                }
            },
            "called": [
                "FUN_00001960",
                "FUN_000018bc",
                "FUN_000019c0",
                "FUN_00001a18",
                "FUN_00001a60",
                "FUN_00001ad4",
                "FUN_00001a3c",
                "FUN_0000191c"
            ],
            "calling": [
                "FUN_00001c84"
            ],
            "code": "\nundefined4 process_data_00001b10(byte input)\n\n{\n  undefined4 return_value;\n  \n  if (input < 8) {\n    do {\n      switch((&DAT_00007004)[(uint)input + (uint)DAT_1fff0b74 * 8]) {\n      case 0:\n        FUN_000018bc();\n        break;\n      case 1:\n        FUN_0000191c();\n        break;\n      case 2:\n        FUN_00001960();\n        break;\n      case 3:\n        FUN_000019c0();\n        break;\n      case 4:\n        FUN_00001a18();\n        break;\n      case 5:\n        FUN_00001a3c();\n        break;\n      case 6:\n        FUN_00001a60();\n        break;\n      case 7:\n        FUN_00001ad4();\n        break;\n      default:\n        return 0xffffffff;\n      }\n    } while (input != DAT_1fff0b74);\n    return_value = 0;\n  }\n  else {\n    return_value = 0xffffffff;\n  }\n  return return_value;\n}\n\n",
            "current_name": "process_data_00001b10",
            "entrypoint": "0x00001b10",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001b10": "process_data_00001b10",
                "param_1": "input",
                "uVar1": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001bb8": {
            "additional_data": {
                "DAT_1fff0b74": {
                    "buffer": 1,
                    "reset_var": 1,
                    "result": 7,
                    "result_flag": 1,
                    "return_value": 1,
                    "variable_x": 1
                },
                "DAT_40064000": {
                    "config_mask": 1,
                    "control": 1,
                    "control_reg0": 1,
                    "data3": 2,
                    "data_register3": 1,
                    "device_config": 1,
                    "device_control_flags": 1,
                    "flag2": 1,
                    "flag3": 1,
                    "flag_state2": 1,
                    "status_flags": 1,
                    "value": 1
                },
                "DAT_40064001": {
                    "communication_state": 1,
                    "config_register1": 1,
                    "control_reg1": 1,
                    "data1": 2,
                    "data_register1": 1,
                    "device_flags": 1,
                    "device_status1": 1,
                    "flag1": 5
                },
                "DAT_40064005": {
                    "config_register2": 1,
                    "control_reg2": 1,
                    "data2": 2,
                    "data_register2": 1,
                    "device_status2": 1,
                    "device_status_flags": 1,
                    "flag2": 4,
                    "flag3": 1,
                    "flag_state1": 1
                },
                "DAT_40064006": {
                    "communication_status": 1,
                    "data4": 2,
                    "data_register4": 1,
                    "device_control": 1,
                    "device_status": 1,
                    "flag4": 1,
                    "status": 3,
                    "status_reg": 1,
                    "status_register": 2
                },
                "FUN_00001710": {
                    "configure_hardware": 1,
                    "configure_io": 1,
                    "configure_peripheral": 1,
                    "configure_registers": 1,
                    "configure_settings": 5,
                    "perform_action": 1,
                    "process_data": 3,
                    "send_data": 2,
                    "set_bits": 1,
                    "set_bits_in_control_register": 1,
                    "set_configuration": 2,
                    "set_flag": 2,
                    "set_flag_to1": 1,
                    "update_data": 8,
                    "update_value": 1
                },
                "FUN_00001748": {
                    "disable_all_interrupts": 1,
                    "disable_interrupt": 1,
                    "display_message": 1,
                    "do_something": 1,
                    "initialize_data": 1,
                    "initialize_state": 1,
                    "perform_action": 2,
                    "reset": 1,
                    "reset_flag": 4,
                    "reset_flags": 1,
                    "reset_hardware": 2,
                    "reset_peripheral": 1,
                    "reset_system": 1,
                    "send_data": 2,
                    "set_display_state": 1,
                    "set_flag": 8,
                    "set_flag_to_zero": 1,
                    "set_flags": 1
                },
                "FUN_00001bb8": {
                    "enhanced_function": 1,
                    "initialize_communication": 2,
                    "initialize_device": 1,
                    "initialize_hardware": 3,
                    "initialize_peripheral": 1,
                    "initialize_system": 10,
                    "perform_initialization": 2,
                    "perform_operation": 1,
                    "process_binary_data": 1,
                    "process_data": 8,
                    "update_flags": 1
                },
                "param_1": {
                    "action": 1,
                    "byte_data": 1,
                    "byte_value": 2,
                    "config_byte": 2,
                    "data1": 1,
                    "data_ptr1": 1,
                    "display_state": 1,
                    "flag": 9,
                    "flag1": 2,
                    "input_flag": 1,
                    "interrupt_state": 1,
                    "mode": 1,
                    "status": 1
                },
                "param_2": {
                    "bit_count": 1,
                    "bit_value": 1,
                    "config_param": 1,
                    "count": 1,
                    "data": 3,
                    "data2": 1,
                    "data_size": 2,
                    "flag2": 2,
                    "input_size": 1,
                    "length": 7,
                    "num_bits": 1,
                    "num_bytes": 1,
                    "num_bytes_to_update": 1,
                    "size": 1
                }
            },
            "called": [
                "FUN_00001748",
                "FUN_00001710"
            ],
            "calling": [
                "FUN_00001c84"
            ],
            "code": "\nvoid initialize_system_00001bb8(void)\n\n{\n  if ((DAT_40064001 & 2) != 0) {\n    FUN_00001710(&DAT_40064001,1);\n  }\n  if ((DAT_40064005 & 0x40) != 0) {\n    if ((DAT_40064000 & 0xc0) == 0) {\n      DAT_40064000 = DAT_40064000 & 0x3f | 0x80;\n      do {\n      } while ((DAT_40064006 & 0xc) != 8);\n    }\n    FUN_00001710(&DAT_40064005,6);\n    do {\n    } while ((DAT_40064006 & 0x20) != 0);\n  }\n  FUN_00001748(0);\n  DAT_40064000 = DAT_40064000 & 0x3b | 4;\n  do {\n  } while ((DAT_40064006 & 0x10) == 0);\n  do {\n  } while ((DAT_40064006 & 0xc) != 0);\n  DAT_1fff0b74 = 0;\n  return;\n}\n\n",
            "current_name": "initialize_system_00001bb8",
            "entrypoint": "0x00001bb8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001bb8": "initialize_system_00001bb8"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001c84": {
            "additional_data": {
                "DAT_40064000": {
                    "data_value": 1,
                    "flags": 1,
                    "variable2": 2
                },
                "DAT_40064004": {
                    "constant": 1,
                    "status_flag": 1,
                    "variable3": 1
                },
                "DAT_40064005": {
                    "flag": 1,
                    "status": 1,
                    "variable4": 1
                },
                "DAT_4006400c": {
                    "counter": 2,
                    "variable1": 2
                },
                "FUN_00000cd0": {
                    "get_config": 1,
                    "get_configuration": 4,
                    "get_data": 2,
                    "get_device_id": 3,
                    "get_device_status": 2,
                    "get_hardware_version": 1,
                    "get_initial_value": 7,
                    "get_initialization_value": 1,
                    "get_mode": 1,
                    "get_system_config": 1,
                    "get_system_configuration": 1,
                    "get_system_data": 1,
                    "get_system_version": 1,
                    "get_time": 1,
                    "get_user_id": 1,
                    "get_value": 1,
                    "initialize_device": 1,
                    "initialize_hardware": 1
                },
                "FUN_00000d0c": {
                    "configure_device": 1,
                    "configure_hardware": 1,
                    "configure_system": 1,
                    "do_something": 1,
                    "do_task_b": 1,
                    "execute_initialization": 1,
                    "handle_initialization": 1,
                    "handle_input": 1,
                    "initialize_device": 1,
                    "initialize_peripheral": 1,
                    "initialize_subsystem_b": 1,
                    "perform_operation": 1,
                    "process_data": 5,
                    "process_initialization": 1,
                    "process_input": 1,
                    "process_result": 2,
                    "process_value": 3,
                    "set_config": 1,
                    "set_configuration": 2,
                    "set_device_parameter": 1,
                    "set_initial_value": 1,
                    "set_parameters": 2
                },
                "FUN_000017dc": {
                    "activate_features": 1,
                    "configure_device": 1,
                    "configure_peripherals": 1,
                    "configure_settings": 1,
                    "disable_interrupts": 2,
                    "display_welcome_message": 1,
                    "do_task_c": 1,
                    "enable_interrupts": 2,
                    "execute_operations": 1,
                    "initialize_communication": 1,
                    "initialize_component": 1,
                    "initialize_components": 1,
                    "initialize_display": 1,
                    "initialize_hardware": 1,
                    "initialize_module_c": 1,
                    "initialize_peripheral3": 1,
                    "initialize_subsystem_c": 1,
                    "initialize_timer": 2,
                    "initialize_variables": 1,
                    "perform_action2": 1,
                    "perform_calibration": 2,
                    "perform_post_operation_tasks": 1,
                    "perform_self_test": 1,
                    "perform_system_checks": 1,
                    "perform_task": 1,
                    "perform_task2": 1,
                    "set_defaults": 1
                },
                "FUN_0000182c": {
                    "configure_component": 1,
                    "configure_gpio": 1,
                    "configure_hardware": 5,
                    "configure_interrupts": 2,
                    "configure_registers": 1,
                    "configure_timer": 2,
                    "do_task_a": 1,
                    "enable_interrupts": 1,
                    "initialize_components": 4,
                    "initialize_device": 1,
                    "initialize_module_a": 1,
                    "initialize_modules": 2,
                    "initialize_peripheral1": 1,
                    "initialize_registers": 1,
                    "initialize_subsystem_a": 1,
                    "perform_action1": 1,
                    "perform_configuration": 1,
                    "perform_initialization": 1,
                    "perform_task1": 1,
                    "set_system_configuration": 1,
                    "setup_gpio": 1
                },
                "FUN_00001b10": {
                    "configure_device": 2,
                    "configure_options": 1,
                    "configure_system": 1,
                    "enable_feature": 2,
                    "initialize_device": 1,
                    "initialize_display": 1,
                    "initialize_peripheral2": 1,
                    "set_byte": 1,
                    "set_configuration": 4,
                    "set_flag": 1,
                    "set_mode": 11,
                    "set_operating_mode": 1,
                    "set_operation_mode": 1,
                    "set_option_flag": 1,
                    "set_system_mode": 2
                },
                "FUN_00001bb8": {
                    "clear_display": 1,
                    "configure_hardware": 1,
                    "configure_peripheral": 1,
                    "configure_peripherals": 1,
                    "execute_startup_tasks": 1,
                    "initialize_components": 2,
                    "initialize_devices": 1,
                    "initialize_display": 1,
                    "initialize_hardware": 1,
                    "initialize_interrupt": 1,
                    "initialize_memory": 2,
                    "initialize_module_b": 1,
                    "initialize_peripherals": 1,
                    "initialize_settings": 1,
                    "perform_action": 2,
                    "perform_checks": 2,
                    "perform_initialization": 1,
                    "perform_operations": 1,
                    "perform_pre_initialization": 1,
                    "perform_pre_operation_tasks": 1,
                    "perform_preparations": 1,
                    "perform_setup": 2,
                    "perform_system_checks": 1,
                    "setup_communication": 1,
                    "setup_interrupts": 1,
                    "setup_process": 1
                },
                "FUN_00001c84": {
                    "initialize_device": 1,
                    "initialize_function": 1,
                    "initialize_program": 1,
                    "initialize_system": 28
                },
                "PARAM_1": {
                    "input_value": 1
                },
                "_DAT_40048044": {
                    "memory_address": 1,
                    "some_address": 1,
                    "system_configuration": 2
                },
                "param1": {
                    "display_mode": 1
                },
                "param_1": {
                    "mode": 1
                },
                "uVar1": {
                    "device_status": 1,
                    "result": 7,
                    "return_value": 3,
                    "value": 1
                }
            },
            "called": [
                "FUN_0000182c",
                "FUN_00000d0c",
                "FUN_00001b10",
                "FUN_00001bb8",
                "FUN_00000cd0",
                "FUN_000017dc"
            ],
            "calling": [
                "FUN_00001274"
            ],
            "code": "\n\n\nvoid initialize_system_00001c84(void)\n\n{\n  undefined4 result;\n  \n  result = FUN_00000cd0();\n  FUN_00001bb8();\n  _DAT_40048044 = 0x220000;\n  DAT_4006400c = 0;\n  DAT_40064000 = DAT_40064000 & 199 | 0x38;\n  DAT_40064004 = 0x13;\n  DAT_40064005 = 0;\n  FUN_0000182c();\n  FUN_000017dc();\n  FUN_00001b10(7);\n  FUN_00000d0c(result);\n  return;\n}\n\n",
            "current_name": "initialize_system_00001c84",
            "entrypoint": "0x00001c84",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001c84": "initialize_system_00001c84",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001cf0": {
            "additional_data": {
                "FUN_0000093c": {
                    "call_secondary_function": 1,
                    "call_sub_function": 1,
                    "execute_action": 1,
                    "execute_callback": 1,
                    "execute_data_operation": 1,
                    "execute_data_processing": 1,
                    "execute_function": 6,
                    "execute_operation": 1,
                    "execute_sub_function": 7,
                    "execute_task": 1,
                    "handle_non_zero_data": 1,
                    "invoke_sub_function": 1,
                    "perform_action": 2,
                    "perform_data_check": 1,
                    "perform_task": 2,
                    "process_data": 3
                },
                "FUN_00001cf0": {
                    "check_and_call_function": 4,
                    "check_and_call_sub_function": 2,
                    "check_and_execute": 3,
                    "check_and_execute_function": 5,
                    "check_and_invoke_function": 1,
                    "check_and_update_variable": 1,
                    "check_condition_and_call_function": 1,
                    "check_data_and_call_function": 3,
                    "check_data_validity": 1,
                    "check_for_non_zero_value": 1,
                    "check_for_valid_data": 1,
                    "check_function_status": 1,
                    "check_if_data_is_valid": 1,
                    "check_if_data_valid": 2,
                    "check_if_non_zero_value": 1,
                    "execute_if_data_available": 1,
                    "execute_if_data_is_valid": 1,
                    "initialize": 1
                }
            },
            "called": [
                "FUN_0000093c"
            ],
            "calling": [
                "FUN_00002028"
            ],
            "code": "\nvoid check_and_execute_function_00001cf0(void)\n\n{\n  if (DAT_1fff0354 != 0) {\n    FUN_0000093c();\n  }\n  return;\n}\n\n",
            "current_name": "check_and_execute_function_00001cf0",
            "entrypoint": "0x00001cf0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001cf0": "check_and_execute_function_00001cf0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001d08": {
            "additional_data": {
                "0x2000000": {
                    "addition_constant": 1,
                    "additional_constant": 1,
                    "constant_offset": 3,
                    "offset_const": 1
                },
                "FUN_00001d08": {
                    "calculate_improved_value": 1,
                    "calculate_new_value": 5,
                    "calculate_offset": 20,
                    "calculate_result": 4,
                    "calculate_updated_value": 1
                },
                "param_1": {
                    "address": 3,
                    "base_address": 2,
                    "base_value": 3,
                    "data": 1,
                    "input1": 1,
                    "input_1": 1,
                    "input_value": 15,
                    "offset_value": 1,
                    "value": 3,
                    "value_1": 1
                },
                "param_2": {
                    "count": 1,
                    "index": 1,
                    "input2": 1,
                    "input_2": 1,
                    "multiplier": 25,
                    "offset": 1,
                    "value_2": 1
                },
                "param_3": {
                    "output_value": 1
                },
                "ptr_1": {
                    "mask": 1
                },
                "ptr_2": {
                    "shifted_value": 1
                },
                "result": {
                    "offset": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00001d3a"
            ],
            "code": "\nint calculate_offset_00001d08(uint input_value,int multiplier)\n\n{\n  return multiplier * 4 + (input_value & 0xf0000000 | (input_value & 0xfffff) << 5) + 0x2000000;\n}\n\n",
            "current_name": "calculate_offset_00001d08",
            "entrypoint": "0x00001d08",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001d08": "calculate_offset_00001d08",
                "param_1": "input_value",
                "param_2": "multiplier"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001d3a": {
            "additional_data": {
                "FUN_00001d08": {
                    "get_value_and_update": 1
                },
                "FUN_00001d3a": {
                    "initialize_flag": 1,
                    "initialize_variable": 1,
                    "mark_address_as_assigned": 1,
                    "set_flag": 12,
                    "set_flag_to1": 2,
                    "set_flag_to_one": 1,
                    "set_flag_to_true": 2,
                    "set_flag_value": 1,
                    "set_integer_to_pointer": 1,
                    "set_pointer_to_value": 1,
                    "set_return_value_to1": 1,
                    "set_return_value_to_one": 1,
                    "set_to_value_one": 1,
                    "set_value_to1": 1,
                    "set_variable_to1": 3,
                    "set_variable_to_one": 1
                },
                "param_1": {
                    "address_pointer": 1,
                    "arg1": 3,
                    "flag_address": 1,
                    "input": 2,
                    "input1": 8,
                    "input_flag": 1,
                    "input_param": 7,
                    "input_pointer": 1,
                    "input_value": 3,
                    "param": 1,
                    "value": 1,
                    "value1": 1
                },
                "param_2": {
                    "arg2": 3,
                    "data": 2,
                    "flag": 9,
                    "flag_value": 2,
                    "input2": 8,
                    "input_value": 1,
                    "option": 1,
                    "status": 1,
                    "value": 2,
                    "value2": 1
                },
                "puVar1": {
                    "flag_address": 1,
                    "flag_pointer": 4,
                    "output_pointer": 2,
                    "output_ptr": 3,
                    "ptr_to_result": 1,
                    "result": 3,
                    "result_pointer": 6,
                    "result_ptr": 7,
                    "return_value": 2,
                    "return_value_ptr": 1
                }
            },
            "called": [
                "FUN_00001d08"
            ],
            "calling": [
                "FUN_00001ddc"
            ],
            "code": "\nvoid set_flag_to1_00001d3a(undefined4 input1,undefined flag)\n\n{\n  undefined4 *result_ptr;\n  \n  result_ptr = (undefined4 *)FUN_00001d08(input1,flag);\n  *result_ptr = 1;\n  return;\n}\n\n",
            "current_name": "set_flag_to1_00001d3a",
            "entrypoint": "0x00001d3a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001d3a": "set_flag_to1_00001d3a",
                "param_1": "input1",
                "param_2": "flag",
                "puVar1": "result_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001d5e": {
            "additional_data": {
                "0x40048000": {
                    "constant": 1
                },
                "0x7000": {
                    "mask": 1
                },
                "FUN_00001d5e": {
                    "apply_bitmask": 2,
                    "apply_flags": 1,
                    "apply_mask": 4,
                    "apply_mask_and_bitwise_or": 1,
                    "apply_mask_and_combine": 1,
                    "apply_mask_and_offset": 2,
                    "apply_mask_and_set_default": 1,
                    "apply_mask_and_set_flag": 1,
                    "apply_mask_and_shift": 1,
                    "apply_mask_to_param": 1,
                    "bitwise_operation_with_mask": 1,
                    "combine_and_mask": 1,
                    "combine_and_shift": 1,
                    "combine_mask_and_offset": 1,
                    "combine_param_and_constant": 2,
                    "combine_parameters": 1,
                    "combined_bits": 1,
                    "extract_bits": 3,
                    "extract_bits_from_param": 1,
                    "extract_flags": 1,
                    "get_modified_bits": 1,
                    "get_modified_value": 1,
                    "set_bit_pattern": 1
                },
                "param_1": {
                    "bit_field": 1,
                    "combined_value_with_mask": 1,
                    "data": 1,
                    "input": 1,
                    "input_value": 25,
                    "new_input": 1,
                    "output": 1
                },
                "param_1_bitmask": {
                    "flags": 1
                },
                "param_2": {
                    "bits_to_extract": 1,
                    "new_parameter_name_2": 1
                },
                "result": {
                    "result": 1
                },
                "return": {
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00001eea",
                "FUN_00001f80"
            ],
            "code": "\nuint apply_mask_and_offset_00001d5e(ushort input_value)\n\n{\n  result input_value & 0x7000 | 0x40048000;\n}\n\n",
            "current_name": "apply_mask_and_offset_00001d5e",
            "entrypoint": "0x00001d5e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001d5e": "apply_mask_and_offset_00001d5e",
                "param_1": "input_value",
                "return": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001d80": {
            "additional_data": {
                "0x1c0": {
                    "bit_mask": 1,
                    "mask_flag_bits": 1
                },
                "0x400ff000": {
                    "default_value": 1,
                    "fixed_value": 1
                },
                "FUN_00001d80": {
                    "apply_bitmask": 2,
                    "apply_bitwise_operations": 1,
                    "apply_flag_mask": 2,
                    "apply_mask": 2,
                    "apply_mask_with_offset": 1,
                    "calculate_flag": 1,
                    "calculate_modified_value": 2,
                    "calculate_result": 1,
                    "combine_and_mask": 1,
                    "combine_bits": 1,
                    "combine_bits_and_mask": 3,
                    "combine_bits_with_magic": 1,
                    "combine_param_with_mask": 1,
                    "combine_values": 1,
                    "compute_result": 1,
                    "convert_to_display_value": 1,
                    "extract_bits_from_param": 1,
                    "generate_masked_value": 1,
                    "generate_modified_value": 1,
                    "get_modified_value": 3,
                    "modify_bits": 1,
                    "set_bits_and_mask": 1,
                    "set_flag_bits": 1
                },
                "param_1": {
                    "flag_bits": 1,
                    "flag_value": 1,
                    "input": 3,
                    "input_flag": 1,
                    "input_value": 22,
                    "masked_input": 1,
                    "modified_value": 1,
                    "output_bits": 1
                },
                "param_2": {
                    "new_param_name_2": 1
                },
                "param_n": {
                    "new_param_name_n": 1
                },
                "var_1": {
                    "mask": 1
                },
                "var_2": {
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00001eea",
                "FUN_00001ff6"
            ],
            "code": "\nuint combine_bits_and_mask_00001d80(ushort input_value)\n\n{\n  return input_value & 0x1c0 | 0x400ff000;\n}\n\n",
            "current_name": "combine_bits_and_mask_00001d80",
            "entrypoint": "0x00001d80",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001d80": "combine_bits_and_mask_00001d80",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001da2": {
            "additional_data": {
                "FUN_00001da2": {
                    "extract_and_mask_bits": 1,
                    "extract_bit_sequence": 1,
                    "extract_bits": 18,
                    "extract_bits_from_field": 1,
                    "extract_bits_from_ushort": 1,
                    "extract_bits_from_value": 3,
                    "get_bit_pattern": 1,
                    "get_bits": 1,
                    "get_bits_from_number": 1,
                    "get_last_three_bits": 1,
                    "get_subset_of_bits": 1,
                    "get_three_least_significant_bits": 1
                },
                "param_1": {
                    "bits_to_extract": 2,
                    "input": 10,
                    "input_num": 1,
                    "input_number": 1,
                    "input_value": 12,
                    "output": 2,
                    "result": 1,
                    "value": 2
                },
                "param_2": {
                    "output": 3
                },
                "return": {
                    "extracted_bits": 1,
                    "result": 1
                },
                "return_value": {
                    "extracted_bits": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00001ddc",
                "FUN_00001f80"
            ],
            "code": "\nushort extract_bits_from_value_00001da2(ushort input_value)\n\n{\n  result input_value >> 6 & 7;\n}\n\n",
            "current_name": "extract_bits_from_value_00001da2",
            "entrypoint": "0x00001da2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001da2": "extract_bits_from_value_00001da2",
                "param_1": "input_value",
                "return": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001dc0": {
            "additional_data": {
                "0x3f": {
                    "bit_mask": 2
                },
                "FUN_00001dc0": {
                    "clear_lower_bits": 1,
                    "extract_bits": 2,
                    "extract_least_significant_bits": 4,
                    "extract_low_bits": 1,
                    "extract_lower6_bits": 1,
                    "extract_lower_bits": 7,
                    "extract_lowest6_bits": 2,
                    "extract_lowest_bits": 1,
                    "extract_lowest_six_bits": 1,
                    "extract_six_bits": 1,
                    "get_lower_six_bits": 1,
                    "mask_bits": 3,
                    "mask_low_six_bits": 1,
                    "mask_lower_bits": 1,
                    "mask_lower_six_bits": 1,
                    "truncate_to_last6_bits": 1,
                    "truncate_to_six_bits": 2
                },
                "param_1": {
                    "bit_mask": 1,
                    "bits_to_extract": 1,
                    "data": 1,
                    "extracted_value": 1,
                    "input": 6,
                    "input_value": 16,
                    "low_bits": 1,
                    "lower_bits": 2,
                    "output": 1,
                    "value": 1
                },
                "variable_1": {
                    "masked_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00001eea",
                "FUN_00001ff6",
                "FUN_00001f80"
            ],
            "code": "\nushort extract_lower_bits_00001dc0(ushort input_value)\n\n{\n  return input_value & 0x3f;\n}\n\n",
            "current_name": "extract_lower_bits_00001dc0",
            "entrypoint": "0x00001dc0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001dc0": "extract_lower_bits_00001dc0",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001ddc": {
            "additional_data": {
                "FUN_00001d3a": {
                    "append_data_to_file": 1,
                    "print_character": 3,
                    "print_character_at_offset": 1,
                    "print_to_screen": 1,
                    "send_data": 1,
                    "set_updated_data": 1,
                    "store_config_data": 1,
                    "store_data": 3,
                    "update_data": 3,
                    "update_memory": 1,
                    "update_pointer_value": 1,
                    "write_data": 1,
                    "write_to_memory": 2
                },
                "FUN_00001da2": {
                    "calculate_checksum": 3,
                    "calculate_offset": 3,
                    "calculate_value": 5,
                    "convert_to_ascii": 1,
                    "convert_to_uppercase": 1,
                    "convert_value": 1,
                    "get_updated_value": 1,
                    "modify_char": 1,
                    "pre_process_data": 1,
                    "process_config_data": 1,
                    "process_data": 2
                },
                "FUN_00001ddc": {
                    "convert_and_print": 1,
                    "modify_data_and_print": 1,
                    "print_ascii_character": 1,
                    "print_char_with_offset": 2,
                    "print_character": 2,
                    "print_formatted_character": 1,
                    "print_modified_char": 1,
                    "print_modified_data": 2,
                    "print_modified_value": 2,
                    "print_updated_value": 1,
                    "process_data": 6,
                    "update_config_data": 1,
                    "update_data": 8,
                    "update_data_and_return": 1,
                    "write_data_to_file": 1
                },
                "cVar1": {
                    "calculated_value": 2,
                    "computed_value": 1,
                    "converted_character": 1,
                    "converted_value": 2,
                    "modified_input_data": 1,
                    "modified_value": 2,
                    "offset": 2,
                    "processed_data": 2,
                    "processed_value": 1,
                    "result": 12,
                    "shifted_character": 2
                },
                "param_1": {
                    "character": 6,
                    "config_data": 1,
                    "data": 5,
                    "input": 2,
                    "input_data": 8,
                    "input_param": 1,
                    "input_value": 5,
                    "value": 1
                },
                "param_2": {
                    "character": 1,
                    "new_config_value": 1,
                    "value": 2
                }
            },
            "called": [
                "FUN_00001da2",
                "FUN_00001d3a"
            ],
            "calling": [
                "FUN_00001f80"
            ],
            "code": "\nvoid update_config_data_00001ddc(undefined2 input_data)\n\n{\n  char result;\n  \n  result = FUN_00001da2(input_data);\n  FUN_00001d3a(&DAT_40048038,result + '\\t');\n  return;\n}\n\n",
            "current_name": "update_config_data_00001ddc",
            "entrypoint": "0x00001ddc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001ddc": "update_config_data_00001ddc",
                "cVar1": "result",
                "param_1": "input_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001e0c": {
            "additional_data": {
                "0xf": {
                    "mask": 1
                },
                "DAT_1fff0bd8": {
                    "data": 1,
                    "data_array": 2,
                    "memory_address": 1
                },
                "FUN_00001e0c": {
                    "extract_bit": 2,
                    "extract_bit_from_data": 1,
                    "extract_bitfield": 1,
                    "extract_bits": 22,
                    "extract_bits_and_shift": 1,
                    "extract_bits_from_data": 1,
                    "extract_bits_from_memory": 1,
                    "extracted_bits": 1,
                    "get_lower_nibble": 1
                },
                "PTR_DAT_1fff0bd8": {
                    "data_array": 1
                },
                "data": {
                    "data": 1
                },
                "int": {
                    "index": 1
                },
                "local_1": {
                    "data_pointer": 1
                },
                "local_2": {
                    "shifted_index": 1
                },
                "local_3": {
                    "mask": 1
                },
                "offset": {
                    "offset": 1
                },
                "original_variable_name_1": {
                    "base_address": 1,
                    "data_ptr": 1
                },
                "original_variable_name_2": {
                    "shifted_data": 1,
                    "shifted_index": 1
                },
                "original_variable_name_3": {
                    "bit_offset": 1
                },
                "param_1": {
                    "bitfield_offset": 1,
                    "byte_offset": 2,
                    "data_index": 1,
                    "data_offset": 1,
                    "index": 9,
                    "offset": 11,
                    "shifted_index": 1,
                    "start_index": 2,
                    "start_offset": 1,
                    "starting_index": 1,
                    "value_index": 1
                },
                "param_1_offset": {
                    "offset": 1
                },
                "param_2": {
                    "bit_index": 2,
                    "bit_mask": 1,
                    "bit_offset": 5,
                    "bit_pattern": 1,
                    "bit_position": 1,
                    "bit_value": 1,
                    "bitfield_value": 1,
                    "bits_to_extract": 1,
                    "bitstream": 4,
                    "data": 7,
                    "input": 2,
                    "input_data": 1,
                    "input_value": 1,
                    "offset": 1,
                    "value": 2
                },
                "param_2_data": {
                    "data": 1
                },
                "param_3": {
                    "new_param_3": 1,
                    "num_bits": 1,
                    "output_bits": 1
                },
                "param_4": {
                    "mask": 1
                },
                "temp_1": {
                    "shifted_bit_offset": 1
                },
                "temp_2": {
                    "shifted_masked_value": 1
                },
                "uint": {
                    "extracted_bits": 1,
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00001ec4",
                "FUN_00002028"
            ],
            "code": "\nresult extract_bits_from_data_00001e0c(index offset,result data)\n\n{\n  return *(result *)(&DAT_1fff0bd8 + (((index)data >> 3) + offset * 4) * 4) >> ((data & 7) << 2)\n         & 0xf;\n}\n\n",
            "current_name": "extract_bits_from_data_00001e0c",
            "entrypoint": "0x00001e0c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001e0c": "extract_bits_from_data_00001e0c",
                "int": "index",
                "param_1": "offset",
                "param_2": "data",
                "uint": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001e44": {
            "additional_data": {
                "FUN_00001e44": {
                    "modify_data": 1,
                    "set_bits": 1,
                    "update_bit": 2,
                    "update_bit_field": 1,
                    "update_bit_pattern": 1,
                    "update_bit_value": 3,
                    "update_bitfield": 1,
                    "update_bits": 6,
                    "update_bitwise_value": 1,
                    "update_data": 7,
                    "update_data_at_index": 2,
                    "update_data_bits": 1,
                    "update_data_with_mask": 1,
                    "update_field_value": 1,
                    "update_memory": 2
                },
                "iVar1": {
                    "bit_field_index": 1,
                    "bit_offset": 1,
                    "byte_offset": 8,
                    "index_shifted": 1,
                    "num_bits": 1,
                    "num_integers": 1,
                    "shift_amount": 6,
                    "shifted_index": 4,
                    "shifted_offset": 1,
                    "word_index": 2,
                    "word_offset": 3
                },
                "param_1": {
                    "array_index": 1,
                    "base": 1,
                    "base_address": 1,
                    "base_index": 1,
                    "bit_position": 1,
                    "field_index": 1,
                    "field_offset": 1,
                    "first_index": 1,
                    "index": 16,
                    "offset": 5,
                    "start_index": 2
                },
                "param_2": {
                    "bit_index": 3,
                    "bit_offset": 12,
                    "bit_position": 10,
                    "bits_length": 1,
                    "byte_index": 1,
                    "offset": 3,
                    "position": 1
                },
                "param_3": {
                    "data": 1,
                    "field_value": 1,
                    "new_value": 21,
                    "value": 8
                }
            },
            "called": [],
            "calling": [
                "FUN_00001ec4"
            ],
            "code": "\nvoid update_data_at_index_00001e44(int index,uint bit_offset,int new_value)\n\n{\n  int byte_offset;\n  \n  byte_offset = (int)bit_offset >> 3;\n  *(uint *)(&DAT_1fff0bd8 + (byte_offset + index * 4) * 4) =\n       *(uint *)(&DAT_1fff0bd8 + (byte_offset + index * 4) * 4) & ~(0xf << ((bit_offset & 7) << 2));\n  *(uint *)(&DAT_1fff0bd8 + (byte_offset + index * 4) * 4) =\n       *(uint *)(&DAT_1fff0bd8 + (byte_offset + index * 4) * 4) | new_value << ((bit_offset & 7) << 2);\n  return;\n}\n\n",
            "current_name": "update_data_at_index_00001e44",
            "entrypoint": "0x00001e44",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001e44": "update_data_at_index_00001e44",
                "iVar1": "byte_offset",
                "param_1": "index",
                "param_2": "bit_offset",
                "param_3": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001ec4": {
            "additional_data": {
                "FUN_00001e0c": {
                    "calculate_checksum": 1,
                    "calculate_result": 2,
                    "calculate_value": 5,
                    "compute_value": 1,
                    "perform_calculation": 1,
                    "perform_operation": 1,
                    "reverse_bits": 1,
                    "reverse_first_step": 1
                },
                "FUN_00001e44": {
                    "apply_reverse_result": 1,
                    "display_result": 1,
                    "output_result": 1,
                    "print_result": 3,
                    "process_data": 1,
                    "process_value": 1,
                    "reverse_second_step": 1,
                    "update_data": 2,
                    "update_output": 1,
                    "update_result": 1
                },
                "FUN_00001ec4": {
                    "call_and_handle_results": 1,
                    "execute_function": 3,
                    "execute_reverse_process": 1,
                    "perform_function": 1,
                    "process_data": 14,
                    "process_function": 1,
                    "update_data": 1
                },
                "param_1": {
                    "arg1": 1,
                    "data1": 1,
                    "input": 1,
                    "input1": 21,
                    "input_1": 1,
                    "input_arg1": 1,
                    "input_int": 1,
                    "input_param": 4
                },
                "param_2": {
                    "arg2": 1,
                    "data2": 1,
                    "input2": 21,
                    "input_2": 1,
                    "input_arg2": 1,
                    "input_u_int": 1,
                    "output": 1,
                    "output_param": 4
                },
                "param_3": {
                    "reverse_param": 1
                },
                "uVar1": {
                    "output": 2,
                    "result": 20,
                    "result1": 5,
                    "result_from_calculation": 1,
                    "result_value": 1
                }
            },
            "called": [
                "FUN_00001e0c",
                "FUN_00001e44"
            ],
            "calling": [
                "FUN_00001f80"
            ],
            "code": "\nvoid process_data_00001ec4(undefined4 input1,undefined4 input2)\n\n{\n  undefined4 result;\n  \n  result = FUN_00001e0c(input1,input2);\n  FUN_00001e44(input1,input2,result);\n  return;\n}\n\n",
            "current_name": "process_data_00001ec4",
            "entrypoint": "0x00001ec4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001ec4": "process_data_00001ec4",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001eea": {
            "additional_data": {
                "0x14": {
                    "offset": 1
                },
                "FUN_00001d5e": {
                    "calculate_index": 1,
                    "calculate_offset": 1,
                    "get_array_index": 1,
                    "get_index_data": 1
                },
                "FUN_00001d80": {
                    "calculate_function_return_value": 1,
                    "get_array_address": 1,
                    "get_data_address": 1,
                    "get_pointer": 1
                },
                "FUN_00001dc0": {
                    "calculate_bit_position": 1,
                    "calculate_index": 1,
                    "get_array_value": 1,
                    "get_index": 1
                },
                "FUN_00001eea": {
                    "reverse_binary_flags": 1,
                    "set_flag": 1,
                    "toggle_bit_and_store": 1,
                    "toggle_bit_and_store_value": 1,
                    "update_bit_in_array": 1,
                    "update_bitfield_and_store_value": 1,
                    "update_bitmask_and_value": 1,
                    "update_configuration": 1,
                    "update_control_bit": 2,
                    "update_data": 5,
                    "update_flag_and_set_param": 3,
                    "update_flag_and_set_value": 2,
                    "update_flag_and_store_data": 1,
                    "update_flag_and_store_value": 1,
                    "update_flag_and_value": 2,
                    "update_flags_and_value": 1,
                    "update_parameter": 1,
                    "update_status": 5
                },
                "FUN_00001f80": {
                    "initialize": 2,
                    "initialize_flag": 1,
                    "set_array": 1
                },
                "iVar2": {
                    "address": 1,
                    "array_address": 1,
                    "base_address": 1,
                    "config_ptr": 1,
                    "data_address": 2,
                    "data_pointer": 1,
                    "data_var": 1,
                    "device_info_addr": 1,
                    "function_index": 1,
                    "function_result": 1,
                    "function_result1": 1,
                    "function_return_value": 1,
                    "offset": 1,
                    "pointer_to_value": 1,
                    "ptr": 4,
                    "ptr1": 5,
                    "ptr_device_struct": 1,
                    "ptr_var": 1,
                    "ptr_var1": 1,
                    "struct_address": 1,
                    "temp_var1": 2,
                    "var2": 1
                },
                "iVar3": {
                    "data_index": 3,
                    "element_index": 1,
                    "function_result2": 1,
                    "index": 3,
                    "index2": 3,
                    "index_data": 1,
                    "index_device_struct": 1,
                    "index_pointer": 1,
                    "index_value": 1,
                    "index_var": 1,
                    "offset": 4,
                    "ptr2": 5,
                    "ptr_var2": 1,
                    "temp_var2": 2,
                    "value": 1,
                    "value_offset": 1,
                    "var3": 1
                },
                "param_1": {
                    "configuration_data": 1,
                    "data": 5,
                    "device": 1,
                    "device_id": 1,
                    "input": 6,
                    "input_data": 1,
                    "input_param": 3,
                    "input_value": 4,
                    "param": 3,
                    "param1": 1,
                    "status": 2,
                    "value": 3
                },
                "param_2": {
                    "bit": 1,
                    "bit_mask": 1,
                    "bitmask": 1,
                    "byte_value": 7,
                    "flag": 7,
                    "flag_value": 1,
                    "new_value": 1,
                    "param2": 1,
                    "param_byte": 1,
                    "status": 2,
                    "value": 8
                },
                "uVar1": {
                    "bit_index": 2,
                    "bit_number": 1,
                    "bit_position": 4,
                    "calculated_value": 2,
                    "index": 21,
                    "offset": 1
                }
            },
            "called": [
                "FUN_00001d5e",
                "FUN_00001d80",
                "FUN_00001f80",
                "FUN_00001dc0"
            ],
            "calling": [
                "FUN_00000e64"
            ],
            "code": "\nundefined4 update_flag_and_store_data_00001eea(undefined2 input,byte value)\n\n{\n  uint index;\n  int ptr1;\n  int ptr2;\n  \n  FUN_00001f80(input,0);\n  if ((char)value < '\\0') {\n    index = FUN_00001dc0(input);\n    ptr1 = FUN_00001d80(input);\n    *(uint *)(ptr1 + 0x14) = *(uint *)(ptr1 + 0x14) | 1 << (index & 0xff);\n  }\n  else {\n    index = FUN_00001dc0(input);\n    ptr1 = FUN_00001d80(input);\n    *(uint *)(ptr1 + 0x14) = *(uint *)(ptr1 + 0x14) & ~(1 << (index & 0xff));\n  }\n  ptr1 = FUN_00001d5e(input);\n  ptr2 = FUN_00001dc0(input);\n  *(uint *)(ptr1 + ptr2 * 4) = value & 0x23 | 0x100;\n  return 0;\n}\n\n",
            "current_name": "update_flag_and_store_data_00001eea",
            "entrypoint": "0x00001eea",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001eea": "update_flag_and_store_data_00001eea",
                "iVar2": "ptr1",
                "iVar3": "ptr2",
                "param_1": "input",
                "param_2": "value",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001f80": {
            "additional_data": {
                "FUN_00001d5e": {
                    "get_first_index": 1,
                    "get_index": 6,
                    "get_index1": 7,
                    "get_value_index": 1
                },
                "FUN_00001da2": {
                    "compute_checksum": 1,
                    "get_index2": 3,
                    "get_masked_value": 1,
                    "get_modified_value": 1,
                    "get_result1": 1,
                    "get_updated_value": 1,
                    "modify_value": 2,
                    "process_flag": 1,
                    "transform_value": 2
                },
                "FUN_00001dc0": {
                    "calculate_offset": 2,
                    "get_index": 1,
                    "get_index2": 4,
                    "get_index3": 3,
                    "get_offset": 4,
                    "get_second_index": 1
                },
                "FUN_00001ddc": {
                    "initialize": 6,
                    "initialize_data": 4,
                    "initialize_input": 3,
                    "initialize_value": 1,
                    "pre_process_data": 1
                },
                "FUN_00001ec4": {
                    "display_result": 1,
                    "handle_changed_value": 1,
                    "handle_flag": 1,
                    "handle_update": 2,
                    "notify_change": 1,
                    "perform_action": 3,
                    "perform_action_if_bits_set": 1,
                    "perform_update": 1,
                    "process_value": 1,
                    "update_values": 1
                },
                "FUN_00001f80": {
                    "update_array_value": 1,
                    "update_data": 11,
                    "update_data_entry": 1,
                    "update_data_value": 1,
                    "update_memory": 1,
                    "update_memory_value": 2,
                    "update_parameter_value": 1,
                    "update_value": 10,
                    "update_value_in_array": 2,
                    "update_value_in_table": 1
                },
                "iVar1": {
                    "address1": 4,
                    "entry_index": 1,
                    "index": 5,
                    "index1": 13,
                    "mem_index1": 1,
                    "offset1": 1,
                    "result": 1,
                    "result1": 1,
                    "value_index": 1
                },
                "iVar2": {
                    "address2": 4,
                    "count": 1,
                    "index": 1,
                    "index2": 13,
                    "mem_index2": 1,
                    "offset": 6,
                    "offset2": 1,
                    "result2": 1
                },
                "param_1": {
                    "data": 10,
                    "data_entry": 1,
                    "input": 9,
                    "input_array": 1,
                    "input_data": 4,
                    "input_param": 1,
                    "input_value": 1,
                    "table": 1,
                    "value": 3
                },
                "param_2": {
                    "new_data": 3,
                    "new_value": 27,
                    "value": 1
                },
                "uVar3": {
                    "changed_value": 1,
                    "encoded_value": 1,
                    "flag_result": 1,
                    "func_param1": 2,
                    "func_result1": 1,
                    "function_result1": 1,
                    "high_bits": 1,
                    "param1": 1,
                    "result": 1,
                    "result1": 9,
                    "temp1": 6,
                    "temp_value1": 1,
                    "temp_var1": 1,
                    "value1": 3,
                    "var3": 1
                },
                "uVar4": {
                    "changed_value_index": 1,
                    "data_bits": 1,
                    "encoded_offset": 1,
                    "flag_offset": 1,
                    "func_param2": 2,
                    "func_result2": 1,
                    "function_result2": 1,
                    "index_offset": 1,
                    "param2": 1,
                    "result2": 9,
                    "temp2": 6,
                    "temp_value2": 1,
                    "temp_var2": 1,
                    "value2": 3,
                    "var4": 1
                },
                "uVar5": {
                    "current_value": 8,
                    "data": 2,
                    "data_value": 1,
                    "old_value": 3,
                    "original_value": 1,
                    "stored_value": 1,
                    "value": 12,
                    "value_at_index": 1,
                    "value_from_index": 1,
                    "value_to_check": 1
                }
            },
            "called": [
                "FUN_00001ec4",
                "FUN_00001d5e",
                "FUN_00001ddc",
                "FUN_00001da2",
                "FUN_00001dc0"
            ],
            "calling": [
                "FUN_00001eea",
                "FUN_00001448"
            ],
            "code": "\nvoid update_memory_value_00001f80(undefined2 data,undefined4 new_value)\n\n{\n  int index1;\n  int index2;\n  undefined4 result1;\n  undefined4 result2;\n  uint value;\n  \n  FUN_00001ddc(data);\n  index1 = FUN_00001d5e(data);\n  index2 = FUN_00001dc0(data);\n  value = *(uint *)(index1 + index2 * 4);\n  index1 = FUN_00001d5e(data);\n  index2 = FUN_00001dc0(data);\n  *(undefined4 *)(index1 + index2 * 4) = new_value;\n  if ((value & 0xf0000) != 0) {\n    result1 = FUN_00001da2(data);\n    result2 = FUN_00001dc0(data);\n    FUN_00001ec4(result1,result2);\n  }\n  return;\n}\n\n",
            "current_name": "update_memory_value_00001f80",
            "entrypoint": "0x00001f80",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001f80": "update_memory_value_00001f80",
                "iVar1": "index1",
                "iVar2": "index2",
                "param_1": "data",
                "param_2": "new_value",
                "uVar3": "result1",
                "uVar4": "result2",
                "uVar5": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00001ff6": {
            "additional_data": {
                "FUN_00001d80": {
                    "calculate_offset": 1,
                    "get_bit_offset": 1,
                    "get_integer_value": 1,
                    "get_memory_address": 3,
                    "get_modified_value": 1,
                    "get_offset": 2,
                    "get_pointer_address": 1
                },
                "FUN_00001dc0": {
                    "calculate_bit_position": 2,
                    "convert_to_unsigned": 2,
                    "extract_lowest_bits": 1,
                    "get_least_significant_bits": 1,
                    "get_shift": 1,
                    "get_shift_amount": 1,
                    "get_shifted_value": 1,
                    "modify_input": 1
                },
                "FUN_00001ff6": {
                    "initialize_bit": 2,
                    "set_bit": 2,
                    "set_bit_at_index": 9,
                    "set_bit_at_offset": 2,
                    "set_bit_at_position": 4,
                    "set_bit_at_power": 1,
                    "set_bit_based_on_input": 1,
                    "set_bit_based_on_mask": 1,
                    "set_bit_based_on_value": 1,
                    "set_bit_in_memory": 1,
                    "set_bit_mask": 1,
                    "set_bit_position": 6
                },
                "iVar2": {
                    "bit_offset": 1,
                    "computed_offset": 1,
                    "mem_address": 1,
                    "memory_address": 2,
                    "modified_address": 1,
                    "modified_input": 1,
                    "modified_param1": 1,
                    "modified_value": 1,
                    "output_address": 1,
                    "result": 10,
                    "result2": 9,
                    "shifted_value": 1
                },
                "param_1": {
                    "bit_index": 1,
                    "data": 1,
                    "input": 7,
                    "input_value": 20,
                    "value": 2
                },
                "uVar1": {
                    "bit_position": 4,
                    "index": 1,
                    "lowest_bits": 1,
                    "modified_input": 1,
                    "modified_value": 2,
                    "result1": 9,
                    "shift_amount": 1,
                    "shifted_value": 10,
                    "unsigned_value": 1
                }
            },
            "called": [
                "FUN_00001d80",
                "FUN_00001dc0"
            ],
            "calling": [
                "FUN_00000e64"
            ],
            "code": "\nvoid set_bit_at_position_00001ff6(undefined2 input_value)\n\n{\n  uint shifted_value;\n  int result;\n  \n  shifted_value = FUN_00001dc0(input_value);\n  result = FUN_00001d80(input_value);\n  *(int *)(result + 4) = 1 << (shifted_value & 0xff);\n  return;\n}\n\n",
            "current_name": "set_bit_at_position_00001ff6",
            "entrypoint": "0x00001ff6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00001ff6": "set_bit_at_position_00001ff6",
                "iVar2": "result",
                "param_1": "input_value",
                "uVar1": "shifted_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002028": {
            "additional_data": {
                "FUN_00001cf0": {
                    "cleanup": 1
                },
                "FUN_00001e0c": {
                    "process_subfunction": 1
                },
                "FUN_00002028": {
                    "check_and_execute_operations": 1,
                    "iterate_and_execute": 1,
                    "iterate_and_process_bits": 1,
                    "process_bit_flags": 1,
                    "process_bits_and_call_functions": 1,
                    "process_bits_and_invoke_function": 1,
                    "process_data": 13,
                    "process_flagged_data": 1,
                    "process_flagged_values": 1,
                    "process_flags": 7,
                    "process_function": 1,
                    "process_widgets": 1,
                    "update_bitwise_flags": 1
                },
                "iVar1": {
                    "index": 15,
                    "result": 10,
                    "return_value": 1,
                    "sub_function_result": 2,
                    "sub_result": 1,
                    "subfunc_result": 1,
                    "temp_var": 1
                },
                "local_c": {
                    "bit": 1,
                    "bit_index": 13,
                    "bit_position": 4,
                    "counter": 6,
                    "current_index": 1,
                    "index": 3,
                    "loop_counter": 1,
                    "loop_index": 1,
                    "widget_index": 1
                },
                "param_1": {
                    "base_address": 1,
                    "data": 6,
                    "data_addr": 1,
                    "data_address": 4,
                    "data_pointer": 2,
                    "data_ptr": 6,
                    "data_storage": 1,
                    "data_struct_ptr": 1,
                    "flag_data": 1,
                    "input": 1,
                    "input_param": 1,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "param": 1,
                    "param_pointer": 1,
                    "param_ptr": 1,
                    "widget_array": 1
                },
                "param_2": {
                    "additional_parameter": 1,
                    "arg": 1,
                    "arg2": 1,
                    "config": 1,
                    "config_param": 1,
                    "data": 1,
                    "input_param": 1,
                    "input_parameter": 1,
                    "param": 6,
                    "param2": 1,
                    "param2_value": 1,
                    "param_val": 1,
                    "param_value": 7,
                    "size": 3,
                    "value": 4
                },
                "uVar2": {
                    "bit_flag": 1,
                    "bit_mask": 5,
                    "bitmask": 1,
                    "flag": 10,
                    "flag_bits": 1,
                    "flag_value": 4,
                    "flag_var": 1,
                    "flags": 5,
                    "mask": 2,
                    "widget_flags": 1
                }
            },
            "called": [
                "FUN_00001e0c",
                "FUN_00001cf0"
            ],
            "calling": [
                "FUN_000020b8",
                "FUN_000020f4",
                "FUN_000020cc",
                "FUN_000020e0",
                "FUN_00002108"
            ],
            "code": "\nvoid process_flagged_data_00002028(int data,undefined4 param_value)\n\n{\n  int index;\n  uint flag;\n  uint bit_index;\n  \n  flag = *(uint *)(data + 0xa0);\n  for (bit_index = 0; (int)bit_index < 0x20; bit_index = bit_index + 1) {\n    if (((flag & 1 << (bit_index & 0xff)) != 0) &&\n       ((*(uint *)(data + bit_index * 4) & 0xf0000) != 0)) {\n      *(int *)(data + 0xa0) = 1 << (bit_index & 0xff);\n      index = FUN_00001e0c(param_value,bit_index);\n      (**(code **)(&DAT_1fff0b78 + index * 0xc))(*(undefined4 *)(&DAT_1fff0b7c + index * 0xc));\n    }\n  }\n  FUN_00001cf0();\n  return;\n}\n\n",
            "current_name": "process_flagged_data_00002028",
            "entrypoint": "0x00002028",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002028": "process_flagged_data_00002028",
                "iVar1": "index",
                "local_c": "bit_index",
                "param_1": "data",
                "param_2": "param_value",
                "uVar2": "flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000020b8": {
            "additional_data": {
                "FUN_00002028": {
                    "allocate_memory": 1,
                    "configure_device": 2,
                    "configure_memory": 1,
                    "initialize_memory": 1,
                    "load_data": 1,
                    "set_configuration_register": 1,
                    "set_device_parameters": 1,
                    "set_hardware_configuration": 1,
                    "set_memory": 5,
                    "set_memory_values": 1,
                    "write_memory": 3,
                    "write_to_memory": 1
                },
                "FUN_000020b8": {
                    "execute_initialization": 1,
                    "initialize_device": 2,
                    "initialize_hardware": 3,
                    "initialize_memory": 24,
                    "initialize_peripheral": 1
                },
                "param_1": {
                    "address": 2,
                    "base_address": 11,
                    "device_address": 1,
                    "memory_address": 12
                },
                "param_2": {
                    "flag": 3,
                    "flags": 2,
                    "initial_value": 1,
                    "initialize_flag": 1,
                    "option": 1,
                    "param": 2,
                    "param2": 6,
                    "parameter": 2,
                    "parameter2": 1,
                    "unused_parameter": 2,
                    "value": 5
                }
            },
            "called": [
                "FUN_00002028"
            ],
            "calling": [],
            "code": "\nvoid initialize_memory_000020b8(void)\n\n{\n  FUN_00002028(0x40049000,0);\n  return;\n}\n\n",
            "current_name": "initialize_memory_000020b8",
            "entrypoint": "0x000020b8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000020b8": "initialize_memory_000020b8"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000020cc": {
            "additional_data": {
                "FUN_00002028": {
                    "allocate_memory": 1,
                    "call_subfunction": 1,
                    "configure_device": 3,
                    "configure_hardware": 1,
                    "configure_peripheral": 4,
                    "execute_memory_test": 1,
                    "set_configuration": 1,
                    "set_memory": 2,
                    "set_memory_block": 1,
                    "set_memory_value": 3,
                    "set_peripheral_data": 1,
                    "set_peripheral_mode": 1,
                    "write_data": 2,
                    "write_data_to_memory": 2,
                    "write_memory": 1,
                    "write_to_memory": 2,
                    "write_value": 1
                },
                "FUN_000020cc": {
                    "initialize_device": 2,
                    "initialize_hardware": 5,
                    "initialize_hardware_function": 1,
                    "initialize_memory": 16,
                    "initialize_peripheral": 4,
                    "initialize_subsystem": 1,
                    "initiate_memory_test": 1,
                    "initiate_memory_write": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 6,
                    "device_address": 4,
                    "hardware_address": 1,
                    "mem_address": 1,
                    "memory_address": 12,
                    "memory_location": 1,
                    "peripheral_address": 2,
                    "start_address": 1
                },
                "param_2": {
                    "config_value": 1,
                    "configuration": 1,
                    "configuration_param": 1,
                    "configuration_value": 3,
                    "count": 2,
                    "data": 5,
                    "data_value": 1,
                    "flag": 1,
                    "is_enabled": 1,
                    "mode": 1,
                    "parameter": 1,
                    "size": 1,
                    "test_type": 1,
                    "value": 8,
                    "write_value": 1
                }
            },
            "called": [
                "FUN_00002028"
            ],
            "calling": [],
            "code": "\nvoid initialize_memory_000020cc(void)\n\n{\n  FUN_00002028(0x4004a000,1);\n  return;\n}\n\n",
            "current_name": "initialize_memory_000020cc",
            "entrypoint": "0x000020cc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000020cc": "initialize_memory_000020cc"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000020e0": {
            "additional_data": {
                "FUN_00002028": {
                    "allocate_memory": 1,
                    "call_subfunction": 1,
                    "configure_subsystem": 1,
                    "execute_subroutine": 1,
                    "set_device_state": 1,
                    "set_memory": 9,
                    "set_memory_block": 2,
                    "set_memory_region": 1,
                    "set_memory_value": 3,
                    "set_memory_values": 2,
                    "write_to_memory": 1
                },
                "FUN_000020e0": {
                    "initialize_device": 1,
                    "initialize_hardware": 3,
                    "initialize_memory": 21,
                    "initialize_subsystem": 1,
                    "initialize_system": 4,
                    "initiate_process": 1
                },
                "param_1": {
                    "address": 6,
                    "base_address": 6,
                    "device_address": 1,
                    "memory_address": 15
                },
                "param_2": {
                    "block_size": 1,
                    "config_value": 1,
                    "count": 1,
                    "data": 1,
                    "input": 1,
                    "num_blocks": 1,
                    "num_devices": 1,
                    "num_elements": 1,
                    "num_iterations": 2,
                    "num_regions": 1,
                    "num_values": 1,
                    "size": 2,
                    "state": 1,
                    "value": 13
                }
            },
            "called": [
                "FUN_00002028"
            ],
            "calling": [],
            "code": "\nvoid initialize_memory_000020e0(void)\n\n{\n  FUN_00002028(0x4004b000,2);\n  return;\n}\n\n",
            "current_name": "initialize_memory_000020e0",
            "entrypoint": "0x000020e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000020e0": "initialize_memory_000020e0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000020f4": {
            "additional_data": {
                "FUN_00002028": {
                    "configure_device": 1,
                    "configure_hardware": 1,
                    "configure_peripheral": 4,
                    "perform_action": 1,
                    "send_data": 1,
                    "set_configuration": 2,
                    "set_device_configuration": 2,
                    "set_hardware_configuration": 1,
                    "set_memory": 2,
                    "set_memory_value": 1,
                    "set_system_arguments": 1,
                    "write_value_to_hardware": 1
                },
                "FUN_000020f4": {
                    "execute_initial_setup": 1,
                    "initialize_communication": 1,
                    "initialize_device": 4,
                    "initialize_devices": 1,
                    "initialize_hardware": 6,
                    "initialize_memory": 8,
                    "initialize_peripheral": 7,
                    "initialize_system": 2,
                    "initiate_memory_test": 1
                },
                "param_1": {
                    "address": 2,
                    "base_address": 15,
                    "data": 1,
                    "device_address": 5,
                    "hardware_address": 1,
                    "memory_address": 2,
                    "memory_base_address": 1,
                    "peripheral_address": 2
                },
                "param_2": {
                    "argument": 1,
                    "config_value": 4,
                    "configuration": 1,
                    "configuration_value": 2,
                    "count": 2,
                    "data_value": 1,
                    "device_type": 2,
                    "length": 1,
                    "num_channels": 1,
                    "num_configurations": 1,
                    "num_devices": 1,
                    "num_elements": 1,
                    "num_iterations": 2,
                    "num_registers": 1,
                    "number_of_devices": 1,
                    "operation": 1,
                    "parameter": 1,
                    "peripheral_mode": 1,
                    "test_iterations": 1,
                    "value": 3
                }
            },
            "called": [
                "FUN_00002028"
            ],
            "calling": [],
            "code": "\nvoid initialize_memory_000020f4(void)\n\n{\n  FUN_00002028(0x4004c000,3);\n  return;\n}\n\n",
            "current_name": "initialize_memory_000020f4",
            "entrypoint": "0x000020f4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000020f4": "initialize_memory_000020f4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002108": {
            "additional_data": {
                "FUN_00002028": {
                    "configure_device": 1,
                    "configure_module": 1,
                    "configure_peripheral": 4,
                    "set_configuration": 1,
                    "set_control_register_value": 1,
                    "set_memory": 7,
                    "set_memory_range": 1,
                    "set_memory_value": 3,
                    "set_peripheral_config": 1,
                    "set_register_value": 2,
                    "write_data_to_memory": 1,
                    "write_to_memory": 1
                },
                "FUN_00002108": {
                    "initialize_data": 1,
                    "initialize_device": 1,
                    "initialize_hardware": 9,
                    "initialize_memory": 14,
                    "initialize_module": 1,
                    "initialize_peripheral": 4,
                    "initialize_system": 1
                },
                "param_1": {
                    "address": 2,
                    "base_address": 6,
                    "device_address": 1,
                    "hardware_address": 2,
                    "mem_address": 1,
                    "memory_address": 11,
                    "peripheral_address": 1,
                    "register_address": 1
                },
                "param_2": {
                    "byte_value": 1,
                    "config_value": 3,
                    "configuration_value": 1,
                    "data": 2,
                    "device_count": 1,
                    "mem_value": 1,
                    "num_configurations": 1,
                    "size": 8,
                    "value": 7
                }
            },
            "called": [
                "FUN_00002028"
            ],
            "calling": [],
            "code": "\nvoid initialize_memory_00002108(void)\n\n{\n  FUN_00002028(0x4004d000,4);\n  return;\n}\n\n",
            "current_name": "initialize_memory_00002108",
            "entrypoint": "0x00002108",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002108": "initialize_memory_00002108"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0000211c": {
            "additional_data": {
                "DAT_000070b8": {
                    "process_state": 1
                },
                "DAT_00007190": {
                    "dash": 1
                },
                "DAT_00007194": {
                    "vertical_bar": 1
                },
                "FUN_000008b8": {
                    "get_free_stack": 1,
                    "get_isr_stack_size": 1,
                    "get_stack": 1,
                    "get_stack_size": 5,
                    "get_stack_used": 2,
                    "get_total_stack_size": 2,
                    "get_total_stack_used": 1
                },
                "FUN_00000900": {
                    "get_base_addr": 2,
                    "get_base_address": 3,
                    "get_current2_addr": 1,
                    "get_current_address": 1,
                    "get_current_stack_address": 1,
                    "get_elf_base_addr": 1,
                    "get_isr_stack": 1,
                    "get_isr_stack_base_address": 1,
                    "get_stack_base": 1,
                    "get_stack_base_address": 1
                },
                "FUN_0000091c": {
                    "get_base_address": 1,
                    "get_base_stack": 1,
                    "get_current3_addr": 1,
                    "get_current_addr": 5,
                    "get_current_address": 4,
                    "get_isr_stack_current_address": 1
                },
                "FUN_000010a0": {
                    "calculate_difference": 2,
                    "calculate_heap_used": 1,
                    "calculate_offset": 1,
                    "calculate_stack_difference": 1,
                    "calculate_stack_size": 2,
                    "calculate_stack_used": 1,
                    "decrement_stack_size": 1,
                    "get_difference": 1,
                    "get_process_size": 1,
                    "get_stack_size_difference": 1,
                    "subtract_values": 1
                },
                "FUN_0000211c": {
                    "display_process_info": 2,
                    "print_memory_info": 1,
                    "print_memory_usage": 3,
                    "print_process_details": 3,
                    "print_process_info": 11,
                    "print_process_information": 9,
                    "print_process_memory_info": 1,
                    "print_process_status": 1
                },
                "FUN_00004c84": {
                    "print_data": 1,
                    "print_formatted": 2,
                    "print_formatted_data": 1,
                    "print_formatted_output": 1,
                    "print_formatted_string": 2,
                    "print_header": 2,
                    "print_line": 2,
                    "print_output": 1,
                    "print_stack_information": 1
                },
                "iVar1": {
                    "process_size_diff": 1
                },
                "local_14": {
                    "line_count": 1,
                    "stack_used": 1,
                    "total_allocated_size": 1,
                    "total_heap_used": 1,
                    "total_memory_used": 2,
                    "total_process_size": 1,
                    "total_stack_allocated": 1,
                    "total_stack_size": 3,
                    "total_stack_usage": 1,
                    "total_stack_used": 2,
                    "total_usage": 1,
                    "total_used": 1,
                    "total_used_stack": 2,
                    "used_stack": 1,
                    "used_stack_size": 3
                },
                "local_18": {
                    "system_stack_size": 1,
                    "total_depth": 1,
                    "total_heap_size": 1,
                    "total_heap_used": 2,
                    "total_memory": 2,
                    "total_process_size": 2,
                    "total_size": 1,
                    "total_stack": 4,
                    "total_stack_reserved": 1,
                    "total_stack_size": 10,
                    "total_stack_used": 6
                },
                "local_1a": {
                    "count": 1,
                    "counter": 5,
                    "function_index": 1,
                    "i": 1,
                    "index": 2,
                    "index2": 2,
                    "iterator": 2,
                    "loop_index": 2,
                    "loop_variable": 1,
                    "pid": 1,
                    "process_count": 1,
                    "process_id": 1,
                    "process_index": 6,
                    "process_number": 1,
                    "section_count": 2,
                    "task_count": 1,
                    "task_id": 1
                },
                "local_20": {
                    "current_stack": 1,
                    "isr_stack": 2,
                    "isr_stack_size": 2,
                    "isr_stack_used": 1,
                    "num_processes": 1,
                    "process_count": 1,
                    "stack": 2,
                    "stack_size": 2,
                    "stack_used": 1,
                    "task_stack": 1,
                    "task_stack_size": 1,
                    "total_stack": 1,
                    "total_stack_size": 7,
                    "total_stack_usage": 1,
                    "total_stack_used": 5,
                    "used_stack": 2
                },
                "local_24": {
                    "address": 1,
                    "base": 2,
                    "base_addr": 1,
                    "base_entry": 1,
                    "base_pointer": 1,
                    "base_stack": 1,
                    "base_stack_address": 1,
                    "current": 3,
                    "current3_addr": 1,
                    "current_addr": 5,
                    "current_address": 2,
                    "current_priority": 1,
                    "current_size": 1,
                    "current_stack": 1,
                    "current_stack_address": 1,
                    "interrupt_stack": 1,
                    "interrupt_stack_ptr": 1,
                    "isr_stack_base_address": 1,
                    "program_counter": 1,
                    "stack_base": 1,
                    "stack_size": 1,
                    "state": 2
                },
                "local_28": {
                    "base_addr": 4,
                    "base_address": 6,
                    "current": 3,
                    "current2_addr": 1,
                    "current_addr": 2,
                    "current_address": 3,
                    "current_entry": 2,
                    "current_function": 1,
                    "current_pointer": 1,
                    "current_stack": 1,
                    "elf_base_addr": 1,
                    "isr_stack_current_address": 1,
                    "isr_stack_ptr": 1,
                    "stack_base": 3,
                    "state_q": 1
                },
                "local_2c": {
                    "array_ptr": 1,
                    "current": 1,
                    "current_addr": 1,
                    "current_address": 2,
                    "current_entry": 2,
                    "current_func": 1,
                    "current_item": 1,
                    "current_section": 1,
                    "current_symbol": 1,
                    "elf_header": 1,
                    "entry": 3,
                    "function": 1,
                    "function_info": 1,
                    "function_pointer": 2,
                    "function_ptr": 2,
                    "process": 1,
                    "process_info": 1,
                    "process_pointer": 1,
                    "ptr": 1,
                    "section_data": 1,
                    "section_pointer": 1,
                    "symbol": 1,
                    "symbol_address": 1,
                    "task_ptr": 1
                },
                "local_30": {
                    "byte_value": 1,
                    "current_index": 1,
                    "elf_index": 1,
                    "index": 16,
                    "process_priority": 1,
                    "queue_length": 1,
                    "relocation_index": 1,
                    "section_index": 3,
                    "stack_depth": 1,
                    "stack_overflow": 1,
                    "stack_used": 2,
                    "symbol_index": 1,
                    "task_index": 1
                },
                "local_34": {
                    "address": 1,
                    "base_addr": 1,
                    "base_address": 13,
                    "current_addr": 1,
                    "current_address": 3,
                    "current_mark": 1,
                    "current_offset": 2,
                    "current_task": 1,
                    "offset": 2,
                    "process_state": 1,
                    "r_offset": 1,
                    "rel_offset": 1,
                    "stack_offset": 1,
                    "stack_size": 1,
                    "symbol_offset": 1
                },
                "local_38": {
                    "auxiliary": 1,
                    "base_addr_offset": 1,
                    "base_mark": 1,
                    "current_address": 2,
                    "description_offset": 1,
                    "helper_variable": 1,
                    "isr_stack_size": 2,
                    "length": 1,
                    "padding": 1,
                    "print_fmt": 1,
                    "priority": 3,
                    "stack_base": 1,
                    "stack_base_addr": 1,
                    "stack_index": 2,
                    "stack_indicator": 1,
                    "stack_marker": 1,
                    "stack_offset": 2,
                    "stack_overflowed": 1,
                    "stack_pointer": 1,
                    "stack_size": 1,
                    "stack_space": 1,
                    "stack_usage": 1,
                    "stack_used": 2,
                    "star": 1
                },
                "local_3c": {
                    "base_address": 1,
                    "current_stack_size": 1,
                    "end_stack": 1,
                    "process_offset": 1,
                    "process_size": 1,
                    "process_stack_size": 1,
                    "size": 1,
                    "stack_size": 17,
                    "stack_used": 3,
                    "state": 2,
                    "total_stack": 1,
                    "used_stack_size": 1
                },
                "local_40": {
                    "current_state": 1,
                    "delimiter": 3,
                    "error_code": 1,
                    "format_specifier": 2,
                    "format_string": 5,
                    "header": 5,
                    "line_format": 1,
                    "line_separator": 3,
                    "padding": 2,
                    "pid_value": 1,
                    "process_id": 1,
                    "section_header": 1,
                    "separator": 3,
                    "state": 1,
                    "title": 1
                }
            },
            "called": [
                "FUN_000008b8",
                "FUN_00000900",
                "FUN_00004c84",
                "FUN_000010a0",
                "FUN_0000091c"
            ],
            "calling": [
                "FUN_00002eb4",
                "FUN_00000f04"
            ],
            "code": "\nvoid print_process_memory_info_0000211c(void)\n\n{\n  int process_size_diff;\n  undefined2 header;\n  int stack_size;\n  int priority;\n  dword base_address;\n  uint index;\n  undefined4 *entry;\n  undefined4 base_address;\n  undefined4 current_addr;\n  int total_stack_size;\n  short process_index;\n  int total_stack_size;\n  int total_stack_size;\n  \n  header = 0x515f;\n  total_stack_size = 0;\n  total_stack_size = 0;\n  FUN_00004c84(\"\\tpid | %-21s| %-9sQ | pri | stack  ( used) | base addr  | current     \\n\",\n               &DAT_000070b8,\"state\");\n  total_stack_size = FUN_000008b8();\n  current_addr = FUN_0000091c();\n  base_address = FUN_00000900();\n  FUN_00004c84(\"\\t  - | isr_stack            | -        - |   - | %6i (%5i) | %10p | %10p\\n\",0x200,\n               total_stack_size,current_addr,base_address);\n  total_stack_size = total_stack_size + 0x200;\n  if (0 < total_stack_size) {\n    total_stack_size = total_stack_size + total_stack_size;\n  }\n  for (process_index = 1; process_index < 0x21; process_index = process_index + 1) {\n    entry = *(undefined4 **)(&DAT_1fff0358 + process_index * 4);\n    if (entry != (undefined4 *)0x0) {\n      index = (uint)*(byte *)(entry + 1);\n      base_address = (&Elf32_Rel_ARRAY_1fff0200[4].r_offset)[index];\n      priority = (int)&header + (uint)(8 < index);\n      stack_size = entry[0xb];\n      total_stack_size = stack_size + total_stack_size;\n      process_size_diff = FUN_000010a0(entry[9]);\n      stack_size = stack_size - process_size_diff;\n      total_stack_size = stack_size + total_stack_size;\n      FUN_00004c84(\"\\t%3hi | %-20s | %-8s %.1s | %3i | %6i (%5i) | %10p | %10p \\n\",\n                   (int)*(short *)((int)entry + 6),entry[10],base_address,priority,\n                   *(undefined *)((int)entry + 5),entry[0xb],stack_size,entry[9],*entry);\n    }\n  }\n  FUN_00004c84(\"\\t%5s %-21s|%13s%6s %6i (%5i)\\n\",&DAT_00007190,&DAT_00007194,&DAT_00007190,\n               &DAT_00007190,total_stack_size,total_stack_size);\n  return;\n}\n\n",
            "current_name": "print_process_memory_info_0000211c",
            "entrypoint": "0x0000211c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0000211c": "print_process_memory_info_0000211c",
                "iVar1": "process_size_diff",
                "local_14": "total_stack_size",
                "local_18": "total_stack_size",
                "local_1a": "process_index",
                "local_20": "total_stack_size",
                "local_24": "current_addr",
                "local_28": "base_address",
                "local_2c": "entry",
                "local_30": "index",
                "local_34": "base_address",
                "local_38": "priority",
                "local_3c": "stack_size",
                "local_40": "header"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002270": {
            "additional_data": {
                "FUN_00002270": {
                    "check_equal_values": 1,
                    "check_equality": 25,
                    "check_if_equal": 2,
                    "check_if_values_equal": 1,
                    "is_equal": 1,
                    "is_pointer_equal": 1
                },
                "bVar3": {
                    "are_equal": 1,
                    "are_values_equal": 1,
                    "is_equal": 23,
                    "is_match": 2,
                    "is_matching": 1,
                    "is_same": 1,
                    "is_value_equal": 1
                },
                "iVar2": {
                    "second_value": 1,
                    "value": 13,
                    "value1": 8,
                    "value_1": 1,
                    "value_at_address": 1,
                    "value_at_address_c": 1,
                    "value_at_offset": 3,
                    "value_at_offset_0x_c": 2
                },
                "param_1": {
                    "input": 21,
                    "input_pointer": 1,
                    "input_value": 4,
                    "memory_address": 1,
                    "obj": 1,
                    "object_address": 1,
                    "ptr": 2
                },
                "uVar1": {
                    "result": 9
                }
            },
            "called": [],
            "calling": [
                "FUN_0000231c"
            ],
            "code": "\nundefined check_equality_00002270(int input)\n\n{\n  undefined result;\n  int value;\n  bool is_equal;\n  \n  value = *(int *)(input + 0xc);\n  is_equal = *(int *)(input + 8) == value;\n  if (is_equal) {\n    value = 1;\n  }\n  result = (undefined)value;\n  if (!is_equal) {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "check_equality_00002270",
            "entrypoint": "0x00002270",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002270": "check_equality_00002270",
                "bVar3": "is_equal",
                "iVar2": "value",
                "param_1": "input",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002294": {
            "additional_data": {
                "FUN_00002294": {
                    "check_array_bounds": 1,
                    "check_condition": 1,
                    "check_difference": 3,
                    "check_equal_difference": 1,
                    "check_equality": 16,
                    "check_equality_and_return": 1,
                    "check_matching_values": 1,
                    "check_sum_is_equal": 2,
                    "check_sum_is_valid": 1,
                    "check_sum_match": 1,
                    "check_sum_matches": 1,
                    "compare_range": 1,
                    "compare_values": 1
                },
                "bVar3": {
                    "is_difference_equal": 6,
                    "is_equal": 9,
                    "is_equal_difference": 1,
                    "is_equality": 2,
                    "is_equality_equal": 1,
                    "is_equivalent": 1,
                    "is_in_bounds": 1,
                    "is_match": 2,
                    "is_matching": 2,
                    "is_offset_valid": 1,
                    "is_range_valid": 1,
                    "is_same": 1,
                    "is_sum_equal": 2,
                    "is_sum_valid": 1
                },
                "iVar2": {
                    "difference": 13,
                    "element_size": 1,
                    "end_address": 1,
                    "offset": 7,
                    "sum": 1,
                    "sum_difference": 3,
                    "value": 2,
                    "value1": 2,
                    "value_difference": 1
                },
                "param_1": {
                    "array_address": 1,
                    "buffer": 1,
                    "input": 27,
                    "input_data": 1,
                    "start_address": 1
                },
                "uVar1": {
                    "result": 16,
                    "return_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00002364"
            ],
            "code": "\nundefined check_equality_and_return_00002294(int input)\n\n{\n  undefined result;\n  int difference;\n  bool is_equal;\n  \n  difference = *(int *)(input + 4);\n  is_equal = *(int *)(input + 0xc) - *(int *)(input + 8) == difference;\n  if (is_equal) {\n    difference = 1;\n  }\n  result = (undefined)difference;\n  if (!is_equal) {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "check_equality_and_return_00002294",
            "entrypoint": "0x00002294",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002294": "check_equality_and_return_00002294",
                "bVar3": "is_equal",
                "iVar2": "difference",
                "param_1": "input",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000022be": {
            "additional_data": {
                "FUN_000022be": {
                    "increment_and_overwrite": 1,
                    "increment_and_set_value": 1,
                    "increment_and_store_value": 6,
                    "increment_and_write_to_memory": 1,
                    "increment_and_write_value": 1,
                    "increment_array_element_and_store_value": 1,
                    "increment_value": 1,
                    "increment_value_and_store": 1,
                    "store_param_in_array": 1,
                    "store_value_at_offset": 1,
                    "store_value_in_array": 1,
                    "update_array_at_index": 1,
                    "update_array_element": 7,
                    "update_array_value": 1,
                    "update_array_with_value": 1,
                    "write_byte_to_address": 1,
                    "write_byte_to_memory": 1,
                    "write_byte_to_pointer": 1,
                    "write_to_memory": 2
                },
                "param_1": {
                    "address_data": 1,
                    "array": 25,
                    "memory": 1,
                    "memory_array": 1,
                    "memory_block": 1,
                    "pointer": 1
                },
                "param_2": {
                    "byte_value": 1,
                    "data": 3,
                    "element": 1,
                    "new_element": 1,
                    "new_value": 3,
                    "value": 21,
                    "value_to_write": 1
                },
                "uVar1": {
                    "address": 1,
                    "array_element": 1,
                    "current_element": 1,
                    "current_index": 11,
                    "current_offset": 1,
                    "current_value": 7,
                    "index": 4,
                    "old_value": 2,
                    "previous_count": 1,
                    "previous_value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_00002364"
            ],
            "code": "\nvoid increment_array_element_and_store_value_000022be(int *array,undefined value)\n\n{\n  uint current_index;\n  \n  current_index = array[3];\n  array[3] = current_index + 1;\n  *(undefined *)((current_index & array[1] - 1U) + *array) = value;\n  return;\n}\n\n",
            "current_name": "increment_array_element_and_store_value_000022be",
            "entrypoint": "0x000022be",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000022be": "increment_array_element_and_store_value_000022be",
                "param_1": "array",
                "param_2": "value",
                "uVar1": "current_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000022f0": {
            "additional_data": {
                "FUN_000022f0": {
                    "increment_and_access": 1,
                    "increment_and_access_memory": 3,
                    "increment_and_get_element": 1,
                    "increment_and_read_value": 1,
                    "increment_and_retrieve_value": 1,
                    "increment_and_retrieve_value_at_offset": 1,
                    "increment_and_return": 2,
                    "increment_and_return_at_index": 1,
                    "increment_and_return_byte": 1,
                    "increment_and_return_chunk": 1,
                    "increment_and_return_element": 5,
                    "increment_and_return_indexed_value": 1,
                    "increment_and_return_item": 2,
                    "increment_and_return_next_value": 1,
                    "increment_and_return_offset": 3,
                    "increment_array_index_and_return_value": 1,
                    "increment_index": 1,
                    "increment_pointer_value": 1,
                    "increment_value": 1,
                    "increment_value_and_return_byte": 1,
                    "update_and_retrieve_value": 1
                },
                "param_1": {
                    "array": 26,
                    "array_ptr": 1,
                    "byte_array": 1,
                    "chunk_pointer": 1,
                    "data": 1,
                    "pointer_to_value": 1
                },
                "uVar1": {
                    "count": 1,
                    "cur_index": 1,
                    "current_element": 2,
                    "current_element_index": 1,
                    "current_index": 5,
                    "current_offset": 2,
                    "current_value": 9,
                    "element_index": 1,
                    "index": 2,
                    "offset": 2,
                    "old_value": 1,
                    "original_value": 1,
                    "previous_value": 1,
                    "temp_value": 1,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0000231c"
            ],
            "code": "\nundefined increment_and_return_element_000022f0(int *array)\n\n{\n  uint current_value;\n  \n  current_value = array[2];\n  array[2] = current_value + 1;\n  return *(undefined *)((current_value & array[1] - 1U) + *array);\n}\n\n",
            "current_name": "increment_and_return_element_000022f0",
            "entrypoint": "0x000022f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000022f0": "increment_and_return_element_000022f0",
                "param_1": "array",
                "uVar1": "current_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0000231c": {
            "additional_data": {
                "FUN_00002270": {
                    "is_zero": 1
                },
                "FUN_000022f0": {
                    "get_data": 1
                },
                "FUN_0000231c": {
                    "copy_and_count": 2,
                    "copy_and_count_bytes": 1,
                    "copy_and_limit_data": 1,
                    "copy_array": 1,
                    "copy_bytes": 1,
                    "copy_bytes_from_source": 1,
                    "copy_data": 11,
                    "copy_from_memory": 1,
                    "decompile_and_copy": 1,
                    "decompress_data": 1,
                    "extract_data": 6,
                    "extract_data_from_binary": 1,
                    "process_data": 1,
                    "reverse_and_copy_bytes": 1,
                    "reverse_copy": 1
                },
                "iVar2": {
                    "check_result": 1,
                    "copy_result": 1,
                    "copy_status": 1,
                    "is_byte_zero": 1,
                    "is_zero": 1,
                    "result": 19,
                    "result_code": 1,
                    "return_value": 1,
                    "status": 2
                },
                "local_14": {
                    "bytes_left": 1,
                    "bytes_remaining": 1,
                    "remaining_bytes": 2,
                    "remaining_elements": 4,
                    "remaining_length": 8,
                    "remaining_size": 14
                },
                "local_20": {
                    "buffer_ptr": 1,
                    "current_dest": 1,
                    "current_destination": 1,
                    "current_output_byte": 1,
                    "current_ptr": 1,
                    "dest_pointer": 1,
                    "dest_ptr": 10,
                    "destination_ptr": 1,
                    "dst_pointer": 1,
                    "output_pointer": 1,
                    "output_ptr": 9,
                    "output_ptr_copy": 1,
                    "ptr_to_output": 1
                },
                "param_1": {
                    "arg1": 3,
                    "callback": 1,
                    "data": 3,
                    "input": 3,
                    "input_array": 1,
                    "input_data": 1,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_ptr": 1,
                    "input_value": 1,
                    "param": 2,
                    "param1": 2,
                    "param_1": 4,
                    "ptr_data": 1,
                    "ptr_src": 1,
                    "some_param": 1,
                    "source": 1,
                    "source_array": 1,
                    "undefined_param": 1,
                    "value": 1
                },
                "param_2": {
                    "buffer": 1,
                    "data_buffer": 1,
                    "dest": 3,
                    "dest_array": 1,
                    "dest_pointer": 1,
                    "dest_ptr": 1,
                    "destination": 8,
                    "destination_array": 1,
                    "output": 4,
                    "output_buffer": 7,
                    "output_data": 1,
                    "output_ptr": 1,
                    "ptr_dest": 1
                },
                "param_3": {
                    "buffer_size": 7,
                    "length": 8,
                    "max_size": 1,
                    "num_bytes": 1,
                    "num_bytes_to_copy": 1,
                    "num_elements": 4,
                    "size": 9
                },
                "uVar1": {
                    "byte_copied": 1,
                    "byte_value": 3,
                    "copied_byte": 1,
                    "copied_value": 1,
                    "copy_value": 2,
                    "current_byte": 1,
                    "current_element": 1,
                    "current_input_byte": 1,
                    "data": 7,
                    "element": 1,
                    "extracted_byte": 1,
                    "extracted_value": 2,
                    "result": 1,
                    "value": 3,
                    "value_to_copy": 1
                }
            },
            "called": [
                "FUN_000022f0",
                "FUN_00002270"
            ],
            "calling": [
                "FUN_000012e2"
            ],
            "code": "\nint copy_and_limit_data_0000231c(undefined4 param_1,undefined *destination,int size)\n\n{\n  undefined data;\n  int result;\n  undefined *dest_ptr;\n  int remaining_size;\n  \n  dest_ptr = destination;\n  remaining_size = size;\n  while ((remaining_size != 0 && (result = FUN_00002270(param_1), result == 0))) {\n    data = FUN_000022f0(param_1);\n    *dest_ptr = data;\n    remaining_size = remaining_size + -1;\n    dest_ptr = dest_ptr + 1;\n  }\n  return size - remaining_size;\n}\n\n",
            "current_name": "copy_and_limit_data_0000231c",
            "entrypoint": "0x0000231c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0000231c": "copy_and_limit_data_0000231c",
                "iVar2": "result",
                "local_14": "remaining_size",
                "local_20": "dest_ptr",
                "param_2": "destination",
                "param_3": "size",
                "uVar1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002364": {
            "additional_data": {
                "FUN_00002294": {
                    "check_error": 1,
                    "check_input_condition": 1,
                    "check_validity": 2
                },
                "FUN_000022be": {
                    "execute_flagged_operation": 1,
                    "execute_if_valid": 1,
                    "handle_error": 2
                },
                "FUN_00002364": {
                    "check_and_call_function": 1,
                    "check_and_execute": 11,
                    "check_and_execute_function": 1,
                    "check_and_handle_error": 1,
                    "check_and_process_data": 2,
                    "check_and_process_input": 1,
                    "check_function": 1,
                    "check_function_result": 1,
                    "check_function_validity": 1,
                    "check_result": 2,
                    "check_result_and_handle": 1,
                    "check_status": 5,
                    "check_status_and_update": 1,
                    "execute_if_valid": 1
                },
                "iVar1": {
                    "condition_result": 1,
                    "result": 21,
                    "status": 5
                },
                "param_1": {
                    "array_ptr": 1,
                    "data": 2,
                    "data_ptr": 3,
                    "device": 1,
                    "function_param": 1,
                    "input": 9,
                    "input_array": 5,
                    "input_param": 3,
                    "input_pointer": 1,
                    "input_ptr": 3,
                    "param_array": 1,
                    "result": 1
                },
                "param_2": {
                    "additional_data": 1,
                    "additional_param": 1,
                    "data": 10,
                    "data_param": 2,
                    "flag": 2,
                    "flag_param": 1,
                    "input_data": 2,
                    "input_value": 4,
                    "param_value": 1,
                    "parameter": 1,
                    "unknown_value": 1,
                    "value": 5
                },
                "uVar2": {
                    "output": 1,
                    "output_value": 1,
                    "result": 5,
                    "return_value": 21,
                    "status": 1
                }
            },
            "called": [
                "FUN_000022be",
                "FUN_00002294"
            ],
            "calling": [
                "FUN_000012b4"
            ],
            "code": "\nundefined4 check_and_execute_function_00002364(undefined4 input,undefined data)\n\n{\n  int result;\n  undefined4 return_value;\n  \n  result = FUN_00002294(input);\n  if (result == 0) {\n    FUN_000022be(input,data);\n    return_value = 0;\n  }\n  else {\n    return_value = 0xffffffff;\n  }\n  return return_value;\n}\n\n",
            "current_name": "check_and_execute_function_00002364",
            "entrypoint": "0x00002364",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002364": "check_and_execute_function_00002364",
                "iVar1": "result",
                "param_1": "input",
                "param_2": "data",
                "uVar2": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002396": {
            "additional_data": {
                "FUN_00002396": {
                    "execute_initialization": 2,
                    "initialize": 1,
                    "initialize_application": 2,
                    "initialize_components": 1,
                    "initialize_module": 1,
                    "initialize_subsystem": 1,
                    "initialize_system": 23
                },
                "FUN_000025f4": {
                    "call_sub_function": 2,
                    "call_subfunction": 1,
                    "configure_hardware": 1,
                    "do_something": 2,
                    "execute_initialization": 6,
                    "execute_startup": 1,
                    "execute_subfunction": 2,
                    "execute_task": 2,
                    "perform_action": 2,
                    "perform_initial_setup": 2,
                    "perform_initialization": 8,
                    "perform_sub_function": 1,
                    "perform_system_check": 1
                }
            },
            "called": [
                "FUN_000025f4"
            ],
            "calling": [
                "FUN_00001274"
            ],
            "code": "\nvoid initialize_system_00002396(void)\n\n{\n  FUN_000025f4();\n  return;\n}\n\n",
            "current_name": "initialize_system_00002396",
            "entrypoint": "0x00002396",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002396": "initialize_system_00002396"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000023a4": {
            "additional_data": {
                "FUN_000023a4": {
                    "execute_riot": 1,
                    "initialize": 3,
                    "initialize_and_interrupt": 2,
                    "initialize_riot": 6,
                    "initialize_system": 17,
                    "initiate_system": 1
                },
                "FUN_000023d0": {
                    "configure_interrupt": 1,
                    "configure_system": 3,
                    "initialize": 1,
                    "initialize_interrupt": 1,
                    "perform_initialization": 1,
                    "reset_system": 1,
                    "set_configuration": 1,
                    "set_initial_status": 1,
                    "set_initial_value": 3,
                    "set_interrupt": 9,
                    "set_interrupt_flag": 3,
                    "set_parameter": 1,
                    "set_parameters": 3,
                    "set_system_state": 1
                },
                "FUN_00002e6c": {
                    "copy_buffer_content": 1,
                    "copy_data": 14,
                    "copy_data_to_buffer": 7,
                    "copy_data_to_stack": 2,
                    "copy_from_stack": 1,
                    "copy_memory": 3,
                    "copy_stack_data": 1,
                    "read_data_from_memory": 1
                },
                "FUN_00004db8": {
                    "display_message": 7,
                    "display_welcome_message": 6,
                    "print_welcome_message": 16,
                    "show_welcome_message": 1
                },
                "auStack_88": {
                    "buffer": 9,
                    "data_buffer": 1,
                    "input_buffer": 1,
                    "stack_data": 1
                },
                "param_1": {
                    "status": 1
                },
                "uVar1": {
                    "result": 2,
                    "return_value": 1
                }
            },
            "called": [
                "FUN_00004db8",
                "FUN_00002e6c",
                "FUN_000023d0"
            ],
            "calling": [
                "FUN_00000f04"
            ],
            "code": "\nundefined4 initialize_system_000023a4(void)\n\n{\n  undefined4 result;\n  undefined buffer [128];\n  \n  FUN_000023d0(0);\n  FUN_00004db8(\"Welcome to RIOT!\");\n  result = FUN_00002e6c(0,buffer,0x80);\n  software_interrupt(0x3f);\n  return result;\n}\n\n",
            "current_name": "initialize_system_000023a4",
            "entrypoint": "0x000023a4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000023a4": "initialize_system_000023a4",
                "auStack_88": "buffer",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000023c8": {
            "additional_data": {
                "0x3f": {
                    "interrupt_number": 1
                },
                "DAT_": {
                    "dat_": 1
                },
                "FUN_000023c8": {
                    "call_software_interrupt": 1,
                    "execute_interrupt": 1,
                    "execute_software_interrupt": 3,
                    "initialize_interrupt": 1,
                    "initiate_software_interrupt": 3,
                    "interrupt_0x3f": 1,
                    "interrupt_hardware": 1,
                    "invoke_software_interrupt": 2,
                    "perform_system_interrupt": 1,
                    "send_software_interrupt": 4,
                    "send_system_interrupt": 1,
                    "trigger_software_interrupt": 12
                },
                "PTR_": {
                    "ptr_": 1
                },
                "PTR_PARAM_1": {
                    "param1": 1
                },
                "original_variable_name_n": {
                    "new_variable_name_n": 1
                },
                "software_interrupt": {
                    "call_interrupt": 1,
                    "call_software_interrupt": 1,
                    "execute_interrupt": 1,
                    "execute_software_interrupt": 1,
                    "interrupt": 1,
                    "interrupt_number": 1,
                    "invoke_interrupt": 2,
                    "perform_interrupt": 3,
                    "perform_software_interrupt": 1,
                    "send_interrupt": 2,
                    "trigger_interrupt": 4,
                    "trigger_software_interrupt": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_000023d0"
            ],
            "code": "\nvoid trigger_software_interrupt_000023c8(void)\n\n{\n  trigger_interrupt(0x3f);\n  return;\n}\n\n",
            "current_name": "trigger_software_interrupt_000023c8",
            "entrypoint": "0x000023c8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000023c8": "trigger_software_interrupt_000023c8",
                "software_interrupt": "trigger_interrupt"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000023d0": {
            "additional_data": {
                "FUN_000023d0": {
                    "check_and_call_function": 2,
                    "check_flag": 1,
                    "check_initialization_status": 1,
                    "execute_function": 6,
                    "execute_if_data_valid": 1,
                    "execute_if_not_flag_set": 1,
                    "execute_if_not_initialized": 1,
                    "execute_if_zero": 1,
                    "execute_initialization": 1,
                    "initialize": 2,
                    "initialize_component": 1,
                    "initialize_data": 2,
                    "initialize_data_if_needed": 1,
                    "initialize_function": 2,
                    "initialize_resource": 2,
                    "process_data": 3,
                    "process_function": 2,
                    "process_param": 1
                },
                "param_1": {
                    "input": 9,
                    "input_argument": 1,
                    "input_data": 5,
                    "input_param": 2,
                    "input_parameter": 1,
                    "input_value": 10,
                    "resource": 2,
                    "status": 1
                },
                "uVar1": {
                    "result": 12,
                    "return_value": 19
                }
            },
            "called": [
                "FUN_000023c8"
            ],
            "calling": [
                "FUN_000023a4"
            ],
            "code": "\nundefined4 execute_function_000023d0(undefined4 input_value)\n\n{\n  undefined4 return_value;\n  \n  if (DAT_1fff0d98 == 0) {\n    return_value = FUN_000023c8(1,input_value,0);\n  }\n  else {\n    return_value = 0;\n  }\n  return return_value;\n}\n\n",
            "current_name": "execute_function_000023d0",
            "entrypoint": "0x000023d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000023d0": "execute_function_000023d0",
                "param_1": "input_value",
                "uVar1": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002400": {
            "called": [],
            "calling": [
                "FUN_00000f04"
            ],
            "code": "\nvoid FUNC_00002400(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_00002400",
            "entrypoint": "0x00002400",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_00002400": "FUNC_00002400"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0000240c": {
            "additional_data": {
                "FUN_0000240c": {
                    "copy_and_return_next_pointer": 2,
                    "copy_first_pointer": 1,
                    "copy_linked_list": 2,
                    "copy_next_pointer": 1,
                    "copy_pointer": 1,
                    "copy_pointer_to_next": 1,
                    "extract_and_update_value": 1,
                    "extract_next_element": 1,
                    "extract_next_pointer": 4,
                    "extract_pointer_value": 1,
                    "extract_value": 1,
                    "extract_value_from_pointer": 2,
                    "replace_pointer": 1,
                    "update_and_return_pointer": 1,
                    "update_param": 1,
                    "update_pointer": 9,
                    "update_pointer_value": 1
                },
                "param_1": {
                    "array": 1,
                    "array_ptr": 1,
                    "current_pointer": 6,
                    "current_value": 1,
                    "first_pointer": 1,
                    "head": 1,
                    "input_pointer": 3,
                    "input_ptr": 1,
                    "list_head": 1,
                    "original_pointer": 1,
                    "param": 1,
                    "pointer": 7,
                    "ptr": 4,
                    "result_ptr": 1,
                    "source": 1
                },
                "puVar1": {
                    "current_node": 1,
                    "destination": 1,
                    "extracted_value": 1,
                    "new_first_pointer": 1,
                    "new_ptr": 1,
                    "new_value": 1,
                    "next_element_ptr": 1,
                    "next_pointer": 15,
                    "next_ptr": 2,
                    "next_value": 1,
                    "target_pointer": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "value_from_pointer": 1,
                    "value_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_000024bc"
            ],
            "code": "\nundefined4 * update_and_return_pointer_0000240c(undefined4 *pointer)\n\n{\n  undefined4 *next_pointer;\n  \n  next_pointer = (undefined4 *)*pointer;\n  if (next_pointer != (undefined4 *)0x0) {\n    *pointer = *next_pointer;\n  }\n  return next_pointer;\n}\n\n",
            "current_name": "update_and_return_pointer_0000240c",
            "entrypoint": "0x0000240c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0000240c": "update_and_return_pointer_0000240c",
                "param_1": "pointer",
                "puVar1": "next_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002434": {
            "additional_data": {
                "DAT_1fff03dc": {
                    "constant_value": 1,
                    "data": 1
                },
                "FUM_00000cd0": {
                    "get_initial_result": 1,
                    "initialize_value": 1
                },
                "FUN_00000698": {
                    "initialize_data": 1,
                    "perform_operation": 2,
                    "set_data": 1,
                    "set_flag": 3,
                    "set_flag_value": 1,
                    "update_data": 1
                },
                "FUN_0000093c": {
                    "additional_task": 1,
                    "final_cleanup": 1,
                    "finalize": 3,
                    "finalize_process": 1,
                    "perform_action": 1,
                    "perform_cleanup": 1,
                    "perform_task": 1
                },
                "FUN_00000cd0": {
                    "get_initial_value": 1,
                    "get_some_value": 1,
                    "initialize": 4,
                    "initialize_data": 1,
                    "initialize_function": 1,
                    "initialize_library": 1
                },
                "FUN_00000d0c": {
                    "cleanup": 5,
                    "cleanup_function": 1,
                    "free_memory": 2,
                    "release_resource": 1
                },
                "FUN_00001034": {
                    "handle_data": 1,
                    "initialize_data": 1,
                    "initialize_data_pointer": 1,
                    "initialize_value": 1,
                    "modify_data": 1,
                    "process_data": 1,
                    "update_data": 1,
                    "update_param_value": 1,
                    "update_param_with_value": 1
                },
                "FUN_00002434": {
                    "check_and_update_param": 1,
                    "check_and_update_value": 2,
                    "handle_error_code": 1,
                    "handle_param": 1,
                    "initialize_data": 1,
                    "process_data": 9,
                    "process_param": 2,
                    "update_param": 3,
                    "update_param_and_return": 1,
                    "update_param_and_return_result": 1,
                    "update_param_and_return_value": 1,
                    "update_param_if_zero_or_increment": 1,
                    "update_param_value": 1,
                    "update_parameter": 1,
                    "update_status": 1,
                    "update_value": 3,
                    "update_value_if_needed": 1
                },
                "iVar1": {
                    "backup": 1,
                    "constant": 1,
                    "data": 3,
                    "data_value": 1,
                    "data_var": 1,
                    "initial_value": 7,
                    "offset": 1,
                    "old_value": 1,
                    "original_value": 1,
                    "previous_value": 1,
                    "saved_value": 4,
                    "stored_value": 1,
                    "temp": 1,
                    "temp_value": 2,
                    "temp_var": 3,
                    "temp_variable": 1,
                    "var1": 1
                },
                "param_1": {
                    "data": 2,
                    "data_pointer": 5,
                    "data_ptr": 3,
                    "error_code": 1,
                    "p_param": 1,
                    "param": 4,
                    "param_array": 1,
                    "param_pointer": 4,
                    "param_ptr": 1,
                    "parameter": 1,
                    "ptr_param": 1,
                    "status": 1,
                    "value": 4,
                    "value_pointer": 1,
                    "value_ptr": 1
                },
                "param_2": {
                    "check": 1,
                    "check_value": 1,
                    "condition": 6,
                    "flag": 19,
                    "is_zero": 1,
                    "param_value": 2,
                    "value": 1
                },
                "uVar2": {
                    "function_result": 1,
                    "result": 21,
                    "return_value": 9
                }
            },
            "called": [
                "FUN_00001034",
                "FUN_00000d0c",
                "FUN_0000093c",
                "FUN_00000698",
                "FUN_00000cd0"
            ],
            "calling": [
                "FUN_0000129c"
            ],
            "code": "\nundefined4 process_data_00002434(int *data_pointer,int flag)\n\n{\n  int initial_value;\n  undefined4 result;\n  \n  result = FUN_00000cd0();\n  initial_value = DAT_1fff03dc;\n  if (*data_pointer == 0) {\n    *data_pointer = -1;\n    FUN_00000d0c(result);\n    result = 1;\n  }\n  else if (flag == 0) {\n    FUN_00000d0c(result);\n    result = 0;\n  }\n  else {\n    FUN_00000698(DAT_1fff03dc,2);\n    if (*data_pointer == -1) {\n      *data_pointer = initial_value + 8;\n      *(undefined4 *)*data_pointer = 0;\n    }\n    else {\n      FUN_00001034(data_pointer,initial_value);\n    }\n    FUN_00000d0c(result);\n    FUN_0000093c();\n    result = 1;\n  }\n  return result;\n}\n\n",
            "current_name": "process_data_00002434",
            "entrypoint": "0x00002434",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002434": "process_data_00002434",
                "iVar1": "initial_value",
                "param_1": "data_pointer",
                "param_2": "flag",
                "uVar2": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000024bc": {
            "additional_data": {
                "FUN_00000698": {
                    "calculate_checksum": 1,
                    "calculate_new_value": 1,
                    "perform_operation": 1,
                    "print_array_value": 1,
                    "print_function": 1,
                    "print_info": 1,
                    "print_number": 1,
                    "print_result": 1,
                    "print_value": 3,
                    "subtract_and_print": 2
                },
                "FUN_00000738": {
                    "clean_up2": 1,
                    "cleanup": 1,
                    "cleanup_operation": 1,
                    "cleanup_temp": 1,
                    "free_memory_helper": 1,
                    "print_message": 1,
                    "print_value": 3,
                    "process_value": 1,
                    "release_data": 1
                },
                "FUN_00000cd0": {
                    "get_default_value": 1,
                    "get_function_code": 1,
                    "get_initial_value": 4,
                    "get_result": 2,
                    "get_return_value": 2,
                    "init_function": 1,
                    "initialize": 1,
                    "setup_environment": 1
                },
                "FUN_00000d0c": {
                    "clean_up": 1,
                    "cleanup": 4,
                    "cleanup_action": 1,
                    "cleanup_function": 2,
                    "clear_param": 1,
                    "free_memory": 1,
                    "process_result": 1,
                    "release_return_value": 1,
                    "reset_value": 1
                },
                "FUN_0000240c": {
                    "adjust_parameter": 1,
                    "find_value": 1,
                    "get_value": 1,
                    "process_array": 4,
                    "process_data": 1,
                    "process_data_helper": 1,
                    "process_data_internal": 1,
                    "process_pointer": 1,
                    "sub_function": 1,
                    "update_param": 1
                },
                "FUN_000024bc": {
                    "check_and_update_param": 1,
                    "check_and_update_status": 1,
                    "process_data": 10,
                    "process_param": 8,
                    "process_parameter": 3,
                    "process_parameter_value": 1,
                    "process_value": 2,
                    "update_param": 2,
                    "update_param_value": 1
                },
                "iVar3": {
                    "index": 1,
                    "param_result": 1,
                    "processed_data": 1,
                    "processed_value": 1,
                    "result": 6,
                    "temp": 5,
                    "temp3": 1,
                    "temp_var": 9,
                    "temp_var2": 1,
                    "temp_variable": 1,
                    "value": 3,
                    "var": 1
                },
                "param_1": {
                    "data": 6,
                    "data_pointer": 2,
                    "data_ptr": 3,
                    "input": 2,
                    "input_param": 2,
                    "param": 11,
                    "pointer": 1,
                    "status": 1,
                    "value_pointer": 1,
                    "value_ptr": 1
                },
                "uVar1": {
                    "byte_value": 1,
                    "data_type": 1,
                    "previous_status": 1,
                    "status": 1,
                    "temp": 7,
                    "temp1": 1,
                    "temp_var": 3,
                    "temp_variable": 1,
                    "u_byte": 1,
                    "undefined_var": 1,
                    "uninitialized_value": 1,
                    "unknown": 2,
                    "unknown_value": 2,
                    "unknown_var1": 1,
                    "value": 7
                },
                "uVar2": {
                    "function_result": 3,
                    "new_status": 1,
                    "result": 17,
                    "result_var": 1,
                    "return_value": 6,
                    "temp2": 1,
                    "u_int": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_00000738",
                "FUN_00000d0c",
                "FUN_0000240c",
                "FUN_00000698",
                "FUN_00000cd0"
            ],
            "calling": [
                "FUN_000012b4"
            ],
            "code": "\nvoid process_data_000024bc(int *param)\n\n{\n  undefined temp;\n  undefined4 result;\n  int temp_var;\n  \n  result = FUN_00000cd0();\n  if (*param == 0) {\n    FUN_00000d0c(result);\n  }\n  else if (*param == -1) {\n    *param = 0;\n    FUN_00000d0c(result);\n  }\n  else {\n    temp_var = FUN_0000240c(param);\n    FUN_00000698(temp_var + -8,10);\n    if (*param == 0) {\n      *param = -1;\n    }\n    temp = *(undefined *)(temp_var + -3);\n    FUN_00000d0c(result);\n    FUN_00000738(temp);\n  }\n  return;\n}\n\n",
            "current_name": "process_data_000024bc",
            "entrypoint": "0x000024bc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000024bc": "process_data_000024bc",
                "iVar3": "temp_var",
                "param_1": "param",
                "uVar1": "temp",
                "uVar2": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002538": {
            "additional_data": {
                "DAT_e000ed14": {
                    "array": 1,
                    "buffer": 1,
                    "byte_array": 1
                },
                "FUN_00002538": {
                    "set_byte": 1,
                    "set_byte_value": 8,
                    "set_byte_value_at_offset": 1,
                    "set_data": 2,
                    "store_byte": 1,
                    "store_byte_value": 1,
                    "store_data": 3,
                    "store_to_memory": 1,
                    "update_data": 4,
                    "update_memory": 9
                },
                "PTR_": {
                    "unchanged": 1
                },
                "char": {
                    "byte_value": 1
                },
                "param_1": {
                    "address": 6,
                    "byte_value": 7,
                    "data_index": 1,
                    "index": 5,
                    "input_byte": 9,
                    "input_index": 1,
                    "offset": 2
                },
                "param_2": {
                    "data": 9,
                    "data_value": 2,
                    "input_value": 6,
                    "new_data": 1,
                    "output_value": 1,
                    "setting_value": 1,
                    "uint_value": 3,
                    "value": 7,
                    "value_to_update": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0000258c"
            ],
            "code": "\nvoid set_byte_value_at_offset_00002538(byte input_byte,uint data)\n\n{\n  if ((byte_value)input_byte < '\\0') {\n    (&DAT_e000ed14)[input_byte & 0xf] = (byte_value)((data & 0xff) << 4);\n  }\n  else {\n    *(byte_value *)((byte_value)input_byte + -0x1fff1c00) = (byte_value)((data & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "current_name": "set_byte_value_at_offset_00002538",
            "entrypoint": "0x00002538",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002538": "set_byte_value_at_offset_00002538",
                "char": "byte_value",
                "param_1": "input_byte",
                "param_2": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0000258c": {
            "additional_data": {
                "FUN_00002538": {
                    "configure_peripheral": 2,
                    "configure_register": 1,
                    "send_command": 1,
                    "send_data": 7,
                    "set_configuration": 2,
                    "set_flag": 2,
                    "set_peripheral_configuration": 1,
                    "set_register_value": 2,
                    "write_byte_to_register": 2,
                    "write_data": 2
                },
                "FUN_0000258c": {
                    "initialize_and_configure_hardware": 1,
                    "initialize_config": 1,
                    "initialize_data": 1,
                    "initialize_device": 1,
                    "initialize_flags": 2,
                    "initialize_hard_ware": 1,
                    "initialize_hardware": 2,
                    "initialize_memory": 2,
                    "initialize_peripheral": 2,
                    "initialize_peripheral_registers": 1,
                    "initialize_registers": 9,
                    "initialize_settings": 1,
                    "initialize_system": 7
                },
                "local_c": {
                    "count": 2,
                    "counter": 19,
                    "index": 9,
                    "loop_index": 1
                },
                "param_1": {
                    "byte_val": 1,
                    "byte_value": 2,
                    "command": 1,
                    "config_byte": 2,
                    "data": 8,
                    "data_byte": 3,
                    "flag": 1,
                    "register_number": 1,
                    "value": 3
                },
                "param_2": {
                    "config_value": 1,
                    "count": 2,
                    "data_size": 1,
                    "flag": 4,
                    "flag_val": 1,
                    "is_enabled": 1,
                    "length": 8,
                    "num_times": 1,
                    "value": 3
                }
            },
            "called": [
                "FUN_00002538"
            ],
            "calling": [
                "FUN_00001274"
            ],
            "code": "\n\n\nvoid initialize_peripheral_registers_0000258c(void)\n\n{\n  uint counter;\n  \n  _DAT_e000ed08 = 0;\n  FUN_00002538(0xfffffffe,1);\n  FUN_00002538(0xfffffffb,1);\n  for (counter = 0; counter < 0x66; counter = counter + 1) {\n    FUN_00002538((int)(char)counter,1);\n  }\n  _DAT_e000ed10 = _DAT_e000ed10 | 0x10;\n  _DAT_e000ed14 = _DAT_e000ed14 | 0x200;\n  return;\n}\n\n",
            "current_name": "initialize_peripheral_registers_0000258c",
            "entrypoint": "0x0000258c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0000258c": "initialize_peripheral_registers_0000258c",
                "local_c": "counter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000025f4": {
            "additional_data": {
                "FUN_000025f4": {
                    "execute_external_function": 1,
                    "execute_initialization": 3,
                    "execute_main_function": 1,
                    "initialize_hardware": 1,
                    "initialize_program": 1,
                    "initialize_system": 23,
                    "start_function": 1
                },
                "FUN_000027b0": {
                    "configure_hardware": 1,
                    "do_action": 1,
                    "execute_additional_operations": 1,
                    "execute_initialization": 1,
                    "execute_subfunction": 1,
                    "internal_function": 1,
                    "perform_configuration": 1,
                    "perform_initialization": 15,
                    "perform_subtask": 1,
                    "perform_system_check": 1,
                    "perform_system_checks": 1,
                    "perform_system_setup": 1,
                    "start_process": 1,
                    "sub_function": 1,
                    "subprocess": 1,
                    "update_data": 1,
                    "update_system": 1
                }
            },
            "called": [
                "FUN_000027b0"
            ],
            "calling": [
                "FUN_00002396"
            ],
            "code": "\nvoid initialize_system_000025f4(void)\n\n{\n  FUN_000027b0();\n  return;\n}\n\n",
            "current_name": "initialize_system_000025f4",
            "entrypoint": "0x000025f4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000025f4": "initialize_system_000025f4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002600": {
            "additional_data": {
                "FUN_00002600": {
                    "decompiled_function": 1,
                    "do_something": 1,
                    "execute_reverse": 1,
                    "extract_and_process_data": 1,
                    "initialize_and_execute": 1,
                    "initialize_and_process": 3,
                    "process_and_execute": 1,
                    "process_data": 7,
                    "process_function": 1
                },
                "FUN_0000285c": {
                    "cleanup_operation": 1,
                    "display_result": 1,
                    "execute_final_stage": 1,
                    "execute_process": 1,
                    "execute_task": 1,
                    "function1": 1,
                    "improve": 1,
                    "log_result": 1,
                    "output_result": 1,
                    "perform_cleanup": 1,
                    "print_result": 5,
                    "process_result": 6,
                    "process_results": 1
                },
                "FUN_000047e4": {
                    "calculate_result": 1,
                    "extract_data": 1,
                    "function2": 1,
                    "perform_computation": 1,
                    "reverse": 3,
                    "reverse_binary": 1,
                    "reverse_binary_code": 1,
                    "reverse_data": 3,
                    "reverse_input": 3,
                    "reverse_integer": 2,
                    "reverse_value": 1
                },
                "param_1": {
                    "data": 4,
                    "input": 7,
                    "input_array": 1,
                    "input_data": 10,
                    "input_parameter": 1,
                    "input_value": 8
                },
                "uVar1": {
                    "output_value": 1,
                    "processed_data": 2,
                    "result": 25,
                    "return_value": 1
                }
            },
            "called": [
                "FUN_0000285c",
                "FUN_000047e4"
            ],
            "calling": [
                "FUN_00003478"
            ],
            "code": "\nundefined4 extract_and_process_data_00002600(undefined4 input_data)\n\n{\n  undefined4 result;\n  \n  result = FUN_000047e4(input_data);\n  FUN_0000285c(result);\n  return 0;\n}\n\n",
            "current_name": "extract_and_process_data_00002600",
            "entrypoint": "0x00002600",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002600": "extract_and_process_data_00002600",
                "param_1": "input_data",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002624": {
            "additional_data": {
                "FUN_00002624": {
                    "decompile_and_improve": 1,
                    "extract_and_process_data": 10,
                    "extract_binary_data": 1,
                    "extract_data": 2,
                    "extract_data_from_binary": 3,
                    "extracted_binary_function": 1,
                    "initialize_and_copy_data": 1,
                    "initialize_and_process_data": 1,
                    "process_data": 6,
                    "process_function": 1
                },
                "FUN_0000281c": {
                    "get_pointer": 1,
                    "initialize_data": 3
                },
                "FUN_0000443c": {
                    "copy_data": 2,
                    "process_data": 1,
                    "reverse_values": 1
                },
                "local_10": {
                    "func_result": 1,
                    "function_result": 4,
                    "initialized_data": 1,
                    "output_data": 3,
                    "result": 21,
                    "return_value": 1
                },
                "param_1": {
                    "binary_data": 1,
                    "data": 3,
                    "input": 1,
                    "input_data": 19,
                    "input_param": 6,
                    "param": 1
                },
                "param_2": {
                    "output_data": 2
                },
                "uStack_c": {
                    "count": 1,
                    "counter": 2,
                    "initialized_value": 1,
                    "stack_var": 2,
                    "stack_variable": 1,
                    "temp": 5,
                    "temp_val": 1,
                    "temp_value": 1,
                    "temp_var": 8,
                    "temp_variable": 4,
                    "unused": 1,
                    "unused_var": 2,
                    "unused_variable": 1,
                    "zero_holder": 1
                }
            },
            "called": [
                "FUN_0000443c",
                "FUN_0000281c"
            ],
            "calling": [
                "FUN_00003444"
            ],
            "code": "\nundefined4 extract_and_process_data_00002624(undefined4 input_data)\n\n{\n  undefined4 result;\n  undefined4 temp_var;\n  \n  result = FUN_0000281c();\n  temp_var = 0;\n  FUN_0000443c(&result,input_data);\n  return 0;\n}\n\n",
            "current_name": "extract_and_process_data_00002624",
            "entrypoint": "0x00002624",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002624": "extract_and_process_data_00002624",
                "local_10": "result",
                "param_1": "input_data",
                "uStack_c": "temp_var"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002654": {
            "additional_data": {
                "0": {
                    "success": 1
                },
                "0x26f1": {
                    "constant": 1,
                    "operation_constant": 1
                },
                "DAT_1fff0d9c": {
                    "data_value": 1,
                    "global_data": 1
                },
                "FUN_00002654": {
                    "execute_function": 2,
                    "initialize": 1,
                    "initialize_and_execute": 2,
                    "initialize_and_process": 1,
                    "initialize_and_process_data": 2,
                    "initialize_and_set_param": 1,
                    "initialize_configuration": 1,
                    "initialize_data": 12,
                    "initialize_function": 5,
                    "initialize_process": 1,
                    "process_data": 2,
                    "update_data": 1
                },
                "FUN_00002894": {
                    "configure_data": 1,
                    "execute_operation": 2,
                    "initialize": 1,
                    "initialize_function": 1,
                    "perform_action": 3,
                    "perform_operation": 3,
                    "process_data": 2,
                    "process_result": 1,
                    "send_data": 1,
                    "send_data_to_server": 1,
                    "set_config": 2,
                    "set_configuration": 1,
                    "set_data_value": 1,
                    "set_values": 1,
                    "update_data": 2,
                    "update_setting": 1,
                    "update_value": 1
                },
                "FUN_000047e4": {
                    "calculate_result": 1,
                    "fetch_data": 1,
                    "get_index_value": 1,
                    "get_result": 1,
                    "process_array": 2,
                    "process_data": 3,
                    "process_input": 2,
                    "process_input_array": 2,
                    "process_input_data": 2,
                    "process_source_data": 1,
                    "retrieve_data": 2,
                    "retrieve_value": 1,
                    "reverse_data": 4,
                    "reverse_input_data": 1,
                    "reverse_pointer": 1
                },
                "param_1": {
                    "config": 1,
                    "data": 5,
                    "data_array": 2,
                    "data_pointer": 2,
                    "data_ptr": 3,
                    "input_array": 5,
                    "input_data": 3,
                    "input_param": 4,
                    "input_pointer": 3,
                    "param_array": 1,
                    "result": 1,
                    "source_data": 1
                },
                "param_2": {
                    "config_param": 1,
                    "data": 2,
                    "data_param": 2,
                    "data_value": 4,
                    "destination_data": 1,
                    "initial_value": 1,
                    "input": 1,
                    "input_val": 1,
                    "new_value": 1,
                    "param2": 3,
                    "param_value": 4,
                    "setting": 1,
                    "value": 7,
                    "value1": 1,
                    "value_param": 1
                },
                "param_3": {
                    "additional_data": 2,
                    "additional_info": 1,
                    "another_param": 1,
                    "config": 1,
                    "config_param": 3,
                    "config_value": 1,
                    "flag": 4,
                    "flags": 1,
                    "option": 2,
                    "option_param": 1,
                    "options": 1,
                    "param": 1,
                    "param3": 3,
                    "param_value2": 1,
                    "parameter": 1,
                    "settings": 1,
                    "size": 2,
                    "unspecified_param": 1,
                    "value": 2,
                    "value2": 1
                },
                "uVar1": {
                    "result": 29,
                    "return_value": 1
                }
            },
            "called": [
                "FUN_000047e4",
                "FUN_00002894"
            ],
            "calling": [
                "FUN_000033f4"
            ],
            "code": "\nundefined4 initialize_and_process_data_00002654(undefined4 data,undefined4 value,undefined4 flag)\n\n{\n  undefined4 result;\n  \n  result = FUN_000047e4(data);\n  DAT_1fff0d9c = value;\n  FUN_00002894(result,0x26f1,flag);\n  return 0;\n}\n\n",
            "current_name": "initialize_and_process_data_00002654",
            "entrypoint": "0x00002654",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002654": "initialize_and_process_data_00002654",
                "param_1": "data",
                "param_2": "value",
                "param_3": "flag",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002690": {
            "additional_data": {
                "FUN_00002690": {
                    "decompile_and_extract": 1,
                    "execute_binary_function": 1,
                    "execute_code": 1,
                    "extract_and_process_data": 3,
                    "extract_function_data": 1,
                    "extracted_binary_function": 2,
                    "initialize_and_generate_data": 1,
                    "initialize_and_process": 1,
                    "initialize_function": 1,
                    "process_and_return_zero": 1,
                    "process_binary": 1,
                    "process_data": 4,
                    "process_function": 1,
                    "reverse_and_parse": 1,
                    "reverse_and_print": 1,
                    "reverse_extracted_binary": 1
                },
                "FUN_000028f0": {
                    "get_initial_value": 1,
                    "get_return_value": 1,
                    "get_value": 1
                },
                "FUN_0000443c": {
                    "process_data": 2
                },
                "local_10": {
                    "function_result": 2,
                    "output_data": 1,
                    "output_value": 1,
                    "result": 22,
                    "result_value": 1,
                    "return_value": 3,
                    "value_from_subfunction": 1
                },
                "param_1": {
                    "input": 3,
                    "input_data": 14,
                    "input_param": 4,
                    "input_parameter": 3,
                    "input_value": 6
                },
                "uStack_c": {
                    "count": 1,
                    "counter": 3,
                    "output_data": 1,
                    "padding": 1,
                    "return_value": 1,
                    "stack_data": 1,
                    "stack_value": 1,
                    "stack_variable": 7,
                    "temp": 1,
                    "temp_var": 2,
                    "temp_variable": 4,
                    "temporary": 1,
                    "temporary_variable": 2,
                    "unused_value": 1,
                    "unused_var": 1,
                    "zero": 2,
                    "zero_value": 1
                }
            },
            "called": [
                "FUN_000028f0",
                "FUN_0000443c"
            ],
            "calling": [
                "FUN_000033c0"
            ],
            "code": "\nundefined4 extract_and_process_data_00002690(undefined4 input_data)\n\n{\n  undefined4 result;\n  undefined4 stack_variable;\n  \n  result = FUN_000028f0();\n  stack_variable = 0;\n  FUN_0000443c(&result,input_data);\n  return 0;\n}\n\n",
            "current_name": "extract_and_process_data_00002690",
            "entrypoint": "0x00002690",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002690": "extract_and_process_data_00002690",
                "local_10": "result",
                "param_1": "input_data",
                "uStack_c": "stack_variable"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000026c0": {
            "additional_data": {
                "DAT_1fff0d9c": {
                    "data_variable": 1
                },
                "FUN_000026c0": {
                    "initialize_counter": 1,
                    "initialize_data": 28,
                    "initialize_function": 1,
                    "initialize_global_data": 1
                },
                "FUN_00002910": {
                    "call_subfunction": 1,
                    "do_something": 1,
                    "execute_sub_function": 3,
                    "perform_initialization": 5,
                    "perform_operation": 1,
                    "perform_setup": 2,
                    "perform_sub_task": 1,
                    "reset_counter": 7,
                    "reset_data": 5,
                    "reset_data_flags": 1,
                    "some_sub_function": 1,
                    "sub_function": 1,
                    "update_data": 2
                }
            },
            "called": [
                "FUN_00002910"
            ],
            "calling": [
                "FUN_00003524"
            ],
            "code": "\nvoid initialize_global_data_000026c0(void)\n\n{\n  FUN_00002910();\n  DAT_1fff0d9c = 0;\n  return;\n}\n\n",
            "current_name": "initialize_global_data_000026c0",
            "entrypoint": "0x000026c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000026c0": "initialize_global_data_000026c0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000026d8": {
            "additional_data": {
                "FUN_000026d8": {
                    "execute_initial_setup": 1,
                    "execute_initialization": 3,
                    "execute_main_function": 1,
                    "initialize": 6,
                    "initialize_components": 1,
                    "initialize_system": 18,
                    "initiate_process": 1
                },
                "FUN_0000294c": {
                    "call_secondary_function": 1,
                    "call_sub_function": 1,
                    "configure_device": 1,
                    "configure_peripherals": 1,
                    "execute_initialization": 1,
                    "execute_sub_function": 2,
                    "execute_subfunction": 1,
                    "execute_task": 1,
                    "perform_action": 1,
                    "perform_initialization": 15,
                    "perform_operation": 1,
                    "perform_secondary_task": 1,
                    "perform_sub_task": 1,
                    "perform_task": 2,
                    "start_execution": 1
                }
            },
            "called": [
                "FUN_0000294c"
            ],
            "calling": [
                "FUN_00003524"
            ],
            "code": "\nvoid initialize_system_000026d8(void)\n\n{\n  FUN_0000294c();\n  return;\n}\n\n",
            "current_name": "initialize_system_000026d8",
            "entrypoint": "0x000026d8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000026d8": "initialize_system_000026d8"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000026e4": {
            "additional_data": {
                "FUN_000026e4": {
                    "execute_initial_setup": 1,
                    "execute_initialization": 1,
                    "initialize": 4,
                    "initialize_application": 1,
                    "initialize_system": 22,
                    "initiate_system": 1,
                    "start_execution": 1
                },
                "FUN_00002970": {
                    "call_subfunction": 1,
                    "do_something": 2,
                    "execute_function": 1,
                    "execute_initialization": 5,
                    "execute_subfunction": 1,
                    "initialize_data": 1,
                    "perform_initial_setup": 1,
                    "perform_initialization": 10,
                    "perform_secondary_task": 1,
                    "perform_startup_tasks": 2,
                    "perform_system_checks": 1,
                    "perform_system_init": 1,
                    "perform_system_initialization": 1,
                    "perform_system_reset": 1,
                    "perform_system_setup": 1,
                    "sub_function": 1
                }
            },
            "called": [
                "FUN_00002970"
            ],
            "calling": [
                "FUN_00003524"
            ],
            "code": "\nvoid initialize_system_000026e4(void)\n\n{\n  FUN_00002970();\n  return;\n}\n\n",
            "current_name": "initialize_system_000026e4",
            "entrypoint": "0x000026e4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000026e4": "initialize_system_000026e4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000026f0": {
            "additional_data": {
                "DAT_1fff0d9c": {
                    "callback": 4,
                    "callback_func": 1,
                    "callback_function": 4,
                    "callback_function_pointer": 1,
                    "callback_function_ptr": 3,
                    "callback_pointer": 2,
                    "function_pointer": 1
                },
                "FUN_000026f0": {
                    "execute_callback": 19,
                    "execute_callback_function": 4,
                    "execute_callback_if_available": 2,
                    "execute_callback_if_defined": 1,
                    "execute_callback_if_set": 1,
                    "execute_function": 1,
                    "execute_if_callback_exists": 2,
                    "execute_if_not_null": 1
                },
                "param_1": {
                    "argument": 2,
                    "callback_arg": 1,
                    "callback_data": 2,
                    "callback_function": 2,
                    "callback_param": 12,
                    "callback_parameter": 4,
                    "data": 3,
                    "input": 2,
                    "input_param": 1,
                    "input_parameter": 1,
                    "param": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid execute_callback_function_000026f0(undefined4 callback_param)\n\n{\n  if (DAT_1fff0d9c != (code *)0x0) {\n    (*DAT_1fff0d9c)(callback_param);\n  }\n  return;\n}\n\n",
            "current_name": "execute_callback_function_000026f0",
            "entrypoint": "0x000026f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000026f0": "execute_callback_function_000026f0",
                "param_1": "callback_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002714": {
            "additional_data": {
                "0x1fff1f00": {
                    "memory_address": 1
                },
                "DAT_00006754": {
                    "bit_mask": 1
                },
                "FUN_00002714": {
                    "reverse_bits": 1,
                    "set_bit": 11,
                    "set_bit_at_index": 1,
                    "set_bit_at_offset": 1,
                    "set_bit_at_position": 1,
                    "set_bit_by_shift": 1,
                    "set_bit_in_array": 2,
                    "set_bit_in_memory": 11,
                    "set_bit_value": 1
                },
                "PTR_0000674c": {
                    "bit_array": 1
                },
                "param_1": {
                    "bit_number": 1,
                    "byte": 1,
                    "byte_to_set": 6,
                    "byte_value": 6,
                    "input": 2,
                    "input_byte": 14
                },
                "param_2": {
                    "bit_index": 1,
                    "bit_position": 1
                },
                "param_3": {
                    "bit_mask": 1
                },
                "param_4": {
                    "shift_amount": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00002894"
            ],
            "code": "\nvoid set_bit_in_memory_00002714(byte input_byte)\n\n{\n  *(int *)(((uint)(int)(char)input_byte >> 5) * 4 + -0x1fff1f00) = 1 << (input_byte & 0x1f);\n  return;\n}\n\n",
            "current_name": "set_bit_in_memory_00002714",
            "entrypoint": "0x00002714",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002714": "set_bit_in_memory_00002714",
                "param_1": "input_byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002744": {
            "additional_data": {
                "0xf": {
                    "mask": 1
                },
                "0xff": {
                    "value_mask": 1
                },
                "DAT_": {
                    "dat_": 1
                },
                "DAT_1fff1c00": {
                    "base_address": 1
                },
                "DAT_e000ed14": {
                    "array_data": 1,
                    "memory": 1,
                    "memory_array": 1,
                    "memory_block": 1,
                    "output_array": 1
                },
                "FUN_00002744": {
                    "set_byte_at_offset": 1,
                    "set_byte_at_position": 1,
                    "set_byte_in_memory": 1,
                    "set_byte_to_memory": 1,
                    "set_byte_value": 2,
                    "set_character": 1,
                    "set_data": 1,
                    "set_hex_value": 1,
                    "set_memory": 1,
                    "set_memory_byte": 2,
                    "set_memory_value": 1,
                    "set_param": 1,
                    "store_byte": 1,
                    "store_data_into_memory": 1,
                    "update_data": 3,
                    "update_memory": 7,
                    "write_byte_to_memory": 1,
                    "write_data": 2,
                    "write_to_memory": 2
                },
                "PTR_": {
                    "ptr_": 1
                },
                "PTR_0": {
                    "null_pointer": 1
                },
                "PTR_0x1fff1c00": {
                    "base_address": 1
                },
                "PTR_1fff1c00": {
                    "memory_offset": 1
                },
                "char": {
                    "byte": 2
                },
                "param_1": {
                    "address": 7,
                    "byte_index": 2,
                    "byte_value": 2,
                    "character": 1,
                    "data_index": 2,
                    "index": 6,
                    "input": 1,
                    "input_byte": 2,
                    "input_index": 1,
                    "input_value": 1,
                    "memory_address": 1,
                    "memory_index": 1,
                    "offset": 3,
                    "position": 1
                },
                "param_2": {
                    "byte_value": 1,
                    "data": 12,
                    "input_value": 1,
                    "int_value": 1,
                    "new_value": 2,
                    "uint_value": 1,
                    "value": 12,
                    "value_to_store": 1
                },
                "param_3": {
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00002894"
            ],
            "code": "\nvoid update_memory_00002744(byte address,uint data)\n\n{\n  if ((byte)address < '\\0') {\n    (&DAT_e000ed14)[address & 0xf] = (byte)((data & 0xff) << 4);\n  }\n  else {\n    *(byte *)((byte)address + -0x1fff1c00) = (byte)((data & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "current_name": "update_memory_00002744",
            "entrypoint": "0x00002744",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002744": "update_memory_00002744",
                "char": "byte",
                "param_1": "address",
                "param_2": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002798": {
            "additional_data": {
                "DAT_1fff0354": {
                    "flag": 1
                },
                "FUN_0000093c": {
                    "call_secondary_function": 1,
                    "call_sub_function": 2,
                    "call_subfunction": 1,
                    "execute_action": 1,
                    "execute_callback": 1,
                    "execute_data_processing": 1,
                    "execute_function": 8,
                    "execute_sub_function": 3,
                    "execute_subfunction": 4,
                    "handle_invalid_data": 1,
                    "invoke_sub_function": 1,
                    "perform_action": 3,
                    "perform_cleanup": 1,
                    "process_data": 3
                },
                "FUN_00002798": {
                    "check_and_call": 1,
                    "check_and_call_fun": 1,
                    "check_and_call_function": 10,
                    "check_and_call_sub_function": 1,
                    "check_and_call_subfunction": 1,
                    "check_and_execute_function": 6,
                    "check_data": 1,
                    "check_data_and_call_function": 2,
                    "check_data_validity": 2,
                    "check_for_data_availability": 1,
                    "check_for_data_validity": 1,
                    "check_if_data_valid": 1,
                    "check_non_zero_data": 1,
                    "execute_if_data_available": 1,
                    "perform_action_if_data_exists": 1
                }
            },
            "called": [
                "FUN_0000093c"
            ],
            "calling": [
                "FUN_00002994"
            ],
            "code": "\nvoid check_data_and_call_function_00002798(void)\n\n{\n  if (DAT_1fff0354 != 0) {\n    FUN_0000093c();\n  }\n  return;\n}\n\n",
            "current_name": "check_data_and_call_function_00002798",
            "entrypoint": "0x00002798",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002798": "check_data_and_call_function_00002798"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000027b0": {
            "additional_data": {
                "FUN_000027b0": {
                    "configure_device": 2,
                    "configure_hardware": 2,
                    "configure_peripheral": 1,
                    "configure_system": 1,
                    "enable_interrupts": 1,
                    "enable_memory_access": 1,
                    "initialize_hardware": 7,
                    "initialize_peripheral": 1,
                    "initialize_subsystem": 1,
                    "initialize_system": 11,
                    "set_bit_and_clear": 1,
                    "set_memory_flags": 1,
                    "update_control_registers": 1
                },
                "FUN_0000294c": {
                    "configure_devices": 1,
                    "execute_additional_operations": 1,
                    "execute_additional_setup": 1,
                    "execute_initialization": 1,
                    "execute_next_task": 1,
                    "execute_operation": 1,
                    "execute_post_processing": 1,
                    "execute_task": 1,
                    "initialize_system": 1,
                    "initialize_timer": 1,
                    "perform_action": 1,
                    "perform_additional_setup": 2,
                    "perform_additional_tasks": 5,
                    "perform_initialization": 5,
                    "perform_system_check": 1,
                    "perform_task": 1,
                    "process_data": 2
                },
                "_DAT_4003d000": {
                    "control_register": 2,
                    "data_reg": 1,
                    "data_register": 6,
                    "device_control": 1,
                    "device_control_register": 2,
                    "error_code": 1,
                    "flag": 1,
                    "flag_value": 1,
                    "interrupt_clear_register": 1,
                    "interrupt_disable": 1,
                    "register_value": 2,
                    "reset_flag": 1,
                    "system_config": 1,
                    "system_flag": 2,
                    "system_mode": 1,
                    "system_reset_register": 1
                },
                "_DAT_4003d008": {
                    "config_reg": 1,
                    "config_register2": 1,
                    "configuration_register": 3,
                    "data_register": 2,
                    "data_value": 1,
                    "device_config": 1,
                    "device_settings": 1,
                    "error_code": 1,
                    "error_config": 1,
                    "error_flag_register": 2,
                    "interrupt_mask_register": 2,
                    "memory_data": 1,
                    "time_control": 1,
                    "timeout_config": 1,
                    "timer_config_register": 1,
                    "timer_match_value": 1,
                    "timer_value": 2,
                    "value_register": 1
                },
                "_DAT_4003d010": {
                    "address_register": 1,
                    "config_register1": 1,
                    "configuration_register": 1,
                    "control_reg": 1,
                    "control_register": 2,
                    "device_config": 1,
                    "interrupt_config": 2,
                    "interrupt_control": 4,
                    "interrupt_control_register": 4,
                    "interrupt_enable_register": 1,
                    "interrupt_mask_register": 1,
                    "memory_address": 1,
                    "timer_control": 1,
                    "timer_control_register": 2,
                    "timer_value": 1
                },
                "_DAT_4003d014": {
                    "device_status_register": 1,
                    "interrupt_flags": 1,
                    "interrupt_status_register": 1,
                    "register_flags": 1,
                    "status_flag": 1,
                    "status_reg": 1,
                    "status_register": 10,
                    "system_config": 1,
                    "system_status": 4,
                    "system_status_register": 3
                },
                "_DAT_4003d01c": {
                    "additional_register": 1,
                    "config_register3": 1,
                    "control_config": 1,
                    "counter": 3,
                    "counter_register": 1,
                    "data_buffer_register": 1,
                    "data_register": 1,
                    "device_data": 1,
                    "extra_config": 1,
                    "flag_register": 1,
                    "interrupt_flag_register": 1,
                    "interrupt_mask": 1,
                    "interrupt_register": 2,
                    "interrupt_status_register": 1,
                    "memory_config": 1,
                    "memory_offset": 1,
                    "system_counter": 1,
                    "temp_reg": 1,
                    "timer_enable_register": 1,
                    "timer_offset": 1
                },
                "_DAT_4004803c": {
                    "control_register": 3,
                    "hardware_control_register": 1,
                    "hardware_flags": 1,
                    "hardware_register": 2,
                    "interrupt_control_register": 1,
                    "memory_flags": 1,
                    "peripheral_control_register": 1,
                    "reg_flags": 1,
                    "register": 2,
                    "register_control": 1,
                    "register_flags": 1,
                    "register_status": 1,
                    "system_config": 1,
                    "system_control_register": 3,
                    "system_flags": 2
                },
                "executeNextTask": {
                    "execute_next_task": 1
                }
            },
            "called": [
                "FUN_0000294c"
            ],
            "calling": [
                "FUN_000025f4"
            ],
            "code": "\n\n\nvoid initialize_system_000027b0(void)\n\n{\n  _DAT_4004803c = _DAT_4004803c | 0x20000000;\n  if ((_DAT_4003d014 & 1) != 0) {\n    _DAT_4003d000 = 0;\n  }\n  _DAT_4003d010 = 0x104;\n  _DAT_4003d008 = 0xffffff42;\n  _DAT_4003d01c = 0;\n  FUN_0000294c();\n  return;\n}\n\n",
            "current_name": "initialize_system_000027b0",
            "entrypoint": "0x000027b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000027b0": "initialize_system_000027b0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0000281c": {
            "additional_data": {
                "FUN_0000281c": {
                    "get_base_address": 4,
                    "get_data": 6,
                    "get_data_address": 4,
                    "get_data_from_address": 2,
                    "get_data_from_memory": 1,
                    "get_data_pointer": 1,
                    "get_data_value": 1,
                    "get_global_data": 4,
                    "get_global_data_pointer": 1,
                    "get_global_variable": 1,
                    "get_initial_value": 1,
                    "get_memory_address": 3,
                    "get_pointer_value": 1,
                    "get_starting_address": 1
                },
                "_DAT_4003d000": {
                    "address_data": 1,
                    "base_address": 4,
                    "data": 6,
                    "data_address": 3,
                    "data_pointer": 1,
                    "data_value": 1,
                    "global_data": 4,
                    "global_variable": 1,
                    "memory_address": 3,
                    "result": 1,
                    "starting_address": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00002624"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00002840) */\n/* WARNING: Removing unreachable block (ram,0x0000284c) */\n\n\nundefined4 get_global_data_pointer_0000281c(void)\n\n{\n  return _DAT_4003d000;\n}\n\n",
            "current_name": "get_global_data_pointer_0000281c",
            "entrypoint": "0x0000281c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0000281c": "get_global_data_pointer_0000281c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0000285c": {
            "additional_data": {
                "FUN_0000285c": {
                    "initialize_data": 10,
                    "initialize_peripheral": 1,
                    "initialize_system": 2,
                    "set_data_flag": 1,
                    "set_datapoint": 1,
                    "set_flag": 5,
                    "set_flag_bit": 1,
                    "set_flag_in_register": 1,
                    "set_flags_and_value": 1,
                    "set_param_and_flag_value": 1,
                    "set_param_and_toggle_bit": 1,
                    "set_param_flags": 1,
                    "set_parameter": 1,
                    "set_permission_flag": 2,
                    "update_config_parameter": 1
                },
                "_DAT_4003d000": {
                    "data_pointer": 1,
                    "data_register": 1,
                    "data_value": 2,
                    "param": 1,
                    "target_register": 1
                },
                "_DAT_4003d014": {
                    "config_register": 2,
                    "control_reg": 1,
                    "control_register": 2,
                    "current_flags": 1,
                    "data_register": 1,
                    "existing_flags": 1,
                    "existing_value": 1,
                    "flag": 3,
                    "flag_register": 1,
                    "flags": 2,
                    "initial_value": 1,
                    "register_value": 4,
                    "status_flag": 1,
                    "status_register": 3,
                    "system_status": 1
                },
                "param_1": {
                    "config_param": 1,
                    "data": 8,
                    "data_to_initialize": 1,
                    "data_value": 2,
                    "flag": 2,
                    "flag_value": 6,
                    "new_flag_value": 1,
                    "new_param": 1,
                    "new_value": 2,
                    "param": 1,
                    "permission_flag": 1,
                    "value": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_00002600"
            ],
            "code": "\n\n\nvoid initialize_data_0000285c(undefined4 data)\n\n{\n  _DAT_4003d000 = data;\n  _DAT_4003d014 = _DAT_4003d014 & 0xffffffef | 0x10;\n  return;\n}\n\n",
            "current_name": "initialize_data_0000285c",
            "entrypoint": "0x0000285c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0000285c": "initialize_data_0000285c",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002894": {
            "additional_data": {
                "DAT_1fff0da0": {
                    "data_3": 1,
                    "parameter_1": 1
                },
                "DAT_1fff0da4": {
                    "data_4": 1,
                    "parameter_2": 1
                },
                "FUN_00002714": {
                    "configure_output": 1,
                    "do_something_with_byte": 1,
                    "execute_operation": 2,
                    "execute_task_1": 1,
                    "execute_task_one": 1,
                    "log_message": 1,
                    "perform_action": 5,
                    "perform_action1": 2,
                    "perform_action_a": 1,
                    "perform_operation1": 1,
                    "perform_task1": 1,
                    "perform_task_a": 1,
                    "print_data": 1,
                    "print_message": 1,
                    "print_status": 1,
                    "print_value": 1,
                    "process_byte": 1,
                    "process_byte_data": 2,
                    "process_byte_value": 1,
                    "process_data": 2,
                    "set_flag": 1
                },
                "FUN_00002744": {
                    "do_something_with_byte_and_value": 1,
                    "execute_task_2": 1,
                    "execute_task_two": 1,
                    "handle_event": 1,
                    "perform_action": 2,
                    "perform_action2": 2,
                    "perform_action_b": 1,
                    "perform_action_with_parameter": 1,
                    "perform_another_action": 1,
                    "perform_operation": 2,
                    "perform_operation2": 1,
                    "perform_task": 1,
                    "perform_task2": 1,
                    "perform_task_b": 1,
                    "process_byte_data_with_size": 1,
                    "process_byte_data_with_u_int": 1,
                    "process_byte_value_with_param": 1,
                    "process_byte_with_param": 1,
                    "process_data": 3,
                    "send_data": 3,
                    "send_packet": 1,
                    "set_parameters": 1
                },
                "FUN_00002894": {
                    "calculate_new_values": 1,
                    "calculate_values": 1,
                    "decrement_and_set_flags": 4,
                    "initialize": 1,
                    "initialize_data": 7,
                    "initialize_function": 4,
                    "initialize_parameters": 1,
                    "set_data_and_call_functions": 1,
                    "update_and_call_functions": 2,
                    "update_data": 3,
                    "update_data_and_call_functions": 3,
                    "update_register_values": 1,
                    "update_settings": 2
                },
                "_DAT_4003d008": {
                    "adjusted_value": 1,
                    "decremented_input": 1,
                    "modified_input": 2,
                    "previous_value": 1,
                    "updated_value": 4,
                    "updated_value_1": 1
                },
                "_DAT_4003d01c": {
                    "config_bits": 1,
                    "config_register": 2,
                    "flag": 2,
                    "flags": 3,
                    "updated_data": 1,
                    "updated_value_2": 1
                },
                "param_1": {
                    "byte_value": 3,
                    "event_type": 1,
                    "initial_value": 1,
                    "input": 1,
                    "input_byte": 1,
                    "input_data": 1,
                    "input_param": 1,
                    "input_value": 12,
                    "message_code": 1,
                    "new_value": 3,
                    "operation_type": 1,
                    "parameter1": 1,
                    "value": 3,
                    "value_to_update": 1
                },
                "param_2": {
                    "config_param1": 1,
                    "config_value1": 1,
                    "config_value_1": 1,
                    "data1": 3,
                    "data_1": 4,
                    "data_a": 1,
                    "data_length": 1,
                    "data_value1": 2,
                    "input_number": 1,
                    "int_value": 1,
                    "new_value_1": 1,
                    "param1": 1,
                    "param2": 1,
                    "param_value": 1,
                    "param_value1": 1,
                    "parameter2": 1,
                    "parameter_2": 1,
                    "setting_1": 1,
                    "uint_value": 1,
                    "value": 2,
                    "value1": 3,
                    "value_a": 1
                },
                "param_3": {
                    "argument_2": 1,
                    "config_param2": 1,
                    "config_value2": 1,
                    "config_value_2": 1,
                    "data2": 5,
                    "data_2": 5,
                    "data_b": 1,
                    "data_value2": 3,
                    "new_value_2": 1,
                    "param2": 1,
                    "param3": 1,
                    "param_value2": 1,
                    "parameter_3": 1,
                    "setting_2": 1,
                    "value2": 4,
                    "value_2": 2,
                    "value_b": 1
                }
            },
            "called": [
                "FUN_00002714",
                "FUN_00002744"
            ],
            "calling": [
                "FUN_00002654"
            ],
            "code": "\n\n\nvoid set_data_and_call_functions_00002894(int input_value,undefined4 data_1,undefined4 data2)\n\n{\n  _DAT_4003d008 = input_value + -1;\n  _DAT_4003d01c = _DAT_4003d01c & 0xfffffffb | 4;\n  DAT_1fff0da0 = data_1;\n  DAT_1fff0da4 = data2;\n  FUN_00002744(0x2e,10);\n  FUN_00002714(0x2e);\n  return;\n}\n\n",
            "current_name": "set_data_and_call_functions_00002894",
            "entrypoint": "0x00002894",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002894": "set_data_and_call_functions_00002894",
                "param_1": "input_value",
                "param_2": "data_1",
                "param_3": "data2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000028f0": {
            "additional_data": {
                "FUN_000028f0": {
                    "get_incremented_value": 5,
                    "get_next_value": 1,
                    "increment": 1,
                    "increment_and_get": 1,
                    "increment_and_get_pointer_value": 1,
                    "increment_and_return": 3,
                    "increment_and_return_value": 1,
                    "increment_data_pointer": 1,
                    "increment_value": 15,
                    "increment_variable": 1
                },
                "_DAT_4003d008": {
                    "count": 1,
                    "counter": 2,
                    "current_value": 7,
                    "data_address": 1,
                    "data_pointer": 1,
                    "input_value": 1,
                    "original_value": 14,
                    "pointer_value": 1,
                    "value": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_00002690"
            ],
            "code": "\n\n\nint increment_and_get_pointer_value_000028f0(void)\n\n{\n  return _DAT_4003d008 + 1;\n}\n\n",
            "current_name": "increment_and_get_pointer_value_000028f0",
            "entrypoint": "0x000028f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000028f0": "increment_and_get_pointer_value_000028f0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002910": {
            "additional_data": {
                "DAT_1fff0da0": {
                    "data0": 1,
                    "data1": 18,
                    "data_value1": 1,
                    "data_var1": 2,
                    "flag1": 1,
                    "value1": 1,
                    "variable1": 2
                },
                "DAT_1fff0da4": {
                    "data1": 1,
                    "data2": 18,
                    "data_value2": 1,
                    "data_var2": 2,
                    "flag2": 1,
                    "value2": 1,
                    "variable2": 2
                },
                "FUN_00002910": {
                    "clear_configuration": 1,
                    "clear_data": 3,
                    "clear_flags": 22,
                    "clear_flags_and_reset": 1,
                    "initialize_data": 2,
                    "reset_settings": 1,
                    "reset_variables": 1
                },
                "_DAT_4003d008": {
                    "count": 1,
                    "counter": 27,
                    "data_register2": 1,
                    "data_value": 1,
                    "device_status": 1
                },
                "_DAT_4003d01c": {
                    "config_flags": 1,
                    "configuration_flag": 1,
                    "data_flag": 5,
                    "data_register1": 1,
                    "flag_register": 2,
                    "flags": 19,
                    "status_register": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_000026c0"
            ],
            "code": "\n\n\nvoid clear_flags_and_reset_00002910(void)\n\n{\n  _DAT_4003d01c = _DAT_4003d01c & 0xfffffffb;\n  _DAT_4003d008 = 0;\n  DAT_1fff0da0 = 0;\n  DAT_1fff0da4 = 0;\n  return;\n}\n\n",
            "current_name": "clear_flags_and_reset_00002910",
            "entrypoint": "0x00002910",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002910": "clear_flags_and_reset_00002910"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0000294c": {
            "additional_data": {
                "": {
                    "_dat_4003d014": 1
                },
                "0x10": {
                    "flag_enable": 1
                },
                "FUN_0000294c": {
                    "set_flag": 23,
                    "set_flag_bit": 2,
                    "set_flag_enabled": 1,
                    "set_flag_in_memory": 2,
                    "set_flag_in_register": 1,
                    "set_flags": 1,
                    "update_flag_register": 1
                },
                "_DAT_4003d014": {
                    "data_register": 1,
                    "flag": 21,
                    "flag_memory_address": 1,
                    "flag_register": 4,
                    "flags": 1,
                    "memory_flag": 1,
                    "register_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_000027b0",
                "FUN_000026d8"
            ],
            "code": "\n\n\nvoid set_flag_in_memory_0000294c(void)\n\n{\n  _DAT_4003d014 = _DAT_4003d014 | 0x10;\n  return;\n}\n\n",
            "current_name": "set_flag_in_memory_0000294c",
            "entrypoint": "0x0000294c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0000294c": "set_flag_in_memory_0000294c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002970": {
            "additional_data": {
                "DAT_4003d014": {
                    "register_value": 1
                },
                "FUN_00002970": {
                    "clear_bit_from_register": 1,
                    "clear_bit_in_data": 1,
                    "clear_bit_in_reg": 1,
                    "clear_bit_in_register": 5,
                    "clear_enable_flag": 1,
                    "clear_flag": 3,
                    "clear_flag_bit": 1,
                    "clear_flags": 1,
                    "clear_hardware_interrupt_flag": 1,
                    "clear_interrupt_flag": 15,
                    "disable_interrupt": 1
                },
                "_DAT_4003d014": {
                    "_interrupt_flag": 1,
                    "enable_flag": 1,
                    "flag": 3,
                    "flag_register": 1,
                    "flags": 1,
                    "hardware_interrupt_flag": 1,
                    "interrupt_flag": 14,
                    "reg_value": 1,
                    "register_value": 6
                },
                "original_variable_name_1": {
                    "data": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_000026e4"
            ],
            "code": "\n\n\nvoid clear_hardware_interrupt_flag_00002970(void)\n\n{\n  _DAT_4003d014 = _DAT_4003d014 & 0xffffffef;\n  return;\n}\n\n",
            "current_name": "clear_hardware_interrupt_flag_00002970",
            "entrypoint": "0x00002970",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002970": "clear_hardware_interrupt_flag_00002970"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002994": {
            "additional_data": {
                "DAT_1fff0da0": {
                    "callback1": 2,
                    "callback_function1": 3,
                    "callback_function_1": 2,
                    "callback_function_a": 1,
                    "function_pointer1": 2,
                    "function_pointer_1": 1,
                    "function_ptr1": 2,
                    "interrupt_callback1": 1
                },
                "DAT_1fff0da4": {
                    "argument1": 2,
                    "callback1_argument": 1,
                    "callback_data1": 1,
                    "callback_param_1": 1,
                    "data1": 2,
                    "data_1": 2,
                    "data_a": 1,
                    "interrupt_data1": 1,
                    "parameter1": 3
                },
                "DAT_1fff0da8": {
                    "callback2": 2,
                    "callback_function2": 3,
                    "callback_function_2": 2,
                    "callback_function_b": 1,
                    "function_pointer2": 2,
                    "function_pointer_2": 1,
                    "function_ptr2": 2,
                    "interrupt_callback2": 1
                },
                "DAT_1fff0dac": {
                    "argument2": 2,
                    "callback2_argument": 1,
                    "callback_data2": 1,
                    "callback_param_2": 1,
                    "data2": 2,
                    "data_2": 2,
                    "data_b": 1,
                    "interrupt_data2": 1,
                    "parameter2": 3
                },
                "FUN_00002798": {
                    "call_sub_function": 1,
                    "execute_helper_function": 1,
                    "perform_additional_operations": 2,
                    "perform_additional_task": 1,
                    "perform_additional_tasks": 6,
                    "perform_cleanup": 7,
                    "perform_task": 1,
                    "process_callbacks": 1
                },
                "FUN_00002994": {
                    "execute": 1,
                    "execute_binary_function": 1,
                    "execute_callback_functions": 1,
                    "execute_callbacks": 7,
                    "execute_code": 2,
                    "execute_function": 3,
                    "execute_functions": 2,
                    "execute_main_function": 2,
                    "execute_relevant_callbacks": 1,
                    "execute_sub_functions": 2
                },
                "PTR_1fff0da0": {
                    "callback_ptr1": 1,
                    "function_pointer1": 1
                },
                "PTR_1fff0da4": {
                    "callback_param1": 1,
                    "function_arg1": 1
                },
                "PTR_1fff0da8": {
                    "callback_ptr2": 1,
                    "function_pointer2": 1
                },
                "PTR_1fff0dac": {
                    "callback_param2": 1,
                    "function_arg2": 1
                },
                "PTR_4003d014": {
                    "reg_flags": 1,
                    "register_flags": 1
                },
                "PTR_4003d01c": {
                    "reg_flags_modified": 1,
                    "register_mask": 1
                },
                "_DAT_4003d014": {
                    "condition_flag": 1,
                    "control_register": 2,
                    "device_status": 1,
                    "flag_register": 2,
                    "flags": 2,
                    "gpio_status": 1,
                    "register": 1,
                    "status_flags": 1,
                    "status_register": 2
                },
                "_DAT_4003d01c": {
                    "control_register": 3,
                    "control_register2": 1,
                    "device_control": 1,
                    "flag1": 1,
                    "flag_control": 1,
                    "flag_register_2": 1,
                    "flags_updated": 1,
                    "gpio_control": 1,
                    "register1": 1,
                    "register2": 1,
                    "temp_register": 1
                },
                "code": {
                    "callback_function": 1,
                    "function_pointer": 3
                }
            },
            "called": [
                "FUN_00002798"
            ],
            "calling": [],
            "code": "\n\n\nvoid execute_relevant_callbacks_00002994(void)\n\n{\n  if (((_DAT_4003d014 & 4) != 0) && (DAT_1fff0da0 != (function_pointer *)0x0)) {\n    _DAT_4003d01c = _DAT_4003d01c & 0xfffffffb;\n    (*DAT_1fff0da0)(DAT_1fff0da4);\n  }\n  if (((_DAT_4003d014 & 2) != 0) && (DAT_1fff0da8 != (function_pointer *)0x0)) {\n    (*DAT_1fff0da8)(DAT_1fff0dac);\n  }\n  FUN_00002798();\n  return;\n}\n\n",
            "current_name": "execute_relevant_callbacks_00002994",
            "entrypoint": "0x00002994",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002994": "execute_relevant_callbacks_00002994",
                "code": "function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002a00": {
            "additional_data": {
                "FUN_00002a00": {
                    "execute_func": 1,
                    "execute_function": 2,
                    "execute_initial_process": 1,
                    "execute_initial_task": 1,
                    "execute_initialization": 2,
                    "initialize": 8,
                    "initialize_application": 2,
                    "initialize_device": 3,
                    "initialize_function": 3,
                    "initialize_subsystem": 1,
                    "initialize_system": 3,
                    "process_data": 1,
                    "run_initial_setup": 1,
                    "run_initialization": 1
                },
                "FUN_00004cb4": {
                    "configure_device": 2,
                    "configure_system": 1,
                    "execute_application": 1,
                    "execute_operation": 1,
                    "execute_sub_func": 1,
                    "execute_sub_function": 1,
                    "execute_task": 2,
                    "initialize_module": 1,
                    "perform_initialization": 1,
                    "perform_sub_process": 1,
                    "perform_sub_task": 1,
                    "perform_task": 2,
                    "process": 1,
                    "process_data": 7,
                    "process_input": 1,
                    "process_parameter": 1,
                    "reverse_data": 2,
                    "set_device_state": 1
                },
                "param_1": {
                    "application_data": 2,
                    "arg": 1,
                    "config": 1,
                    "config_data": 1,
                    "data": 2,
                    "device_address": 1,
                    "device_id": 2,
                    "initial_input": 1,
                    "input": 7,
                    "input_data": 2,
                    "input_parameter": 1,
                    "input_value": 3,
                    "param": 3,
                    "subsystem_config": 1,
                    "system_config": 1,
                    "system_data": 2
                },
                "param_1_1": {
                    "sub_task_value": 1
                }
            },
            "called": [
                "FUN_00004cb4"
            ],
            "calling": [
                "FUN_00002e48",
                "FUN_00002d94"
            ],
            "code": "\nvoid initialize_system_00002a00(undefined4 input)\n\n{\n  FUN_00004cb4(input);\n  return;\n}\n\n",
            "current_name": "initialize_system_00002a00",
            "entrypoint": "0x00002a00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002a00": "initialize_system_00002a00",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002a18": {
            "additional_data": {
                "FUN_00002a18": {
                    "find_match": 1,
                    "find_matched_value_in_arrays": 1,
                    "find_matching_reboot": 1,
                    "find_matching_value": 3,
                    "find_reboot_code": 4,
                    "find_reboot_condition": 1,
                    "find_reboot_data": 1,
                    "find_reboot_function": 1,
                    "find_reboot_index": 2,
                    "find_reboot_location": 1,
                    "find_reboot_option": 2,
                    "find_reboot_param": 1,
                    "find_reboot_param_value": 1,
                    "find_reboot_parameter": 2,
                    "find_reboot_reason": 2,
                    "find_reboot_value": 6,
                    "reboot_sequence": 1
                },
                "FUN_00004e52": {
                    "check_data": 1,
                    "check_value": 3,
                    "compare_values": 1
                },
                "iVar1": {
                    "function_result": 1,
                    "result": 4
                },
                "local_10": {
                    "array_index": 1,
                    "code_index": 1,
                    "counter": 2,
                    "index": 20,
                    "iteration_count": 2,
                    "loop_counter": 2,
                    "param_index": 1,
                    "reboot_string_index": 1,
                    "string_index": 1
                },
                "local_14": {
                    "message_strings": 1,
                    "reason_strings": 1,
                    "reboot_code_ptr": 1,
                    "reboot_message": 3,
                    "reboot_msg_ptr": 1,
                    "reboot_pointer": 1,
                    "reboot_ptr": 3,
                    "reboot_string": 11,
                    "reboot_string_pointer": 2,
                    "reboot_string_ptr": 3,
                    "reboot_strings": 4
                },
                "local_18": {
                    "array_pointer": 1,
                    "array_ptr": 3,
                    "current_array": 4,
                    "current_array_element": 1,
                    "current_code": 3,
                    "current_data": 2,
                    "current_element": 4,
                    "current_function": 1,
                    "current_option": 2,
                    "current_param": 2,
                    "current_parameter": 1,
                    "current_ptr": 1,
                    "current_reason": 1,
                    "input_array": 2,
                    "param_list": 1,
                    "param_pointer": 1,
                    "target_array": 1
                },
                "local_c": {
                    "current_array": 1,
                    "current_array_element": 1,
                    "current_array_ptr": 1,
                    "current_byte": 2,
                    "current_code_ptr": 1,
                    "current_data_ptr": 1,
                    "current_element": 4,
                    "current_element_ptr": 1,
                    "current_entry": 1,
                    "current_param": 1,
                    "current_ptr": 4,
                    "current_ptr_entry": 1,
                    "current_string": 4,
                    "current_subarray": 1,
                    "current_value": 4,
                    "element_ptr": 1,
                    "inner_array_pointer": 1,
                    "subarray_ptr": 1
                },
                "param_1": {
                    "array": 10,
                    "array_ptr": 1,
                    "code_array": 1,
                    "code_list": 2,
                    "data_array": 2,
                    "functions_array": 1,
                    "input_array": 4,
                    "list": 1,
                    "options": 2,
                    "param_array": 1,
                    "parameter_array": 1,
                    "pointers_array": 1,
                    "reboot_param_array": 1,
                    "reboot_reasons": 1,
                    "values": 1
                },
                "param_2": {
                    "additional_param": 1,
                    "comparison_array": 1,
                    "comparison_parameter": 1,
                    "comparison_value": 1,
                    "input_param": 1,
                    "input_value": 2,
                    "other_param": 1,
                    "param": 2,
                    "param_value": 2,
                    "search_value": 1,
                    "target": 2,
                    "target_byte_array": 1,
                    "target_code": 2,
                    "target_value": 3,
                    "value": 9,
                    "value_to_match": 1
                }
            },
            "called": [
                "FUN_00004e52"
            ],
            "calling": [
                "FUN_00002b10"
            ],
            "code": "\nint find_reboot_param_value_00002a18(int *array,undefined4 value)\n\n{\n  int result;\n  int *current_element;\n  undefined **reboot_string;\n  uint index;\n  int *current_string;\n  \n  current_element = array;\n  reboot_string = &PTR_s_reboot_00007300;\n  index = 0;\n  do {\n    if (1 < index) {\n      return 0;\n    }\n    current_string = (&current_element)[index];\n    if (current_string != (int *)0x0) {\n      for (; *current_string != 0; current_string = current_string + 3) {\n        result = FUN_00004e52(*current_string,value);\n        if (result == 0) {\n          return current_string[2];\n        }\n      }\n    }\n    index = index + 1;\n  } while( true );\n}\n\n",
            "current_name": "find_reboot_param_value_00002a18",
            "entrypoint": "0x00002a18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002a18": "find_reboot_param_value_00002a18",
                "iVar1": "result",
                "local_10": "index",
                "local_14": "reboot_string",
                "local_18": "current_element",
                "local_c": "current_string",
                "param_1": "array",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002a88": {
            "additional_data": {
                "FUN_00002a88": {
                    "display_command_description": 1,
                    "display_command_descriptions": 3,
                    "print_command_description": 2,
                    "print_command_descriptions": 25
                },
                "FUN_00004c84": {
                    "print_formatted_string": 1
                },
                "FUN_00004db8": {
                    "print_separator": 1
                },
                "local_10": {
                    "command_index": 10,
                    "i": 1,
                    "index": 20
                },
                "local_14": {
                    "command_description": 14,
                    "command_descriptions": 2,
                    "command_list": 2,
                    "command_name": 1,
                    "command_names": 9,
                    "command_strings": 1,
                    "description": 1,
                    "description_list": 1
                },
                "local_18": {
                    "current_command": 31
                },
                "local_c": {
                    "command": 1,
                    "current_args": 1,
                    "current_argument": 1,
                    "current_command_details": 1,
                    "current_command_entry": 1,
                    "current_description": 3,
                    "current_entry": 1,
                    "current_item": 1,
                    "current_line": 2,
                    "current_param": 4,
                    "current_parameter": 14,
                    "current_subcommand": 1
                },
                "param_1": {
                    "command_array": 4,
                    "command_list": 10,
                    "commands": 16,
                    "commands_array": 1
                }
            },
            "called": [
                "FUN_00004db8",
                "FUN_00004c84"
            ],
            "calling": [
                "FUN_00002b10"
            ],
            "code": "\nvoid print_command_descriptions_00002a88(int *commands)\n\n{\n  int *current_command;\n  undefined **command_description;\n  uint index;\n  int *current_parameter;\n  \n  FUN_00004c84(\"%-20s %s\\n\",\"Command\",\"Description\");\n  FUN_00004db8(\"---------------------------------------\");\n  current_command = commands;\n  command_description = &PTR_s_reboot_00007300;\n  for (index = 0; index < 2; index = index + 1) {\n    current_parameter = (&current_command)[index];\n    if (current_parameter != (int *)0x0) {\n      for (; *current_parameter != 0; current_parameter = current_parameter + 3) {\n        FUN_00004c84(\"%-20s %s\\n\",*current_parameter,current_parameter[1]);\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "print_command_descriptions_00002a88",
            "entrypoint": "0x00002a88",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002a88": "print_command_descriptions_00002a88",
                "local_10": "index",
                "local_14": "command_description",
                "local_18": "current_command",
                "local_c": "current_parameter",
                "param_1": "commands"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002b10": {
            "additional_data": {
                "DAT_00007214": {
                    "data_7214": 1
                },
                "FUN_00002a18": {
                    "find_function": 2,
                    "get_command_function": 1,
                    "get_command_index": 1
                },
                "FUN_00002a88": {
                    "execute_shell_cmd": 1,
                    "free_memory": 1,
                    "release_memory": 1
                },
                "FUN_00002b10": {
                    "parse_and_execute_shell_command": 1,
                    "parse_command": 1,
                    "parse_command_line": 1,
                    "parse_input": 3,
                    "parse_input_string": 2,
                    "parse_string": 3,
                    "process_command": 1,
                    "process_command_line": 1,
                    "process_function": 1,
                    "process_input": 6,
                    "process_input_string": 5,
                    "process_string": 3,
                    "process_user_input": 1
                },
                "FUN_00004c84": {
                    "print_error": 1,
                    "print_error_message": 2,
                    "print_error_msg": 1
                },
                "FUN_00004db8": {
                    "do_something": 2,
                    "execute_relocation": 1,
                    "handle_error": 1
                },
                "FUN_00004e52": {
                    "check_command": 3,
                    "compare_strings": 1
                },
                "iVar1": {
                    "function_result": 1,
                    "result": 5,
                    "return_value": 2,
                    "temp_var1": 1
                },
                "local_14": {
                    "curr_char": 1,
                    "curr_char_ptr": 1,
                    "current_byte": 1,
                    "current_char": 9,
                    "current_char_pointer": 2,
                    "current_char_ptr": 7,
                    "current_character": 2,
                    "current_pos": 1,
                    "input_pointer": 1,
                    "p": 1,
                    "ptr_string": 1,
                    "str_ptr": 1
                },
                "local_18": {
                    "num_quotes": 5,
                    "num_strings": 3,
                    "quote_count": 15,
                    "quotes_count": 1,
                    "string_count": 1,
                    "valid_command_count": 1,
                    "valid_string_count": 2,
                    "valid_token_count": 1
                },
                "local_1c": {
                    "backslash_count": 6,
                    "escape_char_count": 1,
                    "escape_count": 15,
                    "escaped_count": 1,
                    "num_backslashes": 2,
                    "num_escapes": 4
                },
                "local_20": {
                    "command_index": 2,
                    "counter": 1,
                    "current_arg_index": 1,
                    "current_index": 3,
                    "i": 10,
                    "index": 10,
                    "loop_index": 1,
                    "string_index": 1
                },
                "local_24": {
                    "arg_list": 3,
                    "arg_pointer": 1,
                    "arg_strings": 1,
                    "argument_list": 2,
                    "command_args_ptr": 1,
                    "command_pointer": 1,
                    "command_ptr": 1,
                    "current_argument": 1,
                    "current_command": 4,
                    "current_function_string": 1,
                    "current_parsed_string": 1,
                    "current_string_ptr": 1,
                    "current_token_ptr": 1,
                    "parsed_string_array": 1,
                    "str_arr_ptr2": 1,
                    "string_array": 2,
                    "string_list": 1,
                    "string_pointers": 1,
                    "temp_ptr_array": 1,
                    "valid_tokens": 1,
                    "word_ptrs_copy": 1
                },
                "local_28": {
                    "arg": 1,
                    "arg_ptr": 1,
                    "char_ptr2": 1,
                    "command": 2,
                    "curr_string": 1,
                    "current_arg": 4,
                    "current_argument": 2,
                    "current_char": 1,
                    "current_str": 1,
                    "current_string": 8,
                    "current_token": 2,
                    "current_word": 1,
                    "parsed_string": 1,
                    "str_ptr": 2
                },
                "local_2c": {
                    "backslash_ptr": 1,
                    "char_ptr": 2,
                    "curr_char": 1,
                    "current_char": 13,
                    "escape_char": 5,
                    "escape_character": 4,
                    "escaped_char": 1,
                    "temp_str": 1
                },
                "local_2d": {
                    "delimiter": 1,
                    "quote": 5,
                    "quote_char": 15,
                    "quote_character": 6,
                    "quote_type": 2
                },
                "local_34": {
                    "arg_count": 3,
                    "arguments_count": 1,
                    "array_size": 1,
                    "command_count": 3,
                    "count": 2,
                    "num_args": 2,
                    "num_arguments": 4,
                    "num_commands": 4,
                    "num_functions": 1,
                    "num_strings": 2,
                    "parsed_string_count": 1,
                    "parsed_strings_count": 1,
                    "string_array_size": 1,
                    "token_count": 2,
                    "word_count": 1
                },
                "local_38": {
                    "arg_pointers": 1,
                    "arguments": 6,
                    "arguments_array": 1,
                    "command": 1,
                    "command_args": 2,
                    "command_arguments": 1,
                    "command_array": 2,
                    "command_list": 2,
                    "command_strings": 1,
                    "commands": 1,
                    "function_string_array": 1,
                    "parsed_string_array": 1,
                    "parsed_strings": 1,
                    "str_arr_ptr": 1,
                    "str_array": 2,
                    "string_array": 1,
                    "token_array": 2,
                    "word_array": 1
                },
                "local_3c": {
                    "command": 1,
                    "command_func": 2,
                    "command_function": 5,
                    "execute_command": 6,
                    "execute_function": 2,
                    "found_function": 1,
                    "func_ptr": 1,
                    "function_pointer": 8,
                    "function_ptr": 3
                },
                "local_44": {
                    "function_array": 1
                },
                "local_48": {
                    "arg_array": 1,
                    "args": 1,
                    "byte_buffers": 1,
                    "command_args": 1,
                    "command_starts": 1,
                    "input_array": 1,
                    "input_array_copy": 1,
                    "input_buffer": 2,
                    "input_params": 1,
                    "input_pointers": 2,
                    "input_ptr_array": 1,
                    "input_string_ptr_array": 1,
                    "input_strings_with_whitespace": 1,
                    "local_params": 1,
                    "param_addresses": 1,
                    "param_pointers": 1,
                    "parameters": 1,
                    "parsed_strings": 2,
                    "ptr_array": 1,
                    "str_arr": 1,
                    "string_array": 1,
                    "strings": 1,
                    "strings_array": 1,
                    "tokens": 1,
                    "word_ptrs": 1
                },
                "param_1": {
                    "arg1": 1,
                    "argc": 1,
                    "input_length": 2,
                    "param": 5,
                    "param1": 9,
                    "param_1": 7,
                    "param_code": 1,
                    "param_one": 1,
                    "placeholder": 1
                },
                "param_2": {
                    "arg2": 1,
                    "argv": 1,
                    "cmd_line": 1,
                    "input": 1,
                    "input_array": 1,
                    "input_data": 2,
                    "input_string": 12,
                    "param2": 6,
                    "param_two": 1,
                    "str": 1,
                    "string": 1
                },
                "pbVar2": {
                    "next_char": 3,
                    "next_char_ptr": 1,
                    "next_character": 1,
                    "pb_var": 1,
                    "temp_var2": 1
                }
            },
            "called": [
                "FUN_00002a18",
                "FUN_00004db8",
                "FUN_00002a88",
                "FUN_00004e52",
                "FUN_00004c84"
            ],
            "calling": [
                "FUN_00002e6c"
            ],
            "code": "\nvoid process_input_string_00002b10(undefined4 param1,byte *input_string)\n\n{\n  int result;\n  byte *next_char;\n  byte *input_pointers [3];\n  code *function_pointer;\n  char **arguments;\n  uint num_arguments;\n  byte quote_char;\n  char *current_char;\n  char *current_string;\n  char **current_command;\n  uint i;\n  int escape_count;\n  uint quote_count;\n  byte *current_char;\n  \n  quote_count = 0;\n  escape_count = 0;\n  current_char = input_string;\n  while( true ) {\n    input_pointers[0] = input_string;\n    input_pointers[1] = (byte *)param1;\n    if (0x20 < *current_char) {\n      if ((*current_char == 0x22) || (*current_char == 0x27)) {\n        quote_char = *current_char;\n        do {\n          next_char = current_char + 1;\n          if (*next_char == 0) {\n            current_char = next_char;\n            FUN_00004db8(Elf32_Rel_ARRAY_1fff0200[9].r_info);\n            return;\n          }\n          if (*next_char == 0x5c) {\n            escape_count = escape_count + 1;\n            current_char = current_char + 2;\n            next_char = current_char;\n            if (*current_char == 0) {\n              FUN_00004db8(Elf32_Rel_ARRAY_1fff0200[9].r_info);\n              return;\n            }\n          }\n          current_char = next_char;\n        } while (quote_char != *current_char);\n        if (0x20 < current_char[1]) {\n          FUN_00004db8(Elf32_Rel_ARRAY_1fff0200[9].r_info);\n          return;\n        }\n      }\n      else {\n        do {\n          if (*current_char == 0x5c) {\n            escape_count = escape_count + 1;\n            current_char = current_char + 1;\n            if (*current_char == 0) {\n              FUN_00004db8(Elf32_Rel_ARRAY_1fff0200[9].r_info);\n              return;\n            }\n          }\n          current_char = current_char + 1;\n          if (*current_char == 0x22) {\n            FUN_00004db8(Elf32_Rel_ARRAY_1fff0200[9].r_info);\n            return;\n          }\n        } while (0x20 < *current_char);\n      }\n      quote_count = quote_count + 1;\n    }\n    if (*current_char == 0) break;\n    *current_char = 0;\n    current_char = current_char + 1;\n  }\n  if (quote_count != 0) {\n    num_arguments = quote_count;\n    arguments = (char **)((int)input_pointers - ((quote_count + 1) * 4 + 7 & 0xfffffff8));\n    arguments[quote_count] = (char *)0x0;\n    current_char = input_string;\n    for (i = 0; current_command = arguments, i < quote_count; i = i + 1) {\n      for (; *current_char == 0; current_char = current_char + 1) {\n      }\n      if ((*current_char == 0x22) || (*current_char == 0x27)) {\n        current_char = current_char + 1;\n      }\n      arguments[i] = (char *)current_char;\n      for (; *current_char != 0; current_char = current_char + 1) {\n      }\n    }\n    for (; (escape_count != 0 && (*current_command != (char *)0x0)); current_command = current_command + 1) {\n      for (current_string = *current_command; *current_string != '\\0'; current_string = current_string + 1) {\n        if (*current_string == '\\') {\n          for (current_char = current_string; *current_char != '\\0'; current_char = current_char + 1) {\n            *current_char = current_char[1];\n          }\n          escape_count = escape_count + -1;\n          if (escape_count == 0) break;\n        }\n      }\n    }\n    function_pointer = (code *)FUN_00002a18(param1,*arguments);\n    if (function_pointer == (code *)0x0) {\n      result = FUN_00004e52(&DAT_00007214,*arguments);\n      if (result == 0) {\n        FUN_00002a88(input_pointers[1]);\n      }\n      else {\n        FUN_00004c84(\"shell: command not found: %s\\n\",*arguments);\n      }\n    }\n    else {\n      (*function_pointer)(quote_count,arguments);\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_input_string_00002b10",
            "entrypoint": "0x00002b10",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002b10": "process_input_string_00002b10",
                "iVar1": "result",
                "local_14": "current_char",
                "local_18": "quote_count",
                "local_1c": "escape_count",
                "local_20": "i",
                "local_24": "current_command",
                "local_28": "current_string",
                "local_2c": "current_char",
                "local_2d": "quote_char",
                "local_34": "num_arguments",
                "local_38": "arguments",
                "local_3c": "function_pointer",
                "local_48": "input_pointers",
                "param_1": "param1",
                "param_2": "input_string",
                "pbVar2": "next_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002d94": {
            "additional_data": {
                "FUN_00002a00": {
                    "print_char": 3,
                    "print_character": 3,
                    "send_funct": 1,
                    "write_to_output": 1
                },
                "FUN_00002d94": {
                    "convert_string_to_unsigned_int": 1,
                    "convert_to_null_terminated_string": 1,
                    "decode_string": 1,
                    "decompile_and_improve": 1,
                    "extract_characters": 1,
                    "extract_string": 1,
                    "parse_input": 2,
                    "parse_input_string": 1,
                    "process_input": 4,
                    "reverse_and_normalize_data": 1,
                    "reverse_input_string": 1,
                    "reverse_string": 3
                },
                "FUN_00004418": {
                    "get_char": 1,
                    "get_next_char": 1,
                    "get_next_input": 1,
                    "read_char": 1,
                    "read_character": 2,
                    "read_input_byte": 1,
                    "receive_input": 1
                },
                "bVar2": {
                    "buffer_byte": 1,
                    "buffer_value": 1,
                    "byte_value": 7,
                    "converted_byte": 2,
                    "converted_character": 1,
                    "converted_input": 1,
                    "last_byte": 2,
                    "mask": 1,
                    "output_byte": 3,
                    "output_value": 1,
                    "result": 2,
                    "result_byte": 2,
                    "return_byte": 1,
                    "return_char": 1,
                    "return_value": 2,
                    "string_end": 1
                },
                "bVar3": {
                    "is_buffer_empty": 6,
                    "is_data_pointer_equals_param1": 1,
                    "is_empty": 3,
                    "is_empty_string": 1,
                    "is_first_byte": 1,
                    "is_first_char": 9,
                    "is_first_character": 1,
                    "is_initial_position": 1,
                    "is_input_buffer_empty": 1,
                    "is_input_buffer_start": 1,
                    "is_param1_equal": 1,
                    "is_param_1_equal_to_local_c": 1,
                    "is_param_equal_to_pointer": 1,
                    "is_start_of_input": 1
                },
                "iVar1": {
                    "char_code": 4,
                    "char_value": 1,
                    "character": 1,
                    "character_code": 1,
                    "current_byte": 1,
                    "current_input": 2,
                    "input_byte": 3,
                    "input_char": 7,
                    "input_character": 2,
                    "input_status": 1,
                    "input_value": 3,
                    "read_value": 2,
                    "return_value": 1
                },
                "local_c": {
                    "current_byte": 1,
                    "current_char": 14,
                    "current_pointer": 1,
                    "current_position": 9,
                    "current_ptr": 2,
                    "output_buffer": 1,
                    "output_string": 2,
                    "pointer": 1
                },
                "param_1": {
                    "buffer": 9,
                    "data": 1,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "input": 1,
                    "input_array": 1,
                    "input_buffer": 4,
                    "input_string": 8,
                    "string": 2,
                    "string_buffer": 2,
                    "string_pointer": 1
                },
                "param_2": {
                    "buffer_length": 3,
                    "buffer_size": 12,
                    "input_length": 3,
                    "length": 4,
                    "max_length": 3,
                    "max_size": 1,
                    "max_string_length": 1,
                    "size": 1,
                    "string_length": 3
                }
            },
            "called": [
                "FUN_00002a00",
                "FUN_00004418"
            ],
            "calling": [
                "FUN_00002e6c"
            ],
            "code": "\nuint parse_input_string_00002d94(undefined *buffer,int buffer_size)\n\n{\n  int input_char;\n  byte byte_value;\n  bool is_first_char;\n  undefined *current_char;\n  \n  current_char = buffer;\n  while( true ) {\n    if (buffer_size + -1 <= (int)current_char - (int)buffer) {\n      return 0xffffffff;\n    }\n    input_char = FUN_00004418();\n    if (input_char < 0) break;\n    if ((input_char == 0xd) || (input_char == 10)) {\n      *current_char = 0;\n      FUN_00002a00(0xd);\n      FUN_00002a00(10);\n      is_first_char = current_char == buffer;\n      if (is_first_char) {\n        buffer = (undefined *)0x1;\n      }\n      byte_value = (byte)buffer;\n      if (!is_first_char) {\n        byte_value = 0;\n      }\n      return (uint)byte_value;\n    }\n    if ((input_char == 8) || (input_char == 0x7f)) {\n      if (current_char != buffer) {\n        current_char = current_char + -1;\n        *current_char = 0;\n        FUN_00002a00(8);\n        FUN_00002a00(0x20);\n        FUN_00002a00(8);\n      }\n    }\n    else {\n      *current_char = (char)input_char;\n      FUN_00002a00(input_char);\n      current_char = current_char + 1;\n    }\n  }\n  return 1;\n}\n\n",
            "current_name": "parse_input_string_00002d94",
            "entrypoint": "0x00002d94",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002d94": "parse_input_string_00002d94",
                "bVar2": "byte_value",
                "bVar3": "is_first_char",
                "iVar1": "input_char",
                "local_c": "current_char",
                "param_1": "buffer",
                "param_2": "buffer_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002e48": {
            "additional_data": {
                "0x20": {
                    "another_mode_value": 1
                },
                "0x3e": {
                    "mode_value": 1
                },
                "8": {
                    "constant_offset": 1
                },
                "Elf32_Rel_ARRAY_1fff0200": {
                    "relocation_table": 4
                },
                "FUN_00002a00": {
                    "call_sub_function1": 1,
                    "execute_action": 1,
                    "perform_action": 1,
                    "perform_binary_operation": 1,
                    "print_value": 1,
                    "send_value": 1,
                    "set_bit": 1,
                    "set_configuration": 3,
                    "set_configuration_value": 1,
                    "set_flag": 5,
                    "set_flag_value": 1,
                    "set_initial_values": 1,
                    "set_memory_value": 1,
                    "set_mode": 6,
                    "set_register_value": 4,
                    "set_system_flag": 1,
                    "set_widget_size": 1
                },
                "FUN_00002e48": {
                    "execute_binary_operation": 1,
                    "execute_initialization": 2,
                    "execute_initialization_process": 1,
                    "initialize": 2,
                    "initialize_and_kickstart_process": 1,
                    "initialize_application": 2,
                    "initialize_communication": 1,
                    "initialize_components": 7,
                    "initialize_device": 1,
                    "initialize_function": 2,
                    "initialize_hardware": 1,
                    "initialize_process": 1,
                    "initialize_system": 3,
                    "initialize_widget_display": 1,
                    "initiate_process": 1,
                    "perform_initialization": 1,
                    "perform_some_action": 1
                },
                "FUN_000041d0": {
                    "call_sub_function2": 1,
                    "execute_dynamic_operation": 1,
                    "execute_operation": 1,
                    "handle_result": 1,
                    "perform_action": 1,
                    "perform_operation": 3,
                    "perform_relocation": 2,
                    "process_data": 17,
                    "process_data_entry": 1,
                    "process_relocation": 1,
                    "process_value": 1,
                    "render_widget": 1
                },
                "param_1": {
                    "operation_code": 1,
                    "param": 1,
                    "value": 2,
                    "value1": 1
                },
                "param_2": {
                    "operation_param1": 1,
                    "unused": 1,
                    "unused_param": 1,
                    "value2": 1
                },
                "param_3": {
                    "operation_param2": 1,
                    "unused": 1,
                    "unused_param": 1
                },
                "r_offset": {
                    "offset": 2
                }
            },
            "called": [
                "FUN_00002a00",
                "FUN_000041d0"
            ],
            "calling": [
                "FUN_00002e6c"
            ],
            "code": "\nvoid initialize_components_00002e48(void)\n\n{\n  FUN_00002a00(0x3e);\n  FUN_00002a00(0x20);\n  FUN_000041d0(*(undefined4 *)(relocation_table[16].offset + 8));\n  return;\n}\n\n",
            "current_name": "initialize_components_00002e48",
            "entrypoint": "0x00002e48",
            "imported": false,
            "improved": true,
            "renaming": {
                "Elf32_Rel_ARRAY_1fff0200": "relocation_table",
                "FUN_00002e48": "initialize_components_00002e48",
                "r_offset": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002e6c": {
            "additional_data": {
                "FUN_00002b10": {
                    "execute_action": 1,
                    "execute_operation": 2,
                    "handle_error": 6,
                    "handle_invalid_data": 1,
                    "handle_invalid_input": 1,
                    "handle_success": 2,
                    "handle_zero_status": 1,
                    "perform_action": 1,
                    "perform_second_task": 1,
                    "process_data": 3
                },
                "FUN_00002d94": {
                    "check_condition": 10,
                    "check_data": 2,
                    "check_data_validity": 4,
                    "check_status": 3,
                    "check_validity": 1
                },
                "FUN_00002e48": {
                    "initialize": 15,
                    "initialize_data": 4,
                    "perform_first_task": 1,
                    "perform_preprocessing": 1,
                    "reset_data_processing": 1
                },
                "FUN_00002e6c": {
                    "check_and_execute": 1,
                    "check_and_perform_action": 1,
                    "check_and_process_data": 5,
                    "perform_operation": 1,
                    "process_and_execute": 1,
                    "process_data": 20,
                    "process_function": 1
                },
                "iVar1": {
                    "data_validity": 1,
                    "result": 21,
                    "return_value": 5,
                    "status": 2
                },
                "param_1": {
                    "arg1": 7,
                    "buffer_size": 1,
                    "context": 1,
                    "data1": 2,
                    "execution_param": 1,
                    "input": 1,
                    "input1": 2,
                    "input_1": 1,
                    "input_param1": 6,
                    "output": 1,
                    "param1": 6,
                    "param_1": 1,
                    "status": 1
                },
                "param_2": {
                    "arg2": 7,
                    "buffer": 2,
                    "data": 1,
                    "data1": 1,
                    "data2": 2,
                    "data_ptr": 2,
                    "input1": 1,
                    "input2": 2,
                    "input_2": 1,
                    "input_param": 1,
                    "input_param2": 6,
                    "param2": 5
                },
                "param_3": {
                    "arg3": 7,
                    "data2": 1,
                    "data3": 2,
                    "data_size": 1,
                    "input2": 1,
                    "input3": 2,
                    "input_3": 1,
                    "input_param3": 6,
                    "length": 1,
                    "param3": 5,
                    "param_3": 1,
                    "size": 2,
                    "size_param": 1
                }
            },
            "called": [
                "FUN_00002e48",
                "FUN_00002b10",
                "FUN_00002d94"
            ],
            "calling": [
                "FUN_000023a4"
            ],
            "code": "\nvoid check_and_process_data_00002e6c(undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  int result;\n  \n  FUN_00002e48();\n  do {\n    result = FUN_00002d94(arg2,arg3);\n    if (result == 0) {\n      FUN_00002b10(arg1,arg2);\n    }\n    FUN_00002e48();\n  } while( true );\n}\n\n",
            "current_name": "check_and_process_data_00002e6c",
            "entrypoint": "0x00002e6c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002e6c": "check_and_process_data_00002e6c",
                "iVar1": "result",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002e9c": {
            "additional_data": {
                "FUN_00002e9c": {
                    "execute_initial_function": 1,
                    "execute_initial_setup": 2,
                    "execute_initial_task": 1,
                    "execute_initialization": 4,
                    "execute_startup_process": 1,
                    "initialize": 9,
                    "initialize_and_execute": 2,
                    "initialize_and_run": 1,
                    "initialize_application": 2,
                    "initialize_binary": 1,
                    "initialize_program": 1,
                    "initialize_system": 5,
                    "start_application": 1
                },
                "FUN_00003688": {
                    "call_sub_function": 1,
                    "execute_initialization": 5,
                    "execute_process": 1,
                    "execute_startup_routine": 1,
                    "execute_subfunction": 1,
                    "execute_task": 3,
                    "initialize_system": 2,
                    "perform_action": 3,
                    "perform_initial_setup": 1,
                    "perform_initialization": 7,
                    "perform_operation": 1,
                    "perform_secondary_operation": 1,
                    "perform_secondary_task": 1,
                    "perform_sub_task": 1,
                    "perform_system_reset": 1,
                    "perform_task": 1
                }
            },
            "called": [
                "FUN_00003688"
            ],
            "calling": [],
            "code": "\nundefined4 initialize_system_00002e9c(void)\n\n{\n  FUN_00003688();\n  return 0;\n}\n\n",
            "current_name": "initialize_system_00002e9c",
            "entrypoint": "0x00002e9c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002e9c": "initialize_system_00002e9c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002eb4": {
            "additional_data": {
                "FUN_0000211c": {
                    "call_subfunction": 1,
                    "call_subroutine": 1,
                    "do_initialization": 1,
                    "do_something": 1,
                    "execute_initialization": 6,
                    "execute_sub_function": 1,
                    "execute_task": 2,
                    "initialize": 1,
                    "perform_action": 2,
                    "perform_initial_task": 1,
                    "perform_initialization": 12,
                    "perform_task": 1,
                    "run_initialization": 1
                },
                "FUN_00002eb4": {
                    "execute_initial_setup": 1,
                    "execute_initialization": 5,
                    "execute_initialization_procedure": 1,
                    "execute_main_function": 2,
                    "initialize": 2,
                    "initialize_application": 7,
                    "initialize_program": 2,
                    "initialize_system": 11
                }
            },
            "called": [
                "FUN_0000211c"
            ],
            "calling": [],
            "code": "\nundefined4 initialize_system_00002eb4(void)\n\n{\n  FUN_0000211c();\n  return 0;\n}\n\n",
            "current_name": "initialize_system_00002eb4",
            "entrypoint": "0x00002eb4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002eb4": "initialize_system_00002eb4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002ecc": {
            "additional_data": {
                "FUND_00002ecc": {
                    "read_from_device": 1
                },
                "FUN_00002ecc": {
                    "read_and_print_device_info": 1,
                    "read_and_process_data": 1,
                    "read_data_from_device": 6,
                    "read_device_data": 1,
                    "read_from_device": 21
                },
                "auStack_1c": {
                    "buffer": 20,
                    "data_buffer": 1,
                    "read_buffer": 6,
                    "stack_data": 2,
                    "temp_buffer": 1
                },
                "local_14": {
                    "bytes_read": 6,
                    "data_size": 2,
                    "read_count": 1,
                    "read_length": 2,
                    "read_result": 11,
                    "read_size": 8,
                    "read_status": 1
                },
                "param_1": {
                    "device_index": 1,
                    "device_number": 30
                },
                "param_2": {
                    "data_ptr": 1,
                    "device_address": 2,
                    "device_data": 14,
                    "device_info": 12,
                    "device_info_address": 1,
                    "device_info_ptr": 1
                },
                "uVar1": {
                    "data_type": 1,
                    "device_info": 4,
                    "device_name": 9,
                    "device_type": 13,
                    "info1": 1,
                    "result1": 1,
                    "string1": 1,
                    "unknown_value1": 1
                },
                "uVar2": {
                    "data_type": 1,
                    "device_info": 2,
                    "device_name": 11,
                    "device_type": 12,
                    "device_version": 1,
                    "info2": 1,
                    "result2": 1,
                    "string2": 1,
                    "unknown_value2": 1
                }
            },
            "called": [
                "FUN_00004c84",
                "FUN_000039e8",
                "FUN_00003d64",
                "FUN_00003694"
            ],
            "calling": [
                "FUN_00002f30",
                "FUN_00002fe0"
            ],
            "code": "\nvoid read_data_from_device_00002ecc(undefined4 device_number,int device_data)\n\n{\n  undefined4 device_type;\n  undefined4 device_type;\n  undefined buffer [8];\n  uint read_result;\n  \n  read_result = FUN_00003d64(device_data,buffer);\n  if ((int)read_result < 1) {\n    FUN_00004c84(\"error: failed to read from device #%i\\n\",device_number);\n  }\n  else {\n    device_type = *(undefined4 *)(device_data + 8);\n    device_type = FUN_000039e8(*(undefined *)(*(int *)(device_data + 0xc) + 8));\n    FUN_00004c84(\"Reading from #%i (%s|%s)\\n\",device_number,device_type,device_type);\n    FUN_00003694(buffer,read_result & 0xff);\n  }\n  return;\n}\n\n",
            "current_name": "read_data_from_device_00002ecc",
            "entrypoint": "0x00002ecc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002ecc": "read_data_from_device_00002ecc",
                "auStack_1c": "buffer",
                "local_14": "read_result",
                "param_1": "device_number",
                "param_2": "device_data",
                "uVar1": "device_type",
                "uVar2": "device_type"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002f30": {
            "additional_data": {
                "FUN_00002ecc": {
                    "handle_data": 1,
                    "handle_node": 1,
                    "process_element": 2,
                    "process_item": 6,
                    "process_list_item": 1
                },
                "FUN_00002f30": {
                    "iterate_and_call_functions": 1,
                    "iterate_and_process": 3,
                    "iterate_and_process_items": 1,
                    "iterate_and_process_nodes": 1,
                    "iterate_over_data": 1,
                    "iterate_over_items": 1,
                    "iterate_over_list": 3,
                    "perform_operation_on_linked_list": 1,
                    "process_data": 13,
                    "process_item_list": 1,
                    "process_items": 2,
                    "process_linked_list": 3
                },
                "FUN_00004db8": {
                    "initialize_data": 2,
                    "log_data": 1,
                    "perform_action": 1,
                    "perform_task": 1,
                    "print_data": 2,
                    "print_message": 1,
                    "update_data": 2,
                    "update_log": 1
                },
                "local_10": {
                    "count": 6,
                    "counter": 7,
                    "index": 4,
                    "item_index": 2,
                    "iteration_count": 1,
                    "iteration_index": 1,
                    "node_index": 1,
                    "total_count": 1
                },
                "local_c": {
                    "current_data": 4,
                    "current_element": 1,
                    "current_item": 4,
                    "current_node": 7,
                    "current_pointer": 1,
                    "current_ptr": 3,
                    "data_ptr": 2,
                    "linked_list_node": 1
                },
                "param_1": {
                    "data": 1,
                    "element_index": 1,
                    "index": 11,
                    "value": 1
                },
                "param_2": {
                    "count": 1,
                    "current_item": 1,
                    "data": 3,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "element_data": 1,
                    "item_list": 1,
                    "node": 3,
                    "pointer": 1
                }
            },
            "called": [
                "FUN_00002ecc",
                "FUN_00004db8"
            ],
            "calling": [
                "FUN_00002fe0"
            ],
            "code": "\nvoid process_data_00002f30(void)\n\n{\n  int counter;\n  undefined4 *current_node;\n  \n  counter = 0;\n  for (current_node = DAT_1fff0db0; current_node != (undefined4 *)0x0; current_node = (undefined4 *)*current_node) {\n    FUN_00002ecc(counter,current_node);\n    FUN_00004db8(&DAT_00007380);\n    counter = counter + 1;\n  }\n  return;\n}\n\n",
            "current_name": "process_data_00002f30",
            "entrypoint": "0x00002f30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002f30": "process_data_00002f30",
                "local_10": "counter",
                "local_c": "current_node"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002f74": {
            "additional_data": {
                "DAT_1fff0db0": {
                    "device_data": 1
                },
                "FUN_00002f74": {
                    "display_device_info": 1,
                    "list_devices": 2,
                    "print_device_data": 1,
                    "print_device_info": 11,
                    "print_device_information": 4,
                    "print_device_list": 10,
                    "print_devices": 1,
                    "print_devices_information": 1
                },
                "FUN_000039e8": {
                    "get_class_name": 4,
                    "get_device_class": 8,
                    "get_device_class_name": 1,
                    "get_device_name": 1,
                    "get_device_type": 2
                },
                "FUN_00004c84": {
                    "print_device": 2,
                    "print_device_details": 7,
                    "print_device_entry": 1,
                    "print_device_information": 1,
                    "print_device_row": 1
                },
                "FUN_00004db8": {
                    "display_message": 1,
                    "print_error_message": 9,
                    "print_message": 6
                },
                "local_14": {
                    "current_device": 1,
                    "device_entry": 1,
                    "device_list": 27,
                    "device_ptr": 2
                },
                "local_18": {
                    "device_count": 27,
                    "device_index": 4
                },
                "param_1": {
                    "error_code": 1
                },
                "uVar1": {
                    "class_string": 1,
                    "device_class": 5
                }
            },
            "called": [
                "FUN_00004db8",
                "FUN_00004c84",
                "FUN_000039e8"
            ],
            "calling": [
                "FUN_0000316c"
            ],
            "code": "\nvoid print_device_info_00002f74(void)\n\n{\n  undefined4 device_class;\n  int device_count;\n  undefined4 *device_list;\n  \n  device_list = DAT_1fff0db0;\n  device_count = 0;\n  if (DAT_1fff0db0 == (undefined4 *)0x0) {\n    FUN_00004db8(\"No devices found\");\n  }\n  else {\n    FUN_00004db8(\"ID\\tClass\\t\\tName\");\n  }\n  for (; device_list != (undefined4 *)0x0; device_list = (undefined4 *)*device_list) {\n    device_class = FUN_000039e8(*(undefined *)(device_list[3] + 8));\n    FUN_00004c84(\"#%i\\t%s\\t%s\\n\",device_count,device_class,device_list[2]);\n    device_count = device_count + 1;\n  }\n  return;\n}\n\n",
            "current_name": "print_device_info_00002f74",
            "entrypoint": "0x00002f74",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002f74": "print_device_info_00002f74",
                "local_14": "device_list",
                "local_18": "device_count",
                "uVar1": "device_class"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00002fe0": {
            "additional_data": {
                "DAT_000073d4": {
                    "device_array": 1,
                    "device_data": 1,
                    "device_list": 5,
                    "known_devices": 1,
                    "valid_devices": 1
                },
                "FUN_00002ecc": {
                    "configure_device": 8,
                    "do_something": 1,
                    "execute_action": 1,
                    "execute_device_action": 1,
                    "initialize_device": 1,
                    "perform_action": 4,
                    "perform_operation": 1,
                    "process_device": 7,
                    "process_device_info": 1,
                    "process_valid_device": 1,
                    "set_device": 2,
                    "valid_device": 1
                },
                "FUN_00002ecc_param_1": {
                    "device": 1
                },
                "FUN_00002ecc_param_2": {
                    "device_id": 1
                },
                "FUN_00002f30": {
                    "do_device_action": 1,
                    "do_something": 1,
                    "execute_action": 2,
                    "execute_command": 1,
                    "execute_device_operation": 1,
                    "execute_task": 1,
                    "handle_success": 3,
                    "handle_valid_device": 1,
                    "initialize": 1,
                    "perform_action": 7,
                    "perform_default_action": 1,
                    "perform_default_operation": 1,
                    "perform_operation": 5,
                    "perform_task": 1,
                    "process_device": 1,
                    "process_valid_device": 1,
                    "run_logic": 1
                },
                "FUN_00002fe0": {
                    "check_and_process_device_id": 1,
                    "check_device": 2,
                    "check_device_id": 2,
                    "check_device_id_validity": 2,
                    "check_device_info": 1,
                    "check_device_status": 1,
                    "handle_device": 2,
                    "parse_command_line": 2,
                    "parse_command_line_arguments": 2,
                    "process_command": 1,
                    "process_device": 4,
                    "process_device_id": 1,
                    "process_device_information": 1,
                    "process_device_input": 1,
                    "process_devices": 1,
                    "validate_and_perform_action": 1,
                    "validate_and_process_input": 1,
                    "validate_device": 1,
                    "validate_device_id": 2,
                    "validate_device_inputs": 1,
                    "validate_input_and_perform_operation": 1
                },
                "FUN_00003d24": {
                    "check_device": 2,
                    "check_device_existence": 1,
                    "check_device_id": 3,
                    "check_valid_device_id": 1,
                    "find_device": 2,
                    "get_device_data": 2,
                    "get_device_details": 1,
                    "get_device_id": 2,
                    "get_device_index": 1,
                    "get_device_info": 3,
                    "get_device_pointer": 1,
                    "get_device_status": 4,
                    "get_undefined_device": 1,
                    "is_device_valid": 1,
                    "is_undefined_device": 1,
                    "lookup_device_info": 1,
                    "validate_device": 1,
                    "validate_device_id": 2
                },
                "FUN_00003d24_param_1": {
                    "device_id": 1
                },
                "FUN_00004042": {
                    "find_device": 1,
                    "get_device": 6,
                    "get_device_description": 1,
                    "get_device_id": 8,
                    "get_device_info": 5,
                    "get_device_name": 1,
                    "locate_device": 1,
                    "lookup_device_id": 1,
                    "parse_device_id": 3,
                    "resolve_device": 1,
                    "retrieve_device": 2
                },
                "FUN_00004042_param_1": {
                    "device_id": 1
                },
                "FUN_00004c84": {
                    "display_usage": 2,
                    "print_usage": 22,
                    "print_usage_error": 4,
                    "print_usage_error_message": 2
                },
                "FUN_00004c84_param_1": {
                    "format_string": 1
                },
                "FUN_00004c84_param_2": {
                    "param1": 1
                },
                "FUN_00004c84_param_3": {
                    "param2": 1
                },
                "FUN_00004c84_param_4": {
                    "device_id": 1
                },
                "FUN_00004db8": {
                    "display_error": 1,
                    "display_error_message": 1,
                    "print_error": 22,
                    "print_error_message": 4,
                    "report_error": 2
                },
                "FUN_00004db8_param_1": {
                    "error_code": 1
                },
                "FUN_00004e52": {
                    "check_device": 2,
                    "check_device_id": 2,
                    "compare_strings": 1,
                    "find_device": 16,
                    "find_device_id": 1,
                    "find_device_index": 1,
                    "get_device_info": 1,
                    "search_device": 1,
                    "validate_device": 3,
                    "validate_device_id": 2
                },
                "FUN_00004e52_param_1": {
                    "device_list": 1
                },
                "FUN_00004e52_param_2": {
                    "device_id": 1
                },
                "iVar1": {
                    "dev_info": 1,
                    "device": 1,
                    "device_count": 3,
                    "device_exists": 2,
                    "device_id_result": 1,
                    "device_status": 2,
                    "device_validation_result": 1,
                    "error_code": 3,
                    "result": 14,
                    "result_code": 2
                },
                "param_1": {
                    "argc": 10,
                    "argument_count": 1,
                    "device_count": 12,
                    "device_id": 1,
                    "device_id_count": 1,
                    "num_args": 4,
                    "num_devices": 1,
                    "num_params": 1
                },
                "param_2": {
                    "args": 2,
                    "argument_array": 1,
                    "arguments": 7,
                    "argv": 17,
                    "command_args": 1,
                    "parameters": 1,
                    "params": 1,
                    "program_arguments": 1
                },
                "uVar2": {
                    "device": 1,
                    "device_address": 1,
                    "device_id": 26,
                    "device_info": 1,
                    "device_name": 1
                }
            },
            "called": [
                "FUN_00002ecc",
                "FUN_00004db8",
                "FUN_00004042",
                "FUN_00004e52",
                "FUN_00003d24",
                "FUN_00002f30",
                "FUN_00004c84"
            ],
            "calling": [
                "FUN_0000316c"
            ],
            "code": "\nvoid check_and_process_device_id_00002fe0(int device_count,undefined4 *argv)\n\n{\n  int result;\n  undefined4 device_id;\n  \n  if (device_count < 3) {\n    FUN_00004c84(\"usage: %s %s <device id>|all\\n\",*argv,argv[1]);\n  }\n  else {\n    result = FUN_00004e52(argv[2],&DAT_000073d4);\n    if (result == 0) {\n      FUN_00002f30();\n    }\n    else {\n      device_id = FUN_00004042(argv[2]);\n      result = FUN_00003d24(device_id);\n      if (result == 0) {\n        FUN_00004db8(\"error: undefined device id given\");\n      }\n      else {\n        FUN_00002ecc(device_id,result);\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "check_and_process_device_id_00002fe0",
            "entrypoint": "0x00002fe0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00002fe0": "check_and_process_device_id_00002fe0",
                "iVar1": "result",
                "param_1": "device_count",
                "param_2": "argv",
                "uVar2": "device_id"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0000305c": {
            "additional_data": {
                "FUN_0000305c": {
                    "write_to_device": 31
                },
                "FUN_00003694": {
                    "write_bytes": 1,
                    "write_data": 6,
                    "write_data_to_device": 1,
                    "write_to_device": 1,
                    "write_to_device_driver": 1,
                    "write_to_device_index": 1
                },
                "FUN_00003d24": {
                    "find_device": 1,
                    "get_device": 3,
                    "get_device_at_index": 1,
                    "get_device_data": 1,
                    "get_device_id": 1,
                    "get_device_index": 1,
                    "get_device_name": 2,
                    "get_device_type": 1
                },
                "FUN_00003d94": {
                    "write_data": 1,
                    "write_data_to_device": 2,
                    "write_to_device": 2,
                    "write_to_device_helper": 2,
                    "write_to_device_memory": 1
                },
                "FUN_00004042": {
                    "convert_string_to_int": 1,
                    "convert_to_integer": 1,
                    "convert_to_value": 4,
                    "convert_value": 2,
                    "parse_value": 3
                },
                "FUN_00004622": {
                    "clear_data": 1,
                    "initialize_array": 8,
                    "initialize_device_values": 1,
                    "initialize_memory": 1
                },
                "FUN_00004c84": {
                    "print_error_message": 1,
                    "print_message": 7,
                    "print_usage": 3
                },
                "FUN_00004db8": {
                    "handle_error": 2,
                    "handle_undefined_device": 1,
                    "print_error": 7,
                    "print_error_message": 1
                },
                "auStack_20": {
                    "data": 1,
                    "device_data": 1,
                    "device_values": 15,
                    "values": 14
                },
                "local_10": {
                    "device": 2,
                    "device_id": 16,
                    "device_id_copy": 1,
                    "device_id_int": 1,
                    "device_id_ptr": 1,
                    "device_id_string": 1,
                    "device_id_typed": 1,
                    "device_name": 4,
                    "device_name_ptr": 1,
                    "device_type": 1,
                    "device_value": 1,
                    "parsed_device_id": 1
                },
                "local_14": {
                    "device": 5,
                    "device_handle": 1,
                    "device_id": 6,
                    "device_index": 16,
                    "device_info": 1,
                    "device_ptr": 2
                },
                "local_18": {
                    "device_count": 1,
                    "num_values": 29,
                    "result": 1
                },
                "local_c": {
                    "counter": 1,
                    "i": 26,
                    "index": 4
                },
                "param_1": {
                    "arg_count": 1,
                    "argc": 28,
                    "format_string": 1,
                    "num_args": 1
                },
                "param_2": {
                    "arg_values": 1,
                    "args": 1,
                    "argv": 27,
                    "param1": 1
                },
                "param_3": {
                    "param2": 1
                },
                "param_4": {
                    "param3": 1
                },
                "uVar1": {
                    "device_id": 8,
                    "device_value": 3,
                    "parsed_value": 1,
                    "value": 16
                }
            },
            "called": [
                "FUN_00004622",
                "FUN_00003d94",
                "FUN_00004db8",
                "FUN_00004042",
                "FUN_00003d24",
                "FUN_00004c84",
                "FUN_00003694"
            ],
            "calling": [
                "FUN_0000316c"
            ],
            "code": "\nvoid write_to_device_0000305c(int argc,undefined4 *argv)\n\n{\n  undefined2 value;\n  undefined2 device_values [4];\n  uint num_values;\n  int device_index;\n  undefined4 device_id;\n  int i;\n  \n  if (argc < 4) {\n    FUN_00004c84(\"usage: %s %s <device id> <value 0> [<value 1> [<value 2]]\\n\",*argv,argv[1]);\n  }\n  else {\n    device_id = FUN_00004042(argv[2]);\n    device_index = FUN_00003d24(device_id);\n    if (device_index == 0) {\n      FUN_00004db8(\"error: undefined device given\");\n    }\n    else {\n      FUN_00004622(device_values,0,8);\n      if (5 < argc) {\n        argc = 6;\n      }\n      num_values = argc - 3;\n      for (i = 0; i < (int)num_values; i = i + 1) {\n        value = FUN_00004042(argv[i + 3]);\n        device_values[i] = value;\n      }\n      FUN_00004c84(\"Writing to device #%i - %s\\n\",device_id,*(undefined4 *)(device_index + 8));\n      FUN_00003694(device_values,num_values & 0xff);\n      num_values = FUN_00003d94(device_index,device_values);\n      if ((int)num_values < 1) {\n        if (num_values == -0x86) {\n          FUN_00004c84(\"error: device #%i is not writable\\n\",device_id);\n        }\n        else {\n          FUN_00004c84(\"error: failure to write to device #%i\\n\",device_id);\n        }\n      }\n      else {\n        FUN_00004c84(\"data successfully written to device #%i\\n\",device_id);\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "write_to_device_0000305c",
            "entrypoint": "0x0000305c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0000305c": "write_to_device_0000305c",
                "auStack_20": "device_values",
                "local_10": "device_id",
                "local_14": "device_index",
                "local_18": "num_values",
                "local_c": "i",
                "param_1": "argc",
                "param_2": "argv",
                "uVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0000316c": {
            "additional_data": {
                "DAT_000074ec": {
                    "expected_string": 1,
                    "read": 1
                },
                "FUN_00002f74": {
                    "display_error": 1,
                    "display_help_message": 1,
                    "display_usage": 1,
                    "handle_invalid_argc": 1,
                    "handle_invalid_arguments": 1,
                    "handle_invalid_command": 6,
                    "handle_invalid_command_count": 1,
                    "handle_invalid_command_type": 1,
                    "handle_invalid_input": 4,
                    "handle_invalid_operation": 2,
                    "handle_less_than_two_arguments": 1,
                    "handle_param_error": 1,
                    "print_invalid_operation": 1,
                    "print_usage": 2,
                    "print_usage_message": 1
                },
                "FUN_00002fe0": {
                    "execute_read": 2,
                    "execute_read_command": 6,
                    "execute_write_command": 1,
                    "handle_read_command": 7,
                    "handle_read_operation": 4,
                    "perform_read": 2,
                    "perform_read_operation": 1,
                    "read_data": 1,
                    "read_operation": 1
                },
                "FUN_0000305c": {
                    "execute_read_command": 1,
                    "execute_write": 2,
                    "execute_write_command": 6,
                    "handle_write_command": 7,
                    "handle_write_operation": 4,
                    "perform_write": 2,
                    "perform_write_operation": 1,
                    "write_data": 1,
                    "write_operation": 1
                },
                "FUN_0000316c": {
                    "check_and_execute_operation": 1,
                    "check_and_process_command": 1,
                    "check_usage": 2,
                    "execute_command": 5,
                    "handle_command": 1,
                    "handle_read_write_operation": 1,
                    "parse_arguments": 1,
                    "perform_operation": 1,
                    "process_command": 8,
                    "process_command_line": 1,
                    "process_input": 5,
                    "process_read_write": 1,
                    "process_read_write_operation": 1,
                    "validate_action": 1,
                    "validate_and_execute_command": 1
                },
                "FUN_00004c84": {
                    "display_usage_error": 1,
                    "print_error": 1,
                    "print_error_message": 5,
                    "print_usage": 15,
                    "print_usage_error": 1,
                    "print_usage_info": 1,
                    "print_usage_message": 1
                },
                "FUN_00004e52": {
                    "check_argument": 1,
                    "check_command": 13,
                    "check_if_string_matches": 1,
                    "compare_data": 1,
                    "compare_string": 1,
                    "compare_strings": 6,
                    "find_command": 1,
                    "is_command_valid": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "operation_result": 1,
                    "result": 26,
                    "result_code": 2
                },
                "param_1": {
                    "action": 1,
                    "arg_count": 1,
                    "argc": 5,
                    "command": 1,
                    "command_arg_count": 1,
                    "command_count": 2,
                    "command_option": 1,
                    "command_type": 9,
                    "count": 1,
                    "input_count": 1,
                    "input_flag": 1,
                    "input_type": 2,
                    "num_args": 1,
                    "num_operations": 1,
                    "operation": 1,
                    "operation_type": 2
                },
                "param_2": {
                    "args": 3,
                    "arguments": 7,
                    "argv": 5,
                    "command": 1,
                    "command_args": 10,
                    "command_arguments": 2,
                    "input_args": 1,
                    "input_params": 1,
                    "operation_list": 1
                }
            },
            "called": [
                "FUN_00002f74",
                "FUN_00004e52",
                "FUN_00004c84",
                "FUN_0000305c",
                "FUN_00002fe0"
            ],
            "calling": [],
            "code": "\nundefined4 process_command_line_0000316c(int command_type,undefined4 *command_args)\n\n{\n  int result;\n  \n  if (command_type < 2) {\n    FUN_00002f74();\n  }\n  else {\n    result = FUN_00004e52(command_args[1],&DAT_000074ec);\n    if (result == 0) {\n      FUN_00002fe0(command_type,command_args);\n    }\n    else {\n      result = FUN_00004e52(command_args[1],\"write\");\n      if (result == 0) {\n        FUN_0000305c(command_type,command_args);\n      }\n      else {\n        FUN_00004c84(\"usage: %s read|write\\n\",*command_args);\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_command_line_0000316c",
            "entrypoint": "0x0000316c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0000316c": "process_command_line_0000316c",
                "iVar1": "result",
                "param_1": "command_type",
                "param_2": "command_args"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000031e0": {
            "additional_data": {
                "DAT_variable_name_2": {
                    "dat_variable_name": 1
                },
                "FUN_000031e0": {
                    "display_alarm_message": 9,
                    "play_alarm_sound": 2,
                    "print_alarm_message": 5,
                    "ring_alarm": 13,
                    "sound_alarm": 2
                },
                "FUN_00004db8": {
                    "display_message": 8,
                    "print_message": 21,
                    "send_notification": 1,
                    "show_message": 1
                },
                "message": {
                    "message": 1
                },
                "new_variable_name_1": {
                    "new_variable_name": 1
                },
                "param_1": {
                    "message": 27,
                    "new_message": 1
                }
            },
            "called": [
                "FUN_00004db8"
            ],
            "calling": [],
            "code": "\nvoid ring_alarm_000031e0(void)\n\n{\n  FUN_00004db8(\"The alarm rang\");\n  return;\n}\n\n",
            "current_name": "ring_alarm_000031e0",
            "entrypoint": "0x000031e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000031e0": "ring_alarm_000031e0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000031fc": {
            "additional_data": {
                "Elf32_Rel_ARRAY_1fff0200": {
                    "array_of_offsets": 1,
                    "calendar_data": 1,
                    "day_of_month_array": 1,
                    "day_of_week_offsets": 1,
                    "days_of_week_table": 1,
                    "month_offset": 1,
                    "month_offsets": 1,
                    "table": 1,
                    "week_array": 1,
                    "weekday_offset": 1,
                    "weekday_offsets": 2,
                    "weekday_shift": 1,
                    "weekday_table": 1,
                    "weekdays_lookup_table": 1
                },
                "FUN_000031fc": {
                    "calculate_day_of_week": 15,
                    "calculate_remainder_of_week": 1,
                    "calculate_weekday": 11,
                    "calculate_weekday_index": 1,
                    "compute_weekday": 1,
                    "find_day_of_week": 1,
                    "process_date": 1
                },
                "bVar1": {
                    "adjustment": 1,
                    "is_before_march": 1,
                    "is_leap_year": 24,
                    "leap_year_flag": 3,
                    "limit": 1,
                    "month_adjustment": 1
                },
                "iVar2": {
                    "adjusted_month": 8,
                    "adjusted_year": 21,
                    "modified_month": 1,
                    "normalized_month": 1
                },
                "new_variable_name_1": {
                    "adjusted_year": 1
                },
                "new_variable_name_2": {
                    "adjusted_month": 1
                },
                "param_1": {
                    "day": 1,
                    "input_year": 2,
                    "year": 28
                },
                "param_2": {
                    "input_month": 2,
                    "month": 29
                },
                "param_3": {
                    "day": 24,
                    "day_of_week": 1,
                    "days": 2,
                    "input_day": 2,
                    "offset": 1,
                    "year": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0000328c"
            ],
            "code": "\nint calculate_day_of_week_000031fc(int year,int month,int day)\n\n{\n  byte is_leap_year;\n  int adjusted_year;\n  \n  adjusted_year = month;\n  if (month < 3) {\n    adjusted_year = 1;\n  }\n  is_leap_year = (byte)adjusted_year;\n  if (2 < month) {\n    is_leap_year = 0;\n  }\n  year = year - (uint)is_leap_year;\n  adjusted_year = year;\n  if (year < 0) {\n    adjusted_year = year + 3;\n  }\n  return ((((adjusted_year >> 2) + year) - year / 100) + year / 400 +\n          *(int *)((int)weekday_offsets + (month + -1) * 4 + 0x50) + day) % 7;\n}\n\n",
            "current_name": "calculate_day_of_week_000031fc",
            "entrypoint": "0x000031fc",
            "imported": false,
            "improved": true,
            "renaming": {
                "Elf32_Rel_ARRAY_1fff0200": "weekday_offsets",
                "FUN_000031fc": "calculate_day_of_week_000031fc",
                "bVar1": "is_leap_year",
                "iVar2": "adjusted_year",
                "param_1": "year",
                "param_2": "month",
                "param_3": "day"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0000328c": {
            "additional_data": {
                "FUN_0000328c": {
                    "decode_and_update_parameters": 1,
                    "decode_binary_function": 1,
                    "decode_data": 1,
                    "decode_parameters": 2,
                    "extract_and_calculate_params": 1,
                    "extract_data": 6,
                    "extract_info_from_binary": 1,
                    "extract_information": 1,
                    "extract_parameters": 2,
                    "extract_params_and_calculate": 1,
                    "extract_values": 3,
                    "parse_and_compute_checksum": 1,
                    "parse_data": 7,
                    "parse_input": 1,
                    "process_data": 1
                },
                "iVar1": {
                    "calculation_result": 3,
                    "result": 8
                },
                "local_10": {
                    "current_index": 6,
                    "index": 16,
                    "offset": 2,
                    "start_index": 1,
                    "temp_int": 1,
                    "temp_val": 1,
                    "temp_value": 1,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "updated_index": 1
                },
                "local_a": {
                    "converted_value": 1,
                    "decoded_value": 4,
                    "extracted_value": 2,
                    "info_value": 1,
                    "parsed_value": 3,
                    "result": 11,
                    "return_value": 1,
                    "returned_value": 1,
                    "temp_var2": 1,
                    "value": 6
                },
                "param_1": {
                    "array": 1,
                    "data": 4,
                    "data_array": 1,
                    "data_pointer": 4,
                    "data_ptr": 2,
                    "input": 1,
                    "input_array": 11,
                    "input_data": 3,
                    "input_ptr": 1,
                    "source_data": 1
                },
                "param_2": {
                    "extracted_data": 1,
                    "output": 2,
                    "output_arr": 1,
                    "output_array": 15,
                    "output_data": 2,
                    "parsed_data": 2,
                    "result": 1,
                    "result_arr": 1,
                    "result_array": 4
                }
            },
            "called": [
                "FUN_000031fc",
                "FUN_00004f84"
            ],
            "calling": [
                "FUN_000033f4",
                "FUN_00003478"
            ],
            "code": "\nundefined4 parse_data_0000328c(undefined4 *input_array,int *output_array)\n\n{\n  int result;\n  int index;\n  short result;\n  \n  result = FUN_00004f84(*input_array,&index,10);\n  output_array[5] = result + -0x76c;\n  result = FUN_00004f84(index + 1,&index,10);\n  output_array[4] = result + -1;\n  result = FUN_00004f84(index + 1,&index,10);\n  output_array[3] = (int)result;\n  result = FUN_00004f84(input_array[1],&index,10);\n  output_array[2] = (int)result;\n  result = FUN_00004f84(index + 1,&index,10);\n  output_array[1] = (int)result;\n  result = FUN_00004f84(index + 1,&index,10);\n  *output_array = (int)result;\n  result = FUN_000031fc(output_array[5] + 0x76c,output_array[4] + 1,output_array[3]);\n  output_array[6] = result;\n  output_array[8] = -1;\n  return 0;\n}\n\n",
            "current_name": "parse_data_0000328c",
            "entrypoint": "0x0000328c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0000328c": "parse_data_0000328c",
                "iVar1": "result",
                "local_10": "index",
                "local_a": "result",
                "param_1": "input_array",
                "param_2": "output_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00003378": {
            "additional_data": {
                "FUN_00003378": {
                    "format_date_time": 2,
                    "print_date_time": 25,
                    "print_datetime": 3
                },
                "FUN_00004c84": {
                    "print_formatted_date": 1,
                    "print_formatted_date_time": 4
                },
                "param_1": {
                    "date_time": 6,
                    "date_time_arr": 1,
                    "date_time_array": 14,
                    "date_time_params": 4,
                    "datetime": 2,
                    "datetime_array": 1,
                    "datetime_components": 1
                },
                "param_2": {
                    "year": 1
                },
                "param_3": {
                    "month": 1
                },
                "param_4": {
                    "day": 1
                },
                "param_5": {
                    "hour": 1
                },
                "param_6": {
                    "minute": 1
                },
                "param_7": {
                    "second": 1
                }
            },
            "called": [
                "FUN_00004c84"
            ],
            "calling": [
                "FUN_000033c0",
                "FUN_00003444"
            ],
            "code": "\nundefined4 print_date_time_00003378(undefined4 *date_time_array)\n\n{\n  FUN_00004c84(\"%04i-%02i-%02i %02i:%02i:%02i\\n\",date_time_array[5] + 0x76c,date_time_array[4] + 1,date_time_array[3],\n               date_time_array[2],date_time_array[1],*date_time_array);\n  return 0;\n}\n\n",
            "current_name": "print_date_time_00003378",
            "entrypoint": "0x00003378",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00003378": "print_date_time_00003378",
                "param_1": "date_time_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000033c0": {
            "additional_data": {
                "FUN_00002690": {
                    "check_alarm_status": 1,
                    "get_alarm": 3,
                    "get_alarm_status": 4,
                    "get_alarm_value": 1,
                    "get_rtc_alarm": 1,
                    "retrieve_alarm_data": 1
                },
                "FUN_00003378": {
                    "configure_alarm": 1,
                    "handle_alarm": 1,
                    "handle_alarm_data": 1,
                    "process_alarm": 3,
                    "process_alarm_status": 4,
                    "update_alarm_status": 1
                },
                "FUN_000033c0": {
                    "check_alarm_and_get_result": 1,
                    "check_alarm_and_handle": 1,
                    "check_alarm_status": 8,
                    "check_alarm_validity": 1,
                    "check_rtc_alarm": 1,
                    "get_alarm_error": 1,
                    "get_alarm_status": 17,
                    "get_rtc_alarm_status": 1
                },
                "FUN_00004db8": {
                    "handle_alarm_error": 1,
                    "log_alarm_error": 1,
                    "log_error": 2,
                    "log_error_message": 1,
                    "log_rtc_error": 2,
                    "print_error": 2,
                    "print_error_message": 2
                },
                "auStack_2c": {
                    "alarm_buffer": 2,
                    "alarm_data": 13,
                    "alarm_params": 1,
                    "alarm_status": 7,
                    "arguments": 1,
                    "buffer": 1,
                    "data_buffer": 1,
                    "rtc_alarm_data": 1
                },
                "iVar1": {
                    "alarm_status": 1,
                    "error_flag": 1,
                    "error_status": 1,
                    "result": 15,
                    "return_value": 1,
                    "status": 4
                }
            },
            "called": [
                "FUN_00004db8",
                "FUN_00002690",
                "FUN_00003378"
            ],
            "calling": [
                "FUN_00003524"
            ],
            "code": "\nbool get_rtc_alarm_status_000033c0(void)\n\n{\n  int result;\n  undefined alarm_data [36];\n  \n  result = FUN_00002690(alarm_data);\n  if (result != 0) {\n    FUN_00004db8(\"rtc: error getting alarm\");\n  }\n  else {\n    FUN_00003378(alarm_data);\n  }\n  return result != 0;\n}\n\n",
            "current_name": "get_rtc_alarm_status_000033c0",
            "entrypoint": "0x000033c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000033c0": "get_rtc_alarm_status_000033c0",
                "auStack_2c": "alarm_data",
                "iVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000033f4": {
            "additional_data": {
                "FUN_00002654": {
                    "set_alarm": 1,
                    "set_alarm_time": 2,
                    "set_alarm_value": 3,
                    "set_alarms": 1
                },
                "FUN_0000328c": {
                    "calculate_buffer": 1,
                    "check_input": 2,
                    "copy_data": 1,
                    "extract_data": 1,
                    "get_data_from_input": 1,
                    "initialize_stack": 1
                },
                "FUN_000033f4": {
                    "set_alarm": 31
                },
                "FUN_00004db8": {
                    "log_error": 5,
                    "log_error_message": 1,
                    "print_error_message": 1
                },
                "auStack_2c": {
                    "alarm_data": 2,
                    "buffer": 16,
                    "data": 1,
                    "data_buffer": 1,
                    "local_buffer": 1,
                    "stack": 1,
                    "stack_array": 1,
                    "stack_buffer": 3,
                    "stack_data": 4,
                    "stack_variable": 1
                },
                "iVar1": {
                    "calculation_result": 1,
                    "function_status": 1,
                    "result": 29
                },
                "param_1": {
                    "alarm_time": 6,
                    "current_time": 1,
                    "input": 8,
                    "input_data": 3,
                    "input_param": 3,
                    "input_parameter": 2,
                    "input_value": 4,
                    "param": 2,
                    "time": 1,
                    "value": 1
                },
                "uVar2": {
                    "alarm_result": 1,
                    "error": 1,
                    "output": 1,
                    "return_status": 1,
                    "return_value": 6,
                    "status": 16,
                    "success": 5
                }
            },
            "called": [
                "FUN_00004db8",
                "FUN_00002654",
                "FUN_0000328c"
            ],
            "calling": [
                "FUN_00003524"
            ],
            "code": "\nundefined4 set_alarm_000033f4(undefined4 input)\n\n{\n  int result;\n  undefined4 status;\n  undefined buffer [36];\n  \n  result = FUN_0000328c(input,buffer);\n  if (result == 0) {\n    result = FUN_00002654(buffer,0x31e1,0);\n    if (result == -1) {\n      FUN_00004db8(\"rtc: error setting alarm\");\n      status = 1;\n    }\n    else {\n      status = 0;\n    }\n  }\n  else {\n    status = 1;\n  }\n  return status;\n}\n\n",
            "current_name": "set_alarm_000033f4",
            "entrypoint": "0x000033f4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000033f4": "set_alarm_000033f4",
                "auStack_2c": "buffer",
                "iVar1": "result",
                "param_1": "input",
                "uVar2": "status"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00003444": {
            "additional_data": {
                "FNV_00002624": {
                    "get_time_data": 1
                },
                "FNV_00003378": {
                    "process_time_data": 1
                },
                "FNV_00004db8": {
                    "log_error": 1
                },
                "FUN_00002624": {
                    "get_time": 4
                },
                "FUN_00003378": {
                    "process_data": 1,
                    "process_rtc_time": 1,
                    "process_time": 1,
                    "process_time_data": 2
                },
                "FUN_00003444": {
                    "get_and_print_time_errors": 1,
                    "get_and_process_time": 1,
                    "get_rtc_error_status": 1,
                    "get_rtc_status": 1,
                    "get_rtc_time": 9,
                    "get_rtc_time_error": 1,
                    "get_time": 2,
                    "get_time_and_check_error": 1,
                    "get_time_and_handle_error": 6,
                    "get_time_and_log_error": 2,
                    "get_time_and_print_error_message": 1,
                    "get_time_and_update": 1,
                    "get_time_error": 1,
                    "get_time_error_check": 1,
                    "get_time_error_status": 1,
                    "get_time_with_error_handling": 1
                },
                "FUN_00004db8": {
                    "log_error": 3,
                    "log_error_message": 2
                },
                "auStack_2c": {
                    "buffer": 2,
                    "error_buffer": 1,
                    "rtc_data": 1,
                    "stack_parameters": 1,
                    "time_buffer": 8,
                    "time_data": 16
                },
                "iVar1": {
                    "error": 1,
                    "error_code": 1,
                    "error_flag": 1,
                    "error_status": 1,
                    "result": 8,
                    "return_value": 3
                }
            },
            "called": [
                "FUN_00004db8",
                "FUN_00003378",
                "FUN_00002624"
            ],
            "calling": [
                "FUN_00003524"
            ],
            "code": "\nbool get_rtc_time_error_00003444(void)\n\n{\n  int result;\n  undefined time_data [36];\n  \n  result = FUN_00002624(time_data);\n  if (result != 0) {\n    FUN_00004db8(\"rtc: error getting time\");\n  }\n  else {\n    FUN_00003378(time_data);\n  }\n  return result != 0;\n}\n\n",
            "current_name": "get_rtc_time_error_00003444",
            "entrypoint": "0x00003444",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00003444": "get_rtc_time_error_00003444",
                "auStack_2c": "time_data",
                "iVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00003478": {
            "additional_data": {
                "FUN_00002600": {
                    "set_time": 1
                },
                "FUN_0000328c": {
                    "copy_time_data": 1
                },
                "FUN_00003478": {
                    "set_and_check_time": 2,
                    "set_rtc": 4,
                    "set_rtc_time": 4,
                    "set_system_time": 5,
                    "set_time": 12,
                    "set_time_from_rtc": 2,
                    "set_time_if_needed": 1,
                    "set_time_in_rtc": 1
                },
                "auStack_2c": {
                    "buffer": 9,
                    "data": 1,
                    "saved_time": 1,
                    "stack_buffer": 2,
                    "time_array": 1,
                    "time_buffer": 8,
                    "time_data": 7
                },
                "iVar1": {
                    "result": 31
                },
                "param_1": {
                    "current_time": 2,
                    "param": 1,
                    "time": 23,
                    "time_data": 2,
                    "time_value": 3
                },
                "param_2": {
                    "time_data": 1
                },
                "uVar2": {
                    "is_success": 1,
                    "is_successful": 1,
                    "return_code": 1,
                    "return_val": 1,
                    "return_value": 3,
                    "status": 16,
                    "success": 8
                }
            },
            "called": [
                "FUN_00004db8",
                "FUN_0000328c",
                "FUN_00002600"
            ],
            "calling": [
                "FUN_00003524"
            ],
            "code": "\nundefined4 set_system_time_00003478(undefined4 time)\n\n{\n  int result;\n  undefined4 status;\n  undefined buffer [36];\n  \n  result = FUN_0000328c(time,buffer);\n  if (result == 0) {\n    result = FUN_00002600(buffer);\n    if (result == -1) {\n      FUN_00004db8(\"rtc: error setting time\");\n      status = 1;\n    }\n    else {\n      status = 0;\n    }\n  }\n  else {\n    status = 1;\n  }\n  return status;\n}\n\n",
            "current_name": "set_system_time_00003478",
            "entrypoint": "0x00003478",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00003478": "set_system_time_00003478",
                "auStack_2c": "buffer",
                "iVar1": "result",
                "param_1": "time",
                "uVar2": "status"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000034c0": {
            "additional_data": {
                "FUN_000034c0": {
                    "display_usage": 1,
                    "print_command_usage": 1,
                    "print_help": 1,
                    "print_rtc_command_usage": 4,
                    "print_rtc_commands": 1,
                    "print_rtc_usage": 6,
                    "print_usage": 16,
                    "print_usage_message": 1
                },
                "FUN_00004db8": {
                    "print_line": 1,
                    "print_message": 30
                },
                "param_1": {
                    "message": 10
                }
            },
            "called": [
                "FUN_00004db8"
            ],
            "calling": [
                "FUN_00003524"
            ],
            "code": "\nundefined4 print_rtc_command_usage_000034c0(void)\n\n{\n  FUN_00004db8(\"usage: rtc <command> [arguments]\");\n  FUN_00004db8(\"commands:\");\n  FUN_00004db8(\"\\tpoweron\\t\\tpower the interface on\");\n  FUN_00004db8(\"\\tpoweroff\\tpower the interface off\");\n  FUN_00004db8(\"\\tclearalarm\\tdeactivate the current alarm\");\n  FUN_00004db8(\"\\tgetalarm\\tprint the currently alarm time\");\n  FUN_00004db8(\"\\tsetalarm YYYY-MM-DD HH:MM:SS\\n\\t\\t\\tset an alarm for the specified time\");\n  FUN_00004db8(\"\\tgettime\\t\\tprint the current time\");\n  FUN_00004db8(\"\\tsettime YYYY-MM-DD HH:MM:SS\\n\\t\\t\\tset the current time\");\n  return 0;\n}\n\n",
            "current_name": "print_rtc_command_usage_000034c0",
            "entrypoint": "0x000034c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000034c0": "print_rtc_command_usage_000034c0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00003524": {
            "additional_data": {
                "FUN_000026c0": {
                    "clear_alarm": 1,
                    "execute_clear_alarm": 1,
                    "handle_clear_alarm": 3,
                    "perform_clear_alarm": 1
                },
                "FUN_000026d8": {
                    "execute_power_on": 1,
                    "handle_power_on": 3,
                    "perform_power_on": 1,
                    "power_on": 1
                },
                "FUN_000026e4": {
                    "execute_power_off": 1,
                    "handle_power_off": 3,
                    "perform_power_off": 1,
                    "power_off": 1
                },
                "FUN_000033c0": {
                    "execute_get_alarm": 2,
                    "handle_get_alarm": 3,
                    "perform_get_alarm": 1
                },
                "FUN_000033f4": {
                    "execute_set_alarm": 2,
                    "handle_set_alarm": 3,
                    "perform_set_alarm": 1
                },
                "FUN_00003444": {
                    "execute_get_time": 2,
                    "handle_get_time": 3,
                    "perform_get_time": 1
                },
                "FUN_00003478": {
                    "execute_set_time": 2,
                    "handle_set_time": 3,
                    "perform_set_time": 1
                },
                "FUN_000034c0": {
                    "display_error": 1,
                    "handle_invalid_command": 2,
                    "handle_missing_command": 1,
                    "print_help_message": 1,
                    "show_error_message": 1
                },
                "FUN_00003524": {
                    "execute_command": 12,
                    "handle_command": 11,
                    "perform_command": 1,
                    "power_management": 1,
                    "process_command": 6
                },
                "FUN_00004c84": {
                    "display_unknown_command_error": 1,
                    "handle_unknown_command": 1,
                    "print_error_message": 3,
                    "print_unknown_command": 1
                },
                "FUN_00004e66": {
                    "call_command": 1,
                    "execute_command": 4,
                    "execute_system_call": 1
                },
                "iVar1": {
                    "command_result": 1,
                    "error_code": 9,
                    "result": 18,
                    "result_code": 1,
                    "return_value": 1
                },
                "param_1": {
                    "cmd_count": 1,
                    "command": 4,
                    "command_code": 3,
                    "command_count": 6,
                    "command_id": 1,
                    "command_index": 1,
                    "command_type": 13,
                    "num_commands": 2
                },
                "param_2": {
                    "arg_list": 1,
                    "cmd_params": 1,
                    "command": 3,
                    "command_arg": 1,
                    "command_args": 1,
                    "command_array_ptr": 1,
                    "command_data": 13,
                    "command_info": 1,
                    "command_list": 1,
                    "command_name": 1,
                    "command_param": 1,
                    "command_params": 1,
                    "command_string": 2,
                    "data_ptr": 1,
                    "param_ptr": 1,
                    "params": 1
                },
                "uVar2": {
                    "error": 1,
                    "is_success": 2,
                    "result": 4,
                    "return_value": 12,
                    "status": 6,
                    "success": 5
                }
            },
            "called": [
                "FUN_00004e66",
                "FUN_000033f4",
                "FUN_000034c0",
                "FUN_000033c0",
                "FUN_00003444",
                "FUN_000026d8",
                "FUN_000026c0",
                "FUN_00004c84",
                "FUN_00003478",
                "FUN_000026e4"
            ],
            "calling": [],
            "code": "\nundefined4 execute_command_00003524(int command_type,int command_data)\n\n{\n  int result;\n  undefined4 return_value;\n  \n  if (command_type < 2) {\n    FUN_000034c0();\n    return_value = 1;\n  }\n  else {\n    result = FUN_00004e66(*(undefined4 *)(command_data + 4),\"poweron\",7);\n    if (result == 0) {\n      FUN_000026d8();\n    }\n    else {\n      result = FUN_00004e66(*(undefined4 *)(command_data + 4),\"poweroff\",8);\n      if (result == 0) {\n        FUN_000026e4();\n      }\n      else {\n        result = FUN_00004e66(*(undefined4 *)(command_data + 4),\"clearalarm\",8);\n        if (result == 0) {\n          FUN_000026c0();\n        }\n        else {\n          result = FUN_00004e66(*(undefined4 *)(command_data + 4),\"getalarm\",8);\n          if (result == 0) {\n            FUN_000033c0();\n          }\n          else {\n            result = FUN_00004e66(*(undefined4 *)(command_data + 4),\"setalarm\",8);\n            if ((result == 0) && (command_type == 4)) {\n              FUN_000033f4(command_data + 8);\n            }\n            else {\n              result = FUN_00004e66(*(undefined4 *)(command_data + 4),\"gettime\",7);\n              if (result == 0) {\n                FUN_00003444();\n              }\n              else {\n                result = FUN_00004e66(*(undefined4 *)(command_data + 4),\"settime\",7);\n                if ((result != 0) || (command_type != 4)) {\n                  FUN_00004c84(\"unknown command or missing parameters: %s\\n\\n\",\n                               *(undefined4 *)(command_data + 4));\n                  FUN_000034c0();\n                  return 1;\n                }\n                FUN_00003478(command_data + 8);\n              }\n            }\n          }\n        }\n      }\n    }\n    return_value = 0;\n  }\n  return return_value;\n}\n\n",
            "current_name": "execute_command_00003524",
            "entrypoint": "0x00003524",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00003524": "execute_command_00003524",
                "iVar1": "result",
                "param_1": "command_type",
                "param_2": "command_data",
                "uVar2": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00003658": {
            "additional_data": {
                "0xf": {
                    "barrier": 1,
                    "sync_value": 1
                },
                "DataSynchronizationBarrier": {
                    "barrier": 1,
                    "sync": 1,
                    "sync_barrier": 20,
                    "sync_data_barrier": 1,
                    "synchronize_data": 5,
                    "synchronize_data_barrier": 1
                },
                "FUN_00003658": {
                    "continuous_execution": 1,
                    "continuous_loop": 6,
                    "infinite_loop": 9,
                    "keep_executing_loop": 1,
                    "loop_until_interrupt": 1,
                    "perform_infinite_loop": 1,
                    "run_infinite_loop": 5,
                    "synchronize_data": 2,
                    "wait_for_data_sync": 1,
                    "wait_for_data_synchronization": 2,
                    "wait_forever": 1,
                    "wait_infinitely": 1
                },
                "do": {
                    "while": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00003688"
            ],
            "code": "\nvoid run_infinite_loop_00003658(void)\n\n{\n  sync_barrier(0xf);\n  sync_barrier(0xf);\n  while {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "run_infinite_loop_00003658",
            "entrypoint": "0x00003658",
            "imported": false,
            "improved": true,
            "renaming": {
                "DataSynchronizationBarrier": "sync_barrier",
                "FUN_00003658": "run_infinite_loop_00003658",
                "do": "while"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00003688": {
            "additional_data": {
                "FUN_00003658": {
                    "do_something": 1,
                    "execute_initialization": 4,
                    "execute_preparation": 1,
                    "execute_subtask": 1,
                    "initialize_device": 1,
                    "initialize_process": 1,
                    "initialize_system": 1,
                    "perform_initial_tasks": 1,
                    "perform_initialization": 11,
                    "perform_setup": 1,
                    "perform_specific_task": 1,
                    "perform_subtask": 1,
                    "perform_system_setup": 1,
                    "process_data": 1,
                    "sub_function": 1
                },
                "FUN_00003688": {
                    "execute_function": 1,
                    "execute_initial_function": 1,
                    "execute_initial_process": 1,
                    "execute_initialization": 7,
                    "execute_initialization_process": 1,
                    "execute_main_function": 2,
                    "execute_startup_process": 1,
                    "initialize": 4,
                    "initialize_application": 2,
                    "initialize_system": 10,
                    "perform_tasks": 1
                }
            },
            "called": [
                "FUN_00003658"
            ],
            "calling": [
                "FUN_00002e9c"
            ],
            "code": "\nvoid initialize_system_00003688(void)\n\n{\n  FUN_00003658();\n  return;\n}\n\n",
            "current_name": "initialize_system_00003688",
            "entrypoint": "0x00003688",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00003688": "initialize_system_00003688"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00003694": {
            "additional_data": {
                "DAT_000077bc": {
                    "data_prefix": 2,
                    "data_string": 1,
                    "prefix1": 1
                },
                "DAT_000077d8": {
                    "format_string": 1,
                    "integer_data_format_string": 1,
                    "integer_value": 1,
                    "prefix2": 1
                },
                "DAT_000077dc": {
                    "converted_string_format_string": 1,
                    "formatted_string": 1,
                    "prefix3": 1,
                    "string_value": 1
                },
                "DAT_000077e8": {
                    "format_specifier": 1,
                    "format_specifier_string": 1,
                    "suffix": 1
                },
                "FUN_00003694": {
                    "display_data_object": 28,
                    "display_data_objects": 1,
                    "print_data_object": 1
                },
                "FUN_00003810": {
                    "get_data_type": 3,
                    "get_display_format": 1,
                    "get_format_specifier": 2,
                    "get_type_label": 1
                },
                "FUN_00003918": {
                    "calculate_value": 1,
                    "get_ascii_character": 1,
                    "get_char_value": 1,
                    "get_character": 1,
                    "get_display_char": 1,
                    "get_flag_character": 1,
                    "process_data2": 1
                },
                "FUN_00003e9e": {
                    "convert_short_to_hex_string": 1,
                    "convert_to_string": 2,
                    "format_string": 1,
                    "format_string_with_flag": 1,
                    "generate_string": 1,
                    "process_data1": 1
                },
                "FUN_00004c84": {
                    "print_data": 2,
                    "print_formatted_data": 1,
                    "print_formatted_output": 1,
                    "print_formatted_string": 1,
                    "print_message": 1,
                    "print_string": 1
                },
                "FUN_00004db8": {
                    "display_error_message": 3,
                    "print_error_message": 2,
                    "show_error_message": 2
                },
                "auStack_18": {
                    "additional_data": 1,
                    "auxiliary_stack": 1,
                    "buffer": 9,
                    "conversion_buffer": 3,
                    "format_buffer": 1,
                    "formatted_data": 1,
                    "formatted_string": 1,
                    "stack_array": 4,
                    "stack_buf": 1,
                    "string_buffer": 2,
                    "temp_buffer": 1,
                    "temp_stack": 3,
                    "temporary_buffer": 3
                },
                "bVar4": {
                    "bit_check_result": 1,
                    "bit_mask_flag": 1,
                    "bit_set": 4,
                    "bitwise_result": 1,
                    "flag_bool": 1,
                    "is_bit_high": 1,
                    "is_bit_set": 7,
                    "is_flag_set": 5,
                    "is_mask_set": 2,
                    "is_set": 7,
                    "mask_flag": 1
                },
                "cVar2": {
                    "bit_flag": 1,
                    "bit_value": 2,
                    "char_value": 3,
                    "character": 3,
                    "condition": 1,
                    "display_flag": 1,
                    "flag": 10,
                    "flag_char": 1,
                    "flag_character": 1,
                    "is_bit_set": 2,
                    "is_char_valid": 1,
                    "is_valid": 2,
                    "is_valid_data": 1,
                    "is_valid_element": 1,
                    "mode_char": 1
                },
                "local_10": {
                    "buf_size": 1,
                    "buffer_length": 11,
                    "buffer_size": 3,
                    "conversion_result": 1,
                    "formatted_data_length": 1,
                    "formatted_string_length": 1,
                    "index": 1,
                    "local_index": 1,
                    "local_variable1": 2,
                    "result": 1,
                    "return_code": 1,
                    "stack_index": 2,
                    "stack_size": 1,
                    "string_index": 1,
                    "string_length": 3
                },
                "local_9": {
                    "byte_index": 1,
                    "counter": 2,
                    "current_byte": 1,
                    "current_index": 3,
                    "data_index": 1,
                    "element_index": 1,
                    "i": 4,
                    "index": 18
                },
                "local_a": {
                    "ascii_character": 1,
                    "char_flag": 2,
                    "char_value": 3,
                    "char_value2": 1,
                    "character": 11,
                    "character_type": 1,
                    "conversion_flag": 1,
                    "data_type": 3,
                    "display_char": 1,
                    "display_mode": 1,
                    "element_code": 1,
                    "flag": 1,
                    "flag_char": 1,
                    "local_char": 1,
                    "local_variable2": 2
                },
                "original_function_name": {
                    "display_data_object": 1
                },
                "param_1": {
                    "address": 1,
                    "data_address": 1,
                    "data_object": 13,
                    "data_object_address": 8,
                    "data_object_pointer": 3,
                    "data_object_ptr": 1,
                    "data_pointer": 2,
                    "data_type": 1,
                    "object_id": 1
                },
                "param_2": {
                    "data_length": 1,
                    "data_object_length": 2,
                    "data_object_size": 9,
                    "data_size": 9,
                    "length": 4,
                    "num_elements": 1,
                    "number": 1,
                    "size": 4
                },
                "param_3": {
                    "base": 1
                },
                "uVar1": {
                    "data_conversion_result": 1,
                    "data_format": 1,
                    "data_mode": 1,
                    "data_object_format": 1,
                    "data_object_size": 1,
                    "data_object_value": 1,
                    "data_type": 6,
                    "display_value": 1,
                    "format": 3,
                    "format_result": 2,
                    "format_specifier": 5,
                    "format_string": 1,
                    "formatted_data": 1,
                    "formatting_address": 1,
                    "result": 3,
                    "return_value": 1,
                    "status": 1
                },
                "uVar3": {
                    "bit": 2,
                    "bit_field": 1,
                    "bit_flag": 1,
                    "bit_mask": 19,
                    "bit_masks": 1,
                    "bitmask": 2,
                    "bitwise_flag": 1,
                    "bitwise_operation": 1,
                    "mask": 3
                }
            },
            "called": [
                "FUN_00003e9e",
                "FUN_00003918",
                "FUN_00004db8",
                "FUN_00004c84",
                "FUN_00003810"
            ],
            "calling": [
                "FUN_00002ecc",
                "FUN_0000305c"
            ],
            "code": "\nvoid display_data_object_00003694(int data_object,byte data_size)\n\n{\n  undefined4 data_type;\n  char flag;\n  uint bit_mask;\n  bool is_set;\n  undefined buffer [8];\n  int buffer_length;\n  char character;\n  byte index;\n  \n  if ((data_object == 0) || (3 < data_size)) {\n    FUN_00004db8(\"Unable to display data object\");\n  }\n  else {\n    FUN_00004c84(\"Data:\");\n    for (index = 0; index < data_size; index = index + 1) {\n      if (*(byte *)(data_object + 6) < 0x14) {\n        bit_mask = 1 << (uint)*(byte *)(data_object + 6) & 0x8018f;\n        is_set = bit_mask != 0;\n        if (is_set) {\n          bit_mask = 1;\n        }\n        flag = (char)bit_mask;\n        if (!is_set) {\n          flag = '\\0';\n        }\n        if (flag == '\\0') goto LAB_000036ee;\n        character = '\\0';\n      }\n      else {\nLAB_000036ee:\n        character = FUN_00003918((int)*(char *)(data_object + 7));\n      }\n      FUN_00004c84(&DAT_000077bc);\n      if (data_size < 2) {\n        FUN_00004c84(\"     \");\n      }\n      else {\n        FUN_00004c84(\"[%u] \",index);\n      }\n      if (character == '\\0') {\n        if (*(char *)(data_object + 7) == '\\0') {\n          FUN_00004c84(&DAT_000077d8,(int)*(short *)(data_object + (uint)index * 2));\n        }\n        else if ((*(char *)(data_object + 7) + 4 < 0 == SCARRY4((int)*(char *)(data_object + 7),4)) &&\n                (*(char *)(data_object + 7) < '\\0')) {\n          buffer_length = FUN_00003e9e(buffer,(int)*(short *)(data_object + (uint)index * 2),\n                                  (int)*(char *)(data_object + 7));\n          buffer[buffer_length] = 0;\n          FUN_00004c84(&DAT_000077dc,buffer);\n        }\n        else {\n          FUN_00004c84(\"%iE%i\",(int)*(short *)(data_object + (uint)index * 2),\n                       (int)*(char *)(data_object + 7));\n        }\n      }\n      else {\n        FUN_00004c84(\"%6d %c\",(int)*(short *)(data_object + (uint)index * 2),character);\n      }\n      data_type = FUN_00003810(*(undefined *)(data_object + 6));\n      FUN_00004c84(&DAT_000077e8,data_type);\n    }\n  }\n  return;\n}\n\n",
            "current_name": "display_data_object_00003694",
            "entrypoint": "0x00003694",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00003694": "display_data_object_00003694",
                "auStack_18": "buffer",
                "bVar4": "is_set",
                "cVar2": "flag",
                "local_10": "buffer_length",
                "local_9": "index",
                "local_a": "character",
                "param_1": "data_object",
                "param_2": "data_size",
                "uVar1": "data_type",
                "uVar3": "bit_mask"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00003810": {
            "additional_data": {
                "FUN_00003810": {
                    "get_address_from_parameter": 1,
                    "get_data_by_param": 1,
                    "get_data_pointer": 1,
                    "get_memory_address": 22,
                    "get_memory_location": 5
                },
                "param_1": {
                    "data_value": 1,
                    "input": 12,
                    "input_parameter": 1,
                    "input_value": 8,
                    "key": 1,
                    "param": 1,
                    "value": 7
                },
                "puVar1": {
                    "address": 3,
                    "address_ptr": 1,
                    "data": 1,
                    "data_pointer": 1,
                    "memory_address": 11,
                    "memory_location": 3,
                    "output": 1,
                    "result": 9,
                    "result_address": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00003694"
            ],
            "code": "\nundefined * get_memory_address_00003810(undefined input)\n\n{\n  undefined *memory_address;\n  \n  switch(input) {\n  case 2:\n    memory_address = &DAT_000077ec;\n    break;\n  case 3:\n    memory_address = &DAT_000077f0;\n    break;\n  case 4:\n    memory_address = &DAT_000077f4;\n    break;\n  case 5:\n    memory_address = &DAT_000077f8;\n    break;\n  case 6:\n    memory_address = &DAT_000077fc;\n    break;\n  case 7:\n    memory_address = (undefined *)0x7800;\n    break;\n  case 8:\n    memory_address = &DAT_00007804;\n    break;\n  case 9:\n    memory_address = &DAT_00007808;\n    break;\n  case 10:\n    memory_address = &DAT_0000780c;\n    break;\n  case 0xb:\n    memory_address = &DAT_00007810;\n    break;\n  case 0xc:\n    memory_address = &DAT_00007814;\n    break;\n  case 0xd:\n    memory_address = &DAT_00007818;\n    break;\n  case 0xe:\n    memory_address = &DAT_0000781c;\n    break;\n  case 0xf:\n    memory_address = &DAT_00007820;\n    break;\n  case 0x10:\n    memory_address = &DAT_00007824;\n    break;\n  case 0x11:\n    memory_address = &DAT_0000782c;\n    break;\n  default:\n    memory_address = &DAT_00007834;\n    break;\n  case 0x13:\n    memory_address = &DAT_00007830;\n    break;\n  case 0x15:\n    memory_address = &DAT_00007828;\n  }\n  return memory_address;\n}\n\n",
            "current_name": "get_memory_address_00003810",
            "entrypoint": "0x00003810",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00003810": "get_memory_address_00003810",
                "param_1": "input",
                "puVar1": "memory_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00003918": {
            "additional_data": {
                "0x47": {
                    "value_for9": 1
                },
                "0x4d": {
                    "value_for6": 1
                },
                "0x50": {
                    "value_for15": 1
                },
                "0x54": {
                    "value_for12": 1
                },
                "0x66": {
                    "value_for241": 1
                },
                "0x68": {
                    "value_for2": 1
                },
                "0x6b": {
                    "value_for3": 1
                },
                "0x6d": {
                    "value_for253": 1
                },
                "0x6e": {
                    "value_for247": 1
                },
                "0x70": {
                    "value_for244": 1
                },
                "0x75": {
                    "value_for250": 1
                },
                "FUN_00003918": {
                    "convert_param_to_value": 3,
                    "get_char_code": 5,
                    "get_char_from_param": 1,
                    "get_code_value": 1,
                    "get_mapped_value": 3,
                    "get_translated_character": 1,
                    "get_value_from_param": 1,
                    "map_input_to_char": 1,
                    "map_input_to_value": 1,
                    "map_param_to_value": 11,
                    "map_parameter_value": 2,
                    "translate_param": 1
                },
                "param_1": {
                    "character": 2,
                    "input": 9,
                    "input_character": 1,
                    "input_param": 2,
                    "input_value": 8,
                    "param": 6,
                    "parameter": 3
                },
                "uVar1": {
                    "char_code": 5,
                    "code_value": 1,
                    "converted_value": 1,
                    "mapped_char": 1,
                    "mapped_value": 10,
                    "output": 1,
                    "output_value": 6,
                    "result": 4,
                    "translated_character": 1,
                    "translated_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00003694"
            ],
            "code": "\nundefined4 map_param_to_value_00003918(undefined input)\n\n{\n  undefined4 mapped_value;\n  \n  switch(input) {\n  case 2:\n    mapped_value = 0x68;\n    break;\n  case 3:\n    mapped_value = 0x6b;\n    break;\n  case 6:\n    mapped_value = 0x4d;\n    break;\n  case 9:\n    mapped_value = 0x47;\n    break;\n  case 0xc:\n    mapped_value = 0x54;\n    break;\n  case 0xf:\n    mapped_value = 0x50;\n    break;\n  case 0xf1:\n    mapped_value = 0x66;\n    break;\n  default:\n    mapped_value = 0;\n    break;\n  case 0xf4:\n    mapped_value = 0x70;\n    break;\n  case 0xf7:\n    mapped_value = 0x6e;\n    break;\n  case 0xfa:\n    mapped_value = 0x75;\n    break;\n  case 0xfd:\n    mapped_value = 0x6d;\n  }\n  return mapped_value;\n}\n\n",
            "current_name": "map_param_to_value_00003918",
            "entrypoint": "0x00003918",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00003918": "map_param_to_value_00003918",
                "param_1": "input",
                "uVar1": "mapped_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000039e8": {
            "additional_data": {
                "FUN_000039e8": {
                    "classify_device_type": 2,
                    "convert_parameter_to_description": 1,
                    "decode_class": 1,
                    "get_class_from_param": 1,
                    "get_class_name": 7,
                    "get_class_or_sense_name": 1,
                    "get_class_string": 1,
                    "get_code_description": 1,
                    "get_description": 1,
                    "get_device_class": 1,
                    "get_device_class_name": 1,
                    "get_device_name": 3,
                    "get_device_string": 1,
                    "get_device_type": 1,
                    "get_device_type_name": 2,
                    "get_sensor_or_action_name": 1,
                    "get_type_name": 1,
                    "map_byte_to_class_name": 1,
                    "map_param_to_name": 2,
                    "translate_code": 1
                },
                "param_1": {
                    "byte_value": 1,
                    "character": 4,
                    "class_code": 6,
                    "class_id": 1,
                    "class_name": 1,
                    "class_value": 1,
                    "code": 1,
                    "device_class": 2,
                    "device_class_code": 1,
                    "device_code": 5,
                    "device_type": 3,
                    "input_char": 1,
                    "param": 2,
                    "parameter": 1,
                    "type": 1
                },
                "pcVar1": {
                    "class_name": 10,
                    "class_string": 1,
                    "description": 3,
                    "device_class": 1,
                    "device_class_name": 1,
                    "device_name": 3,
                    "device_string": 1,
                    "device_type": 2,
                    "device_type_name": 3,
                    "mapped_name": 1,
                    "name": 2,
                    "result": 1,
                    "translated_text": 1,
                    "type_name": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00002ecc",
                "FUN_00002f74"
            ],
            "code": "\nchar * get_device_class_name_000039e8(char class_code)\n\n{\n  char *class_name;\n  \n  switch(class_code) {\n  case '\\0':\n    class_name = \"CLASS_UNDEF\";\n    break;\n  case '@':\n    class_name = \"ACT_ANY\";\n    break;\n  case 'B':\n    class_name = \"ACT_LED_RGB\";\n    break;\n  case 'C':\n    class_name = \"ACT_SERVO\";\n    break;\n  case 'D':\n    class_name = \"ACT_MOTOR\";\n    break;\n  case 'E':\n    class_name = \"ACT_SWITCH\";\n    break;\n  case 'F':\n    class_name = \"ACT_DIMMER\";\n    break;\n  case -0x80:\n    class_name = \"SENSE_ANY\";\n    break;\n  case -0x7f:\n    class_name = \"SENSE_BTN\";\n    break;\n  case -0x7e:\n    class_name = \"SENSE_TEMP\";\n    break;\n  case -0x7d:\n    class_name = \"SENSE_HUM\";\n    break;\n  case -0x7c:\n    class_name = \"SENSE_LIGHT\";\n    break;\n  case -0x7b:\n    class_name = \"SENSE_ACCEL\";\n    break;\n  case -0x7a:\n    class_name = \"SENSE_MAG\";\n    break;\n  case -0x79:\n    class_name = \"SENSE_GYRO\";\n    break;\n  case -0x78:\n    class_name = \"SENSE_COLOR\";\n    break;\n  case -0x77:\n    class_name = \"SENSE_PRESS\";\n    break;\n  case -0x76:\n    class_name = \"SENSE_ANALOG\";\n    break;\n  case -0x75:\n    class_name = \"SENSE_UV\";\n    break;\n  case -0x74:\n    class_name = \"SENSE_OBJTEMP\";\n    break;\n  case -0x73:\n    class_name = \"SENSE_PULSE_COUNT\";\n    break;\n  case -0x72:\n    class_name = \"SENSE_DISTANCE\";\n    break;\n  case -0x71:\n    class_name = \"SENSE_CO2\";\n    break;\n  default:\n    if (class_code == -1) {\n      return \"CLASS_ANY\";\n    }\n  case '\\x01':\n  case '\\x02':\n  case '\\x03':\n  case '\\x04':\n  case '\\x05':\n  case '\\x06':\n  case '\\a':\n  case '\\b':\n  case '\\t':\n  case '\\n':\n  case '\\v':\n  case '\\f':\n  case '\\r':\n  case '\\x0e':\n  case '\\x0f':\n  case '\\x10':\n  case '\\x11':\n  case '\\x12':\n  case '\\x13':\n  case '\\x14':\n  case '\\x15':\n  case '\\x16':\n  case '\\x17':\n  case '\\x18':\n  case '\\x19':\n  case '\\x1a':\n  case '\\x1b':\n  case '\\x1c':\n  case '\\x1d':\n  case '\\x1e':\n  case '\\x1f':\n  case ' ':\n  case '!':\n  case '\\\"':\n  case '#':\n  case '$':\n  case '%':\n  case '&':\n  case '\\'':\n  case '(':\n  case ')':\n  case '*':\n  case '+':\n  case ',':\n  case '-':\n  case '.':\n  case '/':\n  case '0':\n  case '1':\n  case '2':\n  case '3':\n  case '4':\n  case '5':\n  case '6':\n  case '7':\n  case '8':\n  case '9':\n  case ':':\n  case ';':\n  case '<':\n  case '=':\n  case '>':\n  case '?':\n  case 'A':\n  case 'G':\n  case 'H':\n  case 'I':\n  case 'J':\n  case 'K':\n  case 'L':\n  case 'M':\n  case 'N':\n  case 'O':\n  case 'P':\n  case 'Q':\n  case 'R':\n  case 'S':\n  case 'T':\n  case 'U':\n  case 'V':\n  case 'W':\n  case 'X':\n  case 'Y':\n  case 'Z':\n  case '[':\n  case '\\':\n  case ']':\n  case '^':\n  case '_':\n  case '`':\n  case 'a':\n  case 'b':\n  case 'c':\n  case 'd':\n  case 'e':\n  case 'f':\n  case 'g':\n  case 'h':\n  case 'i':\n  case 'j':\n  case 'k':\n  case 'l':\n  case 'm':\n  case 'n':\n  case 'o':\n  case 'p':\n  case 'q':\n  case 'r':\n  case 's':\n  case 't':\n  case 'u':\n  case 'v':\n  case 'w':\n  case 'x':\n  case 'y':\n  case 'z':\n  case '{':\n  case '|':\n  case '}':\n  case '~':\n  case '\\x7f':\n    class_name = \"CLASS_UNKNOWN\";\n  }\n  return class_name;\n}\n\n",
            "current_name": "get_device_class_name_000039e8",
            "entrypoint": "0x000039e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000039e8": "get_device_class_name_000039e8",
                "param_1": "class_code",
                "pcVar1": "class_name"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00003d24": {
            "additional_data": {
                "FUN_00003d24": {
                    "find_element": 4,
                    "find_element_by_index": 4,
                    "find_element_in_list": 2,
                    "find_element_index": 1,
                    "find_first_occurrence": 1,
                    "find_first_value": 1,
                    "find_match_address": 1,
                    "find_nth_element": 8,
                    "find_nth_entry": 1,
                    "find_nth_item": 1,
                    "find_nth_linked_element": 1,
                    "find_nth_node": 1,
                    "find_nth_pointer": 2,
                    "find_target_node": 1,
                    "get_value_at_index": 1
                },
                "GIVEN_FUNCTION": {
                    "find_nth_element": 1
                },
                "local_10": {
                    "count": 19,
                    "counter": 7,
                    "current_index": 3,
                    "index": 1,
                    "occurrence_count": 1
                },
                "local_c": {
                    "current": 2,
                    "current_address": 2,
                    "current_element": 19,
                    "current_entry": 1,
                    "current_item": 1,
                    "current_node": 2,
                    "current_pointer": 2,
                    "current_value_ptr": 1,
                    "element": 1
                },
                "param_1": {
                    "element_count": 3,
                    "index": 5,
                    "list_size": 1,
                    "match_count": 1,
                    "max_occurrence": 1,
                    "n": 13,
                    "num_elements": 4,
                    "target_index": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_0000305c",
                "FUN_00002fe0"
            ],
            "code": "\nundefined4 * find_nth_linked_element_00003d24(int n)\n\n{\n  int count;\n  undefined4 *current_element;\n  \n  count = 0;\n  for (current_element = DAT_1fff0db0; (count < n && (current_element != (undefined4 *)0x0));\n      current_element = (undefined4 *)*current_element) {\n    count = count + 1;\n  }\n  return current_element;\n}\n\n",
            "current_name": "find_nth_linked_element_00003d24",
            "entrypoint": "0x00003d24",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00003d24": "find_nth_linked_element_00003d24",
                "local_10": "count",
                "local_c": "current_element",
                "param_1": "n"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00003d64": {
            "additional_data": {
                "FUN_00003d64": {
                    "call_nested_function": 1,
                    "execute_code": 1,
                    "execute_function": 25,
                    "execute_function_or_return_error": 1,
                    "perform_operation": 1,
                    "process_function": 1
                },
                "param_1": {
                    "func_ptr": 1,
                    "function_pointer": 21,
                    "function_ptr": 4,
                    "input": 4,
                    "input_value": 1
                },
                "param_2": {
                    "additional_param": 1,
                    "additional_parameter": 1,
                    "arg": 3,
                    "argument": 7,
                    "input": 1,
                    "input_data": 1,
                    "input_parameter": 5,
                    "input_value": 3,
                    "output": 1,
                    "param": 6,
                    "param_value": 2
                },
                "uVar1": {
                    "result": 11,
                    "return_value": 20
                }
            },
            "called": [],
            "calling": [
                "FUN_00002ecc"
            ],
            "code": "\nundefined4 execute_function_or_return_error_00003d64(int function_pointer,undefined4 argument)\n\n{\n  undefined4 return_value;\n  \n  if (function_pointer == 0) {\n    return_value = 0xffffffed;\n  }\n  else {\n    return_value = (***(code ***)(function_pointer + 0xc))(*(undefined4 *)(function_pointer + 4),argument);\n  }\n  return return_value;\n}\n\n",
            "current_name": "execute_function_or_return_error_00003d64",
            "entrypoint": "0x00003d64",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00003d64": "execute_function_or_return_error_00003d64",
                "param_1": "function_pointer",
                "param_2": "argument",
                "uVar1": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00003d94": {
            "additional_data": {
                "FUN_00003d94": {
                    "call_function_or_return_error": 1,
                    "check_function_result": 1,
                    "execute_callback": 1,
                    "execute_function": 20,
                    "execute_function_or_return_error": 1,
                    "execute_operation": 4,
                    "process_data": 2
                },
                "param_1": {
                    "arg1": 1,
                    "callback": 1,
                    "data": 1,
                    "data_ptr": 1,
                    "function_address": 1,
                    "function_pointer": 13,
                    "function_ptr": 2,
                    "input": 6,
                    "input_value": 3,
                    "operation": 2
                },
                "param_2": {
                    "additional_param": 1,
                    "additional_value": 1,
                    "arg": 1,
                    "arg2": 1,
                    "argument": 8,
                    "context": 1,
                    "data": 1,
                    "function_argument": 1,
                    "input_param": 1,
                    "input_parameter": 2,
                    "input_value": 2,
                    "param": 8,
                    "param_value": 1,
                    "value": 2
                },
                "uVar1": {
                    "result": 15,
                    "return_value": 15
                }
            },
            "called": [],
            "calling": [
                "FUN_0000305c"
            ],
            "code": "\nundefined4 execute_function_or_return_error_00003d94(int function_pointer,undefined4 argument)\n\n{\n  undefined4 return_value;\n  \n  if (function_pointer == 0) {\n    return_value = 0xffffffed;\n  }\n  else {\n    return_value = (**(code **)(*(int *)(function_pointer + 0xc) + 4))(*(undefined4 *)(function_pointer + 4),argument);\n  }\n  return return_value;\n}\n\n",
            "current_name": "execute_function_or_return_error_00003d94",
            "entrypoint": "0x00003d94",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00003d94": "execute_function_or_return_error_00003d94",
                "param_1": "function_pointer",
                "param_2": "argument",
                "uVar1": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00003dc4": {
            "additional_data": {
                "FUN_00003dc4": {
                    "calculate_digit_count": 1,
                    "calculate_digits": 2,
                    "calculate_num_digits": 1,
                    "convert_number_to_char_array": 1,
                    "convert_number_to_string": 2,
                    "count_digits": 21,
                    "get_digits_count": 1,
                    "get_number_of_digits": 1,
                    "number_to_digits": 1
                },
                "local_10": {
                    "base": 9,
                    "divisor": 2,
                    "factor": 1,
                    "increment": 1,
                    "modifier": 1,
                    "multiple": 1,
                    "multiplication_factor": 1,
                    "multiplier": 4,
                    "next_power_of_ten": 1,
                    "power_of10": 1,
                    "power_of_10": 2,
                    "power_of_ten": 6,
                    "tens": 1
                },
                "local_14": {
                    "buffer": 1,
                    "buffer_pointer": 1,
                    "char_array_ptr": 1,
                    "current_address": 2,
                    "current_char": 3,
                    "current_digit": 3,
                    "current_digit_ptr": 1,
                    "current_pointer": 1,
                    "current_position": 1,
                    "digit_array": 1,
                    "digit_pointer": 2,
                    "digit_ptr": 4,
                    "num_ptr": 1,
                    "output_ptr": 2,
                    "output_string": 1,
                    "ptr": 1,
                    "result_buffer": 1,
                    "result_string": 2,
                    "str_pointer": 1,
                    "str_ptr": 1
                },
                "local_20": {
                    "current_value": 1,
                    "remainder": 21,
                    "remaining": 1,
                    "remaining_number": 5,
                    "temp": 1,
                    "temp_number": 2
                },
                "local_c": {
                    "count": 1,
                    "digit_count": 27,
                    "num_digits": 3
                },
                "param_1": {
                    "array": 1,
                    "array_offset": 1,
                    "base_address": 2,
                    "initial_value": 1,
                    "input_offset": 3,
                    "input_string": 1,
                    "input_value": 1,
                    "num_array": 1,
                    "number": 1,
                    "number_buffer": 1,
                    "offset": 2,
                    "output_buffer": 4,
                    "prefix": 1,
                    "start_address": 2,
                    "start_position": 2,
                    "starting_address": 1,
                    "starting_pointer": 1,
                    "starting_position": 1,
                    "str_buffer": 1,
                    "string_pointer": 1,
                    "string_start": 1,
                    "target": 1
                },
                "param_2": {
                    "input_number": 1,
                    "input_value": 1,
                    "max_number": 1,
                    "max_value": 1,
                    "num": 1,
                    "number": 26
                }
            },
            "called": [],
            "calling": [
                "FUN_00003e58"
            ],
            "code": "\nint get_digits_count_00003dc4(int output_buffer,uint number)\n\n{\n  uint remainder;\n  char *digit_ptr;\n  uint base;\n  int digit_count;\n  \n  digit_count = 1;\n  if (number < 1000000000) {\n    for (base = 10; base <= number; base = base * 10) {\n      digit_count = digit_count + 1;\n    }\n  }\n  else {\n    digit_count = 10;\n  }\n  if (output_buffer != 0) {\n    digit_ptr = (char *)(digit_count + output_buffer);\n    remainder = number;\n    do {\n      digit_ptr = digit_ptr + -1;\n      *digit_ptr = (char)(remainder % 10) + '0';\n      remainder = remainder / 10;\n    } while (remainder != 0);\n  }\n  return digit_count;\n}\n\n",
            "current_name": "get_digits_count_00003dc4",
            "entrypoint": "0x00003dc4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00003dc4": "get_digits_count_00003dc4",
                "local_10": "base",
                "local_14": "digit_ptr",
                "local_20": "remainder",
                "local_c": "digit_count",
                "param_1": "output_buffer",
                "param_2": "number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00003e58": {
            "additional_data": {
                "FUN_00003dc4": {
                    "calculate_digit_sum": 1,
                    "calculate_sum": 5,
                    "compute_result": 1,
                    "compute_sum": 1,
                    "convert_to_absolute": 1,
                    "convert_to_ascii": 1,
                    "convert_to_signed_number": 1,
                    "convert_to_str": 1,
                    "format_string": 1,
                    "perform_calculation": 1,
                    "process_buffer": 1,
                    "process_string": 1,
                    "sum_digits": 1,
                    "sum_elements": 1
                },
                "FUN_00003e58": {
                    "calculate_abs_value": 1,
                    "calculate_absolute_value": 1,
                    "convert_integer_to_ascii": 2,
                    "convert_integer_to_string": 1,
                    "convert_number_to_negative": 1,
                    "convert_number_to_string": 2,
                    "convert_to_absolute_value": 1,
                    "convert_to_negative": 3,
                    "convert_to_negative_and_sum_digits": 1,
                    "convert_to_positive": 1,
                    "convert_to_positive_integer": 1,
                    "convert_to_signed_string": 1,
                    "invert_number_sign": 1,
                    "reverse_and_add": 5,
                    "reverse_and_sum": 7,
                    "reverse_number": 1,
                    "reverse_sign_and_compute": 1
                },
                "F_00003dc4": {
                    "calculate_sum": 1
                },
                "iVar1": {
                    "result": 6,
                    "sum": 1,
                    "sum_result": 1
                },
                "local_14": {
                    "adjusted_buffer": 1,
                    "adjusted_input": 1,
                    "altered_string": 1,
                    "array": 1,
                    "buffer_offset": 1,
                    "current_char": 1,
                    "input_array_offset": 1,
                    "modified_input_ptr": 1,
                    "modified_input_string": 3,
                    "modified_string": 5,
                    "new_output_buffer": 1,
                    "new_str": 2,
                    "new_string": 2,
                    "positive_string": 1,
                    "start_ptr": 1,
                    "str_ptr": 3,
                    "string_ptr": 2,
                    "updated_array": 1,
                    "updated_string_pointer": 1,
                    "updated_string_ptr": 1
                },
                "local_18": {
                    "abs_input_integer": 1,
                    "abs_input_number": 3,
                    "abs_input_value": 1,
                    "abs_num": 3,
                    "abs_number": 4,
                    "absolute_length": 1,
                    "absolute_num": 1,
                    "absolute_num_elements": 1,
                    "absolute_number": 2,
                    "absolute_value": 6,
                    "converted_number": 2,
                    "length": 2,
                    "negative_number": 1,
                    "positive_length": 1,
                    "positive_number": 1,
                    "updated_size": 1
                },
                "param_1": {
                    "buffer": 1,
                    "data_array": 1,
                    "input": 1,
                    "input_array": 3,
                    "input_buffer": 1,
                    "input_ptr": 1,
                    "input_string": 11,
                    "number": 1,
                    "output_buffer": 1,
                    "str": 5,
                    "str_buffer": 1,
                    "string": 3,
                    "string_pointer": 1
                },
                "param_2": {
                    "array_length": 2,
                    "base": 1,
                    "input_integer": 1,
                    "input_length": 2,
                    "input_number": 10,
                    "input_size": 1,
                    "input_value": 1,
                    "num": 4,
                    "num_elements": 1,
                    "number": 7,
                    "value": 1
                }
            },
            "called": [
                "FUN_00003dc4"
            ],
            "calling": [
                "FUN_00003ec4"
            ],
            "code": "\nint reverse_and_sum_00003e58(undefined *input_string,int input_number)\n\n{\n  int result;\n  int absolute_value;\n  undefined *modified_string;\n  \n  absolute_value = input_number;\n  modified_string = input_string;\n  if (-(input_number >> 0x1f) != 0) {\n    if (input_string != (undefined *)0x0) {\n      modified_string = input_string + 1;\n      *input_string = 0x2d;\n    }\n    absolute_value = -input_number;\n  }\n  result = FUN_00003dc4(modified_string,absolute_value);\n  return -(input_number >> 0x1f) + result;\n}\n\n",
            "current_name": "reverse_and_sum_00003e58",
            "entrypoint": "0x00003e58",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00003e58": "reverse_and_sum_00003e58",
                "iVar1": "result",
                "local_14": "modified_string",
                "local_18": "absolute_value",
                "param_1": "input_string",
                "param_2": "input_number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00003e9e": {
            "additional_data": {
                "FUN_00003e9e": {
                    "calculate_result": 1,
                    "decode_and_process_data": 1,
                    "decompiled_function": 1,
                    "do_something": 1,
                    "execute_function": 3,
                    "extract_data": 1,
                    "process_data": 15,
                    "process_function": 1
                },
                "FUN_00003ec4": {
                    "calculate_checksum": 2,
                    "calculate_result": 3,
                    "call_subfunction": 1,
                    "compute_result": 1,
                    "handle_data": 1,
                    "perform_calculation": 1,
                    "perform_conversion": 1,
                    "perform_operation": 1,
                    "process_data": 2,
                    "process_data_helper": 2,
                    "process_data_internal": 1,
                    "process_input": 1,
                    "reverse_bytes": 1,
                    "reverse_data": 1,
                    "reverse_helper": 1
                },
                "param_1": {
                    "arg_1": 1,
                    "argument1": 1,
                    "data": 10,
                    "input": 8,
                    "input1": 3,
                    "input_data": 4,
                    "input_param": 3,
                    "param": 1
                },
                "param_2": {
                    "arg_2": 1,
                    "argument2": 1,
                    "count": 3,
                    "data_size": 1,
                    "index": 1,
                    "input2": 3,
                    "input_value": 2,
                    "short_param": 1,
                    "short_value": 1,
                    "value": 17
                },
                "param_3": {
                    "additional_param": 1,
                    "another_parameter": 1,
                    "arg_3": 1,
                    "argument3": 1,
                    "config": 3,
                    "count": 1,
                    "data": 2,
                    "extra_param": 1,
                    "flag": 3,
                    "info": 1,
                    "input3": 3,
                    "input_user": 1,
                    "length": 1,
                    "option": 1,
                    "options": 1,
                    "output_param": 1,
                    "param": 2,
                    "settings": 1,
                    "size": 2,
                    "status": 2
                },
                "uVar1": {
                    "result": 5
                }
            },
            "called": [
                "FUN_00003ec4"
            ],
            "calling": [
                "FUN_00003694"
            ],
            "code": "\nundefined4 decode_and_process_data_00003e9e(undefined4 data,short value,undefined4 input3)\n\n{\n  undefined4 result;\n  \n  result = FUN_00003ec4(data,(int)value,input3);\n  return result;\n}\n\n",
            "current_name": "decode_and_process_data_00003e9e",
            "entrypoint": "0x00003e9e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00003e9e": "decode_and_process_data_00003e9e",
                "param_1": "data",
                "param_2": "value",
                "param_3": "input3",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00003ec4": {
            "additional_data": {
                "FUN_00000f04": {
                    "assertion_failed": 1,
                    "assertion_failure": 1,
                    "handle_assertion_failure": 1,
                    "print_error": 1,
                    "print_error_message": 1
                },
                "FUN_00003e58": {
                    "convert_decimal_to_string": 1,
                    "convert_number_to_base_string": 1,
                    "convert_number_to_string": 1,
                    "convert_to_base": 1,
                    "get_digit_count": 1
                },
                "FUN_00003ec4": {
                    "calculate_decimal_digits": 1,
                    "calculate_decimal_length": 2,
                    "calculate_number_string_length": 1,
                    "calculate_result": 2,
                    "convert_int_to_ascii": 1,
                    "convert_integer_to_string": 1,
                    "convert_num_to_str": 1,
                    "convert_number_to_ascii": 2,
                    "convert_number_to_string": 6,
                    "convert_number_to_string_with_base": 1,
                    "convert_to_decimal_string": 2,
                    "format_number": 2,
                    "parse_and_format_number": 1,
                    "parse_integer": 1,
                    "parse_number": 4,
                    "process_number": 2
                },
                "FUN_00003ff4": {
                    "convert_number_to_base_string": 1,
                    "convert_to_ascii": 1,
                    "print_digits": 1,
                    "write_number_with_base": 1
                },
                "FUN_00004622": {
                    "fill_buffer_with_character": 1,
                    "fill_with_character": 1,
                    "fill_with_zeros": 1,
                    "write_number": 1
                },
                "iVar1": {
                    "char_count": 1,
                    "conversion_result": 1,
                    "digit_count": 1,
                    "digits": 1,
                    "function_result": 1,
                    "result": 14,
                    "return_value": 3,
                    "temp": 3,
                    "temp_var1": 3
                },
                "local_10": {
                    "digit_remainder": 1,
                    "remainder": 30
                },
                "local_c": {
                    "count": 4,
                    "digit_count": 2,
                    "digits": 1,
                    "digits_consumed": 1,
                    "digits_count": 1,
                    "digits_written": 1,
                    "length": 3,
                    "num_characters": 2,
                    "num_chars": 3,
                    "num_digits": 1,
                    "num_written_digits": 1,
                    "offset": 1,
                    "output_length": 3,
                    "output_string_length": 2,
                    "position": 1,
                    "result": 1,
                    "result_length": 1,
                    "string_length": 1,
                    "total_char_count": 1
                },
                "param_1": {
                    "input_string": 1,
                    "output": 3,
                    "output_buffer": 11,
                    "output_str": 1,
                    "output_string": 14
                },
                "param_2": {
                    "decimal_number": 1,
                    "input_number": 10,
                    "input_value": 1,
                    "number": 16,
                    "string_length": 1,
                    "value": 1
                },
                "param_3": {
                    "base": 12,
                    "decimal_places": 5,
                    "num_digits": 9,
                    "num_divisors": 1,
                    "number_of_digits": 1,
                    "precision": 1,
                    "shift_amount": 1
                },
                "uVar2": {
                    "char_count_temp": 1,
                    "conversion_result": 3,
                    "conversion_result2": 1,
                    "conversion_string_length": 1,
                    "converted_number": 1,
                    "decimal_return_value": 1,
                    "digit_string_length": 1,
                    "digit_value": 1,
                    "digits_written": 2,
                    "length": 1,
                    "num_written_digits2": 1,
                    "result": 2,
                    "result2": 1,
                    "result_length": 1,
                    "temp": 2,
                    "temp2": 1,
                    "temp_result": 1,
                    "temp_value": 1,
                    "temp_var": 2,
                    "temp_var2": 3
                },
                "uVar3": {
                    "dividend": 1,
                    "division_result": 2,
                    "divisor": 6,
                    "quotient": 18,
                    "whole_number_part": 1
                }
            },
            "called": [
                "FUN_00004622",
                "FUN_00003e58",
                "FUN_00000f04",
                "FUN_00003ff4"
            ],
            "calling": [
                "FUN_00003e9e"
            ],
            "code": "\nint convert_number_to_string_with_base_00003ec4(undefined *output_string,uint number,int base)\n\n{\n  int result;\n  undefined4 temp_var2;\n  uint quotient;\n  int remainder;\n  int count;\n  \n  if (base + 7 < 0 != SCARRY4(base,7)) {\n    FUN_00000f04(3,\"FAILED ASSERTION.\");\n  }\n  count = 0;\n  if (base == 0) {\n    count = FUN_00003e58(output_string,number);\n  }\n  else if (base < 1) {\n    quotient = number / *(uint *)(&DAT_00007978 + base * -4);\n    remainder = number - *(uint *)(&DAT_00007978 + base * -4) * quotient;\n    if (remainder < 0) {\n      remainder = -remainder;\n    }\n    if ((quotient == 0) && ((int)number < 0)) {\n      if (output_string != (undefined *)0x0) {\n        *output_string = 0x2d;\n      }\n      count = 1;\n    }\n    if (output_string == (undefined *)0x0) {\n      result = FUN_00003e58(0,quotient);\n      count = result + 1 + count;\n    }\n    else {\n      result = FUN_00003e58(output_string + count,quotient);\n      result = count + result;\n      count = result + 1;\n      output_string[result] = 0x2e;\n      temp_var2 = FUN_00003e58(output_string + count,remainder);\n      FUN_00003ff4(output_string + count,temp_var2,-base,0x30);\n    }\n    count = -base + count;\n  }\n  else {\n    count = FUN_00003e58(output_string,number);\n    if (output_string != (undefined *)0x0) {\n      FUN_00004622(output_string + count,0x30,base);\n    }\n    count = base + count;\n  }\n  return count;\n}\n\n",
            "current_name": "convert_number_to_string_with_base_00003ec4",
            "entrypoint": "0x00003ec4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00003ec4": "convert_number_to_string_with_base_00003ec4",
                "iVar1": "result",
                "local_10": "remainder",
                "local_c": "count",
                "param_1": "output_string",
                "param_2": "number",
                "param_3": "base",
                "uVar2": "temp_var2",
                "uVar3": "quotient"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00003ff4": {
            "additional_data": {
                "FUN_00003ff4": {
                    "calculate_difference": 1,
                    "calculate_final_value": 1,
                    "calculate_max": 2,
                    "calculate_maximum": 1,
                    "calculate_minimum": 4,
                    "calculate_new_value": 5,
                    "calculate_range": 1,
                    "calculate_result": 2,
                    "calculate_value": 1,
                    "compare_and_call": 1,
                    "compare_and_update": 1,
                    "extract_and_calculate": 1,
                    "extract_and_process_data": 1,
                    "extract_and_reverse_compare": 1,
                    "extracted_function": 1,
                    "find_max_value": 1,
                    "process_and_return": 1,
                    "process_data": 1,
                    "update_if_greater": 1,
                    "update_if_less_than": 1,
                    "update_parameters": 1,
                    "update_variable": 1
                },
                "FUN_000045ee": {
                    "calculate_difference": 4,
                    "calculate_offset": 1,
                    "do_action1": 1,
                    "do_something_else": 1,
                    "func1": 1,
                    "modify_data": 1,
                    "perform_action2": 1,
                    "perform_operation1": 1,
                    "perform_operation2": 1,
                    "reverse_and_compare": 1,
                    "update_range": 1,
                    "update_values": 1
                },
                "FUN_00004622": {
                    "apply_transformation": 1,
                    "copy_data": 1,
                    "do_action2": 1,
                    "do_something": 1,
                    "func2": 1,
                    "perform_action": 1,
                    "perform_action1": 1,
                    "perform_operation": 2,
                    "perform_operation1": 1,
                    "perform_operation2": 1,
                    "process_data": 1,
                    "process_reversed_data": 1,
                    "update_data": 1,
                    "update_result": 1
                },
                "param_1": {
                    "additional_value": 1,
                    "comparison_value": 1,
                    "data_offset": 1,
                    "input1": 1,
                    "input_value": 11,
                    "new_value": 1,
                    "offset": 8,
                    "size": 1,
                    "start_address": 1,
                    "start_index": 1,
                    "start_value": 2,
                    "value1": 1,
                    "value_ptr": 1
                },
                "param_2": {
                    "current_address": 1,
                    "current_value": 3,
                    "current_value_ptr": 1,
                    "lower_bound": 3,
                    "source_length": 1,
                    "start": 6,
                    "start_address": 2,
                    "start_val": 1,
                    "start_value": 9,
                    "value1": 2,
                    "value2": 2
                },
                "param_3": {
                    "end": 6,
                    "end_address": 2,
                    "end_val": 1,
                    "end_value": 9,
                    "limit": 1,
                    "max_value": 1,
                    "target_address": 1,
                    "target_length": 1,
                    "target_value": 1,
                    "upper_bound": 3,
                    "value2": 2,
                    "value3": 2,
                    "value_count": 1
                },
                "param_4": {
                    "data": 4,
                    "param_4": 1,
                    "undefined": 3,
                    "undefined_4": 1,
                    "undefined_param": 14,
                    "undefined_parameter": 2,
                    "unknown": 1,
                    "unused_param": 2,
                    "value4": 1
                },
                "uVar1": {
                    "max_value": 2,
                    "minimum_address": 1,
                    "new_source_length": 1,
                    "new_value": 5,
                    "result": 6,
                    "return_value": 1,
                    "reversed_value": 1,
                    "updated_end": 1,
                    "updated_max_value": 1,
                    "updated_value": 2
                }
            },
            "called": [
                "FUN_00004622",
                "FUN_000045ee"
            ],
            "calling": [
                "FUN_00003ec4"
            ],
            "code": "\nuint calculate_new_value_00003ff4(int input_value,uint start_value,uint end_value,undefined undefined_param)\n\n{\n  uint result;\n  \n  result = start_value;\n  if ((start_value < end_value) && (result = end_value, input_value != 0)) {\n    FUN_000045ee((end_value - start_value) + input_value,input_value,start_value);\n    FUN_00004622(input_value,undefined_param,end_value - start_value);\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_new_value_00003ff4",
            "entrypoint": "0x00003ff4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00003ff4": "calculate_new_value_00003ff4",
                "param_1": "input_value",
                "param_2": "start_value",
                "param_3": "end_value",
                "param_4": "undefined_param",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00004042": {
            "additional_data": {
                "FUN_00004042": {
                    "initialize_bytes": 1,
                    "initialize_connection": 1,
                    "initialize_counter": 1,
                    "initialize_data": 9,
                    "initialize_function": 10,
                    "initialize_memory_range": 1,
                    "initialize_param": 1,
                    "initialize_parameters": 1,
                    "initialize_range": 2,
                    "initialize_timer": 1,
                    "initialize_values": 3
                },
                "FUN_00004f84": {
                    "call_sub_function": 1,
                    "configure_timer": 1,
                    "copy_bytes": 2,
                    "copy_bytes_to_data": 1,
                    "copy_data": 3,
                    "execute_operation": 1,
                    "fill_memory_range": 1,
                    "perform_operation": 1,
                    "process_bytes": 1,
                    "process_data": 15,
                    "send_data": 1,
                    "set_initial_values": 1,
                    "set_range": 1,
                    "update_counter": 1
                },
                "param_1": {
                    "buffer": 2,
                    "connection": 1,
                    "counter": 1,
                    "data": 11,
                    "data_array": 1,
                    "data_buffer": 1,
                    "data_pointer": 2,
                    "input": 1,
                    "input_param": 3,
                    "input_parameter": 3,
                    "memory_block": 1,
                    "param": 2,
                    "parameter": 1,
                    "timer": 1
                },
                "param_2": {
                    "buffer": 1,
                    "buffer_pointers": 1,
                    "byte_pointer_array": 1,
                    "data": 2,
                    "data_array": 2,
                    "data_list": 1,
                    "data_pointer": 4,
                    "data_ptr": 5,
                    "destination": 5,
                    "input_data": 1,
                    "operation_params": 1,
                    "output": 1,
                    "output_data": 1,
                    "pointer_array": 2,
                    "pointer_list": 1,
                    "source_pointer": 1
                },
                "param_3": {
                    "array_length": 3,
                    "buffer_size": 2,
                    "count": 1,
                    "data_size": 6,
                    "input_size": 1,
                    "length": 3,
                    "list_size": 1,
                    "num_bytes": 1,
                    "num_elements": 1,
                    "num_params": 1,
                    "size": 11
                }
            },
            "called": [
                "FUN_00004f84"
            ],
            "calling": [
                "FUN_0000305c",
                "FUN_00002fe0"
            ],
            "code": "\nvoid initialize_function_00004042(undefined4 data)\n\n{\n  FUN_00004f84(data,0,10);\n  return;\n}\n\n",
            "current_name": "initialize_function_00004042",
            "entrypoint": "0x00004042",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00004042": "initialize_function_00004042",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0000404c": {
            "additional_data": {
                "FUN_0000404c": {
                    "data_processing_function": 1,
                    "decode_and_process_data": 2,
                    "execute_command": 1,
                    "parse_data": 1,
                    "perform_operation": 1,
                    "process_binary_data": 1,
                    "process_data": 11
                },
                "FUN_00004b34": {
                    "cleanup_data": 2,
                    "cleanup_memory": 1,
                    "handle_exception": 1
                },
                "bVar9": {
                    "bool_val": 1,
                    "bool_value": 2,
                    "bool_var": 4,
                    "boolean1": 1,
                    "boolean_value": 1,
                    "boolean_variable": 1,
                    "condition_flag": 2,
                    "flag": 1,
                    "flag_bool": 1,
                    "is_true": 3,
                    "is_valid": 1,
                    "is_zero": 12,
                    "is_zero_value": 1
                },
                "iVar1": {
                    "count": 1,
                    "count1": 1,
                    "current_offset": 1,
                    "error_code": 1,
                    "int_value1": 1,
                    "iterator": 1,
                    "length": 2,
                    "result": 1,
                    "return_value": 3,
                    "temp1": 1,
                    "temp_1": 1,
                    "temp_int": 1,
                    "temp_var1": 7,
                    "temp_var_1": 1,
                    "temp_variable": 1,
                    "value": 3,
                    "var1": 2,
                    "variable1": 1,
                    "variable_1": 1
                },
                "iVar5": {
                    "count2": 1,
                    "increment": 1,
                    "int_value3": 1,
                    "iterator2": 1,
                    "offset": 1,
                    "offset_increment": 1,
                    "temp": 2,
                    "temp3": 1,
                    "temp_3": 1,
                    "temp_int2": 1,
                    "temp_value": 2,
                    "temp_value2": 1,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "temp_var3": 4,
                    "temp_var4": 1,
                    "temp_var5": 3,
                    "temp_var_3": 1,
                    "temp_variable_2": 1,
                    "var2": 1,
                    "var5": 2,
                    "variable3": 1,
                    "variable_4": 1
                },
                "iVar7": {
                    "count": 1,
                    "count3": 1,
                    "counter": 1,
                    "int_value4": 1,
                    "iterator3": 1,
                    "loop_count": 1,
                    "loop_counter": 1,
                    "remaining_length": 1,
                    "temp4": 1,
                    "temp_4": 1,
                    "temp_count": 1,
                    "temp_int3": 1,
                    "temp_value2": 1,
                    "temp_value3": 1,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temp_var4": 4,
                    "temp_var5": 1,
                    "temp_var6": 2,
                    "temp_var7": 1,
                    "temp_var_4": 1,
                    "temp_variable_3": 1,
                    "var3": 1,
                    "var7": 2,
                    "variable4": 1,
                    "variable_5": 1
                },
                "param_1": {
                    "array": 1,
                    "array_ptr": 1,
                    "buffer": 1,
                    "command_buffer": 1,
                    "data": 3,
                    "data_array": 2,
                    "data_buffer": 3,
                    "data_ptr": 1,
                    "input_array": 10,
                    "input_buffer": 1,
                    "input_data": 2,
                    "input_values": 1,
                    "param_array": 2,
                    "uint_array_ptr": 1,
                    "uint_pointer": 1
                },
                "param_2": {
                    "command_params": 1,
                    "config": 1,
                    "config_array": 1,
                    "config_params": 1,
                    "control_data": 2,
                    "data_array": 1,
                    "info": 2,
                    "info_array": 2,
                    "info_buffer": 1,
                    "info_ptr": 1,
                    "int_array_ptr": 1,
                    "int_pointer": 1,
                    "int_ptr": 1,
                    "metadata": 1,
                    "output_array": 3,
                    "output_data": 1,
                    "output_values": 1,
                    "param_array": 1,
                    "param_data": 1,
                    "param_int_array": 1,
                    "parameters": 2,
                    "parameters_array": 1,
                    "state_array": 2,
                    "state_buffer": 1
                },
                "pcVar6": {
                    "callback": 1,
                    "callback_func": 1,
                    "callback_function": 1,
                    "code_function": 1,
                    "func_ptr": 1,
                    "function_pointer": 11,
                    "function_ptr": 14,
                    "function_var": 1
                },
                "piVar2": {
                    "additional_info": 1,
                    "int_pointer2": 1,
                    "int_ptr2": 1,
                    "int_value2": 1,
                    "local_pointer": 1,
                    "ptr": 2,
                    "temp": 1,
                    "temp2": 1,
                    "temp_2": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 5,
                    "temp_ptr1": 1,
                    "temp_ptr_variable": 1,
                    "temp_var": 2,
                    "temp_var2": 6,
                    "temp_var_2": 1,
                    "var2": 2,
                    "variable2": 1,
                    "variable_2": 1
                },
                "sVar10": {
                    "temp_var4": 1
                },
                "uVar3": {
                    "bit_mask": 1,
                    "data_value": 1,
                    "length": 1,
                    "metadata_value": 1,
                    "param2_as_unsigned": 1,
                    "parameter_3_uint": 1,
                    "temp_uint_variable": 1,
                    "temp_value": 1,
                    "temp_var": 1,
                    "temp_var1": 2,
                    "temp_var2": 1,
                    "temp_var3": 3,
                    "ushort_data": 1,
                    "ushort_val": 2,
                    "ushort_value": 6,
                    "ushort_var": 2,
                    "value": 1,
                    "value1": 2,
                    "value2": 1,
                    "var3": 1
                },
                "uVar4": {
                    "flag": 1,
                    "flag_value": 1,
                    "flags": 3,
                    "flags_var": 1,
                    "info_value": 1,
                    "metadata_flags": 1,
                    "param2_first_short": 1,
                    "parameter_3": 1,
                    "state_flags": 1,
                    "status": 1,
                    "temp_ushort_variable": 1,
                    "temp_var2": 2,
                    "temp_var3": 1,
                    "temp_var4": 3,
                    "ushort_data_copy": 1,
                    "ushort_flag": 2,
                    "ushort_val_2": 1,
                    "ushort_value2": 2,
                    "ushort_var": 1,
                    "ushort_var2": 1,
                    "value2": 2,
                    "var1": 1,
                    "var4": 1
                },
                "uVar8": {
                    "original_input_value": 1,
                    "original_value": 1,
                    "saved_input": 1,
                    "temp": 1,
                    "temp_5": 1,
                    "temp_data": 1,
                    "temp_value": 3,
                    "temp_var2": 1,
                    "temp_var3": 2,
                    "temp_var4": 1,
                    "temp_var5": 4,
                    "temp_var6": 1,
                    "temp_var7": 2,
                    "temp_var8": 1,
                    "uint_val": 1,
                    "uint_value": 4,
                    "uint_var": 1,
                    "value3": 1,
                    "var4": 1,
                    "var8": 1,
                    "variable_3": 1
                }
            },
            "called": [
                "FUN_00004b34"
            ],
            "calling": [
                "FUN_00006768",
                "FUN_00004158"
            ],
            "code": "\nundefined4 decode_and_process_data_0000404c(uint *input_array,int *output_array)\n\n{\n  int temp_var1;\n  int *temp_var2;\n  uint ushort_value;\n  ushort temp_var4;\n  int temp_var3;\n  code *function_ptr;\n  int temp_var4;\n  uint uint_value;\n  bool is_zero;\n  \n  temp_var4 = *(ushort *)(output_array + 3);\n  ushort_value = (uint)temp_var4;\n  if ((int)(ushort_value << 0x1c) < 0) {\n    temp_var1 = output_array[4];\n    if (temp_var1 != 0) {\n      temp_var3 = ushort_value << 0x1e;\n      is_zero = temp_var3 == 0;\n      temp_var4 = *output_array;\n      if (is_zero) {\n        temp_var3 = output_array[5];\n      }\n      *output_array = temp_var1;\n      if (!is_zero) {\n        temp_var3 = 0;\n      }\n      output_array[2] = temp_var3;\n      for (temp_var4 = temp_var4 - temp_var1; 0 < temp_var4; temp_var4 = temp_var4 - temp_var3) {\n        temp_var3 = (*(code *)output_array[10])(input_array,output_array[8],temp_var1,temp_var4);\n        if (temp_var3 < 1) {\n          *(ushort *)(output_array + 3) = *(ushort *)(output_array + 3) | 0x40;\n          return 0xffffffff;\n        }\n        temp_var1 = temp_var1 + temp_var3;\n      }\n    }\n  }\n  else {\n    if ((output_array[1] < 1) && (output_array[0x10] < 1)) {\n      return 0;\n    }\n    function_ptr = (code *)output_array[0xb];\n    if (function_ptr == (code *)0x0) {\n      return 0;\n    }\n    uint_value = *input_array;\n    *input_array = 0;\n    if ((temp_var4 & 0x1000) == 0) {\n      temp_var1 = (*function_ptr)(input_array,output_array[8],ushort_value & 0x1000,1);\n      if ((temp_var1 == -1) && (ushort_value = *input_array, ushort_value != 0)) {\n        if ((ushort_value == 0x1d) || (ushort_value == 0x16)) {\n          *input_array = uint_value;\n          return 0;\n        }\n        temp_var4 = *(ushort *)(output_array + 3);\n        goto LAB_00004104;\n      }\n    }\n    else {\n      temp_var1 = output_array[0x15];\n    }\n    if (((int)((uint)*(ushort *)(output_array + 3) << 0x1d) < 0) &&\n       (temp_var1 = temp_var1 - output_array[1], output_array[0xd] != 0)) {\n      temp_var1 = temp_var1 - output_array[0x10];\n    }\n    temp_var1 = (*(code *)output_array[0xb])(input_array,output_array[8],temp_var1,0);\n    temp_var4 = *(ushort *)(output_array + 3);\n    if ((temp_var1 == -1) &&\n       ((0x1d < *input_array || (-1 < (int)((0x20400001U >> (*input_array & 0xff)) << 0x1f))))) {\nLAB_00004104:\n      *(ushort *)(output_array + 3) = temp_var4 | 0x40;\n      return 0xffffffff;\n    }\n    output_array[1] = 0;\n    *output_array = output_array[4];\n    if (((int)((uint)temp_var4 << 0x13) < 0) && ((temp_var1 != -1 || (*input_array == 0)))) {\n      output_array[0x15] = temp_var1;\n    }\n    temp_var2 = (int *)output_array[0xd];\n    *input_array = uint_value;\n    if (temp_var2 != (int *)0x0) {\n      if (temp_var2 != output_array + 0x11) {\n        FUN_00004b34(input_array);\n      }\n      output_array[0xd] = 0;\n      return 0;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "decode_and_process_data_0000404c",
            "entrypoint": "0x0000404c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0000404c": "decode_and_process_data_0000404c",
                "bVar9": "is_zero",
                "iVar1": "temp_var1",
                "iVar5": "temp_var3",
                "iVar7": "temp_var4",
                "param_1": "input_array",
                "param_2": "output_array",
                "pcVar6": "function_ptr",
                "piVar2": "temp_var2",
                "uVar3": "ushort_value",
                "uVar4": "temp_var4",
                "uVar8": "uint_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00004158": {
            "additional_data": {
                "DAT_00007998": {
                    "constant3": 1,
                    "ptr_data3": 1
                },
                "DAT_000079b8": {
                    "constant1": 1,
                    "ptr_data1": 1
                },
                "DAT_000079d8": {
                    "constant2": 1,
                    "ptr_data2": 1
                },
                "FUNC_000045e8": {
                    "additional_func": 1,
                    "do_another_thing": 1,
                    "do_something": 2,
                    "execute_subprocess": 1,
                    "handle_error": 1,
                    "perform_action1": 1,
                    "perform_operation1": 1,
                    "perform_task1": 1,
                    "process_data": 1,
                    "process_data_step1": 1,
                    "process_helper1": 1,
                    "reverse_data1": 1
                },
                "FUNC_000045ec": {
                    "cleanup": 1,
                    "cleanup_data": 2,
                    "cleanup_func": 1,
                    "cleanup_subprocess": 1,
                    "do_final_thing": 1,
                    "do_something_else": 1,
                    "perform_action2": 1,
                    "perform_operation2": 1,
                    "perform_task2": 1,
                    "process_data_step3": 1,
                    "process_helper3": 1,
                    "reverse_data2": 1
                },
                "FUN_0000404c": {
                    "calculate_value": 1,
                    "check_data": 1,
                    "process_data": 3,
                    "process_data_block": 1,
                    "process_data_entry": 1,
                    "process_data_step2": 1,
                    "process_sub_data": 2
                },
                "FUN_00004158": {
                    "check_and_execute_function": 1,
                    "check_and_process_data": 2,
                    "check_and_update_data": 1,
                    "check_and_update_param": 2,
                    "handle_function": 1,
                    "handle_param": 1,
                    "process_data": 15,
                    "process_function": 1,
                    "process_param": 2,
                    "reverse_check": 1,
                    "validate_and_process_data": 2
                },
                "FUN_000042a4": {
                    "do_something": 1,
                    "execute_operation": 1,
                    "handle_error": 3,
                    "handle_null": 2,
                    "handle_null_data": 1,
                    "perform_initialization": 1,
                    "perform_update": 1,
                    "process_condition": 1,
                    "process_data": 1,
                    "process_helper2": 1
                },
                "param_1": {
                    "arg1": 1,
                    "base_address": 1,
                    "data_container": 1,
                    "data_pointer": 6,
                    "data_ptr": 7,
                    "data_size": 1,
                    "input": 1,
                    "input_data": 1,
                    "input_param": 6,
                    "input_pointer": 1,
                    "input_ptr": 2,
                    "input_value": 2,
                    "param": 1
                },
                "param_2": {
                    "arg2": 1,
                    "config_ptr": 3,
                    "data": 2,
                    "data_array": 4,
                    "data_param": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "flags": 1,
                    "function_params": 1,
                    "info_ptr": 1,
                    "input_array": 3,
                    "metadata": 1,
                    "options_ptr": 1,
                    "output_param": 2,
                    "output_ptr": 1,
                    "param_array": 6,
                    "pointer_array": 1
                },
                "uVar1": {
                    "result": 13,
                    "return_value": 18
                }
            },
            "called": [
                "FUN_0000404c",
                "FUN_000045e8",
                "FUN_000042a4",
                "FUN_000045ec"
            ],
            "calling": [
                "FUN_00005404",
                "FUN_00006768",
                "FUN_000041d0"
            ],
            "code": "\nundefined4 validate_and_process_data_00004158(int data_ptr,undefined4 *param_array)\n\n{\n  undefined4 return_value;\n  \n  if (param_array[4] != 0) {\n    if ((data_ptr != 0) && (*(int *)(data_ptr + 0x18) == 0)) {\n      FUN_000042a4();\n    }\n    if (param_array == &DAT_000079b8) {\n      param_array = *(undefined4 **)(data_ptr + 4);\n    }\n    else if (param_array == (undefined4 *)&DAT_000079d8) {\n      param_array = *(undefined4 **)(data_ptr + 8);\n    }\n    else if (param_array == (undefined4 *)&DAT_00007998) {\n      param_array = *(undefined4 **)(data_ptr + 0xc);\n    }\n    if (*(short *)(param_array + 3) != 0) {\n      if ((-1 < (int)(param_array[0x19] << 0x1f)) && (-1 < (int)*(short *)(param_array + 3) << 0x16)) {\n        FUNC_000045e8(param_array[0x16]);\n      }\n      return_value = FUN_0000404c(data_ptr,param_array);\n      if ((int)(param_array[0x19] << 0x1f) < 0) {\n        return return_value;\n      }\n      if ((int)((uint)*(ushort *)(param_array + 3) << 0x16) < 0) {\n        return return_value;\n      }\n      FUNC_000045ec(param_array[0x16]);\n      return return_value;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "validate_and_process_data_00004158",
            "entrypoint": "0x00004158",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00004158": "validate_and_process_data_00004158",
                "param_1": "data_ptr",
                "param_2": "param_array",
                "uVar1": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000041d0": {
            "additional_data": {
                "DAT_000079f8": {
                    "data_1": 1,
                    "elf_base_addr": 1
                },
                "Elf32_Rel_ARRAY_1fff0200": {
                    "elf_array": 1,
                    "relocation_table": 1
                },
                "FUN_00004158": {
                    "apply_relocation": 1
                },
                "FUN_000041d0": {
                    "find_and_process_relocations": 2,
                    "process_binary": 1,
                    "process_binary_relocation_entries": 1,
                    "process_function": 1,
                    "process_rel_entries": 2,
                    "process_rel_section": 1,
                    "process_relocation_entries": 5,
                    "process_relocation_table": 1,
                    "process_relocations": 15,
                    "relocate_sections": 1
                },
                "iVar2": {
                    "count": 3,
                    "counter": 2,
                    "index": 3,
                    "loop_counter": 2,
                    "num_elements": 2,
                    "num_entries": 4,
                    "num_instructions": 1,
                    "num_offsets": 1,
                    "num_relocations": 3,
                    "offset": 1,
                    "rel_offset": 1,
                    "relocation_count": 2,
                    "short_value": 2,
                    "temp_var1": 1,
                    "tmp": 1
                },
                "iVar4": {
                    "current_entry": 3,
                    "current_entry_offset": 1,
                    "current_offset": 5,
                    "current_relocation": 1,
                    "entry": 4,
                    "offset_entry": 1,
                    "pointer_offset": 1,
                    "rel_entry": 3,
                    "rel_offset": 1,
                    "rel_offset_entry": 1,
                    "relocation_entry": 3,
                    "relocation_offset": 2,
                    "relocation_type": 1,
                    "relocation_value": 1,
                    "symbol_info": 1,
                    "temp_value": 1,
                    "temp_var2": 1
                },
                "iVar6": {
                    "count": 4,
                    "counter": 1,
                    "current_relocation_count": 1,
                    "inner_counter": 2,
                    "inner_loop_counter": 2,
                    "iteration_count": 2,
                    "loop_counter": 2,
                    "num_entries": 1,
                    "rel_count": 1,
                    "relocation_count": 1,
                    "relocation_index": 1,
                    "remaining": 1,
                    "remaining_count": 2,
                    "remaining_elements": 1,
                    "remaining_entries": 4,
                    "remaining_instructions": 1,
                    "remaining_relocations": 2,
                    "remaining_repetitions": 1,
                    "temp_var3": 1
                },
                "param_1": {
                    "address": 9,
                    "arg": 1,
                    "base_address": 8,
                    "entry_index": 1,
                    "entry_type": 1,
                    "input_value": 3,
                    "offset": 4,
                    "rel_entry_count": 1,
                    "section_id": 1,
                    "section_offset": 1,
                    "value_to_check": 1
                },
                "param_2": {
                    "address1": 1,
                    "arg1": 1,
                    "array": 2,
                    "base_address": 4,
                    "base_offset": 1,
                    "data": 1,
                    "elf_info": 1,
                    "offset": 5,
                    "param": 1,
                    "param2": 1,
                    "param_2": 4,
                    "r_offset": 1,
                    "rel": 1,
                    "rel_array": 1,
                    "rel_offset": 1,
                    "relocation_table": 2,
                    "size_of_image": 1,
                    "symbol_table": 1,
                    "unused_param_1": 1
                },
                "param_3": {
                    "address2": 1,
                    "arg2": 1,
                    "extra_offset": 1,
                    "offset": 1,
                    "param3": 1,
                    "param_3": 9,
                    "r_info": 1,
                    "rel_count": 1,
                    "rel_size": 1,
                    "size": 11,
                    "symbol_table_size": 1,
                    "unimportant_param": 1,
                    "unused_param_2": 1
                },
                "pdVar3": {
                    "current_entry": 4,
                    "current_rel_entry": 1,
                    "current_relocation": 1,
                    "pointer_to_dword": 1,
                    "rel_address": 1,
                    "rel_entries": 1,
                    "rel_entry": 3,
                    "rel_entry_ptr": 2,
                    "rel_ptr": 2,
                    "rel_table": 2,
                    "rel_table_entry": 1,
                    "rel_table_ptr": 1,
                    "relocation": 1,
                    "relocation_data": 1,
                    "relocation_entry": 7,
                    "relocation_pointer": 1,
                    "relocation_ptr": 1
                },
                "puVar7": {
                    "base_pointer": 1,
                    "data_ptr": 3,
                    "data_table": 1,
                    "elf_base": 1,
                    "extra_data_ptr": 1,
                    "function_pointer": 1,
                    "info_pointer": 1,
                    "pointer_to_undefined": 1,
                    "reloc_table": 1,
                    "relocation_base": 1,
                    "relocation_info": 1,
                    "relocation_info_array": 1,
                    "relocation_table": 1,
                    "section_data": 1,
                    "section_name": 1,
                    "some_data_pointer": 1,
                    "str_table": 2,
                    "string_pointer": 1,
                    "string_ptr": 1,
                    "sym_offset": 1,
                    "symbol_name": 1,
                    "symbol_table": 5,
                    "symbol_table_entry": 1,
                    "target_address_ptr": 1
                },
                "uVar1": {
                    "result": 26,
                    "result_flag": 1,
                    "result_flags": 1,
                    "sub_result": 1
                },
                "uVar5": {
                    "accumulated_result": 2,
                    "accumulator": 1,
                    "aggregate_result": 1,
                    "combined_result": 5,
                    "combined_results": 3,
                    "error_flags": 1,
                    "final_result": 3,
                    "output_value": 1,
                    "overall_flags": 1,
                    "overall_result": 1,
                    "result": 4,
                    "result_flags": 1,
                    "return_value": 1,
                    "total_result": 6
                }
            },
            "called": [
                "FUN_00004158"
            ],
            "calling": [
                "FUN_00002e48"
            ],
            "code": "\nuint find_and_process_relocations_000041d0(int address,undefined4 offset,undefined4 size)\n\n{\n  uint result;\n  int num_entries;\n  dword *relocation_entry;\n  int current_offset;\n  uint total_result;\n  int count;\n  undefined4 *symbol_table;\n  \n  if (address == 0) {\n    symbol_table = &DAT_000079f8;\n    relocation_entry = &relocation_table[0x19].r_info;\n    total_result = 0;\n    do {\n      count = relocation_entry[1];\n      current_offset = relocation_entry[2];\n      while (count = count + -1, -1 < count) {\n        if ((1 < *(ushort *)(current_offset + 0xc)) && (num_entries = *(short *)(current_offset + 0xe) + 1, num_entries != 0)) {\n          result = FUN_00004158(0x1fff0284,current_offset,size,num_entries,symbol_table);\n          total_result = total_result | result;\n        }\n        current_offset = current_offset + 0x68;\n      }\n      relocation_entry = (dword *)*relocation_entry;\n    } while (relocation_entry != (dword *)0x0);\n    return total_result;\n  }\n  total_result = FUN_00004158(relocation_table[16].r_offset,address);\n  return total_result;\n}\n\n",
            "current_name": "find_and_process_relocations_000041d0",
            "entrypoint": "0x000041d0",
            "imported": false,
            "improved": true,
            "renaming": {
                "Elf32_Rel_ARRAY_1fff0200": "relocation_table",
                "FUN_000041d0": "find_and_process_relocations_000041d0",
                "iVar2": "num_entries",
                "iVar4": "current_offset",
                "iVar6": "count",
                "param_1": "address",
                "param_2": "offset",
                "param_3": "size",
                "pdVar3": "relocation_entry",
                "puVar7": "symbol_table",
                "uVar1": "result",
                "uVar5": "total_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000041f4": {
            "additional_data": {
                "FUN_000041f4": {
                    "initialize_buffer": 1,
                    "initialize_data": 5,
                    "initialize_data_struct": 3,
                    "initialize_data_structure": 5,
                    "initialize_data_structures": 2,
                    "initialize_function": 1,
                    "initialize_memory": 1,
                    "initialize_param": 3,
                    "initialize_param_array": 1,
                    "initialize_param_values": 1,
                    "initialize_parameters": 5,
                    "initialize_params": 3
                },
                "FUN_00004622": {
                    "clear_memory": 1,
                    "fill_array_with_data": 1,
                    "fill_array_with_zeros": 3,
                    "fill_buffer": 1,
                    "fill_memory": 1,
                    "fill_with_data": 1,
                    "initialize_memory": 17,
                    "initialize_memory_region": 2,
                    "set_memory": 2,
                    "set_memory_range": 1
                },
                "LAB_00004e4a_1": {
                    "some_label": 2
                },
                "param_1": {
                    "array": 1,
                    "buffer": 1,
                    "data": 1,
                    "data_pointer": 1,
                    "data_structure": 2,
                    "mem_array": 1,
                    "mem_ptr": 1,
                    "memory": 9,
                    "memory_array": 1,
                    "memory_block": 3,
                    "memory_buffer": 1,
                    "memory_ptr": 1,
                    "memory_region": 1,
                    "parameters": 3,
                    "params": 2,
                    "ptr": 1,
                    "range_start": 1
                },
                "param_2": {
                    "default_value": 4,
                    "fill_value": 1,
                    "init_value": 1,
                    "initial_value": 4,
                    "param2_value": 1,
                    "parameter1": 1,
                    "val": 1,
                    "value": 12,
                    "value1": 3,
                    "value_1": 1,
                    "zero": 1,
                    "zero_value": 1
                },
                "param_3": {
                    "data_size": 1,
                    "fill_length": 1,
                    "length": 5,
                    "num_bytes": 3,
                    "num_elements": 1,
                    "param3_value": 1,
                    "parameter2": 1,
                    "size": 14,
                    "value2": 3,
                    "value_2": 1
                }
            },
            "called": [
                "FUN_00004622"
            ],
            "calling": [
                "FUN_000042a4"
            ],
            "code": "\nvoid initialize_data_structure_000041f4(undefined4 *memory,undefined2 value,undefined2 size)\n\n{\n  *memory = 0;\n  memory[1] = 0;\n  memory[4] = 0;\n  memory[5] = 0;\n  memory[2] = 0;\n  *(undefined2 *)(memory + 3) = value;\n  memory[0x19] = 0;\n  *(undefined2 *)((int)memory + 0xe) = size;\n  memory[6] = 0;\n  FUN_00004622(memory + 0x17,0,8);\n  memory[9] = 0x4dc9;\n  memory[10] = 0x4def;\n  memory[0xb] = 0x4e27;\n  memory[8] = memory;\n  memory[0xc] = &some_label;\n  return;\n}\n\n",
            "current_name": "initialize_data_structure_000041f4",
            "entrypoint": "0x000041f4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000041f4": "initialize_data_structure_000041f4",
                "LAB_00004e4a_1": "some_label",
                "param_1": "memory",
                "param_2": "value",
                "param_3": "size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00004248": {
            "additional_data": {
                "FUN_00004248": {
                    "init_data_structure": 1,
                    "initialize_array": 7,
                    "initialize_buffer": 1,
                    "initialize_data": 3,
                    "initialize_data_structure": 18,
                    "initialize_memory_block": 1
                },
                "FUN_00004622": {
                    "clear_memory": 1,
                    "fill_array": 2,
                    "fill_array_with_zeros": 2,
                    "initialize_memory": 11,
                    "initialize_values": 1
                },
                "FUN_00004bd0": {
                    "allocate_memory": 16,
                    "allocate_memory_block": 1
                },
                "iVar2": {
                    "buffer_offset": 1,
                    "index": 5,
                    "last_index": 1,
                    "offset": 24
                },
                "param_1": {
                    "array": 5,
                    "array_ptr": 2,
                    "buffer": 1,
                    "data": 13,
                    "data_pointer": 3,
                    "data_structure": 1,
                    "input": 1,
                    "input_data": 3,
                    "input_value": 1,
                    "param": 1
                },
                "param_2": {
                    "block_size": 1,
                    "count": 6,
                    "num_elements": 1,
                    "size": 23
                },
                "param_3": {
                    "arg3": 1,
                    "block_size": 1,
                    "offset": 3,
                    "param3": 2
                },
                "param_4": {
                    "arg4": 1,
                    "data": 1,
                    "extra_param": 3,
                    "param4": 2
                },
                "puVar1": {
                    "data_pointer": 2,
                    "data_structure": 2,
                    "memory_block": 1,
                    "new_array": 4,
                    "new_array_ptr": 1,
                    "new_buffer": 1,
                    "new_data_pointer": 2,
                    "pointer": 2,
                    "ptr": 8,
                    "ptr_data": 2,
                    "ptr_to_data": 1,
                    "result": 2,
                    "result_pointer": 1,
                    "result_ptr": 1,
                    "structure_pointer": 1
                }
            },
            "called": [
                "FUN_00004622",
                "FUN_00004bd0"
            ],
            "calling": [
                "FUN_00004314"
            ],
            "code": "\nundefined4 * initialize_data_structure_00004248(undefined4 data,int size)\n\n{\n  undefined4 *ptr;\n  int offset;\n  \n  offset = (size + -1) * 0x68;\n  ptr = (undefined4 *)FUN_00004bd0(data,offset + 0x74);\n  if (ptr != (undefined4 *)0x0) {\n    *ptr = 0;\n    ptr[1] = size;\n    ptr[2] = ptr + 3;\n    FUN_00004622(ptr + 3,0,offset + 0x68);\n  }\n  return ptr;\n}\n\n",
            "current_name": "initialize_data_structure_00004248",
            "entrypoint": "0x00004248",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00004248": "initialize_data_structure_00004248",
                "iVar2": "offset",
                "param_1": "data",
                "param_2": "size",
                "puVar1": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00004274": {
            "additional_data": {
                "FUNC_000045e8": {
                    "execute_data_initialization": 1,
                    "handle_data": 1,
                    "load_data": 1,
                    "process_data": 27,
                    "update_data": 1
                },
                "FUN_00004274": {
                    "initialize_data": 29,
                    "initialize_data_structures": 1,
                    "initialize_memory": 1
                }
            },
            "called": [
                "FUN_000045e8"
            ],
            "calling": [
                "FUN_00004314"
            ],
            "code": "\nvoid initialize_data_structures_00004274(void)\n\n{\n  FUNC_000045e8(&DAT_1fff0dec);\n  return;\n}\n\n",
            "current_name": "initialize_data_structures_00004274",
            "entrypoint": "0x00004274",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00004274": "initialize_data_structures_00004274"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00004280": {
            "additional_data": {
                "FUNC_000045ec": {
                    "execute_initialization": 1,
                    "initialize_data": 1,
                    "invoke_subfunction": 1,
                    "perform_system_initialization": 1,
                    "process_data": 26
                },
                "FUN_00004280": {
                    "initialize_data": 27,
                    "initialize_function": 1,
                    "initialize_system": 2,
                    "perform_initialization": 1
                }
            },
            "called": [
                "FUN_000045ec"
            ],
            "calling": [
                "FUN_00004314"
            ],
            "code": "\nvoid initialize_data_00004280(void)\n\n{\n  FUNC_000045ec(&DAT_1fff0dec);\n  return;\n}\n\n",
            "current_name": "initialize_data_00004280",
            "entrypoint": "0x00004280",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00004280": "initialize_data_00004280"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0000428c": {
            "additional_data": {
                "0x1fff0de7": {
                    "config_value": 1
                },
                "FUNC_000045e8": {
                    "call_api": 1,
                    "call_subfunction": 1,
                    "configure_device": 1,
                    "configure_hardware": 2,
                    "configure_peripheral": 1,
                    "configure_sensor": 1,
                    "configure_settings": 2,
                    "execute_configuration": 1,
                    "execute_task": 1,
                    "initialize_device": 1,
                    "perform_action": 1,
                    "perform_initialization": 1,
                    "perform_memory_operation": 1,
                    "perform_operation": 1,
                    "perform_task": 1,
                    "set_configuration": 1,
                    "set_configuration_parameter": 1,
                    "set_device_configuration": 1,
                    "set_memory_address": 2,
                    "set_memory_location": 1,
                    "set_memory_value": 4,
                    "write_data_to_memory": 1,
                    "write_to_memory": 2,
                    "write_value": 1
                },
                "FUN_0000428c": {
                    "execute_function": 1,
                    "execute_initialization": 1,
                    "initialize_configuration": 2,
                    "initialize_data": 3,
                    "initialize_device": 1,
                    "initialize_hardware": 1,
                    "initialize_memory": 14,
                    "initialize_sensor": 1,
                    "initialize_system": 5,
                    "load_configuration": 1
                },
                "FUn_0000428c": {
                    "initialize_data": 1
                }
            },
            "called": [
                "FUN_000045e8"
            ],
            "calling": [
                "FUN_000042a4"
            ],
            "code": "\nvoid initialize_memory_0000428c(void)\n\n{\n  FUNC_000045e8(0x1fff0de7);\n  return;\n}\n\n",
            "current_name": "initialize_memory_0000428c",
            "entrypoint": "0x0000428c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0000428c": "initialize_memory_0000428c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000042a4": {
            "additional_data": {
                "0x12": {
                    "configuration_value": 1,
                    "constant_value": 1
                },
                "0x18": {
                    "initialized": 1
                },
                "0x1fff0284": {
                    "configuration_constant": 1,
                    "special_value": 1
                },
                "0x1fff0de7": {
                    "action_constant": 1,
                    "argument_value": 1,
                    "constant_value": 1,
                    "value": 1
                },
                "0x28": {
                    "configuration_ptr": 1
                },
                "0x48": {
                    "value1": 1
                },
                "0x4c": {
                    "value2": 1
                },
                "0x50": {
                    "value3": 1
                },
                "FUNC_000045ec": {
                    "call_function": 1,
                    "execute_action": 2,
                    "execute_finalization": 1,
                    "execute_function": 1,
                    "execute_operation": 1,
                    "execute_task": 1,
                    "finalize_execution": 1,
                    "finalize_initialization": 1,
                    "finalize_operation": 1,
                    "finalize_process": 3,
                    "perform_action": 7,
                    "perform_cleanup": 1,
                    "perform_final_action": 1,
                    "perform_task": 2,
                    "post_process": 1,
                    "process_data": 3,
                    "secondary_function": 1,
                    "send_command": 1
                },
                "FUN_000041f4": {
                    "configure_data": 1,
                    "configure_device": 1,
                    "configure_parameter": 2,
                    "configure_resource": 1,
                    "configure_value": 1,
                    "execute_sub_function2": 1,
                    "operation_function": 1,
                    "perform_action": 1,
                    "set_config": 1,
                    "set_configuration": 2,
                    "set_data": 2,
                    "set_field_value": 1,
                    "set_flag": 1,
                    "set_initial_value": 1,
                    "set_memory": 2,
                    "set_param": 1,
                    "set_parameter": 1,
                    "set_parameters": 1,
                    "set_params": 2,
                    "set_values": 6
                },
                "FUN_0000428c": {
                    "do_initial_setup": 1,
                    "do_initialization": 2,
                    "do_something": 1,
                    "execute_preparation": 1,
                    "execute_preparations": 1,
                    "initialize": 5,
                    "initialize_components": 1,
                    "initialize_function": 2,
                    "initialize_helper": 1,
                    "initialize_memory": 1,
                    "initialize_resource": 1,
                    "initialize_subsystems": 4,
                    "initialize_utility": 1,
                    "perform_initialization": 6,
                    "perform_preparation": 1,
                    "pre_process": 1,
                    "preliminary_function": 1
                },
                "FUN_000042a4": {
                    "initialize_data": 12,
                    "initialize_data_structure": 3,
                    "initialize_device": 2,
                    "initialize_func": 1,
                    "initialize_function": 7,
                    "initialize_param": 1,
                    "initialize_parameters": 3,
                    "initialize_params": 2
                },
                "FUN_00004314": {
                    "allocate_memory": 4,
                    "calculate_value": 3,
                    "execute_sub_function": 2,
                    "get_data_value": 1,
                    "get_initial_value": 1,
                    "get_initialized_value": 1,
                    "get_new_value": 1,
                    "get_pointer": 1,
                    "get_result": 2,
                    "get_value": 1,
                    "obtain_data": 1,
                    "process_data": 5,
                    "process_parameter": 1,
                    "repetitive_operation": 1,
                    "retrieve_data": 3,
                    "retrieve_value": 1,
                    "set_default_value": 1
                },
                "FUN_00004314_param_1": {
                    "param": 1
                },
                "FUN_00004314_result": {
                    "result": 1
                },
                "param_1": {
                    "address": 1,
                    "arg": 1,
                    "data": 1,
                    "data_pointer": 5,
                    "data_ptr": 1,
                    "data_struct": 2,
                    "data_structure": 3,
                    "data_structure_ptr": 1,
                    "device_address": 1,
                    "device_handle": 1,
                    "function_param": 3,
                    "function_parameter": 1,
                    "param": 6
                },
                "param_2": {
                    "value1": 1
                },
                "param_3": {
                    "value2": 1
                },
                "uVar1": {
                    "default_address": 1,
                    "default_value": 7,
                    "error_code": 1,
                    "flag": 1,
                    "initial_value": 2,
                    "result": 3,
                    "return_value": 2,
                    "status": 4,
                    "temp_value": 1,
                    "temp_var": 1,
                    "updated_var": 1,
                    "value": 1,
                    "variable1": 1
                }
            },
            "called": [
                "FUN_0000428c",
                "FUN_000041f4",
                "FUN_000045ec",
                "FUN_00004314"
            ],
            "calling": [
                "FUN_000054a8",
                "FUN_00004cb4",
                "FUN_00004db8",
                "FUN_00005404",
                "FUN_00004418",
                "FUN_00006768",
                "FUN_00004158",
                "FUN_00004c84",
                "FUN_000057f8",
                "FUN_00005e10",
                "FUN_00004314"
            ],
            "code": "\nvoid initialize_data_structure_000042a4(int param)\n\n{\n  undefined4 default_value;\n  \n  FUN_0000428c();\n  if (*(int *)(param + 0x18) == 0) {\n    *(undefined4 *)(param + 0x48) = 0;\n    *(undefined4 *)(param + 0x4c) = 0;\n    *(undefined4 *)(param + 0x50) = 0;\n    default_value = 0x1fff0284;\n    *(undefined **)(param + 0x28) = &DAT_0000423d;\n    if (param == 0x1fff0284) {\n      default_value = 1;\n    }\n    if (param == 0x1fff0284) {\n      *(undefined4 *)(param + 0x18) = default_value;\n    }\n    default_value = FUN_00004314(param);\n    *(undefined4 *)(param + 4) = default_value;\n    default_value = FUN_00004314(param);\n    *(undefined4 *)(param + 8) = default_value;\n    default_value = FUN_00004314(param);\n    *(undefined4 *)(param + 0xc) = default_value;\n    FUN_000041f4(*(undefined4 *)(param + 4),4,0);\n    FUN_000041f4(*(undefined4 *)(param + 8),9,1);\n    FUN_000041f4(*(undefined4 *)(param + 0xc),0x12,2);\n    *(undefined4 *)(param + 0x18) = 1;\n  }\n  FUNC_000045ec(0x1fff0de7);\n  return;\n}\n\n",
            "current_name": "initialize_data_structure_000042a4",
            "entrypoint": "0x000042a4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000042a4": "initialize_data_structure_000042a4",
                "param_1": "param",
                "uVar1": "default_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00004314": {
            "additional_data": {
                "Elf32_Rel_ARRAY_1fff0200": {
                    "array": 2,
                    "array_of_entries": 1,
                    "data_array": 1,
                    "elf32_rel_array": 1,
                    "elf_array": 1,
                    "elf_linked_list": 1,
                    "rel_array": 4,
                    "relocation_array": 2
                },
                "FUNC_000045e4": {
                    "helper_function1": 1,
                    "perform_action": 1,
                    "perform_computation": 1,
                    "perform_operation": 2,
                    "process_data": 1,
                    "process_element": 3,
                    "process_logic": 1,
                    "process_subfunction": 1,
                    "update_data": 1
                },
                "FUNC_00004622": {
                    "function3": 1,
                    "initialize_memory": 1
                },
                "FUN_00004248": {
                    "allocate_memory": 6,
                    "calculate_value": 1,
                    "get_index": 1,
                    "helper_function4": 1
                },
                "FUN_00004274": {
                    "do_something": 1,
                    "initialize": 5,
                    "initialize_data": 2,
                    "initialize_function": 1,
                    "initialize_system": 1,
                    "initialize_variables": 1,
                    "perform_initialization": 1,
                    "preliminary_setup": 1
                },
                "FUN_00004280": {
                    "clean_up": 1,
                    "cleanup": 8,
                    "cleanup_process": 1,
                    "cleanup_subfunction": 1,
                    "function2": 1,
                    "helper_function2": 1
                },
                "FUN_000042a4": {
                    "handle_error": 8,
                    "handle_missing_info": 1,
                    "perform_action": 1,
                    "print_error": 1,
                    "print_warning_message": 1,
                    "secondary_setup": 1
                },
                "FUN_00004314": {
                    "decode_elf32_rel": 1,
                    "extract_function_data": 1,
                    "parse_relocation_array": 1,
                    "process_relocation_table": 1,
                    "process_relocations": 1
                },
                "FUN_000045e4": {
                    "function1": 1,
                    "perform_computation": 1
                },
                "FUN_00004622": {
                    "fill_memory": 1,
                    "fill_memory_range": 1,
                    "helper_function3": 1,
                    "initialize_buffer": 2,
                    "initialize_memory": 4,
                    "initialize_subfunction": 1
                },
                "F_UNDECODED": {
                    "decode_and_initialize": 1
                },
                "F_UNDECODED_HELPER": {
                    "search_decode_key": 1
                },
                "dVar1": {
                    "computed_index": 1,
                    "d_val": 1,
                    "d_word_var1": 1,
                    "decoded_value": 1,
                    "dword_value": 1,
                    "dynamic_value": 1,
                    "dynamic_var1": 2,
                    "new_offset": 1,
                    "new_value": 1,
                    "result": 12,
                    "return_val": 1,
                    "return_value": 3,
                    "temp_d_var1": 1,
                    "temp_result": 1,
                    "temp_value": 1,
                    "temp_var": 2
                },
                "dword": {
                    "uint32": 1,
                    "unsigned_int": 1
                },
                "iVar2": {
                    "count": 5,
                    "counter": 4,
                    "index": 3,
                    "index_var": 1,
                    "index_variable": 1,
                    "int_var2": 1,
                    "iteration": 1,
                    "iteration_count": 2,
                    "iteration_counter": 1,
                    "iterations": 1,
                    "loop_counter": 8,
                    "loop_var": 1,
                    "num_iterations": 1,
                    "size": 1
                },
                "param_1": {
                    "function_data": 1,
                    "input_array": 7,
                    "input_params": 1,
                    "original_array": 1,
                    "output_array": 1,
                    "param": 5,
                    "param_1": 1,
                    "param_array": 5,
                    "param_pointer": 1,
                    "parameter": 1,
                    "ptr_array": 1,
                    "result": 3,
                    "result_array": 1,
                    "result_buffer": 1,
                    "result_pointer": 1
                },
                "param_2": {
                    "memory_value": 1,
                    "param2": 1
                },
                "param_3": {
                    "memory_size": 1,
                    "param3": 1
                },
                "pdVar4": {
                    "array_pointer": 1,
                    "current_data": 1,
                    "current_entry": 1,
                    "current_entry_pointer": 1,
                    "current_node": 3,
                    "current_rel_array_entry": 1,
                    "current_rel_entry": 1,
                    "current_rel_info": 2,
                    "current_rel_ptr": 1,
                    "current_reloc_entry": 1,
                    "current_relocation": 2,
                    "p_linked_list": 1,
                    "p_rel_info": 1,
                    "pointer_array": 1,
                    "pointer_data_var": 1,
                    "pointer_to_dword": 1,
                    "pointer_to_dword_var": 1,
                    "pointer_var4": 1,
                    "ptr": 1,
                    "ptr_array_element": 1,
                    "rel_array": 2,
                    "rel_array_pointer": 2,
                    "rel_info": 1,
                    "relocation_ptr": 1,
                    "temp_pd_var4": 1
                },
                "puVar3": {
                    "array_pointer": 1,
                    "current_data_pointer": 1,
                    "current_element": 7,
                    "current_entry": 1,
                    "current_item": 1,
                    "current_pointer": 3,
                    "current_ptr": 1,
                    "data": 1,
                    "data_pointer": 2,
                    "entry": 1,
                    "p_iterator": 1,
                    "p_rel": 1,
                    "pointer": 2,
                    "pointer_var": 3,
                    "pointer_var3": 1,
                    "ptr": 1,
                    "ptr_var": 1,
                    "temp_array": 1,
                    "temp_pu_var3": 1
                },
                "r_info": {
                    "info": 1
                },
                "short": {
                    "short_integer": 2
                },
                "undefined4": {
                    "uint32": 1
                }
            },
            "called": [
                "FUN_00004274",
                "FUN_00004622",
                "FUN_000045e4",
                "FUN_000042a4",
                "FUN_00004248",
                "FUN_00004280"
            ],
            "calling": [
                "FUN_000042a4"
            ],
            "code": "\nuint32 * process_relocation_table_00004314(uint32 *input_array)\n\n{\n  uint32 result;\n  int loop_counter;\n  uint32 *current_element;\n  uint32 *current_node;\n  \n  FUN_00004274();\n  if (rel_array[19].info == 0) {\n    FUN_000042a4(0x1fff0284);\n  }\n  current_node = &rel_array[0x19].info;\n  do {\n    loop_counter = current_node[1];\n    current_element = (uint32 *)current_node[2];\n    while (loop_counter = loop_counter + -1, -1 < loop_counter) {\n      if (*(short_integer *)(current_element + 3) == 0) {\n        current_element[3] = 0xffff0001;\n        current_element[0x19] = 0;\n        FUNC_000045e4(current_element + 0x16);\n        FUN_00004280();\n        current_element[1] = 0;\n        current_element[2] = 0;\n        current_element[4] = 0;\n        current_element[5] = 0;\n        *current_element = 0;\n        current_element[6] = 0;\n        FUN_00004622(current_element + 0x17,0,8);\n        current_element[0xd] = 0;\n        current_element[0xe] = 0;\n        current_element[0x12] = 0;\n        current_element[0x13] = 0;\n        return current_element;\n      }\n      current_element = current_element + 0x1a;\n    }\n    if (*current_node == 0) {\n      result = FUN_00004248(input_array,4);\n      *current_node = result;\n      if (result == 0) {\n        FUN_00004280();\n        *input_array = 0xc;\n        return (uint32 *)0x0;\n      }\n    }\n    current_node = (uint32 *)*current_node;\n  } while( true );\n}\n\n",
            "current_name": "process_relocation_table_00004314",
            "entrypoint": "0x00004314",
            "imported": false,
            "improved": true,
            "renaming": {
                "Elf32_Rel_ARRAY_1fff0200": "rel_array",
                "FUN_00004314": "process_relocation_table_00004314",
                "dVar1": "result",
                "dword": "uint32",
                "iVar2": "loop_counter",
                "param_1": "input_array",
                "pdVar4": "current_node",
                "puVar3": "current_element",
                "r_info": "info",
                "short": "short_integer",
                "undefined4": "uint32"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000043a0": {
            "additional_data": {
                "FUN_000043a0": {
                    "calculate_checksum": 1,
                    "calculate_flag": 1,
                    "calculate_function": 1,
                    "calculate_sum": 1,
                    "calculate_union": 1,
                    "check_and_execute_functions": 1,
                    "check_conditions": 1,
                    "extract_and_execute": 1,
                    "extract_and_process_data": 1,
                    "find_and_execute_code": 3,
                    "find_flags": 2,
                    "find_matching_elements": 1,
                    "find_valid_indices": 1,
                    "perform_operation": 1,
                    "process_data": 13
                },
                "iVar3": {
                    "child_node": 1,
                    "code_address": 1,
                    "count": 4,
                    "counter": 1,
                    "current_address": 3,
                    "current_data_offset": 1,
                    "current_element": 2,
                    "current_item": 1,
                    "current_offset": 1,
                    "current_value": 1,
                    "function_entry": 1,
                    "index": 2,
                    "inner_count": 1,
                    "inner_index": 1,
                    "inner_loop_counter": 1,
                    "inner_var1": 1,
                    "item_ptr": 1,
                    "node_data": 1,
                    "offset": 2,
                    "ptr_data": 1,
                    "sub_ptr": 1,
                    "value": 1,
                    "var_1": 1
                },
                "iVar5": {
                    "count": 6,
                    "counter": 4,
                    "element_count": 1,
                    "inner_count": 3,
                    "inner_counter": 1,
                    "inner_var": 1,
                    "inner_var2": 1,
                    "item_count": 1,
                    "iteration_count": 1,
                    "iteration_counter": 1,
                    "loop_counter": 2,
                    "nested_count": 1,
                    "num_iterations": 2,
                    "outer_index": 1,
                    "outer_loop_counter": 1,
                    "remaining_iterations": 3,
                    "var_2": 1
                },
                "param_1": {
                    "arg1": 1,
                    "base_address": 10,
                    "data_offset": 3,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "data_start": 1,
                    "initial_value": 1,
                    "input": 3,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_val": 1,
                    "input_value": 1,
                    "param_offset": 1,
                    "start_address": 3,
                    "start_offset": 1
                },
                "param_2": {
                    "callback": 4,
                    "callback_fn": 3,
                    "callback_func": 6,
                    "callback_function": 9,
                    "comparison_function": 1,
                    "function_pointer": 6,
                    "function_ptr": 2
                },
                "piVar2": {
                    "curr_ptr": 1,
                    "current_location": 1,
                    "current_node": 4,
                    "current_pointer": 3,
                    "current_ptr": 4,
                    "data_ptr": 3,
                    "function_list_pointer": 1,
                    "pointer": 4,
                    "ptr": 5,
                    "ptr_array": 1,
                    "ptr_chain": 1,
                    "ptr_header": 1,
                    "ptr_list": 1
                },
                "uVar1": {
                    "callback_result": 6,
                    "comparison_result": 1,
                    "execution_result": 1,
                    "flag": 1,
                    "result": 13,
                    "return_value": 4
                },
                "uVar4": {
                    "checksum": 1,
                    "combined_flags": 1,
                    "combined_result": 4,
                    "combined_results": 6,
                    "combined_return_value": 1,
                    "final_result": 4,
                    "flags": 1,
                    "matching_elements": 1,
                    "result": 10,
                    "return_result": 1,
                    "union_result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00006768"
            ],
            "code": "\nuint extract_and_process_data_000043a0(int base_address,code *callback_function)\n\n{\n  uint result;\n  int *ptr;\n  int count;\n  uint result;\n  int count;\n  \n  ptr = (int *)(base_address + 0x48);\n  result = 0;\n  do {\n    count = ptr[1];\n    count = ptr[2];\n    while (count = count + -1, -1 < count) {\n      if ((1 < *(ushort *)(count + 0xc)) && (*(short *)(count + 0xe) != -1)) {\n        result = (*callback_function)(count);\n        result = result | result;\n      }\n      count = count + 0x68;\n    }\n    ptr = (int *)*ptr;\n  } while (ptr != (int *)0x0);\n  return result;\n}\n\n",
            "current_name": "extract_and_process_data_000043a0",
            "entrypoint": "0x000043a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000043a0": "extract_and_process_data_000043a0",
                "iVar3": "count",
                "iVar5": "count",
                "param_1": "base_address",
                "param_2": "callback_function",
                "piVar2": "ptr",
                "uVar1": "result",
                "uVar4": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00004418": {
            "additional_data": {
                "DAT_00007998": {
                    "data3": 1,
                    "data_98": 1
                },
                "DAT_000079b8": {
                    "data1": 1,
                    "data_b8": 1
                },
                "DAT_000079d8": {
                    "data2": 1,
                    "data_d8": 1
                },
                "Elf32_Rel_ARRAY_1fff0200": {
                    "array": 1,
                    "elf_array": 1,
                    "elf_rel": 1,
                    "elf_relocation_array": 2,
                    "rel_array": 4,
                    "relocation_array": 5,
                    "relocation_table": 4
                },
                "FUNC_000045e8": {
                    "execute_action1": 1,
                    "perform_action": 1,
                    "perform_operation_1": 1,
                    "process_data": 3,
                    "process_relocation": 1,
                    "process_target": 1,
                    "process_value": 1,
                    "process_value1": 2,
                    "update_relocation": 1,
                    "update_value": 1,
                    "validate_input": 1
                },
                "FUNC_000045ec": {
                    "cleanup": 2,
                    "cleanup_process": 1,
                    "execute_action2": 1,
                    "finalize_relocation": 1,
                    "perform_operation_3": 1,
                    "process_another_relocation": 1,
                    "process_data_alt": 1,
                    "process_more_data": 1,
                    "process_other_target": 1,
                    "process_value2": 3,
                    "reverse_value": 1
                },
                "FUN_000042a4": {
                    "check_and_update_offset": 1,
                    "check_offset": 1,
                    "check_offsets": 1,
                    "handle_error": 1,
                    "handle_exception": 1,
                    "handle_null_offset": 1,
                    "handle_offset": 3,
                    "initialize_memory": 1,
                    "perform_action": 2,
                    "perform_operation_2": 1,
                    "trigger_relocation": 1
                },
                "FUN_00004418": {
                    "calculate_return_value": 1,
                    "calculate_value": 1,
                    "decode_and_extract_data": 1,
                    "decode_and_increment": 1,
                    "decode_and_return_value": 1,
                    "decode_binary_function": 1,
                    "get_data_from_binary": 1,
                    "get_decompiled_code": 1,
                    "get_return_value": 2,
                    "get_updated_value": 1,
                    "perform_operation": 2,
                    "process_data": 9,
                    "read_and_decrement_byte": 1,
                    "read_and_modify_data": 1,
                    "read_and_update_value": 1,
                    "read_data_from_array": 1
                },
                "FUN_00005e10": {
                    "calculate_result": 2,
                    "data_processing": 1,
                    "evaluate_condition": 1,
                    "handle_negative_byte": 1,
                    "handle_negative_count": 1,
                    "handle_parameters": 1,
                    "handle_positive_value": 1,
                    "perform_operation": 1,
                    "perform_operation_4": 1,
                    "process_data": 1,
                    "process_data_v2": 1,
                    "process_input_data": 1,
                    "process_relocation": 1
                },
                "dVar1": {
                    "offset": 16,
                    "offset_value": 1,
                    "r_offset": 3,
                    "relocation_offset": 9
                },
                "pbVar4": {
                    "byte_pointer": 10,
                    "byte_ptr": 10,
                    "byte_value": 1,
                    "current_byte": 1,
                    "current_value": 1,
                    "data": 1,
                    "data_pointer": 1,
                    "data_value_ptr": 1,
                    "pointer_to_bytes": 1,
                    "pointer_value": 1,
                    "temp_byte": 1,
                    "temp_pointer": 1
                },
                "ppbVar3": {
                    "byte_arr_ptr": 1,
                    "byte_array_ptr": 1,
                    "byte_pointer": 2,
                    "byte_pointer_array": 2,
                    "byte_pointer_pointer": 1,
                    "byte_ptr_ptr": 1,
                    "current_pointer": 3,
                    "data_pointer": 2,
                    "data_ptr": 7,
                    "pointer_array": 4,
                    "pointer_to_pointer_to_bytes": 1,
                    "relocated_data": 1,
                    "relocated_pointer": 1,
                    "relocation_entry": 1,
                    "relocation_list": 1,
                    "target_pointers": 1
                },
                "r_offset": {
                    "offset": 2
                },
                "uVar2": {
                    "decoded_value": 1,
                    "result": 26,
                    "return_value": 2
                }
            },
            "called": [
                "FUN_000045e8",
                "FUN_000042a4",
                "FUN_000045ec",
                "FUN_00005e10"
            ],
            "calling": [
                "FUN_00002d94"
            ],
            "code": "\nuint process_data_00004418(void)\n\n{\n  dword offset;\n  uint result;\n  byte **data_ptr;\n  byte *byte_ptr;\n  \n  offset = relocation_array[16].offset;\n  if ((relocation_array[16].offset != 0) &&\n     (*(int *)(relocation_array[16].offset + 0x18) == 0)) {\n    FUN_000042a4(relocation_array[16].offset);\n  }\n  data_ptr = *(byte ***)(offset + 4);\n  if ((offset != 0) && (*(int *)(offset + 0x18) == 0)) {\n    FUN_000042a4();\n  }\n  if (data_ptr == (byte **)&DAT_000079b8) {\n    data_ptr = *(byte ***)(offset + 4);\n  }\n  else if (data_ptr == (byte **)&DAT_000079d8) {\n    data_ptr = *(byte ***)(offset + 8);\n  }\n  else if (data_ptr == (byte **)&DAT_00007998) {\n    data_ptr = *(byte ***)(offset + 0xc);\n  }\n  if ((-1 < (int)data_ptr[0x19] << 0x1f) && (-1 < (int)((uint)*(ushort *)(data_ptr + 3) << 0x16))) {\n    FUNC_000045e8(data_ptr[0x16]);\n  }\n  byte_ptr = data_ptr[1];\n  data_ptr[1] = byte_ptr + -1;\n  if ((int)(byte_ptr + -1) < 0) {\n    result = FUN_00005e10(offset,data_ptr);\n  }\n  else {\n    byte_ptr = *data_ptr;\n    *data_ptr = byte_ptr + 1;\n    result = (uint)*byte_ptr;\n  }\n  if ((-1 < (int)data_ptr[0x19] << 0x1f) && (-1 < (int)((uint)*(ushort *)(data_ptr + 3) << 0x16))) {\n    FUNC_000045ec(data_ptr[0x16]);\n  }\n  return result;\n}\n\n",
            "current_name": "process_data_00004418",
            "entrypoint": "0x00004418",
            "imported": false,
            "improved": true,
            "renaming": {
                "Elf32_Rel_ARRAY_1fff0200": "relocation_array",
                "FUN_00004418": "process_data_00004418",
                "dVar1": "offset",
                "pbVar4": "byte_ptr",
                "ppbVar3": "data_ptr",
                "r_offset": "offset",
                "uVar2": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0000443c": {
            "additional_data": {
                "FUN_0000443c": {
                    "calculate_date_components": 1,
                    "calculate_date_time": 13,
                    "convert_time_to_components": 2,
                    "decode_binary_data": 1,
                    "decode_date_time": 1,
                    "decode_time": 1,
                    "extract_and_convert_time": 1,
                    "extract_date_components": 2,
                    "extract_date_info": 1,
                    "extract_date_time": 4,
                    "extract_date_time_components": 2,
                    "get_date_time_info": 1,
                    "get_timestamp": 1
                },
                "bVar9": {
                    "condition_flag": 1,
                    "is_negative": 22,
                    "negative_days": 1,
                    "negative_flag": 2
                },
                "iVar1": {
                    "calculation_result": 2,
                    "calculation_var": 1,
                    "converted_value": 1,
                    "day_of_week": 1,
                    "days": 1,
                    "days_since1900": 2,
                    "extra_days": 1,
                    "i_var1": 1,
                    "leap_year_count": 1,
                    "result": 4,
                    "temp": 2,
                    "temp_var": 2,
                    "temp_var1": 9,
                    "temp_var7": 1,
                    "temp_variable1": 1,
                    "total_minutes": 1
                },
                "param_1": {
                    "base_time": 1,
                    "data_pointer": 1,
                    "date_array": 1,
                    "date_input": 1,
                    "date_pointer": 1,
                    "date_time": 4,
                    "date_time_array": 1,
                    "date_time_data_pointer": 1,
                    "date_time_input": 1,
                    "date_time_params": 3,
                    "date_time_pointer": 1,
                    "date_time_ptr": 4,
                    "input_array": 2,
                    "input_data": 1,
                    "input_date": 1,
                    "input_params": 3,
                    "input_time": 1,
                    "time_info": 1,
                    "time_input": 1
                },
                "param_2": {
                    "components": 1,
                    "date_time": 2,
                    "date_time_components": 1,
                    "date_time_output": 1,
                    "extracted_date_time": 1,
                    "output_array": 3,
                    "output_components": 2,
                    "output_data": 1,
                    "output_date_time": 1,
                    "output_params": 1,
                    "result": 3,
                    "result_array": 4,
                    "result_array_pointer": 1,
                    "result_date_time": 2,
                    "result_ptr": 4,
                    "time_components": 1
                },
                "uVar1": {
                    "leap_year_check": 1
                },
                "uVar10": {
                    "extra_days": 1,
                    "temp_var10": 1
                },
                "uVar11": {
                    "temp_var11": 1
                },
                "uVar12": {
                    "temp_var12": 1
                },
                "uVar13": {
                    "temp_var13": 1
                },
                "uVar14": {
                    "temp_var14": 1
                },
                "uVar15": {
                    "temp_var15": 1
                },
                "uVar16": {
                    "temp_var16": 1
                },
                "uVar17": {
                    "temp_var17": 1
                },
                "uVar18": {
                    "temp_var18": 1
                },
                "uVar2": {
                    "adjusted_calculation_result": 1,
                    "day_of_week": 1,
                    "days": 6,
                    "days_of_week": 1,
                    "days_of_year": 1,
                    "temp1": 2,
                    "temp_var2": 10,
                    "temp_variable2": 1,
                    "total_days": 3,
                    "total_minutes": 2,
                    "weekday_code": 1,
                    "year": 1,
                    "year_days": 1
                },
                "uVar3": {
                    "adjusted_months": 1,
                    "days": 3,
                    "days_remainder": 1,
                    "normalized_minutes": 1,
                    "remainder": 1,
                    "remaining_days": 1,
                    "remaining_minutes": 2,
                    "remaining_seconds": 1,
                    "remaining_time": 1,
                    "seconds": 1,
                    "seconds_remaining": 1,
                    "temp2": 2,
                    "temp_var3": 7,
                    "temp_variable3": 1,
                    "total_minutes": 4,
                    "total_seconds": 3
                },
                "uVar4": {
                    "adjusted_days": 1,
                    "continue_func": 1,
                    "days": 4,
                    "days_elapsed": 1,
                    "days_remainder": 2,
                    "leap_years": 2,
                    "normalized_days": 1,
                    "remaining_days": 1,
                    "temp": 2,
                    "temp1": 3,
                    "temp3": 2,
                    "temp_var4": 7,
                    "temp_variable4": 1,
                    "u_var4": 1,
                    "var4": 1,
                    "years": 1
                },
                "uVar5": {
                    "adjusted_years": 1,
                    "centuries": 1,
                    "century_years": 1,
                    "days_in_year": 1,
                    "days_in_years": 1,
                    "hours": 1,
                    "leap_years": 2,
                    "months": 1,
                    "remainder_days": 1,
                    "remaining_minutes": 1,
                    "temp2": 4,
                    "temp4": 2,
                    "temp_var": 1,
                    "temp_var5": 7,
                    "temp_variable5": 1,
                    "u_var5": 1,
                    "var5": 1,
                    "week_day": 1,
                    "weeks": 1,
                    "year": 1
                },
                "uVar6": {
                    "date_time1": 1,
                    "date_value1": 1,
                    "first_param": 1,
                    "hour": 2,
                    "hours": 1,
                    "input1": 1,
                    "input_val1": 1,
                    "input_value1": 1,
                    "input_var1": 1,
                    "month": 1,
                    "param1": 3,
                    "param1_copy": 1,
                    "param1_value": 2,
                    "temp_var3": 2,
                    "time_info_val1": 1,
                    "u_var6": 1,
                    "value1": 2,
                    "var1": 1,
                    "var6": 2,
                    "week_day": 1,
                    "year": 4
                },
                "uVar7": {
                    "date_time2": 1,
                    "date_value2": 1,
                    "day": 1,
                    "input2": 1,
                    "input_val2": 1,
                    "input_value2": 1,
                    "input_var2": 1,
                    "minute": 2,
                    "minutes": 1,
                    "month": 4,
                    "overflow_value": 1,
                    "param2": 3,
                    "param2_copy": 1,
                    "param2_value": 2,
                    "second_param": 1,
                    "temp_var4": 2,
                    "time_info_val2": 1,
                    "u_var7": 1,
                    "value2": 2,
                    "var2": 1,
                    "var7": 2
                },
                "uVar8": {
                    "adjusted_code": 1,
                    "adjusted_days": 1,
                    "calc_result": 1,
                    "day": 1,
                    "day_of_week": 2,
                    "extra_days": 1,
                    "extracted_year": 1,
                    "hour": 1,
                    "intermediate_result": 1,
                    "leap_days": 1,
                    "magic_number": 1,
                    "month": 1,
                    "offset": 1,
                    "temp": 1,
                    "temp5": 2,
                    "temp_val": 1,
                    "temp_var5": 2,
                    "temp_var6": 3,
                    "temp_var8": 3,
                    "temp_variable6": 1,
                    "total_seconds": 1,
                    "var3": 1,
                    "var8": 1,
                    "weeks_of_year": 1
                },
                "uVar9": {
                    "remainder": 1,
                    "temp_var2": 1
                }
            },
            "called": [
                "FUN_00006974"
            ],
            "calling": [
                "FUN_00002690",
                "FUN_00002624"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x000044a8) */\n\nuint * calculate_date_time_0000443c(undefined4 *date_time_ptr,uint *result_array)\n\n{\n  int temp_var1;\n  uint temp_var2;\n  uint temp_var3;\n  uint temp_var4;\n  uint temp_var5;\n  undefined4 year;\n  undefined4 month;\n  uint temp_var8;\n  bool is_negative;\n  \n  year = *date_time_ptr;\n  month = date_time_ptr[1];\n  temp_var1 = FUN_00006974(year,month,0x15180,0);\n  temp_var3 = 0x15180;\n  FUN_00006974(year,month,0x15180,0);\n  is_negative = (int)temp_var3 < 0;\n  if (is_negative) {\n    temp_var3 = temp_var3 + 0x15180;\n  }\n  if (is_negative) {\n    temp_var2 = temp_var1 + 0xafa6b;\n  }\n  else {\n    temp_var2 = temp_var1 + 0xafa6c;\n  }\n  result_array[2] = temp_var3 / 0xe10;\n  result_array[1] = (temp_var3 % 0xe10) / 0x3c;\n  *result_array = (temp_var3 % 0xe10) % 0x3c;\n  result_array[6] = (temp_var2 + 3) % 7;\n  temp_var3 = temp_var2;\n  if ((int)temp_var2 < 0) {\n    temp_var3 = temp_var2 - 0x23ab0;\n  }\n  temp_var2 = (temp_var3 / 0x23ab1) * -0x23ab1 + temp_var2;\n  temp_var4 = ((temp_var2 / 0x8eac + temp_var2) - temp_var2 / 0x5b4) - temp_var2 / 0x23ab0;\n  temp_var5 = temp_var4 / 0x16d;\n  temp_var2 = (temp_var5 / 100 - temp_var4 / 0x5b4) + temp_var2 + temp_var5 * -0x16d;\n  temp_var8 = temp_var2 * 5 + 2;\n  temp_var4 = temp_var8 / 0x99;\n  if (temp_var8 < 0x5fa) {\n    temp_var1 = 2;\n  }\n  else {\n    temp_var1 = -10;\n  }\n  temp_var8 = temp_var4 + temp_var1;\n  temp_var1 = (temp_var3 / 0x23ab1) * 400 + temp_var5;\n  if (temp_var8 < 2) {\n    temp_var1 = temp_var1 + 1;\n  }\n  if (temp_var2 < 0x132) {\n    if (((temp_var5 & 3) == 0) && (temp_var5 != (temp_var5 / 100) * 100)) {\n      temp_var3 = 1;\n    }\n    else {\n      temp_var3 = (uint)(temp_var5 % 400 == 0);\n    }\n    temp_var3 = temp_var2 + 0x3b + temp_var3;\n  }\n  else {\n    temp_var3 = temp_var2 - 0x132;\n  }\n  result_array[7] = temp_var3;\n  result_array[3] = (temp_var2 + 1) - (temp_var4 * 0x99 + 2) / 5;\n  result_array[4] = temp_var8;\n  result_array[5] = temp_var1 - 0x76c;\n  result_array[8] = 0;\n  return result_array;\n}\n\n",
            "current_name": "calculate_date_time_0000443c",
            "entrypoint": "0x0000443c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0000443c": "calculate_date_time_0000443c",
                "bVar9": "is_negative",
                "iVar1": "temp_var1",
                "param_1": "date_time_ptr",
                "param_2": "result_array",
                "uVar2": "temp_var2",
                "uVar3": "temp_var3",
                "uVar4": "temp_var4",
                "uVar5": "temp_var5",
                "uVar6": "year",
                "uVar7": "month",
                "uVar8": "temp_var8"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0000459c": {
            "additional_data": {
                "FUN_00000410": {
                    "perform_action": 3,
                    "perform_cleanup": 3,
                    "perform_task": 2
                },
                "FUN_0000459c": {
                    "execute_function_calls": 1,
                    "execute_function_set_twice": 1,
                    "execute_functions": 10,
                    "execute_functions_twice": 2,
                    "execute_multiple_functions": 1,
                    "execute_sub_functions": 14,
                    "execute_subfunctions": 1,
                    "process_sub_functions": 1
                },
                "iVar2": {
                    "counter": 5,
                    "index": 15,
                    "iteration_count": 4,
                    "iterator": 1,
                    "loop_counter": 1
                },
                "ppcVar1": {
                    "function_array": 1,
                    "function_list": 1,
                    "function_pointer": 7,
                    "function_pointer_array": 4,
                    "function_pointers": 9,
                    "function_ptr": 1,
                    "sub_function_pointer": 1,
                    "sub_function_pointers": 1
                }
            },
            "called": [
                "FUN_00000410"
            ],
            "calling": [
                "entry"
            ],
            "code": "\nvoid execute_sub_functions_0000459c(void)\n\n{\n  code **function_pointers;\n  int index;\n  \n  function_pointers = (code **)&DAT_00007c58;\n  for (index = 0; index != 0; index = index + 1) {\n    (**function_pointers)();\n    function_pointers = function_pointers + 1;\n  }\n  FUN_00000410();\n  function_pointers = (code **)&DAT_00007c58;\n  for (index = 0; index != 0; index = index + 1) {\n    (**function_pointers)();\n    function_pointers = function_pointers + 1;\n  }\n  return;\n}\n\n",
            "current_name": "execute_sub_functions_0000459c",
            "entrypoint": "0x0000459c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0000459c": "execute_sub_functions_0000459c",
                "iVar2": "index",
                "ppcVar1": "function_pointers"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000045e4": {
            "called": [],
            "calling": [
                "FUN_00004314"
            ],
            "code": "\nvoid FUNC_000045e4(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_000045e4",
            "entrypoint": "0x000045e4",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_000045e4": "FUNC_000045e4"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_000045e8": {
            "called": [],
            "calling": [
                "FUN_00004274",
                "FUN_0000428c",
                "FUN_00005fec",
                "FUN_00004cb4",
                "FUN_00004db8",
                "FUN_00005790",
                "FUN_00004418",
                "FUN_00004158",
                "FUN_000057f8"
            ],
            "code": "\nvoid FUNC_000045e8(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_000045e8",
            "entrypoint": "0x000045e8",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_000045e8": "FUNC_000045e8"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_000045ec": {
            "called": [],
            "calling": [
                "FUN_00004cb4",
                "FUN_00004db8",
                "FUN_00004418",
                "FUN_00004158",
                "FUN_000042a4",
                "FUN_000057f8",
                "FUN_00004280",
                "FUN_0000579c",
                "FUN_00005ff8"
            ],
            "code": "\nvoid FUNC_000045ec(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_000045ec",
            "entrypoint": "0x000045ec",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_000045ec": "FUNC_000045ec"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_000045ee": {
            "additional_data": {
                "FUN_000045ee": {
                    "copy_and_reverse": 7,
                    "copy_and_reverse_memory_blocks": 1,
                    "copy_and_shift_elements": 1,
                    "copy_array": 1,
                    "copy_from_to": 1,
                    "copy_memory": 3,
                    "copy_portion_of_data": 1,
                    "copy_range": 4,
                    "copy_range_to_buffer": 1,
                    "copy_range_to_destination": 1,
                    "copy_subarray": 1,
                    "copy_within": 2,
                    "reverse_copy": 7
                },
                "param_1": {
                    "dest": 9,
                    "dest_array": 1,
                    "dest_ptr": 1,
                    "destination": 5,
                    "dst": 1,
                    "source": 10,
                    "source_array": 2,
                    "source_start": 1,
                    "target": 1
                },
                "param_2": {
                    "destination": 10,
                    "destination_array": 2,
                    "source": 5,
                    "source_end": 1,
                    "src": 10,
                    "src_array": 1,
                    "src_ptr": 1,
                    "start": 1
                },
                "param_3": {
                    "array_length": 1,
                    "count": 1,
                    "length": 20,
                    "n": 1,
                    "num_elements": 1,
                    "range": 1,
                    "size": 6
                },
                "puVar1": {
                    "dest_end": 8,
                    "dest_ptr": 5,
                    "dst_end": 1,
                    "p_dest": 1,
                    "source_end": 4,
                    "source_ptr": 7,
                    "src_ptr": 1,
                    "target_end": 1
                },
                "puVar2": {
                    "dest_end": 2,
                    "dest_ptr": 5,
                    "destination_end": 2,
                    "destination_ptr": 3,
                    "p_src": 1,
                    "source_end": 1,
                    "src_end": 9,
                    "src_ptr": 5
                }
            },
            "called": [],
            "calling": [
                "FUN_00003ff4"
            ],
            "code": "\nvoid copy_and_reverse_memory_blocks_000045ee(undefined *source,undefined *destination,int length)\n\n{\n  undefined *dest_end;\n  undefined *src_end;\n  \n  src_end = destination + length;\n  if ((destination < source) && (source < src_end)) {\n    dest_end = source + length;\n    while (dest_end != source) {\n      src_end = src_end + -1;\n      dest_end = dest_end + -1;\n      *dest_end = *src_end;\n    }\n  }\n  else {\n    source = source + -1;\n    for (; destination != src_end; destination = destination + 1) {\n      source = source + 1;\n      *source = *destination;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "copy_and_reverse_memory_blocks_000045ee",
            "entrypoint": "0x000045ee",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000045ee": "copy_and_reverse_memory_blocks_000045ee",
                "param_1": "source",
                "param_2": "destination",
                "param_3": "length",
                "puVar1": "dest_end",
                "puVar2": "src_end"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00004622": {
            "additional_data": {
                "FUN_00004622": {
                    "fill_array_with": 1,
                    "fill_array_with_byte": 1,
                    "fill_array_with_value": 3,
                    "fill_memory": 9,
                    "fill_memory_range": 1,
                    "fill_memory_with_byte": 2,
                    "fill_memory_with_value": 1,
                    "initialize_memory": 2,
                    "memset": 4,
                    "memset_array": 1,
                    "memset_value": 1,
                    "set_memory": 2,
                    "set_memory_block": 1,
                    "set_memory_to_value": 1,
                    "set_memory_value": 1
                },
                "param_1": {
                    "array": 6,
                    "buffer": 1,
                    "dest": 3,
                    "destination": 11,
                    "memory": 7,
                    "memory_array": 1,
                    "memory_block_start": 1,
                    "memory_location": 1
                },
                "param_2": {
                    "byte_to_fill": 2,
                    "initial_value": 1,
                    "value": 26,
                    "value_to_fill": 1,
                    "value_to_set": 1
                },
                "param_3": {
                    "array_length": 1,
                    "array_size": 1,
                    "block_size": 1,
                    "count": 1,
                    "length": 14,
                    "n": 1,
                    "num_elements": 2,
                    "size": 10
                },
                "puVar1": {
                    "end": 1,
                    "end_address": 4,
                    "end_location": 1,
                    "end_memory": 1,
                    "end_of_array": 1,
                    "end_of_block": 1,
                    "end_pointer": 2,
                    "end_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_000041f4",
                "FUN_00003ec4",
                "FUN_0000305c",
                "FUN_00004248",
                "FUN_00004314",
                "FUN_00003ff4"
            ],
            "code": "\nvoid fill_memory_with_byte_00004622(undefined *destination,undefined value,int length)\n\n{\n  undefined *end_address;\n  \n  end_address = destination + length;\n  for (; destination != end_address; destination = destination + 1) {\n    *destination = value;\n  }\n  return;\n}\n\n",
            "current_name": "fill_memory_with_byte_00004622",
            "entrypoint": "0x00004622",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00004622": "fill_memory_with_byte_00004622",
                "param_1": "destination",
                "param_2": "value",
                "param_3": "length",
                "puVar1": "end_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00004634": {
            "additional_data": {
                "FUN_00004634": {
                    "adjust_date_time": 2,
                    "calculate_date": 1,
                    "calculate_date_offset": 1,
                    "calculate_date_time": 1,
                    "calculate_dates": 1,
                    "update_calendar": 1,
                    "update_data": 1,
                    "update_date": 5,
                    "update_date_time": 18
                },
                "bVar5": {
                    "is_leap_year": 2,
                    "is_negative": 23,
                    "negative": 1,
                    "negative_day": 2,
                    "negative_days": 2,
                    "negative_flag": 1
                },
                "iVar1": {
                    "days": 1,
                    "days_in_month": 11,
                    "days_to_add": 2,
                    "loop_counter": 1,
                    "month": 1,
                    "month_days": 3,
                    "month_index": 3,
                    "month_offset": 3,
                    "num_days": 1,
                    "temp1": 1,
                    "week_days": 1
                },
                "iVar4": {
                    "day_value": 1,
                    "days_in_month": 9,
                    "days_in_month_or_year": 1,
                    "days_in_year": 9,
                    "days_to_add": 1,
                    "extra_days": 1,
                    "month_days": 1,
                    "month_index": 1,
                    "month_length": 1,
                    "months": 1,
                    "num_days_in_month": 1,
                    "num_months": 1,
                    "temp2": 1,
                    "temp_var4": 1,
                    "var1": 1
                },
                "local_1c": {
                    "adjusted_year": 1,
                    "current_day": 10,
                    "current_index": 2,
                    "current_month": 4,
                    "current_offset": 1,
                    "current_value": 2,
                    "day_count": 1,
                    "day_of_month": 1,
                    "days": 1,
                    "days_adjusted": 1,
                    "hours": 1,
                    "index": 1,
                    "input_param": 1,
                    "local_offset": 1,
                    "minutes": 1,
                    "temp_value": 1,
                    "total_days": 1
                },
                "local_20": {
                    "buffer": 1,
                    "local_array": 2,
                    "result": 1,
                    "temp": 4,
                    "temp_array": 21,
                    "temp_buffer": 1,
                    "temporary_array": 1
                },
                "param_1": {
                    "calendar": 1,
                    "data": 1,
                    "date": 3,
                    "date_array": 6,
                    "date_time": 11,
                    "date_time_array": 9
                },
                "param_2": {
                    "array_length": 1,
                    "day_offset": 1,
                    "days": 5,
                    "days_to_add": 9,
                    "days_to_update": 1,
                    "hours": 1,
                    "hours_to_add": 1,
                    "initial_day": 1,
                    "length": 5,
                    "month": 1,
                    "month_of_year": 1,
                    "num_elements": 3,
                    "year": 1
                },
                "param_3": {
                    "constant": 1,
                    "extra_days": 1,
                    "flag": 1,
                    "ignored": 1,
                    "initial_month": 1,
                    "month": 1,
                    "month_flag": 1,
                    "offset": 1,
                    "param3": 1,
                    "param_3": 8,
                    "seconds": 1,
                    "some_flag": 1,
                    "some_undefined_value": 1,
                    "temp": 1,
                    "timezone_offset": 1,
                    "unknown": 1,
                    "unknown_value": 1,
                    "update_mode": 1,
                    "value": 1,
                    "year": 4,
                    "year_type": 1
                },
                "uStack_18": {
                    "constant2": 1,
                    "current_month": 2,
                    "current_year": 1,
                    "extra_days_stack": 1,
                    "milliseconds": 1,
                    "param_3": 5,
                    "param_offset": 1,
                    "stack_param": 1,
                    "stack_var": 1,
                    "temp_flag": 2,
                    "temp_param": 1,
                    "temp_stack": 1,
                    "temp_value": 2,
                    "temp_var": 2,
                    "temp_variable": 1,
                    "time_offset": 1,
                    "unknown_stack_value": 1,
                    "unknown_value": 1,
                    "unused": 2,
                    "year_format": 1,
                    "year_stack": 1
                },
                "uVar2": {
                    "adjusted_days": 1,
                    "current_day": 3,
                    "current_month": 1,
                    "current_month_or_year": 1,
                    "day": 2,
                    "day_index": 1,
                    "day_of_year": 1,
                    "day_offset": 1,
                    "days": 1,
                    "days_in_previous_month": 1,
                    "days_left_in_month": 1,
                    "days_of_year": 1,
                    "days_offset": 1,
                    "month": 2,
                    "months": 1,
                    "sum1": 1,
                    "temp1": 1,
                    "temp_var1": 2,
                    "temp_var2": 1,
                    "total_days": 2,
                    "updated_hour": 1,
                    "updated_value": 1,
                    "year_day": 1,
                    "year_days": 1,
                    "year_index": 1
                },
                "uVar3": {
                    "current_year": 1,
                    "days_to_add": 1,
                    "extra_days_offset": 1,
                    "leap_year": 2,
                    "leap_year_days": 3,
                    "leap_year_index": 1,
                    "leap_years": 2,
                    "new_day": 3,
                    "remainder": 1,
                    "sum2": 1,
                    "temp2": 1,
                    "temp_value": 1,
                    "temp_var2": 2,
                    "temp_var3": 1,
                    "updated_value": 1,
                    "updated_value2": 1,
                    "year": 3,
                    "year_days_remainder": 1,
                    "year_index": 1,
                    "year_month": 1,
                    "year_offset": 1,
                    "year_remainder": 1
                }
            },
            "called": [
                "FUN_00005584"
            ],
            "calling": [
                "FUN_000047e4"
            ],
            "code": "\nvoid update_date_time_00004634(uint *date_time,uint days_to_add,undefined4 param_3)\n\n{\n  int days_in_month;\n  uint current_day;\n  uint leap_year_days;\n  int days_in_month;\n  bool is_negative;\n  uint *temp_array;\n  uint current_day;\n  undefined4 param_3;\n  \n  temp_array = date_time;\n  current_day = days_to_add;\n  param_3 = param_3;\n  if (0x3b < *date_time) {\n    FUN_00005584(&temp_array,*date_time,0x3c);\n    current_day = date_time[1] + (int)temp_array;\n    date_time[1] = current_day;\n    if ((int)current_day < 0) {\n      current_day = current_day - 1;\n      *date_time = current_day + 0x3c;\n    }\n    else {\n      *date_time = current_day;\n    }\n    if ((int)current_day < 0) {\n      date_time[1] = current_day;\n    }\n  }\n  if (0x3b < date_time[1]) {\n    FUN_00005584(&temp_array,date_time[1],0x3c);\n    is_negative = (int)current_day < 0;\n    leap_year_days = date_time[2] + (int)temp_array;\n    date_time[2] = leap_year_days;\n    current_day = current_day;\n    if (is_negative) {\n      current_day = current_day + 0x3c;\n      leap_year_days = leap_year_days - 1;\n    }\n    if (!is_negative) {\n      date_time[1] = current_day;\n    }\n    if (is_negative) {\n      date_time[1] = current_day;\n    }\n    if (is_negative) {\n      date_time[2] = leap_year_days;\n    }\n  }\n  if (0x17 < date_time[2]) {\n    FUN_00005584(&temp_array,date_time[2],0x18);\n    is_negative = (int)current_day < 0;\n    leap_year_days = date_time[3] + (int)temp_array;\n    date_time[3] = leap_year_days;\n    current_day = current_day;\n    if (is_negative) {\n      current_day = current_day + 0x18;\n      leap_year_days = leap_year_days - 1;\n    }\n    if (!is_negative) {\n      date_time[2] = current_day;\n    }\n    if (is_negative) {\n      date_time[2] = current_day;\n    }\n    if (is_negative) {\n      date_time[3] = leap_year_days;\n    }\n  }\n  if (0xb < date_time[4]) {\n    FUN_00005584(&temp_array,date_time[4],0xc);\n    is_negative = (int)current_day < 0;\n    current_day = date_time[5] + (int)temp_array;\n    date_time[5] = current_day;\n    if (is_negative) {\n      current_day = current_day + 0xc;\n      current_day = current_day - 1;\n    }\n    if (!is_negative) {\n      date_time[4] = current_day;\n    }\n    if (is_negative) {\n      date_time[4] = current_day;\n    }\n    if (is_negative) {\n      date_time[5] = current_day;\n    }\n  }\n  current_day = date_time[5];\n  if ((current_day & 3) == 0) {\n    if (current_day == (current_day / 100) * 100) {\n      if ((current_day + 0x76c) % 400 == 0) {\n        days_in_month = 0x1d;\n      }\n      else {\n        days_in_month = 0x1c;\n      }\n    }\n    else {\n      days_in_month = 0x1d;\n    }\n  }\n  else {\n    days_in_month = 0x1c;\n  }\n  if ((int)date_time[3] < 1) {\n    while ((int)date_time[3] < 1) {\n      current_day = date_time[4];\n      date_time[4] = current_day - 1;\n      if (current_day - 1 == 0xffffffff) {\n        leap_year_days = date_time[5];\n        current_day = leap_year_days - 1;\n        date_time[4] = 0xb;\n        date_time[5] = current_day;\n        if ((current_day & 3) == 0) {\n          if (current_day == (current_day / 100) * 100) {\n            if ((leap_year_days + 0x76b) % 400 == 0) {\n              days_in_month = 0x1d;\n            }\n            else {\n              days_in_month = 0x1c;\n            }\n          }\n          else {\n            days_in_month = 0x1d;\n          }\n        }\n        else {\n          days_in_month = 0x1c;\n        }\n      }\n      days_in_month = days_in_month;\n      if (date_time[4] != 1) {\n        days_in_month = (&DAT_000079fc)[date_time[4]];\n      }\n      date_time[3] = days_in_month + date_time[3];\n    }\n  }\n  else {\n    while( true ) {\n      current_day = date_time[4];\n      days_in_month = days_in_month;\n      if (current_day != 1) {\n        days_in_month = (&DAT_000079fc)[current_day];\n      }\n      if ((int)date_time[3] <= days_in_month) break;\n      date_time[3] = date_time[3] - days_in_month;\n      date_time[4] = current_day + 1;\n      if (current_day + 1 == 0xc) {\n        leap_year_days = date_time[5];\n        current_day = leap_year_days + 1;\n        date_time[4] = 0;\n        date_time[5] = current_day;\n        if ((current_day & 3) == 0) {\n          if (current_day % 100 == 0) {\n            if ((leap_year_days + 0x76d) % 400 == 0) {\n              days_in_month = 0x1d;\n            }\n            else {\n              days_in_month = 0x1c;\n            }\n          }\n          else {\n            days_in_month = 0x1d;\n          }\n        }\n        else {\n          days_in_month = 0x1c;\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "update_date_time_00004634",
            "entrypoint": "0x00004634",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00004634": "update_date_time_00004634",
                "bVar5": "is_negative",
                "iVar1": "days_in_month",
                "iVar4": "days_in_month",
                "local_1c": "current_day",
                "local_20": "temp_array",
                "param_1": "date_time",
                "param_2": "days_to_add",
                "uStack_18": "param_3",
                "uVar2": "current_day",
                "uVar3": "leap_year_days"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000047e4": {
            "additional_data": {
                "FUN_000047e4": {
                    "calculate_adjusted_date": 3,
                    "calculate_date": 2,
                    "calculate_date_difference": 3,
                    "calculate_date_offset": 6,
                    "calculate_date_time": 2,
                    "calculate_date_time_offset": 1,
                    "calculate_day_of_week": 3,
                    "calculate_days_passed": 1,
                    "calculate_final_date": 1,
                    "calculate_modified_day_of_week": 1,
                    "calculate_new_date": 2,
                    "calculate_next_date": 2,
                    "calculate_weekday": 3
                },
                "bVar16": {
                    "condition": 1,
                    "flag16": 1,
                    "is_daylight_savings": 1,
                    "is_divisible": 3,
                    "is_divisible_by4": 1,
                    "is_leap": 2,
                    "is_leap_day": 1,
                    "is_leap_year": 10,
                    "is_leap_year_flag": 1,
                    "is_offset_positive": 1,
                    "var16": 1
                },
                "bVar17": {
                    "is_leap_year_remainder_zero": 1,
                    "is_offset_positive": 1
                },
                "iVar11": {
                    "current_day_of_month": 1,
                    "current_year_days": 1,
                    "day_of_year": 1,
                    "day_offset": 1,
                    "days": 1,
                    "days_before_date": 1,
                    "days_offset_remaining": 1,
                    "days_since2000": 1,
                    "days_since_start_of_year": 1,
                    "days_to_add": 2,
                    "extra_days": 1,
                    "initial_days_offset": 1,
                    "month_index": 1,
                    "num_of_leap_years": 1,
                    "number_of_days": 1,
                    "number_of_leap_years": 1,
                    "remaining_years": 1,
                    "temp8": 1,
                    "temp_var8": 1,
                    "total_days": 1,
                    "total_leap_years": 1,
                    "total_months": 1,
                    "updated_days": 1,
                    "updated_total_weeks": 1,
                    "var11": 2,
                    "year": 1,
                    "year_offset": 1,
                    "years_offset": 1
                },
                "iVar17": {
                    "current_day_of_week": 1
                },
                "iVar5": {
                    "day_of_week": 4,
                    "days": 1,
                    "days_adjusted": 1,
                    "days_in_month": 1,
                    "days_in_year": 2,
                    "days_offset": 2,
                    "days_passed": 1,
                    "days_to_add": 1,
                    "is_leap_year": 1,
                    "leap_year_correction": 1,
                    "leap_years": 1,
                    "temp1": 1,
                    "temp2": 2,
                    "temp_var1": 2,
                    "temp_var2": 4,
                    "var2": 1,
                    "var5": 2,
                    "week_offset": 1,
                    "years": 1
                },
                "iVar6": {
                    "carry": 1,
                    "day_of_week": 1,
                    "day_offset": 1,
                    "days_diff": 1,
                    "days_in_feb": 1,
                    "days_in_month": 1,
                    "days_since1970": 1,
                    "days_temp": 1,
                    "days_to_add_temp": 1,
                    "i_var6": 1,
                    "leap_year_days": 1,
                    "leap_year_offset": 2,
                    "leap_years": 1,
                    "temp": 1,
                    "temp2": 1,
                    "temp3": 2,
                    "temp_offset": 1,
                    "temp_value": 1,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "temp_var3": 3,
                    "temp_var6": 1,
                    "var3": 1,
                    "var6": 2
                },
                "iVar7": {
                    "adjusted_days": 3,
                    "carry": 1,
                    "days": 1,
                    "days_in_year": 1,
                    "days_of_week": 1,
                    "days_offset": 1,
                    "days_result": 1,
                    "error_code": 1,
                    "high_bits": 1,
                    "new_day_of_week": 2,
                    "new_total_days32": 1,
                    "remainder_from400": 1,
                    "temp3": 1,
                    "temp4": 1,
                    "temp_var2": 1,
                    "temp_var4": 3,
                    "total_days": 3,
                    "total_offset": 1,
                    "updated_days_passed": 1,
                    "var4": 1,
                    "var7": 2,
                    "weekday": 1
                },
                "lVar1": {
                    "adjusted_total_seconds": 1,
                    "days": 1,
                    "days_since1900": 1,
                    "days_since_epoch": 1,
                    "num_days": 1,
                    "total_days": 18,
                    "total_minutes": 1,
                    "total_seconds": 5
                },
                "lVar2": {
                    "adjusted_days": 1,
                    "adjusted_days_since_epoch": 1,
                    "adjusted_l_var": 1,
                    "adjusted_minutes": 1,
                    "adjusted_total_days": 1,
                    "adjusted_total_seconds": 1,
                    "new_num_days": 1,
                    "new_total_days": 10,
                    "new_total_seconds": 1,
                    "temp_days": 2,
                    "temp_seconds": 1,
                    "updated_days_since1900": 1,
                    "updated_total_days": 5,
                    "updated_total_seconds": 2
                },
                "param_1": {
                    "date": 6,
                    "date_array": 6,
                    "date_components": 5,
                    "date_data": 1,
                    "date_parameters": 1,
                    "date_params": 8,
                    "date_time": 2,
                    "date_time_array": 1
                },
                "piVar3": {
                    "calendar_data": 1,
                    "current_date": 1,
                    "current_year_ptr": 1,
                    "date_ptr": 1,
                    "date_time_ptr": 2,
                    "memory_pointer": 1,
                    "pi_data": 1,
                    "pi_var": 2,
                    "pointer": 2,
                    "pointer_to_func": 1,
                    "pointer_to_something": 1,
                    "pointer_to_structure": 1,
                    "ptr": 3,
                    "ptr_array": 2,
                    "returned_list": 1,
                    "some_pointer": 1,
                    "time_array": 1,
                    "time_components": 1,
                    "time_info": 3,
                    "time_params": 1,
                    "time_ptr": 1,
                    "time_structures": 1
                },
                "uVar10": {
                    "days_to_remove": 1,
                    "divisible4": 1,
                    "first_leap_year": 1,
                    "i": 1,
                    "loop_var2": 1,
                    "remainder2": 1,
                    "special_leap_day": 1,
                    "start_year": 3,
                    "subtract_value3": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp6": 2,
                    "temp7": 1,
                    "temp_remainder": 1,
                    "temp_value3": 1,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temp_var4": 2,
                    "temp_var5": 1,
                    "temp_var7": 3,
                    "temp_year": 1,
                    "var10": 2,
                    "var7": 1
                },
                "uVar12": {
                    "current_month": 1,
                    "current_year": 3,
                    "day": 1,
                    "day_of_year_offset": 1,
                    "days_in_current_year": 1,
                    "days_of_year": 1,
                    "days_offset": 1,
                    "days_to_add_or_subtract": 1,
                    "given_days": 1,
                    "input_days": 1,
                    "input_value": 1,
                    "input_year": 1,
                    "original_year": 1,
                    "remainder1": 1,
                    "start_of_year": 1,
                    "sum_of_days": 1,
                    "temp6": 1,
                    "temp9": 1,
                    "var12": 2,
                    "var8": 1,
                    "year": 4,
                    "year_days": 1,
                    "year_offset": 1
                },
                "uVar13": {
                    "adjustment_flag": 1,
                    "counter1": 1,
                    "has_leap_year_offset": 1,
                    "has_year_offset": 1,
                    "is_leap_year": 7,
                    "is_negative": 9,
                    "is_positive": 2,
                    "is_subtract": 1,
                    "temp10": 1,
                    "temp7": 1,
                    "temp_variable2": 1,
                    "var13": 2
                },
                "uVar14": {
                    "current_year": 2,
                    "days_before_month": 1,
                    "days_in_current_month": 1,
                    "days_in_range": 1,
                    "days_to_add_flag": 1,
                    "input_year": 1,
                    "length_of_year": 1,
                    "max_month_count": 1,
                    "month": 1,
                    "month_days": 1,
                    "month_offset": 1,
                    "months_offset": 1,
                    "num_leap_years": 1,
                    "number_of_leap_years": 1,
                    "remaining_days": 1,
                    "starting_year": 1,
                    "temp11": 1,
                    "temp3": 1,
                    "temp8": 1,
                    "temp_days": 1,
                    "temp_value4": 1,
                    "temp_variable3": 1,
                    "threshold": 1,
                    "var14": 3,
                    "year_offset": 1
                },
                "uVar15": {
                    "adjusted_seconds": 1,
                    "current_date": 1,
                    "current_day_of_year": 1,
                    "days": 1,
                    "days_as_int": 1,
                    "days_lower32": 1,
                    "days_lower32_bits": 1,
                    "days_since1900_low": 1,
                    "is_start_year_leap_year": 1,
                    "lower32_bit_total_days": 1,
                    "result": 2,
                    "seconds": 1,
                    "start_date": 1,
                    "temp": 1,
                    "temp12": 1,
                    "temp_result": 1,
                    "temp_total_days": 1,
                    "temp_value5": 1,
                    "temp_var5": 1,
                    "temp_var8": 1,
                    "temp_var9": 1,
                    "temp_variable4": 1,
                    "total_days": 1,
                    "updated_day_of_week": 1,
                    "var15": 3
                },
                "uVar16": {
                    "days_since1900_high": 1,
                    "is_leap_year": 3,
                    "is_multiple_of100": 1
                },
                "uVar4": {
                    "current_year": 1,
                    "day_of_year": 2,
                    "divisible100": 1,
                    "divisor": 1,
                    "mod_value": 1,
                    "rem": 1,
                    "remainder": 11,
                    "temp": 1,
                    "temp1": 2,
                    "temp_var1": 4,
                    "var1": 1,
                    "var4": 2,
                    "year": 1,
                    "year_remainder": 1
                },
                "uVar8": {
                    "current_year": 1,
                    "days_in_leap_year": 1,
                    "days_in_month": 1,
                    "days_in_year": 1,
                    "days_since1900_remainder": 1,
                    "difference_days": 1,
                    "divisible400": 1,
                    "first_leap_day": 1,
                    "leap_years": 1,
                    "month_offset": 1,
                    "rem_days": 1,
                    "remaining_years_sign_bits": 1,
                    "start_of_year": 1,
                    "subtract_value1": 1,
                    "temp": 1,
                    "temp1": 1,
                    "temp4": 2,
                    "temp5": 1,
                    "temp_value1": 1,
                    "temp_var2": 1,
                    "temp_var3": 3,
                    "temp_var5": 3,
                    "var5": 1,
                    "var8": 2
                },
                "uVar9": {
                    "counter": 1,
                    "current_month": 1,
                    "i": 3,
                    "loop_counter": 1,
                    "loop_var": 1,
                    "month_start": 1,
                    "previous_year": 1,
                    "remainder_var": 1,
                    "subtract_value2": 1,
                    "temp": 1,
                    "temp2": 1,
                    "temp5": 2,
                    "temp6": 1,
                    "temp_value2": 1,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "temp_var6": 3,
                    "temp_variable1": 1,
                    "temp_year": 1,
                    "total_years": 1,
                    "var9": 2,
                    "year": 1
                }
            },
            "called": [
                "FUN_000056b0",
                "FUN_000050e8",
                "FUN_00004634",
                "FUN_000050f4",
                "FUN_00005100",
                "FUN_00004f98"
            ],
            "calling": [
                "FUN_00002654",
                "FUN_00002600"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00004ab2) */\n\nundefined8 calculate_date_time_offset_000047e4(int *date_params)\n\n{\n  longlong total_days;\n  longlong new_total_days;\n  int *ptr;\n  uint remainder;\n  int temp_var2;\n  int temp_var3;\n  int temp_var4;\n  uint temp_var3;\n  uint temp_var6;\n  uint temp_var7;\n  int var11;\n  uint year;\n  uint is_negative;\n  uint var14;\n  uint var15;\n  bool is_leap_year;\n  \n  ptr = (int *)FUN_000056b0();\n  FUN_00004634(date_params);\n  year = date_params[5];\n  var11 = date_params[3] + -1 + *(int *)(&DAT_00007a2c + date_params[4] * 4);\n  if (((1 < date_params[4]) && ((year & 3) == 0)) &&\n     ((year != (year / 100) * 100 || (year + 0x76c == ((year + 0x76c) / 400) * 400)))) {\n    var11 = var11 + 1;\n  }\n  date_params[7] = var11;\n  if (20000 < (int)&DAT_00002710 + year) {\n    temp_var4 = -1;\n    temp_var2 = -1;\n    goto LAB_00004aba;\n  }\n  if ((int)year < 0x47) {\n    if (year != 0x46) {\n      for (temp_var6 = 0x45; (int)year < (int)temp_var6; temp_var6 = temp_var6 - 1) {\n        if ((temp_var6 & 3) == 0) {\n          if (temp_var6 == (temp_var6 / 100) * 100) {\n            if ((temp_var6 + 0x76c) % 400 == 0) {\n              temp_var4 = 0x16e;\n            }\n            else {\n              temp_var4 = 0x16d;\n            }\n          }\n          else {\n            temp_var4 = 0x16e;\n          }\n        }\n        else {\n          temp_var4 = 0x16d;\n        }\n        var11 = var11 - temp_var4;\n      }\n      if ((temp_var6 & 3) == 0) {\n        if (year == (year / 100) * 100) {\n          temp_var4 = 0x16d;\n          if ((year + 0x76c) % 400 == 0) {\n            temp_var4 = 0x16e;\n          }\n        }\n        else {\n          temp_var4 = 0x16e;\n        }\n      }\n      else {\n        temp_var4 = 0x16d;\n      }\n      var11 = var11 - temp_var4;\n    }\n  }\n  else {\n    temp_var6 = 0x46;\n    do {\n      if ((temp_var6 & 3) == 0) {\n        if (temp_var6 % 100 == 0) {\n          if ((temp_var6 + 0x76c) % 400 == 0) {\n            temp_var4 = 0x16e;\n          }\n          else {\n            temp_var4 = 0x16d;\n          }\n        }\n        else {\n          temp_var4 = 0x16e;\n        }\n      }\n      else {\n        temp_var4 = 0x16d;\n      }\n      temp_var6 = temp_var6 + 1;\n      var11 = var11 + temp_var4;\n    } while (year != temp_var6);\n  }\n  total_days = (longlong)var11 * 0x15180 + (longlong)(date_params[2] * 0xe10 + date_params[1] * 0x3c + *date_params)\n  ;\n  var15 = (uint)total_days;\n  temp_var4 = (int)((ulonglong)total_days >> 0x20);\n  FUN_000050e8();\n  FUN_00005100();\n  temp_var6 = DAT_1fff0dd8;\n  if (DAT_1fff0dd8 == 0) {\nLAB_00004934:\n    year = ptr[10];\n    temp_var4 = (uint)total_days + year;\n    temp_var2 = (int)((ulonglong)total_days >> 0x20) +\n            ((int)year >> 0x1f) + (uint)CARRY4((uint)total_days,year);\n  }\n  else {\n    var14 = date_params[8];\n    is_negative = var14;\n    if (0 < (int)var14) {\n      is_negative = 1;\n    }\n    if ((ptr[1] == date_params[5] + 0x76c) || (temp_var2 = FUN_00004f98(), temp_var2 != 0)) {\n      temp_var7 = ptr[0x14];\n      remainder = ptr[0x12];\n      temp_var3 = ptr[10];\n      temp_var6 = remainder - temp_var3;\n      temp_var2 = (ptr[0x13] - ((int)temp_var3 >> 0x1f)) - (uint)(remainder < temp_var3);\n      if (((int)((temp_var4 - temp_var2) - (uint)(var15 < temp_var6)) < 0 ==\n           (SBORROW4(temp_var4,temp_var2) != SBORROW4(temp_var4 - temp_var2,(uint)(var15 < temp_var6)))) &&\n         (temp_var3 = (ptr[0x13] - ((int)temp_var7 >> 0x1f)) - (uint)(remainder < temp_var7),\n         is_leap_year = var15 < remainder - temp_var7,\n         (int)((temp_var4 - temp_var3) - (uint)is_leap_year) < 0 !=\n         (SBORROW4(temp_var4,temp_var3) != SBORROW4(temp_var4 - temp_var3,(uint)is_leap_year)))) goto LAB_00004a88;\n      remainder = ptr[8] - temp_var7;\n      temp_var3 = (ptr[9] - ((int)temp_var7 >> 0x1f)) - (uint)((uint)ptr[8] < temp_var7);\n      if (*ptr != 0) {\n        if ((int)((temp_var4 - temp_var3) - (uint)(var15 < remainder)) < 0 ==\n            (SBORROW4(temp_var4,temp_var3) != SBORROW4(temp_var4 - temp_var3,(uint)(var15 < remainder))))\n        goto LAB_0000491e;\nLAB_0000492a:\n        temp_var6 = 0;\n        if ((int)var14 < 0) goto LAB_00004934;\nLAB_00004a14:\n        var15 = is_negative ^ temp_var6;\n        is_negative = temp_var6;\n        if (var15 == 1) {\n          if (temp_var6 == 0) {\n            temp_var4 = temp_var7 - temp_var3;\n          }\n          else {\n            temp_var4 = temp_var3 - temp_var7;\n          }\n          temp_var2 = date_params[3];\n          *date_params = *date_params + temp_var4;\n          new_total_days = total_days + temp_var4;\n          FUN_00004634(date_params);\n          temp_var2 = date_params[3] - temp_var2;\n          total_days = total_days + temp_var4;\n          if (temp_var2 != 0) {\n            if (temp_var2 < 2) {\n              if (temp_var2 == -2 || temp_var2 + 2 < 0 != SCARRY4(temp_var2,2)) {\n                temp_var2 = 1;\n              }\n            }\n            else {\n              temp_var2 = -1;\n            }\n            temp_var4 = temp_var2 + date_params[7];\n            var11 = var11 + temp_var2;\n            if (temp_var4 < 0) {\n              temp_var6 = year - 1;\n              if ((temp_var6 & 3) == 0) {\n                if (temp_var6 == (temp_var6 / 100) * 100) {\n                  temp_var4 = 0x16d;\n                  if ((year + 0x76b) % 400 != 0) {\n                    temp_var4 = 0x16c;\n                  }\n                }\n                else {\n                  temp_var4 = 0x16d;\n                }\n              }\n              else {\n                temp_var4 = 0x16c;\n              }\n            }\n            else {\n              if ((year & 3) == 0) {\n                if (year == (year / 100) * 100) {\n                  temp_var2 = 0x16d;\n                  if ((year + 0x76c) % 400 == 0) {\n                    temp_var2 = 0x16e;\n                  }\n                }\n                else {\n                  temp_var2 = 0x16e;\n                }\n              }\n              else {\n                temp_var2 = 0x16d;\n              }\n              if (temp_var2 <= temp_var4) {\n                temp_var4 = temp_var4 - temp_var2;\n              }\n            }\n            date_params[7] = temp_var4;\n            total_days = new_total_days;\n          }\n        }\n        goto LAB_00004a88;\n      }\n      if ((int)((temp_var4 - temp_var3) - (uint)(var15 < remainder)) < 0 !=\n          (SBORROW4(temp_var4,temp_var3) != SBORROW4(temp_var4 - temp_var3,(uint)(var15 < remainder)))) {\nLAB_0000491e:\n        if ((int)((temp_var4 - temp_var2) - (uint)(var15 < temp_var6)) < 0 ==\n            (SBORROW4(temp_var4,temp_var2) != SBORROW4(temp_var4 - temp_var2,(uint)(var15 < temp_var6))))\n        goto LAB_0000492a;\n      }\n      if (-1 < (int)var14) {\n        temp_var6 = 1;\n        goto LAB_00004a14;\n      }\n    }\n    else {\nLAB_00004a88:\n      temp_var6 = is_negative;\n      if (is_negative != 1) goto LAB_00004934;\n    }\n    year = ptr[0x14];\n    temp_var4 = (uint)total_days + year;\n    temp_var2 = (int)((ulonglong)total_days >> 0x20) +\n            ((int)year >> 0x1f) + (uint)CARRY4((uint)total_days,year);\n    temp_var6 = 1;\n  }\n  FUN_000050f4();\n  date_params[8] = temp_var6;\n  date_params[6] = (var11 + 4U) % 7;\nLAB_00004aba:\n  return CONCAT44(temp_var2,temp_var4);\n}\n\n",
            "current_name": "calculate_date_time_offset_000047e4",
            "entrypoint": "0x000047e4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000047e4": "calculate_date_time_offset_000047e4",
                "bVar16": "is_leap_year",
                "iVar11": "var11",
                "iVar5": "temp_var2",
                "iVar6": "temp_var3",
                "iVar7": "temp_var4",
                "lVar1": "total_days",
                "lVar2": "new_total_days",
                "param_1": "date_params",
                "piVar3": "ptr",
                "uVar10": "temp_var7",
                "uVar12": "year",
                "uVar13": "is_negative",
                "uVar14": "var14",
                "uVar15": "var15",
                "uVar4": "remainder",
                "uVar8": "temp_var3",
                "uVar9": "temp_var6"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00004b34": {
            "additional_data": {
                "DAT_1fff0db4": {
                    "global_array": 2,
                    "global_data": 1,
                    "global_pointer": 1,
                    "global_var": 1,
                    "head_ptr": 2,
                    "list_head": 2
                },
                "FUN_00004b34": {
                    "process_data": 2,
                    "reverse_code": 1,
                    "reverse_sort": 1,
                    "update_linked_list": 1
                },
                "FUN_00005790": {
                    "do_something": 1,
                    "function_1": 1,
                    "init_function": 1,
                    "initialize": 3,
                    "initialize_data": 2,
                    "initialize_function": 4,
                    "initialize_variables": 1
                },
                "FUN_0000579c": {
                    "finalize": 1,
                    "finalize_data": 2,
                    "function_2": 1,
                    "operate": 1,
                    "perform_task": 1,
                    "process_function": 3,
                    "process_output_function": 1,
                    "process_result": 1,
                    "update_state": 1
                },
                "bVar6": {
                    "check_flag": 1,
                    "condition": 2,
                    "condition_met": 1,
                    "flag": 5,
                    "found": 1,
                    "found_ptr": 1,
                    "is_condition_met": 1,
                    "is_curr_node_equal_to_new_node": 1,
                    "is_end": 1,
                    "is_equal": 5,
                    "is_last_element": 1,
                    "is_last_node": 2,
                    "is_last_ptr": 1,
                    "is_match": 3,
                    "is_matching_branch": 1,
                    "is_next_node_null": 1,
                    "is_same": 1,
                    "is_smaller": 1,
                    "is_special_case": 1
                },
                "extraout_r1": {
                    "extra_out_ptr1": 1,
                    "extra_output": 2,
                    "extra_output_ptr": 1,
                    "extra_ptr": 3,
                    "extra_result": 1,
                    "extra_var1": 1,
                    "new_head": 1,
                    "next_element": 1,
                    "next_ptr": 1,
                    "temp_pointer1": 1,
                    "temp_ptr": 1,
                    "temp_ptr1": 2,
                    "temp_ptr_array": 1,
                    "temp_var2": 2,
                    "temp_var_2": 1,
                    "tmp_ptr": 1
                },
                "fun_00005790": {
                    "initialize_array": 1
                },
                "fun_0000579c": {
                    "output_array": 1
                },
                "param_1": {
                    "array": 4,
                    "array_ptr": 1,
                    "function_result": 1,
                    "list_head": 1,
                    "output": 9,
                    "output_array": 4,
                    "output_ptr": 1,
                    "param_array": 1,
                    "result": 7,
                    "result_array": 2
                },
                "param_2": {
                    "array_length": 7,
                    "array_size": 3,
                    "count": 2,
                    "input_array_size": 2,
                    "input_length": 1,
                    "input_size": 4,
                    "length": 2,
                    "size": 10
                },
                "param_3": {
                    "arg1": 1,
                    "arg3": 2,
                    "input1": 2,
                    "param1": 3,
                    "param3": 9,
                    "param_3": 9,
                    "unknown1": 1,
                    "val1": 1,
                    "value1": 3
                },
                "param_4": {
                    "arg2": 1,
                    "arg4": 2,
                    "input2": 2,
                    "param2": 3,
                    "param4": 9,
                    "param_4": 9,
                    "unknown2": 1,
                    "val2": 1,
                    "value2": 3
                },
                "piVar1": {
                    "current_element": 1,
                    "current_ptr": 2,
                    "current_value": 1,
                    "ptr1": 3,
                    "temp": 2,
                    "temp1": 1,
                    "temp_pointer": 2,
                    "temp_ptr": 9,
                    "temp_ptr1": 3,
                    "temp_var": 1,
                    "temp_var1": 5,
                    "temp_var_1": 1
                },
                "ppiVar2": {
                    "current": 1,
                    "current_node": 2,
                    "current_pointer": 1,
                    "current_pointer1": 1,
                    "current_ptr": 10,
                    "current_ptr1": 1,
                    "iterator1": 1,
                    "list_head": 1,
                    "prev_node": 1,
                    "prev_ptr": 1,
                    "previous_element": 1,
                    "previous_node": 1,
                    "previous_ptr": 1,
                    "ptr2": 1,
                    "sorted_array": 1,
                    "temp2": 1,
                    "temp_ptr2": 3,
                    "temp_var3": 1,
                    "var_ptr1": 1
                },
                "ppiVar3": {
                    "curr_node": 1,
                    "current_node": 4,
                    "current_pointer2": 1,
                    "current_ptr": 1,
                    "iterator2": 1,
                    "next_ptr": 3,
                    "prev_pointer": 1,
                    "prev_ptr": 5,
                    "previous": 1,
                    "previous_node": 2,
                    "previous_ptr": 3,
                    "ptr1": 1,
                    "ptr3": 1,
                    "ptr_before": 1,
                    "temp3": 1,
                    "temp_ptr3": 2,
                    "temp_var4": 1,
                    "var_ptr2": 1
                },
                "ppiVar4": {
                    "curr_ptr": 1,
                    "current_pointer3": 1,
                    "current_ptr2": 1,
                    "iterator": 1,
                    "iterator3": 1,
                    "next_node": 6,
                    "next_ptr": 5,
                    "prev_ptr": 2,
                    "previous_node": 1,
                    "ptr2": 1,
                    "ptr4": 1,
                    "ptr_after": 1,
                    "temp4": 1,
                    "temp_pointer1": 1,
                    "temp_ptr2": 1,
                    "temp_ptr4": 2,
                    "temp_ptr_array": 1,
                    "temp_var5": 1,
                    "temp_var_3": 1,
                    "var_ptr3": 1
                },
                "ppiVar5": {
                    "adjusted_ptr": 1,
                    "current_pointer4": 1,
                    "new_node": 7,
                    "new_pointer": 1,
                    "new_ptr": 13,
                    "node_to_insert": 1,
                    "ptr5": 1,
                    "temp5": 1,
                    "temp_ptr2": 1,
                    "temp_ptr5": 2,
                    "temp_var6": 1,
                    "var_ptr4": 1
                }
            },
            "called": [
                "FUN_00005790",
                "FUN_0000579c"
            ],
            "calling": [
                "FUN_000060cc",
                "FUN_000054a8",
                "FUN_0000404c",
                "FUN_00006768",
                "FUN_00005780",
                "FUN_00006192"
            ],
            "code": "\nvoid process_data_00004b34(undefined4 *output,int size,undefined4 param3,undefined4 param_4)\n\n{\n  int *temp_ptr;\n  int **extra_ptr;\n  int **current_ptr;\n  int **prev_ptr;\n  int **next_node;\n  int **new_ptr;\n  bool is_equal;\n  \n  if (size == 0) {\n    return;\n  }\n  new_ptr = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    new_ptr = (int **)((int)new_ptr + *(int *)(size + -4));\n  }\n  FUN_00005790();\n  prev_ptr = (int **)&DAT_1fff0db4;\n  if (DAT_1fff0db4 == (int **)0x0) {\n    new_ptr[1] = (int *)0x0;\n    current_ptr = extra_ptr;\n    DAT_1fff0db4 = new_ptr;\n  }\n  else {\n    next_node = DAT_1fff0db4;\n    if (new_ptr < DAT_1fff0db4) {\n      current_ptr = (int **)*new_ptr;\n      prev_ptr = (int **)((int)new_ptr + (int)current_ptr);\n      is_equal = DAT_1fff0db4 == prev_ptr;\n      if (is_equal) {\n        prev_ptr = (int **)*DAT_1fff0db4;\n        DAT_1fff0db4 = (int **)DAT_1fff0db4[1];\n      }\n      new_ptr[1] = (int *)DAT_1fff0db4;\n      DAT_1fff0db4 = new_ptr;\n      if (is_equal) {\n        prev_ptr = (int **)((int)prev_ptr + (int)current_ptr);\n        *new_ptr = (int *)prev_ptr;\n      }\n    }\n    else {\n      do {\n        prev_ptr = next_node;\n        next_node = (int **)prev_ptr[1];\n        if (next_node == (int **)0x0) break;\n      } while (next_node <= new_ptr);\n      current_ptr = (int **)*prev_ptr;\n      if ((int **)((int)prev_ptr + (int)current_ptr) == new_ptr) {\n        current_ptr = (int **)((int)current_ptr + (int)*new_ptr);\n        *prev_ptr = (int *)current_ptr;\n        if (next_node == (int **)((int)prev_ptr + (int)current_ptr)) {\n          temp_ptr = *next_node;\n          prev_ptr[1] = next_node[1];\n          current_ptr = (int **)((int)current_ptr + (int)temp_ptr);\n          *prev_ptr = (int *)current_ptr;\n        }\n      }\n      else if (new_ptr < (int **)((int)prev_ptr + (int)current_ptr)) {\n        *output = 0xc;\n      }\n      else {\n        current_ptr = (int **)((int)new_ptr + (int)*new_ptr);\n        is_equal = next_node == current_ptr;\n        if (is_equal) {\n          current_ptr = (int **)*next_node;\n          next_node = (int **)next_node[1];\n        }\n        new_ptr[1] = (int *)next_node;\n        if (is_equal) {\n          current_ptr = (int **)((int)current_ptr + (int)*new_ptr);\n          *new_ptr = (int *)current_ptr;\n        }\n        prev_ptr[1] = (int *)new_ptr;\n      }\n    }\n  }\n  FUN_0000579c(output,current_ptr,prev_ptr,param_4);\n  return;\n}\n\n",
            "current_name": "process_data_00004b34",
            "entrypoint": "0x00004b34",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00004b34": "process_data_00004b34",
                "bVar6": "is_equal",
                "extraout_r1": "extra_ptr",
                "param_1": "output",
                "param_2": "size",
                "param_3": "param3",
                "piVar1": "temp_ptr",
                "ppiVar2": "current_ptr",
                "ppiVar3": "prev_ptr",
                "ppiVar4": "next_node",
                "ppiVar5": "new_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00004bd0": {
            "additional_data": {
                "DAT_1fff0db4": {
                    "first_block": 4,
                    "first_block_address": 1,
                    "first_block_ptr": 1,
                    "memory_block_list": 1,
                    "memory_blocks": 1
                },
                "DAT_1fff0db8": {
                    "allocated_memory": 2,
                    "external_memory_block": 1,
                    "initialized": 3,
                    "is_first_block_allocated": 1,
                    "memory_pool": 1
                },
                "FUN_00000428": {
                    "allocate_block": 2,
                    "allocate_memory": 6,
                    "allocate_memory_block": 1,
                    "allocate_memory_helper2": 1,
                    "allocate_resource": 1,
                    "extend_memory": 1
                },
                "FUN_00004bd0": {
                    "allocate_and_initialize_memory": 1,
                    "allocate_memory": 10,
                    "allocate_memory_and_initialize": 1,
                    "allocate_memory_block": 13,
                    "calculate_memory_size": 1,
                    "check_and_allocate_memory_block": 1,
                    "find_available_memory_block": 1,
                    "reallocate_memory": 1,
                    "resize_and_allocate_memory": 1,
                    "resize_memory_block": 1
                },
                "FUN_00005790": {
                    "allocate_memory_helper1": 1,
                    "initialize_memory": 8,
                    "initialize_memory_allocation": 1,
                    "initialize_memory_manager": 1,
                    "initialize_memory_pool": 1
                },
                "FUN_0000579c": {
                    "allocate_memory_helper3": 1,
                    "clean_memory": 1,
                    "cleanup_memory": 3,
                    "cleanup_memory_manager": 1,
                    "finalize_memory": 2,
                    "finalize_memory_allocation": 1,
                    "free_memory": 2,
                    "release_memory": 1
                },
                "iVar2": {
                    "block_diff": 1,
                    "block_size": 1,
                    "difference": 26,
                    "offset": 3
                },
                "param_1": {
                    "block_size_ptr": 1,
                    "buffer_address": 1,
                    "buffer_length": 1,
                    "memory_block_pointer": 2,
                    "memory_ptr": 1,
                    "memory_region": 1,
                    "out_block": 1,
                    "out_ptr": 1,
                    "output": 1,
                    "output_address": 1,
                    "output_buffer": 6,
                    "output_pointer": 3,
                    "output_ptr": 5,
                    "ptr_result": 1,
                    "result": 4
                },
                "param_2": {
                    "block_size": 3,
                    "current_size": 1,
                    "in_size": 1,
                    "input_buffer_size": 1,
                    "input_size": 4,
                    "requested_size": 10,
                    "size": 11
                },
                "param_3": {
                    "arg1": 2,
                    "arg3": 2,
                    "dummy_param_1": 1,
                    "param1": 1,
                    "param3": 2,
                    "param_3": 17,
                    "undefined_value": 1,
                    "unknown_parameter": 1,
                    "unused1": 1,
                    "unused_param": 2,
                    "unused_parameter_1": 1
                },
                "param_4": {
                    "arg2": 2,
                    "arg4": 2,
                    "dummy_param_2": 1,
                    "param2": 1,
                    "param4": 2,
                    "param_4": 17,
                    "undefined_value2": 1,
                    "unknown_parameter_2": 1,
                    "unused2": 1,
                    "unused_param": 2,
                    "unused_parameter_2": 1
                },
                "puVar1": {
                    "current_block": 2,
                    "current_block_pointer": 1,
                    "prev_block": 4,
                    "prev_block_ptr": 1,
                    "prev_pointer": 1,
                    "prev_ptr": 1,
                    "previous_block": 15,
                    "previous_block_ptr": 1,
                    "previous_mem_ptr": 1,
                    "previous_node": 1,
                    "previous_pointer": 1,
                    "previous_ptr": 2
                },
                "puVar4": {
                    "curr_block": 1,
                    "curr_block_ptr": 1,
                    "current_block": 18,
                    "current_block_ptr": 1,
                    "current_mem_ptr": 1,
                    "current_node": 1,
                    "current_pointer": 2,
                    "current_ptr": 3,
                    "next_block": 1,
                    "previous_block": 1,
                    "previous_block_pointer": 1
                },
                "uVar3": {
                    "block_diff": 2,
                    "block_diff_abs": 1,
                    "block_difference": 8,
                    "block_size": 2,
                    "block_size_diff": 1,
                    "block_size_difference": 1,
                    "calculation_result": 1,
                    "current_size": 2,
                    "diff": 1,
                    "diff_with_block_size": 1,
                    "difference": 4,
                    "difference_temp": 1,
                    "offset": 2,
                    "remaining_size": 1,
                    "size_delta": 1,
                    "size_difference": 1,
                    "temp_value": 1
                },
                "uVar5": {
                    "adjusted_size": 1,
                    "aligned_block_size": 2,
                    "aligned_size": 11,
                    "allocated_size": 3,
                    "block_size": 2,
                    "memory_size": 1,
                    "new_block_size": 4,
                    "new_size": 4,
                    "required_size": 2,
                    "total_size": 1
                }
            },
            "called": [
                "FUN_00005790",
                "FUN_00000428",
                "FUN_0000579c"
            ],
            "calling": [
                "FUN_000060cc",
                "FUN_00005700",
                "FUN_000068f0",
                "FUN_00005100",
                "FUN_00004248"
            ],
            "code": "\nuint check_and_allocate_memory_block_00004bd0(undefined4 *output_buffer,uint size,undefined4 param_3,undefined4 param_4)\n\n{\n  uint *previous_block;\n  int difference;\n  uint block_difference;\n  uint *current_block;\n  uint aligned_size;\n  \n  aligned_size = (size + 3 & 0xfffffffc) + 8;\n  if (aligned_size < 0xc) {\n    aligned_size = 0xc;\n  }\n  if (((int)aligned_size < 0) || (aligned_size < size)) {\n    *output_buffer = 0xc;\n  }\n  else {\n    FUN_00005790();\n    previous_block = DAT_1fff0db4;\n    for (current_block = DAT_1fff0db4; current_block != (uint *)0x0; current_block = (uint *)current_block[1]) {\n      block_difference = *current_block - aligned_size;\n      if (-1 < (int)block_difference) {\n        if (0xb < block_difference) {\n          *current_block = block_difference;\n          current_block = (uint *)((int)current_block + block_difference);\n          goto LAB_00004c34;\n        }\n        if (previous_block == current_block) {\n          DAT_1fff0db4 = (uint *)current_block[1];\n        }\n        if (previous_block != current_block) {\n          previous_block[1] = (uint)(uint *)current_block[1];\n        }\n        goto LAB_00004c42;\n      }\n      previous_block = current_block;\n    }\n    if (DAT_1fff0db8 == 0) {\n      DAT_1fff0db8 = FUN_00000428(output_buffer,0,previous_block,0,param_4);\n    }\n    previous_block = (uint *)FUN_00000428(output_buffer,aligned_size);\n    if ((previous_block != (uint *)0xffffffff) &&\n       ((current_block = (uint *)((int)previous_block + 3U & 0xfffffffc), previous_block == current_block ||\n        (difference = FUN_00000428(output_buffer,(int)current_block - (int)previous_block), difference != -1)))) {\nLAB_00004c34:\n      *current_block = aligned_size;\nLAB_00004c42:\n      FUN_0000579c(output_buffer);\n      aligned_size = (int)current_block + 0xbU & 0xfffffff8;\n      difference = aligned_size - (int)(current_block + 1);\n      if (difference == 0) {\n        return aligned_size;\n      }\n      *(uint *)((int)current_block + difference) = (int)(current_block + 1) - aligned_size;\n      return aligned_size;\n    }\n    *output_buffer = 0xc;\n    FUN_0000579c(output_buffer);\n  }\n  return 0;\n}\n\n",
            "current_name": "check_and_allocate_memory_block_00004bd0",
            "entrypoint": "0x00004bd0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00004bd0": "check_and_allocate_memory_block_00004bd0",
                "iVar2": "difference",
                "param_1": "output_buffer",
                "param_2": "size",
                "puVar1": "previous_block",
                "puVar4": "current_block",
                "uVar3": "block_difference",
                "uVar5": "aligned_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00004c84": {
            "additional_data": {
                "FUN_000042a4": {
                    "handle_relocation": 1
                },
                "FUN_00004c84": {
                    "execute_function": 2,
                    "initialize_function": 1,
                    "parse_relocation_entry": 1,
                    "perform_operation": 1,
                    "process_elf": 1,
                    "process_elf_relocation": 3,
                    "process_function": 11,
                    "process_relocation": 4,
                    "process_relocation_entries": 1,
                    "process_relocation_entry": 1,
                    "process_relocations": 2,
                    "update_elf_relocation": 1
                },
                "FUN_000057f8": {
                    "process_data": 1
                },
                "dVar1": {
                    "base_offset": 1,
                    "d_word_var1": 1,
                    "dword_value1": 1,
                    "dynamic_var": 1,
                    "dynamic_var1": 1,
                    "offset": 8,
                    "offset_value": 2,
                    "r_offset_value": 2,
                    "rel_offset": 1,
                    "relocation_address": 1,
                    "relocation_offset": 11,
                    "temp_offset": 1
                },
                "dword": {
                    "relocation_value": 1
                },
                "param_1": {
                    "arg1": 6,
                    "data": 1,
                    "data_param1": 1,
                    "input1": 6,
                    "input_param": 5,
                    "input_param1": 6,
                    "input_param_1": 3,
                    "offset": 1,
                    "param": 1,
                    "relocation_offset": 1
                },
                "param_2": {
                    "another_param": 1,
                    "arg2": 6,
                    "data_param2": 1,
                    "info": 1,
                    "input2": 6,
                    "input_param2": 6,
                    "input_param_2": 3,
                    "offset_1": 1,
                    "output_param": 2,
                    "param2": 1,
                    "relocation_field": 1,
                    "secondary_param": 1,
                    "value_1": 1
                },
                "param_3": {
                    "address_param": 1,
                    "arg3": 6,
                    "auxiliary_param_1": 1,
                    "data_param3": 1,
                    "input3": 6,
                    "input_param3": 6,
                    "input_param_1": 1,
                    "input_param_3": 3,
                    "offset": 1,
                    "offset_2": 1,
                    "param3": 1,
                    "tertiary_param": 1,
                    "value_2": 1,
                    "yet_another_param": 1
                },
                "param_4": {
                    "address": 1,
                    "arg4": 6,
                    "auxiliary_param_2": 1,
                    "data_param4": 1,
                    "flag_param": 1,
                    "input4": 6,
                    "input_param4": 6,
                    "input_param_2_copy": 1,
                    "input_param_4": 3,
                    "last_param": 1,
                    "offset_3": 1,
                    "param4": 1,
                    "quaternary_param": 1,
                    "value_3": 1
                },
                "uStack_4": {
                    "copy_param_4": 1,
                    "data_stack4": 1,
                    "input_param_4_copy": 1,
                    "param4_buffer": 1,
                    "param4_copy": 1,
                    "param_4_copy": 1,
                    "stack_param3": 1,
                    "stack_value3": 1,
                    "stack_var3": 1,
                    "temp_arg4": 1,
                    "temp_param4": 1,
                    "temp_var3": 1,
                    "temp_var4": 2,
                    "temp_var_4": 1,
                    "u_stack_4": 1,
                    "value_4_copy": 1
                },
                "uStack_8": {
                    "copy_param_3": 1,
                    "data_stack8": 1,
                    "input_param_3_copy": 1,
                    "param3_buffer": 1,
                    "param3_copy": 1,
                    "param_3_copy": 1,
                    "stack_param2": 1,
                    "stack_value2": 1,
                    "stack_var2": 1,
                    "temp_arg3": 1,
                    "temp_param3": 1,
                    "temp_param_3": 1,
                    "temp_var2": 1,
                    "temp_var3": 2,
                    "temp_var_3": 1,
                    "u_stack_8": 1,
                    "value_3_copy": 1
                },
                "uStack_c": {
                    "copy_param_2": 1,
                    "data_stack_c": 1,
                    "input_param_2_copy": 1,
                    "modified_output_param": 1,
                    "offset_1_copy": 1,
                    "param2_buffer": 1,
                    "param2_copy": 1,
                    "param_2_copy": 1,
                    "stack_param1": 1,
                    "stack_value1": 1,
                    "stack_var1": 1,
                    "temp_arg2": 1,
                    "temp_param2": 1,
                    "temp_param_2": 1,
                    "temp_var1": 1,
                    "temp_var2": 2,
                    "temp_var_2": 1,
                    "u_stack_c": 1,
                    "value_2_copy": 1
                },
                "uVar2": {
                    "arg1_backup": 1,
                    "arg1_copy": 3,
                    "copy_of_input_param": 1,
                    "data_copy": 2,
                    "input_param_1_copy": 1,
                    "int_var2": 1,
                    "modified_input_param": 1,
                    "offset_copy": 1,
                    "param1_copy": 2,
                    "param1_value": 1,
                    "param_copy": 3,
                    "relocated_value": 1,
                    "result": 1,
                    "return_value": 2,
                    "temp": 1,
                    "temp_param": 1,
                    "temp_param_1": 1,
                    "temp_var": 3,
                    "temp_var1": 1,
                    "temp_var2": 1,
                    "u_var2": 1,
                    "updated_param": 1
                }
            },
            "called": [
                "FUN_000042a4",
                "FUN_000057f8"
            ],
            "calling": [
                "FUN_00002ecc",
                "FUN_00003524",
                "FUN_00002a88",
                "FUN_00000f04",
                "FUN_00000ed8",
                "FUN_00002fe0",
                "FUN_00003694",
                "FUN_00002f74",
                "FUN_0000316c",
                "FUN_0000305c",
                "FUN_0000211c",
                "FUN_00003378",
                "FUN_00002b10"
            ],
            "code": "\nvoid process_function_00004c84(undefined4 arg1,undefined4 input2,undefined4 input3,undefined4 arg4)\n\n{\n  relocation_value relocation_offset;\n  undefined4 temp_var;\n  undefined4 temp_var2;\n  undefined4 temp_var3;\n  undefined4 temp_var4;\n  \n  relocation_offset = Elf32_Rel_ARRAY_1fff0200[16].r_offset;\n  temp_var = arg1;\n  temp_var2 = input2;\n  temp_var3 = input3;\n  temp_var4 = arg4;\n  if ((Elf32_Rel_ARRAY_1fff0200[16].r_offset != 0) &&\n     (*(int *)(Elf32_Rel_ARRAY_1fff0200[16].r_offset + 0x18) == 0)) {\n    FUN_000042a4(Elf32_Rel_ARRAY_1fff0200[16].r_offset);\n  }\n  FUN_000057f8(relocation_offset,*(undefined4 *)(relocation_offset + 8),arg1,&temp_var2,temp_var,&temp_var2);\n  return;\n}\n\n",
            "current_name": "process_function_00004c84",
            "entrypoint": "0x00004c84",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00004c84": "process_function_00004c84",
                "dVar1": "relocation_offset",
                "dword": "relocation_value",
                "param_1": "arg1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "arg4",
                "uStack_4": "temp_var4",
                "uStack_8": "temp_var3",
                "uStack_c": "temp_var2",
                "uVar2": "temp_var"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00004cb4": {
            "additional_data": {
                "Elf32_Rel_ARRAY_1fff0200": {
                    "relocation_table": 1
                },
                "FUNC_000045e8": {
                    "perform_action": 1
                },
                "FUNC_000045ec": {
                    "perform_cleanup": 1
                },
                "FUN_000042a4": {
                    "cleanup": 1
                },
                "FUN_00004cb4": {
                    "decode_and_count": 1,
                    "decode_and_modify": 1,
                    "decode_and_process_data": 2,
                    "decode_and_process_value": 1,
                    "decode_and_update_counter": 1,
                    "decode_data": 1,
                    "parse_data": 1,
                    "parse_input": 1,
                    "process_data": 7,
                    "process_input": 7,
                    "process_param": 2,
                    "update_param_and_store_byte": 1,
                    "update_value": 1
                },
                "FUN_00005404": {
                    "handle_special_case": 1
                },
                "dVar1": {
                    "offset": 18,
                    "offset_value": 1,
                    "rel_array_offset": 1,
                    "rel_offset": 9,
                    "relocation_offset": 2
                },
                "param_1": {
                    "input": 12,
                    "input_data": 7,
                    "input_param": 2,
                    "input_value": 10
                },
                "puVar2": {
                    "array_pointer": 3,
                    "current_address": 1,
                    "current_data": 2,
                    "data_array": 2,
                    "data_pointer": 3,
                    "data_ptr": 9,
                    "p_rel_offset": 1,
                    "pointer": 4,
                    "ptr": 1,
                    "ptr_array": 1,
                    "ptr_value": 2,
                    "relocated_pointer": 1,
                    "target_ptr": 1
                },
                "puVar4": {
                    "buffer": 1,
                    "buffer_ptr": 2,
                    "byte_pointer": 3,
                    "char_pointer": 2,
                    "char_ptr": 6,
                    "current_char": 1,
                    "current_position": 1,
                    "current_ptr": 1,
                    "data_pointer": 3,
                    "data_ptr": 1,
                    "new_character_pointer": 1,
                    "new_ptr": 1,
                    "new_value": 1,
                    "p_char": 1,
                    "pointer": 2,
                    "pointer2": 1,
                    "ptr": 1,
                    "temp_pointer": 2
                },
                "uVar3": {
                    "count": 8,
                    "counter": 9,
                    "decremented_value": 1,
                    "temp": 1,
                    "temp_value": 2,
                    "temp_var": 2,
                    "temp_var3": 1,
                    "temp_variable": 1,
                    "updated_counter": 1,
                    "updated_value": 2,
                    "value": 2,
                    "var1": 1
                },
                "unaff_r4": {
                    "arg4": 1,
                    "argument_4": 1,
                    "extra_param1": 1,
                    "param1": 1,
                    "param4": 2,
                    "parameter1": 2,
                    "register4": 3,
                    "register_4": 1,
                    "temp_var1": 1,
                    "temp_var_1": 1,
                    "unaff_r4": 3,
                    "unknown_value_1": 1,
                    "unused_parameter": 1,
                    "unused_r4": 1,
                    "unused_var1": 1,
                    "val1": 1,
                    "value1": 1,
                    "var1": 2
                },
                "unaff_r5": {
                    "arg5": 1,
                    "argument_5": 1,
                    "extra_param2": 1,
                    "param2": 1,
                    "param5": 2,
                    "parameter2": 2,
                    "register5": 3,
                    "register_5": 1,
                    "temp_var2": 1,
                    "temp_var_2": 1,
                    "unaff_r5": 3,
                    "unknown_value_2": 1,
                    "unused_parameter": 1,
                    "unused_r5": 1,
                    "unused_var2": 1,
                    "val2": 1,
                    "value2": 1,
                    "var2": 2
                }
            },
            "called": [
                "FUN_000045e8",
                "FUN_00005404",
                "FUN_000042a4",
                "FUN_000045ec"
            ],
            "calling": [
                "FUN_00002a00"
            ],
            "code": "\nuint decode_and_process_data_00004cb4(uint input)\n\n{\n  dword offset;\n  undefined4 *data_ptr;\n  uint counter;\n  undefined *char_ptr;\n  undefined4 unaff_r4;\n  undefined4 register5;\n  \n  offset = relocation_table[16].r_offset;\n  if ((relocation_table[16].r_offset != 0) &&\n     (*(int *)(relocation_table[16].r_offset + 0x18) == 0)) {\n    FUN_000042a4(relocation_table[16].r_offset);\n  }\n  data_ptr = *(undefined4 **)(offset + 8);\n  if ((offset != 0) && (*(int *)(offset + 0x18) == 0)) {\n    FUN_000042a4();\n  }\n  if (data_ptr == &DAT_000079b8) {\n    data_ptr = *(undefined4 **)(offset + 4);\n  }\n  else if (data_ptr == (undefined4 *)&DAT_000079d8) {\n    data_ptr = *(undefined4 **)(offset + 8);\n  }\n  else if (data_ptr == (undefined4 *)&DAT_00007998) {\n    data_ptr = *(undefined4 **)(offset + 0xc);\n  }\n  if ((-1 < (int)(data_ptr[0x19] << 0x1f)) && (-1 < (int)((uint)*(ushort *)(data_ptr + 3) << 0x16))) {\n    FUNC_000045e8(data_ptr[0x16]);\n  }\n  counter = data_ptr[2] - 1;\n  data_ptr[2] = counter;\n  if (((int)counter < 0) && (((int)counter < (int)data_ptr[6] || (counter = input & 0xff, counter == 10))))\n  {\n    input = FUN_00005404(offset,input,data_ptr,counter,unaff_r4,register5);\n  }\n  else {\n    char_ptr = (undefined *)*data_ptr;\n    *data_ptr = char_ptr + 1;\n    *char_ptr = (char)input;\n    input = input & 0xff;\n  }\n  if ((-1 < (int)(data_ptr[0x19] << 0x1f)) && (-1 < (int)((uint)*(ushort *)(data_ptr + 3) << 0x16))) {\n    FUNC_000045ec(data_ptr[0x16]);\n  }\n  return input;\n}\n\n",
            "current_name": "decode_and_process_data_00004cb4",
            "entrypoint": "0x00004cb4",
            "imported": false,
            "improved": true,
            "renaming": {
                "Elf32_Rel_ARRAY_1fff0200": "relocation_table",
                "FUN_00004cb4": "decode_and_process_data_00004cb4",
                "dVar1": "offset",
                "param_1": "input",
                "puVar2": "data_ptr",
                "puVar4": "char_ptr",
                "uVar3": "counter",
                "unaff_r5": "register5"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00004db8": {
            "additional_data": {
                "FUNC_000045e8": {
                    "do_something": 1,
                    "function_a": 1,
                    "perform_action1": 2,
                    "print_string": 2,
                    "process": 1
                },
                "FUNC_000045ec": {
                    "cleanup": 1,
                    "do_something_else": 1,
                    "function_c": 1,
                    "perform_action3": 1,
                    "perform_action4": 1,
                    "print_new_line": 1,
                    "print_string_after_processing": 1
                },
                "FUNC_000054a8": {
                    "check_condition": 1
                },
                "FUN_000042a4": {
                    "check_valid_offset": 1,
                    "function_b": 1,
                    "handle_null": 1,
                    "handle_offset": 1,
                    "initialize_arrays": 1,
                    "perform_action2": 1,
                    "perform_action3": 1
                },
                "FUN_00004db8": {
                    "parse_and_process_data": 1,
                    "parse_input": 2,
                    "parse_string": 1,
                    "process_data": 14,
                    "process_input": 3,
                    "process_param": 1
                },
                "FUN_00005404": {
                    "handle_result": 1,
                    "perform_action2": 1,
                    "print_char": 1,
                    "process_char": 1,
                    "process_character": 1,
                    "write_char_to_array": 1
                },
                "FUN_000054a8": {
                    "check_array": 1,
                    "check_condition": 1,
                    "check_conditions": 2,
                    "check_offset": 1
                },
                "cVar1": {
                    "ch": 1,
                    "char_value": 2,
                    "char_var": 2,
                    "character": 1,
                    "current_byte": 1,
                    "current_char": 22,
                    "current_character": 2
                },
                "dVar2": {
                    "base_offset": 1,
                    "data_offset": 2,
                    "offset": 20,
                    "offset_value": 1,
                    "rel_array_offset": 1,
                    "rel_offset": 5,
                    "some_offset": 1
                },
                "iVar3": {
                    "result": 25,
                    "return_val": 1,
                    "return_value": 4,
                    "temp_var": 1
                },
                "param_1": {
                    "data": 3,
                    "input": 12,
                    "input_data": 9,
                    "input_param": 2,
                    "input_str": 1,
                    "input_value": 4
                },
                "pcVar4": {
                    "char_pointer": 1,
                    "char_pointer2": 1,
                    "char_ptr": 7,
                    "current_str_char": 1,
                    "current_string_char": 2,
                    "pointer": 1,
                    "pointer_to_char": 1,
                    "ptr": 2,
                    "str_ptr": 4,
                    "string_offset": 1,
                    "string_pointer": 1,
                    "string_ptr": 8,
                    "temp_ptr": 1
                },
                "pcVar7": {
                    "char_pointer": 1,
                    "char_ptr": 5,
                    "char_ptr2": 1,
                    "current_char": 2,
                    "current_char_ptr": 2,
                    "current_input_char": 2,
                    "current_pointer": 1,
                    "current_ptr": 4,
                    "input_ptr": 1,
                    "loop_var": 1,
                    "pointer_to_data": 1,
                    "ptr": 4,
                    "ptr1": 1,
                    "str": 1,
                    "str_char": 1,
                    "string_ptr": 1,
                    "string_ptr2": 1,
                    "temp_ptr2": 1
                },
                "ppcVar5": {
                    "array_ptr": 1,
                    "char_array_ptr": 1,
                    "char_double_ptr": 1,
                    "char_pointer_pointer": 1,
                    "char_ptr_ptr": 1,
                    "data": 1,
                    "data_array": 1,
                    "data_ptr": 7,
                    "pointer_array": 1,
                    "pointer_to_pointer": 1,
                    "rel_data": 1,
                    "str_data": 1,
                    "str_pointer": 1,
                    "string_array": 5,
                    "string_array_ptr": 3,
                    "string_data": 1,
                    "string_ptr": 3
                },
                "uVar6": {
                    "output": 1,
                    "result": 4,
                    "return_value": 26
                }
            },
            "called": [
                "FUN_000054a8",
                "FUN_00005404",
                "FUN_000045e8",
                "FUN_000042a4",
                "FUN_000045ec"
            ],
            "calling": [
                "FUN_000033f4",
                "FUN_000034c0",
                "FUN_000033c0",
                "FUN_00003444",
                "FUN_00002a88",
                "FUN_00002f30",
                "FUN_00003478",
                "FUN_00002fe0",
                "FUN_00003694",
                "FUN_00002f74",
                "FUN_000031e0",
                "FUN_0000305c",
                "FUN_000023a4",
                "FUN_00002b10"
            ],
            "code": "\nundefined4 parse_and_process_data_00004db8(int input)\n\n{\n  char current_char;\n  dword offset;\n  int result;\n  char *string_ptr;\n  char **data_ptr;\n  undefined4 return_value;\n  char *char_ptr;\n  \n  offset = Elf32_Rel_ARRAY_1fff0200[16].r_offset;\n  if ((Elf32_Rel_ARRAY_1fff0200[16].r_offset != 0) &&\n     (*(int *)(Elf32_Rel_ARRAY_1fff0200[16].r_offset + 0x18) == 0)) {\n    FUN_000042a4();\n  }\n  data_ptr = *(char ***)(offset + 8);\n  if (*(int *)(offset + 0x18) == 0) {\n    FUN_000042a4(offset);\n  }\n  if (data_ptr == (char **)&DAT_000079b8) {\n    data_ptr = *(char ***)(offset + 4);\n  }\n  else if (data_ptr == (char **)&DAT_000079d8) {\n    data_ptr = *(char ***)(offset + 8);\n  }\n  else if (data_ptr == (char **)&DAT_00007998) {\n    data_ptr = *(char ***)(offset + 0xc);\n  }\n  if ((-1 < (int)data_ptr[0x19] << 0x1f) && (-1 < (int)((uint)*(ushort *)(data_ptr + 3) << 0x16))) {\n    FUNC_000045e8(data_ptr[0x16]);\n  }\n  if ((((int)((uint)*(ushort *)(data_ptr + 3) << 0x1c) < 0) && (data_ptr[4] != (char *)0x0)) ||\n     (result = FUN_000054a8(offset,data_ptr), result == 0)) {\n    char_ptr = (char *)(input + -1);\n    do {\n      while( true ) {\n        char_ptr = char_ptr + 1;\n        current_char = *char_ptr;\n        string_ptr = data_ptr[2] + -1;\n        data_ptr[2] = string_ptr;\n        if (current_char == '\\0') {\n          if (-1 < (int)string_ptr) {\n            char_ptr = *data_ptr;\n            return_value = 10;\n            *data_ptr = char_ptr + 1;\n            *char_ptr = '\\n';\n            goto LAB_00004d64;\n          }\n          result = FUN_00005404(offset,10,data_ptr);\n          if (result != -1) {\n            return_value = 10;\n            goto LAB_00004d64;\n          }\n          goto LAB_00004d60;\n        }\n        if (((int)string_ptr < 0) && (((int)string_ptr < (int)data_ptr[6] || (current_char == '\\n')))) break;\n        string_ptr = *data_ptr;\n        *data_ptr = string_ptr + 1;\n        *string_ptr = current_char;\n      }\n      result = FUN_00005404(offset,current_char,data_ptr);\n    } while (result != -1);\n  }\nLAB_00004d60:\n  return_value = 0xffffffff;\nLAB_00004d64:\n  if ((-1 < (int)data_ptr[0x19] << 0x1f) && (-1 < (int)((uint)*(ushort *)(data_ptr + 3) << 0x16))) {\n    FUNC_000045ec(data_ptr[0x16]);\n  }\n  return return_value;\n}\n\n",
            "current_name": "parse_and_process_data_00004db8",
            "entrypoint": "0x00004db8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00004db8": "parse_and_process_data_00004db8",
                "cVar1": "current_char",
                "dVar2": "offset",
                "iVar3": "result",
                "param_1": "input",
                "pcVar4": "string_ptr",
                "pcVar7": "char_ptr",
                "ppcVar5": "data_ptr",
                "uVar6": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00004dc8": {
            "additional_data": {
                "FUN_00004dc8": {
                    "process_data": 2,
                    "update_data": 2,
                    "update_value": 21,
                    "update_value_based_on_condition": 2,
                    "update_values": 2,
                    "update_var_based_on_conditions": 1,
                    "update_variable": 1
                },
                "Funct_00000490": {
                    "get_offset": 1
                },
                "bVar3": {
                    "is_positive": 28,
                    "is_valid": 2,
                    "valid_offset": 1
                },
                "iVar1": {
                    "result": 30,
                    "result1": 1
                },
                "param_1": {
                    "arg1": 5,
                    "content": 1,
                    "data": 5,
                    "data_buffer": 1,
                    "data_pointer": 2,
                    "data_to_update": 1,
                    "input": 5,
                    "input1": 1,
                    "input_arg": 1,
                    "input_data": 3,
                    "input_param": 1,
                    "param": 1,
                    "param1": 2,
                    "value": 2
                },
                "param_2": {
                    "address": 3,
                    "arg2": 5,
                    "base_address": 1,
                    "data": 8,
                    "data_address": 3,
                    "data_param": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_struct": 1,
                    "input": 1,
                    "input2": 1,
                    "offset": 1,
                    "param2": 2,
                    "param_pointer": 1,
                    "ptr": 1
                },
                "uVar2": {
                    "modified_value": 1,
                    "new_data": 2,
                    "new_val": 1,
                    "new_value": 16,
                    "updated_value": 11
                }
            },
            "called": [
                "FUN_00000490"
            ],
            "calling": [],
            "code": "\nvoid update_value_based_on_condition_00004dc8(undefined4 data,int data)\n\n{\n  int result;\n  uint new_value;\n  bool is_positive;\n  \n  result = FUN_00000490(data,(int)*(short *)(data + 0xe));\n  is_positive = -1 < result;\n  if (is_positive) {\n    new_value = *(int *)(data + 0x54) + result;\n  }\n  else {\n    new_value = *(ushort *)(data + 0xc) & 0xffffefff;\n  }\n  if (is_positive) {\n    *(uint *)(data + 0x54) = new_value;\n  }\n  if (!is_positive) {\n    *(short *)(data + 0xc) = (short)new_value;\n  }\n  return;\n}\n\n",
            "current_name": "update_value_based_on_condition_00004dc8",
            "entrypoint": "0x00004dc8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00004dc8": "update_value_based_on_condition_00004dc8",
                "bVar3": "is_positive",
                "iVar1": "result",
                "param_1": "data",
                "param_2": "data",
                "uVar2": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00004dee": {
            "additional_data": {
                "FUN_000004f2": {
                    "apply_operation": 1,
                    "call_function_1": 1,
                    "helper_function_1": 1,
                    "initialize_if_negative": 1,
                    "perform_operation": 1,
                    "process_data": 1,
                    "reformat_data": 1,
                    "update_data": 1
                },
                "FUN_00000e38": {
                    "calculate_value": 1,
                    "call_function_2": 1,
                    "execute_task": 1,
                    "helper_function_2": 1,
                    "perform_calculation": 1,
                    "perform_operation": 1,
                    "process_data": 1,
                    "reverse_bits": 1
                },
                "FUN_00004dee": {
                    "clear_and_process_data": 1,
                    "convert_and_process_data": 1,
                    "decompiled_function": 1,
                    "extract_information": 1,
                    "process_binary_data": 1,
                    "process_data": 8,
                    "reverse_and_update": 1,
                    "sanitize_and_process_data": 1
                },
                "param_1": {
                    "arg1": 1,
                    "arg_1": 1,
                    "buffer": 1,
                    "data": 2,
                    "data_pointer": 1,
                    "input": 6,
                    "input_buffer": 1,
                    "input_data": 1,
                    "input_param": 1,
                    "input_value": 3,
                    "original_param": 1,
                    "output": 9,
                    "result": 3
                },
                "param_2": {
                    "address": 1,
                    "arg_2": 1,
                    "array_address": 1,
                    "binary_data": 1,
                    "buffer": 1,
                    "buffer_addr": 1,
                    "buffer_address": 1,
                    "data": 10,
                    "data_address": 1,
                    "data_offset": 1,
                    "data_param": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input": 5,
                    "input_data": 1,
                    "input_ptr": 2,
                    "pointer": 1
                },
                "param_3": {
                    "arg1": 2,
                    "arg2": 1,
                    "arg_3": 1,
                    "input_param1": 1,
                    "param": 1,
                    "param1": 4,
                    "param3": 7,
                    "param_3": 9,
                    "param_a": 4,
                    "param_ptr1": 1
                },
                "param_4": {
                    "arg2": 2,
                    "arg3": 1,
                    "arg_4": 1,
                    "flag": 1,
                    "input_param2": 1,
                    "param2": 4,
                    "param4": 7,
                    "param_4": 8,
                    "param_b": 4,
                    "param_ptr2": 1
                },
                "uVar1": {
                    "result": 18,
                    "result_2": 1,
                    "return_value": 5
                }
            },
            "called": [
                "FUN_000004f2",
                "FUN_00000e38"
            ],
            "calling": [],
            "code": "\nundefined4 process_binary_data_00004dee(undefined4 output,int data,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 result;\n  \n  if ((int)((uint)*(ushort *)(data + 0xc) << 0x17) < 0) {\n    FUN_000004f2(output,(int)*(short *)(data + 0xe),0,2);\n  }\n  *(ushort *)(data + 0xc) = *(ushort *)(data + 0xc) & 0xefff;\n  result = FUN_00000e38(param_3,param_4);\n  return result;\n}\n\n",
            "current_name": "process_binary_data_00004dee",
            "entrypoint": "0x00004dee",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00004dee": "process_binary_data_00004dee",
                "param_1": "output",
                "param_2": "data",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00004e26": {
            "additional_data": {
                "FUN_00004e26": {
                    "process_param": 1,
                    "update_configuration": 1,
                    "update_control_flags": 1,
                    "update_data": 4,
                    "update_data_value": 1,
                    "update_flag": 4,
                    "update_flag_and_value": 1,
                    "update_flag_based_on_value": 3,
                    "update_flags": 2,
                    "update_flags_and_values": 2,
                    "update_param_value": 1,
                    "update_parameter": 1,
                    "update_parameter_value": 2,
                    "update_status": 5,
                    "update_value": 1,
                    "update_var_based_on_condition": 1
                },
                "bVar3": {
                    "is_error": 13,
                    "is_invalid": 2,
                    "is_negative": 9,
                    "is_not_found": 1,
                    "is_result_minus_one": 1,
                    "is_result_negative": 3,
                    "is_return_value_negative": 1
                },
                "iVar1": {
                    "result": 28,
                    "return_value": 3
                },
                "param_1": {
                    "address": 1,
                    "arg1": 5,
                    "config": 1,
                    "config_ptr": 1,
                    "data": 3,
                    "data_structure": 1,
                    "flag": 1,
                    "flag_array": 1,
                    "input": 1,
                    "input_flag": 1,
                    "param": 4,
                    "param1": 1,
                    "param1_address": 1,
                    "pointer": 1,
                    "ptr_array": 1,
                    "ptr_to_data": 1,
                    "status": 4,
                    "var1": 1
                },
                "param_2": {
                    "address": 2,
                    "arg2": 5,
                    "base_address": 1,
                    "buffer": 1,
                    "data": 12,
                    "data_address": 1,
                    "data_block": 1,
                    "data_ptr": 2,
                    "offset": 1,
                    "param2": 1,
                    "param2_address": 1,
                    "param_ptr": 1,
                    "var2": 1
                },
                "uVar2": {
                    "flag": 4,
                    "modified_bits": 1,
                    "modified_flag": 1,
                    "modified_value": 4,
                    "new_data_value": 1,
                    "new_flags": 2,
                    "new_value": 1,
                    "status_bits": 1,
                    "updated_flag": 3,
                    "updated_value": 11,
                    "updated_var": 1
                }
            },
            "called": [
                "FUN_000004f2"
            ],
            "calling": [],
            "code": "\nvoid update_flag_based_on_value_00004e26(undefined4 arg1,int data)\n\n{\n  int result;\n  ushort updated_value;\n  bool is_error;\n  \n  result = FUN_000004f2(arg1,(int)*(short *)(data + 0xe));\n  is_error = result == -1;\n  if (is_error) {\n    updated_value = *(ushort *)(data + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(data + 0x54) = result;\n    updated_value = *(ushort *)(data + 0xc) | 0x1000;\n  }\n  if (is_error) {\n    *(ushort *)(data + 0xc) = updated_value;\n  }\n  if (!is_error) {\n    *(ushort *)(data + 0xc) = updated_value;\n  }\n  return;\n}\n\n",
            "current_name": "update_flag_based_on_value_00004e26",
            "entrypoint": "0x00004e26",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00004e26": "update_flag_based_on_value_00004e26",
                "bVar3": "is_error",
                "iVar1": "result",
                "param_1": "arg1",
                "param_2": "data",
                "uVar2": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00004e52": {
            "additional_data": {
                "FUN_00004e52": {
                    "compare_arrays": 3,
                    "compare_buffers": 1,
                    "compare_byte_arrays": 15,
                    "compare_bytes": 11,
                    "subtract_bytes": 1
                },
                "bVar1": {
                    "array2_element": 1,
                    "buffer_2_value": 1,
                    "byte1": 3,
                    "byte2": 6,
                    "byte_from_array2": 2,
                    "compare_byte": 1,
                    "curr_byte2": 1,
                    "current_byte": 5,
                    "current_byte1": 6,
                    "current_byte2": 1,
                    "current_byte_2": 1,
                    "element2": 2,
                    "target_byte": 1
                },
                "bVar3": {
                    "comparison_result": 1,
                    "equal_bytes": 3,
                    "equal_bytes_found": 1,
                    "is_comparison_equal": 1,
                    "is_equal": 19,
                    "is_match": 5,
                    "is_matching": 1
                },
                "param_1": {
                    "array1": 17,
                    "array_1": 1,
                    "buffer_1": 1,
                    "byte_array1": 3,
                    "bytes1": 3,
                    "bytes_1": 1,
                    "data1": 1,
                    "input1": 1,
                    "input_buffer": 1,
                    "input_bytes1": 1,
                    "source": 1
                },
                "param_2": {
                    "array2": 17,
                    "array_2": 1,
                    "buffer_2": 1,
                    "byte_array2": 3,
                    "bytes2": 3,
                    "bytes_2": 1,
                    "compare_buffer": 1,
                    "data2": 1,
                    "input2": 1,
                    "input_bytes2": 1,
                    "target": 1
                },
                "uVar2": {
                    "accumulator": 1,
                    "array1_byte": 3,
                    "array1_element": 2,
                    "buffer_1_value": 1,
                    "byte1": 7,
                    "byte2": 1,
                    "byte_from_array1": 2,
                    "byte_value1": 1,
                    "curr_byte1": 1,
                    "current_byte1": 1,
                    "current_byte2": 6,
                    "current_byte_1": 1,
                    "element1": 2,
                    "input_byte": 1,
                    "source_byte": 1
                }
            },
            "called": [
                "FUN_00004e52"
            ],
            "calling": [
                "FUN_00002a18",
                "FUN_0000316c",
                "FUN_00004e52",
                "FUN_00005100",
                "FUN_00002fe0",
                "FUN_00002b10"
            ],
            "code": "\nint compare_byte_arrays_00004e52(byte *array1,byte *array2)\n\n{\n  byte byte2;\n  uint byte1;\n  bool is_equal;\n  \n  do {\n    byte1 = (uint)*array1;\n    byte2 = *array2;\n    is_equal = byte1 == 1;\n    if (byte1 != 0) {\n      is_equal = byte1 == byte2;\n    }\n    array1 = array1 + 1;\n    array2 = array2 + 1;\n  } while (is_equal);\n  return byte1 - byte2;\n}\n\n",
            "current_name": "compare_byte_arrays_00004e52",
            "entrypoint": "0x00004e52",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00004e52": "compare_byte_arrays_00004e52",
                "bVar1": "byte2",
                "bVar3": "is_equal",
                "param_1": "array1",
                "param_2": "array2",
                "uVar2": "byte1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00004e66": {
            "additional_data": {
                "FUN_00004e66": {
                    "calculate_difference": 1,
                    "compare_and_calculate_difference": 2,
                    "compare_and_get_difference": 1,
                    "compare_and_return_difference": 2,
                    "compare_and_subtract": 2,
                    "compare_arrays": 3,
                    "compare_byte_arrays": 4,
                    "compare_bytes": 11,
                    "compare_data": 1,
                    "find_difference": 3
                },
                "iVar2": {
                    "difference": 25,
                    "result": 4
                },
                "param_1": {
                    "array1": 6,
                    "buffer": 2,
                    "buffer1": 1,
                    "byte_array": 3,
                    "byte_array1": 1,
                    "bytes1": 2,
                    "data": 7,
                    "data1": 1,
                    "data_array": 1,
                    "input_buffer": 1,
                    "input_bytes": 2,
                    "input_data": 1,
                    "source": 1,
                    "source_array": 1,
                    "source_data": 1
                },
                "param_2": {
                    "array1_start_index": 1,
                    "array2_start": 1,
                    "array2_start_index": 2,
                    "bytes2_length": 1,
                    "index": 2,
                    "offset": 6,
                    "source_index": 2,
                    "start_idx": 2,
                    "start_index": 9,
                    "start_offset": 2,
                    "start_position": 3
                },
                "param_3": {
                    "array1_length": 1,
                    "array2_length": 2,
                    "array_size": 1,
                    "buffer_size": 1,
                    "bytes3_length": 1,
                    "data_length": 2,
                    "length": 23
                },
                "pbVar1": {
                    "byte_ptr1": 2,
                    "cur_byte": 1,
                    "current_byte": 15,
                    "current_byte1": 1,
                    "current_byte_array1": 1,
                    "current_element_array1": 1,
                    "current_source_byte": 1,
                    "ptr1": 2,
                    "ptr_array1": 1,
                    "source_byte": 1,
                    "source_ptr": 2
                },
                "pbVar3": {
                    "buffer2": 1,
                    "byte_ptr2": 2,
                    "compare_byte": 1,
                    "compare_ptr": 1,
                    "current_byte2": 1,
                    "current_byte_array2": 1,
                    "current_element_array2": 1,
                    "current_target_byte": 1,
                    "next_byte": 15,
                    "ptr2": 2,
                    "ptr_array2": 1,
                    "target_ptr": 1
                },
                "uVar4": {
                    "byte_value": 2,
                    "current_byte": 2,
                    "current_byte1_value": 1,
                    "current_byte_val": 1,
                    "current_byte_value": 10,
                    "current_element": 1,
                    "current_value": 3,
                    "element1": 1,
                    "source_byte": 2,
                    "source_value": 1,
                    "temp": 3,
                    "val": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00003524",
                "FUN_0000562c"
            ],
            "code": "\nint compare_bytes_00004e66(byte *data,int start_index,int length)\n\n{\n  byte *current_byte;\n  int difference;\n  byte *next_byte;\n  uint current_byte_value;\n  \n  if (length == 0) {\n    difference = 0;\n  }\n  else {\n    next_byte = (byte *)(start_index + -1);\n    current_byte = data;\n    do {\n      current_byte_value = (uint)*current_byte;\n      next_byte = next_byte + 1;\n      if ((current_byte_value != *next_byte) || (current_byte + 1 == data + length)) break;\n      current_byte = current_byte + 1;\n    } while (current_byte_value != 0);\n    difference = current_byte_value - *next_byte;\n  }\n  return difference;\n}\n\n",
            "current_name": "compare_bytes_00004e66",
            "entrypoint": "0x00004e66",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00004e66": "compare_bytes_00004e66",
                "iVar2": "difference",
                "param_1": "data",
                "param_2": "start_index",
                "param_3": "length",
                "pbVar1": "current_byte",
                "pbVar3": "next_byte",
                "uVar4": "current_byte_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00004f84": {
            "additional_data": {
                "Elf32_Rel_ARRAY_1fff0200": {
                    "some_array": 1
                },
                "FUN_00004f84": {
                    "convert_string_to_int": 1,
                    "convert_string_to_integer": 2,
                    "convert_string_to_number": 2,
                    "convert_string_to_unsigned_int": 1,
                    "convert_to_decimal": 1,
                    "convert_to_integer": 2,
                    "convert_to_number": 1,
                    "parse_integer": 10,
                    "parse_number": 6,
                    "parse_number_from_string": 2,
                    "parse_numeric_string": 1,
                    "parse_signed_integer": 1
                },
                "FtoUInt": {
                    "convert_float_to_unsigned_int": 1
                },
                "iVar5": {
                    "compare_result": 6,
                    "comparision_result": 1,
                    "comparison": 6,
                    "comparison_result": 6,
                    "conversion_status": 1,
                    "is_negative": 1,
                    "is_valid": 1,
                    "parse_error": 1,
                    "parse_result": 1,
                    "sign": 1,
                    "sign_flag": 1,
                    "state": 1,
                    "status": 4
                },
                "param_1": {
                    "bytes": 1,
                    "input": 5,
                    "input_buffer": 1,
                    "input_ptr": 1,
                    "input_str": 3,
                    "input_string": 20
                },
                "param_2": {
                    "end_pointer": 1,
                    "next_str_ptr": 1,
                    "output": 3,
                    "output_buffer": 1,
                    "output_pointer": 5,
                    "output_ptr": 4,
                    "output_string": 8,
                    "parsed_string": 2,
                    "remaining_bytes": 1,
                    "remaining_chars": 1,
                    "remaining_string": 2,
                    "remaining_string_ptr": 2
                },
                "param_3": {
                    "base": 31
                },
                "pbVar8": {
                    "char_ptr": 1,
                    "current_byte": 16,
                    "current_char": 7,
                    "current_character_ptr": 1,
                    "current_pointer": 2,
                    "current_ptr": 4
                },
                "pbVar9": {
                    "next_byte": 16,
                    "next_char": 7,
                    "next_char_ptr": 1,
                    "next_character_ptr": 1,
                    "next_pointer": 2,
                    "next_ptr": 4
                },
                "uVar1": {
                    "number": 1,
                    "parsed_integer": 1,
                    "parsed_number": 4,
                    "parsed_value": 2,
                    "result": 23
                },
                "uVar2": {
                    "c": 1,
                    "ch": 4,
                    "character": 1,
                    "current_byte": 2,
                    "current_char": 23
                },
                "uVar3": {
                    "ch_flags": 1,
                    "char_flags": 1,
                    "flag": 2,
                    "flags": 1,
                    "found_sign": 1,
                    "hex_prefix_flag": 1,
                    "is_hex": 1,
                    "is_negative": 22,
                    "is_special_char": 1
                },
                "uVar4": {
                    "char_value": 2,
                    "converted_digit": 3,
                    "converted_value": 1,
                    "digit": 4,
                    "digit_value": 17,
                    "numeric_value": 1,
                    "parsed_digit": 3
                },
                "uVar6": {
                    "abs_value": 1,
                    "adjusted_max": 1,
                    "max_digit_limit": 1,
                    "max_dividend": 1,
                    "max_divisible": 1,
                    "max_divisor": 1,
                    "max_int": 1,
                    "max_result": 5,
                    "max_unsigned_value": 2,
                    "max_value": 15,
                    "maximum_value": 1,
                    "remainder": 1
                },
                "uVar7": {
                    "base_div_max": 1,
                    "divide_result": 1,
                    "dividend": 1,
                    "division_result": 1,
                    "divisor": 7,
                    "max_dividend": 1,
                    "max_divisor": 2,
                    "max_quotient": 3,
                    "quotient": 13,
                    "threshold": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00004042",
                "FUN_0000328c"
            ],
            "code": "\nuint parse_signed_integer_00004f84(byte *input_string,byte **output_string,uint base)\n\n{\n  uint result;\n  uint current_char;\n  uint is_negative;\n  uint digit_value;\n  int comparison;\n  uint max_value;\n  uint quotient;\n  byte *current_byte;\n  byte *next_byte;\n  \n  next_byte = input_string;\n  do {\n    current_byte = next_byte;\n    next_byte = current_byte + 1;\n    current_char = (uint)*current_byte;\n    is_negative = (byte)(&DAT_00007a99)[current_char] & 8;\n  } while (((&DAT_00007a99)[current_char] & 8) != 0);\n  if (current_char == 0x2d) {\n    current_char = (uint)*next_byte;\n    is_negative = 1;\n    next_byte = current_byte + 2;\n  }\n  else if (current_char == 0x2b) {\n    current_char = (uint)*next_byte;\n    next_byte = current_byte + 2;\n  }\n  if (base == 0) {\n    if (current_char != 0x30) {\n      base = 10;\n      goto LAB_00004ed6;\n    }\n  }\n  else if ((base != 0x10) || (current_char != 0x30)) goto LAB_00004ed6;\n  if ((*next_byte & 0xdf) == 0x58) {\n    current_char = (uint)next_byte[1];\n    base = 0x10;\n    next_byte = next_byte + 2;\n  }\n  else {\n    current_char = 0x30;\n    if (base == 0) {\n      base = 8;\n    }\n  }\nLAB_00004ed6:\n  max_value = is_negative + 0x7fffffff;\n  comparison = 0;\n  quotient = max_value / base;\n  result = 0;\n  do {\n    digit_value = current_char - 0x30;\n    if (9 < digit_value) {\n      if (current_char - 0x41 < 0x1a) {\n        digit_value = current_char - 0x37;\n      }\n      else {\n        if (0x19 < current_char - 0x61) break;\n        digit_value = current_char - 0x57;\n      }\n    }\n    if ((int)base <= (int)digit_value) break;\n    if (comparison != -1) {\n      if ((quotient < result) || ((quotient == result && ((int)(max_value - base * quotient) < (int)digit_value)))) {\n        comparison = -1;\n      }\n      else {\n        result = result * base + digit_value;\n        comparison = 1;\n      }\n    }\n    current_char = (uint)*next_byte;\n    next_byte = next_byte + 1;\n  } while( true );\n  if (comparison == -1) {\n    *(undefined4 *)some_array[16].r_offset = 0x22;\n    result = max_value;\n    if (output_string == (byte **)0x0) {\n      return max_value;\n    }\n  }\n  else {\n    if (is_negative != 0) {\n      result = -result;\n    }\n    if (output_string == (byte **)0x0) {\n      return result;\n    }\n    if (comparison == 0) goto LAB_00004f64;\n  }\n  input_string = next_byte + -1;\nLAB_00004f64:\n  *output_string = input_string;\n  return result;\n}\n\n",
            "current_name": "parse_signed_integer_00004f84",
            "entrypoint": "0x00004f84",
            "imported": false,
            "improved": true,
            "renaming": {
                "Elf32_Rel_ARRAY_1fff0200": "some_array",
                "FUN_00004f84": "parse_signed_integer_00004f84",
                "iVar5": "comparison",
                "param_1": "input_string",
                "param_2": "output_string",
                "param_3": "base",
                "pbVar8": "current_byte",
                "pbVar9": "next_byte",
                "uVar1": "result",
                "uVar2": "current_char",
                "uVar3": "is_negative",
                "uVar4": "digit_value",
                "uVar6": "max_value",
                "uVar7": "quotient"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00004f98": {
            "additional_data": {
                "DAT_00007b98": {
                    "lookup_table_start": 1
                },
                "FUN_00004f98": {
                    "calculate_date_offset": 1,
                    "calculate_date_validity": 3,
                    "calculate_day_of_week": 18,
                    "calculate_leap_year": 2,
                    "calculate_leap_year_offset": 1,
                    "calculate_week_number": 1,
                    "calculate_weekday": 3,
                    "get_day_of_week": 1
                },
                "FUN_000056b0": {
                    "get_calendar_data": 1,
                    "initialize_result_array": 1,
                    "initialize_results_array": 1
                },
                "UNK_00007b98": {
                    "lookup_table_start": 1,
                    "month_days_lookup": 1,
                    "month_lengths": 1,
                    "month_offset": 1,
                    "month_offsets": 3
                },
                "iVar15": {
                    "final_day_offset": 1
                },
                "iVar4": {
                    "day_adjustment": 1,
                    "day_index": 1,
                    "day_modifier": 1,
                    "day_of_week_adjustment": 1,
                    "day_of_week_offset": 2,
                    "day_offset": 5,
                    "day_value": 1,
                    "days_added": 1,
                    "days_offset": 1,
                    "days_since_beginning": 1,
                    "days_to_add": 5,
                    "extra_days": 4,
                    "leap_year_adjustment": 1,
                    "temp1": 1,
                    "temp_var": 1,
                    "temp_var2": 1,
                    "total_days": 2,
                    "total_offset": 1
                },
                "iVar6": {
                    "adjusted_year": 1,
                    "base_days": 1,
                    "base_offset": 1,
                    "base_value": 1,
                    "day_index": 1,
                    "day_of_week_calculation": 1,
                    "days_offset": 1,
                    "days_passed": 1,
                    "days_since1900": 1,
                    "days_since_1900": 1,
                    "days_since_janeiro": 1,
                    "days_since_start": 2,
                    "days_so_far": 1,
                    "index": 1,
                    "leap_years": 1,
                    "modifier": 1,
                    "num_days": 1,
                    "offset": 1,
                    "temp2": 1,
                    "temp_var3": 1,
                    "total_day_offset": 1,
                    "total_days": 2,
                    "total_days_offset": 1,
                    "total_offset": 1,
                    "weekday_offset": 1,
                    "year_modifier": 1,
                    "year_offset": 3
                },
                "iVar8": {
                    "day_index": 1,
                    "day_of_week_data_index": 1,
                    "i": 13,
                    "index": 5,
                    "loop_counter": 1,
                    "loop_index": 1,
                    "loop_var1": 1,
                    "month_index": 4,
                    "month_modifier": 1,
                    "temp_counter": 1,
                    "temp_var5": 1,
                    "week_offset": 1
                },
                "iVar9": {
                    "adjusted_day_of_week": 1,
                    "current_day_difference": 1,
                    "day_of_week": 2,
                    "day_of_week_correction": 1,
                    "day_of_week_index": 1,
                    "day_of_week_offset": 1,
                    "day_offset": 2,
                    "days_difference": 1,
                    "days_from_previous_week": 1,
                    "days_in_month": 1,
                    "days_passed": 1,
                    "days_subtract": 1,
                    "days_to_add": 1,
                    "days_to_end_of_week": 1,
                    "loop_var2": 1,
                    "offset": 3,
                    "shift": 1,
                    "start_day": 1,
                    "start_day_offset": 1,
                    "start_idx": 1,
                    "temp_var6": 1,
                    "week_day_offset": 1,
                    "week_index": 1,
                    "weekday": 1,
                    "weekday_offset": 3
                },
                "param_1": {
                    "input": 1,
                    "input_year": 1,
                    "year": 28
                },
                "puVar1": {
                    "date_info": 2,
                    "output_array": 1,
                    "output_buffer": 1,
                    "output_ptr": 1,
                    "result": 15,
                    "result_array": 11
                },
                "puVar5": {
                    "arr": 1,
                    "calendar": 3,
                    "calendar_data": 1,
                    "current_array": 2,
                    "current_date": 1,
                    "data": 1,
                    "data_ptr": 1,
                    "date_data": 1,
                    "date_info": 1,
                    "date_table": 1,
                    "day_of_week_data": 1,
                    "day_offsets": 1,
                    "iteration_ptr": 2,
                    "lookup_array": 1,
                    "lookup_table": 2,
                    "ptr": 2,
                    "result_array_iterator": 1,
                    "result_array_ptr": 2,
                    "result_pointer": 1,
                    "result_ptr": 2,
                    "results_array": 1,
                    "tables": 1,
                    "temp_array_ptr": 1
                },
                "uVar10": {
                    "is_century_leap_year": 3,
                    "is_century_year": 2,
                    "is_divisible": 3,
                    "is_divisible_alt2": 1,
                    "is_divisible_by4": 1,
                    "is_divisible_by400": 5,
                    "is_divisible_by_400": 1,
                    "is_leap": 2,
                    "is_leap_year": 1,
                    "is_leap_year4": 1,
                    "is_mul400": 1,
                    "is_multiple": 1,
                    "is_multiple_of400": 6,
                    "is_year_divisible": 1,
                    "starts_at_sunday": 1,
                    "temp_var7": 1
                },
                "uVar11": {
                    "days_in_week": 1,
                    "is_divisible_by4": 1,
                    "is_end_of_month": 1,
                    "is_leap_year_difference": 1
                },
                "uVar12": {
                    "current_index": 1,
                    "days_in_month": 1
                },
                "uVar13": {
                    "days_since_base": 1,
                    "leap_year_count": 1
                },
                "uVar14": {
                    "current_year": 1,
                    "is_before_base": 1
                },
                "uVar15": {
                    "start_offset": 1
                },
                "uVar16": {
                    "day_of_week": 1
                },
                "uVar17": {
                    "start_offset_divisor": 1
                },
                "uVar18": {
                    "week_day_index": 1
                },
                "uVar19": {
                    "total_offset_seconds": 1
                },
                "uVar2": {
                    "day_of_week": 1,
                    "is_current_year_leap_year": 1,
                    "is_leap": 3,
                    "is_leap_year": 18,
                    "is_valid": 4,
                    "result": 2,
                    "return_value": 2
                },
                "uVar20": {
                    "end_offset": 1
                },
                "uVar21": {
                    "is_end_offset_less_than_or_equal_to_index": 1
                },
                "uVar3": {
                    "day": 1,
                    "day_of_week": 12,
                    "day_of_week_index": 2,
                    "day_of_year": 1,
                    "day_offset": 3,
                    "index": 2,
                    "leap_year_day_index_alt": 1,
                    "month_offset": 3,
                    "num_of_days": 1,
                    "temp_var1": 1,
                    "weekday": 1,
                    "weekday_index": 1,
                    "year_difference": 1,
                    "year_offset": 1
                },
                "uVar7": {
                    "is_century_leap_year": 1,
                    "is_divisible_by100": 2,
                    "is_leap": 1,
                    "is_leap_adjusted": 1,
                    "is_leap_year": 9,
                    "is_leap_year2": 1,
                    "is_leap_year400": 2,
                    "is_leap_year_alt": 1,
                    "is_leap_year_extra": 1,
                    "is_leap_year_flag": 1,
                    "is_leap_year_variant": 3,
                    "is_non_century_leap_year": 1,
                    "leap": 1,
                    "leap_day": 1,
                    "leap_year": 1,
                    "leap_year_adjustment": 1,
                    "leap_year_modifier": 1,
                    "leap_year_offset": 1,
                    "temp_var4": 1
                }
            },
            "called": [
                "FUN_000056b0"
            ],
            "calling": [
                "FUN_00005100",
                "FUN_000047e4"
            ],
            "code": "\nundefined4 calculate_day_of_week_00004f98(uint year)\n\n{\n  uint *result;\n  undefined4 is_leap_year;\n  uint day_of_week;\n  int days_to_add;\n  uint *calendar;\n  int year_offset;\n  uint is_leap_year;\n  int i;\n  int weekday_offset;\n  uint is_multiple_of400;\n  \n  result = (uint *)FUN_000056b0();\n  if ((int)year < 0x7b2) {\n    is_leap_year = 0;\n  }\n  else {\n    year_offset = (year - 0x7b2) * 0x16d + ((int)(year - 0x7b1) >> 2) +\n            (year - 0x76d) / 0xffffff9c + (year - 0x641) / 400;\n    result[1] = year;\n    is_multiple_of400 = (uint)(year % 400 == 0);\n    calendar = result;\n    do {\n      day_of_week = calendar[5];\n      if (*(char *)(calendar + 2) == 'J') {\n        if ((((year & 3) == 0) && (year % 100 != 0)) || (year % 400 == 0)) {\n          if ((int)day_of_week < 0x3c) {\n            days_to_add = 0;\n          }\n          else {\n            days_to_add = 1;\n          }\n        }\n        else {\n          days_to_add = 0;\n        }\n        days_to_add = days_to_add + year_offset + day_of_week + -1;\n      }\n      else if (*(char *)(calendar + 2) == 'D') {\n        days_to_add = year_offset + day_of_week;\n      }\n      else {\n        is_leap_year = is_multiple_of400;\n        if (((year & 3) == 0) && (year % 100 != 0)) {\n          is_leap_year = 1;\n        }\n        i = 0;\n        days_to_add = year_offset;\n        while( true ) {\n          i = i + 1;\n          if ((int)calendar[3] <= i) break;\n          days_to_add = days_to_add + *(int *)(&month_offsets + i * 4 + is_leap_year * 0x30);\n        }\n        weekday_offset = day_of_week - (days_to_add + 4U) % 7;\n        if (weekday_offset < 0) {\n          weekday_offset = weekday_offset + 7;\n        }\n        for (weekday_offset = (calendar[4] - 1) * 7 + weekday_offset;\n            *(int *)(&month_offsets + i * 4 + is_leap_year * 0x30) <= weekday_offset; weekday_offset = weekday_offset + -7) {\n        }\n        days_to_add = days_to_add + weekday_offset;\n      }\n      day_of_week = calendar[10] + days_to_add * 0x15180 + calendar[6];\n      calendar[8] = day_of_week;\n      calendar[9] = (int)day_of_week >> 0x1f;\n      calendar = calendar + 10;\n    } while (result + 0x14 != calendar);\n    day_of_week = result[9];\n    is_multiple_of400 = result[0x13];\n    *result = (uint)((int)((day_of_week - is_multiple_of400) - (uint)(result[8] < result[0x12])) < 0 !=\n                    (SBORROW4(day_of_week,is_multiple_of400) !=\n                    SBORROW4(day_of_week - is_multiple_of400,(uint)(result[8] < result[0x12]))));\n    is_leap_year = 1;\n  }\n  return is_leap_year;\n}\n\n",
            "current_name": "calculate_day_of_week_00004f98",
            "entrypoint": "0x00004f98",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00004f98": "calculate_day_of_week_00004f98",
                "UNK_00007b98": "month_offsets",
                "iVar4": "days_to_add",
                "iVar6": "year_offset",
                "iVar8": "i",
                "iVar9": "weekday_offset",
                "param_1": "year",
                "puVar1": "result",
                "puVar5": "calendar",
                "uVar10": "is_multiple_of400",
                "uVar2": "is_leap_year",
                "uVar3": "day_of_week",
                "uVar7": "is_leap_year"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000050e8": {
            "additional_data": {
                "DAT_1fff0deb": {
                    "data_address": 1,
                    "entry_point": 1,
                    "memory_address": 10,
                    "starting_address": 1
                },
                "FUN_000050e8": {
                    "get_data_address": 10,
                    "get_data_pointer": 5,
                    "get_data_ptr": 1,
                    "get_default_data_pointer": 1,
                    "get_entry_point": 1,
                    "get_memory_address": 11,
                    "get_starting_address": 2
                },
                "NULL": {
                    "undefined_address": 1
                },
                "undefined": {
                    "pointer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_000047e4"
            ],
            "code": "\npointer * get_memory_address_000050e8(void)\n\n{\n  return &DAT_1fff0deb;\n}\n\n",
            "current_name": "get_memory_address_000050e8",
            "entrypoint": "0x000050e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000050e8": "get_memory_address_000050e8",
                "undefined": "pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000050f4": {
            "additional_data": {
                "": {
                    "": 1
                },
                "DAT_1fff0deb": {
                    "data_address": 2,
                    "data_ptr": 1,
                    "memory_address": 5,
                    "start_address": 3,
                    "starting_address": 3
                },
                "FUN_000050f4": {
                    "get_dat_ptr": 1,
                    "get_data_address": 6,
                    "get_data_pointer": 5,
                    "get_data_ptr": 3,
                    "get_data_start_address": 1,
                    "get_memory_address": 7,
                    "get_memory_data_address": 1,
                    "get_start_address": 3,
                    "get_starting_address": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_000047e4"
            ],
            "code": "\nundefined * get_memory_data_address_000050f4(void)\n\n{\n  return &DAT_1fff0deb;\n}\n\n",
            "current_name": "get_memory_data_address_000050f4",
            "entrypoint": "0x000050f4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000050f4": "get_memory_data_address_000050f4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00005100": {
            "additional_data": {
                "DAT_1fff0cfc": {
                    "data3": 1
                },
                "DAT_1fff0dbc": {
                    "data2": 1
                },
                "DAT_1fff0dc7": {
                    "data1": 1
                },
                "DAT_1fff0dd4": {
                    "buffer": 1,
                    "unused_data": 1
                },
                "DAT_1fff0dd8": {
                    "parsed_data": 1,
                    "pc_var1": 1
                },
                "DAT_1fff0ddc": {
                    "difference": 1,
                    "pc_var2": 1
                },
                "Elf32_Rel_ARRAY_1fff0200": {
                    "elf_array": 1
                },
                "FUM_00005100": {
                    "parse_configuration": 1
                },
                "FUN_00004bd0": {
                    "allocate_and_copy": 1,
                    "allocate_memory": 9
                },
                "FUN_00004e52": {
                    "check_condition": 7,
                    "is_valid_data": 1,
                    "is_valid_string": 1,
                    "validate_data": 1,
                    "validate_string": 1
                },
                "FUN_00004f98": {
                    "cleanup_memory": 1,
                    "do_something": 1,
                    "free_memory": 1,
                    "free_resources": 1,
                    "perform_operation": 1,
                    "print_error_message": 1,
                    "print_info": 1,
                    "print_message": 1,
                    "print_output": 1,
                    "release_memory": 1
                },
                "FUN_00005100": {
                    "decode_and_update_data": 1,
                    "extract_function_data": 1,
                    "parse_and_process_data": 1,
                    "parse_and_set_values": 1,
                    "parse_and_update_configuration": 1,
                    "parse_configuration": 5,
                    "parse_configuration_data": 1,
                    "parse_coordinates": 6,
                    "parse_data": 6,
                    "parse_function": 1,
                    "parse_input": 1,
                    "process_code": 1,
                    "process_data": 3
                },
                "FUN_000056a0": {
                    "find_data_by_offset": 1,
                    "find_string": 3,
                    "find_substring": 1,
                    "find_symbol": 2,
                    "get_data": 1,
                    "get_parsed_string": 1,
                    "get_string_from_offset": 1,
                    "search_data_in_memory": 1
                },
                "FUN_000056b0": {
                    "get_base_address": 4,
                    "get_elf_data_offset": 1,
                    "get_global_variable": 1,
                    "get_global_variable_address": 1,
                    "get_memory_address": 3,
                    "get_offset": 1
                },
                "FUN_00005780": {
                    "free_memory": 7,
                    "release_memory": 2,
                    "reset_data": 1,
                    "reset_memory": 1
                },
                "FUN_00005e68": {
                    "parse_data": 1,
                    "parse_format_string": 2,
                    "parse_string": 4,
                    "parse_string_data": 1
                },
                "FUN_00005ebc": {
                    "copy_data": 2,
                    "copy_string": 6,
                    "copy_string_to_memory": 2,
                    "store_parsed_string": 1
                },
                "FUN_00005ecc": {
                    "calculate_length": 1,
                    "calculate_string_length": 2,
                    "calculate_value": 1,
                    "convert_string_to_int": 1,
                    "convert_to_integer": 1,
                    "get_data_length": 1,
                    "get_parsed_string_size": 1,
                    "get_string_length": 1,
                    "process_string": 2
                },
                "FUN_00005fd8": {
                    "extract_substrings": 1,
                    "find_char": 1,
                    "find_delimiter": 2,
                    "parse_character_data": 1,
                    "parse_hex": 1,
                    "parse_hex_string": 1,
                    "parse_input": 1,
                    "parse_other_data": 1,
                    "parse_string": 1,
                    "parse_token": 1
                },
                "F_00005100": {
                    "process_data": 1
                },
                "bVar8": {
                    "flag": 3,
                    "flag2": 1,
                    "found": 1,
                    "found_m": 1,
                    "has_date_time": 1,
                    "has_position": 1,
                    "have_token": 1,
                    "is_first": 1,
                    "is_first_data": 1,
                    "is_first_section": 1,
                    "is_first_time": 1,
                    "is_multiple": 2,
                    "is_negative": 1,
                    "is_present": 1,
                    "is_second_iteration": 1,
                    "is_second_str": 1,
                    "is_secondary": 1,
                    "single_digit_format": 1
                },
                "dVar1": {
                    "d_offset": 1,
                    "data_offset": 2,
                    "offset": 12,
                    "r_offset": 2,
                    "rel_offset": 2,
                    "relative_offset": 1
                },
                "iVar2": {
                    "base_address": 2,
                    "config_offset": 1,
                    "config_struct": 1,
                    "data_struct": 1,
                    "result": 16
                },
                "iVar4": {
                    "parse_result": 1,
                    "result": 4,
                    "return_value": 3,
                    "status": 9,
                    "temp": 1,
                    "temp_int": 1,
                    "value": 1,
                    "var4": 1
                },
                "iVar5": {
                    "bytes_read": 1,
                    "count": 10,
                    "length": 2,
                    "parse_result": 4,
                    "parse_result2": 1,
                    "read_result": 1,
                    "temp2": 1,
                    "var5": 1
                },
                "local_2c": {
                    "parsed_string": 1,
                    "path": 1,
                    "path_buffer": 1,
                    "ptr_array": 1,
                    "str_arr": 1,
                    "str_array": 2,
                    "strarr": 1,
                    "string_array": 1,
                    "string_buffer": 2,
                    "strings": 2,
                    "temp_array": 4,
                    "temp_buf": 1,
                    "temp_string": 1,
                    "temp_strings": 1,
                    "token": 1
                },
                "local_30": {
                    "bytes_read": 1,
                    "index": 3,
                    "length": 3,
                    "local_scan_result": 1,
                    "param_1": 1,
                    "parse_offset": 1,
                    "position": 1,
                    "scanf_result": 1,
                    "temp": 5,
                    "temp4": 1,
                    "temp_var": 2,
                    "var_g": 1
                },
                "local_32": {
                    "another_thing": 1,
                    "day": 1,
                    "local_sub_second": 1,
                    "param_2": 1,
                    "parsed_val6": 1,
                    "part6": 1,
                    "seconds2": 2,
                    "sixth_number": 1,
                    "temp3": 1,
                    "val6": 1,
                    "value6": 6,
                    "var_f": 1,
                    "year": 2,
                    "years": 1
                },
                "local_34": {
                    "fifth_number": 1,
                    "local_second": 1,
                    "minutes2": 1,
                    "month": 3,
                    "months": 1,
                    "param_3": 1,
                    "parsed_val5": 1,
                    "part5": 1,
                    "seconds1": 1,
                    "something_else": 1,
                    "temp2": 1,
                    "val5": 1,
                    "value5": 6,
                    "var_e": 1
                },
                "local_36": {
                    "day": 2,
                    "days": 1,
                    "fourth_number": 1,
                    "hours2": 1,
                    "local_minute": 1,
                    "minutes2": 1,
                    "param_4": 1,
                    "parsed_val4": 1,
                    "part4": 1,
                    "something": 1,
                    "temp1": 1,
                    "val4": 1,
                    "value4": 6,
                    "var_d": 1,
                    "year": 1
                },
                "local_38": {
                    "minutes1": 1,
                    "parsed_val3": 1,
                    "part3": 1,
                    "second": 5,
                    "seconds": 4,
                    "third_number": 1,
                    "val3": 1,
                    "value3": 6,
                    "var_c": 1
                },
                "local_3a": {
                    "hours2": 1,
                    "minute": 5,
                    "minutes": 4,
                    "parsed_val2": 1,
                    "part2": 1,
                    "second_number": 1,
                    "val2": 1,
                    "value2": 6,
                    "var_b": 1
                },
                "local_3c": {
                    "first_number": 1,
                    "hour": 5,
                    "hours": 4,
                    "hours1": 1,
                    "parsed_val1": 1,
                    "part1": 1,
                    "val1": 1,
                    "value1": 6,
                    "var_a": 1
                },
                "pcVar3": {
                    "config_data_ptr": 1,
                    "config_string": 2,
                    "coord_string": 1,
                    "coordinate_string": 1,
                    "current_char": 1,
                    "current_pointer": 1,
                    "current_position": 1,
                    "current_ptr": 1,
                    "data": 1,
                    "data_ptr": 1,
                    "input": 1,
                    "input_string": 1,
                    "parsed_string": 1,
                    "ptr": 1,
                    "str": 3,
                    "str_ptr": 1,
                    "string_ptr": 1
                },
                "pcVar7": {
                    "current_data_pointer": 1,
                    "current_ptr": 2,
                    "position": 1,
                    "ptr": 2,
                    "remaining_string": 1,
                    "str": 2,
                    "str2": 1,
                    "string_value": 1,
                    "temp": 1,
                    "temp_char_ptr": 1,
                    "temp_pointer": 1,
                    "temp_position": 1,
                    "temp_ptr": 2,
                    "temp_string": 1,
                    "token": 1,
                    "value": 1
                },
                "piVar10": {
                    "first_part_idx": 1,
                    "first_value_bytes_read": 1,
                    "hour_pos": 1,
                    "index1": 1,
                    "int_ptr": 1,
                    "int_ptr1": 1,
                    "length_a_ptr": 1,
                    "p_var_b": 1,
                    "parse_offset1": 1,
                    "pi_var10": 1,
                    "pos1": 1,
                    "ptr1": 1,
                    "ptr2": 5,
                    "ptr_b": 1,
                    "scan_result_ptr": 1,
                    "section_len1": 1
                },
                "piVar12": {
                    "index2": 1,
                    "int_ptr2": 2,
                    "length_b_ptr": 1,
                    "minute_pos": 1,
                    "p_var_d": 1,
                    "parse_offset2": 1,
                    "pi_var12": 1,
                    "pos2": 1,
                    "ptr2": 1,
                    "ptr4": 5,
                    "ptr_d": 1,
                    "scan_result_ptr2": 1,
                    "second_part_idx": 1,
                    "second_value_bytes_read": 1,
                    "section_len2": 1
                },
                "puVar11": {
                    "minute": 1,
                    "minute_ptr": 1,
                    "minutes": 1,
                    "p_var_c": 1,
                    "parsed_value2": 1,
                    "part2": 1,
                    "ptr3": 5,
                    "ptr_b": 2,
                    "ptr_c": 1,
                    "pu_var11": 1,
                    "second_part": 1,
                    "second_value": 1,
                    "section_ptr2": 1,
                    "ushort_ptr2": 2
                },
                "puVar9": {
                    "first_part": 1,
                    "first_value": 1,
                    "hour": 1,
                    "hour_ptr": 1,
                    "hours": 1,
                    "p_var_a": 1,
                    "parsed_value1": 1,
                    "part1": 1,
                    "ptr1": 5,
                    "ptr_a": 3,
                    "pu_var9": 1,
                    "section_ptr1": 1,
                    "ushort_ptr": 1,
                    "ushort_ptr1": 1
                },
                "uVar6": {
                    "code": 1,
                    "data_type": 6,
                    "delimiter_type": 1,
                    "flag": 4,
                    "indicator": 1,
                    "mode": 1,
                    "opcode": 1,
                    "symbol_type": 1,
                    "temp": 2,
                    "type": 2,
                    "var6": 1
                }
            },
            "called": [
                "FUN_00004bd0",
                "FUN_000056b0",
                "FUN_00005e68",
                "FUN_00004e52",
                "FUN_00005ecc",
                "FUN_00005ebc",
                "FUN_00005780",
                "FUN_00004f98",
                "FUN_00005fd8",
                "FUN_000056a0"
            ],
            "calling": [
                "FUN_000047e4"
            ],
            "code": "\nvoid parse_and_process_data_00005100(void)\n\n{\n  dword offset;\n  int result;\n  char *str;\n  int status;\n  int count;\n  undefined data_type;\n  char *ptr;\n  bool flag;\n  ushort *ptr1;\n  int *ptr2;\n  ushort *ptr3;\n  int *ptr4;\n  ushort value1;\n  ushort value2;\n  ushort value3;\n  ushort value4;\n  ushort value5;\n  ushort value6;\n  int temp;\n  char *temp_array [2];\n  \n  offset = elf_array[16].r_offset;\n  result = FUN_000056b0();\n  str = (char *)FUN_000056a0(offset,&DAT_00007a5c);\n  if (str == (char *)0x0) {\n    elf_array[28].r_info = (dword)&DAT_00007a5f;\n    elf_array[29].r_offset = (dword)&DAT_00007a5f;\n    DAT_1fff0dd8 = str;\n    DAT_1fff0ddc = str;\n    FUN_00005780(DAT_1fff0dd4);\n    DAT_1fff0dd4 = 0;\n  }\n  else if ((DAT_1fff0dd4 == 0) || (status = FUN_00004e52(), status != 0)) {\n    FUN_00005780(DAT_1fff0dd4);\n    status = FUN_00005ecc(str);\n    DAT_1fff0dd4 = FUN_00004bd0(offset,status + 1);\n    if (DAT_1fff0dd4 != 0) {\n      FUN_00005ebc(DAT_1fff0dd4,str);\n    }\n    if (*str == ':') {\n      str = str + 1;\n    }\n    status = FUN_00005e68(str,\"%10[^0-9,+-]%n\",&DAT_1fff0dc7,&temp);\n    if (0 < status) {\n      ptr = str + temp;\n      if (str[temp] == '-') {\n        ptr = ptr + 1;\n        status = -1;\n      }\n      else {\n        if (str[temp] == '+') {\n          ptr = ptr + 1;\n        }\n        status = 1;\n      }\n      value2 = 0;\n      value3 = 0;\n      ptr1 = &value2;\n      ptr2 = &temp;\n      ptr3 = &value3;\n      ptr4 = &temp;\n      count = FUN_00005e68(ptr,\"%hu%n:%hu%n:%hu%n\",&value1,&temp,&value2,&temp,\n                           &value3,&temp);\n      if (0 < count) {\n        *(uint *)(result + 0x28) =\n             ((uint)value1 * 0xe10 + (uint)value2 * 0x3c + (uint)value3) * status;\n        elf_array[28].r_info = (dword)&DAT_1fff0dc7;\n        ptr = ptr + temp;\n        status = FUN_00005e68(ptr,\"%10[^0-9,+-]%n\",&DAT_1fff0dbc,&temp,ptr1,ptr2,ptr3,\n                             ptr4);\n        if (status < 1) {\n          elf_array[29].r_offset = elf_array[28].r_info;\n          DAT_1fff0ddc = *(char **)(result + 0x28);\n          DAT_1fff0dd8 = (char *)0x0;\n        }\n        else {\n          elf_array[29].r_offset = (dword)&DAT_1fff0dbc;\n          str = ptr + temp;\n          if (ptr[temp] == '-') {\n            str = str + 1;\n            status = -1;\n          }\n          else {\n            if (ptr[temp] == '+') {\n              str = str + 1;\n            }\n            status = 1;\n          }\n          value1 = 0;\n          value2 = 0;\n          value3 = 0;\n          temp = 0;\n          count = FUN_00005e68(str,\"%hu%n:%hu%n:%hu%n\",&value1,&temp,&value2,&temp,\n                               &value3,&temp);\n          if (count < 1) {\n            status = *(int *)(result + 0x28) + -0xe10;\n          }\n          else {\n            status = ((uint)value1 * 0xe10 + (uint)value2 * 0x3c + (uint)value3) * status;\n          }\n          *(int *)(result + 0x50) = status;\n          str = str + temp;\n          flag = false;\n          status = result;\n          while( true ) {\n            if (*str == ',') {\n              str = str + 1;\n            }\n            if (*str == 'M') {\n              count = FUN_00005e68(str,\"M%hu%n.%hu%n.%hu%n\",&value4,&temp,&value5,\n                                   &temp,&value6,&temp);\n              if (count != 3) {\n                return;\n              }\n              if (0xb < value4 - 1) {\n                return;\n              }\n              if (4 < value5 - 1) {\n                return;\n              }\n              if (6 < value6) {\n                return;\n              }\n              *(uint *)(status + 0xc) = (uint)value4;\n              *(uint *)(status + 0x10) = (uint)value5;\n              *(undefined *)(status + 8) = 0x4d;\n              *(uint *)(status + 0x14) = (uint)value6;\n              ptr = str + temp;\n            }\n            else {\n              if (*str == 'J') {\n                str = str + 1;\n                data_type = 0x4a;\n              }\n              else {\n                data_type = 0x44;\n              }\n              value6 = FUN_00005fd8(str,temp_array,10);\n              ptr = temp_array[0];\n              if (temp_array[0] == str) {\n                if (flag) {\n                  *(undefined *)(result + 0x30) = 0x4d;\n                  *(undefined4 *)(result + 0x34) = 0xb;\n                  *(undefined4 *)(result + 0x38) = 1;\n                  *(undefined4 *)(result + 0x3c) = 0;\n                }\n                else {\n                  *(undefined *)(result + 8) = 0x4d;\n                  *(undefined4 *)(result + 0xc) = 3;\n                  *(undefined4 *)(result + 0x10) = 2;\n                  *(undefined4 *)(result + 0x14) = 0;\n                }\n              }\n              else {\n                *(undefined *)(status + 8) = data_type;\n                *(uint *)(status + 0x14) = (uint)value6;\n              }\n            }\n            value1 = 2;\n            value2 = 0;\n            value3 = 0;\n            temp = 0;\n            if (*ptr == '/') {\n              FUN_00005e68(ptr,&DAT_00007a85,&value1,&temp,&value2,&temp,&value3,\n                           &temp);\n            }\n            *(uint *)(status + 0x18) =\n                 (uint)value1 * 0xe10 + (uint)value2 * 0x3c + (uint)value3;\n            status = status + 0x28;\n            str = ptr + temp;\n            if (flag) break;\n            flag = true;\n          }\n          FUN_00004f98(*(undefined4 *)(result + 4));\n          DAT_1fff0ddc = *(char **)(result + 0x28);\n          DAT_1fff0dd8 = (char *)(*(int *)(result + 0x50) - (int)DAT_1fff0ddc);\n          if (DAT_1fff0dd8 != (char *)0x0) {\n            DAT_1fff0dd8 = (char *)0x1;\n          }\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "parse_and_process_data_00005100",
            "entrypoint": "0x00005100",
            "imported": false,
            "improved": true,
            "renaming": {
                "Elf32_Rel_ARRAY_1fff0200": "elf_array",
                "FUN_00005100": "parse_and_process_data_00005100",
                "bVar8": "flag",
                "dVar1": "offset",
                "iVar2": "result",
                "iVar4": "status",
                "iVar5": "count",
                "local_2c": "temp_array",
                "local_30": "temp",
                "local_32": "value6",
                "local_34": "value5",
                "local_36": "value4",
                "local_38": "value3",
                "local_3a": "value2",
                "local_3c": "value1",
                "pcVar3": "str",
                "pcVar7": "ptr",
                "piVar10": "ptr2",
                "piVar12": "ptr4",
                "puVar11": "ptr3",
                "puVar9": "ptr1",
                "uVar6": "data_type"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00005404": {
            "additional_data": {
                "FUN_00004158": {
                    "another_helper_function": 1,
                    "another_sub_function": 1,
                    "check_buffer": 1,
                    "check_condition": 4,
                    "check_data": 1,
                    "check_data_validity": 4,
                    "check_validity": 1,
                    "process_data_sub2": 1,
                    "process_sub_function2": 2,
                    "update_buffer": 1,
                    "validate_data": 2,
                    "verify": 1
                },
                "FUN_000042a4": {
                    "additional_helper_function": 1,
                    "do_something": 1,
                    "execute_function": 1,
                    "init_buffer": 1,
                    "initialize": 9,
                    "initialize_data": 1,
                    "initialize_process": 1,
                    "perform_action": 2,
                    "perform_initialization": 1,
                    "process_sub_function3": 1,
                    "reverse_data": 1
                },
                "FUN_00005404": {
                    "decode_and_store_data": 1,
                    "extract_data": 1,
                    "parse_and_process_data": 1,
                    "process_data": 24,
                    "process_input": 3
                },
                "FUN_000054a8": {
                    "calculate": 1,
                    "calculate_value": 2,
                    "check_value": 1,
                    "helper_function": 1,
                    "process_buffer": 1,
                    "process_data": 2,
                    "process_data_block": 1,
                    "process_data_helper": 2,
                    "process_data_sub1": 1,
                    "process_data_sub_func": 1,
                    "process_sub_function": 1,
                    "process_sub_function1": 2,
                    "process_subfunction": 1,
                    "reverse_byte_order": 1,
                    "update_param_array": 1
                },
                "FUn_000054a8": {
                    "process_data_internal": 1
                },
                "iVar1": {
                    "index": 5,
                    "offset": 6,
                    "result": 10,
                    "temp_var": 5,
                    "temp_var1": 4
                },
                "param_1": {
                    "data": 1,
                    "data_address": 2,
                    "data_pointer": 1,
                    "data_ptr": 5,
                    "data_size": 1,
                    "input": 5,
                    "input_buffer": 2,
                    "input_data": 10,
                    "input_param": 1,
                    "input_ptr": 1,
                    "input_struct": 1,
                    "input_value": 1
                },
                "param_2": {
                    "buffer_size": 1,
                    "data_byte": 1,
                    "data_length": 1,
                    "filter": 1,
                    "flag": 4,
                    "index": 1,
                    "length": 8,
                    "output_data": 2,
                    "output_value": 1,
                    "param_value": 1,
                    "size": 4,
                    "value": 6
                },
                "param_3": {
                    "buffer": 8,
                    "buffer_ptr": 1,
                    "data": 7,
                    "data_array": 7,
                    "data_buffer": 1,
                    "data_ptr": 1,
                    "input": 1,
                    "input_array": 1,
                    "multi_data": 1,
                    "output_data": 1,
                    "param_array": 1,
                    "ptr_array": 1
                },
                "param_4": {
                    "additional_param": 2,
                    "config": 5,
                    "config_value": 2,
                    "extra_param": 1,
                    "flag": 3,
                    "options": 1,
                    "param": 10,
                    "param4": 3,
                    "param_value": 1,
                    "parameter": 1,
                    "value": 2
                },
                "puVar3": {
                    "buffer": 1,
                    "buffer_pointer": 1,
                    "byte_pointer": 1,
                    "byte_ptr": 1,
                    "char_ptr": 2,
                    "data_char": 1,
                    "pointer": 3,
                    "pointer_var": 2,
                    "ptr": 14,
                    "ptr_value": 1,
                    "ptr_var": 1,
                    "ptr_var1": 1,
                    "temp_ptr": 1
                },
                "uVar2": {
                    "data_value": 1,
                    "length": 1,
                    "packet_size": 1,
                    "shifted_data": 1,
                    "shifted_value": 2,
                    "short_value": 1,
                    "temp": 3,
                    "temp_u_int": 1,
                    "temp_var2": 4,
                    "ushort_val": 1,
                    "ushort_value": 2,
                    "ushort_var": 1,
                    "value": 10,
                    "value2": 1
                }
            },
            "called": [
                "FUN_000054a8",
                "FUN_00004158",
                "FUN_000042a4"
            ],
            "calling": [
                "FUN_00004cb4",
                "FUN_00004db8",
                "FUN_000057a8"
            ],
            "code": "\nuint parse_and_process_data_00005404(int input_data,uint length,int *buffer,undefined4 param)\n\n{\n  int result;\n  uint value;\n  undefined *ptr;\n  \n  if ((input_data != 0) && (*(int *)(input_data + 0x18) == 0)) {\n    FUN_000042a4();\n  }\n  if (buffer == &DAT_000079b8) {\n    buffer = *(int **)(input_data + 4);\n  }\n  else if (buffer == (int *)&DAT_000079d8) {\n    buffer = *(int **)(input_data + 8);\n  }\n  else if (buffer == (int *)&DAT_00007998) {\n    buffer = *(int **)(input_data + 0xc);\n  }\n  buffer[2] = buffer[6];\n  value = (uint)*(ushort *)(buffer + 3);\n  result = value << 0x1c;\n  if (((result < 0) && (value = buffer[4], value != 0)) ||\n     (result = FUN_000054a8(input_data,buffer,result,value,param), result == 0)) {\n    result = *buffer - buffer[4];\n    length = length & 0xff;\n    if ((result < buffer[5]) || (result = FUN_00004158(input_data,buffer), result == 0)) {\n      buffer[2] = buffer[2] + -1;\n      ptr = (undefined *)*buffer;\n      *buffer = (int)(ptr + 1);\n      *ptr = (char)length;\n      if (buffer[5] != result + 1) {\n        if (-1 < (int)((uint)*(ushort *)(buffer + 3) << 0x1f)) {\n          return length;\n        }\n        if (length != 10) {\n          return length;\n        }\n      }\n      result = FUN_00004158(input_data,buffer);\n      if (result == 0) {\n        return length;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "parse_and_process_data_00005404",
            "entrypoint": "0x00005404",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00005404": "parse_and_process_data_00005404",
                "iVar1": "result",
                "param_1": "input_data",
                "param_2": "length",
                "param_3": "buffer",
                "param_4": "param",
                "puVar3": "ptr",
                "uVar2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000054a8": {
            "additional_data": {
                "FUN_000042a4": {
                    "cleanup_offset": 1
                },
                "FUN_00004b34": {
                    "handle_non_zero_offset": 1
                },
                "FUN_000054a8": {
                    "analyze_data": 1,
                    "decode_and_process_data": 2,
                    "parse_relocation_entry": 1,
                    "process_binary_data": 1,
                    "process_data": 6,
                    "process_function": 9,
                    "process_relocation": 3,
                    "update_param": 1,
                    "update_parameter": 1,
                    "update_params": 1,
                    "update_relocation_entry": 1
                },
                "FUN_00005700": {
                    "handle_empty_entry": 1
                },
                "dVar2": {
                    "d_word_var": 1,
                    "offset": 15,
                    "r_offset": 1,
                    "rel_offset": 1,
                    "rel_table_entry": 1,
                    "temp2": 3,
                    "temp_d_var2": 1,
                    "temp_dword": 1,
                    "temp_var2": 3,
                    "value2": 1,
                    "var2": 2,
                    "variable2": 1
                },
                "param_1": {
                    "output": 7,
                    "output1": 4,
                    "output_list": 1,
                    "output_param": 6,
                    "output_param1": 1,
                    "output_pointer": 1,
                    "output_ptr": 3,
                    "output_status": 1,
                    "output_value": 2,
                    "param1": 1,
                    "result": 2,
                    "result_ptr": 2
                },
                "param_2": {
                    "data_pointer": 1,
                    "entry": 2,
                    "input": 7,
                    "input1": 2,
                    "input_data": 1,
                    "input_data_ptr": 2,
                    "input_list": 1,
                    "input_param": 6,
                    "input_param1": 1,
                    "input_ptr": 3,
                    "input_value": 2,
                    "output2": 2,
                    "param2": 1
                },
                "uVar1": {
                    "bit_flags": 1,
                    "bit_mask1": 1,
                    "first_half": 1,
                    "first_u_short": 1,
                    "flags": 5,
                    "low_byte": 1,
                    "status": 2,
                    "status_flag": 1,
                    "temp1": 3,
                    "temp_u_var1": 1,
                    "temp_ushort_1": 1,
                    "temp_var1": 5,
                    "temp_var_1": 1,
                    "value1": 4,
                    "var1": 2,
                    "variable1": 1
                },
                "uVar3": {
                    "bit_flags_copy": 1,
                    "bit_mask2": 1,
                    "flags_copy": 3,
                    "new_value": 1,
                    "old_flags": 1,
                    "original_status_flag": 1,
                    "original_value": 1,
                    "second_half": 1,
                    "second_u_short": 1,
                    "temp1": 1,
                    "temp3": 3,
                    "temp_status": 1,
                    "temp_u_var3": 1,
                    "temp_ushort_2": 1,
                    "temp_var2": 2,
                    "temp_var3": 3,
                    "temp_var_2": 1,
                    "value2": 3,
                    "value3": 1,
                    "var3": 2,
                    "variable3": 1
                },
                "uVar4": {
                    "bit_value1": 1,
                    "flags_temp": 1,
                    "lower_bits": 1,
                    "old_flags_temp": 1,
                    "shifted_value": 1,
                    "temp": 1,
                    "temp2": 1,
                    "temp4": 3,
                    "temp_u_var4": 1,
                    "temp_uint_1": 1,
                    "temp_value": 2,
                    "temp_var3": 2,
                    "temp_var4": 3,
                    "temp_var_3": 1,
                    "u_var4": 2,
                    "unsigned_var4": 1,
                    "ushort_value": 1,
                    "value1": 1,
                    "value3": 2,
                    "value4": 1,
                    "var4": 2,
                    "variable4": 1
                },
                "uVar5": {
                    "bit_value2": 1,
                    "new_flags_temp": 1,
                    "shifted_value2": 1,
                    "special_case": 1,
                    "temp": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp5": 3,
                    "temp_u_var5": 1,
                    "temp_uint_2": 1,
                    "temp_value2": 2,
                    "temp_var4": 2,
                    "temp_var5": 3,
                    "temp_var_4": 1,
                    "u_var5": 2,
                    "unsigned_var5": 1,
                    "ushort_value2": 1,
                    "value2": 1,
                    "value4": 2,
                    "value5": 1,
                    "var5": 2,
                    "variable5": 1
                }
            },
            "called": [
                "FUN_00005700",
                "FUN_000042a4",
                "FUN_00004b34"
            ],
            "calling": [
                "FUN_00004db8",
                "FUN_00005404",
                "FUN_000057f8"
            ],
            "code": "\nuint process_function_000054a8(undefined4 *output,undefined4 *input)\n\n{\n  ushort temp_var1;\n  dword offset;\n  ushort temp_var3;\n  uint temp_var4;\n  uint temp5;\n  \n  offset = Elf32_Rel_ARRAY_1fff0200[16].r_offset;\n  if ((Elf32_Rel_ARRAY_1fff0200[16].r_offset != 0) &&\n     (*(int *)(Elf32_Rel_ARRAY_1fff0200[16].r_offset + 0x18) == 0)) {\n    FUN_000042a4(Elf32_Rel_ARRAY_1fff0200[16].r_offset);\n  }\n  if (input == &DAT_000079b8) {\n    input = *(undefined4 **)(offset + 4);\n  }\n  else if (input == (undefined4 *)&DAT_000079d8) {\n    input = *(undefined4 **)(offset + 8);\n  }\n  else if (input == (undefined4 *)&DAT_00007998) {\n    input = *(undefined4 **)(offset + 0xc);\n  }\n  temp_var4 = (uint)*(ushort *)(input + 3);\n  temp_var3 = *(ushort *)(input + 3);\n  if (-1 < (int)(temp_var4 << 0x1c)) {\n    if (-1 < (int)(temp_var4 << 0x1b)) {\n      *output = 9;\n      goto LAB_000054d8;\n    }\n    if ((int)(temp_var4 << 0x1d) < 0) {\n      if ((undefined4 *)input[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input[0xd] != input + 0x11) {\n          FUN_00004b34(output);\n        }\n        input[0xd] = 0;\n      }\n      *(ushort *)(input + 3) = *(ushort *)(input + 3) & 0xffdb;\n      input[1] = 0;\n      *input = input[4];\n    }\n    *(ushort *)(input + 3) = *(ushort *)(input + 3) | 8;\n  }\n  if ((input[4] == 0) && ((*(ushort *)(input + 3) & 0x280) != 0x200)) {\n    FUN_00005700(output,input);\n  }\n  temp_var1 = *(ushort *)(input + 3);\n  temp_var4 = (uint)temp_var1;\n  temp_var3 = *(ushort *)(input + 3);\n  temp5 = temp_var4 & 1;\n  if ((temp_var1 & 1) == 0) {\n    if (-1 < (int)(temp_var4 << 0x1e)) {\n      temp5 = input[5];\n    }\n    input[2] = temp5;\n  }\n  else {\n    input[2] = 0;\n    input[6] = -input[5];\n  }\n  if (input[4] != 0) {\n    return 0;\n  }\n  if ((temp_var1 & 0x80) == 0) {\n    return temp_var4 & 0x80;\n  }\nLAB_000054d8:\n  *(ushort *)(input + 3) = temp_var3 | 0x40;\n  return 0xffffffff;\n}\n\n",
            "current_name": "process_function_000054a8",
            "entrypoint": "0x000054a8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000054a8": "process_function_000054a8",
                "dVar2": "offset",
                "param_1": "output",
                "param_2": "input",
                "uVar1": "temp_var1",
                "uVar3": "temp_var3",
                "uVar4": "temp_var4",
                "uVar5": "temp5"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00005584": {
            "additional_data": {
                "FUN_00005584": {
                    "calculate_quotient_and_remainder": 1,
                    "divide_and_adjust": 1,
                    "divide_and_adjust_remainder": 1,
                    "divide_and_get_remainder": 1,
                    "divide_and_modulo": 2,
                    "divide_and_remainder": 12,
                    "divide_and_store": 2,
                    "divide_and_store_quotient_and_remainder": 1,
                    "divide_and_store_remainder": 7,
                    "divide_and_update_remainder": 1,
                    "divide_with_remainder": 1,
                    "divmod": 1
                },
                "param_1": {
                    "quotient": 5,
                    "quotient_and_remainder": 15,
                    "quotient_and_remainder_array": 1,
                    "quotient_array": 1,
                    "quotient_ptr": 3,
                    "quotient_remainder": 3,
                    "result": 1,
                    "result_array": 2
                },
                "param_2": {
                    "dividend": 31
                },
                "param_3": {
                    "divisor": 31
                },
                "uVar1": {
                    "remainder": 30
                },
                "uVar2": {
                    "quotient": 25,
                    "quotient_after_division": 1,
                    "quotient_result": 1,
                    "quotient_without_remainder": 1,
                    "result": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_00004634"
            ],
            "code": "\nvoid divide_and_store_quotient_and_remainder_00005584(uint *quotient_and_remainder,uint dividend,uint divisor)\n\n{\n  uint remainder;\n  uint quotient;\n  \n  quotient = dividend / divisor;\n  remainder = dividend - divisor * quotient;\n  if ((int)dividend < 0) {\n    if (0 < (int)remainder) {\n      quotient = quotient - 1;\n      remainder = remainder + divisor;\n    }\n  }\n  else if ((int)remainder < 0) {\n    quotient = quotient + 1;\n    remainder = remainder - divisor;\n  }\n  *quotient_and_remainder = quotient;\n  quotient_and_remainder[1] = remainder;\n  return;\n}\n\n",
            "current_name": "divide_and_store_quotient_and_remainder_00005584",
            "entrypoint": "0x00005584",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00005584": "divide_and_store_quotient_and_remainder_00005584",
                "param_1": "quotient_and_remainder",
                "param_2": "dividend",
                "param_3": "divisor",
                "uVar1": "remainder",
                "uVar2": "quotient"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0000562c": {
            "additional_data": {
                "FUN_00004e66": {
                    "check_key_value": 1,
                    "check_key_value_pair": 2,
                    "compare_entry": 1,
                    "is_variable_match": 1
                },
                "FUN_0000562c": {
                    "extract_key_value": 1,
                    "find_assignment_index": 1,
                    "find_assignment_offset": 2,
                    "find_first_assignment": 1,
                    "find_key_offset": 3,
                    "find_key_value_offset": 1,
                    "find_key_value_pair": 6,
                    "find_param_value": 1,
                    "find_parameter_index": 1,
                    "find_parameter_offset": 1,
                    "find_parameter_value": 1,
                    "find_variable_offset": 2,
                    "parse_config": 3,
                    "parse_key_value": 1,
                    "parse_key_value_pairs": 1,
                    "parse_parameter_value": 1,
                    "reverse_lookup": 1,
                    "search_and_extract_index": 1,
                    "search_for_assignment": 1
                },
                "FUN_00005fec": {
                    "initialize": 3,
                    "initialize_env": 1,
                    "initialize_variables": 1
                },
                "FUN_00005ff8": {
                    "cleanup": 2,
                    "cleanup_env": 1,
                    "cleanup_memory": 1,
                    "finalize": 1
                },
                "cVar1": {
                    "ch": 1,
                    "char_variable": 1,
                    "curr_char": 1,
                    "current_byte": 1,
                    "current_char": 27
                },
                "iVar3": {
                    "check_result": 3,
                    "compare_result": 1,
                    "comparison_result": 1,
                    "current_key": 1,
                    "key_index": 2,
                    "lookup_result": 1,
                    "res": 1,
                    "result": 17,
                    "result_offset": 1,
                    "result_value": 1,
                    "return_value": 1,
                    "search_result": 1
                },
                "iVar6": {
                    "config_string_offset": 1,
                    "current_index": 2,
                    "current_offset": 2,
                    "index_difference": 1,
                    "input_offset": 1,
                    "input_string_offset": 1,
                    "line_index": 1,
                    "offset": 1,
                    "pointer_offset": 1,
                    "relative_offset": 1,
                    "str_index": 1,
                    "str_offset": 4,
                    "string_index": 1,
                    "string_length": 1,
                    "string_offset": 12
                },
                "param_1": {
                    "arg1": 4,
                    "config": 1,
                    "param": 6,
                    "param1": 6,
                    "param_1": 13,
                    "unknown_param": 1
                },
                "param_2": {
                    "config_string": 2,
                    "input_string": 9,
                    "line": 1,
                    "parameter_string": 1,
                    "str": 3,
                    "string": 15
                },
                "param_3": {
                    "assignment_offsets": 1,
                    "index": 4,
                    "indices": 1,
                    "key_index": 1,
                    "key_offset": 2,
                    "matched_indexes": 1,
                    "matching_indices": 1,
                    "offset": 2,
                    "offsets": 1,
                    "output_index": 2,
                    "output_offset": 1,
                    "result": 5,
                    "result_index": 9
                },
                "pcVar4": {
                    "char_ptr": 1,
                    "config_ptr": 1,
                    "curr_ptr": 1,
                    "current_char": 4,
                    "current_char_pointer": 1,
                    "current_char_ptr": 5,
                    "current_position": 7,
                    "current_ptr": 3,
                    "current_str": 1,
                    "current_str_ptr": 1,
                    "current_string_char": 1,
                    "str_ptr": 2,
                    "string_ptr": 2
                },
                "piVar2": {
                    "address_array": 1,
                    "array_ptr": 1,
                    "current_indexes": 1,
                    "current_offset_ptr": 1,
                    "current_pointer": 1,
                    "key_offsets": 1,
                    "keys": 1,
                    "offset_array": 1,
                    "offset_ptr": 2,
                    "pointer": 1,
                    "pointer_array": 1,
                    "potential_keys": 1,
                    "ptr": 2,
                    "rel_array": 2,
                    "rel_array_item": 1,
                    "rel_array_offset": 1,
                    "rel_array_ptr": 2,
                    "rel_entry_ptr": 1,
                    "rel_offset": 4,
                    "rel_offset_array": 1,
                    "rel_offset_ptr": 3,
                    "rel_table_entry_ptr": 1
                },
                "piVar5": {
                    "current_address_ptr": 1,
                    "current_entry": 1,
                    "current_key": 1,
                    "current_offset": 3,
                    "current_offset_ptr": 3,
                    "current_pointer": 1,
                    "current_pointer_value": 1,
                    "current_ptr": 3,
                    "current_rel": 2,
                    "current_rel_entry": 1,
                    "current_rel_item": 1,
                    "current_rel_offset": 4,
                    "current_rel_offset_ptr": 1,
                    "next_indexes": 1,
                    "offset_ptr": 1,
                    "potential_value": 1,
                    "ptr": 1,
                    "rel_offset_ptr": 2,
                    "rel_ptr": 1,
                    "rel_table_entry_ptr": 1
                }
            },
            "called": [
                "FUN_00004e66",
                "FUN_00005fec",
                "FUN_00005ff8"
            ],
            "calling": [
                "FUN_000056a0"
            ],
            "code": "\nint find_key_value_pair_0000562c(undefined4 param_1,char *string,int *result_index)\n\n{\n  char current_char;\n  int *rel_offset;\n  int result;\n  char *current_position;\n  int *current_rel_offset;\n  int string_offset;\n  \n  FUN_00005fec();\n  current_position = string;\n  if (Elf32_Rel_ARRAY_1fff0200[41].r_offset != 0) {\n    do {\n      current_char = *current_position;\n      if (current_char == '\\0') {\n        string_offset = (int)current_position - (int)string;\n        rel_offset = (int *)Elf32_Rel_ARRAY_1fff0200[41].r_offset;\n        while( true ) {\n          current_rel_offset = rel_offset;\n          if (*current_rel_offset == 0) break;\n          result = FUN_00004e66(*current_rel_offset,string,string_offset);\n          rel_offset = current_rel_offset + 1;\n          if ((result == 0) && (result = *current_rel_offset, *(char *)(result + string_offset) == '=')) {\n            *result_index = (int)((int)current_rel_offset - Elf32_Rel_ARRAY_1fff0200[41].r_offset) >> 2;\n            FUN_00005ff8(param_1);\n            return result + string_offset + 1;\n          }\n        }\n        break;\n      }\n      current_position = current_position + 1;\n    } while (current_char != '=');\n  }\n  FUN_00005ff8(param_1);\n  return 0;\n}\n\n",
            "current_name": "find_key_value_pair_0000562c",
            "entrypoint": "0x0000562c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0000562c": "find_key_value_pair_0000562c",
                "cVar1": "current_char",
                "iVar3": "result",
                "iVar6": "string_offset",
                "param_2": "string",
                "param_3": "result_index",
                "pcVar4": "current_position",
                "piVar2": "rel_offset",
                "piVar5": "current_rel_offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000056a0": {
            "additional_data": {
                "FUN_0000562c": {
                    "extract_data": 1,
                    "process_data": 2,
                    "process_subfunction": 1,
                    "reverse_string": 1,
                    "sub_function": 1
                },
                "FUN_000056a0": {
                    "execute_function": 3,
                    "extract_and_process_data": 1,
                    "extract_data": 2,
                    "extract_data_from_binary": 1,
                    "perform_task": 1,
                    "process_data": 8,
                    "process_function": 3,
                    "process_params": 1
                },
                "param_1": {
                    "arg1": 1,
                    "data": 1,
                    "data1": 2,
                    "first_param": 1,
                    "function_parameter1": 1,
                    "input1": 12,
                    "input_1": 4,
                    "input_data": 1,
                    "input_param": 1,
                    "input_param1": 2,
                    "input_parameter1": 1,
                    "param1": 2,
                    "source_address": 1,
                    "unused": 1
                },
                "param_2": {
                    "arg2": 1,
                    "buffer": 1,
                    "data2": 2,
                    "data_ptr": 1,
                    "function_parameter2": 1,
                    "input": 1,
                    "input2": 11,
                    "input_2": 4,
                    "input_param2": 2,
                    "input_parameter2": 1,
                    "param2": 2,
                    "ptr_to_data": 1,
                    "second_param": 1,
                    "string_param": 1,
                    "value1": 1
                },
                "param_3": {
                    "arg3": 1,
                    "buffer_length": 1,
                    "data3": 2,
                    "function_parameter3": 1,
                    "input3": 9,
                    "input_3": 3,
                    "input_param3": 2,
                    "input_parameter3": 1,
                    "output": 1,
                    "output1": 2,
                    "output_1": 1,
                    "output_param": 1,
                    "output_ptr": 1,
                    "param3": 2,
                    "ptr_to_buffer": 1,
                    "third_param": 1,
                    "value2": 1
                },
                "param_4": {
                    "additional_data": 1,
                    "additional_param": 1,
                    "arg4": 1,
                    "data4": 2,
                    "destination_address": 1,
                    "fourth_param": 1,
                    "function_parameter4": 1,
                    "input3": 2,
                    "input4": 10,
                    "input_3": 1,
                    "input_4": 3,
                    "input_param4": 2,
                    "input_parameter4": 1,
                    "param": 1,
                    "param4": 2,
                    "unused": 1
                },
                "uStack_8": {
                    "arg2": 1,
                    "buffer_address": 1,
                    "copy_of_input3": 1,
                    "copy_of_third_param": 1,
                    "modified_input3": 1,
                    "modified_input_param3": 1,
                    "output3": 1,
                    "parameter_copy2": 1,
                    "processed_param3": 1,
                    "processed_value2": 1,
                    "stack_8": 2,
                    "stack_data2": 1,
                    "stack_param2": 2,
                    "stack_param_3": 1,
                    "stack_value_2": 1,
                    "stack_var2": 1,
                    "temp2": 2,
                    "temp_2": 1,
                    "temp_input3": 1,
                    "temp_param2": 1,
                    "temp_variable2": 1,
                    "unused_copy": 1,
                    "updated_buffer_length": 1
                },
                "uStack_c": {
                    "arg1": 1,
                    "copy_of_input2": 1,
                    "copy_of_second_param": 1,
                    "data_address": 1,
                    "modified_input2": 1,
                    "modified_input_param2": 1,
                    "output2": 1,
                    "output_copy": 1,
                    "parameter_copy1": 1,
                    "processed_param2": 1,
                    "processed_value1": 1,
                    "stack_c": 2,
                    "stack_data1": 1,
                    "stack_param1": 2,
                    "stack_param_2": 1,
                    "stack_value_1": 1,
                    "stack_var1": 1,
                    "temp1": 2,
                    "temp_1": 1,
                    "temp_input2": 1,
                    "temp_param": 1,
                    "temp_variable1": 1,
                    "updated_buffer": 1
                }
            },
            "called": [
                "FUN_0000562c"
            ],
            "calling": [
                "FUN_00005100"
            ],
            "code": "\nvoid extract_and_process_data_000056a0(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 temp1;\n  undefined4 temp2;\n  \n  temp1 = input2;\n  temp2 = input3;\n  FUN_0000562c(input1,input2,&temp1,input4,input1);\n  return;\n}\n\n",
            "current_name": "extract_and_process_data_000056a0",
            "entrypoint": "0x000056a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000056a0": "extract_and_process_data_000056a0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uStack_8": "temp2",
                "uStack_c": "temp1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000056b0": {
            "additional_data": {
                "0x1fff02f0": {
                    "default_value": 1,
                    "magic_number": 1,
                    "memory_address": 1
                },
                "FUN_000056b0": {
                    "get_base_address": 1,
                    "get_constant_value": 1,
                    "get_default_value": 3,
                    "get_error_code": 1,
                    "get_initial_value": 3,
                    "get_kernel_base_address": 1,
                    "get_magic_number": 9,
                    "get_memory_address": 10,
                    "get_memory_location": 1,
                    "get_memory_value": 1
                },
                "PTR_FUN_000056b0": {
                    "p_memory_address": 1
                },
                "return_value": {
                    "error_code": 1
                },
                "undefined4": {
                    "uint32": 1,
                    "uint32_t": 16
                }
            },
            "called": [],
            "calling": [
                "FUN_00005100",
                "FUN_00004f98",
                "FUN_000047e4"
            ],
            "code": "\nuint32_t get_memory_address_000056b0(void)\n\n{\n  return 0x1fff02f0;\n}\n\n",
            "current_name": "get_memory_address_000056b0",
            "entrypoint": "0x000056b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000056b0": "get_memory_address_000056b0",
                "undefined4": "uint32_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000056b8": {
            "additional_data": {
                "FUN_00000514": {
                    "calculate_permission": 1
                },
                "FUN_000056b8": {
                    "analyze_data": 1,
                    "calculate_result": 1,
                    "check_and_set_flags": 2,
                    "check_and_set_permissions": 2,
                    "check_and_update_permissions": 1,
                    "check_file_validity": 2,
                    "check_flags_and_update_param": 1,
                    "check_memory": 1,
                    "check_memory_access": 3,
                    "check_memory_access_permissions": 1,
                    "check_memory_access_rights": 1,
                    "check_memory_permissions": 1,
                    "check_permissions": 10,
                    "check_permissions_and_set_flag": 1,
                    "check_permissions_and_update": 1,
                    "extract_status": 1,
                    "handle_function": 1
                },
                "auStack_68": {
                    "auxiliary_data": 1,
                    "auxiliary_stack": 2,
                    "buffer": 9,
                    "data": 1,
                    "short_value": 1,
                    "stack_buffer": 1,
                    "stack_data": 1,
                    "stack_param": 1,
                    "stack_variable": 2,
                    "temp": 3,
                    "temp_array": 2,
                    "temp_buffer": 4,
                    "temp_data": 1,
                    "temp_stack": 2
                },
                "iVar1": {
                    "function_result": 2,
                    "result": 17,
                    "return_value": 5,
                    "status": 6
                },
                "local_64": {
                    "file_flags": 2,
                    "flags": 3,
                    "local_data": 1,
                    "local_flag": 5,
                    "local_flags": 1,
                    "local_value": 5,
                    "local_var": 3,
                    "local_variable": 3,
                    "mask": 1,
                    "masked_value": 1,
                    "mem_permissions": 1,
                    "temp": 1,
                    "temp_value": 1,
                    "value": 3
                },
                "param_1": {
                    "arg1": 1,
                    "code_base": 1,
                    "context": 2,
                    "data": 1,
                    "data_pointer": 1,
                    "input": 3,
                    "input_array": 1,
                    "input_param": 3,
                    "input_ptr": 1,
                    "input_value": 1,
                    "mem_buffer": 1,
                    "param": 3,
                    "param1": 6,
                    "param_1": 3,
                    "status": 1,
                    "user_data": 1
                },
                "param_2": {
                    "address": 1,
                    "address_info": 1,
                    "address_pointer": 1,
                    "arg2": 1,
                    "config": 1,
                    "data": 3,
                    "data_array": 1,
                    "data_ptr": 1,
                    "file_header": 1,
                    "file_info": 1,
                    "info": 1,
                    "input": 3,
                    "input_address": 1,
                    "input_length": 1,
                    "mem_info": 1,
                    "param2": 6,
                    "param_pointer": 1,
                    "params_pointer": 1,
                    "permissions": 1,
                    "permissions_array": 1,
                    "permissions_data": 2
                },
                "param_3": {
                    "out_param": 1,
                    "output": 5,
                    "output_flag": 1,
                    "output_flags": 1,
                    "output_param": 2,
                    "output_permissions": 1,
                    "output_pointer": 1,
                    "output_ptr": 1,
                    "output_status": 1,
                    "output_value": 2,
                    "param3": 1,
                    "result": 8,
                    "result_param": 2,
                    "result_pointer": 1,
                    "result_ptr": 1,
                    "status": 2
                },
                "param_4": {
                    "bitwise_result": 1,
                    "flag": 3,
                    "flag_pointer": 1,
                    "flag_ptr": 2,
                    "flags": 7,
                    "mem_flags": 1,
                    "out_flag": 1,
                    "output_flag": 1,
                    "output_value": 2,
                    "param4": 1,
                    "permission_pointer": 1,
                    "permissions": 1,
                    "result": 2,
                    "status": 4,
                    "status_flag": 1,
                    "status_param": 2
                },
                "uVar2": {
                    "access_code": 1,
                    "access_type": 1,
                    "flag": 2,
                    "flag_value": 1,
                    "flags": 1,
                    "new_status": 1,
                    "permission": 6,
                    "permission_flag": 5,
                    "permission_value": 1,
                    "permissions": 3,
                    "result": 1,
                    "return_value": 2,
                    "status": 1,
                    "status_flag": 1,
                    "updated_value": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_00000514"
            ],
            "calling": [
                "FUN_00005700"
            ],
            "code": "\nundefined4 check_permissions_and_set_flag_000056b8(undefined4 param1,int param2,undefined4 *result,uint *flags)\n\n{\n  int result;\n  undefined4 permission;\n  undefined buffer [4];\n  uint local_flag;\n  \n  if ((*(short *)(param2 + 0xe) < 0) ||\n     (result = FUN_00000514(param1,(int)*(short *)(param2 + 0xe),buffer), result < 0)) {\n    *flags = 0;\n    if ((int)((uint)*(ushort *)(param2 + 0xc) << 0x18) < 0) {\n      permission = 0x40;\n      goto LAB_000056f8;\n    }\n  }\n  else {\n    *flags = (uint)((local_flag & 0xf000) == 0x2000);\n  }\n  permission = 0x400;\nLAB_000056f8:\n  *result = permission;\n  return 0;\n}\n\n",
            "current_name": "check_permissions_and_set_flag_000056b8",
            "entrypoint": "0x000056b8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000056b8": "check_permissions_and_set_flag_000056b8",
                "auStack_68": "buffer",
                "iVar1": "result",
                "local_64": "local_flag",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "result",
                "param_4": "flags",
                "uVar2": "permission"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00005700": {
            "additional_data": {
                "FUN_00005700": {
                    "process_data": 19,
                    "process_function": 3,
                    "process_input": 1,
                    "process_param": 1,
                    "update_data": 2,
                    "update_info": 1
                },
                "iVar2": {
                    "check": 1,
                    "check_result": 1,
                    "error_code": 8,
                    "function_result": 1,
                    "result": 3,
                    "result2": 4,
                    "return_value": 5,
                    "status": 6,
                    "temp_val": 1,
                    "temp_variable": 1
                },
                "local_14": {
                    "local_array": 2,
                    "local_data2": 4,
                    "local_info2": 1,
                    "local_output": 3,
                    "local_pointer": 1,
                    "local_ptr": 1,
                    "local_result": 1,
                    "local_val2": 1,
                    "local_value2": 1,
                    "local_var2": 5,
                    "local_var_two": 1,
                    "local_variable2": 2,
                    "param_pointer": 1,
                    "temp2": 1,
                    "temp_array": 1,
                    "temp_output": 1,
                    "temp_value2": 1,
                    "temp_var2": 2,
                    "var2": 1
                },
                "local_18": {
                    "local_data": 3,
                    "local_data1": 4,
                    "local_info1": 1,
                    "local_input": 3,
                    "local_val1": 1,
                    "local_value": 1,
                    "local_value1": 3,
                    "local_var1": 5,
                    "local_var_one": 1,
                    "local_variable1": 2,
                    "param_value": 1,
                    "temp1": 1,
                    "temp_input": 1,
                    "temp_value1": 1,
                    "temp_var1": 2,
                    "var1": 1
                },
                "param_1": {
                    "data1": 1,
                    "data_address": 2,
                    "data_length": 2,
                    "data_ptr": 2,
                    "data_size": 1,
                    "info_ptr": 1,
                    "input": 6,
                    "input_data": 2,
                    "input_flag": 1,
                    "input_param": 3,
                    "input_parameter": 3,
                    "input_val": 1,
                    "input_value": 5,
                    "param_one": 1
                },
                "param_2": {
                    "data": 4,
                    "data2": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "input_array": 1,
                    "output": 7,
                    "output_array": 5,
                    "output_data": 3,
                    "output_param": 3,
                    "output_parameter": 2,
                    "output_ptr": 1,
                    "output_values": 1,
                    "param_two": 1
                },
                "uVar1": {
                    "flag": 3,
                    "result": 23,
                    "result1": 3,
                    "result_value": 1,
                    "resultant_value": 1
                }
            },
            "called": [
                "FUN_00004bd0",
                "FUN_00000534",
                "FUN_000056b8"
            ],
            "calling": [
                "FUN_000054a8",
                "FUN_00006768"
            ],
            "code": "\nvoid process_data_00005700(int input,int *output)\n\n{\n  ushort result;\n  int error_code;\n  int local_var1;\n  int *local_var2;\n  \n  if (-1 < (int)((uint)*(ushort *)(output + 3) << 0x1e)) {\n    local_var1 = input;\n    local_var2 = output;\n    result = FUN_000056b8(input,output,&local_var1,&local_var2);\n    error_code = FUN_00004bd0(input,local_var1);\n    if (error_code != 0) {\n      *(undefined **)(input + 0x28) = &DAT_0000423d;\n      *output = error_code;\n      *(ushort *)(output + 3) = *(ushort *)(output + 3) | 0x80;\n      output[5] = local_var1;\n      output[4] = error_code;\n      if ((local_var2 != (int *)0x0) &&\n         (error_code = FUN_00000534(input,(int)*(short *)((int)output + 0xe)), error_code != 0)) {\n        *(ushort *)(output + 3) = *(ushort *)(output + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(output + 3) = result | *(ushort *)(output + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(output + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(output + 3) = *(ushort *)(output + 3) & 0xfffc | 2;\n  }\n  *output = (int)output + 0x47;\n  output[4] = (int)output + 0x47;\n  output[5] = 1;\n  return;\n}\n\n",
            "current_name": "process_data_00005700",
            "entrypoint": "0x00005700",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00005700": "process_data_00005700",
                "iVar2": "error_code",
                "local_14": "local_var2",
                "local_18": "local_var1",
                "param_1": "input",
                "param_2": "output",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00005780": {
            "additional_data": {
                "Elf32_Rel_ARRAY_1fff0200": {
                    "relocation_array": 1,
                    "relocation_entries": 1,
                    "relocation_table": 3
                },
                "FUN_00004b34": {
                    "apply_mutation": 1,
                    "apply_relocation": 8,
                    "call_function": 1,
                    "execute_sub_function": 2,
                    "function_that_manipulates_data": 1,
                    "perform_operation": 1,
                    "perform_relocation": 8,
                    "process_data": 1,
                    "process_rel": 1,
                    "process_rel_entry": 1,
                    "process_relocation_entry": 1,
                    "process_relocations": 1,
                    "relocate_entry": 1
                },
                "FUN_00005780": {
                    "call_rel_offset_function": 1,
                    "execute_function": 2,
                    "execute_relocation": 6,
                    "extract_data_from_binary": 1,
                    "extract_relocated_entry": 1,
                    "function_that_calls_another_function": 1,
                    "initialize_rel_table": 1,
                    "initialize_relocation_entry": 1,
                    "process_array": 1,
                    "process_function": 1,
                    "process_rel_array": 3,
                    "process_relocation": 8,
                    "process_relocation_entry": 2
                },
                "param_1": {
                    "address": 1,
                    "arg": 1,
                    "arg1": 1,
                    "array": 1,
                    "base_address": 1,
                    "data": 4,
                    "entry": 1,
                    "function_parameter": 1,
                    "input": 1,
                    "input_param": 2,
                    "offset": 2,
                    "offset_array": 1,
                    "param": 2,
                    "rel_array": 1,
                    "rel_offset": 2,
                    "relocated_address": 1,
                    "relocation_array": 1,
                    "relocation_entry": 4,
                    "relocation_index": 1,
                    "relocation_table": 2
                },
                "param_2": {
                    "array_index": 2,
                    "array_size": 1,
                    "entry_count": 1,
                    "input_param2": 1,
                    "length": 1,
                    "num_of_relocations": 1,
                    "offset": 5,
                    "param2": 3,
                    "param_2": 1,
                    "r_offset": 2,
                    "rel_offset": 1,
                    "relocation_count": 1,
                    "size": 1,
                    "sub_func_param2": 1
                },
                "param_3": {
                    "arg1": 1,
                    "input_param3": 1,
                    "offset_value": 1,
                    "param": 1,
                    "param3": 8,
                    "param_3": 6,
                    "parameter1": 1,
                    "relocation_offset": 1,
                    "sub_func_param3": 1,
                    "unused_param1": 1
                },
                "param_4": {
                    "arg2": 1,
                    "input_param4": 1,
                    "param4": 8,
                    "param_4": 7,
                    "parameter2": 1,
                    "relocation_value": 1,
                    "result": 1,
                    "sub_func_param4": 1,
                    "unused_param2": 1
                },
                "r_offset": {
                    "relocation_offset": 1
                }
            },
            "called": [
                "FUN_00004b34"
            ],
            "calling": [
                "FUN_00005100"
            ],
            "code": "\nvoid process_relocation_entry_00005780(undefined4 data)\n\n{\n  FUN_00004b34(relocation_table[16].relocation_offset,data);\n  return;\n}\n\n",
            "current_name": "process_relocation_entry_00005780",
            "entrypoint": "0x00005780",
            "imported": false,
            "improved": true,
            "renaming": {
                "Elf32_Rel_ARRAY_1fff0200": "relocation_table",
                "FUN_00005780": "process_relocation_entry_00005780",
                "param_1": "data",
                "r_offset": "relocation_offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00005790": {
            "additional_data": {
                "FUNC_000045e8": {
                    "perform_initialization": 1,
                    "process_data": 28,
                    "update_data": 2
                },
                "FUN_00005790": {
                    "initialize_data": 29,
                    "initialize_external_device": 1
                },
                "Funn_00005790": {
                    "initialize_data": 1
                }
            },
            "called": [
                "FUN_000045e8"
            ],
            "calling": [
                "FUN_00004bd0",
                "FUN_00004b34"
            ],
            "code": "\nvoid initialize_data_00005790(void)\n\n{\n  FUNC_000045e8(&DAT_1fff0de8);\n  return;\n}\n\n",
            "current_name": "initialize_data_00005790",
            "entrypoint": "0x00005790",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00005790": "initialize_data_00005790"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0000579c": {
            "additional_data": {
                "FUNC_000045ec": {
                    "configure_device": 1,
                    "perform_initialization": 1,
                    "process_data": 27,
                    "process_source_data": 1,
                    "transfer_data": 1
                },
                "FUN_0000579c": {
                    "initialize_data": 26,
                    "initialize_data_source": 1,
                    "initialize_data_structure": 1,
                    "initialize_device": 1,
                    "initialize_system": 1,
                    "initiate_data_transfer": 1
                }
            },
            "called": [
                "FUN_000045ec"
            ],
            "calling": [
                "FUN_00004bd0",
                "FUN_00004b34"
            ],
            "code": "\nvoid initialize_data_source_0000579c(void)\n\n{\n  FUNC_000045ec(&DAT_1fff0de8);\n  return;\n}\n\n",
            "current_name": "initialize_data_source_0000579c",
            "entrypoint": "0x0000579c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0000579c": "initialize_data_source_0000579c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000057a8": {
            "additional_data": {
                "FUN_00005404": {
                    "handle_error": 1,
                    "reverse_bytes": 1,
                    "reverse_data": 1,
                    "reverse_input": 1,
                    "reverse_value": 1
                },
                "FUN_000057a8": {
                    "extract_and_decrement": 1,
                    "extract_character": 1,
                    "modify_data_and_return_value": 1,
                    "parse_input": 1,
                    "process_character": 2,
                    "process_data": 3,
                    "process_input": 18,
                    "process_input_and_return": 1,
                    "read_and_decrement": 1,
                    "update_buffer": 1,
                    "update_char_array": 1
                },
                "iVar1": {
                    "array_index": 1,
                    "array_length": 1,
                    "array_size": 1,
                    "count": 11,
                    "counter": 1,
                    "index": 8,
                    "last_index": 1,
                    "remaining_attempts": 1,
                    "remaining_elements": 4,
                    "repeated_count": 1
                },
                "param_1": {
                    "arg1": 5,
                    "arg_1": 1,
                    "entry_point": 1,
                    "input": 1,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "input_size": 1,
                    "param": 2,
                    "param1": 3,
                    "param_1": 4,
                    "result": 2,
                    "status": 5,
                    "status_flag": 1,
                    "value": 3
                },
                "param_2": {
                    "arg2": 2,
                    "character": 9,
                    "data": 1,
                    "input": 4,
                    "input_char": 6,
                    "input_value": 7,
                    "new_value": 1,
                    "param2": 1
                },
                "param_3": {
                    "arg3": 1,
                    "array": 2,
                    "buffer": 5,
                    "buffer_pointer": 1,
                    "char_array": 1,
                    "data": 9,
                    "data_array": 6,
                    "data_buffer": 1,
                    "data_ptr": 1,
                    "input_buffer": 1,
                    "param3": 1,
                    "parameters": 1,
                    "ptrs": 1
                },
                "puVar2": {
                    "byte_pointer": 1,
                    "byte_ptr": 1,
                    "current": 1,
                    "current_byte": 1,
                    "current_char": 3,
                    "current_data_byte": 1,
                    "current_element": 5,
                    "current_pointer": 1,
                    "current_ptr": 3,
                    "data_ptr": 2,
                    "pointer": 1,
                    "ptr": 10
                }
            },
            "called": [
                "FUN_00005404"
            ],
            "calling": [
                "FUN_000057d2"
            ],
            "code": "\nint process_input_and_return_000057a8(undefined4 arg1,int character,undefined4 *data)\n\n{\n  int count;\n  undefined *ptr;\n  \n  count = data[2] + -1;\n  data[2] = count;\n  if ((count < 0) && ((count < (int)data[6] || (character == 10)))) {\n    count = FUN_00005404();\n    return count;\n  }\n  ptr = (undefined *)*data;\n  *data = ptr + 1;\n  *ptr = (char)character;\n  return character;\n}\n\n",
            "current_name": "process_input_and_return_000057a8",
            "entrypoint": "0x000057a8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000057a8": "process_input_and_return_000057a8",
                "iVar1": "count",
                "param_1": "arg1",
                "param_2": "character",
                "param_3": "data",
                "puVar2": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000057d2": {
            "additional_data": {
                "FUN_000057d2": {
                    "decode_and_count": 1,
                    "find_last_match": 1,
                    "iterate_and_call": 1,
                    "iterate_and_call_function": 4,
                    "iterate_and_evaluate": 1,
                    "iterate_over_data": 1,
                    "process_array": 2,
                    "process_data": 16,
                    "process_function": 1,
                    "process_items": 2,
                    "read_array": 1
                },
                "iVar1": {
                    "index": 1,
                    "result": 28,
                    "return_value": 2
                },
                "iVar3": {
                    "counter": 1,
                    "current_data_size": 1,
                    "current_idx": 1,
                    "current_index": 13,
                    "current_len": 1,
                    "current_length": 2,
                    "current_param4": 1,
                    "current_pos": 1,
                    "current_size": 5,
                    "index": 1,
                    "initial_length": 1,
                    "remaining_length": 1,
                    "remaining_size": 2
                },
                "param_1": {
                    "arg1": 15,
                    "config": 1,
                    "input1": 5,
                    "input_1": 1,
                    "param1": 1,
                    "param_1": 3,
                    "size": 1,
                    "val1": 1,
                    "value1": 1,
                    "value_1": 1,
                    "var1": 1
                },
                "param_2": {
                    "arg2": 15,
                    "data": 1,
                    "input2": 5,
                    "input_2": 1,
                    "param2": 1,
                    "param_2": 3,
                    "val2": 1,
                    "value": 1,
                    "value2": 1,
                    "value_2": 1,
                    "var2": 1
                },
                "param_3": {
                    "array": 4,
                    "buffer": 1,
                    "data": 19,
                    "data_array": 1,
                    "data_ptr": 3,
                    "input_array": 1,
                    "input_data": 1,
                    "item_list": 1
                },
                "param_4": {
                    "array_length": 2,
                    "array_size": 1,
                    "data_len": 1,
                    "data_length": 5,
                    "data_size": 2,
                    "length": 11,
                    "num_items": 1,
                    "size": 8
                },
                "puVar2": {
                    "buffer_end": 1,
                    "end": 2,
                    "end_data_ptr": 1,
                    "end_of_array": 2,
                    "end_of_data": 4,
                    "end_pointer": 6,
                    "end_ptr": 14,
                    "last_data_address": 1
                }
            },
            "called": [
                "FUN_000057a8"
            ],
            "calling": [
                "FUN_000057f8"
            ],
            "code": "\nint process_data_000057d2(undefined4 arg1,undefined4 arg2,undefined *data,int length)\n\n{\n  int result;\n  undefined *end_ptr;\n  int current_index;\n  \n  end_ptr = data + length;\n  current_index = length;\n  do {\n    if (data == end_ptr) {\n      return 0;\n    }\n    result = FUN_000057a8(arg1,*data,arg2,length,current_index);\n    length = result + 1;\n    data = data + 1;\n  } while (length != 0);\n  return result;\n}\n\n",
            "current_name": "process_data_000057d2",
            "entrypoint": "0x000057d2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000057d2": "process_data_000057d2",
                "iVar1": "result",
                "iVar3": "current_index",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "data",
                "param_4": "length",
                "puVar2": "end_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000057f8": {
            "additional_data": {
                "DAT_00007998": {
                    "dat_3": 1,
                    "ptr_data3": 1
                },
                "DAT_000079b8": {
                    "dat_1": 1,
                    "ptr_data1": 1
                },
                "DAT_000079d8": {
                    "dat_2": 1,
                    "ptr_data2": 1
                },
                "DAT_00007c02": {
                    "dat_4": 1,
                    "str_data1": 1
                },
                "ERR": {
                    "error_value": 1
                },
                "FUNC_000042a4": {
                    "function_d": 1
                },
                "FUNC_000045e8": {
                    "execute_func_000045e8": 1,
                    "function1": 1,
                    "function_1": 1,
                    "function_a": 1,
                    "my_function2": 1,
                    "perform_operation_1": 1,
                    "process_data1": 1
                },
                "FUNC_000045ec": {
                    "execute_func_000045ec": 1,
                    "function2": 1,
                    "function_2": 1,
                    "function_b": 1,
                    "my_function3": 1,
                    "perform_operation_3": 1,
                    "process_data2": 1
                },
                "FUN_000042a4": {
                    "execute_fun_000042a4": 1,
                    "function_4": 1,
                    "my_function1": 1,
                    "perform_operation_2": 1,
                    "process_data6": 1,
                    "warning": 1
                },
                "FUN_000045e8": {
                    "process_data3": 1
                },
                "FUN_000045ec": {
                    "process_data4": 1
                },
                "FUN_000054a8": {
                    "check_condition": 2,
                    "check_conditions": 1,
                    "check_config_options": 1,
                    "execute_fun_000054a8": 1,
                    "function_c": 1,
                    "my_function4": 1
                },
                "FUN_000057d2": {
                    "compress_data": 1,
                    "function_f": 1,
                    "my_function5": 1,
                    "process_data": 2,
                    "process_data5": 1,
                    "process_string": 1
                },
                "FUN_000057f8": {
                    "decode_and_process_data": 1,
                    "decode_data": 1,
                    "extract_data_from_binary": 1,
                    "parse_and_extract_data": 1,
                    "parse_and_process_data": 2,
                    "parse_data": 1,
                    "parse_input": 1,
                    "parse_input_string": 1,
                    "parse_string": 3,
                    "process_data": 3,
                    "reverse_compress_data": 1
                },
                "FUN_00005b34": {
                    "apply_transformation": 1,
                    "function_3": 1
                },
                "FUN_00006010": {
                    "find_char": 1,
                    "find_char_position": 1,
                    "find_identifier_in_string": 1,
                    "function_e": 1,
                    "get_flag_or_specifier": 1,
                    "match_pattern": 1,
                    "my_function6": 1
                },
                "LAB_0000588e": {
                    "my_label1": 1
                },
                "LAB_00005896": {
                    "my_label2": 1
                },
                "LAB_0000589a": {
                    "my_label3": 1
                },
                "LAB_00005a06": {
                    "my_label4": 1
                },
                "bVar4": {
                    "bool_flag": 1,
                    "bool_value": 1,
                    "bool_var": 7,
                    "boolean_variable": 1,
                    "condition": 2,
                    "flag": 4,
                    "found_digit": 2,
                    "found_number": 1,
                    "is_digit": 5,
                    "is_number": 1,
                    "is_numeric": 1,
                    "is_true": 5
                },
                "i": {
                    "index_var": 1
                },
                "iVar1": {
                    "byte_count": 1,
                    "error_code": 1,
                    "index": 6,
                    "index1": 1,
                    "int_value1": 1,
                    "iteration_variable_1": 1,
                    "result": 9,
                    "result1": 2,
                    "temp_var_1": 1,
                    "temp_variable_1": 1,
                    "tmp_var1": 1,
                    "value1": 1,
                    "var1": 5
                },
                "iVar2": {
                    "func_result": 1,
                    "index2": 1,
                    "int_value2": 1,
                    "iteration_variable_2": 1,
                    "result": 6,
                    "result2": 2,
                    "status": 4,
                    "temp_result": 5,
                    "temp_val": 1,
                    "temp_var_2": 1,
                    "temp_variable_2": 1,
                    "tmp_var2": 1,
                    "value2": 1,
                    "var2": 5
                },
                "local_30": {
                    "48": 1,
                    "alignment": 2,
                    "constant_0": 1,
                    "last_char": 1,
                    "length": 1,
                    "local_30": 1,
                    "local_u_int2": 1,
                    "local_uint_var_2": 1,
                    "local_undefined4": 1,
                    "local_undefined_4": 1,
                    "local_var10": 1,
                    "local_var3": 1,
                    "local_var7": 1,
                    "local_var9": 2,
                    "local_var_flag4": 1,
                    "local_variable10": 1,
                    "temp_var2": 2,
                    "temp_var4": 1,
                    "temp_var_3": 1,
                    "tmp_2": 1,
                    "u_stack_30": 1,
                    "undefined4_value2": 1,
                    "undefined4_var": 1,
                    "undefined_value4": 1,
                    "undefined_variable_3": 1,
                    "unimportant_local_var4": 1,
                    "unknown": 1,
                    "unused_memory": 1
                },
                "local_45": {
                    "71": 1,
                    "alignment_flag": 1,
                    "alternate_form": 1,
                    "char1": 1,
                    "char_width": 1,
                    "extra_flag": 1,
                    "flag": 1,
                    "flag2": 1,
                    "flag3": 1,
                    "flag_char": 1,
                    "flag_variable_2": 1,
                    "local_byte3": 2,
                    "local_char3": 1,
                    "local_undefined3": 1,
                    "local_undefined_3": 1,
                    "local_undefined_var_3": 1,
                    "local_var8": 2,
                    "local_var9": 1,
                    "local_var_flag3": 1,
                    "local_variable9": 1,
                    "modifiers": 1,
                    "optional_flag": 1,
                    "sign": 3,
                    "temp_byte4": 1,
                    "unaffected_var3": 1,
                    "undefined_value3": 2
                },
                "local_6e": {
                    "46": 1,
                    "char_plus": 1,
                    "constant2": 1,
                    "constant_48": 1,
                    "flag2": 1,
                    "flag_2": 1,
                    "length2": 1,
                    "local_byte2": 2,
                    "local_char2": 1,
                    "local_undefined2": 1,
                    "local_undefined_2": 1,
                    "local_undefined_var_2": 1,
                    "local_var7": 2,
                    "local_var8": 1,
                    "local_var_flag2": 1,
                    "local_variable7": 1,
                    "padding2": 1,
                    "plus": 1,
                    "plus_flag": 1,
                    "plus_padding": 1,
                    "ptr_byte4": 1,
                    "temp_byte3": 1,
                    "unaffected_var2": 1,
                    "undefined_value2": 2,
                    "undefined_variable_2": 1,
                    "unimportant_local_var3": 1
                },
                "local_6f": {
                    "45": 1,
                    "char_space": 1,
                    "constant1": 1,
                    "constant_32": 1,
                    "flag1": 1,
                    "flag_1": 1,
                    "length1": 1,
                    "local_byte1": 2,
                    "local_char": 1,
                    "local_undefined": 2,
                    "local_undefined_var_1": 1,
                    "local_var6": 2,
                    "local_var7": 1,
                    "local_var_flag1": 1,
                    "local_variable6": 1,
                    "padding1": 1,
                    "ptr_byte3": 1,
                    "space": 1,
                    "space_flag": 1,
                    "space_padding": 1,
                    "temp_byte2": 1,
                    "unaffected_var1": 1,
                    "undefined_value": 1,
                    "undefined_value1": 1,
                    "undefined_variable": 1,
                    "unimportant_local_var2": 1
                },
                "local_70": {
                    "byte_value": 1,
                    "byte_variable": 1,
                    "c": 1,
                    "character": 1,
                    "conversion_specifier": 1,
                    "current_byte": 2,
                    "current_char": 2,
                    "format": 1,
                    "format_char": 1,
                    "local_byte": 5,
                    "local_byte_var_1": 1,
                    "local_var5": 2,
                    "local_var6": 3,
                    "local_variable5": 1,
                    "opcode": 1,
                    "option_char": 1,
                    "specifier": 1,
                    "symbol": 1,
                    "temp_byte": 1,
                    "temp_byte1": 1,
                    "temp_char": 1,
                    "type": 1
                },
                "local_74": {
                    "counter": 1,
                    "counter_variable": 1,
                    "local_int3": 2,
                    "local_int_3": 1,
                    "local_int_var_3": 1,
                    "local_var2": 1,
                    "local_var4": 2,
                    "local_var5": 3,
                    "local_variable4": 1,
                    "output_size": 1,
                    "result": 1,
                    "total_bytes_processed": 1,
                    "total_count_value": 1,
                    "total_length": 7,
                    "total_result": 1,
                    "total_size": 4,
                    "total_value": 1,
                    "total_width": 1
                },
                "local_7c": {
                    "curr_value": 1,
                    "int_value": 2,
                    "int_value4": 1,
                    "integer_width": 1,
                    "local_counter": 1,
                    "local_int2": 2,
                    "local_int_2": 1,
                    "local_int_var_2": 1,
                    "local_var1": 1,
                    "local_var2": 1,
                    "local_var3": 2,
                    "local_var4": 3,
                    "local_variable3": 1,
                    "n": 1,
                    "param": 1,
                    "pi_var": 1,
                    "temp_int": 1,
                    "temp_val3": 1,
                    "temp_var3": 1,
                    "temp_variable_4": 1,
                    "u_val": 1,
                    "unimportant_local_var": 1,
                    "value": 3,
                    "width": 1
                },
                "local_84": {
                    "decimal": 1,
                    "decimal_value": 1,
                    "int_result": 1,
                    "int_value3": 1,
                    "local_int": 2,
                    "local_int_1": 1,
                    "local_int_var_1": 1,
                    "local_value": 1,
                    "local_var": 1,
                    "local_var2": 3,
                    "local_var3": 2,
                    "local_variable2": 1,
                    "multiplier": 1,
                    "precision": 9,
                    "temp": 1,
                    "temp_val1": 1,
                    "temp_variable_3": 1,
                    "threshold": 1,
                    "width": 1
                },
                "local_88": {
                    "bit_mask": 1,
                    "bit_mask_value": 1,
                    "flag_value": 1,
                    "flag_variable": 1,
                    "flags": 15,
                    "local_u_int": 1,
                    "local_uint": 1,
                    "local_uint_var_1": 1,
                    "local_unsigned_int": 1,
                    "local_var1": 3,
                    "local_var2": 2,
                    "local_variable1": 1,
                    "options": 1,
                    "pattern_flag": 1
                },
                "local_8c": {
                    "int_array_ptr": 1,
                    "int_pointer3": 1,
                    "int_ptr": 2,
                    "int_ptr2": 1,
                    "int_ptr3": 1,
                    "local_array": 2,
                    "local_array1": 1,
                    "local_int_array": 4,
                    "local_pointer": 3,
                    "local_pointer_var": 1,
                    "local_ptr": 2,
                    "local_var1": 2,
                    "next_data_pointer": 1,
                    "output_array": 1,
                    "output_length_array_ptr": 1,
                    "output_ptr": 1,
                    "output_size_ptr_copy": 1,
                    "p_offsets": 1,
                    "param_array": 1,
                    "pointer_arr": 1,
                    "ptr_array": 1,
                    "ptr_counter_list": 1
                },
                "param_1": {
                    "arg1": 4,
                    "data": 2,
                    "input": 3,
                    "input1": 1,
                    "input_data": 7,
                    "input_data_ptr": 1,
                    "input_param": 5,
                    "input_param1": 1,
                    "input_parameter": 2,
                    "input_pointer": 1,
                    "input_ptr": 2,
                    "input_value": 2
                },
                "param_2": {
                    "arg2": 4,
                    "config": 2,
                    "config_options": 1,
                    "config_param": 1,
                    "config_parameter": 1,
                    "data_param": 1,
                    "data_ptr": 1,
                    "format_ptr": 1,
                    "format_str": 1,
                    "header_ptr": 1,
                    "info_ptr": 1,
                    "input2": 1,
                    "input_array": 2,
                    "input_param2": 1,
                    "lookup_table": 1,
                    "options": 1,
                    "param_array": 4,
                    "param_list": 1,
                    "param_pointer": 2,
                    "parameter_data": 1,
                    "pointer1": 1,
                    "table": 1
                },
                "param_3": {
                    "arg3": 3,
                    "byte_array": 8,
                    "byte_array_param": 1,
                    "byte_data": 2,
                    "data": 1,
                    "data_array": 1,
                    "data_buffer": 2,
                    "data_ptr": 2,
                    "input": 2,
                    "input3": 1,
                    "input_param3": 1,
                    "input_string": 1,
                    "output_data": 1,
                    "output_data_ptr": 1,
                    "string": 1,
                    "string_data": 1,
                    "string_param": 2
                },
                "param_4": {
                    "arg4": 4,
                    "counter": 1,
                    "input4": 1,
                    "input_param4": 1,
                    "int_array": 5,
                    "int_array_param": 1,
                    "int_param": 1,
                    "int_pointer": 1,
                    "int_ptr": 1,
                    "length": 1,
                    "length_ptr": 1,
                    "offset": 1,
                    "output": 3,
                    "output_array": 2,
                    "output_counter": 1,
                    "output_data": 1,
                    "output_param": 1,
                    "output_parameter": 1,
                    "output_size_ptr": 1,
                    "pointer2": 1,
                    "result_ptr": 1
                },
                "pbVar5": {
                    "byte_pointer": 3,
                    "byte_pointer1": 2,
                    "byte_pointer_1": 1,
                    "byte_pointer_var": 1,
                    "byte_ptr": 4,
                    "byte_ptr1": 6,
                    "byte_ptr_var_1": 1,
                    "byte_var1": 1,
                    "current": 1,
                    "current_byte": 1,
                    "current_byte_ptr": 1,
                    "current_char_ptr": 2,
                    "p_char": 1,
                    "ptr_byte": 1,
                    "ptr_current_byte": 1,
                    "ptr_data": 1,
                    "str_ptr": 2,
                    "string_ptr": 1
                },
                "pbVar6": {
                    "byte_pointer2": 4,
                    "byte_pointer_2": 2,
                    "byte_pointer_var2": 1,
                    "byte_ptr2": 7,
                    "byte_ptr_var_2": 1,
                    "byte_var2": 1,
                    "curr_char": 1,
                    "current_byte": 1,
                    "current_byte_ptr": 1,
                    "current_byte_ptr2": 1,
                    "current_data_ptr": 1,
                    "next_byte": 1,
                    "p_current_char": 1,
                    "ptr1": 1,
                    "ptr_byte2": 1,
                    "ptr_next_byte": 1,
                    "ptr_next_data": 1,
                    "temp_str_ptr": 1,
                    "temp_string_ptr": 1,
                    "tmp_byte_ptr": 1
                },
                "piVar3": {
                    "current_int_ptr": 1,
                    "int_pointer": 1,
                    "int_pointer2": 1,
                    "int_ptr1": 1,
                    "int_ptr2": 1,
                    "length_array_ptr": 1,
                    "p_offset": 1,
                    "param_4_copy": 1,
                    "param_array_ptr": 1,
                    "pointer": 2,
                    "pointer1": 1,
                    "pointer3": 1,
                    "pointer_to_int": 1,
                    "pointer_var": 2,
                    "pointer_var1": 1,
                    "pointer_var3": 1,
                    "pointer_variable": 1,
                    "ptr": 5,
                    "ptr_counter": 1,
                    "ptr_param": 1,
                    "ptr_temp_var_3": 1,
                    "ptr_var1": 1,
                    "ptr_var3": 1,
                    "temp_pointer": 2
                },
                "uStack_80": {
                    "constant_0": 1,
                    "local_var3": 1,
                    "my_stack_80": 1,
                    "padding": 1,
                    "stack_var": 1,
                    "stack_var1": 1,
                    "stack_var_1": 1,
                    "stack_variable": 1,
                    "stack_variable_80": 1,
                    "temp_val2": 1,
                    "temp_value": 1,
                    "temp_var2": 1,
                    "temp_var_2": 1,
                    "tmp_3": 1,
                    "u_stack": 3,
                    "u_stack_80": 6,
                    "u_stack_var": 1,
                    "u_stack_var1": 1,
                    "undefined4_stack": 1,
                    "undefined4_value": 1,
                    "undefined_stack_variable": 1,
                    "unimportant_stack_var": 1,
                    "unused_stack": 2
                },
                "unaff_r7": {
                    "register_variable": 1,
                    "result": 1,
                    "result_unaff": 1,
                    "status": 1,
                    "sub_result": 1,
                    "temp": 2,
                    "temp_int": 1,
                    "temp_var": 6,
                    "tmp": 1,
                    "unaff_r7": 5,
                    "unaff_r7_value": 1,
                    "unaff_var": 1,
                    "unaff_var_1": 1,
                    "unaffected_r7": 1,
                    "unaffected_register_7": 1,
                    "unaffected_var": 1,
                    "unaffected_var1": 1,
                    "unaffected_var7": 1,
                    "unused": 1,
                    "var_unaff_r7": 1
                }
            },
            "called": [
                "FUN_00005b34",
                "FUN_000054a8",
                "FUN_000045e8",
                "FUN_00006010",
                "FUN_000042a4",
                "FUN_000045ec",
                "FUN_000057d2"
            ],
            "calling": [
                "FUN_00004c84"
            ],
            "code": "\n/* WARNING: Removindex_varng unreachable block (ram,0x000059f0) */\n\nindex_varnt parse_and_process_data_000057f8(index_varnt input_data,undefindex_varned4 *arg2,byte *byte_array,index_varnt *int_array)\n\n{\n  index_varnt result;\n  index_varnt result;\n  index_varnt *ptr;\n  bool bool_var;\n  byte *byte_ptr1;\n  index_varnt temp_var;\n  byte *byte_ptr2;\n  index_varnt *local_int_array;\n  uindex_varnt flags;\n  index_varnt precision;\n  undefindex_varned4 u_stack_80;\n  index_varnt local_var4;\n  index_varnt total_length;\n  byte local_byte;\n  undefindex_varned local_byte1;\n  undefindex_varned local_var7;\n  undefindex_varned sign;\n  undefindex_varned4 temp_var2;\n  \n  index_varf ((input_data != 0) && (*(index_varnt *)(input_data + 0x18) == 0)) {\n    FUN_000042a4();\n  }\n  index_varf (arg2 == &DAT_000079b8) {\n    arg2 = *(undefindex_varned4 **)(input_data + 4);\n  }\n  else index_varf (arg2 == (undefindex_varned4 *)&DAT_000079d8) {\n    arg2 = *(undefindex_varned4 **)(input_data + 8);\n  }\n  else index_varf (arg2 == (undefindex_varned4 *)&DAT_00007998) {\n    arg2 = *(undefindex_varned4 **)(input_data + 0xc);\n  }\n  index_varf ((-1 < (index_varnt)(arg2[0x19] << 0x1f)) && (-1 < (index_varnt)((uindex_varnt)*(ushort *)(arg2 + 3) << 0x16))) {\n    FUNC_000045e8(arg2[0x16]);\n  }\n  index_varf (((-1 < (index_varnt)((uindex_varnt)*(ushort *)(arg2 + 3) << 0x1c)) || (arg2[4] == 0)) &&\n     (result = FUN_000054a8(input_data,arg2), result != 0)) {\n    index_varf ((-1 < (index_varnt)(arg2[0x19] << 0x1f)) && (-1 < (index_varnt)((uindex_varnt)*(ushort *)(arg2 + 3) << 0x16)))\n    {\n      FUNC_000045ec(arg2[0x16]);\n    }\n    return -1;\n  }\n  total_length = 0;\n  local_byte1 = 0x20;\n  local_var7 = 0x30;\n  byte_ptr2 = byte_array;\n  local_int_array = int_array;\nmy_label1:\n  byte_ptr1 = byte_ptr2;\n  index_varf (*byte_ptr1 != 0) goto code_r0x00005896;\n  goto my_label3;\ncode_r0x00005896:\n  byte_ptr2 = byte_ptr1 + 1;\n  index_varf (*byte_ptr1 == 0x25) {\nmy_label3:\n    result = (index_varnt)byte_ptr1 - (index_varnt)byte_array;\n    index_varf (result != 0) {\n      result = FUN_000057d2(input_data,arg2,byte_array,result);\n      index_varf (result == -1) {\nmy_label4:\n        index_varf ((-1 < (index_varnt)(arg2[0x19] << 0x1f)) &&\n           (-1 < (index_varnt)((uindex_varnt)*(ushort *)(arg2 + 3) << 0x16))) {\n          FUNC_000045ec(arg2[0x16]);\n        }\n        index_varf ((index_varnt)((uindex_varnt)*(ushort *)(arg2 + 3) << 0x19) < 0) {\n          return -1;\n        }\n        return total_length;\n      }\n      total_length = total_length + result;\n    }\n    index_varf (*byte_ptr1 == 0) goto my_label4;\n    precision = -1;\n    u_stack_80 = 0;\n    flags = 0;\n    local_var4 = 0;\n    sign = 0;\n    temp_var2 = 0;\n    byte_ptr2 = byte_ptr1 + 1;\n    whindex_varle( true ) {\n      byte_ptr1 = byte_ptr2 + 1;\n      result = FUN_00006010(\"#-0+ \",*byte_ptr2,5);\n      index_varf (result == 0) break;\n      flags = 1 << (result - 0x7bfcU & 0xff) | flags;\n      byte_ptr2 = byte_ptr1;\n    }\n    index_varf ((index_varnt)(flags << 0x1b) < 0) {\n      sign = 0x20;\n    }\n    index_varf ((index_varnt)(flags << 0x1c) < 0) {\n      sign = 0x2b;\n    }\n    index_varf (*byte_ptr2 == 0x2a) {\n      ptr = local_int_array + 1;\n      local_var4 = *local_int_array;\n      local_int_array = ptr;\n      index_varf (local_var4 < 0) {\n        local_var4 = -local_var4;\n        flags = flags | 2;\n      }\n    }\n    else {\n      bool_var = false;\n      result = local_var4;\n      byte_ptr1 = byte_ptr2;\n      whindex_varle( true ) {\n        index_varf (9 < *byte_ptr1 - 0x30) break;\n        result = result * 10 + (*byte_ptr1 - 0x30);\n        bool_var = true;\n        byte_ptr1 = byte_ptr1 + 1;\n      }\n      index_varf (bool_var) {\n        local_var4 = result;\n      }\n    }\n    index_varf (*byte_ptr1 == 0x2e) {\n      index_varf (byte_ptr1[1] == 0x2a) {\n        precision = *local_int_array;\n        index_varf (precision < 0) {\n          precision = -1;\n        }\n        byte_ptr1 = byte_ptr1 + 2;\n        local_int_array = local_int_array + 1;\n      }\n      else {\n        bool_var = false;\n        precision = 0;\n        result = 0;\n        whindex_varle( true ) {\n          byte_ptr1 = byte_ptr1 + 1;\n          index_varf (9 < *byte_ptr1 - 0x30) break;\n          result = result * 10 + (*byte_ptr1 - 0x30);\n          bool_var = true;\n        }\n        index_varf (bool_var) {\n          precision = result;\n        }\n      }\n    }\n    result = FUN_00006010(&DAT_00007c02,*byte_ptr1,3);\n    index_varf (result != 0) {\n      flags = flags | 0x40 << (result - 0x7c02U & 0xff);\n      byte_ptr1 = byte_ptr1 + 1;\n    }\n    byte_array = byte_ptr1 + 1;\n    local_byte = *byte_ptr1;\n    result = FUN_00006010(\"efgEFG\",local_byte,6);\n    index_varf (result == 0) {\n      temp_var = FUN_00005b34(input_data,&flags,arg2,0x57d3,&local_int_array);\n      index_varf (temp_var == -1) goto my_label4;\n    }\n    else {\n      local_int_array = (index_varnt *)(((index_varnt)local_int_array + 7U & 0xfffffff8) + 8);\n    }\n    total_length = total_length + temp_var;\n    byte_ptr2 = byte_array;\n  }\n  goto my_label1;\n}\n\n",
            "current_name": "parse_and_process_data_000057f8",
            "entrypoint": "0x000057f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000057f8": "parse_and_process_data_000057f8",
                "LAB_0000588e": "my_label1",
                "LAB_0000589a": "my_label3",
                "LAB_00005a06": "my_label4",
                "bVar4": "bool_var",
                "i": "index_var",
                "iVar1": "result",
                "iVar2": "result",
                "local_30": "temp_var2",
                "local_45": "sign",
                "local_6e": "local_var7",
                "local_6f": "local_byte1",
                "local_70": "local_byte",
                "local_74": "total_length",
                "local_7c": "local_var4",
                "local_84": "precision",
                "local_88": "flags",
                "local_8c": "local_int_array",
                "param_1": "input_data",
                "param_2": "arg2",
                "param_3": "byte_array",
                "param_4": "int_array",
                "pbVar5": "byte_ptr1",
                "pbVar6": "byte_ptr2",
                "piVar3": "ptr",
                "uStack_80": "u_stack_80",
                "unaff_r7": "temp_var"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00005a58": {
            "additional_data": {
                "FUN_00005a58": {
                    "calculate_buffer_size": 1,
                    "calculate_data_length": 1,
                    "calculate_data_size": 2,
                    "calculate_length": 1,
                    "calculate_new_length": 1,
                    "calculate_required_length": 1,
                    "calculate_required_size": 2,
                    "calculate_string_length": 1,
                    "compute_param": 1,
                    "determine_string_length": 1,
                    "parse_and_process_data": 1,
                    "parse_data": 1,
                    "process_data": 9,
                    "reverse_and_count_chars": 1,
                    "update_buffer": 1,
                    "update_param": 1,
                    "update_param_and_call_function": 1,
                    "update_param_value": 1,
                    "update_params": 1
                },
                "LAB_00005afc": {
                    "error_exit": 1
                },
                "bVar6": {
                    "check_flag": 1,
                    "condition": 3,
                    "condition_check": 1,
                    "condition_result": 1,
                    "flag": 4,
                    "has_additional_data": 1,
                    "is_case_2": 1,
                    "is_condition_met": 6,
                    "is_condition_true": 4,
                    "is_flag": 1,
                    "is_flag_set": 4,
                    "is_negative": 1,
                    "is_special_case": 1,
                    "is_true": 1,
                    "is_valid": 1
                },
                "iVar1": {
                    "counter1": 1,
                    "i": 1,
                    "index": 13,
                    "iteration": 3,
                    "loop_counter": 7,
                    "loop_index": 6
                },
                "iVar3": {
                    "callback_result": 10,
                    "callback_return": 1,
                    "callback_return_value": 2,
                    "func_return_value": 1,
                    "function_result": 1,
                    "result": 3,
                    "return_value": 5,
                    "return_value2": 1,
                    "status": 1,
                    "sub_result": 1,
                    "temp": 4,
                    "var1": 1
                },
                "param_1": {
                    "buffer": 1,
                    "data": 3,
                    "input": 9,
                    "input1": 3,
                    "input_data": 2,
                    "input_param": 5,
                    "input_value": 4,
                    "param1": 2,
                    "val1": 1,
                    "value1": 1
                },
                "param_2": {
                    "arr": 1,
                    "array": 2,
                    "array1": 1,
                    "buffer": 1,
                    "data": 7,
                    "data_array": 5,
                    "data_ptr": 1,
                    "input2": 1,
                    "input_array": 5,
                    "input_data": 1,
                    "param_array": 1,
                    "parameters": 1,
                    "params": 2,
                    "source": 1,
                    "string": 1
                },
                "param_3": {
                    "buffer_size": 1,
                    "destination": 1,
                    "length": 3,
                    "output": 6,
                    "output_data_size": 1,
                    "output_length": 2,
                    "output_param": 1,
                    "output_ptr": 2,
                    "output_size": 5,
                    "output_value": 4,
                    "result": 4,
                    "updated_value": 1
                },
                "param_4": {
                    "additional_param": 1,
                    "additional_value": 1,
                    "config_param": 1,
                    "constant_value": 1,
                    "extra_param": 1,
                    "input2": 3,
                    "input3": 1,
                    "input_size": 1,
                    "param": 6,
                    "param4": 6,
                    "param_4": 3,
                    "unknown_param": 1,
                    "val2": 1,
                    "value": 2,
                    "value2": 1,
                    "var1": 1
                },
                "param_5": {
                    "callback": 13,
                    "callback_func": 5,
                    "callback_function": 10,
                    "function_callback": 1,
                    "output": 1,
                    "processor_func": 1
                },
                "uVar2": {
                    "result": 14,
                    "return_val": 1,
                    "return_value": 16
                },
                "uVar4": {
                    "limit": 1,
                    "max_data_length": 1,
                    "max_data_size": 1,
                    "max_length": 5,
                    "max_size": 5,
                    "max_val": 1,
                    "max_value": 15,
                    "maximum_size": 1,
                    "var2": 1
                },
                "uVar5": {
                    "count": 5,
                    "counter": 12,
                    "counter2": 1,
                    "iter": 2,
                    "iteration": 1,
                    "iteration_count": 2,
                    "loop_counter2": 1,
                    "loop_counter_2": 1,
                    "loop_index": 1,
                    "loop_index2": 1,
                    "loop_length": 1,
                    "temp_value": 1,
                    "u_var5": 1,
                    "var3": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00005b34"
            ],
            "code": "\nundefined4\nparse_and_process_data_00005a58(undefined4 input,uint *data,uint *output,undefined4 param4,code *callback)\n\n{\n  int index;\n  undefined4 return_value;\n  int callback_result;\n  uint max_value;\n  uint counter;\n  bool is_condition_met;\n  \n  max_value = data[4];\n  if ((int)data[4] < (int)data[2]) {\n    max_value = data[2];\n  }\n  *output = max_value;\n  if (*(char *)((int)data + 0x43) != '\\0') {\n    *output = max_value + 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *output = *output + 2;\n  }\n  if ((*data & 6) == 0) {\n    for (index = 0; index < (int)(data[3] - *output); index = index + 1) {\n      callback_result = (*callback)(input,param4,(int)data + 0x19,1);\n      if (callback_result == -1) goto error_exit;\n    }\n  }\n  max_value = (uint)*(byte *)((int)data + 0x43);\n  if (max_value != 0) {\n    max_value = 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *(undefined *)((int)data + max_value + 0x43) = 0x30;\n    *(undefined *)((int)data + max_value + 0x44) = *(undefined *)((int)data + 0x45);\n    max_value = max_value + 2;\n  }\n  index = (*callback)(input,param4,(int)data + 0x43,max_value);\n  if (index == -1) {\nerror_exit:\n    return_value = 0xffffffff;\n  }\n  else {\n    max_value = data[3];\n    is_condition_met = (*data & 6) == 4;\n    if (is_condition_met) {\n      max_value = max_value - *output;\n    }\n    if (is_condition_met) {\n      max_value = max_value & ~((int)max_value >> 0x1f);\n    }\n    else {\n      max_value = 0;\n    }\n    if ((int)data[4] < (int)data[2]) {\n      max_value = max_value + (data[2] - data[4]);\n    }\n    for (counter = 0; max_value != counter; counter = counter + 1) {\n      index = (*callback)(input,param4,(int)data + 0x1a,1);\n      if (index == -1) goto error_exit;\n    }\n    return_value = 0;\n  }\n  return return_value;\n}\n\n",
            "current_name": "parse_and_process_data_00005a58",
            "entrypoint": "0x00005a58",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00005a58": "parse_and_process_data_00005a58",
                "LAB_00005afc": "error_exit",
                "bVar6": "is_condition_met",
                "iVar1": "index",
                "iVar3": "callback_result",
                "param_1": "input",
                "param_2": "data",
                "param_3": "output",
                "param_4": "param4",
                "param_5": "callback",
                "uVar2": "return_value",
                "uVar4": "max_value",
                "uVar5": "counter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00005b34": {
            "additional_data": {
                "DAT_": {
                    "": 1
                },
                "FUN_00005a58": {
                    "execute_function": 1,
                    "process_number": 1
                },
                "FUN_00005b34": {
                    "convert_number_to_string": 1,
                    "convert_to_hex_string": 2,
                    "decode_and_convert": 1,
                    "decode_and_format": 1,
                    "decode_and_process": 1,
                    "format_data": 1,
                    "format_integer": 1,
                    "format_number": 1,
                    "formatted_output": 1,
                    "parse_and_format_value": 1,
                    "print_number": 1,
                    "process_code": 1
                },
                "FUN_00006010": {
                    "convert_to_string": 1,
                    "process_string": 1
                },
                "PTR_": {
                    "": 1
                },
                "bVar1": {
                    "bool_value": 1,
                    "bool_var1": 1,
                    "condition": 1,
                    "condition_flag": 1,
                    "flag": 2,
                    "is_divisible": 3,
                    "is_greater": 10,
                    "is_greater_than": 2,
                    "is_less_or_equal": 1,
                    "is_less_than": 1,
                    "is_negative": 3,
                    "is_positive": 5
                },
                "bVar2": {
                    "array_value": 1,
                    "byte_val": 4,
                    "byte_value": 16,
                    "byte_var2": 1,
                    "char_value": 1,
                    "data_type": 1,
                    "digit": 2,
                    "input_byte": 1,
                    "input_element": 1,
                    "num_byte": 1,
                    "type": 1,
                    "value": 1
                },
                "iVar3": {
                    "counter": 1,
                    "index": 3,
                    "int_val": 1,
                    "int_value": 6,
                    "int_var3": 1,
                    "result": 14,
                    "return_value": 3,
                    "temp_variable": 1,
                    "var1": 1
                },
                "iVar6": {
                    "callback_result": 1,
                    "conversion_result": 1,
                    "error_code": 1,
                    "inner_index": 1,
                    "inner_int_value": 1,
                    "int_var6": 1,
                    "iteration": 2,
                    "iterator": 1,
                    "loop_counter": 5,
                    "loop_index": 2,
                    "loop_value": 1,
                    "loop_var": 2,
                    "result": 1,
                    "return_value": 3,
                    "return_value2": 1,
                    "status": 3,
                    "temp": 2,
                    "var2": 1,
                    "var_6": 1
                },
                "iVar8": {
                    "temp_value1": 1,
                    "value": 1
                },
                "local_24": {
                    "callback": 1,
                    "callback_local": 1,
                    "callback_ptr": 1,
                    "default_callback": 1,
                    "format_result": 1,
                    "func_ptr": 1,
                    "function_pointer2": 1,
                    "initial_pointer": 1,
                    "local_callback": 5,
                    "local_callback_function": 1,
                    "local_func": 1,
                    "local_function": 2,
                    "local_output": 1,
                    "local_pointer24": 1,
                    "local_print_char_func": 1,
                    "local_result": 1,
                    "local_var": 2,
                    "local_var24": 1,
                    "original_position": 1,
                    "result_callback": 1,
                    "temp_result_function": 1
                },
                "param_1": {
                    "arg1": 2,
                    "format_type": 1,
                    "input": 5,
                    "input1": 3,
                    "input_1": 3,
                    "input_param": 2,
                    "input_param1": 1,
                    "input_value": 1,
                    "output": 1,
                    "param1": 7,
                    "param_1": 3,
                    "uninitialized_param": 1,
                    "value_type": 1
                },
                "param_2": {
                    "arg2": 1,
                    "array_pointer": 1,
                    "data": 2,
                    "data_array": 1,
                    "input": 1,
                    "input2": 3,
                    "input_2": 3,
                    "input_array": 5,
                    "input_data": 2,
                    "input_param2": 1,
                    "number": 4,
                    "param2": 4,
                    "param_array": 1,
                    "value": 2
                },
                "param_3": {
                    "arg3": 2,
                    "base": 1,
                    "format": 2,
                    "input3": 3,
                    "input_3": 3,
                    "input_data": 1,
                    "input_param3": 1,
                    "input_value2": 1,
                    "param": 1,
                    "param1": 1,
                    "param3": 8,
                    "param_3": 6,
                    "uninitialized_param_2": 1
                },
                "param_4": {
                    "arg4": 1,
                    "callback": 8,
                    "callback_function": 8,
                    "conversion_function": 1,
                    "format_string_func": 1,
                    "function_pointer": 1,
                    "input_4": 1,
                    "input_function": 1,
                    "input_param4": 1,
                    "output_function": 1,
                    "param4": 4,
                    "print": 1,
                    "print_char_func": 1,
                    "process_data": 1
                },
                "param_5": {
                    "arg5": 1,
                    "data": 1,
                    "input2_ptr_ptr": 1,
                    "input_2_pointer": 1,
                    "input_2_ptr": 1,
                    "input_5": 1,
                    "input_array": 1,
                    "input_array_ptr_ptr": 1,
                    "input_param5": 1,
                    "input_pointer": 1,
                    "output": 1,
                    "output_array_ptr": 2,
                    "param5": 7,
                    "param_5": 1,
                    "param_array_ptr": 1,
                    "pointer_to_pointer_array": 1,
                    "position": 1,
                    "pp_data": 1,
                    "pp_input_array": 1,
                    "pp_number": 1,
                    "ppu_var11": 1,
                    "print_char_args": 1,
                    "ptr_array": 1,
                    "ptr_counter": 1
                },
                "pcVar14": {
                    "array_end": 1,
                    "char_pointer": 1,
                    "char_pointer2": 1,
                    "char_pointer3": 1,
                    "char_ptr": 1,
                    "char_ptr_2": 1,
                    "char_var14": 1,
                    "current_digit": 1,
                    "current_pointer": 1,
                    "destination": 1,
                    "digits_end": 1,
                    "formatted_data": 1,
                    "formatted_string": 1,
                    "formatted_value": 1,
                    "new_char": 1,
                    "output": 1,
                    "output_string": 1,
                    "pc_result3": 1,
                    "pointer2": 1,
                    "ptr_char2": 1,
                    "ptr_var14": 1,
                    "result_ptr": 2,
                    "str": 1,
                    "string_pointer": 1,
                    "string_ptr": 2,
                    "temp_char": 1,
                    "temp_char_pointer": 1,
                    "temp_string": 1
                },
                "pcVar4": {
                    "callback": 2,
                    "callback_function": 1,
                    "final_result": 1,
                    "function_result": 1,
                    "output": 4,
                    "pc_callback": 1,
                    "pc_result": 2,
                    "pointer_var4": 1,
                    "ptr_var4": 1,
                    "result": 3,
                    "result_callback": 1,
                    "result_fn": 1,
                    "result_function": 3,
                    "return_address": 1,
                    "return_callback": 1,
                    "return_val": 2,
                    "return_value": 5
                },
                "pcVar5": {
                    "char_pointer": 1,
                    "char_ptr": 1,
                    "char_set": 1,
                    "digits": 2,
                    "hex_char_array": 2,
                    "hex_characters": 3,
                    "hex_chars": 5,
                    "hex_digits": 7,
                    "hex_string": 1,
                    "hex_values": 2,
                    "hexadecimal_digits": 1,
                    "hexchars": 1,
                    "lookup_table": 1,
                    "num_characters": 1,
                    "number_string": 1,
                    "ptr_var5": 1
                },
                "pcVar7": {
                    "array_ptr": 1,
                    "byte_ptr": 1,
                    "char_pointer": 3,
                    "char_pointer1": 1,
                    "char_pointer2": 1,
                    "char_ptr": 5,
                    "current_char": 3,
                    "current_position": 1,
                    "data_ptr": 1,
                    "output_string": 1,
                    "pc_result2": 1,
                    "pointer": 1,
                    "pointer1": 1,
                    "pointer_1": 1,
                    "position_ptr": 1,
                    "ptr": 2,
                    "ptr_char": 1,
                    "ptr_data": 1,
                    "ptr_var7": 1,
                    "start_pointer": 1,
                    "str_ptr": 1
                },
                "ppcVar12": {
                    "char_double_pointer": 1,
                    "char_pointer_pointer": 1,
                    "char_ptr_ptr": 1,
                    "nested_param_3": 1,
                    "nested_string_pointer": 1,
                    "pointer_to_char_pointer": 2,
                    "pp_string_ptr": 1,
                    "ppc_input_array": 1,
                    "ppc_result": 1,
                    "ptr_ptr_char_var12": 1,
                    "string_pointer": 1,
                    "string_pointer_pointer": 1,
                    "string_ptr_ptr": 3
                },
                "ppuVar11": {
                    "callback_ptr_ptr": 1,
                    "double_pointer": 1,
                    "input2_pointer_pointer": 1,
                    "input_array_ptr_ptr_ptr": 1,
                    "nested_param_2": 1,
                    "nested_pointer": 1,
                    "pointer_2_pointer": 1,
                    "pointer_pointer": 1,
                    "pointer_to_pointer": 1,
                    "pointer_to_pointer_array2": 1,
                    "position_ptr_ptr": 1,
                    "pp_current_number": 1,
                    "pp_data_ptr": 1,
                    "pp_input_array": 1,
                    "ptr_ptr": 1,
                    "ptr_ptr_var11": 1
                },
                "puVar9": {
                    "array_ptr_ptr": 1,
                    "data_pointer": 1,
                    "input_2_ptr_val": 1,
                    "nested_value_pointer": 1,
                    "number_ptr": 1,
                    "p_input_array": 1,
                    "pointer": 1,
                    "pointer2": 1,
                    "pointer_value": 2,
                    "pointer_var9": 1,
                    "pp_value": 1,
                    "print_char_ptr": 1,
                    "ptr": 3,
                    "ptr_current_number": 1,
                    "ptr_data": 1,
                    "ptr_temp_value": 1,
                    "ptr_uint": 1,
                    "ptr_value": 2,
                    "ptr_var9": 1,
                    "pu_var": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "uint_ptr": 1,
                    "unsigned_int_ptr": 1,
                    "unsigned_pointer": 1,
                    "value_ptr": 1
                },
                "uVar10": {
                    "base": 19,
                    "base_val": 1,
                    "base_value": 1,
                    "divisor": 1,
                    "radix": 1,
                    "temp_value2": 1,
                    "uint_var10": 1,
                    "unsigned_value2": 1,
                    "unsigned_var10": 1,
                    "value10": 1,
                    "value2": 1,
                    "var4": 1
                },
                "uVar13": {
                    "array_length": 2,
                    "digits_count": 1,
                    "input_length": 1,
                    "length": 10,
                    "length_value": 1,
                    "num_digits": 1,
                    "original_length": 1,
                    "original_value": 1,
                    "size": 1,
                    "size_val": 1,
                    "str_length": 1,
                    "string_length": 1,
                    "temp_value3": 1,
                    "uint_var13": 1,
                    "unsigned_value3": 1,
                    "unsigned_var13": 1,
                    "value13": 1,
                    "value3": 1,
                    "var5": 1,
                    "var_13": 1
                },
                "uVar8": {
                    "divisor": 1,
                    "num": 1,
                    "number": 1,
                    "numeric_value": 1,
                    "temp": 1,
                    "temp_num": 1,
                    "temp_number": 1,
                    "temp_value": 4,
                    "temp_var": 1,
                    "uint_val": 1,
                    "uint_var8": 1,
                    "unsigned_value1": 1,
                    "unsigned_var8": 1,
                    "value": 9,
                    "value1": 1,
                    "value8": 1,
                    "var3": 1
                }
            },
            "called": [
                "FUN_00006010",
                "FUN_00005a58"
            ],
            "calling": [
                "FUN_000057f8"
            ],
            "code": "\ncode * convert_to_hex_string_00005b34(undefined4 param1,uint *input_array,undefined4 param3,code *callback_function,uint **param5\n                   )\n\n{\n  bool is_greater;\n  byte byte_value;\n  int result;\n  code *return_value;\n  char *hex_digits;\n  int loop_counter;\n  char *char_ptr;\n  uint value;\n  uint *ptr;\n  uint base;\n  uint **input2_pointer_pointer;\n  char **string_ptr_ptr;\n  uint length;\n  char *string_ptr;\n  code *local_callback;\n  \n  byte_value = *(byte *)(input_array + 6);\n  char_ptr = (char *)((int)input_array + 0x43);\n  local_callback = callback_function;\n  if (0x78 < byte_value) {\nswitchD_00005b70_caseD_65:\n    *(byte *)((int)input_array + 0x42) = byte_value;\nLAB_00005bdc:\n    char_ptr = (char *)((int)input_array + 0x42);\n    value = 1;\nLAB_00005d28:\n    input_array[4] = value;\n    *(undefined *)((int)input_array + 0x43) = 0;\n    goto LAB_00005c84;\n  }\n  if (byte_value < 99) {\n    if (byte_value == 0) goto LAB_00005d06;\n    if (byte_value == 0x58) {\n      hex_digits = \"0123456789ABCDEF\";\n      *(undefined *)((int)input_array + 0x45) = 0x58;\n      goto LAB_00005ca8;\n    }\n    goto switchD_00005b70_caseD_65;\n  }\n  switch(byte_value) {\n  case 99:\n    value = **param5;\n    *param5 = *param5 + 1;\n    *(char *)((int)input_array + 0x42) = (char)value;\n    goto LAB_00005bdc;\n  case 100:\n  case 0x69:\n    base = *input_array;\n    ptr = *param5;\n    if ((int)(base << 0x18) < 0) {\n      value = *ptr;\n      *param5 = ptr + 1;\n    }\n    else {\n      value = *ptr;\n      *param5 = ptr + 1;\n      if ((base & 0x40) != 0) {\n        value = (uint)(short)value;\n      }\n    }\n    if ((int)value < 0) {\n      value = -value;\n      *(undefined *)((int)input_array + 0x43) = 0x2d;\n    }\n    hex_digits = \"0123456789ABCDEF\";\n    base = 10;\n    goto LAB_00005c36;\n  default:\n    goto switchD_00005b70_caseD_65;\n  case 0x6e:\n    input2_pointer_pointer = (uint **)*param5;\n    base = *input_array;\n    value = input_array[5];\n    *param5 = (uint *)(input2_pointer_pointer + 1);\n    ptr = *input2_pointer_pointer;\n    if (((int)(base << 0x18) < 0) || (-1 < (int)(base << 0x19))) {\n      *ptr = value;\n    }\n    else {\n      *(short *)ptr = (short)value;\n    }\nLAB_00005d06:\n    input_array[4] = 0;\n    goto LAB_00005c84;\n  case 0x6f:\n  case 0x75:\n    ptr = *param5;\n    value = *input_array;\n    *param5 = ptr + 1;\n    if (((int)(value << 0x18) < 0) || (-1 < (int)(value << 0x19))) {\n      value = *ptr;\n    }\n    else {\n      value = (uint)*(ushort *)ptr;\n    }\n    hex_digits = \"0123456789ABCDEF\";\n    if (byte_value == 0x6f) {\n      base = 8;\n    }\n    else {\n      base = 10;\n    }\n    break;\n  case 0x70:\n    *input_array = *input_array | 0x20;\n  case 0x78:\n    hex_digits = \"0123456789abcdef\";\n    *(undefined *)((int)input_array + 0x45) = 0x78;\nLAB_00005ca8:\n    base = *input_array;\n    value = **param5;\n    *param5 = *param5 + 1;\n    if ((-1 < (int)(base << 0x18)) && ((int)(base << 0x19) < 0)) {\n      value = value & 0xffff;\n    }\n    if ((int)(base << 0x1f) < 0) {\n      *input_array = base | 0x20;\n    }\n    if (value == 0) {\n      *input_array = *input_array & 0xffffffdf;\n    }\n    base = 0x10;\n    break;\n  case 0x73:\n    string_ptr_ptr = (char **)*param5;\n    *param5 = (uint *)(string_ptr_ptr + 1);\n    char_ptr = *string_ptr_ptr;\n    result = FUN_00006010(char_ptr,0,input_array[1],string_ptr_ptr,param1,input_array,param3);\n    if (result != 0) {\n      input_array[1] = result - (int)char_ptr;\n    }\n    value = input_array[1];\n    goto LAB_00005d28;\n  }\n  *(undefined *)((int)input_array + 0x43) = 0;\nLAB_00005c36:\n  length = input_array[1];\n  input_array[2] = length;\n  if (-1 < (int)length) {\n    *input_array = *input_array & 0xfffffffb;\n  }\n  string_ptr = char_ptr;\n  if ((value != 0) || (length != 0)) {\n    do {\n      string_ptr = string_ptr + -1;\n      *string_ptr = hex_digits[value - base * (value / base)];\n      is_greater = base <= value;\n      value = value / base;\n    } while (is_greater);\n  }\n  if (((base == 8) && ((int)(*input_array << 0x1f) < 0)) && ((int)input_array[1] <= (int)input_array[4])) {\n    string_ptr[-1] = '0';\n    string_ptr = string_ptr + -1;\n  }\n  input_array[4] = (int)char_ptr - (int)string_ptr;\n  char_ptr = string_ptr;\nLAB_00005c84:\n  result = FUN_00005a58(param1,input_array,&local_callback,param3,callback_function);\n  if ((result == -1) || (result = (*callback_function)(param1,param3,char_ptr,input_array[4]), result == -1)) {\nLAB_00005c98:\n    return_value = (code *)0xffffffff;\n  }\n  else {\n    if ((int)(*input_array << 0x1e) < 0) {\n      for (result = 0; result < (int)(input_array[3] - (int)local_callback); result = result + 1) {\n        loop_counter = (*callback_function)(param1,param3,(int)input_array + 0x19,1);\n        if (loop_counter == -1) goto LAB_00005c98;\n      }\n    }\n    return_value = (code *)input_array[3];\n    if ((int)(code *)input_array[3] < (int)local_callback) {\n      return_value = local_callback;\n    }\n  }\n  return return_value;\n}\n\n",
            "current_name": "convert_to_hex_string_00005b34",
            "entrypoint": "0x00005b34",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00005b34": "convert_to_hex_string_00005b34",
                "bVar1": "is_greater",
                "bVar2": "byte_value",
                "iVar3": "result",
                "iVar6": "loop_counter",
                "local_24": "local_callback",
                "param_1": "param1",
                "param_2": "input_array",
                "param_3": "param3",
                "param_4": "callback_function",
                "param_5": "param5",
                "pcVar14": "string_ptr",
                "pcVar4": "return_value",
                "pcVar5": "hex_digits",
                "pcVar7": "char_ptr",
                "ppcVar12": "string_ptr_ptr",
                "ppuVar11": "input2_pointer_pointer",
                "puVar9": "ptr",
                "uVar10": "base",
                "uVar13": "length",
                "uVar8": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00005e10": {
            "additional_data": {
                "FUNKY_FUNCTION": {
                    "reverse_and_decrement": 1
                },
                "FUN_000042a4": {
                    "initialize": 5,
                    "perform_action": 1,
                    "perform_additional_action": 1
                },
                "FUN_00005e10": {
                    "decode_and_decrement": 1,
                    "decode_and_decrement_byte": 1,
                    "decode_byte": 1,
                    "decode_byte_array": 4,
                    "decode_byte_value": 1,
                    "decode_data": 1,
                    "extract_byte": 3,
                    "extract_byte_from_data": 1,
                    "extract_byte_from_param": 1,
                    "extract_byte_from_param_array": 1,
                    "extract_byte_from_ptr": 1,
                    "extract_byte_value": 1,
                    "extract_value_from_data": 1,
                    "perform_operation": 1,
                    "process_data": 7,
                    "process_input": 3
                },
                "FUN_00006768": {
                    "check_data": 2,
                    "check_param_validity": 1,
                    "validate_data": 2,
                    "validate_input": 1,
                    "verify_data": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "result": 27,
                    "return_value": 2,
                    "status": 1
                },
                "param_1": {
                    "data": 3,
                    "data_address": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_struct": 3,
                    "handle": 1,
                    "input": 6,
                    "input_data": 4,
                    "input_param": 1,
                    "input_ptr": 1,
                    "input_struct_ptr": 1,
                    "input_value": 4,
                    "input_variable": 1,
                    "param_array": 1,
                    "parameter1": 1,
                    "ptr_param1": 1
                },
                "param_2": {
                    "buffer": 3,
                    "byte_arr": 1,
                    "byte_array": 11,
                    "byte_array_ptr": 3,
                    "byte_ptr": 1,
                    "byte_ptr_ptr": 1,
                    "data": 1,
                    "data_buffer": 1,
                    "data_pointer": 2,
                    "decoded_data": 1,
                    "input_buffer": 2,
                    "input_data": 1,
                    "parameter2": 1,
                    "pointer": 1,
                    "ptr_ptr_param2": 1
                },
                "pbVar3": {
                    "byte_pointer": 2,
                    "byte_ptr": 6,
                    "byte_value": 5,
                    "current_byte": 14,
                    "ptr_byte": 1,
                    "temp_byte": 3
                },
                "uVar2": {
                    "byte_value": 1,
                    "decoded_byte": 1,
                    "decoded_value": 4,
                    "extracted_byte": 4,
                    "extracted_value": 2,
                    "output": 2,
                    "output_value": 2,
                    "result": 3,
                    "return_value": 5,
                    "value": 2
                }
            },
            "called": [
                "FUN_00006768",
                "FUN_000042a4"
            ],
            "calling": [
                "FUN_00004418"
            ],
            "code": "\nuint process_data_00005e10(int input,byte **byte_array)\n\n{\n  int result;\n  uint return_value;\n  byte *current_byte;\n  \n  if ((input != 0) && (*(int *)(input + 0x18) == 0)) {\n    FUN_000042a4();\n  }\n  if (byte_array == (byte **)&DAT_000079b8) {\n    byte_array = *(byte ***)(input + 4);\n  }\n  else if (byte_array == (byte **)&DAT_000079d8) {\n    byte_array = *(byte ***)(input + 8);\n  }\n  else if (byte_array == (byte **)&DAT_00007998) {\n    byte_array = *(byte ***)(input + 0xc);\n  }\n  result = FUN_00006768(input,byte_array);\n  if (result == 0) {\n    byte_array[1] = byte_array[1] + -1;\n    current_byte = *byte_array;\n    *byte_array = current_byte + 1;\n    return_value = (uint)*current_byte;\n  }\n  else {\n    return_value = 0xffffffff;\n  }\n  return return_value;\n}\n\n",
            "current_name": "process_data_00005e10",
            "entrypoint": "0x00005e10",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00005e10": "process_data_00005e10",
                "iVar1": "result",
                "param_1": "input",
                "param_2": "byte_array",
                "pbVar3": "current_byte",
                "uVar2": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00005e68": {
            "additional_data": {
                "Elf32_Rel_ARRAY_1fff0200": {
                    "array_var": 1
                },
                "FUN_00005e68": {
                    "decode_and_execute": 1,
                    "decode_and_invoke_function": 1,
                    "decode_function": 1,
                    "decompile_and_improve": 1,
                    "decompiled_code": 1,
                    "extract_and_process_data": 1,
                    "initialize_function": 2,
                    "parse_and_process_data": 2,
                    "process_binary": 3,
                    "process_binary_data": 1,
                    "process_binary_function": 1,
                    "process_data": 1,
                    "process_function": 3,
                    "process_relocation": 1,
                    "process_relocations": 1,
                    "reverse_code": 1
                },
                "FUN_00005ecc": {
                    "format_string": 1
                },
                "FUN_000061cc": {
                    "apply_relocation": 1
                },
                "local_38": {
                    "another_counter": 1,
                    "constant4": 1,
                    "constant_4": 1,
                    "constant_value4": 2,
                    "count2": 1,
                    "counter2": 2,
                    "flag": 1,
                    "index": 1,
                    "index2": 1,
                    "initialized_value2": 1,
                    "initialized_var2": 1,
                    "initialized_variable2": 1,
                    "local_var5": 1,
                    "local_var6": 1,
                    "local_var9": 2,
                    "local_variable2": 1,
                    "local_variable9": 1,
                    "temp5": 1,
                    "var9": 2,
                    "var_9": 1,
                    "variable2": 2,
                    "zero": 2,
                    "zero2": 2,
                    "zero_2": 1
                },
                "local_4c": {
                    "constant3": 1,
                    "constant_3": 1,
                    "constant_value3": 2,
                    "count": 1,
                    "count1": 1,
                    "counter": 5,
                    "index1": 1,
                    "initialized_value1": 1,
                    "initialized_var1": 1,
                    "initialized_variable1": 1,
                    "local_var4": 1,
                    "local_var5": 1,
                    "local_var8": 2,
                    "local_variable": 1,
                    "local_variable8": 1,
                    "var8": 2,
                    "var_8": 1,
                    "variable1": 2,
                    "zero": 5
                },
                "local_5c": {
                    "constant_string": 1,
                    "local_pointer": 1,
                    "local_pointer_1": 1,
                    "local_ptr": 1,
                    "local_var4": 1,
                    "local_var7": 2,
                    "local_variable": 2,
                    "local_variable7": 1,
                    "message": 1,
                    "pointer": 2,
                    "pointer1": 2,
                    "pointer_to_data": 2,
                    "pointer_to_function": 1,
                    "string_data": 1,
                    "string_pointer": 2,
                    "string_ptr": 6,
                    "temp_array": 1,
                    "var7": 2,
                    "var_7": 1
                },
                "local_6c": {
                    "copy_of_result": 1,
                    "decoded_input_copy_two": 1,
                    "decoded_value4": 1,
                    "function_result_copy": 1,
                    "local_result": 2,
                    "local_var3": 1,
                    "local_var6": 2,
                    "local_var8": 1,
                    "local_variable6": 1,
                    "modified_param2_copy": 1,
                    "result_2": 1,
                    "result_copy": 9,
                    "return_value_copy": 1,
                    "section_address_copy": 1,
                    "temp4": 1,
                    "temp_var3": 1,
                    "value4": 1,
                    "var6": 2,
                    "var_6": 1
                },
                "local_70": {
                    "arg_6": 1,
                    "base_address_copy2": 2,
                    "copy_of_param1": 1,
                    "decoded_input_copy": 1,
                    "decoded_param_copy": 1,
                    "decoded_value3": 1,
                    "input1_copy": 1,
                    "input1_copy2": 1,
                    "input_copy": 1,
                    "input_param_copy_2": 1,
                    "input_param_copy_again": 1,
                    "input_ptr_copy": 2,
                    "local_input2": 1,
                    "local_input_param1": 1,
                    "local_var2": 1,
                    "local_var5": 2,
                    "local_variable5": 1,
                    "modified_param1_copy": 1,
                    "modified_value2": 1,
                    "processed_param_copy": 1,
                    "temp3": 1,
                    "temp_var2": 1,
                    "value3": 1,
                    "var5": 2,
                    "var_5": 1
                },
                "local_72": {
                    "constant": 1,
                    "constant2": 5,
                    "constant_2": 2,
                    "constant_index": 1,
                    "constant_value1": 1,
                    "constant_value2": 5,
                    "constant_value_2": 1,
                    "initial_value": 1,
                    "initialized_value3": 1,
                    "local_var4": 2,
                    "local_var7": 1,
                    "local_variable4": 1,
                    "mask": 1,
                    "max_value": 1,
                    "section_index": 1,
                    "value": 1,
                    "var4": 2,
                    "var_4": 1
                },
                "local_74": {
                    "constant": 2,
                    "constant1": 3,
                    "constant_1": 2,
                    "constant_value": 7,
                    "constant_value1": 1,
                    "constant_value2": 1,
                    "constant_value_1": 1,
                    "local_var1": 1,
                    "local_var3": 2,
                    "local_variable3": 1,
                    "number_of_entries": 1,
                    "rela_entry_size": 1,
                    "var3": 2,
                    "var_3": 1
                },
                "local_7c": {
                    "decoded_value2": 1,
                    "function_result": 1,
                    "local_var2": 2,
                    "local_var3": 1,
                    "local_variable2": 1,
                    "modified_param2": 1,
                    "result": 15,
                    "result_1": 1,
                    "result_value": 1,
                    "return_value": 1,
                    "temp2": 1,
                    "temp_var": 1,
                    "value2": 1,
                    "var2": 2,
                    "var_2": 1
                },
                "local_80": {
                    "arg_5": 1,
                    "base_address_copy": 2,
                    "copy_of_param1": 1,
                    "decoded_input": 1,
                    "decoded_param": 1,
                    "decoded_value1": 1,
                    "input1_copy": 1,
                    "input_copy": 1,
                    "input_param2": 1,
                    "input_param_copy": 3,
                    "input_ptr": 2,
                    "local_input1": 1,
                    "local_input_param": 1,
                    "local_var1": 3,
                    "local_var2": 1,
                    "local_variable1": 1,
                    "modified_param1": 1,
                    "modified_value1": 1,
                    "processed_param": 1,
                    "temp1": 1,
                    "value1": 1,
                    "var1": 2,
                    "var_1": 1
                },
                "param_1": {
                    "arg_1": 1,
                    "base_address": 2,
                    "input1": 7,
                    "input_address": 1,
                    "input_data": 1,
                    "input_param": 7,
                    "input_param1": 10,
                    "input_param_1": 1,
                    "input_var1": 1
                },
                "param_2": {
                    "arg_2": 1,
                    "array_size": 1,
                    "buffer": 1,
                    "buffer_param": 1,
                    "data_buffer": 1,
                    "elf_header": 1,
                    "input2": 7,
                    "input_param2": 10,
                    "input_param_2": 1,
                    "input_var2": 1,
                    "output_address": 1,
                    "output_param": 3,
                    "relocation_table": 1,
                    "secondary_param": 1
                },
                "param_3": {
                    "arg_3": 1,
                    "data_address": 1,
                    "data_param": 1,
                    "extra_param": 1,
                    "input3": 7,
                    "input_param2": 1,
                    "input_param3": 10,
                    "input_param_3": 1,
                    "input_var3": 1,
                    "param_3": 1,
                    "pointer1": 1,
                    "relocation_table": 1,
                    "section_address": 1,
                    "string_param": 1,
                    "temp_param": 1,
                    "third_param": 1
                },
                "param_4": {
                    "additional_param": 1,
                    "arg_4": 1,
                    "fourth_param": 1,
                    "input4": 7,
                    "input_param3": 1,
                    "input_param4": 10,
                    "input_param_4": 1,
                    "input_var4": 1,
                    "integer_array": 1,
                    "param_4": 1,
                    "pointer2": 1,
                    "pointer_param": 1,
                    "relocation_table_end": 1,
                    "stack_address": 1,
                    "symbol_table": 1,
                    "temp_param2": 1
                },
                "uStack_4": {
                    "arg_8": 1,
                    "fourth_param_copy": 1,
                    "input4_copy": 1,
                    "integer_array_copy": 1,
                    "local_input4": 1,
                    "local_input_param4": 1,
                    "local_var11": 1,
                    "local_variable11": 1,
                    "local_variable2": 1,
                    "modified_value4": 1,
                    "param4_copy": 1,
                    "stack_var2": 1,
                    "stack_variable2": 1,
                    "symbol_data": 1,
                    "temp_var5": 1,
                    "var11": 2,
                    "var_11": 1,
                    "variable4": 1
                },
                "uStack_8": {
                    "arg_7": 1,
                    "input3_copy": 1,
                    "local_input3": 1,
                    "local_input_param3": 1,
                    "local_var10": 1,
                    "local_variable1": 1,
                    "local_variable10": 1,
                    "modified_value3": 1,
                    "param3_copy": 1,
                    "relocation_data": 1,
                    "stack_var1": 1,
                    "stack_variable1": 1,
                    "string_param_copy": 1,
                    "temp_var4": 1,
                    "third_param_copy": 1,
                    "var10": 2,
                    "var_10": 1,
                    "variable3": 1
                }
            },
            "called": [
                "FUN_000061cc",
                "FUN_00005ecc"
            ],
            "calling": [
                "FUN_00005100"
            ],
            "code": "\nvoid process_binary_data_00005e68(undefined4 input_param1,undefined4 input_param2,undefined4 input_param3,undefined4 input_param4)\n\n{\n  undefined4 local_var1;\n  undefined4 result;\n  undefined2 constant_value;\n  undefined2 constant2;\n  undefined4 var5;\n  undefined4 result_copy;\n  undefined *string_ptr;\n  undefined4 counter;\n  undefined4 variable2;\n  undefined4 var10;\n  undefined4 var11;\n  \n  constant_value = 0x204;\n  local_var1 = input_param1;\n  var5 = input_param1;\n  var10 = input_param3;\n  var11 = input_param4;\n  result = FUN_00005ecc();\n  string_ptr = &LAB_00004dea_1;\n  counter = 0;\n  variable2 = 0;\n  constant2 = 0xffff;\n  result_copy = result;\n  FUN_000061cc(array_var[16].r_offset,&local_var1,input_param2,&var10);\n  return;\n}\n\n",
            "current_name": "process_binary_data_00005e68",
            "entrypoint": "0x00005e68",
            "imported": false,
            "improved": true,
            "renaming": {
                "Elf32_Rel_ARRAY_1fff0200": "array_var",
                "FUN_00005e68": "process_binary_data_00005e68",
                "local_38": "variable2",
                "local_4c": "counter",
                "local_5c": "string_ptr",
                "local_6c": "result_copy",
                "local_70": "var5",
                "local_72": "constant2",
                "local_74": "constant_value",
                "local_7c": "result",
                "local_80": "local_var1",
                "param_1": "input_param1",
                "param_2": "input_param2",
                "param_3": "input_param3",
                "param_4": "input_param4",
                "uStack_4": "var11",
                "uStack_8": "var10"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00005ebc": {
            "additional_data": {
                "FUN_00005ebc": {
                    "copy_string": 31
                },
                "cVar1": {
                    "character": 3,
                    "current_char": 21,
                    "current_character": 5
                },
                "param_1": {
                    "dest": 3,
                    "dest_str": 1,
                    "destination": 26,
                    "target": 1
                },
                "param_2": {
                    "input": 1,
                    "source": 26,
                    "src": 3,
                    "src_str": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00005100"
            ],
            "code": "\nvoid copy_string_00005ebc(char *destination,char *source)\n\n{\n  char current_char;\n  \n  do {\n    current_char = *source;\n    *destination = current_char;\n    source = source + 1;\n    destination = destination + 1;\n  } while (current_char != '\\0');\n  return;\n}\n\n",
            "current_name": "copy_string_00005ebc",
            "entrypoint": "0x00005ebc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00005ebc": "copy_string_00005ebc",
                "cVar1": "current_char",
                "param_1": "destination",
                "param_2": "source"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00005ecc": {
            "additional_data": {
                "FUN_00005ecc": {
                    "calculate_string_length": 1,
                    "compute_string_length": 1,
                    "count_characters": 1,
                    "find_end_of_string": 9,
                    "find_last_character": 1,
                    "find_last_character_in_string": 1,
                    "find_null_terminated_string": 1,
                    "find_string_end": 1,
                    "find_string_length": 5,
                    "get_last_character_position": 1,
                    "get_length": 1,
                    "get_string_length": 3,
                    "reverse_string": 3,
                    "string_length": 2
                },
                "cVar1": {
                    "char": 1,
                    "current_char": 19,
                    "current_character": 8,
                    "current_character_value": 1
                },
                "param_1": {
                    "input_str": 1,
                    "input_string": 18,
                    "str": 8,
                    "string": 4
                },
                "pcVar1": {
                    "current_char": 2
                },
                "pcVar2": {
                    "next_char": 15,
                    "next_char_pointer": 4,
                    "next_char_position": 1,
                    "next_char_ptr": 4,
                    "next_character": 6,
                    "next_pointer": 1
                },
                "pcVar3": {
                    "current_char": 9,
                    "current_char_pointer": 3,
                    "current_char_position": 1,
                    "current_char_ptr": 3,
                    "current_character": 2,
                    "current_pointer": 1,
                    "current_pos": 1,
                    "current_position": 3,
                    "current_ptr": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_00005e68",
                "FUN_00005100"
            ],
            "code": "\nchar * find_end_of_string_00005ecc(char *input_string)\n\n{\n  char current_char;\n  char *next_char;\n  char *current_char;\n  \n  current_char = input_string;\n  do {\n    next_char = current_char + 1;\n    current_char = *current_char;\n    current_char = next_char;\n  } while (current_char != '\\0');\n  return next_char + (-1 - (int)input_string);\n}\n\n",
            "current_name": "find_end_of_string_00005ecc",
            "entrypoint": "0x00005ecc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00005ecc": "find_end_of_string_00005ecc",
                "cVar1": "current_char",
                "param_1": "input_string",
                "pcVar2": "next_char",
                "pcVar3": "current_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00005edc": {
            "additional_data": {
                "FUN_00005edc": {
                    "convert_number_to_string": 1,
                    "convert_string_to_int": 1,
                    "convert_string_to_integer": 1,
                    "convert_string_to_number": 8,
                    "convert_to_unsigned": 1,
                    "parse_integer": 9,
                    "parse_integer_from_byte_array": 1,
                    "parse_integer_with_base": 1,
                    "parse_number": 6,
                    "parse_number_from_string": 1,
                    "parse_numeric_string": 1
                },
                "bVar3": {
                    "is_negative": 18,
                    "negate_value": 1,
                    "negative": 8,
                    "negative_flag": 4
                },
                "iVar4": {
                    "conversion_status": 2,
                    "error": 1,
                    "error_code": 1,
                    "error_flag": 2,
                    "is_valid": 5,
                    "iteration_flag": 1,
                    "parse_error": 1,
                    "parse_result": 1,
                    "result_code": 1,
                    "return_code": 1,
                    "status": 15
                },
                "param_1": {
                    "error_code": 3,
                    "number_pointer": 1,
                    "output": 5,
                    "output_value": 1,
                    "result": 21
                },
                "param_2": {
                    "byte_array": 1,
                    "input": 12,
                    "input_string": 13,
                    "str": 2,
                    "string": 3
                },
                "param_3": {
                    "end_ptr": 1,
                    "endptr": 1,
                    "next": 1,
                    "next_byte_ptr": 1,
                    "next_char": 2,
                    "next_input": 2,
                    "next_str_ptr": 1,
                    "next_token": 1,
                    "output": 1,
                    "remainder": 1,
                    "remaining": 5,
                    "remaining_bytes": 1,
                    "remaining_input": 2,
                    "remaining_string": 10,
                    "rest_of_input": 1
                },
                "param_4": {
                    "base": 28,
                    "number_base": 1,
                    "radix": 2
                },
                "pbVar7": {
                    "byte_ptr": 1,
                    "current": 2,
                    "current_byte": 9,
                    "current_char": 2,
                    "current_char_pointer": 2,
                    "current_char_ptr": 2,
                    "current_input": 1,
                    "current_pointer": 1,
                    "current_ptr": 6,
                    "current_string_position": 1,
                    "input_ptr": 1,
                    "ptr": 1
                },
                "pbVar8": {
                    "next": 2,
                    "next_byte": 9,
                    "next_byte_ptr_temp": 1,
                    "next_char": 2,
                    "next_char_pointer": 2,
                    "next_char_ptr": 2,
                    "next_input": 1,
                    "next_pointer": 1,
                    "next_ptr": 7,
                    "next_string_position": 1,
                    "ptr_next": 1
                },
                "uVar1": {
                    "converted_number": 4,
                    "converted_value": 2,
                    "number": 3,
                    "parsed_integer": 1,
                    "parsed_number": 4,
                    "parsed_value": 7,
                    "result": 9,
                    "value": 1
                },
                "uVar2": {
                    "ch": 3,
                    "current_byte": 1,
                    "current_char": 27
                },
                "uVar5": {
                    "character_value": 1,
                    "current_value": 1,
                    "digit": 9,
                    "digit_value": 20
                },
                "uVar6": {
                    "divider": 1,
                    "divisor": 1,
                    "max_digit": 1,
                    "max_digit_value": 3,
                    "max_div": 2,
                    "max_divisor": 2,
                    "max_quotient": 2,
                    "max_value": 18,
                    "max_value_div_base": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00005fd8"
            ],
            "code": "\nuint parse_integer_from_byte_array_00005edc(undefined4 *result,byte *input_string,byte **remaining_string,uint base)\n\n{\n  uint result;\n  uint current_char;\n  byte is_negative;\n  int status;\n  uint digit_value;\n  uint max_value;\n  byte *current_byte;\n  byte *next_byte;\n  \n  next_byte = input_string;\n  do {\n    current_byte = next_byte;\n    next_byte = current_byte + 1;\n    current_char = (uint)*current_byte;\n    is_negative = (&DAT_00007a99)[current_char] & 8;\n  } while (((&DAT_00007a99)[current_char] & 8) != 0);\n  if (current_char == 0x2d) {\n    current_char = (uint)*next_byte;\n    is_negative = 1;\n    next_byte = current_byte + 2;\n  }\n  else if (current_char == 0x2b) {\n    current_char = (uint)*next_byte;\n    next_byte = current_byte + 2;\n  }\n  if (base == 0) {\n    if (current_char != 0x30) {\n      base = 10;\n      goto LAB_00005f26;\n    }\n  }\n  else if ((base != 0x10) || (current_char != 0x30)) goto LAB_00005f26;\n  if ((*next_byte & 0xdf) == 0x58) {\n    current_char = (uint)next_byte[1];\n    base = 0x10;\n    next_byte = next_byte + 2;\n  }\n  else {\n    current_char = 0x30;\n    if (base == 0) {\n      base = 8;\n    }\n  }\nLAB_00005f26:\n  status = 0;\n  max_value = 0xffffffff / base;\n  result = 0;\n  do {\n    digit_value = current_char - 0x30;\n    if (9 < digit_value) {\n      if (current_char - 0x41 < 0x1a) {\n        digit_value = current_char - 0x37;\n      }\n      else {\n        if (0x19 < current_char - 0x61) break;\n        digit_value = current_char - 0x57;\n      }\n    }\n    if ((int)base <= (int)digit_value) break;\n    if (((status < 0) || (max_value < result)) ||\n       ((max_value == result && ((int)~(base * max_value) < (int)digit_value)))) {\n      status = -1;\n    }\n    else {\n      result = result * base + digit_value;\n      status = 1;\n    }\n    current_char = (uint)*next_byte;\n    next_byte = next_byte + 1;\n  } while( true );\n  if (status < 0) {\n    *result = 0x22;\n    result = 0xffffffff;\n    if (remaining_string == (byte **)0x0) {\n      return 0xffffffff;\n    }\n  }\n  else {\n    if (is_negative != 0) {\n      result = -result;\n    }\n    if (remaining_string == (byte **)0x0) {\n      return result;\n    }\n    if (status == 0) goto LAB_00005fb8;\n  }\n  input_string = next_byte + -1;\nLAB_00005fb8:\n  *remaining_string = input_string;\n  return result;\n}\n\n",
            "current_name": "parse_integer_from_byte_array_00005edc",
            "entrypoint": "0x00005edc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00005edc": "parse_integer_from_byte_array_00005edc",
                "bVar3": "is_negative",
                "iVar4": "status",
                "param_1": "result",
                "param_2": "input_string",
                "param_3": "remaining_string",
                "param_4": "base",
                "pbVar7": "current_byte",
                "pbVar8": "next_byte",
                "uVar1": "result",
                "uVar2": "current_char",
                "uVar5": "digit_value",
                "uVar6": "max_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00005fd8": {
            "additional_data": {
                "Elf32_Rel_ARRAY_1fff0200": {
                    "relocation_array": 2,
                    "relocation_table": 2
                },
                "FUN_00005edc": {
                    "apply_relocation": 10,
                    "apply_relocations": 1,
                    "handle_relocation": 1,
                    "perform_relocation": 6,
                    "process_entry": 1,
                    "process_rel_array": 1,
                    "process_rel_array_entry": 1,
                    "process_rel_entry": 1,
                    "process_relocation": 2,
                    "relocate_function": 1,
                    "subfunction": 1
                },
                "FUN_00005fd8": {
                    "call_rel_function": 1,
                    "call_relocated_function": 1,
                    "call_subfunction": 1,
                    "execute_elf32_rel": 1,
                    "execute_rel_array": 1,
                    "execute_relocation": 6,
                    "execute_relocation_function": 1,
                    "perform_relocation": 1,
                    "process_elf32_rel": 3,
                    "process_elf32_rel_entry": 3,
                    "process_elf_rel_array": 1,
                    "process_elf_relocation": 1,
                    "process_elf_relocations": 1,
                    "process_relocation": 4,
                    "process_relocation_entry": 3,
                    "process_relocation_function": 1,
                    "process_relocations": 1
                },
                "param_1": {
                    "array_offset": 1,
                    "elf_relocation_array": 1,
                    "entry": 1,
                    "entry_param_1": 1,
                    "offset": 2,
                    "offset_array": 1,
                    "offset_pointer": 1,
                    "offsets": 1,
                    "ptr_to_reloc": 1,
                    "rel_array": 1,
                    "rel_array_entry": 1,
                    "rel_entry": 1,
                    "rel_entry_offset": 1,
                    "rel_entry_ptr": 1,
                    "rel_offset": 1,
                    "reloc_entry": 1,
                    "relocation": 2,
                    "relocation_array": 5,
                    "relocation_entry": 2,
                    "relocation_offset": 1,
                    "relocation_ptr": 2,
                    "relocation_table": 2
                },
                "param_2": {
                    "byte_arr1": 1,
                    "byte_array": 11,
                    "byte_array_1": 1,
                    "byte_code": 2,
                    "byte_data": 4,
                    "byte_pointer": 1,
                    "byte_ptr": 2,
                    "data": 2,
                    "data_pointer": 1,
                    "entry_param_2": 1,
                    "input_buffer": 1,
                    "input_byte": 1,
                    "input_byte_array": 1,
                    "param_2": 1,
                    "source_data": 1
                },
                "param_3": {
                    "byte_arr2": 1,
                    "byte_array_2": 1,
                    "byte_array_ptr": 1,
                    "byte_code_ptr": 1,
                    "byte_pointer": 6,
                    "byte_pointer_array": 4,
                    "byte_pointer_pointer": 1,
                    "byte_ptr_array": 1,
                    "byte_ptr_ptr": 2,
                    "byteptr_ptr": 1,
                    "data_ptr": 1,
                    "entry_param_3": 1,
                    "output_buffer": 1,
                    "output_byte": 1,
                    "output_pointer": 1,
                    "param_3": 1,
                    "pointer": 1,
                    "pointer_array": 1,
                    "pointer_to_byte_data": 1,
                    "ptr_data": 1,
                    "ptr_to_byte_array": 1,
                    "target_pointer": 1
                },
                "param_4": {
                    "array_length": 2,
                    "array_size": 2,
                    "buffer_size": 1,
                    "byte_count": 1,
                    "count": 4,
                    "entry_param_4": 1,
                    "input_size": 1,
                    "length": 1,
                    "num_bytes": 1,
                    "num_elements": 1,
                    "size": 9,
                    "uint_param": 1
                },
                "r_offset": {
                    "relocation_offset": 1
                }
            },
            "called": [
                "FUN_00005edc"
            ],
            "calling": [
                "FUN_00005100"
            ],
            "code": "\nvoid process_elf32_rel_entry_00005fd8(undefined4 relocation_array,undefined4 byte_array,undefined4 byte_pointer)\n\n{\n  FUN_00005edc(relocation_table[16].relocation_offset,relocation_array,byte_array,byte_pointer);\n  return;\n}\n\n",
            "current_name": "process_elf32_rel_entry_00005fd8",
            "entrypoint": "0x00005fd8",
            "imported": false,
            "improved": true,
            "renaming": {
                "Elf32_Rel_ARRAY_1fff0200": "relocation_table",
                "FUN_00005fd8": "process_elf32_rel_entry_00005fd8",
                "param_1": "relocation_array",
                "param_2": "byte_array",
                "param_3": "byte_pointer",
                "r_offset": "relocation_offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00005fec": {
            "additional_data": {
                "0x1fff0de6": {
                    "data_to_process": 1,
                    "parameter1": 1
                },
                "FUNC_000045e8": {
                    "call_sub_function": 1,
                    "configure_device": 5,
                    "configure_hardware": 1,
                    "configure_peripheral": 1,
                    "execute_subtask": 1,
                    "perform_action": 1,
                    "perform_startup_tasks": 1,
                    "process_data": 1,
                    "set_configuration": 1,
                    "set_device_configuration": 1,
                    "set_memory_address": 4,
                    "set_memory_value": 6,
                    "set_sensor_state": 1,
                    "set_system_parameter": 1,
                    "sub_function": 1,
                    "write_data_to_memory": 2,
                    "write_memory": 1,
                    "write_to_memory": 1
                },
                "FUN_00005fec": {
                    "call_function_with_parameter": 1,
                    "call_sub_function_with_parameter": 1,
                    "execute_predefined_task": 1,
                    "initialize_device": 5,
                    "initialize_hardware": 2,
                    "initialize_memory": 13,
                    "initialize_sensor": 1,
                    "initialize_something": 1,
                    "initialize_system": 5,
                    "read_data_from_memory": 1
                }
            },
            "called": [
                "FUN_000045e8"
            ],
            "calling": [
                "FUN_0000562c"
            ],
            "code": "\nvoid initialize_memory_00005fec(void)\n\n{\n  FUNC_000045e8(0x1fff0de6);\n  return;\n}\n\n",
            "current_name": "initialize_memory_00005fec",
            "entrypoint": "0x00005fec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00005fec": "initialize_memory_00005fec"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00005ff8": {
            "additional_data": {
                "0x1fff0de6": {
                    "extracted_data": 1,
                    "initialization_parameter": 2,
                    "sub_function_parameter": 1
                },
                "FUNC_000045ec": {
                    "call_sub_function": 2,
                    "call_subfunction": 3,
                    "configure_device": 3,
                    "configure_operating_mode": 1,
                    "configure_peripheral": 1,
                    "execute_function": 1,
                    "execute_initialization": 1,
                    "execute_system_command": 1,
                    "function_call": 1,
                    "invoke_sub_function": 1,
                    "perform_initialization": 2,
                    "perform_memory_operation": 1,
                    "perform_operation": 2,
                    "perform_system_initialization": 1,
                    "process_data": 3,
                    "process_extraction": 1,
                    "send_command": 1,
                    "set_data": 1,
                    "set_default_value": 1,
                    "set_memory_address": 1,
                    "set_memory_value": 1
                },
                "FUN_00005ff8": {
                    "execute_function": 4,
                    "execute_function_1": 1,
                    "execute_initial_function": 1,
                    "execute_initialization": 1,
                    "extract_and_process_data": 1,
                    "initialize_configuration": 1,
                    "initialize_data": 5,
                    "initialize_default_settings": 1,
                    "initialize_device": 3,
                    "initialize_hardware": 1,
                    "initialize_memory": 6,
                    "initialize_system": 4,
                    "initiate_process": 1
                }
            },
            "called": [
                "FUN_000045ec"
            ],
            "calling": [
                "FUN_0000562c"
            ],
            "code": "\nvoid initialize_memory_00005ff8(void)\n\n{\n  FUNC_000045ec(0x1fff0de6);\n  return;\n}\n\n",
            "current_name": "initialize_memory_00005ff8",
            "entrypoint": "0x00005ff8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00005ff8": "initialize_memory_00005ff8"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00006010": {
            "additional_data": {
                "FUN_00006010": {
                    "decode_bytes": 1,
                    "find_byte": 1,
                    "find_byte_in_buffer": 2,
                    "find_byte_pattern": 2,
                    "find_byte_sequence": 15,
                    "find_next_byte": 1,
                    "find_next_occurrence": 1,
                    "find_occurrence_in_buffer": 1,
                    "find_pattern": 1,
                    "find_substring": 1,
                    "reverse_byte_sequence": 1,
                    "reverse_lookup_byte": 1,
                    "search_byte": 1
                },
                "bVar1": {
                    "byte_val": 1,
                    "byte_value": 4,
                    "current_byte": 22
                },
                "bVar13": {
                    "bit_0_nonzero": 1,
                    "bit_0_set": 1,
                    "bool1": 1,
                    "byte0_xor_nonzero": 1,
                    "byte_1_not_zero": 1,
                    "byte_result": 1,
                    "is_byte_nonzero": 3,
                    "is_first_byte_non_zero": 1,
                    "is_high_byte_nonzero": 1,
                    "is_non_zero0": 1,
                    "is_nonzero_1": 2,
                    "is_nonzero_bit0_u_var12": 1,
                    "is_nonzero_byte_1": 1,
                    "is_nonzero_lower_byte": 1,
                    "is_null_5": 1,
                    "is_second_lsb_set": 1,
                    "is_xor_result_2_byte_zero": 1,
                    "is_xored_byte_not_zero": 1,
                    "temp_check_1": 1,
                    "word_check_1": 1
                },
                "bVar14": {
                    "bit_8_nonzero": 1,
                    "bit_8_set": 1,
                    "bool2": 1,
                    "byte1_xor_nonzero": 1,
                    "byte_2_not_zero": 1,
                    "byte_result_shifted_8": 1,
                    "is_byte6_zero": 1,
                    "is_byte_nonzero": 1,
                    "is_byte_nonzero_1": 1,
                    "is_byte_nonzero_upper8": 1,
                    "is_non_zero8": 1,
                    "is_nonzero_2": 2,
                    "is_nonzero_bit8_u_var12": 1,
                    "is_nonzero_byte_2": 1,
                    "is_nonzero_lower_2bytes": 1,
                    "is_null_6": 1,
                    "is_second_byte_non_zero": 1,
                    "is_second_high_byte_nonzero": 1,
                    "is_third_lsb_set": 1,
                    "is_xor_result_2_shifted_8_zero": 1,
                    "is_xored_byte_shifted_8_not_zero": 1,
                    "temp_check_2": 1,
                    "word_check_2": 1
                },
                "bVar15": {
                    "bit_16_nonzero": 1,
                    "bit_16_set": 1,
                    "bool3": 1,
                    "byte2_xor_nonzero": 1,
                    "byte_3_not_zero": 1,
                    "byte_result_shifted_16": 1,
                    "is_byte5_zero": 1,
                    "is_byte_nonzero": 1,
                    "is_byte_nonzero_2": 1,
                    "is_byte_nonzero_upper16": 1,
                    "is_fourth_lsb_set": 1,
                    "is_non_zero16": 1,
                    "is_nonzero_3": 2,
                    "is_nonzero_bit16_u_var12": 1,
                    "is_nonzero_byte_3": 1,
                    "is_nonzero_lower_3bytes": 1,
                    "is_null_7": 1,
                    "is_third_byte_non_zero": 1,
                    "is_third_high_byte_nonzero": 1,
                    "is_xor_result_2_shifted_16_zero": 1,
                    "is_xored_byte_shifted_16_not_zero": 1,
                    "temp_check_3": 1,
                    "word_check_3": 1
                },
                "bVar16": {
                    "bit_24_nonzero": 1,
                    "bit_24_set": 1,
                    "bool4": 1,
                    "byte3_xor_nonzero": 1,
                    "byte_4_not_zero": 1,
                    "byte_result_shifted_24": 1,
                    "is_byte4_zero": 1,
                    "is_byte_nonzero": 1,
                    "is_byte_nonzero_3": 1,
                    "is_byte_nonzero_upper24": 1,
                    "is_fourth_byte_non_zero": 1,
                    "is_fourth_high_byte_nonzero": 1,
                    "is_msb_set": 1,
                    "is_non_zero24": 1,
                    "is_nonzero_4": 2,
                    "is_nonzero_bit24_u_var12": 1,
                    "is_nonzero_byte_4": 1,
                    "is_nonzero_lower_4bytes": 1,
                    "is_null_8": 1,
                    "is_xor_result_2_shifted_24_zero": 1,
                    "is_xored_byte_shifted_24_not_zero": 1,
                    "temp_check_4": 1,
                    "word_check_4": 1
                },
                "bVar17": {
                    "bit_0_set_or_not": 1,
                    "result_nonzero": 1
                },
                "bVar18": {
                    "bit_1_to_15_set_or_not": 1
                },
                "bVar19": {
                    "bit_17_to_23_set_or_not": 1
                },
                "bVar20": {
                    "bit_25_to_31_set_or_not": 1
                },
                "cVar2": {
                    "bit1": 1,
                    "bit_0": 2,
                    "bit_0_set": 1,
                    "byte0_is_zero": 1,
                    "byte_0": 1,
                    "byte_check_1": 1,
                    "byte_not_zero": 1,
                    "check_condition_1": 1,
                    "flag_1": 1,
                    "is_byte0_zero": 1,
                    "is_byte_zero": 5,
                    "is_current_byte_zero": 2,
                    "is_first_byte_match": 1,
                    "is_lsb_zero": 1,
                    "is_null_1": 1,
                    "is_zero": 2,
                    "is_zero0": 1,
                    "is_zero_1": 1,
                    "is_zero_bit0_u_var11": 1,
                    "is_zero_bits_0": 1
                },
                "cVar3": {
                    "bit2": 1,
                    "bit_8": 2,
                    "bit_8_set": 1,
                    "byte1_is_zero": 1,
                    "byte_1": 1,
                    "byte_check_2": 1,
                    "byte_shifted_8": 1,
                    "check_condition_2": 1,
                    "flag_2": 1,
                    "is_byte1_zero": 1,
                    "is_byte_zero": 1,
                    "is_byte_zero_1": 1,
                    "is_byte_zero_shifted_8": 1,
                    "is_byte_zero_upper8": 1,
                    "is_current_byte_shifted_8_zero": 1,
                    "is_current_byte_zero_shifted_8": 1,
                    "is_high_byte_zero": 1,
                    "is_null_2": 1,
                    "is_second_byte_match": 1,
                    "is_second_lsb_zero": 1,
                    "is_zero": 1,
                    "is_zero8": 1,
                    "is_zero_2": 1,
                    "is_zero_bit8_u_var11": 1,
                    "is_zero_bits_8": 1,
                    "is_zero_high_byte": 1
                },
                "cVar4": {
                    "bit3": 1,
                    "bit_16": 2,
                    "bit_16_set": 1,
                    "byte2_is_zero": 1,
                    "byte_2": 1,
                    "byte_check_3": 1,
                    "byte_shifted_16": 1,
                    "check_condition_3": 1,
                    "flag_3": 1,
                    "is_byte2_zero": 1,
                    "is_byte_zero": 1,
                    "is_byte_zero_2": 1,
                    "is_byte_zero_shifted_16": 1,
                    "is_byte_zero_upper16": 1,
                    "is_current_byte_shifted_16_zero": 1,
                    "is_current_byte_zero_shifted_16": 1,
                    "is_null_3": 1,
                    "is_second_high_byte_zero": 1,
                    "is_third_byte_match": 1,
                    "is_third_lsb_zero": 1,
                    "is_zero": 1,
                    "is_zero16": 1,
                    "is_zero_3": 1,
                    "is_zero_bit16_u_var11": 1,
                    "is_zero_bits_16": 1,
                    "is_zero_high_2bytes": 1
                },
                "cVar5": {
                    "bit4": 1,
                    "bit_24": 2,
                    "bit_24_set": 1,
                    "byte3_is_zero": 1,
                    "byte_3": 1,
                    "byte_check_4": 1,
                    "byte_shifted_24": 1,
                    "check_condition_4": 1,
                    "flag_4": 1,
                    "is_byte3_zero": 1,
                    "is_byte_zero": 1,
                    "is_byte_zero_3": 1,
                    "is_byte_zero_shifted_24": 1,
                    "is_byte_zero_upper24": 1,
                    "is_current_byte_shifted_24_zero": 1,
                    "is_current_byte_zero_shifted_24": 1,
                    "is_fourth_byte_match": 1,
                    "is_msb_zero": 1,
                    "is_null_4": 1,
                    "is_third_high_byte_zero": 1,
                    "is_zero": 1,
                    "is_zero24": 1,
                    "is_zero_4": 1,
                    "is_zero_bit24_u_var11": 1,
                    "is_zero_bits_24": 1,
                    "is_zero_high_3bytes": 1
                },
                "param_1": {
                    "array": 2,
                    "buffer": 5,
                    "byte_array": 1,
                    "data": 12,
                    "data_ptr": 2,
                    "input_array": 4,
                    "input_buffer": 2,
                    "source": 1
                },
                "param_2": {
                    "byte_to_find": 8,
                    "byte_value": 1,
                    "pattern": 2,
                    "pattern_byte": 1,
                    "search_byte": 2,
                    "target": 4,
                    "target_byte": 11
                },
                "param_3": {
                    "array_length": 6,
                    "buffer_length": 1,
                    "buffer_size": 4,
                    "data_length": 4,
                    "data_size": 2,
                    "length": 10,
                    "size": 2
                },
                "pbVar6": {
                    "byte_pointer": 1,
                    "byte_ptr": 1,
                    "current_byte": 1,
                    "current_ptr": 1,
                    "next_byte": 6,
                    "next_byte_pointer": 2,
                    "next_byte_ptr": 5,
                    "result": 8,
                    "result_pointer": 1,
                    "result_ptr": 1,
                    "updated_pointer": 1
                },
                "pbVar8": {
                    "found_byte": 1,
                    "found_pattern_pointer": 1,
                    "found_ptr": 1,
                    "next_byte": 1,
                    "next_data_ptr": 1,
                    "next_ptr": 2,
                    "next_result": 1,
                    "occurrence": 1,
                    "output": 1,
                    "result": 4,
                    "result_byte": 1,
                    "result_byte_ptr": 1,
                    "result_pointer": 3,
                    "result_ptr": 7,
                    "temp_result": 2
                },
                "puVar7": {
                    "array_pointer": 1,
                    "buffer_ptr": 1,
                    "current_byte_ptr": 1,
                    "current_data_ptr": 1,
                    "current_index": 1,
                    "current_ptr": 4,
                    "current_source": 1,
                    "current_uint_pointer": 1,
                    "current_uint_ptr": 1,
                    "current_word_pointer": 1,
                    "data_ptr": 3,
                    "next_data": 1,
                    "next_uint": 3,
                    "next_uint_ptr": 1,
                    "next_word": 2,
                    "p": 1,
                    "ptr": 1,
                    "ptr_data": 1,
                    "uint_pointer": 1,
                    "updated_array_pointer": 1
                },
                "uVar10": {
                    "adjusted_length": 1,
                    "aligned_array_length": 1,
                    "aligned_buffer_size": 1,
                    "aligned_data_size": 1,
                    "aligned_length": 6,
                    "aligned_size": 3,
                    "array_length_aligned": 1,
                    "blocks_of_8": 1,
                    "buffer_length": 1,
                    "buffer_length_remaining": 1,
                    "buffer_size_aligned": 1,
                    "data_length_aligned": 2,
                    "length_aligned": 2,
                    "length_multiple_of_8": 2,
                    "length_remainder": 2,
                    "processed_size": 1,
                    "remaining_size": 1
                },
                "uVar11": {
                    "buffer_value": 1,
                    "byte_xor": 1,
                    "check_1": 1,
                    "comparison_result": 1,
                    "current_data_xor": 1,
                    "result1": 1,
                    "temp_1": 1,
                    "temp_var1": 1,
                    "temp_var_1": 1,
                    "transformed_byte1": 1,
                    "uint_xor_result": 1,
                    "value1": 1,
                    "value_1": 1,
                    "xor1_result": 1,
                    "xor_result": 3,
                    "xor_result1": 1,
                    "xor_result_1": 5,
                    "xor_result_bitwise": 1,
                    "xor_result_u_var11": 1,
                    "xored_byte": 1,
                    "xored_data": 1,
                    "xored_value_1": 1
                },
                "uVar12": {
                    "buffer_xor": 1,
                    "check_2": 1,
                    "comparison_result_modified": 1,
                    "next_data_xor": 1,
                    "processed_xor": 1,
                    "result2": 1,
                    "second_xor_result": 1,
                    "temp_2": 1,
                    "temp_result": 1,
                    "temp_var2": 1,
                    "temp_var_2": 1,
                    "transformed_byte2": 1,
                    "value2": 1,
                    "value_2": 1,
                    "word_xor": 1,
                    "xor2_result": 1,
                    "xor_result2": 1,
                    "xor_result_2": 5,
                    "xor_result_logical": 1,
                    "xor_result_shifted": 1,
                    "xor_result_u_var12": 1,
                    "xored_byte_shifted": 1,
                    "xored_data1": 1,
                    "xored_value_2": 1
                },
                "uVar13": {
                    "bit_result1": 1,
                    "c_flag_1": 1,
                    "is_bit_0_set": 1,
                    "is_byte7_zero": 1,
                    "is_nonzero1": 1,
                    "temp_boolean": 1
                },
                "uVar14": {
                    "bit_result2": 1,
                    "c_flag_2": 1,
                    "is_bit_8_set": 1,
                    "is_nonzero2": 1,
                    "temp_boolean_shifted_8": 1
                },
                "uVar15": {
                    "c_flag_3": 1,
                    "is_bit_16_set": 1,
                    "is_nonzero3": 1,
                    "temp_boolean_shifted_16": 1
                },
                "uVar16": {
                    "c_flag_4": 1,
                    "is_bit_24_set": 1,
                    "is_nonzero4": 1,
                    "temp_boolean_shifted_24": 1
                },
                "uVar9": {
                    "array_alignment": 1,
                    "array_offset": 1,
                    "buffer_alignment_offset": 1,
                    "buffer_offset": 1,
                    "buffer_remainder": 1,
                    "byte_align": 1,
                    "byte_alignment": 1,
                    "byte_offset": 1,
                    "current_byte_offset": 1,
                    "data_align": 1,
                    "data_alignment": 4,
                    "data_ptr_align": 1,
                    "input_buffer_align": 1,
                    "offset": 2,
                    "pointer_alignment": 1,
                    "ptr_alignment": 1,
                    "ptr_modulus": 1,
                    "ptr_offset": 1,
                    "remainder": 3,
                    "remaining_bits": 1,
                    "source_offset": 1,
                    "word_offset": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_000061cc",
                "FUN_00005b34",
                "FUN_000057f8",
                "FUN_0000656c"
            ],
            "code": "\nbyte * find_byte_sequence_00006010(uint *data,uint target_byte,uint length)\n\n{\n  byte current_byte;\n  char is_byte_zero;\n  char bit_8;\n  char bit_16;\n  char bit_24;\n  byte *result;\n  uint *current_ptr;\n  byte *result_ptr;\n  uint data_alignment;\n  uint aligned_length;\n  uint xor_result_1;\n  uint xor_result_2;\n  bool is_byte_nonzero;\n  bool is_nonzero_2;\n  bool is_nonzero_3;\n  bool is_nonzero_4;\n  \n  target_byte = target_byte & 0xff;\n  if ((int)length < 0x10) {\njoined_r0x00006070:\n    do {\n      if (length == 0) {\n        return (byte *)0x0;\n      }\n      current_ptr = (uint *)((int)data + 1);\n      current_byte = *(byte *)data;\n      length = length - 1;\n      data = current_ptr;\n    } while (current_byte != target_byte);\n  }\n  else {\n    data_alignment = (uint)data & 7;\n    while( true ) {\n      if (data_alignment == 0) {\n        data_alignment = target_byte | target_byte << 8;\n        data_alignment = data_alignment | data_alignment << 0x10;\n        aligned_length = length & 0xfffffff8;\n        do {\n          current_ptr = data + 2;\n          aligned_length = aligned_length - 8;\n          xor_result_1 = *data ^ data_alignment;\n          xor_result_2 = data[1] ^ data_alignment;\n          is_byte_zero = -((char)xor_result_1 == '\\0');\n          bit_8 = -((char)(xor_result_1 >> 8) == '\\0');\n          bit_16 = -((char)(xor_result_1 >> 0x10) == '\\0');\n          bit_24 = -((char)(xor_result_1 >> 0x18) == '\\0');\n          xor_result_1 = CONCAT13(bit_24,CONCAT12(bit_16,CONCAT11(bit_8,is_byte_zero)));\n          is_byte_nonzero = (char)xor_result_2 != '\\0';\n          is_nonzero_2 = (char)(xor_result_2 >> 8) != '\\0';\n          is_nonzero_3 = (char)(xor_result_2 >> 0x10) != '\\0';\n          is_nonzero_4 = (char)(xor_result_2 >> 0x18) != '\\0';\n          xor_result_2 = CONCAT13(is_nonzero_4 * bit_24 - !is_nonzero_4,\n                            CONCAT12(is_nonzero_3 * bit_16 - !is_nonzero_3,\n                                     CONCAT11(is_nonzero_2 * bit_8 - !is_nonzero_2,is_byte_nonzero * is_byte_zero - !is_byte_nonzero)));\n          if (xor_result_2 != 0) {\n            if (xor_result_1 == 0) {\n              result_ptr = (byte *)((int)data + 5);\n              xor_result_1 = xor_result_2;\n            }\n            else {\n              result_ptr = (byte *)((int)data + 1);\n            }\n            if ((xor_result_1 & 1) == 0) {\n              is_byte_nonzero = (xor_result_1 & 0x100) == 0;\n              result = result_ptr + 1;\n              if (is_byte_nonzero) {\n                is_byte_nonzero = (xor_result_1 & 0x18000) == 0;\n                result = result_ptr + 2;\n              }\n              result_ptr = result;\n              if (is_byte_nonzero) {\n                result_ptr = result_ptr + 1;\n              }\n            }\n            return result_ptr + -1;\n          }\n          data = current_ptr;\n        } while (aligned_length != 0);\n        length = length & 7;\n        goto joined_r0x00006070;\n      }\n      current_ptr = (uint *)((int)data + 1);\n      length = length - 1;\n      if (*(byte *)data == target_byte) break;\n      data_alignment = (uint)current_ptr & 7;\n      data = current_ptr;\n      if (length == 0) {\n        return (byte *)0x0;\n      }\n    }\n  }\n  return (byte *)((int)current_ptr + -1);\n}\n\n",
            "current_name": "find_byte_sequence_00006010",
            "entrypoint": "0x00006010",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00006010": "find_byte_sequence_00006010",
                "bVar1": "current_byte",
                "bVar13": "is_byte_nonzero",
                "bVar14": "is_nonzero_2",
                "bVar15": "is_nonzero_3",
                "bVar16": "is_nonzero_4",
                "cVar2": "is_byte_zero",
                "cVar3": "bit_8",
                "cVar4": "bit_16",
                "cVar5": "bit_24",
                "param_1": "data",
                "param_2": "target_byte",
                "param_3": "length",
                "pbVar6": "result",
                "pbVar8": "result_ptr",
                "puVar7": "current_ptr",
                "uVar10": "aligned_length",
                "uVar11": "xor_result_1",
                "uVar12": "xor_result_2",
                "uVar9": "data_alignment"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000060b0": {
            "additional_data": {
                "FUN_000060b0": {
                    "copy_and_shift": 2,
                    "copy_array": 18,
                    "copy_array_to_buffer": 1,
                    "copy_bytes": 1,
                    "copy_data": 5,
                    "copy_memory": 2,
                    "copy_to_buffer": 1,
                    "copy_to_destination": 1
                },
                "param_1": {
                    "dest": 4,
                    "dest_address": 2,
                    "dest_array": 4,
                    "dest_array_start": 1,
                    "dest_index": 4,
                    "dest_offset": 2,
                    "dest_ptr": 1,
                    "dest_size": 1,
                    "dest_start": 1,
                    "destination": 5,
                    "destination_array": 1,
                    "destination_index": 1,
                    "destination_ptr": 1,
                    "dst_array_offset": 1,
                    "dst_length": 1,
                    "src_index": 1
                },
                "param_2": {
                    "source": 5,
                    "source_address": 1,
                    "source_array": 4,
                    "source_buffer": 1,
                    "source_ptr": 1,
                    "src": 5,
                    "src_address": 1,
                    "src_array": 6,
                    "src_array_start": 1,
                    "src_data": 4,
                    "src_ptr": 1,
                    "src_start": 1
                },
                "param_3": {
                    "array_length": 6,
                    "array_size": 1,
                    "buffer_size": 1,
                    "data_length": 2,
                    "data_size": 1,
                    "length": 10,
                    "num_bytes": 3,
                    "size": 4,
                    "source_length": 1,
                    "src_length": 1,
                    "src_size": 1
                },
                "puVar1": {
                    "current_source_element": 1,
                    "source_index": 2,
                    "source_iterator": 1,
                    "source_pointer": 2,
                    "source_ptr": 4,
                    "src_element": 1,
                    "src_index": 1,
                    "src_pointer": 1,
                    "src_ptr": 16,
                    "src_ptr_temp": 1
                },
                "puVar2": {
                    "end_element": 1,
                    "end_of_source": 1,
                    "end_of_source_array": 1,
                    "end_of_source_buffer": 1,
                    "end_pointer": 2,
                    "end_ptr": 12,
                    "source_end": 2,
                    "source_end_ptr": 2,
                    "src_end": 5,
                    "src_end_ptr": 2,
                    "src_ptr_end": 1
                },
                "puVar3": {
                    "current_destination_element": 1,
                    "dest_array": 1,
                    "dest_element": 1,
                    "dest_end": 2,
                    "dest_pointer": 2,
                    "dest_ptr": 15,
                    "dest_ptr_temp": 1,
                    "destination_buffer": 1,
                    "destination_iterator": 1,
                    "destination_pointer": 1,
                    "destination_ptr": 2,
                    "dst_ptr": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_000060cc",
                "FUN_000068f0"
            ],
            "code": "\nvoid copy_array_to_buffer_000060b0(int destination,undefined *src_array,int length)\n\n{\n  undefined *src_ptr;\n  undefined *end_ptr;\n  undefined *dest_ptr;\n  \n  end_ptr = src_array + length;\n  dest_ptr = (undefined *)(destination + -1);\n  if (src_array != end_ptr) {\n    do {\n      src_ptr = src_array + 1;\n      dest_ptr = dest_ptr + 1;\n      *dest_ptr = *src_array;\n      src_array = src_ptr;\n    } while (src_ptr != end_ptr);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "copy_array_to_buffer_000060b0",
            "entrypoint": "0x000060b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000060b0": "copy_array_to_buffer_000060b0",
                "param_1": "destination",
                "param_2": "src_array",
                "param_3": "length",
                "puVar1": "src_ptr",
                "puVar2": "end_ptr",
                "puVar3": "dest_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000060cc": {
            "additional_data": {
                "FUM_00004bd0": {
                    "perform_operation": 1
                },
                "FUN_00004b34": {
                    "cleanup": 1,
                    "do_something": 1,
                    "execute_function": 1,
                    "handle_empty_data": 1,
                    "handle_error": 3,
                    "handle_zero_threshold": 1,
                    "initialize": 1,
                    "initialize_buffers": 1,
                    "perform_action": 1,
                    "process_data_sub_routine2": 1,
                    "process_subfunction3": 1,
                    "reset_data": 1
                },
                "FUN_00004bd0": {
                    "allocate_memory": 1,
                    "calculate_something": 1,
                    "calculate_sum": 1,
                    "calculate_value": 1,
                    "check_data": 1,
                    "check_limit": 1,
                    "check_threshold": 1,
                    "copy_data_to_buffer": 1,
                    "process_data": 2,
                    "process_data_helper": 1,
                    "process_subfunction1": 1,
                    "validate_data": 1
                },
                "FUN_000060b0": {
                    "execute_operation": 2,
                    "handle_data": 2,
                    "perform_action": 3,
                    "perform_operation": 1,
                    "process_buffer_data": 1,
                    "process_data_sub_routine1": 1,
                    "process_result": 1,
                    "process_subfunction2": 1,
                    "update_data": 2
                },
                "FUN_000060cc": {
                    "perform_operation": 5,
                    "process_data": 16,
                    "process_function": 1,
                    "validate_and_process_data": 2
                },
                "FUN_00006964": {
                    "check_condition": 1,
                    "check_data_limit": 1,
                    "check_data_validity": 1,
                    "check_threshold": 1,
                    "compute_value": 1,
                    "data_comparison": 1,
                    "get_data": 1,
                    "get_data_length": 1,
                    "get_some_value": 1,
                    "get_value": 3,
                    "process_subfunction4": 1,
                    "retrieve_value": 1
                },
                "iVar1": {
                    "result": 28,
                    "return_value": 1
                },
                "param_1": {
                    "arg1": 8,
                    "config": 1,
                    "data": 2,
                    "data_array": 1,
                    "data_ptr": 4,
                    "input": 2,
                    "input1": 2,
                    "input_1": 1,
                    "input_buffer": 1,
                    "input_param": 3,
                    "input_param1": 1,
                    "input_parameter_1": 1,
                    "operand1": 1,
                    "param1": 1,
                    "ptr": 1,
                    "var1": 1
                },
                "param_2": {
                    "arg2": 5,
                    "array_length": 1,
                    "count": 3,
                    "flag": 1,
                    "input2": 2,
                    "input_2": 1,
                    "input_length": 1,
                    "input_param2": 1,
                    "input_parameter_2": 1,
                    "input_value": 1,
                    "length": 1,
                    "num1": 1,
                    "num_iterations": 1,
                    "operand2": 1,
                    "param2": 1,
                    "size": 9
                },
                "param_3": {
                    "arg3": 5,
                    "comparison_value": 1,
                    "condition": 1,
                    "input3": 1,
                    "input_3": 1,
                    "input_param3": 1,
                    "input_parameter_3": 1,
                    "limit": 9,
                    "max_length": 1,
                    "max_value": 1,
                    "num2": 1,
                    "param3": 1,
                    "size": 1,
                    "threshold": 6
                },
                "param_4": {
                    "arg2": 1,
                    "arg4": 7,
                    "extra_param": 4,
                    "input3": 1,
                    "input4": 1,
                    "input_4": 1,
                    "input_param4": 1,
                    "input_parameter_4": 1,
                    "num3": 1,
                    "operand3": 1,
                    "option": 1,
                    "output_param": 1,
                    "param4": 1,
                    "param_4": 5,
                    "unknown": 1,
                    "unknown_param": 1,
                    "unused_param": 1,
                    "var2": 1
                },
                "uVar2": {
                    "calculation_result": 1,
                    "check": 1,
                    "compare": 1,
                    "compare_value": 1,
                    "comparison": 1,
                    "comparison_result": 4,
                    "condition_result": 1,
                    "count": 1,
                    "counter": 1,
                    "func_output": 1,
                    "memory_size": 1,
                    "rand_value": 1,
                    "random_value": 1,
                    "return_value": 1,
                    "return_value2": 1,
                    "temp": 3,
                    "temp_var": 1,
                    "temp_variable": 1,
                    "u_result": 1,
                    "val": 1,
                    "value": 4
                }
            },
            "called": [
                "FUN_00004bd0",
                "FUN_000060b0",
                "FUN_00004b34",
                "FUN_00006964"
            ],
            "calling": [
                "FUN_000068f0"
            ],
            "code": "\nint validate_and_process_data_000060cc(undefined4 arg1,int size,uint limit,undefined4 arg4)\n\n{\n  int result;\n  uint comparison_result;\n  \n  if (size != 0) {\n    if (limit == 0) {\n      FUN_00004b34();\n      result = 0;\n    }\n    else {\n      comparison_result = FUN_00006964();\n      result = size;\n      if ((comparison_result < limit) && (result = FUN_00004bd0(arg1,limit), result != 0)) {\n        FUN_000060b0(result,size,limit);\n        FUN_00004b34(arg1,size);\n      }\n    }\n    return result;\n  }\n  result = FUN_00004bd0(arg1,limit,limit,arg4);\n  return result;\n}\n\n",
            "current_name": "validate_and_process_data_000060cc",
            "entrypoint": "0x000060cc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000060cc": "validate_and_process_data_000060cc",
                "iVar1": "result",
                "param_1": "arg1",
                "param_2": "size",
                "param_3": "limit",
                "param_4": "arg4",
                "uVar2": "comparison_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00006192": {
            "additional_data": {
                "FUN_00004b34": {
                    "do_something": 1,
                    "execute_helper": 1,
                    "execute_subfunction": 1,
                    "handle_error": 6,
                    "handle_invalid_params": 1,
                    "helper_function": 1,
                    "initialize_data": 1,
                    "initialize_data_array": 1,
                    "log_error": 2,
                    "perform_action": 1,
                    "perform_additional_check": 2,
                    "perform_additional_task": 1,
                    "perform_cleanup": 2,
                    "perform_operation": 1,
                    "process_error": 1,
                    "reset_config": 1,
                    "reset_function": 1,
                    "validate_data": 3
                },
                "FUN_00006192": {
                    "extract_and_reset_data": 1,
                    "extract_data": 8,
                    "extract_data_from_binary": 1,
                    "extract_parameter_value": 1,
                    "improve_code_and_return_value": 1,
                    "initialize_data": 4,
                    "process_array": 1,
                    "process_data": 3,
                    "process_param": 1,
                    "process_params": 1,
                    "restructure_function": 1,
                    "update_and_check_data": 1,
                    "update_config": 1,
                    "update_data": 2,
                    "update_param_info": 1,
                    "update_parameter": 1,
                    "update_parameters": 1,
                    "updated_function": 1
                },
                "param_1": {
                    "arg1": 3,
                    "config": 1,
                    "config_value": 1,
                    "error_parameters": 1,
                    "first_parameter": 1,
                    "input": 2,
                    "input1": 2,
                    "input_param": 2,
                    "input_value": 3,
                    "param": 1,
                    "param1": 6,
                    "param_1": 1,
                    "return_code": 1,
                    "status": 6
                },
                "param_2": {
                    "array": 4,
                    "config_array": 1,
                    "data": 9,
                    "data_array": 4,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "error_code": 1,
                    "input2": 2,
                    "output": 1,
                    "param2": 3,
                    "param_array": 1,
                    "parameters": 1,
                    "params_array": 1,
                    "result": 1
                },
                "param_3": {
                    "arg1": 1,
                    "arg3": 2,
                    "error_param1": 1,
                    "helper_arg1": 1,
                    "param1": 1,
                    "param3": 8,
                    "param_3": 2,
                    "third_parameter": 1,
                    "value1": 1
                },
                "param_4": {
                    "arg2": 1,
                    "arg4": 2,
                    "error_param2": 1,
                    "fourth_parameter": 1,
                    "helper_arg2": 1,
                    "param2": 1,
                    "param4": 8,
                    "param_4": 2,
                    "value2": 1
                }
            },
            "called": [
                "FUN_00004b34"
            ],
            "calling": [
                "FUN_000061cc"
            ],
            "code": "\nundefined4 extract_and_reset_data_00006192(undefined4 param1,undefined4 *data)\n\n{\n  if ((undefined4 *)data[0xd] != (undefined4 *)0x0) {\n    if ((undefined4 *)data[0xd] != data + 0x11) {\n      FUN_00004b34();\n    }\n    data[1] = data[0x10];\n    data[0xd] = 0;\n    if (data[0x10] != 0) {\n      *data = data[0xf];\n      return 0;\n    }\n  }\n  *data = data[4];\n  data[1] = 0;\n  *(ushort *)(data + 3) = *(ushort *)(data + 3) | 0x20;\n  return 0xffffffff;\n}\n\n",
            "current_name": "extract_and_reset_data_00006192",
            "entrypoint": "0x00006192",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00006192": "extract_and_reset_data_00006192",
                "param_1": "param1",
                "param_2": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000061cc": {
            "additional_data": {
                "FUN_000061cc": {
                    "decode_and_process_data": 1,
                    "extract_data_from_binary": 1,
                    "parse_and_extract": 1,
                    "parse_and_process": 1,
                    "parse_data": 4,
                    "parse_function": 1,
                    "parse_input": 3,
                    "parse_string": 2,
                    "process_data": 1
                },
                "auStack_2ac": {
                    "buffer": 1,
                    "byte_arr": 1,
                    "local_array": 2,
                    "local_array_2": 1,
                    "local_buffer": 2,
                    "local_byte_arr": 1,
                    "local_stack_2ac": 1,
                    "local_stack_array": 1,
                    "return_value2": 1,
                    "stack": 1,
                    "stack_array": 8,
                    "stack_buffer": 3,
                    "stack_vars": 1,
                    "temp_array": 1,
                    "temp_buffer": 1,
                    "temp_stack": 2
                },
                "iVar1": {
                    "i": 1,
                    "index": 2,
                    "index_var": 2,
                    "result": 15,
                    "return_value": 6,
                    "temp_int_var": 1,
                    "temp_var": 1,
                    "temp_var1": 2,
                    "temp_var_1": 1
                },
                "local_194": {
                    "case_value": 2,
                    "counter2": 2,
                    "data_type": 1,
                    "f": 1,
                    "flag4": 1,
                    "length": 1,
                    "local_case": 1,
                    "local_int_var_194": 1,
                    "local_temp_var5": 1,
                    "local_variable7": 1,
                    "logic_var": 1,
                    "num_flag": 1,
                    "op": 1,
                    "operation": 1,
                    "param_type": 1,
                    "switch_flag": 1,
                    "switch_val": 1,
                    "switch_value": 1,
                    "temp3": 1,
                    "temp_count": 1,
                    "temp_flag_2": 1,
                    "temp_value194": 1,
                    "temp_var6": 1,
                    "temp_var7": 1,
                    "temp_var9": 1,
                    "temp_var_8": 1,
                    "temp_variable": 1,
                    "type": 1,
                    "var194": 1
                },
                "local_198": {
                    "aux_stack": 1,
                    "buffer": 4,
                    "buffer_ptr": 1,
                    "byte_ptr3": 1,
                    "local_array": 2,
                    "local_array_3": 1,
                    "local_array_pointer1": 1,
                    "local_array_ptr": 1,
                    "local_buff": 1,
                    "local_byte": 1,
                    "local_ptr": 1,
                    "local_ptr_198": 1,
                    "local_stack_ptr": 1,
                    "local_var": 1,
                    "local_var2": 1,
                    "local_variable6": 1,
                    "ptr_buffer": 1,
                    "stack_array": 1,
                    "stack_pointer": 2,
                    "stack_ptr": 1,
                    "stack_var": 1,
                    "temp_buffer": 1,
                    "temp_pointer": 1,
                    "temp_var5": 1,
                    "temp_var8": 1
                },
                "local_19c": {
                    "char_count": 1,
                    "count": 2,
                    "count1": 1,
                    "counter": 7,
                    "counter1": 2,
                    "counter2": 2,
                    "inner_count": 2,
                    "local_count2": 1,
                    "local_int_var_19c": 1,
                    "local_temp_var4": 1,
                    "local_variable5": 1,
                    "loop_count": 1,
                    "loop_var": 1,
                    "result": 1,
                    "temp2": 1,
                    "temp_count": 1,
                    "temp_value19_c": 1,
                    "temp_var4": 1,
                    "temp_var6": 1,
                    "temp_var7": 1,
                    "var19c": 1
                },
                "local_1a0": {
                    "count": 4,
                    "counter": 2,
                    "counter1": 2,
                    "counter_var": 1,
                    "local_count": 1,
                    "local_int_var_1a0": 1,
                    "local_return_value": 1,
                    "local_variable4": 1,
                    "output": 1,
                    "output_value": 1,
                    "result": 7,
                    "result_value": 1,
                    "return_value": 8
                },
                "local_1a4": {
                    "char_flag2": 1,
                    "flag1": 1,
                    "flag2": 1,
                    "flag3": 4,
                    "flags2": 1,
                    "local_flags2": 1,
                    "local_temp_var3": 1,
                    "local_uint_var_1a4": 1,
                    "local_variable3": 1,
                    "prev_flags": 1,
                    "result": 1,
                    "temp1": 1,
                    "temp4": 1,
                    "temp_bit_flags": 1,
                    "temp_flag": 4,
                    "temp_flag_1": 1,
                    "temp_flags": 2,
                    "temp_val1": 1,
                    "temp_value_a4": 1,
                    "temp_var5": 1,
                    "temp_var6": 1,
                    "temp_var_7": 1,
                    "var1a4": 1,
                    "var3": 1
                },
                "local_1a8": {
                    "base": 2,
                    "current_param": 1,
                    "flag2": 6,
                    "flag3": 1,
                    "flag_2": 1,
                    "flags2": 1,
                    "format": 1,
                    "length": 2,
                    "local_temp_var2": 1,
                    "local_uint_var_1a8": 1,
                    "local_variable2": 1,
                    "mode": 1,
                    "temp_value": 1,
                    "temp_value_a8": 1,
                    "temp_var": 1,
                    "temp_var4": 1,
                    "temp_var5": 1,
                    "temp_var_6": 1,
                    "unk2": 1,
                    "value": 1,
                    "var1a8": 1,
                    "var2": 1
                },
                "local_1ac": {
                    "bit_flags": 1,
                    "char_flag1": 1,
                    "current_flag": 1,
                    "flag": 2,
                    "flag1": 8,
                    "flag2": 1,
                    "flag_1": 1,
                    "flags": 5,
                    "flags1": 1,
                    "local_flags1": 1,
                    "local_temp_var1": 1,
                    "local_uint_var_1ac": 1,
                    "local_variable1": 1,
                    "temp_value_ac": 1,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "temp_var_5": 1,
                    "var1": 1,
                    "var1ac": 1
                },
                "local_2b0": {
                    "local_array": 2,
                    "local_array_of_pointers": 1,
                    "local_param4": 4,
                    "local_ptr": 1,
                    "local_ptr_2b0": 1,
                    "local_result": 2,
                    "local_var": 1,
                    "output": 2,
                    "output_array": 3,
                    "output_array_ptr": 1,
                    "output_data_ptr": 1,
                    "output_int_array": 1,
                    "output_int_ptr_ptr": 1,
                    "output_list": 2,
                    "param_4_ptr": 1,
                    "pointer_array": 1,
                    "ptr_to_int_arr": 1,
                    "result": 1,
                    "result_list": 2,
                    "return_value1": 1,
                    "temp_var_11": 1
                },
                "local_2bc": {
                    "local_param4": 1
                },
                "local_2c": {
                    "callback_function": 1,
                    "fun_ptr": 1,
                    "function2": 2,
                    "function_ptr": 1,
                    "helper_func": 1,
                    "local_func": 1,
                    "local_func2": 4,
                    "local_func_ptr": 2,
                    "local_func_ptr2": 1,
                    "local_func_ptr_2c": 1,
                    "local_func_ptr_plus_one": 1,
                    "local_function": 2,
                    "local_function1": 1,
                    "local_function_ptr2": 1,
                    "location_2": 1,
                    "next_func_ptr": 1,
                    "next_function": 3,
                    "pointer2": 1,
                    "pointer_to_function_plus_one": 1,
                    "sub_func": 1,
                    "temp_var11": 1,
                    "temp_var8": 1,
                    "temp_var_10": 1
                },
                "local_2c0": {
                    "local_var1": 1
                },
                "local_30": {
                    "func_ptr": 2,
                    "function1": 2,
                    "function_pointer": 2,
                    "function_ptr": 2,
                    "local_code_ptr": 1,
                    "local_func": 1,
                    "local_func1": 4,
                    "local_func_ptr": 3,
                    "local_function_pointer": 1,
                    "local_function_ptr": 2,
                    "local_ptr2": 1,
                    "local_ptr_30": 1,
                    "local_variable8": 1,
                    "location_1": 1,
                    "pointer1": 1,
                    "pointer_to_function": 1,
                    "ptr_function": 1,
                    "ptr_to_lab": 1,
                    "temp_var10": 1,
                    "temp_var7": 1,
                    "temp_var_9": 1
                },
                "param_1": {
                    "arg1": 4,
                    "argument1": 1,
                    "input1": 1,
                    "input_param": 3,
                    "input_var_1": 1,
                    "p1": 1,
                    "param": 2,
                    "param1": 15,
                    "parameter_1": 1,
                    "unk1": 1
                },
                "param_2": {
                    "arg2": 4,
                    "argument2": 1,
                    "buffer": 1,
                    "byte_array_param": 1,
                    "byte_ptr_ptr": 1,
                    "input2": 1,
                    "input_array": 1,
                    "input_data": 1,
                    "input_var_2": 1,
                    "p2": 1,
                    "param2": 15,
                    "parameter_2": 1,
                    "pp_buffer": 1
                },
                "param_3": {
                    "arg3": 4,
                    "byte_ptr": 1,
                    "data": 1,
                    "input3": 1,
                    "input_array": 1,
                    "input_byte_param": 1,
                    "input_string": 2,
                    "input_var_3": 1,
                    "p3": 1,
                    "p_char": 1,
                    "param3": 14,
                    "parameter_3": 1,
                    "pattern": 1
                },
                "param_4": {
                    "arg4": 4,
                    "argument4": 1,
                    "input4": 1,
                    "input_var_4": 1,
                    "int_array_param": 1,
                    "int_ptr_ptr_ptr": 1,
                    "output_array": 1,
                    "output_data": 1,
                    "p4": 1,
                    "p_pointer": 1,
                    "param4": 15,
                    "parameter_4": 1,
                    "result": 1
                },
                "pbVar3": {
                    "byte_ptr": 1,
                    "byte_ptr2": 1,
                    "current_byte": 1,
                    "next_byte": 7,
                    "next_char": 4,
                    "pb": 2,
                    "ptr": 4,
                    "ptr_byte_var3": 1,
                    "temp2": 1,
                    "temp_byte_ptr": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1,
                    "temp_var2": 3,
                    "temp_var3": 2,
                    "temp_var_3": 1
                },
                "uVar2": {
                    "byte_val1": 1,
                    "byte_value": 3,
                    "ch": 1,
                    "char_code": 1,
                    "char_value": 1,
                    "curr_byte": 1,
                    "current_byte": 3,
                    "current_char": 2,
                    "digit": 1,
                    "first_byte": 1,
                    "temp1": 1,
                    "temp_uint_var": 1,
                    "temp_value": 1,
                    "temp_var": 1,
                    "temp_var1": 3,
                    "temp_var2": 2,
                    "temp_var_2": 2,
                    "u": 1,
                    "value": 3,
                    "var2": 1
                },
                "uVar4": {
                    "ascii": 1,
                    "byte_flag": 1,
                    "byte_val": 1,
                    "byte_val2": 1,
                    "c": 1,
                    "char_flag": 1,
                    "char_value": 1,
                    "current_byte": 1,
                    "lookup_value": 2,
                    "next_byte": 1,
                    "next_byte_value": 1,
                    "temp": 3,
                    "temp3": 1,
                    "temp_byte": 2,
                    "temp_char_code": 1,
                    "temp_uint_var_2": 1,
                    "temp_value": 1,
                    "temp_var2": 1,
                    "temp_var3": 3,
                    "temp_var4": 2,
                    "temp_var_3": 1,
                    "temp_var_4": 1,
                    "v": 1,
                    "var4": 1
                }
            },
            "called": [
                "FUN_00006010",
                "FUN_00006192",
                "FUN_000064bc",
                "FUN_0000687c",
                "FUN_0000656c"
            ],
            "calling": [
                "FUN_00005e68"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00006482) */\n\nint parse_data_000061cc(undefined4 param1,byte **param2,byte *param3,int **param4)\n\n{\n  int result;\n  uint current_byte;\n  byte *next_byte;\n  uint temp_var3;\n  int **local_param4;\n  undefined stack_array [256];\n  uint flag1;\n  undefined4 flag2;\n  uint temp_flag;\n  int return_value;\n  int counter;\n  undefined *buffer;\n  int case_value;\n  undefined *local_func1;\n  code *local_func2;\n  \n  return_value = 0;\n  counter = 0;\n  local_func1 = &LAB_00006118_1;\n  local_func2 = FUN_00006192 + 1;\n  local_param4 = param4;\n  buffer = stack_array;\nLAB_000061f6:\n  while( true ) {\n    while( true ) {\n      temp_var3 = (uint)*param3;\n      if (temp_var3 == 0) {\n        return return_value;\n      }\n      current_byte = (byte)(&DAT_00007a99)[temp_var3] & 8;\n      next_byte = param3 + 1;\n      if (((&DAT_00007a99)[temp_var3] & 8) == 0) break;\n      while (((param3 = next_byte, 0 < (int)param2[1] ||\n              (result = (*local_func2)(param1,param2), result == 0)) &&\n             ((int)((uint)(byte)(&DAT_00007a99)[**param2] << 0x1c) < 0))) {\n        counter = counter + 1;\n        param2[1] = param2[1] + -1;\n        *param2 = *param2 + 1;\n      }\n    }\n    if (temp_var3 == 0x25) break;\nLAB_00006352:\n    if (((int)param2[1] < 1) && (result = (*local_func2)(param1,param2), result != 0))\n    goto LAB_00006380;\n    if (**param2 != temp_var3) {\n      return return_value;\n    }\n    *param2 = *param2 + 1;\n    counter = counter + 1;\n    param2[1] = param2[1] + -1;\n    param3 = next_byte;\n  }\n  temp_flag = current_byte;\n  flag1 = current_byte;\n  if (param3[1] == 0x2a) {\n    next_byte = param3 + 2;\n    flag1 = 0x10;\n  }\n  while( true ) {\n    current_byte = (uint)*next_byte;\n    if (9 < current_byte - 0x30) break;\n    next_byte = next_byte + 1;\n    temp_flag = (temp_flag * 10 + current_byte) - 0x30;\n  }\n  result = FUN_00006010(&DAT_00007c02,current_byte,3);\n  if (result != 0) {\n    flag1 = 1 << (result - 0x7c02U & 0xff) | flag1;\n    next_byte = next_byte + 1;\n  }\n  param3 = next_byte + 1;\n  current_byte = (uint)*next_byte;\n  if (current_byte < 0x79) {\n    if (0x57 < current_byte) {\n      switch(current_byte) {\n      default:\n        goto switchD_000062c0_caseD_59;\n      case 0x5b:\n        param3 = (byte *)FUN_0000687c(stack_array,param3);\n        flag1 = flag1 | 0x40;\n        case_value = 1;\n        break;\n      case 99:\n        flag1 = flag1 | 0x40;\n        case_value = 0;\n        break;\n      case 100:\n      case 0x75:\n        flag2 = 10;\nLAB_000063a0:\n        if (current_byte < 0x6f) {\n          case_value = 3;\n        }\n        else {\n          case_value = 4;\n        }\n        break;\n      case 0x65:\n      case 0x66:\n      case 0x67:\nswitchD_000062c0_caseD_65:\n        case_value = 5;\n        break;\n      case 0x69:\n        flag2 = 0;\n        case_value = 3;\n        break;\n      case 0x6e:\n        if (-1 < (int)(flag1 << 0x1b)) {\n          if ((int)(flag1 << 0x1f) < 0) {\n            *(short *)*local_param4 = (short)counter;\n            local_param4 = local_param4 + 1;\n          }\n          else {\n            **local_param4 = counter;\n            local_param4 = local_param4 + 1;\n          }\n        }\n        goto LAB_000061f6;\n      case 0x6f:\n        flag2 = 8;\n        case_value = 4;\n        break;\n      case 0x70:\n        flag1 = flag1 | 0x20;\n      case 0x58:\n      case 0x78:\n        flag1 = flag1 | 0x200;\n        flag2 = 0x10;\n        goto LAB_000063a0;\n      case 0x73:\n        case_value = 2;\n      }\nLAB_000063ac:\n      if (((int)param2[1] < 1) && (result = (*local_func2)(param1,param2), result != 0))\n      goto LAB_00006380;\n      if (-1 < (int)(flag1 << 0x19)) {\n        while ((int)((uint)(byte)(&DAT_00007a99)[**param2] << 0x1c) < 0) {\n          counter = counter + 1;\n          next_byte = param2[1];\n          param2[1] = next_byte + -1;\n          if ((int)(next_byte + -1) < 1) {\n            result = (*local_func2)(param1,param2);\n            if (result != 0) goto LAB_00006380;\n          }\n          else {\n            *param2 = *param2 + 1;\n          }\n        }\n      }\n      if (case_value < 3) {\n        result = FUN_000064bc(param1,&flag1,param2,&local_param4);\n      }\n      else {\n        if (4 < case_value) goto LAB_000061f6;\n        result = FUN_0000656c(param1,&flag1,param2,&local_param4);\n      }\n      if (result == 1) {\n        return return_value;\n      }\n      if (result == 2) {\nLAB_00006380:\n        if (return_value == 0) {\nLAB_00006388:\n          return_value = -1;\n        }\n        else if ((*(ushort *)(param2 + 3) & 0x40) != 0) {\n          return_value = -1;\n        }\n        return return_value;\n      }\n      goto LAB_000061f6;\n    }\n    next_byte = param3;\n    if (current_byte == 0x25) goto LAB_00006352;\n    if (current_byte < 0x26) {\n      if (current_byte != 0) goto switchD_000062c0_caseD_59;\n      goto LAB_00006388;\n    }\n    if (current_byte - 0x45 < 3) goto switchD_000062c0_caseD_65;\n  }\nswitchD_000062c0_caseD_59:\n  case_value = 3;\n  flag2 = 10;\n  goto LAB_000063ac;\n}\n\n",
            "current_name": "parse_data_000061cc",
            "entrypoint": "0x000061cc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000061cc": "parse_data_000061cc",
                "auStack_2ac": "stack_array",
                "iVar1": "result",
                "local_194": "case_value",
                "local_198": "buffer",
                "local_19c": "counter",
                "local_1a0": "return_value",
                "local_1a4": "temp_flag",
                "local_1a8": "flag2",
                "local_1ac": "flag1",
                "local_2b0": "local_param4",
                "local_2c": "local_func2",
                "local_30": "local_func1",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "pbVar3": "next_byte",
                "uVar2": "current_byte",
                "uVar4": "temp_var3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000064bc": {
            "additional_data": {
                "DAT_00007a99": {
                    "some_data": 1
                },
                "FUN_000064bc": {
                    "check_and_update_data": 1,
                    "decode_and_process_data": 2,
                    "decode_data": 1,
                    "process_data": 24,
                    "reverse_and_update": 2,
                    "reverse_process_data": 1
                },
                "iVar1": {
                    "iteration_result": 1,
                    "result": 18,
                    "return_value": 5,
                    "status": 2,
                    "status_check": 1
                },
                "iVar6": {
                    "byte_count": 1,
                    "count": 4,
                    "counter": 21,
                    "counter2": 1,
                    "iteration": 1,
                    "iteration_count": 2,
                    "iteration_counter": 1
                },
                "param_1": {
                    "argument1": 1,
                    "data": 1,
                    "error_code": 1,
                    "input": 4,
                    "input_data": 2,
                    "input_flag": 1,
                    "input_param": 2,
                    "input_value": 9,
                    "param1": 2,
                    "status": 6,
                    "value": 1,
                    "var1": 1
                },
                "param_2": {
                    "args": 1,
                    "buffer": 1,
                    "config": 1,
                    "config_params": 2,
                    "data": 4,
                    "data_array": 8,
                    "data_info": 1,
                    "flags": 4,
                    "param2": 2,
                    "parameters": 2,
                    "params": 4,
                    "var_arr": 1
                },
                "param_3": {
                    "buffer": 6,
                    "buffer_array": 1,
                    "buffer_ptrs": 1,
                    "byte_array": 4,
                    "byte_array_ptr": 1,
                    "byte_pointer_array": 1,
                    "data": 7,
                    "data_array": 1,
                    "data_ptr": 6,
                    "data_ptrs": 1,
                    "param3": 2
                },
                "param_4": {
                    "count": 1,
                    "counter": 2,
                    "out_param": 1,
                    "output": 1,
                    "output_array": 1,
                    "output_param": 2,
                    "output_ptr": 3,
                    "output_value": 6,
                    "param4": 2,
                    "result": 7,
                    "result_flag": 1,
                    "status": 3,
                    "var2": 1
                },
                "pbVar4": {
                    "buf_ptr": 1,
                    "buffer_ptr": 2,
                    "byte_pointer": 1,
                    "byte_pointer2": 1,
                    "byte_ptr": 4,
                    "byte_ptr1": 1,
                    "current_byte": 1,
                    "data": 1,
                    "next_byte": 3,
                    "next_byte_array": 1,
                    "next_data_ptr": 1,
                    "ptr_buffer_2": 1,
                    "ptr_byte": 2,
                    "ptr_data": 1,
                    "ptr_data1": 1,
                    "ptr_data_curr": 1,
                    "ptr_to_data2": 1,
                    "temp_buffer_ptr": 1,
                    "temp_byte_1": 1,
                    "temp_byte_pointer": 1,
                    "temp_data_ptr": 1,
                    "temp_pointer1": 1,
                    "temp_ptr": 2
                },
                "pbVar5": {
                    "byte_data": 1,
                    "byte_pointer4": 1,
                    "byte_ptr": 1,
                    "byte_ptr_3": 1,
                    "byte_ptr_5": 1,
                    "curr_byte_ptr": 1,
                    "curr_ptr": 1,
                    "current_buffer_ptr": 1,
                    "current_byte": 1,
                    "current_byte_value": 1,
                    "current_data": 1,
                    "current_ptr": 1,
                    "next_byte": 5,
                    "next_byte_ptr": 2,
                    "ptr_byte2": 1,
                    "ptr_byte3": 1,
                    "ptr_data": 1,
                    "ptr_data3": 1,
                    "ptr_to_data4": 1,
                    "stored_byte": 1,
                    "temp_buffer": 1,
                    "temp_byte": 1,
                    "temp_byte_3": 1,
                    "temp_data": 1,
                    "temp_pointer3": 1,
                    "tmp_byte_ptr": 1
                },
                "ppbVar3": {
                    "buffer_ptr": 1,
                    "byte_pointer": 1,
                    "byte_ptr": 1,
                    "byte_ptr_array": 1,
                    "byte_ptr_ptr": 2,
                    "current_buffer_ptr": 1,
                    "current_byte": 1,
                    "current_byte_pointer": 1,
                    "current_data_ptr": 2,
                    "current_ptr": 2,
                    "data_pptr": 1,
                    "data_ptr_ptr": 1,
                    "pointer_to_data": 1,
                    "pointer_to_pointer": 1,
                    "pp_buffer": 1,
                    "ptr_buffer": 1,
                    "ptr_data": 4,
                    "ptr_temp": 1,
                    "ptr_to_buffer": 1,
                    "ptr_to_data": 1,
                    "temp_buffer": 2,
                    "temp_data_ptr": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 1
                },
                "uVar2": {
                    "condition": 1,
                    "flag": 1,
                    "status": 5,
                    "temp": 8,
                    "temp_value": 3,
                    "temp_var": 5,
                    "temp_variable": 1,
                    "value": 6
                },
                "unaff_r6": {
                    "byte_pointer3": 1,
                    "byte_ptr": 1,
                    "byte_ptr_2": 1,
                    "byte_ptr_r6": 1,
                    "current_byte": 11,
                    "current_byte_array": 1,
                    "current_byte_ptr": 5,
                    "data_ptr_r6": 1,
                    "ptr_buffer": 1,
                    "ptr_byte2": 1,
                    "ptr_byte3": 1,
                    "ptr_data2": 1,
                    "ptr_data_2": 1,
                    "ptr_temp_data": 1,
                    "ptr_to_data3": 1,
                    "temp_byte_2": 1,
                    "temp_pointer2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_000061cc"
            ],
            "code": "\nundefined4 decode_and_process_data_000064bc(undefined4 input_value,uint *data_array,byte **data,undefined4 *result)\n\n{\n  int result;\n  uint temp;\n  byte **ptr_data;\n  byte *byte_ptr;\n  byte *current_byte;\n  byte *next_byte;\n  int counter;\n  \n  if (data_array[2] == 0) {\n    if (data_array[6] == 0) {\n      temp = 1;\n    }\n    else {\n      temp = 0xffffffff;\n    }\n    data_array[2] = temp;\n  }\n  if (-1 < (int)(*data_array << 0x1b)) {\n    ptr_data = (byte **)*result;\n    *result = ptr_data + 1;\n    current_byte = *ptr_data;\n  }\n  counter = 0;\n  do {\n    temp = data_array[6];\n    if (temp != 0) {\n      if (temp == 1) {\n        if (*(char *)(data_array[5] + (uint)**data) == '\\0') {\n          if (counter == 0) {\n            return 1;\n          }\nLAB_0000654a:\n          if (((*data_array & 0x10) == 0) && (data_array[3] = data_array[3] + 1, data_array[6] != 0)) {\n            *current_byte = 0;\n          }\n          data_array[4] = counter + data_array[4];\n          return 0;\n        }\n      }\n      else if ((temp != 2) || ((int)((uint)(byte)(&DAT_00007a99)[**data] << 0x1c) < 0))\n      goto LAB_0000654a;\n    }\n    next_byte = current_byte;\n    if (-1 < (int)(*data_array << 0x1b)) {\n      next_byte = current_byte + 1;\n      *current_byte = **data;\n    }\n    byte_ptr = data[1];\n    *data = *data + 1;\n    temp = data_array[2] - 1;\n    data[1] = byte_ptr + -1;\n    counter = counter + 1;\n    data_array[2] = temp;\n    current_byte = next_byte;\n    if ((temp == 0) ||\n       (((int)(byte_ptr + -1) < 1 &&\n        (result = (*(code *)data_array[0x60])(input_value,data,temp,(code *)data_array[0x60],result),\n        result != 0)))) goto LAB_0000654a;\n  } while( true );\n}\n\n",
            "current_name": "decode_and_process_data_000064bc",
            "entrypoint": "0x000064bc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000064bc": "decode_and_process_data_000064bc",
                "iVar1": "result",
                "iVar6": "counter",
                "param_1": "input_value",
                "param_2": "data_array",
                "param_3": "data",
                "param_4": "result",
                "pbVar4": "byte_ptr",
                "pbVar5": "next_byte",
                "ppbVar3": "ptr_data",
                "uVar2": "temp",
                "unaff_r6": "current_byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0000656c": {
            "additional_data": {
                "FUN_0000656c": {
                    "binary_processing_function": 1,
                    "decode_data": 1,
                    "process_data": 6
                },
                "iVar1": {
                    "index": 1,
                    "result": 16,
                    "result1": 1,
                    "result_code": 1,
                    "return_value": 7,
                    "status": 1,
                    "temp_result": 1,
                    "temp_var1": 2
                },
                "iVar11": {
                    "counter": 9,
                    "i_var": 1,
                    "index": 6,
                    "inner_loop_index": 1,
                    "loop_counter": 8,
                    "loop_index": 3,
                    "loop_var": 1,
                    "temp_var12": 1,
                    "temp_var6": 1
                },
                "iuVar2": {
                    "result": 1
                },
                "local_34": {
                    "byte_array": 2,
                    "constant_arr": 1,
                    "constant_strings": 1,
                    "constants": 2,
                    "constants_array": 2,
                    "data_array": 3,
                    "local_array": 8,
                    "local_data": 1,
                    "local_data_array": 1,
                    "lookup_table": 1,
                    "string_array": 2,
                    "strings_array": 2,
                    "validation_strings": 1,
                    "values": 1
                },
                "param_1": {
                    "arg1": 6,
                    "input": 7,
                    "input1": 2,
                    "input_data": 2,
                    "input_param": 2,
                    "input_param1": 1,
                    "input_parameter": 2,
                    "input_value": 5,
                    "param": 1,
                    "param1": 3
                },
                "param_2": {
                    "arg2": 3,
                    "array": 1,
                    "array_param": 1,
                    "array_pointer": 1,
                    "binary_data": 1,
                    "data": 2,
                    "data_array": 2,
                    "flags": 3,
                    "input2": 2,
                    "input_array": 1,
                    "input_param2": 1,
                    "param2": 3,
                    "param_array": 4,
                    "parameters": 1,
                    "params": 4,
                    "values": 1
                },
                "param_3": {
                    "arg3": 3,
                    "buffer": 2,
                    "byte_array": 6,
                    "byte_array_param": 1,
                    "byte_pointer": 1,
                    "byte_ptr_array": 1,
                    "bytes": 1,
                    "data": 6,
                    "data_pointer": 1,
                    "data_pointers": 1,
                    "data_ptr": 1,
                    "input3": 2,
                    "input_byte": 1,
                    "input_param3": 1,
                    "param3": 3
                },
                "param_4": {
                    "arg4": 3,
                    "input4": 2,
                    "input_param4": 1,
                    "output": 9,
                    "output_array": 2,
                    "output_data": 1,
                    "output_param": 2,
                    "output_parameter": 1,
                    "output_ptr": 1,
                    "output_value": 4,
                    "param4": 3,
                    "result": 2
                },
                "pbVar5": {
                    "byte_data": 1,
                    "byte_pointer": 13,
                    "byte_ptr": 8,
                    "byte_val": 1,
                    "byte_value": 2,
                    "byte_var": 1,
                    "temp_var2": 3,
                    "temp_var5": 1,
                    "var5": 1
                },
                "pcVar3": {
                    "callback_function": 1,
                    "check": 1,
                    "check_func": 1,
                    "code_block": 1,
                    "code_func": 1,
                    "code_pointer": 2,
                    "code_var": 1,
                    "comparison_function": 1,
                    "function_pointer": 14,
                    "function_ptr": 4,
                    "parse_func": 1,
                    "some_code": 2,
                    "validation_callback": 1
                },
                "puVar10": {
                    "data_array_ptr": 1,
                    "data_ptr": 1,
                    "element_ptr": 1,
                    "flags_ptr": 1,
                    "output_param4": 1,
                    "param2_ptr": 1,
                    "param_ptr": 1,
                    "params_ptr": 1,
                    "pointer3": 1,
                    "pointer_var4": 1,
                    "pointer_variable": 1,
                    "ptr3": 1,
                    "start_pos": 1,
                    "temp_pointer2": 1,
                    "temp_pointer3": 3,
                    "temp_pointer4": 1,
                    "temp_pointer_3": 2,
                    "temp_ptr2": 1,
                    "temp_ptr3": 1,
                    "temp_ptr4": 2,
                    "temp_ptr_3": 2,
                    "temp_var10": 1,
                    "temp_var7": 1,
                    "updated_pointer4": 1,
                    "var10": 1,
                    "var7": 1
                },
                "puVar7": {
                    "output_array_param": 1,
                    "output_array_ptr": 1,
                    "output_data_ptr": 1,
                    "output_param": 1,
                    "output_param1": 1,
                    "output_pointer": 6,
                    "output_ptr": 7,
                    "param4_ptr": 2,
                    "pointer_var1": 1,
                    "pointer_variable": 1,
                    "ptr_var": 1,
                    "result_ptr": 2,
                    "temp_pointer": 1,
                    "temp_ptr1": 2,
                    "temp_var4": 1,
                    "temp_var7": 1,
                    "updated_pointer": 1
                },
                "puVar8": {
                    "buffer_ptr": 1,
                    "byte_data_ptr": 1,
                    "byte_ptr": 1,
                    "byte_ptr_temp": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "output_param2": 1,
                    "param3_ptr": 1,
                    "pointer1": 1,
                    "pointer_var2": 1,
                    "pointer_variable": 1,
                    "ptr1": 1,
                    "temp_pointer": 3,
                    "temp_pointer1": 1,
                    "temp_pointer2": 1,
                    "temp_pointer_1": 1,
                    "temp_ptr": 6,
                    "temp_ptr2": 2,
                    "temp_var5": 1,
                    "temp_var8": 1,
                    "updated_pointer2": 1,
                    "var8": 1,
                    "var_ptr": 1
                },
                "puVar9": {
                    "byte_ptr2": 1,
                    "byte_ptr_temp2": 1,
                    "data_ptr": 1,
                    "data_ptr2": 1,
                    "output_param3": 1,
                    "param3_copy": 1,
                    "param3_ptr": 1,
                    "pointer2": 1,
                    "pointer_var3": 1,
                    "pointer_variable": 1,
                    "ptr2": 1,
                    "temp_pointer": 1,
                    "temp_pointer2": 3,
                    "temp_pointer3": 1,
                    "temp_pointer_2": 2,
                    "temp_ptr": 2,
                    "temp_ptr2": 3,
                    "temp_ptr3": 2,
                    "temp_ptr_2": 2,
                    "temp_var6": 1,
                    "temp_var9": 1,
                    "updated_pointer3": 1,
                    "var9": 1
                },
                "uVar2": {
                    "modified_data": 1,
                    "modified_value": 1,
                    "new_result": 1,
                    "parsed_data": 1,
                    "result": 2,
                    "result2": 2,
                    "status": 1,
                    "temp": 1,
                    "temp_value": 1,
                    "temp_var": 2,
                    "temp_var2": 2,
                    "temp_variable": 1,
                    "updated_value": 5,
                    "updated_var": 1,
                    "value": 4
                },
                "uVar4": {
                    "array_element": 1,
                    "count": 2,
                    "counter": 1,
                    "temp": 1,
                    "temp1": 1,
                    "temp_data": 1,
                    "temp_value": 6,
                    "temp_var": 4,
                    "temp_var1": 3,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "temp_variable": 1,
                    "temp_variable_1": 1,
                    "value": 1,
                    "var1": 3,
                    "var4": 2
                },
                "uVar6": {
                    "array_size": 1,
                    "length": 1,
                    "num_elements": 1,
                    "size": 1,
                    "temp": 1,
                    "temp2": 1,
                    "temp_data_2": 1,
                    "temp_value2": 3,
                    "temp_var": 1,
                    "temp_var2": 3,
                    "temp_var3": 4,
                    "temp_var4": 1,
                    "temp_var6": 1,
                    "temp_var_2": 1,
                    "temp_variable": 2,
                    "temp_variable_2": 1,
                    "updated_param_value": 1,
                    "var1": 1,
                    "var2": 3,
                    "var6": 2
                },
                "unaff_r9": {
                    "count": 3,
                    "count_param": 1,
                    "counter": 2,
                    "index": 3,
                    "limit": 1,
                    "loop_count": 1,
                    "loop_counter": 1,
                    "remaining": 1,
                    "temp_register": 1,
                    "temp_var": 1,
                    "temp_var11": 1,
                    "temp_var2": 1,
                    "temp_var3": 2,
                    "temp_var5": 1,
                    "temp_var8": 1,
                    "temp_variable": 1,
                    "unaff_r9": 2,
                    "unaffected_reg": 1,
                    "unaffected_register": 2,
                    "unaffected_var1": 1,
                    "unaffected_variable": 1,
                    "unexpected_value": 1,
                    "var_r9": 1
                }
            },
            "called": [
                "FUN_00006010",
                "FUN_0000687c"
            ],
            "calling": [
                "FUN_000061cc"
            ],
            "code": "\nundefined4 process_data_0000656c(undefined4 input,uint *param_array,byte **data,undefined4 *output)\n\n{\n  int result;\n  undefined4 updated_value;\n  code *function_pointer;\n  uint temp_value;\n  byte *byte_pointer;\n  uint temp_var3;\n  undefined4 *output_ptr;\n  uint *temp_ptr;\n  uint *temp_ptr2;\n  uint *temp_pointer3;\n  int index;\n  int counter;\n  undefined *local_array [4];\n  \n  local_array[0] = &DAT_00007c2f;\n  local_array[1] = &DAT_00007c32;\n  local_array[2] = &DAT_00007c35;\n  function_pointer = (code *)&UNK_00004f81;\n  if (param_array[6] != 3) {\n    function_pointer = (code *)&UNK_00005fd5;\n  }\n  temp_var3 = param_array[2];\n  temp_value = temp_var3 - 1;\n  if (0x15c < temp_value) {\n    index = temp_var3 - 0x15d;\n    temp_var3 = 0x15d;\n  }\n  if (0x15c < temp_value) {\n    param_array[2] = temp_var3;\n  }\n  temp_pointer3 = param_array + 7;\n  if (temp_value < 0x15d) {\n    index = 0;\n  }\n  *param_array = *param_array | 0xd00;\n  counter = 0;\n  temp_ptr2 = temp_pointer3;\n  do {\n    result = FUN_00006010(local_array[counter],**data,2);\n    if (result != 0) {\n      if (counter == 1) {\n        if (param_array[1] == 0) {\n          param_array[1] = 8;\n          *param_array = *param_array | 0x200;\n        }\n        temp_value = *param_array & 0xfffffaff;\nLAB_000065f4:\n        *param_array = temp_value;\n      }\n      else if (counter == 2) {\n        if ((*param_array & 0x600) != 0x200) goto LAB_00006624;\n        param_array[1] = 0x10;\n        temp_value = *param_array | 0x100;\n        goto LAB_000065f4;\n      }\n      temp_value = param_array[2];\n      param_array[2] = temp_value - 1;\n      if (temp_value != 0) {\n        byte_pointer = *data;\n        *data = byte_pointer + 1;\n        temp_ptr = (uint *)((int)temp_ptr2 + 1);\n        *(byte *)temp_ptr2 = *byte_pointer;\n        byte_pointer = data[1];\n        data[1] = byte_pointer + -1;\n        temp_ptr2 = temp_ptr;\n        if (((int)(byte_pointer + -1) < 1) &&\n           (result = (*(code *)param_array[0x60])(input,data), result != 0)) {\n          counter = 0;\n          goto LAB_000066ca;\n        }\n      }\n    }\nLAB_00006624:\n    counter = counter + 1;\n  } while (counter != 3);\n  if (param_array[1] == 0) {\n    param_array[1] = 10;\n  }\n  FUN_0000687c(param_array[5],\"01234567]\" + (8 - param_array[1]));\n  counter = 0;\n  while( true ) {\n    temp_ptr = temp_ptr2;\n    if (param_array[2] == 0) break;\n    byte_pointer = *data;\n    temp_value = (uint)*byte_pointer;\n    if (*(char *)(param_array[5] + temp_value) == '\\0') break;\n    if ((temp_value == 0x30) && ((int)(*param_array << 0x14) < 0)) {\n      counter = counter + 1;\n      if (index != 0) {\n        index = index + -1;\n        param_array[2] = param_array[2] + 1;\n      }\n    }\n    else {\n      *param_array = *param_array & 0xfffff6ff;\n      temp_ptr = (uint *)((int)temp_ptr2 + 1);\n      *(byte *)temp_ptr2 = *byte_pointer;\n    }\n    byte_pointer = data[1];\n    data[1] = byte_pointer + -1;\n    if ((int)(byte_pointer + -1) < 1) {\n      result = (*(code *)param_array[0x60])(input,data);\n      if (result != 0) break;\n    }\n    else {\n      *data = *data + 1;\n    }\n    param_array[2] = param_array[2] - 1;\n    temp_ptr2 = temp_ptr;\n  }\nLAB_000066ca:\n  if ((int)(*param_array << 0x17) < 0) {\n    if (temp_pointer3 < temp_ptr) {\n      (*(code *)param_array[0x5f])(input,*(byte *)((int)temp_ptr + -1),data);\n      temp_ptr = (uint *)((int)temp_ptr + -1);\n    }\n    if (temp_ptr == temp_pointer3) {\n      return 1;\n    }\n  }\n  if ((*param_array & 0x10) == 0) {\n    *(byte *)temp_ptr = 0;\n    updated_value = (*function_pointer)(input,temp_pointer3,0,param_array[1]);\n    output_ptr = (undefined4 *)*output;\n    temp_value = *param_array;\n    *output = output_ptr + 1;\n    output_ptr = (undefined4 *)*output_ptr;\n    if ((temp_value & 0x20) == 0) {\n      if ((int)(temp_value << 0x1f) < 0) {\n        *(short *)output_ptr = (short)updated_value;\n      }\n      else {\n        *output_ptr = updated_value;\n      }\n    }\n    else {\n      *output_ptr = updated_value;\n    }\n    param_array[3] = param_array[3] + 1;\n  }\n  param_array[4] = (uint)((int)temp_ptr + param_array[4] + (counter - (int)temp_pointer3));\n  return 0;\n}\n\n",
            "current_name": "process_data_0000656c",
            "entrypoint": "0x0000656c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0000656c": "process_data_0000656c",
                "iVar1": "result",
                "iVar11": "counter",
                "local_34": "local_array",
                "param_1": "input",
                "param_2": "param_array",
                "param_3": "data",
                "param_4": "output",
                "pbVar5": "byte_pointer",
                "pcVar3": "function_pointer",
                "puVar10": "temp_pointer3",
                "puVar7": "output_ptr",
                "puVar8": "temp_ptr",
                "puVar9": "temp_ptr2",
                "uVar2": "updated_value",
                "uVar4": "temp_value",
                "uVar6": "temp_var3",
                "unaff_r9": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00006768": {
            "additional_data": {
                "0x1fff0284": {
                    "some_value": 1
                },
                "DAT_00007998": {
                    "config_data3": 1,
                    "data3": 1
                },
                "DAT_000079b8": {
                    "config_data1": 1,
                    "data1": 1
                },
                "DAT_000079d8": {
                    "config_data2": 1,
                    "data2": 1
                },
                "FUN_0000404c": {
                    "execute_function": 1,
                    "execute_function3": 1,
                    "function6": 1,
                    "perform_action_c": 1,
                    "sub_function4": 1
                },
                "FUN_00004158": {
                    "execute_function4": 1,
                    "function3": 1,
                    "handle_positive_value": 1,
                    "perform_action_d": 1,
                    "some_function_3": 1,
                    "sub_function1": 1
                },
                "FUN_000042a4": {
                    "do_something": 1,
                    "execute_function1": 1,
                    "function1": 1,
                    "initialize": 1,
                    "perform_action1": 1,
                    "perform_action_a": 1,
                    "some_function_1": 1,
                    "sub_func1": 1
                },
                "FUN_000043a0": {
                    "enable_flag": 1,
                    "execute_function5": 1,
                    "function4": 1,
                    "perform_action_e": 1,
                    "sub_function3": 1
                },
                "FUN_00004b34": {
                    "cleanup": 1,
                    "execute_function6": 1,
                    "function2": 1,
                    "perform_action2": 1,
                    "perform_action_f": 1,
                    "reset_config_data": 1,
                    "some_function_2": 1,
                    "sub_func2": 1
                },
                "FUN_00005700": {
                    "execute_function2": 1,
                    "function5": 1,
                    "perform_action_b": 1,
                    "perform_task": 1,
                    "some_function_4": 1,
                    "sub_function2": 1
                },
                "FUN_00006754_1": {
                    "flag_value": 1
                },
                "FUN_00006768": {
                    "check_and_process_data": 1,
                    "process_data": 15,
                    "process_function": 1,
                    "validate_and_process_data": 1
                },
                "LAB_00006754_1": {
                    "label1": 1,
                    "some_label": 1
                },
                "iVar2": {
                    "int_var": 2,
                    "result": 2,
                    "result_var2": 1,
                    "return_value": 3,
                    "temp2": 8,
                    "temp_2": 1,
                    "temp_var1": 1,
                    "temp_var2": 6,
                    "temp_var_2": 3,
                    "tmp_var2": 1,
                    "value2": 1,
                    "var2": 2
                },
                "param_1": {
                    "array1": 1,
                    "array_param": 1,
                    "data1": 1,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "data_pointer1": 1,
                    "data_ptr": 4,
                    "data_structure1": 1,
                    "input_array": 8,
                    "input_data": 6,
                    "input_list": 1,
                    "input_param": 1,
                    "input_params": 1,
                    "output": 1,
                    "output_buffer": 1,
                    "ptr1": 1
                },
                "param_2": {
                    "array2": 1,
                    "config_data": 1,
                    "config_ptr": 3,
                    "data": 1,
                    "data2": 1,
                    "data_array": 2,
                    "data_param": 1,
                    "data_pointer2": 1,
                    "data_ptr": 1,
                    "data_structure2": 1,
                    "input": 1,
                    "input_array": 1,
                    "input_buffer": 1,
                    "input_pointer": 2,
                    "lookup_table": 1,
                    "offset_array": 1,
                    "output_data": 1,
                    "output_params": 1,
                    "param_array": 1,
                    "param_pointer": 1,
                    "param_ptr": 1,
                    "param_values": 1,
                    "parameter": 1,
                    "pointer_param": 1,
                    "ptr2": 1,
                    "table_ptr": 1,
                    "temp_array": 1
                },
                "param_3": {
                    "flag_1": 1,
                    "flag_param": 1,
                    "param1": 3,
                    "param3": 7,
                    "param_3": 2,
                    "param_value1": 1,
                    "some_value": 1,
                    "val1": 3,
                    "value1": 9,
                    "value_1": 1,
                    "value_param1": 1,
                    "var_3": 1
                },
                "param_4": {
                    "another_flag_param": 1,
                    "flag_2": 1,
                    "input_value": 1,
                    "other_value": 1,
                    "param2": 3,
                    "param4": 7,
                    "param_4": 2,
                    "param_value2": 1,
                    "val2": 3,
                    "value2": 8,
                    "value_2": 1,
                    "value_param2": 1,
                    "var_4": 1
                },
                "uVar1": {
                    "essential_flag": 1,
                    "flag1": 1,
                    "new_value1": 1,
                    "result": 1,
                    "result_var1": 1,
                    "some_value": 1,
                    "temp1": 8,
                    "temp_1": 1,
                    "temp_var1": 7,
                    "temp_var_1": 3,
                    "tmp_var1": 1,
                    "ushort_var": 2,
                    "value1": 1,
                    "var1": 2
                },
                "uVar3": {
                    "result": 2,
                    "result_var": 1,
                    "result_var3": 1,
                    "return_value": 1,
                    "temp": 1,
                    "temp3": 7,
                    "temp_3": 1,
                    "temp_value": 1,
                    "temp_var": 2,
                    "temp_var3": 7,
                    "temp_var_3": 3,
                    "tmp_var3": 1,
                    "value3": 1,
                    "var3": 2
                },
                "uVar4": {
                    "flag": 5,
                    "flag2": 1,
                    "flag_var": 2,
                    "flag_var_1": 1,
                    "flags": 5,
                    "mask": 1,
                    "temp4": 4,
                    "temp_4": 1,
                    "temp_var4": 5,
                    "tmp_var4": 1,
                    "ushort_var2": 2,
                    "value4": 1,
                    "var4": 2
                },
                "uVar5": {
                    "flag_var_2": 1,
                    "shift_var": 1,
                    "shifted_value": 4,
                    "temp": 1,
                    "temp3": 1,
                    "temp4": 3,
                    "temp5": 4,
                    "temp_5": 1,
                    "temp_var2": 1,
                    "temp_var5": 6,
                    "temp_var_4": 1,
                    "tmp_var5": 1,
                    "uint_var": 2,
                    "value3": 1,
                    "value5": 1,
                    "var5": 2
                }
            },
            "called": [
                "FUN_00005700",
                "FUN_0000404c",
                "FUN_00004158",
                "FUN_000043a0",
                "FUN_000042a4",
                "FUN_00004b34"
            ],
            "calling": [
                "FUN_00005e10"
            ],
            "code": "\nundefined4\nvalidate_and_process_data_00006768(undefined4 *input_array,undefined4 *config_ptr,undefined4 value1,undefined4 value2)\n\n{\n  undefined2 temp1;\n  int temp2;\n  undefined4 temp3;\n  ushort temp_var4;\n  uint temp_var5;\n  \n  if ((input_array != (undefined4 *)0x0) && (input_array[6] == 0)) {\n    FUN_000042a4();\n  }\n  if (config_ptr == &DAT_000079b8) {\n    config_ptr = (undefined4 *)input_array[1];\n  }\n  else if (config_ptr == (undefined4 *)&DAT_000079d8) {\n    config_ptr = (undefined4 *)input_array[2];\n  }\n  else if (config_ptr == (undefined4 *)&DAT_00007998) {\n    config_ptr = (undefined4 *)input_array[3];\n  }\n  temp_var4 = *(ushort *)(config_ptr + 3);\n  config_ptr[1] = 0;\n  temp_var5 = (uint)*(ushort *)(config_ptr + 3);\n  if ((int)(temp_var5 << 0x1a) < 0) {\n    return 0xffffffff;\n  }\n  if ((int)(temp_var5 << 0x1d) < 0) {\n    if ((undefined4 *)config_ptr[0xd] != (undefined4 *)0x0) {\n      if ((undefined4 *)config_ptr[0xd] != config_ptr + 0x11) {\n        FUN_00004b34(input_array);\n      }\n      config_ptr[1] = config_ptr[0x10];\n      config_ptr[0xd] = 0;\n      if (config_ptr[0x10] != 0) {\n        *config_ptr = config_ptr[0xf];\n        return 0;\n      }\n    }\n  }\n  else {\n    if (-1 < (int)(temp_var5 << 0x1b)) {\n      *input_array = 9;\n      temp_var4 = temp_var4 | 0x40;\n      goto LAB_000067b8;\n    }\n    if ((int)(temp_var5 << 0x1c) < 0) {\n      temp2 = FUN_00004158(input_array,config_ptr,temp_var5 << 0x1c,temp_var5,value2);\n      if (temp2 != 0) {\n        return 0xffffffff;\n      }\n      config_ptr[2] = 0;\n      *(ushort *)(config_ptr + 3) = *(ushort *)(config_ptr + 3) & 0xfff7;\n      config_ptr[6] = 0;\n    }\n    *(ushort *)(config_ptr + 3) = *(ushort *)(config_ptr + 3) | 4;\n  }\n  if (config_ptr[4] == 0) {\n    FUN_00005700(input_array,config_ptr);\n  }\n  temp_var4 = *(ushort *)(config_ptr + 3);\n  temp1 = *(undefined2 *)(config_ptr + 3);\n  if ((temp_var4 & 3) != 0) {\n    *(undefined2 *)(config_ptr + 3) = 1;\n    FUN_000043a0(0x1fff0284,&label1);\n    *(undefined2 *)(config_ptr + 3) = temp1;\n    if ((temp_var4 & 9) == 9) {\n      FUN_0000404c(input_array,config_ptr);\n    }\n  }\n  temp3 = config_ptr[4];\n  *config_ptr = temp3;\n  temp2 = (*(code *)config_ptr[9])(input_array,config_ptr[8],temp3,config_ptr[5]);\n  config_ptr[1] = temp2;\n  if (0 < temp2) {\n    return 0;\n  }\n  temp_var4 = *(ushort *)(config_ptr + 3);\n  if (temp2 != 0) {\n    temp3 = 0;\n  }\n  else {\n    temp_var4 = temp_var4 | 0x20;\n  }\n  if (temp2 != 0) {\n    config_ptr[1] = temp3;\n    temp_var4 = temp_var4 | 0x40;\n  }\nLAB_000067b8:\n  *(ushort *)(config_ptr + 3) = temp_var4;\n  return 0xffffffff;\n}\n\n",
            "current_name": "validate_and_process_data_00006768",
            "entrypoint": "0x00006768",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00006768": "validate_and_process_data_00006768",
                "LAB_00006754_1": "label1",
                "iVar2": "temp2",
                "param_1": "input_array",
                "param_2": "config_ptr",
                "param_3": "value1",
                "param_4": "value2",
                "uVar1": "temp1",
                "uVar3": "temp3",
                "uVar4": "temp_var4",
                "uVar5": "temp_var5"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0000687c": {
            "additional_data": {
                "DAT_000068ca": {
                    "loop_end": 1
                },
                "DAT_000068cc": {
                    "loop_exit": 1
                },
                "FUN_0000687c": {
                    "decode_and_modify_bytes": 1,
                    "decode_data": 1,
                    "decode_function": 1,
                    "decode_sequence": 1,
                    "expand_array": 1,
                    "expanded_and_modified_function": 1,
                    "extract_and_modify_data": 1,
                    "extract_brackets_content": 1,
                    "extract_byte_sequence": 1,
                    "extract_bytes": 1,
                    "extract_data": 1,
                    "parse_byte_array": 1,
                    "process_byte_array": 1,
                    "process_bytes": 1,
                    "process_data": 2,
                    "reverse_and_extract": 1,
                    "reverse_and_extrapolate": 1,
                    "reverse_and_modify_bytes": 1,
                    "reverse_array": 2,
                    "reverse_array_indices": 1,
                    "reverse_ascii_sequence": 1,
                    "reverse_byte": 1,
                    "reverse_byte_array": 1,
                    "reverse_byte_pattern": 1,
                    "reverse_bytes": 2,
                    "reverse_extracted_bytes": 1,
                    "reverse_extracted_data": 1
                },
                "LAB_000068aa": {
                    "loop_start": 1
                },
                "bVar7": {
                    "is_carat": 2,
                    "is_caret": 6,
                    "is_carrot": 5,
                    "is_condition_met": 1,
                    "is_current_byte_5e": 1,
                    "is_first_byte": 1,
                    "is_flag": 2,
                    "is_flag_set": 1,
                    "is_hat_present": 1,
                    "is_match": 3,
                    "is_open_bracket": 1,
                    "is_reversed": 3,
                    "is_shifted": 1,
                    "is_special_byte": 1,
                    "is_tilde": 1
                },
                "iVar3": {
                    "counter": 6,
                    "i": 1,
                    "index": 19,
                    "loop_var": 1,
                    "temp_var2": 3
                },
                "param_1": {
                    "array_length": 3,
                    "array_size": 6,
                    "brackets_length": 1,
                    "buffer_size": 1,
                    "byte_array_size": 1,
                    "data_length": 2,
                    "length": 9,
                    "output_size": 1,
                    "pattern_length": 1,
                    "sequence_length": 2,
                    "size": 3,
                    "start_index": 1
                },
                "param_2": {
                    "array": 1,
                    "ascii_sequence": 1,
                    "brackets_content": 1,
                    "byte_array": 9,
                    "byte_sequence": 1,
                    "bytes": 2,
                    "data": 12,
                    "data_array": 1,
                    "encoded_sequence": 1,
                    "input_array": 1,
                    "input_buffer": 1
                },
                "pbVar1": {
                    "decoded_data": 2,
                    "decoded_sequence": 1,
                    "end_pointer": 1,
                    "output_array": 1,
                    "result": 23,
                    "result_pointer": 1,
                    "result_ptr": 2
                },
                "uVar2": {
                    "counter": 1,
                    "current_byte": 1,
                    "current_char": 2,
                    "encoded_char": 1,
                    "next_byte": 4,
                    "next_char": 1,
                    "temp": 4,
                    "temp1": 2,
                    "temp_var": 8,
                    "temp_var1": 5,
                    "upper_bound": 1
                },
                "uVar4": {
                    "byte_value": 1,
                    "current_byte": 11,
                    "current_char": 3,
                    "first_byte": 6,
                    "first_char": 3,
                    "flag": 2,
                    "next_char": 1,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "value": 1
                },
                "uVar5": {
                    "char_index": 1,
                    "count": 1,
                    "current_byte": 2,
                    "current_char": 1,
                    "end_byte": 1,
                    "start": 5,
                    "start_byte": 1,
                    "start_index": 6,
                    "start_pos": 2,
                    "temp2": 3,
                    "temp_index": 1,
                    "temp_var2": 2,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "u_var5": 1,
                    "upper_bound": 1
                },
                "uVar6": {
                    "end": 5,
                    "end_byte": 1,
                    "end_index": 7,
                    "end_pos": 2,
                    "next_byte": 3,
                    "next_char": 1,
                    "range_end": 1,
                    "second_byte": 2,
                    "temp3": 3,
                    "temp_var3": 2,
                    "temp_var4": 1,
                    "temp_var5": 1,
                    "u_var6": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_000061cc",
                "FUN_0000656c"
            ],
            "code": "\nbyte * decode_and_modify_bytes_0000687c(int length,byte *data)\n\n{\n  byte *result;\n  uint temp_var;\n  int index;\n  uint current_byte;\n  uint start_index;\n  uint end_index;\n  bool is_caret;\n  \n  current_byte = (uint)*data;\n  is_caret = current_byte == 0x5e;\n  if (is_caret) {\n    current_byte = (uint)data[1];\n    data = data + 2;\n  }\n  else {\n    data = data + 1;\n  }\n  index = length + -1;\n  do {\n    index = index + 1;\n    *(bool *)index = is_caret;\n  } while (index != length + 0xff);\n  if (current_byte == 0) {\n    result = data + -1;\n  }\n  else {\nloop_start:\n    do {\n      start_index = current_byte;\n      *(bool *)(length + start_index) = !is_caret;\n      data = data + 1;\n      while( true ) {\n        current_byte = (uint)data[-1];\n        if (current_byte != 0x2d) break;\n        end_index = (uint)*data;\n        if ((end_index == 0x5d) || (temp_var = start_index, (int)end_index < (int)start_index)) goto loop_start;\n        do {\n          temp_var = temp_var + 1;\n          *(bool *)(length + temp_var) = !is_caret;\n        } while ((int)temp_var < (int)end_index);\n        index = ~start_index + end_index;\n        if ((int)end_index <= (int)start_index) {\n          index = 0;\n        }\n        start_index = start_index + 1 + index;\n        data = data + 2;\n      }\n      result = data;\n    } while ((current_byte != 0x5d) && (result = data + -1, current_byte != 0));\n  }\n  return result;\n}\n\n",
            "current_name": "decode_and_modify_bytes_0000687c",
            "entrypoint": "0x0000687c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0000687c": "decode_and_modify_bytes_0000687c",
                "LAB_000068aa": "loop_start",
                "bVar7": "is_caret",
                "iVar3": "index",
                "param_1": "length",
                "param_2": "data",
                "pbVar1": "result",
                "uVar2": "temp_var",
                "uVar4": "current_byte",
                "uVar5": "start_index",
                "uVar6": "end_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_000068f0": {
            "additional_data": {
                "0x3fd": {
                    "offset3": 1
                },
                "0x3fe": {
                    "offset2": 1
                },
                "0x3ff": {
                    "offset1": 1
                },
                "0x400": {
                    "new_size": 1
                },
                "0xffffffff": {
                    "error": 1
                },
                "FUM_000060cc": {
                    "resize_buffer": 1
                },
                "FUN_00004bd0": {
                    "allocate_buffer": 5,
                    "allocate_memory": 14,
                    "allocate_memory_block": 1
                },
                "FUN_000060b0": {
                    "copy_buffer": 4,
                    "copy_buffer_data": 1,
                    "copy_data": 4,
                    "copy_data_to_new_block": 1,
                    "copy_data_to_new_location": 1,
                    "copy_memory": 6,
                    "initialize_memory": 2
                },
                "FUN_000060cc": {
                    "allocate_larger_memory": 1,
                    "double_structure_size": 1,
                    "expand_buffer": 2,
                    "resize_buffer": 4,
                    "resize_data": 1,
                    "resize_data_structure": 2,
                    "resize_memory": 8
                },
                "FUN_000068f0": {
                    "extract_data_from_binary": 1,
                    "initialize_buffer": 9,
                    "initialize_data": 1,
                    "initialize_data_structure": 4,
                    "initialize_memory": 1,
                    "initialize_structure": 1,
                    "process_data": 4,
                    "reverse_memory": 1,
                    "update_data": 1,
                    "update_data_array": 1
                },
                "iVar1": {
                    "allocated_memory": 1,
                    "allocated_ptr1": 1,
                    "allocated_size": 1,
                    "new_address": 1,
                    "new_array_ptr": 1,
                    "new_array_value": 1,
                    "new_block": 1,
                    "new_buffer": 4,
                    "new_data": 1,
                    "new_data_address": 1,
                    "new_data_pointer": 1,
                    "new_data_ptr": 1,
                    "new_index": 2,
                    "new_memory": 1,
                    "new_memory_block": 1,
                    "new_memory_ptr": 1,
                    "new_pointer": 2,
                    "new_ptr": 1,
                    "result": 2,
                    "result1": 1,
                    "temp_var1": 5
                },
                "iVar2": {
                    "allocated_ptr2": 1,
                    "array_length": 1,
                    "block_size": 1,
                    "buffer_size": 6,
                    "current_data_size": 1,
                    "current_length": 1,
                    "current_size": 1,
                    "memory_size": 2,
                    "old_array_value": 1,
                    "old_data_size": 2,
                    "old_index": 1,
                    "old_memory_size": 1,
                    "old_size": 4,
                    "original_size": 1,
                    "result2": 1,
                    "size": 1,
                    "temp_var2": 5
                },
                "param_1": {
                    "arg1": 5,
                    "buffer": 1,
                    "data": 1,
                    "destination": 1,
                    "input": 5,
                    "input_data": 3,
                    "input_param": 2,
                    "input_value": 4,
                    "param": 2,
                    "param1": 5,
                    "param_1": 1,
                    "param_a": 1
                },
                "param_2": {
                    "array": 3,
                    "buffer": 7,
                    "data": 2,
                    "data_arr": 1,
                    "data_array": 4,
                    "data_structure": 4,
                    "input_array": 1,
                    "memory": 1,
                    "memory_array": 1,
                    "memory_block": 1,
                    "old_buffer": 1,
                    "old_data_address": 1,
                    "old_ptr": 1,
                    "param2": 1,
                    "param_array": 1,
                    "source": 1
                },
                "param_3": {
                    "buffer_size": 1,
                    "data_size": 1,
                    "new_data_size": 1,
                    "new_size": 2,
                    "param_3": 1,
                    "size": 2
                },
                "param_4": {
                    "arg4": 2,
                    "length2": 1,
                    "new_size": 1,
                    "param_4": 2,
                    "temp_param4": 1
                }
            },
            "called": [
                "FUN_00004bd0",
                "FUN_000060cc",
                "FUN_000060b0"
            ],
            "calling": [],
            "code": "\nundefined4 initialize_buffer_000068f0(undefined4 input,int *buffer)\n\n{\n  int temp_var1;\n  int buffer_size;\n  \n  if ((int *)buffer[0xd] == buffer + 0x11) {\n    temp_var1 = FUN_00004bd0(input,0x400);\n    if (temp_var1 != 0) {\n      buffer[0xe] = 0x400;\n      buffer[0xd] = temp_var1;\n      *(undefined *)(temp_var1 + 0x3ff) = *(undefined *)((int)buffer + 0x46);\n      *(undefined *)(temp_var1 + 0x3fe) = *(undefined *)((int)buffer + 0x45);\n      *(undefined *)(temp_var1 + 0x3fd) = *(undefined *)(buffer + 0x11);\n      *buffer = temp_var1 + 0x3fd;\n      return 0;\n    }\n  }\n  else {\n    buffer_size = buffer[0xe];\n    temp_var1 = FUN_000060cc(input,(int *)buffer[0xd],buffer_size << 1);\n    if (temp_var1 != 0) {\n      FUN_000060b0(temp_var1 + buffer_size,temp_var1,buffer_size);\n      buffer[0xd] = temp_var1;\n      buffer[0xe] = buffer_size << 1;\n      *buffer = temp_var1 + buffer_size;\n      return 0;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "initialize_buffer_000068f0",
            "entrypoint": "0x000068f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_000068f0": "initialize_buffer_000068f0",
                "iVar1": "temp_var1",
                "iVar2": "buffer_size",
                "param_1": "input",
                "param_2": "buffer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00006964": {
            "additional_data": {
                "FUN_00006964": {
                    "calculate_adjusted_value": 1,
                    "calculate_modified_value": 1,
                    "calculate_new_value": 2,
                    "calculate_result": 9,
                    "calculate_sum": 17,
                    "compute_result": 1
                },
                "iVar1": {
                    "adjusted_value": 1,
                    "current_index": 1,
                    "index": 3,
                    "modified_value": 1,
                    "new_index": 1,
                    "new_value": 1,
                    "offset": 1,
                    "result": 8,
                    "sum": 12,
                    "sum_index": 2
                },
                "param_1": {
                    "first_number": 1,
                    "input": 4,
                    "input1": 1,
                    "input_param": 1,
                    "input_value": 2,
                    "num1": 1,
                    "param": 3,
                    "param1": 2,
                    "result": 7,
                    "undefined": 1,
                    "undefined_val": 1,
                    "unknown_value": 1,
                    "unused_param": 1,
                    "value": 5
                },
                "param_2": {
                    "array": 10,
                    "array_address": 2,
                    "array_index": 6,
                    "array_length": 1,
                    "base_addr": 1,
                    "data": 2,
                    "data_pointer": 1,
                    "input": 2,
                    "input2": 1,
                    "input_param": 1,
                    "input_pointer": 1,
                    "input_value": 1,
                    "param2": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_000060cc"
            ],
            "code": "\nint calculate_sum_00006964(undefined4 result,int array)\n\n{\n  int sum;\n  \n  sum = *(int *)(array + -4) + -4;\n  if (*(int *)(array + -4) < 0) {\n    sum = sum + *(int *)(array + sum);\n  }\n  return sum;\n}\n\n",
            "current_name": "calculate_sum_00006964",
            "entrypoint": "0x00006964",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00006964": "calculate_sum_00006964",
                "iVar1": "sum",
                "param_1": "result",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00006974": {
            "additional_data": {
                "FUN_00006974": {
                    "concatenate_values": 1,
                    "convert_parameters": 1,
                    "convert_range_to64_bit": 1,
                    "decompiled_function": 1,
                    "extract_params": 1,
                    "extract_range": 1,
                    "find_min_max": 1,
                    "generate_bounds": 1,
                    "get_boundaries": 1,
                    "get_bounded_value": 1,
                    "get_limited_value": 1,
                    "get_max_value": 1,
                    "get_maximum_value": 1,
                    "get_min_max": 1,
                    "get_min_max_value": 3,
                    "get_signed_value": 1,
                    "limit_integers": 1,
                    "limit_value": 1,
                    "merge_ranges": 1,
                    "process_params": 3,
                    "range_limit": 2,
                    "reverse_int_range": 1,
                    "transform_values": 1
                },
                "FUN_00006a14": {
                    "calculate_result": 1,
                    "calculate_value": 2,
                    "evaluate_limit": 1,
                    "process_range": 1,
                    "process_sub_function": 1,
                    "reverse_range": 1
                },
                "iVar1": {
                    "absolute_diff": 1,
                    "absolute_value": 1,
                    "adjusted_end_value": 1,
                    "adjusted_input2": 1,
                    "adjusted_start_high": 1,
                    "neg_input2": 1,
                    "neg_input_2_plus_input_1": 1,
                    "negative_end": 1,
                    "negative_end_value": 1,
                    "negative_input2": 2,
                    "negative_num": 2,
                    "negative_value": 1,
                    "new_i_var": 1,
                    "positive_limit": 1,
                    "processed_input2": 1,
                    "range_diff": 1,
                    "temp1": 4,
                    "temp_var": 2,
                    "temp_var1": 3,
                    "temp_var_1": 1
                },
                "local_8": {
                    "buffer": 2,
                    "local_array": 7,
                    "local_buffer": 2,
                    "local_var": 1,
                    "local_variable": 1,
                    "new_local": 1,
                    "result": 2,
                    "temp": 2,
                    "temp2": 1,
                    "temp_array": 6,
                    "temp_buffer": 3,
                    "temp_var2": 1,
                    "temp_var_2": 1
                },
                "param_1": {
                    "input1": 9,
                    "input_1": 3,
                    "input_param1": 1,
                    "input_param_1": 1,
                    "lower_bound": 1,
                    "lower_limit": 2,
                    "num1": 2,
                    "start_1": 1,
                    "start_low": 1,
                    "start_value": 4,
                    "value1": 6
                },
                "param_2": {
                    "end_1": 1,
                    "end_value": 4,
                    "input2": 9,
                    "input_2": 3,
                    "input_param2": 1,
                    "input_param_2": 1,
                    "num2": 2,
                    "start_high": 1,
                    "upper_bound": 1,
                    "upper_limit": 2,
                    "value2": 6
                },
                "param_3": {
                    "check1": 1,
                    "end_low": 1,
                    "input3": 9,
                    "input_3": 3,
                    "input_param3": 1,
                    "input_param_3": 1,
                    "min_limit": 1,
                    "min_value": 1,
                    "num3": 2,
                    "param3": 1,
                    "param_a": 1,
                    "range_start": 1,
                    "start_2": 1,
                    "value3": 6,
                    "x": 1
                },
                "param_4": {
                    "check2": 1,
                    "end_2": 1,
                    "end_high": 1,
                    "input4": 9,
                    "input_4": 3,
                    "input_param4": 1,
                    "input_param_4": 1,
                    "max_limit": 1,
                    "max_value": 1,
                    "num4": 2,
                    "param4": 1,
                    "param_b": 1,
                    "range_end": 1,
                    "value4": 6,
                    "y": 1
                },
                "uVar2": {
                    "merged_range": 1,
                    "new_u_var": 1,
                    "result": 23,
                    "result_var": 1,
                    "return_value": 1,
                    "reversed_range": 1
                }
            },
            "called": [
                "FUN_00006a14"
            ],
            "calling": [
                "FUN_0000443c"
            ],
            "code": "\nundefined8 get_min_max_value_00006974(int input1,int input2,int input3,int input4)\n\n{\n  int temp1;\n  undefined8 result;\n  undefined local_array [8];\n  \n  if ((input4 == 0) && (input3 == 0)) {\n    if (input2 < 0) {\n      input1 = 0;\n      input2 = -0x80000000;\n    }\n    else if (input2 != 0 || input1 != 0) {\n      input2 = 0x7fffffff;\n      input1 = -1;\n    }\n    return CONCAT44(input2,input1);\n  }\n  if (input2 < 0) {\n    temp1 = -input2 - (uint)(input1 != 0);\n    if (input4 < 0) {\n      result = FUN_00006a14(-input1,temp1,-input3,-input4 - (uint)(input3 != 0),local_array);\n      return result;\n    }\n    result = FUN_00006a14(-input1,temp1,input3,input4,local_array);\n    return CONCAT44(-(int)((ulonglong)result >> 0x20) - (uint)((int)result != 0),-(int)result);\n  }\n  if (input4 < 0) {\n    result = FUN_00006a14(input1,input2,-input3,-input4 - (uint)(input3 != 0),local_array);\n    return CONCAT44(-(int)((ulonglong)result >> 0x20) - (uint)((int)result != 0),-(int)result);\n  }\n  result = FUN_00006a14();\n  return result;\n}\n\n",
            "current_name": "get_min_max_value_00006974",
            "entrypoint": "0x00006974",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_00006974": "get_min_max_value_00006974",
                "iVar1": "temp1",
                "local_8": "local_array",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar2": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_00006a14": {
            "additional_data": {
                "CARRY4": {
                    "check_carry": 3
                },
                "FUN_00006a14": {
                    "calculate_division": 4,
                    "calculate_division_and_remainder": 2,
                    "calculate_quotient": 2,
                    "calculate_quotient_and_remainder": 5,
                    "div_mod": 2,
                    "divide_and_modulo": 2,
                    "divide_and_modulus": 1,
                    "divide_and_remainder": 5,
                    "divide_and_store": 1,
                    "divide_with_remainder": 2,
                    "division_with_remainder": 1,
                    "multiply_and_store": 1,
                    "perform_division": 1,
                    "perform_division_and_modulo": 1,
                    "perform_unsigned_division": 1
                },
                "LZCOUNT": {
                    "count_leading_zeros": 1,
                    "leading_zero_count": 1,
                    "leading_zeros_count": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "jump_table": 5,
                    "software_udf": 1
                },
                "bVar10": {
                    "carry": 3,
                    "carry_flag": 19,
                    "carry_overflow": 1,
                    "is_carry": 3,
                    "overflow": 1,
                    "overflow_flag": 1
                },
                "bVar11": {
                    "carry_flag": 2
                },
                "bVar12": {
                    "carry": 1
                },
                "iVar13": {
                    "shift_count": 1
                },
                "iVar2": {
                    "bit_shift": 1,
                    "leading_zeros": 1,
                    "num_iter_2": 1,
                    "shift": 4,
                    "shift_amount": 12,
                    "shift_count": 8
                },
                "param_1": {
                    "dividend": 31
                },
                "param_2": {
                    "dividend_high": 10,
                    "dividend_low": 3,
                    "dividend_low_bits": 1,
                    "dividend_lower": 2,
                    "dividend_upper": 6,
                    "dividend_upper_bits": 1,
                    "dividend_upper_half": 1,
                    "divisor": 4,
                    "remainder": 2,
                    "remainder1": 1
                },
                "param_3": {
                    "divider": 1,
                    "divisor": 21,
                    "divisor1": 1,
                    "divisor_high": 3,
                    "divisor_upper": 1,
                    "num1": 1,
                    "quotient": 2,
                    "quotient_part_1": 1
                },
                "param_4": {
                    "base": 1,
                    "divider_lower": 1,
                    "divisor2": 1,
                    "divisor_high": 10,
                    "divisor_low": 3,
                    "divisor_lower": 1,
                    "divisor_upper": 5,
                    "divisor_upper_bits": 1,
                    "divisor_upper_half": 1,
                    "not_changed": 1,
                    "num2": 1,
                    "quotient": 1,
                    "quotient_part_2": 1,
                    "remainder": 3
                },
                "param_5": {
                    "quotient": 7,
                    "quotient_and_remainder": 6,
                    "remainder": 12,
                    "remainder_and_quotient": 1,
                    "remainder_ptr": 2,
                    "result": 2,
                    "result_arr": 1
                },
                "uVar1": {
                    "dividend_low": 2,
                    "dividend_lower": 2,
                    "dividend_shifted": 1,
                    "divisor_high": 1,
                    "num_iter_1": 1,
                    "quotient": 6,
                    "quotient1": 5,
                    "quotient_high": 1,
                    "quotient_low": 4,
                    "quotient_lower_bits": 1,
                    "quotient_part1": 1,
                    "quotient_partial": 1,
                    "quotient_upper": 2,
                    "quotient_upper_half": 1,
                    "result_high": 1,
                    "temp_upper": 1
                },
                "uVar10": {
                    "divisor_remainder2": 1,
                    "remainder_final": 1,
                    "temp4": 1,
                    "temp6": 1,
                    "temp_divisor_low": 1
                },
                "uVar11": {
                    "final_quotient": 1,
                    "final_result": 1,
                    "output": 1,
                    "result": 23,
                    "return_val": 1,
                    "return_value": 2
                },
                "uVar12": {
                    "result_quotient": 1,
                    "temp": 1
                },
                "uVar13": {
                    "result_remainder": 1,
                    "rounding_increment": 1
                },
                "uVar2": {
                    "divisor_lower": 1,
                    "shift_count": 1
                },
                "uVar3": {
                    "calc_temp1": 1,
                    "dividend_high_shifted": 1,
                    "dividend_low": 1,
                    "dividend_low_shifted": 1,
                    "dividend_partial": 1,
                    "dividend_quotient": 1,
                    "dividend_shifted": 1,
                    "dividend_upper_shifted": 1,
                    "partial_quotient": 1,
                    "quotient": 1,
                    "quotient2": 1,
                    "quotient_high": 2,
                    "remainder_upper": 1,
                    "temp": 1,
                    "temp1": 7,
                    "temp_1": 2,
                    "temp_dividend_high": 1,
                    "temp_dividend_upper": 1,
                    "temp_high": 2,
                    "temp_quotient": 1,
                    "temporary": 1,
                    "tmp1": 1
                },
                "uVar4": {
                    "calc_temp2": 1,
                    "dividend_high_shifted": 1,
                    "divisor_mask": 1,
                    "divisor_partial": 1,
                    "divisor_quotient": 1,
                    "divisor_shifted": 1,
                    "divisor_times_quotient1": 1,
                    "partial_remainder": 1,
                    "quotient2": 1,
                    "quotient3": 1,
                    "quotient_high": 1,
                    "quotient_low": 1,
                    "quotient_lower": 2,
                    "quotient_upper": 1,
                    "quotient_upper_half_temp": 1,
                    "remainder": 2,
                    "temp": 1,
                    "temp2": 6,
                    "temp_2": 1,
                    "temp_dividend_low": 1,
                    "temp_quotient_upper": 1,
                    "tmp": 1,
                    "tmp1_high": 1,
                    "u_var4": 1
                },
                "uVar5": {
                    "accumulator1": 1,
                    "dividend_lower": 1,
                    "divisor": 1,
                    "quotient": 2,
                    "quotient1": 1,
                    "quotient2": 2,
                    "quotient4": 1,
                    "quotient_high": 4,
                    "quotient_low": 1,
                    "quotient_mul": 1,
                    "quotient_part2": 1,
                    "remainder_high": 1,
                    "remainder_low": 1,
                    "remainder_lower": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp3": 3,
                    "temp_1": 1,
                    "temp_2": 1,
                    "temp_3": 1,
                    "temp_quotient": 1,
                    "temp_quotient_high": 1,
                    "tmp2": 1,
                    "u_var5": 1
                },
                "uVar6": {
                    "accumulator2": 1,
                    "dividend_low": 1,
                    "divisor_quotient": 1,
                    "partial_product_upper": 1,
                    "partial_quotient": 1,
                    "quotient_high": 1,
                    "quotient_lower_bits": 1,
                    "remainder": 2,
                    "remainder1": 2,
                    "remainder2": 1,
                    "remainder_part1": 1,
                    "remainder_partial": 1,
                    "result_1": 1,
                    "temp1": 2,
                    "temp2": 2,
                    "temp3": 3,
                    "temp4": 2,
                    "temp_2": 1,
                    "temp_3": 1,
                    "temp_low": 1,
                    "temp_quotient_low": 1,
                    "temp_result": 1,
                    "tmp2": 1,
                    "tmp2_high": 1
                },
                "uVar7": {
                    "divisor_low": 3,
                    "divisor_lower": 1,
                    "divisor_times_quotient1": 1,
                    "num1_shifted": 1,
                    "quotient5": 1,
                    "quotient_part_1_remainder": 1,
                    "quotient_temp": 1,
                    "quotient_v2": 1,
                    "remainder_part2": 1,
                    "remainder_shifted": 1,
                    "temp1": 1,
                    "temp2": 2,
                    "temp3": 2,
                    "temp4": 3,
                    "temp5": 2,
                    "temp_3": 1,
                    "temp_4": 1,
                    "temp_divisor": 1,
                    "temp_product_low": 1,
                    "temp_product_upper": 1,
                    "temp_result_low": 1,
                    "tmp3": 1,
                    "u_var7": 2
                },
                "uVar8": {
                    "divisor_remainder1": 1,
                    "partial_quotient_upper": 1,
                    "quotient": 1,
                    "quotient2": 1,
                    "quotient3": 3,
                    "quotient6": 1,
                    "quotient_divisor": 1,
                    "quotient_final": 1,
                    "quotient_low": 1,
                    "quotient_lower_half": 1,
                    "quotient_mid": 1,
                    "quotient_partial": 1,
                    "quotient_temp": 1,
                    "quotient_upper_bits": 1,
                    "result_2": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp3": 2,
                    "temp4": 1,
                    "temp6": 2,
                    "temp_4": 1,
                    "temp_quotient": 1,
                    "temp_quotient2": 1,
                    "temp_quotient_lower": 1,
                    "temp_remainder_low": 1,
                    "tmp3_high": 1,
                    "u_var8": 1
                },
                "uVar9": {
                    "adj_divisor": 1,
                    "divisor_high": 2,
                    "divisor_lower_half": 1,
                    "divisor_partial": 1,
                    "divisor_quotient": 1,
                    "divisor_quotient2": 1,
                    "divisor_shifted_high": 1,
                    "partial_dividend": 1,
                    "quotient4": 1,
                    "quotient7": 1,
                    "remainder2": 1,
                    "remainder_temp": 1,
                    "temp1": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp4": 3,
                    "temp5": 2,
                    "temp7": 2,
                    "temp_4": 1,
                    "temp_5": 1,
                    "temp_divisor_high": 1,
                    "temp_divisor_lower": 1,
                    "temp_quotient3": 1,
                    "tmp3": 1,
                    "tmp4": 1,
                    "u_var9": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_00006974"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x00006ca0) */\n\nulonglong calculate_quotient_and_remainder_00006a14(uint dividend,uint dividend_high,uint divisor,uint divisor_high,uint *remainder)\n\n{\n  code *jump_table;\n  uint quotient;\n  int shift_amount;\n  uint temp1;\n  uint temp2;\n  uint quotient_high;\n  uint temp3;\n  uint divisor_low;\n  uint quotient3;\n  uint temp4;\n  bool carry_flag;\n  ulonglong result;\n  \n  if (divisor_high == 0) {\n    if (dividend_high < divisor) {\n      shift_amount = leading_zeros_count(divisor);\n      quotient_high = divisor;\n      if (shift_amount != 0) {\n        quotient_high = divisor << shift_amount;\n        dividend_high = dividend >> (0x20U - shift_amount & 0xff) | dividend_high << shift_amount;\n        dividend = dividend << shift_amount;\n      }\n      temp3 = quotient_high >> 0x10;\n      quotient3 = dividend_high / temp3;\n      temp1 = dividend >> 0x10 | (dividend_high - temp3 * quotient3) * 0x10000;\n      quotient = quotient3 * (quotient_high & 0xffff);\n      temp2 = quotient3;\n      if (temp1 <= quotient && quotient - temp1 != 0) {\n        carry_flag = check_carry(quotient_high,temp1);\n        temp1 = quotient_high + temp1;\n        temp2 = quotient3 - 1;\n        if ((carry_flag == false) && (temp1 <= quotient && quotient - temp1 != 0)) {\n          temp2 = quotient3 - 2;\n          temp1 = temp1 + quotient_high;\n        }\n      }\n      quotient3 = (temp1 - quotient) / temp3;\n      temp3 = dividend & 0xffff | ((temp1 - quotient) - temp3 * quotient3) * 0x10000;\n      temp1 = quotient3 * (quotient_high & 0xffff);\n      quotient = quotient3;\n      if (temp3 <= temp1 && temp1 - temp3 != 0) {\n        carry_flag = check_carry(quotient_high,temp3);\n        temp3 = quotient_high + temp3;\n        quotient = quotient3 - 1;\n        if ((carry_flag == false) && (temp3 <= temp1 && temp1 - temp3 != 0)) {\n          quotient = quotient3 - 2;\n          temp3 = temp3 + quotient_high;\n        }\n      }\n      temp3 = temp3 - temp1;\n      quotient = quotient | temp2 << 0x10;\n      quotient_high = 0;\n    }\n    else {\n      if (divisor == 0) {\n                    /* WARNING: Treating indirect jump as call */\n        jump_table = (code *)software_udf(0xff,0x6abc);\n        result = (*jump_table)();\n        return result;\n      }\n      shift_amount = leading_zeros_count(divisor);\n      if (shift_amount == 0) {\n        dividend_high = dividend_high - divisor;\n        temp4 = divisor >> 0x10;\n        divisor_low = divisor & 0xffff;\n        quotient_high = 1;\n        temp2 = divisor;\n      }\n      else {\n        temp2 = divisor << shift_amount;\n        temp4 = temp2 >> 0x10;\n        quotient = dividend_high >> (0x20U - shift_amount & 0xff);\n        quotient_high = dividend >> (0x20U - shift_amount & 0xff) | dividend_high << shift_amount;\n        temp1 = quotient / temp4;\n        divisor_low = temp2 & 0xffff;\n        quotient3 = quotient_high >> 0x10 | (quotient - temp4 * temp1) * 0x10000;\n        temp3 = temp1 * divisor_low;\n        dividend = dividend << shift_amount;\n        quotient = temp1;\n        if (quotient3 <= temp3 && temp3 - quotient3 != 0) {\n          carry_flag = check_carry(temp2,quotient3);\n          quotient3 = temp2 + quotient3;\n          quotient = temp1 - 1;\n          if ((carry_flag == false) && (quotient3 <= temp3 && temp3 - quotient3 != 0)) {\n            quotient = temp1 - 2;\n            quotient3 = quotient3 + temp2;\n          }\n        }\n        temp1 = (quotient3 - temp3) / temp4;\n        dividend_high = quotient_high & 0xffff | ((quotient3 - temp3) - temp4 * temp1) * 0x10000;\n        temp3 = temp1 * divisor_low;\n        quotient_high = temp1;\n        if (dividend_high <= temp3 && temp3 - dividend_high != 0) {\n          carry_flag = check_carry(temp2,dividend_high);\n          dividend_high = temp2 + dividend_high;\n          quotient_high = temp1 - 1;\n          if ((carry_flag == false) && (dividend_high <= temp3 && temp3 - dividend_high != 0)) {\n            quotient_high = temp1 - 2;\n            dividend_high = dividend_high + temp2;\n          }\n        }\n        dividend_high = dividend_high - temp3;\n        quotient_high = quotient_high | quotient << 0x10;\n      }\n      quotient3 = dividend_high / temp4;\n      temp3 = dividend >> 0x10 | (dividend_high - temp4 * quotient3) * 0x10000;\n      quotient = divisor_low * quotient3;\n      temp1 = quotient3;\n      if (temp3 <= quotient && quotient - temp3 != 0) {\n        carry_flag = check_carry(temp2,temp3);\n        temp3 = temp2 + temp3;\n        temp1 = quotient3 - 1;\n        if ((carry_flag == false) && (temp3 <= quotient && quotient - temp3 != 0)) {\n          temp1 = quotient3 - 2;\n          temp3 = temp3 + temp2;\n        }\n      }\n      quotient3 = (temp3 - quotient) / temp4;\n      temp3 = dividend & 0xffff | ((temp3 - quotient) - temp4 * quotient3) * 0x10000;\n      divisor_low = divisor_low * quotient3;\n      quotient = quotient3;\n      if (temp3 <= divisor_low && divisor_low - temp3 != 0) {\n        carry_flag = check_carry(temp2,temp3);\n        temp3 = temp2 + temp3;\n        quotient = quotient3 - 1;\n        if ((carry_flag == false) && (temp3 <= divisor_low && divisor_low - temp3 != 0)) {\n          quotient = quotient3 - 2;\n          temp3 = temp3 + temp2;\n        }\n      }\n      temp3 = temp3 - divisor_low;\n      quotient = quotient | temp1 << 0x10;\n    }\n    if (remainder != (uint *)0x0) {\n      *remainder = temp3 >> leading_zeros_count(divisor);\n      remainder[1] = 0;\n    }\n  }\n  else if (dividend_high < divisor_high) {\n    if (remainder != (uint *)0x0) {\n      *remainder = dividend;\n      remainder[1] = dividend_high;\n      return 0;\n    }\n    quotient = 0;\n    quotient_high = 0;\n  }\n  else {\n    shift_amount = leading_zeros_count(divisor_high);\n    if (shift_amount != 0) {\n      divisor_low = 0x20 - shift_amount;\n      temp1 = divisor >> (divisor_low & 0xff) | divisor_high << shift_amount;\n      temp4 = temp1 >> 0x10;\n      quotient = dividend_high >> (divisor_low & 0xff);\n      quotient_high = dividend >> (divisor_low & 0xff) | dividend_high << shift_amount;\n      temp3 = quotient / temp4;\n      temp2 = quotient_high >> 0x10 | (quotient - temp4 * temp3) * 0x10000;\n      quotient3 = temp3 * (temp1 & 0xffff);\n      dividend = dividend << shift_amount;\n      quotient = temp3;\n      if (temp2 <= quotient3 && quotient3 - temp2 != 0) {\n        carry_flag = check_carry(temp1,temp2);\n        temp2 = temp1 + temp2;\n        quotient = temp3 - 1;\n        if ((carry_flag == false) && (temp2 <= quotient3 && quotient3 - temp2 != 0)) {\n          quotient = temp3 - 2;\n          temp2 = temp2 + temp1;\n        }\n      }\n      temp3 = (temp2 - quotient3) / temp4;\n      temp2 = quotient_high & 0xffff | ((temp2 - quotient3) - temp4 * temp3) * 0x10000;\n      quotient3 = temp3 * (temp1 & 0xffff);\n      quotient_high = temp3;\n      if (temp2 <= quotient3 && quotient3 - temp2 != 0) {\n        carry_flag = check_carry(temp1,temp2);\n        temp2 = temp1 + temp2;\n        quotient_high = temp3 - 1;\n        if ((carry_flag == false) && (temp2 <= quotient3 && quotient3 - temp2 != 0)) {\n          quotient_high = temp3 - 2;\n          temp2 = temp2 + temp1;\n        }\n      }\n      quotient_high = quotient_high | quotient << 0x10;\n      result = (ulonglong)quotient_high * (ulonglong)(divisor << shift_amount);\n      if (CONCAT44(temp2 - quotient3,dividend) < result) {\n        result = result - CONCAT44(temp1,divisor << shift_amount);\n        quotient_high = quotient_high - 1;\n      }\n      if (remainder != (uint *)0x0) {\n        quotient = ((temp2 - quotient3) - (int)(result >> 0x20)) - (uint)(dividend < (uint)result);\n        *remainder = quotient << (divisor_low & 0xff) | dividend - (uint)result >> shift_amount;\n        remainder[1] = quotient >> shift_amount;\n      }\n      return (ulonglong)quotient_high;\n    }\n    if ((divisor_high < dividend_high) || (divisor <= dividend)) {\n      carry_flag = dividend < divisor;\n      dividend = dividend - divisor;\n      dividend_high = (dividend_high - divisor_high) - (uint)carry_flag;\n      quotient = 1;\n    }\n    else {\n      quotient = 0;\n    }\n    quotient_high = 0;\n    if (remainder != (uint *)0x0) {\n      *remainder = dividend;\n      remainder[1] = dividend_high;\n    }\n  }\n  return CONCAT44(quotient_high,quotient);\n}\n\n",
            "current_name": "calculate_quotient_and_remainder_00006a14",
            "entrypoint": "0x00006a14",
            "imported": false,
            "improved": true,
            "renaming": {
                "CARRY4": "check_carry",
                "FUN_00006a14": "calculate_quotient_and_remainder_00006a14",
                "LZCOUNT": "leading_zeros_count",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "bVar10": "carry_flag",
                "iVar2": "shift_amount",
                "param_1": "dividend",
                "param_2": "dividend_high",
                "param_3": "divisor",
                "param_4": "divisor_high",
                "param_5": "remainder",
                "uVar1": "quotient",
                "uVar11": "result",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "quotient_high",
                "uVar6": "temp3",
                "uVar7": "divisor_low",
                "uVar8": "quotient3",
                "uVar9": "temp4"
            },
            "skipped": false,
            "tags": []
        },
        "entry": {
            "called": [
                "FUN_00000f8c",
                "FUN_00000990",
                "FUN_0000459c",
                "FUN_00000db0",
                "FUN_00000e64"
            ],
            "calling": [],
            "code": "\nvoid entry(void)\n\n{\n  undefined4 uStack_18;\n  undefined4 *local_14;\n  dword *local_10;\n  Elf32_Rel *local_c;\n  \n  local_14 = &uStack_18;\n  local_10 = (dword *)&DAT_00007c60;\n  FUN_00000db0();\n  local_c = (Elf32_Rel *)&DAT_1fff0000;\n  while (local_c < &uStack_18) {\n    local_c->r_offset = 0xe7fee7fe;\n    local_c = (Elf32_Rel *)((int)local_c + 4);\n  }\n  local_c = Elf32_Rel_ARRAY_1fff0200;\n  while (local_c < (Elf32_Rel *)&DAT_1fff0350) {\n    local_c->r_offset = *local_10;\n    local_10 = local_10 + 1;\n    local_c = (Elf32_Rel *)&local_c->r_info;\n  }\n  local_c = (Elf32_Rel *)&DAT_1fff0350;\n  while (local_c < (undefined4 *)0x1fff0df0) {\n    local_c->r_offset = 0;\n    local_c = (Elf32_Rel *)((int)local_c + 4);\n  }\n  FUNC_00000990();\n  FUN_00000e64();\n  FUN_0000459c();\n  FUN_00000f8c();\n  return;\n}\n\n",
            "current_name": "entry",
            "entrypoint": "0x0000099c",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_00000410",
            "FUN_00000428",
            "FUN_00000490",
            "FUN_000004f2",
            "FUN_00000514",
            "FUN_00000534",
            "FUN_00000566",
            "FUN_0000058e",
            "FUN_000005ca",
            "FUN_00000610",
            "FUN_00000698",
            "FUN_00000738",
            "FUN_00000794",
            "FUN_000007dc",
            "FUN_000008b8",
            "FUN_00000900",
            "FUN_0000091c",
            "FUN_00000930",
            "FUN_0000093c",
            "FUN_00000a30",
            "FUN_00000cc0",
            "FUN_00000cd0",
            "FUN_00000cf0",
            "FUN_00000d0c",
            "FUN_00000d2a",
            "FUN_00000d44",
            "FUN_00000d76",
            "FUN_00000d9c",
            "FUN_00000db0",
            "FUN_00000dc0",
            "FUN_00000dcc",
            "FUN_00000df4",
            "FUN_00000e14",
            "FUN_00000e38",
            "FUN_00000e58",
            "FUN_00000e64",
            "FUN_00000ed8",
            "FUN_00000f04",
            "FUN_00000f8c",
            "FUN_00000fec",
            "FUN_00001034",
            "FUN_000010a0",
            "FUN_000010d4",
            "FUN_00001274",
            "FUN_0000129c",
            "FUN_000012b4",
            "FUN_000012e2",
            "FUN_00001318",
            "FUN_00001348",
            "FUN_00001360",
            "FUN_00001392",
            "FUN_000013b8",
            "FUN_00001448",
            "FUN_000014c4",
            "FUN_000015d0",
            "FUN_00001628",
            "FUN_00001688",
            "FUN_00001696",
            "FUN_000016c8",
            "FUN_000016ec",
            "FUN_00001710",
            "FUN_00001734",
            "FUN_00001748",
            "FUN_00001778",
            "FUN_000017dc",
            "FUN_0000182c",
            "FUN_000018bc",
            "FUN_0000191c",
            "FUN_00001960",
            "FUN_000019c0",
            "FUN_00001a18",
            "FUN_00001a3c",
            "FUN_00001a60",
            "FUN_00001ad4",
            "FUN_00001b10",
            "FUN_00001bb8",
            "FUN_00001c84",
            "FUN_00001cf0",
            "FUN_00001d08",
            "FUN_00001d3a",
            "FUN_00001d5e",
            "FUN_00001d80",
            "FUN_00001da2",
            "FUN_00001dc0",
            "FUN_00001ddc",
            "FUN_00001e0c",
            "FUN_00001e44",
            "FUN_00001ec4",
            "FUN_00001eea",
            "FUN_00001f80",
            "FUN_00001ff6",
            "FUN_00002028",
            "FUN_000020b8",
            "FUN_000020cc",
            "FUN_000020e0",
            "FUN_000020f4",
            "FUN_00002108",
            "FUN_0000211c",
            "FUN_00002270",
            "FUN_00002294",
            "FUN_000022be",
            "FUN_000022f0",
            "FUN_0000231c",
            "FUN_00002364",
            "FUN_00002396",
            "FUN_000023a4",
            "FUN_000023c8",
            "FUN_000023d0",
            "FUN_0000240c",
            "FUN_00002434",
            "FUN_000024bc",
            "FUN_00002538",
            "FUN_0000258c",
            "FUN_000025f4",
            "FUN_00002600",
            "FUN_00002624",
            "FUN_00002654",
            "FUN_00002690",
            "FUN_000026c0",
            "FUN_000026d8",
            "FUN_000026e4",
            "FUN_000026f0",
            "FUN_00002714",
            "FUN_00002744",
            "FUN_00002798",
            "FUN_000027b0",
            "FUN_0000281c",
            "FUN_0000285c",
            "FUN_00002894",
            "FUN_000028f0",
            "FUN_00002910",
            "FUN_0000294c",
            "FUN_00002970",
            "FUN_00002994",
            "FUN_00002a00",
            "FUN_00002a18",
            "FUN_00002a88",
            "FUN_00002b10",
            "FUN_00002d94",
            "FUN_00002e48",
            "FUN_00002e6c",
            "FUN_00002e9c",
            "FUN_00002eb4",
            "FUN_00002ecc",
            "FUN_00002f30",
            "FUN_00002f74",
            "FUN_00002fe0",
            "FUN_0000305c",
            "FUN_0000316c",
            "FUN_000031e0",
            "FUN_000031fc",
            "FUN_0000328c",
            "FUN_00003378",
            "FUN_000033c0",
            "FUN_000033f4",
            "FUN_00003444",
            "FUN_00003478",
            "FUN_000034c0",
            "FUN_00003524",
            "FUN_00003658",
            "FUN_00003688",
            "FUN_00003694",
            "FUN_00003810",
            "FUN_00003918",
            "FUN_000039e8",
            "FUN_00003d24",
            "FUN_00003d64",
            "FUN_00003d94",
            "FUN_00003dc4",
            "FUN_00003e58",
            "FUN_00003e9e",
            "FUN_00003ec4",
            "FUN_00003ff4",
            "FUN_00004042",
            "FUN_0000404c",
            "FUN_00004158",
            "FUN_000041d0",
            "FUN_000041f4",
            "FUN_00004248",
            "FUN_00004274",
            "FUN_00004280",
            "FUN_0000428c",
            "FUN_000042a4",
            "FUN_00004314",
            "FUN_000043a0",
            "FUN_00004418",
            "FUN_0000443c",
            "FUN_0000459c",
            "FUN_000045ee",
            "FUN_00004622",
            "FUN_00004634",
            "FUN_000047e4",
            "FUN_00004b34",
            "FUN_00004bd0",
            "FUN_00004c84",
            "FUN_00004cb4",
            "FUN_00004db8",
            "FUN_00004dc8",
            "FUN_00004dee",
            "FUN_00004e26",
            "FUN_00004e52",
            "FUN_00004e66",
            "FUN_00004f84",
            "FUN_00004f98",
            "FUN_000050e8",
            "FUN_000050f4",
            "FUN_00005100",
            "FUN_00005404",
            "FUN_000054a8",
            "FUN_00005584",
            "FUN_0000562c",
            "FUN_000056a0",
            "FUN_000056b0",
            "FUN_000056b8",
            "FUN_00005700",
            "FUN_00005780",
            "FUN_00005790",
            "FUN_0000579c",
            "FUN_000057a8",
            "FUN_000057d2",
            "FUN_000057f8",
            "FUN_00005a58",
            "FUN_00005b34",
            "FUN_00005e10",
            "FUN_00005e68",
            "FUN_00005ebc",
            "FUN_00005ecc",
            "FUN_00005edc",
            "FUN_00005fd8",
            "FUN_00005fec",
            "FUN_00005ff8",
            "FUN_00006010",
            "FUN_000060b0",
            "FUN_000060cc",
            "FUN_00006192",
            "FUN_000061cc",
            "FUN_000064bc",
            "FUN_0000656c",
            "FUN_00006768",
            "FUN_0000687c",
            "FUN_000068f0",
            "FUN_00006964",
            "FUN_00006974",
            "FUN_00006a14"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 779889
}