{
    "functions": {
        "FUN_0800010c": {
            "additional_data": {
                "DAT_200000f4": {
                    "data_flag": 1,
                    "flag": 15,
                    "flag_value": 1,
                    "flag_variable": 1
                },
                "FUN_0800010c": {
                    "initialize_data_if_needed": 1,
                    "initialize_flag": 26,
                    "initialize_flag_if_not_set": 1,
                    "initialize_flag_if_zero": 1,
                    "update_flag_if_zero": 1
                },
                "char_DAT_200000f4": {
                    "flag": 1
                },
                "param_1": {
                    "data": 1,
                    "flag_value": 2,
                    "initial_value": 1,
                    "input": 14,
                    "input_data": 1,
                    "input_param": 2,
                    "input_parameter": 1,
                    "input_value": 5,
                    "value": 3
                }
            },
            "called": [
                "FUN_0800a424"
            ],
            "calling": [],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initialize_flag_if_zero_0800010c(undefined4 input)\n\n{\n  if ((char)DAT_200000f4 == '\\0') {\n    DAT_200000f4._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "current_name": "initialize_flag_if_zero_0800010c",
            "entrypoint": "0x0800010c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800010c": "initialize_flag_if_zero_0800010c",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000178": {
            "additional_data": {
                "FUN_08000178": {
                    "find_end_of_string": 14,
                    "find_last_character": 1,
                    "find_null_terminated_string": 2,
                    "find_null_terminated_string_length": 1,
                    "find_null_terminator": 1,
                    "find_string_length": 3,
                    "get_end_of_string": 1,
                    "get_last_character_index": 1,
                    "get_string_length": 4,
                    "reverse_string": 3
                },
                "cVar1": {
                    "ch": 1,
                    "char_value": 1,
                    "character": 1,
                    "current_char": 18,
                    "current_char_value": 3,
                    "current_character": 2,
                    "current_character_value": 2
                },
                "param_1": {
                    "input_str": 1,
                    "input_string": 14,
                    "str": 8,
                    "string": 8
                },
                "pcVar2": {
                    "current_char": 1,
                    "next_char": 15,
                    "next_char_pointer": 1,
                    "next_char_ptr": 6,
                    "next_character": 6,
                    "next_character_pointer": 1
                },
                "pcVar3": {
                    "current_char": 8,
                    "current_char_pointer": 1,
                    "current_char_ptr": 4,
                    "current_character": 6,
                    "current_character_pointer": 1,
                    "current_position": 5,
                    "current_ptr": 2,
                    "next_char": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080032a2",
                "FUN_08002e44"
            ],
            "code": "\nchar * find_end_of_string_08000178(char *input_string)\n\n{\n  char current_char;\n  char *next_char;\n  char *current_char;\n  \n  current_char = input_string;\n  do {\n    next_char = current_char + 1;\n    current_char = *current_char;\n    current_char = next_char;\n  } while (current_char != '\\0');\n  return next_char + (-1 - (int)input_string);\n}\n\n",
            "current_name": "find_end_of_string_08000178",
            "entrypoint": "0x08000178",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000178": "find_end_of_string_08000178",
                "cVar1": "current_char",
                "param_1": "input_string",
                "pcVar2": "next_char",
                "pcVar3": "current_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000188": {
            "additional_data": {
                "0x3f": {
                    "interrupt_code": 1
                },
                "FUN_08000188": {
                    "execute_interrupt": 1,
                    "execute_software_interrupt": 5,
                    "execute_syscall": 1,
                    "execute_system_call": 7,
                    "execute_system_interrupt": 2,
                    "interrupt_function": 1,
                    "invoke_system_call": 1,
                    "invoke_system_interrupt": 1,
                    "issue_software_interrupt": 1,
                    "perform_interrupt": 1,
                    "perform_software_interrupt": 2,
                    "perform_system_call": 3,
                    "send_data": 1,
                    "send_software_interrupt": 1,
                    "software_interrupt_handler": 2,
                    "trigger_system_interrupt": 1
                },
                "software_interrupt": {
                    "call_interrupt": 1,
                    "execute_interrupt": 6,
                    "execute_system_call": 1,
                    "handle_software_interrupt": 1,
                    "interrupt": 1,
                    "invoke_interrupt": 2,
                    "invoke_system_call": 1,
                    "perform_interrupt": 1,
                    "perform_software_interrupt": 1,
                    "system_call": 1,
                    "trigger_binary_interrupt": 1,
                    "trigger_interrupt": 2,
                    "trigger_software_interrupt": 1,
                    "trigger_syscall": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800018c"
            ],
            "code": "\nvoid execute_system_call_08000188(void)\n\n{\n  execute_interrupt(0x3f);\n  return;\n}\n\n",
            "current_name": "execute_system_call_08000188",
            "entrypoint": "0x08000188",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000188": "execute_system_call_08000188",
                "software_interrupt": "execute_interrupt"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800018c": {
            "additional_data": {
                "FUN_0800018c": {
                    "execute_and_return_result": 1,
                    "execute_command": 1,
                    "execute_if_not_busy": 1,
                    "execute_secure_system_call": 1,
                    "execute_shell_command": 1,
                    "execute_system_call": 21,
                    "execute_system_call_and_check": 1,
                    "execute_system_call_if_not_busy": 1,
                    "execute_system_call_safely": 1,
                    "execute_system_call_wrapper": 1,
                    "perform_system_call": 1
                },
                "param_1": {
                    "arg1": 5,
                    "argument1": 1,
                    "argument_1": 1,
                    "command": 5,
                    "file_descriptor": 1,
                    "input": 2,
                    "input_param": 12,
                    "input_value": 1,
                    "sys_call_param": 1,
                    "system_call_code": 1,
                    "system_call_param": 1
                },
                "param_2": {
                    "arg2": 1,
                    "argument_2": 1,
                    "offset": 1,
                    "param2": 1,
                    "param_2": 1,
                    "unused_param": 1,
                    "unused_param1": 1
                },
                "param_3": {
                    "argument_3": 1,
                    "param3": 1,
                    "param_3": 1,
                    "unused_param": 2,
                    "unused_param2": 1
                },
                "param_4": {
                    "arg4": 5,
                    "argument4": 1,
                    "argument_4": 1,
                    "flag": 1,
                    "flags": 3,
                    "output": 1,
                    "output_param": 8,
                    "output_value": 1,
                    "param4": 1,
                    "param_4": 2,
                    "result_param": 1,
                    "return_value": 1,
                    "sys_call_flag": 1,
                    "system_call_param": 1,
                    "system_call_result": 1,
                    "timeout": 1,
                    "unused_param3": 1
                },
                "uVar1": {
                    "result": 20,
                    "return_value": 2,
                    "sys_call_result": 1,
                    "system_call_response": 1
                }
            },
            "called": [
                "FUN_08000188"
            ],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\nundefined4 execute_system_call_wrapper_0800018c(undefined4 input_param,undefined4 offset,undefined4 unused_param,undefined4 output_param)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000110 != 0) {\n    return 0;\n  }\n  result = execute_system_call_08000188(1,input_param,0,0,output_param);\n  return result;\n}\n\n",
            "current_name": "execute_system_call_wrapper_0800018c",
            "entrypoint": "0x0800018c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800018c": "execute_system_call_wrapper_0800018c",
                "param_1": "input_param",
                "param_2": "offset",
                "param_3": "unused_param",
                "param_4": "output_param",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000214": {
            "additional_data": {
                "DAT_0800a6cc": {
                    "param_string": 1,
                    "reference_string": 1
                },
                "DAT_0800a908": {
                    "character_array": 1,
                    "character_data": 1
                },
                "DAT_200001f0": {
                    "data_mapping": 1,
                    "data_mapping_array": 1,
                    "mapping_array": 1
                },
                "DAT_2000022c": {
                    "adjusted_value_array": 2,
                    "adjusted_values": 1
                },
                "DAT_200003d4": {
                    "data": 1,
                    "data_array": 1,
                    "offset_values": 1
                },
                "FUN_08000214": {
                    "handle_parameter": 1,
                    "process_and_store_data": 2,
                    "process_and_store_value": 3,
                    "process_and_update_data": 1,
                    "process_and_update_value": 3,
                    "process_data": 6,
                    "process_data_entry": 2,
                    "process_function": 2,
                    "process_input_data": 1,
                    "process_param": 2,
                    "process_parameter": 2,
                    "process_value": 6
                },
                "bVar1": {
                    "character_found": 1,
                    "flag": 1,
                    "found_character": 1,
                    "has_character": 1,
                    "is_character_found": 2,
                    "is_character_present": 2,
                    "is_character_valid": 6,
                    "is_valid": 14,
                    "is_valid_input": 1,
                    "should_update": 1,
                    "should_update_value": 1
                },
                "check_param_and_string_match_0800738a": {
                    "check_param_and_string_match": 14,
                    "check_param_string_match": 4,
                    "check_value_and_string_match": 1,
                    "compare_param_and_string": 1
                },
                "find_character_index_080036ac": {
                    "find_char_index": 2,
                    "find_character_index": 18
                },
                "get_value_from_offset_08002fa0": {
                    "get_offset_value": 2,
                    "get_value": 1,
                    "get_value_from_offset": 13,
                    "get_value_offset": 1,
                    "retrieve_value_from_offset": 1
                },
                "iVar2": {
                    "character_index": 7,
                    "condition": 1,
                    "lookup_result": 1,
                    "result": 20,
                    "result_value": 1,
                    "return_value": 1
                },
                "param_1": {
                    "data_index": 1,
                    "entry_index": 2,
                    "index": 13,
                    "input_index": 1,
                    "input_value": 2,
                    "offset_value": 1,
                    "param": 1,
                    "param_index": 1,
                    "parameter": 1,
                    "value": 2,
                    "value_index": 6
                },
                "param_2": {
                    "adjusted_value": 1,
                    "new_value": 5,
                    "param1": 1,
                    "param2": 1,
                    "param_2": 1,
                    "value": 19,
                    "value1": 2,
                    "value_1": 1
                },
                "param_3": {
                    "arg1": 2,
                    "data1": 1,
                    "offset": 2,
                    "offset1": 1,
                    "param1": 1,
                    "param2": 1,
                    "param3": 5,
                    "param3_index": 1,
                    "param_3": 13,
                    "param_value_1": 1,
                    "value2": 2,
                    "value_2": 1
                },
                "param_4": {
                    "arg2": 2,
                    "array": 1,
                    "data2": 1,
                    "offset2": 1,
                    "param2": 1,
                    "param3": 1,
                    "param4": 5,
                    "param4_index": 1,
                    "param_4": 13,
                    "param_value_2": 1,
                    "size": 1,
                    "value3": 2,
                    "value_3": 1
                },
                "process_param_and_value_080088e0": {
                    "process_param_and_value": 16,
                    "process_param_value": 3,
                    "process_value_and_param": 1
                },
                "store_value_at_offset_in_array_08002fc2": {
                    "store_offset_value": 1,
                    "store_offset_value_in_array": 1,
                    "store_value": 1,
                    "store_value_at_offset": 3,
                    "store_value_at_offset_in_array": 13,
                    "store_value_offset": 1
                },
                "update_adjusted_value_and_update_data_mapping_080026b0": {
                    "update_adjust_value": 1,
                    "update_adjusted_value": 3,
                    "update_adjusted_value_and_data_mapping": 5,
                    "update_adjusted_value_and_mapping": 1,
                    "update_adjusted_value_and_update_data_mapping": 8,
                    "update_and_map_data": 1
                }
            },
            "called": [
                "FUN_0800021a"
            ],
            "calling": [
                "FUN_08001cd0"
            ],
            "code": "\nvoid process_and_update_value_08000214(uint index,undefined4 value,undefined4 param_3,undefined4 param_4)\n\n{\n  bool is_valid;\n  int result;\n  \n  if (0x3b < (int)index) {\n    return;\n  }\n  result = get_value_from_offset(&DAT_200003d4,index,param_3,param_4,param_4);\n  if (result == 3) {\n    if (index < 0x3c) {\n      if ((&DAT_0800a908)[index] == -1) {\n        result = 0;\n      }\n      else {\n        result = find_character_index();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = find_character_index((int)(char)(&DAT_0800a908)[index]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = check_param_and_string_match((int)(char)(&DAT_0800a908)[index],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      process_param_and_value(index,value);\n    }\n    store_value_at_offset_in_array(&DAT_200003d4,index,value);\n  }\n  else if (result == 4) {\n    if (index < 0x3c) {\n      if ((&DAT_0800a908)[index] == -1) {\n        is_valid = false;\n      }\n      else {\n        result = find_character_index();\n        if (result == 0) {\n          is_valid = false;\n        }\n        else {\n          result = find_character_index((int)(char)(&DAT_0800a908)[index]);\n          if (result == 1) {\n            is_valid = false;\n          }\n          else {\n            is_valid = true;\n          }\n        }\n      }\n    }\n    else {\n      is_valid = false;\n    }\n    if (is_valid) {\n      update_adjusted_value_and_update_data_mapping(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[index] * 3,value);\n    }\n    store_value_at_offset_in_array(&DAT_200003d4,index,value);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "process_and_update_value_08000214",
            "entrypoint": "0x08000214",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000214": "process_and_update_value_08000214",
                "bVar1": "is_valid",
                "check_param_and_string_match_0800738a": "check_param_and_string_match",
                "find_character_index_080036ac": "find_character_index",
                "get_value_from_offset_08002fa0": "get_value_from_offset",
                "iVar2": "result",
                "param_1": "index",
                "param_2": "value",
                "process_param_and_value_080088e0": "process_param_and_value",
                "store_value_at_offset_in_array_08002fc2": "store_value_at_offset_in_array",
                "update_adjusted_value_and_update_data_mapping_080026b0": "update_adjusted_value_and_update_data_mapping"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800021a": {
            "additional_data": {
                "DAT_0800a6cc": {
                    "string_array": 1
                },
                "DAT_0800a908": {
                    "character_array": 1
                },
                "DAT_200001f0": {
                    "data_mapping_array": 1
                },
                "DAT_2000022c": {
                    "adjusted_value_array": 1
                },
                "DAT_200003d4": {
                    "data_array": 1,
                    "offset_data_array": 1,
                    "value_array": 1
                },
                "FUN_0800021a": {
                    "process_and_store_data": 2,
                    "process_and_store_value": 14,
                    "process_data": 1,
                    "process_param": 1,
                    "process_parameter": 2,
                    "process_value": 10,
                    "process_value_update": 1
                },
                "bVar1": {
                    "character_exists": 1,
                    "character_found": 1,
                    "flag": 1,
                    "found_character": 1,
                    "is_character_found": 1,
                    "is_character_valid": 2,
                    "is_match": 1,
                    "is_matching": 1,
                    "is_valid": 20,
                    "is_valid_value": 2
                },
                "byte": {
                    "byte_value": 1
                },
                "check_param_and_string_match_0800738a": {
                    "check_match": 2,
                    "check_param_and_string_match": 13,
                    "check_param_string_match": 2,
                    "is_match": 1,
                    "param_and_string_match_check": 1,
                    "param_string_match": 1
                },
                "find_character_index_080036ac": {
                    "find_char_index": 2,
                    "find_character_index": 17,
                    "find_index": 1
                },
                "get_value_from_offset_08002fa0": {
                    "get_data_from_offset": 1,
                    "get_data_value": 1,
                    "get_offset_value": 3,
                    "get_result_from_offset": 1,
                    "get_value": 2,
                    "get_value_from_array": 1,
                    "get_value_from_array_offset": 1,
                    "get_value_from_offset": 6
                },
                "iVar2": {
                    "character_index": 1,
                    "get_value_result": 1,
                    "index": 1,
                    "result": 26,
                    "value_check": 1,
                    "value_type": 1
                },
                "param_1": {
                    "data_index": 1,
                    "index": 16,
                    "offset": 5,
                    "parameter_index": 2,
                    "value_index": 7
                },
                "param_2": {
                    "new_value": 8,
                    "value": 23
                },
                "param_3": {
                    "arg3": 1,
                    "offset": 1,
                    "offset1": 1,
                    "offset_1": 1,
                    "offset_value": 1,
                    "param3": 6,
                    "param_1_value": 1,
                    "param_3": 18,
                    "unknown": 1
                },
                "param_4": {
                    "arg4": 1,
                    "array_size": 1,
                    "offset2": 2,
                    "offset_2": 1,
                    "param4": 6,
                    "param_2_value": 1,
                    "param_4": 18,
                    "unknown": 1
                },
                "process_param_and_value_080088e0": {
                    "process_param_and_value": 15,
                    "process_param_value": 1,
                    "process_parameter_and_value": 2,
                    "process_parameter_value": 1,
                    "process_value": 1
                },
                "store_value_at_offset_in_array_08002fc2": {
                    "store_data_at_offset_in_array": 1,
                    "store_data_value_at_offset_in_array": 1,
                    "store_offset_value_in_array": 1,
                    "store_value": 1,
                    "store_value_at_array_offset": 1,
                    "store_value_at_offset": 5,
                    "store_value_at_offset_in_array": 9,
                    "store_value_in_array": 1
                },
                "update_adjusted_value_and_update_data_mapping_080026b0": {
                    "update_adjusted_value": 1,
                    "update_adjusted_value_and_data_mapping": 11,
                    "update_adjusted_value_and_mapping": 4,
                    "update_adjusted_value_and_update_data_mapping": 1,
                    "update_mapping": 1,
                    "update_value": 1,
                    "update_value_and_data_mapping": 1
                }
            },
            "called": [
                "FUN_080036ac",
                "FUN_0800738a",
                "FUN_080026b0",
                "FUN_08002fa0",
                "FUN_080088e0",
                "FUN_08002fc2"
            ],
            "calling": [
                "FUN_08000214"
            ],
            "code": "\nvoid process_and_store_value_0800021a(uint index,undefined4 value,undefined4 param_3,undefined4 param_4)\n\n{\n  bool is_valid;\n  int result;\n  \n  result = get_value_from_offset(&DAT_200003d4,index,param_3,param_4,param_4);\n  if (result == 3) {\n    if (index < 0x3c) {\n      if ((&DAT_0800a908)[index] == -1) {\n        result = 0;\n      }\n      else {\n        result = find_character_index();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = find_character_index((int)(char)(&DAT_0800a908)[index]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = check_param_and_string_match((int)(char)(&DAT_0800a908)[index],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      process_param_and_value(index,value);\n    }\n    store_value_at_offset_in_array(&DAT_200003d4,index,value);\n  }\n  else if (result == 4) {\n    if (index < 0x3c) {\n      if ((&DAT_0800a908)[index] == -1) {\n        is_valid = false;\n      }\n      else {\n        result = find_character_index();\n        if (result == 0) {\n          is_valid = false;\n        }\n        else {\n          result = find_character_index((int)(char)(&DAT_0800a908)[index]);\n          if (result == 1) {\n            is_valid = false;\n          }\n          else {\n            is_valid = true;\n          }\n        }\n      }\n    }\n    else {\n      is_valid = false;\n    }\n    if (is_valid) {\n      update_adjusted_value_and_data_mapping(&DAT_2000022c + (uint)(byte_value)(&DAT_200001f0)[index] * 3,value);\n    }\n    store_value_at_offset_in_array(&DAT_200003d4,index,value);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "process_and_store_value_0800021a",
            "entrypoint": "0x0800021a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800021a": "process_and_store_value_0800021a",
                "bVar1": "is_valid",
                "byte": "byte_value",
                "check_param_and_string_match_0800738a": "check_param_and_string_match",
                "find_character_index_080036ac": "find_character_index",
                "get_value_from_offset_08002fa0": "get_value_from_offset",
                "iVar2": "result",
                "param_1": "index",
                "param_2": "value",
                "process_param_and_value_080088e0": "process_param_and_value",
                "store_value_at_offset_in_array_08002fc2": "store_value_at_offset_in_array",
                "update_adjusted_value_and_update_data_mapping_080026b0": "update_adjusted_value_and_data_mapping"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000488": {
            "additional_data": {
                "DAT_20000114": {
                    "bitmask": 2,
                    "data_bit_array": 1,
                    "data_flags": 1
                },
                "DAT_20000171": {
                    "flag": 1,
                    "is_data_decoded": 1,
                    "is_decoding_enabled": 1,
                    "should_process_data": 1
                },
                "DAT_200003d4": {
                    "data_buffer": 3
                },
                "FUN_08000488": {
                    "update_bit": 3,
                    "update_bit_and_process_data": 1,
                    "update_bit_value": 2,
                    "update_bit_vector": 1,
                    "update_bitmask": 3,
                    "update_bitwise_value": 1,
                    "update_data": 15,
                    "update_data_and_process": 1,
                    "update_data_bit": 1,
                    "update_data_flags": 1,
                    "update_data_mask": 1,
                    "update_flag_and_process_data": 1
                },
                "decode_and_process_data_08008880": {
                    "decode_and_process_data": 8
                },
                "param_1": {
                    "bit_index": 4,
                    "bit_position": 3,
                    "data_index": 2,
                    "index": 17,
                    "new_value": 1,
                    "position": 2,
                    "value": 1,
                    "value_index": 1
                },
                "param_2": {
                    "bit_value": 6,
                    "flag": 16,
                    "is_set": 1,
                    "toggle_bit": 1,
                    "update_flag": 3,
                    "value": 4
                },
                "process_and_decode_data_08002ef2": {
                    "process_and_decode_data": 8
                },
                "uVar1": {
                    "data": 1,
                    "data_value": 1,
                    "decoded_data": 11,
                    "decoded_value": 9,
                    "processed_data": 1,
                    "result": 5,
                    "return_value": 1
                }
            },
            "called": [
                "FUN_08002ef2",
                "FUN_08008880"
            ],
            "calling": [
                "FUN_080005f8"
            ],
            "code": "\nvoid update_bit_and_process_data_08000488(uint index,int flag)\n\n{\n  undefined4 decoded_data;\n  \n  if ((int)index < 0xe) {\n    if (flag == 0) {\n      DAT_20000114 = DAT_20000114 & ~(1 << (index & 0xff));\n      return;\n    }\n    DAT_20000114 = 1 << (index & 0xff) | DAT_20000114;\n    if (DAT_20000171 == '\\0') {\n      decoded_data = decode_and_process_data();\n      process_and_decode_data(&DAT_200003d4,index,decoded_data);\n      return;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "update_bit_and_process_data_08000488",
            "entrypoint": "0x08000488",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000488": "update_bit_and_process_data_08000488",
                "decode_and_process_data_08008880": "decode_and_process_data",
                "param_1": "index",
                "param_2": "flag",
                "process_and_decode_data_08002ef2": "process_and_decode_data",
                "uVar1": "decoded_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080004d4": {
            "additional_data": {
                "FUN_080004d4": {
                    "initialize_data": 13,
                    "initialize_data_if_needed": 1,
                    "initialize_data_if_one": 1,
                    "initialize_data_if_param1_equals_1": 1,
                    "initialize_data_if_param1_is_1": 6,
                    "initialize_data_if_param_1_equals_1": 1,
                    "initialize_data_if_param_1_is_1": 2,
                    "initialize_data_if_param_equals_one": 1,
                    "initialize_data_if_param_is_1": 1,
                    "initialize_data_if_param_is_one": 1,
                    "initialize_if_input_is_one": 1,
                    "initialize_if_param_1_is_1": 1,
                    "initialize_specific_data": 1
                },
                "iVar1": {
                    "count": 2,
                    "counter": 12,
                    "index": 1,
                    "iteration": 1,
                    "iteration_count": 2,
                    "iterator": 1,
                    "loop_counter": 10,
                    "loop_variable": 1
                },
                "param_1": {
                    "check_value": 1,
                    "condition": 3,
                    "condition_check": 1,
                    "flag": 7,
                    "input_flag": 1,
                    "input_value": 1,
                    "is_first_parameter_one": 1,
                    "is_one": 1,
                    "is_param1": 2,
                    "is_param1_one": 2,
                    "is_param_1": 1,
                    "is_param_1_one": 1,
                    "is_param_one": 1,
                    "option": 1,
                    "param": 1,
                    "param1": 1,
                    "param_value": 1,
                    "status": 2,
                    "status_flag": 1,
                    "value": 1
                },
                "param_2": {
                    "comparison_value": 1,
                    "flag": 3,
                    "input_value": 1,
                    "param2": 4,
                    "param2_value": 1,
                    "param_2": 1,
                    "param_2_value": 1,
                    "value": 16,
                    "value_check": 1,
                    "value_to_check": 2
                },
                "puVar2": {
                    "data_address": 1,
                    "data_pointer": 5,
                    "data_ptr": 23,
                    "ptr_to_initialized_data": 1
                }
            },
            "called": [
                "FUN_08002580"
            ],
            "calling": [],
            "code": "\nvoid initialize_data_if_param1_is_1_080004d4(int flag,int value)\n\n{\n  int counter;\n  undefined *data_ptr;\n  \n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    data_ptr = &DAT_2000022c;\n    for (counter = 0xb; -1 < counter; counter = counter + -1) {\n      initialize_data_08002580(data_ptr);\n      data_ptr = data_ptr + 3;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_if_param1_is_1_080004d4",
            "entrypoint": "0x080004d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080004d4": "initialize_data_if_param1_is_1_080004d4",
                "iVar1": "counter",
                "param_1": "flag",
                "param_2": "value",
                "puVar2": "data_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000500": {
            "additional_data": {
                "DAT_2000011c": {
                    "condition": 3,
                    "counter": 1,
                    "deck_index": 1,
                    "flag": 1,
                    "flag_value": 1,
                    "last_servo_index": 1,
                    "lower_bound_index": 1,
                    "prev_servo_index": 1,
                    "servo_count": 1,
                    "stack_top": 2,
                    "temp_index": 1,
                    "used_servo_index": 1
                },
                "DAT_2000011f": {
                    "counter_array": 1,
                    "decrement_value": 1,
                    "flag_array": 1,
                    "index_data": 1,
                    "servo_count_array": 1,
                    "servo_data_array": 1,
                    "servo_mapping_stack": 1,
                    "stack_array": 2,
                    "temp_data": 1,
                    "tmp_array": 1
                },
                "DAT_200001ed": {
                    "max_servo": 1,
                    "max_servo_count": 1,
                    "max_servos": 3,
                    "num_servos": 2,
                    "num_servos_attached": 1,
                    "prev_number_of_servos": 1,
                    "servo_count": 5,
                    "servos_attached_count": 1
                },
                "DAT_200001f0": {
                    "servo_array": 5,
                    "servo_data": 2,
                    "servo_data_array": 1,
                    "servo_mapping": 1,
                    "servos_array": 1
                },
                "DAT_2000022c": {
                    "data_and_flags": 2,
                    "data_and_flags_array": 2,
                    "data_array": 3,
                    "servo_data": 1,
                    "servo_data_buffer": 1
                },
                "DAT_200003d4": {
                    "data": 1,
                    "error_message": 5,
                    "error_string": 1,
                    "servo_data": 1
                },
                "FUN_08000500": {
                    "assign_servo_sockets": 1,
                    "handle_servo": 1,
                    "process_and_update_servo_data": 1,
                    "process_servo_data": 4,
                    "update_servo_data": 24
                },
                "byte": {
                    "byte_mask": 1,
                    "byte_type": 1
                },
                "param_1": {
                    "index": 2,
                    "servo_index": 29
                },
                "param_2": {
                    "data_count": 1,
                    "data_length": 10,
                    "data_size": 12,
                    "param2": 3,
                    "param_a": 1,
                    "update_flag": 3,
                    "update_value1": 1
                },
                "param_3": {
                    "decode_flag": 2,
                    "flag": 17,
                    "flag_count": 1,
                    "flag_size": 1,
                    "flag_value": 1,
                    "flags": 2,
                    "param3": 3,
                    "param_b": 1,
                    "param_flag": 1,
                    "size": 1,
                    "update_value2": 1
                },
                "param_4": {
                    "data": 1,
                    "extra_param": 1,
                    "message": 3,
                    "param": 2,
                    "param4": 4,
                    "param_4": 3,
                    "param_c": 1,
                    "reserved": 1,
                    "status": 1,
                    "undefined": 4,
                    "undefined_param": 1,
                    "undefined_parm": 1,
                    "unk_param": 1,
                    "unknown_param": 2,
                    "unknown_parameter": 2,
                    "unused": 1,
                    "unused_param": 2
                },
                "process_and_decode_data_08002f14": {
                    "log_and_decode_error_message": 1,
                    "process_and_decode_data": 8,
                    "process_decode_data": 1,
                    "process_decode_error": 1,
                    "process_decode_msg": 1,
                    "process_error": 5,
                    "process_error_data": 1,
                    "process_error_message": 5,
                    "process_error_msg": 1
                },
                "update_data_and_flags_080025ac": {
                    "update_data_and_flags": 7,
                    "update_data_and_flags1": 2,
                    "update_data_and_flags_a": 3,
                    "update_data_and_flags_case1": 1,
                    "update_data_and_flags_large": 1,
                    "update_data_and_flags_with_data": 2,
                    "update_data_and_flags_with_data_length": 2,
                    "update_data_and_flags_with_data_size": 1,
                    "update_data_and_flags_with_length": 2,
                    "update_data_and_flags_with_size": 1,
                    "update_data_with_length_flag": 1,
                    "update_data_with_size_and_flag": 1,
                    "update_servo_data_and_flags": 2
                },
                "update_data_and_flags_08002634": {
                    "update_data": 1,
                    "update_data_and_flags": 8,
                    "update_data_and_flags2": 3,
                    "update_data_and_flags_b": 3,
                    "update_data_and_flags_case2": 1,
                    "update_data_and_flags_small": 1,
                    "update_data_and_flags_without_data": 2,
                    "update_data_and_flags_without_data_size": 1,
                    "update_data_and_flags_without_length": 1,
                    "update_data_flags": 1,
                    "update_data_without_size_and_flag": 1,
                    "update_servo_data_and_flags": 1,
                    "update_servo_data_only": 1
                }
            },
            "called": [
                "FUN_08002634",
                "FUN_08002f14",
                "FUN_080025ac"
            ],
            "calling": [
                "FUN_080005f8",
                "FUN_08001cd0"
            ],
            "code": "\nvoid process_and_update_servo_data_08000500(int servo_index,int data_size,int flag,undefined4 param4)\n\n{\n  if (0xb < DAT_200001ed) {\n    process_and_decode_data(&DAT_200003d4,\"Max servos attached\",flag,param4,param4);\n    return;\n  }\n  if (DAT_2000011c == 0) {\n    (&DAT_200001f0)[servo_index] = DAT_200001ed;\n    DAT_200001ed = DAT_200001ed + 1;\n  }\n  else {\n    (&DAT_200001f0)[servo_index] = (&DAT_2000011f)[DAT_2000011c];\n    DAT_2000011c = DAT_2000011c - 1;\n  }\n  if ((0 < data_size) && (0 < flag)) {\n    update_data_and_flags(&DAT_2000022c + (uint)(byte_mask)(&DAT_200001f0)[servo_index] * 3,servo_index,data_size,flag);\n    return;\n  }\n  update_data_and_flags(&DAT_2000022c + (uint)(byte_mask)(&DAT_200001f0)[servo_index] * 3,servo_index);\n  return;\n}\n\n",
            "current_name": "process_and_update_servo_data_08000500",
            "entrypoint": "0x08000500",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000500": "process_and_update_servo_data_08000500",
                "byte": "byte_mask",
                "param_1": "servo_index",
                "param_2": "data_size",
                "param_3": "flag",
                "param_4": "param4",
                "process_and_decode_data_08002f14": "process_and_decode_data",
                "update_data_and_flags_080025ac": "update_data_and_flags",
                "update_data_and_flags_08002634": "update_data_and_flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000588": {
            "additional_data": {
                "0xff": {
                    "default_data_value": 1
                },
                "DAT_2000011c": {
                    "count": 5,
                    "counter": 19,
                    "index": 1,
                    "insert_index": 1,
                    "insertion_index": 1,
                    "num_elements": 1,
                    "num_updates": 1,
                    "processed_index": 1
                },
                "DAT_2000011f": {
                    "insert_array": 1,
                    "modified_array": 1,
                    "processed_array": 1,
                    "processed_data": 2,
                    "reversed_data_array": 1,
                    "temp_array": 1,
                    "updated_byte_array": 1,
                    "updated_bytes": 1,
                    "updated_data_array": 1,
                    "updated_indexes": 1
                },
                "DAT_200001ed": {
                    "condition": 1,
                    "current_byte_value": 1,
                    "current_element": 2,
                    "current_index": 4,
                    "current_value": 4,
                    "data": 1,
                    "data_marker": 1,
                    "flag": 1,
                    "last_index": 1,
                    "last_input_data": 1,
                    "last_item": 1,
                    "previous_value": 2,
                    "selected_value": 1,
                    "target_byte": 5,
                    "target_index": 1,
                    "target_value": 3
                },
                "DAT_200001f0": {
                    "array2": 1,
                    "byte_array": 4,
                    "data_array": 2,
                    "index_array": 2,
                    "input_data": 1,
                    "original_data_array": 1,
                    "value": 1
                },
                "DAT_2000022c": {
                    "array1": 1,
                    "byte_data": 1,
                    "data_array": 5,
                    "data_buffer": 1
                },
                "FUN_08000588": {
                    "handle_byte_data": 1,
                    "process_and_modify_data": 4,
                    "process_and_update_data": 5,
                    "process_byte": 1,
                    "process_byte_data": 10,
                    "process_data": 10
                },
                "PTR_08002644": {
                    "process_byte_data": 1
                },
                "byte_data": {
                    "byte_array": 1
                },
                "param_1": {
                    "data_index": 5,
                    "index": 19,
                    "input": 1,
                    "input_index": 6
                },
                "process_byte_data_08002644": {
                    "process_byte_data": 1
                }
            },
            "called": [
                "FUN_08002644"
            ],
            "calling": [
                "FUN_080005f8",
                "FUN_08001cd0"
            ],
            "code": "\nvoid process_byte_data_08000588(int index)\n\n{\n  process_byte_data_08000588(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[index] * 3);\n  if (((&DAT_200001f0)[index] == DAT_200001ed) && (DAT_200001ed != '\\0')) {\n    DAT_200001ed = DAT_200001ed + -1;\n  }\n  else if (DAT_200001ed != '\\0') {\n    DAT_2000011c = DAT_2000011c + 1;\n    (&DAT_2000011f)[DAT_2000011c] = (&DAT_200001f0)[index];\n  }\n  (&DAT_200001f0)[index] = 0xff;\n  return;\n}\n\n",
            "current_name": "process_byte_data_08000588",
            "entrypoint": "0x08000588",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000588": "process_byte_data_08000588",
                "byte_data": "byte_array",
                "param_1": "index",
                "process_byte_data_08002644": "process_byte_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080005e0": {
            "additional_data": {
                "DAT_20000004": {
                    "constant_value": 1,
                    "data_byte": 2,
                    "data_limit": 1,
                    "default_byte": 2,
                    "default_data": 1,
                    "default_data_value": 5,
                    "default_value": 5,
                    "flag": 1,
                    "initial_value": 6,
                    "value": 1
                },
                "DAT_20000170": {
                    "counter": 5,
                    "data_count": 3,
                    "data_counter": 4,
                    "data_flag": 9,
                    "data_size": 1,
                    "flag": 1,
                    "initialized_flag": 1,
                    "some_data": 1
                },
                "FUN_080005e0": {
                    "initialize_data": 27,
                    "initialize_flags": 1,
                    "initialize_settings": 1,
                    "reset_data": 2
                },
                "VAR_20000004": {
                    "default_byte_value": 1
                },
                "VAR_20000170": {
                    "data_flag": 1
                },
                "ff": {
                    "initial_value": 1
                },
                "initializedValue": {
                    "0": 1
                },
                "maximumValue": {
                    "0xff": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080005f8",
                "FUN_08000aec"
            ],
            "code": "\nvoid initialize_data_080005e0(void)\n\n{\n  DAT_20000170 = 0;\n  DAT_20000004 = 0xff;\n  return;\n}\n\n",
            "current_name": "initialize_data_080005e0",
            "entrypoint": "0x080005e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080005e0": "initialize_data_080005e0"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080005f8": {
            "additional_data": {
                "DAT_20000170": {
                    "character_data": 1
                },
                "DAT_200003d4": {
                    "data_offset": 1,
                    "offset_data": 1
                },
                "FUN_080005f8": {
                    "initialize_and_process_data": 1,
                    "process_data": 2,
                    "process_function": 1,
                    "process_pin": 3,
                    "process_pin_action": 1,
                    "process_pin_data": 6,
                    "process_pin_function": 7,
                    "process_pin_mode": 2,
                    "process_pin_operation": 3,
                    "reverse_and_control_data": 1,
                    "update_pin_mode": 1,
                    "update_pin_mode_and_value": 1
                },
                "bVar3": {
                    "bool_result": 1,
                    "bool_var": 1,
                    "check": 1,
                    "flag": 5,
                    "is_allowed": 1,
                    "is_condition_true": 1,
                    "is_set": 1,
                    "is_true": 2,
                    "is_valid": 17,
                    "valid": 1
                },
                "cVar2": {
                    "char_result": 1,
                    "char_value": 5,
                    "character": 13,
                    "character_value": 3,
                    "character_var": 1,
                    "flag": 4,
                    "is_enabled": 1,
                    "pin_char": 1,
                    "special_char": 1,
                    "value2": 1
                },
                "check_param_and_string_match_0800738a": {
                    "check_param_and_string_match": 9
                },
                "decode_and_set_param_value_08008a24": {
                    "decode_and_set_param_value": 8
                },
                "find_character_index_080036ac": {
                    "find_character_index": 9,
                    "find_index": 1
                },
                "get_bit_from_data_080026f8": {
                    "get_bit": 1,
                    "get_bit_from_data": 9
                },
                "get_value_from_offset_08002fa0": {
                    "get_value_from_offset": 3
                },
                "iVar1": {
                    "index": 1,
                    "pin_value": 7,
                    "result": 1,
                    "value": 21,
                    "value1": 1
                },
                "initialize_data_080005e0": {
                    "initialize_data": 10
                },
                "param_1": {
                    "index": 1,
                    "input_value": 2,
                    "param": 1,
                    "pin": 7,
                    "pin_index": 8,
                    "pin_number": 11,
                    "value": 1
                },
                "param_2": {
                    "action_type": 1,
                    "mode": 20,
                    "operation": 1,
                    "pin_mode": 9
                },
                "process_and_decode_data_08002f14": {
                    "process_and_decode_data": 10
                },
                "process_and_update_servo_data_08000500": {
                    "process_and_update_servo_data": 9
                },
                "process_byte_data_08000588": {
                    "process_byte_data": 10
                },
                "process_param_and_value_080088e0": {
                    "process_param_and_value": 9
                },
                "reverse_control_and_update_flags_08008990": {
                    "reverse_control_and_update_flags": 10
                },
                "store_value_at_offset_in_array_08002fc2": {
                    "store_value_at_offset_in_array": 8
                },
                "uVar4": {
                    "adjusted_index": 1,
                    "adjusted_pin": 1,
                    "bit_index": 1,
                    "bit_value": 1,
                    "index": 2,
                    "indexed_pin": 1,
                    "masked_index": 2,
                    "offset": 14,
                    "pin_offset": 1,
                    "shifted_index": 2,
                    "shifted_pin_index": 1,
                    "shifted_pin_number": 2,
                    "temp": 1,
                    "trimmed_pin_number": 1
                },
                "update_bit_and_process_data_08000488": {
                    "update_bit_and_process_data": 7
                },
                "update_character_value_08002fa8": {
                    "update_character_value": 10
                }
            },
            "called": [
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_0800738a",
                "FUN_08002fa0",
                "FUN_08002f14",
                "FUN_08000588",
                "FUN_08002fc2",
                "FUN_08000500",
                "FUN_080026f8",
                "FUN_08000488",
                "FUN_08002fa8",
                "FUN_080088e0",
                "FUN_08008990",
                "FUN_08008a24"
            ],
            "calling": [
                "FUN_08001cd0",
                "FUN_08000aec",
                "FUN_08000a64"
            ],
            "code": "\nvoid process_pin_function_080005f8(uint pin_number,int mode)\n\n{\n  int value;\n  char character;\n  bool is_valid;\n  uint offset;\n  \n  value = get_value_from_offset(&DAT_200003d4,pin_number);\n  if (value != 0x7f) {\n    value = get_value_from_offset(&DAT_200003d4,pin_number);\n    if (value == 6) {\n      if (DAT_20000170 == '\\0') {\n        character = '\\0';\n      }\n      else {\n        character = DAT_20000170;\n        if (mode == 6) {\n          character = '\\0';\n        }\n      }\n    }\n    else {\n      character = '\\0';\n    }\n    if (character != '\\0') {\n      initialize_data();\n    }\n    if (pin_number < 0x3c) {\n      if ((&DAT_0800a908)[pin_number] == -1) {\n        is_valid = false;\n      }\n      else {\n        value = find_character_index();\n        if (value == 0) {\n          is_valid = false;\n        }\n        else {\n          value = find_character_index((int)(char)(&DAT_0800a908)[pin_number]);\n          if (value == 1) {\n            is_valid = false;\n          }\n          else if (mode == 4) {\n            is_valid = false;\n          }\n          else {\n            is_valid = true;\n          }\n        }\n      }\n    }\n    else {\n      is_valid = false;\n    }\n    if (is_valid) {\n      if ((byte)(&DAT_200001f0)[pin_number] < 0xc) {\n        value = get_bit_from_data(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pin_number] * 3);\n      }\n      else {\n        value = 0;\n      }\n      if (value != 0) {\n        process_byte_data(pin_number);\n      }\n    }\n    offset = pin_number - 0x2e & 0xff;\n    if (offset < 0xe) {\n      if (pin_number < 0x3c) {\n        value = (int)(char)(&DAT_0800a908)[pin_number];\n      }\n      else {\n        value = -1;\n      }\n      value = find_character_index(value);\n      if (value == 0) {\n        is_valid = false;\n      }\n      else {\n        if (pin_number < 0x3c) {\n          value = (int)(char)(&DAT_0800a908)[pin_number];\n        }\n        else {\n          value = -1;\n        }\n        value = find_character_index(value);\n        if (value == 1) {\n          is_valid = false;\n        }\n        else {\n          is_valid = true;\n        }\n      }\n    }\n    else {\n      is_valid = false;\n    }\n    if (is_valid) {\n      update_bit_and_process_data(offset,mode == 2);\n    }\n    if (pin_number < 0x3c) {\n      if ((&DAT_0800a908)[pin_number] == -1) {\n        is_valid = false;\n      }\n      else {\n        value = find_character_index();\n        if (value == 0) {\n          is_valid = false;\n        }\n        else {\n          value = find_character_index((int)(char)(&DAT_0800a908)[pin_number]);\n          if (value == 1) {\n            is_valid = false;\n          }\n          else {\n            is_valid = true;\n          }\n        }\n      }\n    }\n    else {\n      is_valid = false;\n    }\n    if (is_valid) {\n      if ((mode == 0) || (mode == 0xb)) {\n        (&DAT_20000174)[pin_number >> 3] = (&DAT_20000174)[pin_number >> 3] | (byte)(1 << (pin_number & 7));\n      }\n      else {\n        (&DAT_20000174)[pin_number >> 3] = (&DAT_20000174)[pin_number >> 3] & ~(byte)(1 << (pin_number & 7));\n      }\n    }\n    store_value_at_offset_in_array(&DAT_200003d4,pin_number,0);\n    switch(mode) {\n    case 0:\n      if (pin_number < 0x3c) {\n        if ((&DAT_0800a908)[pin_number] == -1) {\n          is_valid = false;\n        }\n        else {\n          value = find_character_index();\n          if (value == 0) {\n            is_valid = false;\n          }\n          else {\n            value = find_character_index((int)(char)(&DAT_0800a908)[pin_number]);\n            if (value == 1) {\n              is_valid = false;\n            }\n            else {\n              is_valid = true;\n            }\n          }\n        }\n      }\n      else {\n        is_valid = false;\n      }\n      if (is_valid) {\n        reverse_control_and_update_flags(pin_number,0);\n        update_character_value(&DAT_200003d4,pin_number,0);\n        return;\n      }\n      break;\n    case 1:\n      if (pin_number < 0x3c) {\n        if ((&DAT_0800a908)[pin_number] == -1) {\n          is_valid = false;\n        }\n        else {\n          value = find_character_index();\n          if (value == 0) {\n            is_valid = false;\n          }\n          else {\n            value = find_character_index((int)(char)(&DAT_0800a908)[pin_number]);\n            if (value == 1) {\n              is_valid = false;\n            }\n            else {\n              is_valid = true;\n            }\n          }\n        }\n      }\n      else {\n        is_valid = false;\n      }\n      if (is_valid) {\n        value = get_value_from_offset(&DAT_200003d4,pin_number);\n        if (value == 3) {\n          decode_and_set_param_value(pin_number,0);\n        }\n        reverse_control_and_update_flags(pin_number,1);\n        update_character_value(&DAT_200003d4,pin_number,1);\n        return;\n      }\n      break;\n    case 2:\n      if (offset < 0xe) {\n        if (pin_number < 0x3c) {\n          value = (int)(char)(&DAT_0800a908)[pin_number];\n        }\n        else {\n          value = -1;\n        }\n        value = find_character_index(value);\n        if (value == 0) {\n          is_valid = false;\n        }\n        else {\n          if (pin_number < 0x3c) {\n            value = (int)(char)(&DAT_0800a908)[pin_number];\n          }\n          else {\n            value = -1;\n          }\n          value = find_character_index(value);\n          if (value == 1) {\n            is_valid = false;\n          }\n          else {\n            is_valid = true;\n          }\n        }\n      }\n      else {\n        is_valid = false;\n      }\n      if (is_valid) {\n        if (pin_number < 0x3c) {\n          if ((&DAT_0800a908)[pin_number] == -1) {\n            is_valid = false;\n          }\n          else {\n            value = find_character_index();\n            if (value == 0) {\n              is_valid = false;\n            }\n            else {\n              value = find_character_index((int)(char)(&DAT_0800a908)[pin_number]);\n              if (value == 1) {\n                is_valid = false;\n              }\n            }\n          }\n        }\n        else {\n          is_valid = false;\n        }\n        if (is_valid) {\n          reverse_control_and_update_flags(pin_number,0);\n        }\n        update_character_value(&DAT_200003d4,pin_number,2);\n        return;\n      }\n      break;\n    case 3:\n      if (pin_number < 0x3c) {\n        if ((&DAT_0800a908)[pin_number] == -1) {\n          value = 0;\n        }\n        else {\n          value = find_character_index();\n          if (value == 0) {\n            value = 0;\n          }\n          else {\n            value = find_character_index((int)(char)(&DAT_0800a908)[pin_number]);\n            if (value == 1) {\n              value = 0;\n            }\n            else {\n              value = check_param_and_string_match((int)(char)(&DAT_0800a908)[pin_number],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        value = 0;\n      }\n      if (value != 0) {\n        reverse_control_and_update_flags(pin_number,1);\n        process_param_and_value(pin_number,0);\n        update_character_value(&DAT_200003d4,pin_number,3);\n        return;\n      }\n      break;\n    case 4:\n      if (pin_number < 0x3c) {\n        if ((&DAT_0800a908)[pin_number] == -1) {\n          is_valid = false;\n        }\n        else {\n          value = find_character_index();\n          if (value == 0) {\n            is_valid = false;\n          }\n          else {\n            value = find_character_index((int)(char)(&DAT_0800a908)[pin_number]);\n            if (value == 1) {\n              is_valid = false;\n            }\n            else {\n              is_valid = true;\n            }\n          }\n        }\n      }\n      else {\n        is_valid = false;\n      }\n      if (is_valid) {\n        update_character_value(&DAT_200003d4,pin_number,4);\n        if (((byte)(&DAT_200001f0)[pin_number] != 0xff) &&\n           (value = get_bit_from_data(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pin_number] * 3),\n           value != 0)) {\n          is_valid = false;\n        }\n        if (is_valid) {\n          process_and_update_servo_data(pin_number,0xffffffff);\n          return;\n        }\n      }\n      break;\n    default:\n      process_and_decode_data(&DAT_200003d4,\"Unknown pin mode\");\n      break;\n    case 6:\n      if (pin_number < 0x3c) {\n        if ((&DAT_0800a908)[pin_number] == -1) {\n          value = 0;\n        }\n        else {\n          value = find_character_index();\n          if (value == 0) {\n            value = 0;\n          }\n          else {\n            value = find_character_index((int)(char)(&DAT_0800a908)[pin_number]);\n            if (value == 1) {\n              value = 0;\n            }\n            else {\n              value = check_param_and_string_match((int)(char)(&DAT_0800a908)[pin_number],&DAT_0800a69c);\n              if (value == 0) {\n                value = check_param_and_string_match((int)(char)(&DAT_0800a908)[pin_number],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        value = 0;\n      }\n      if (value != 0) {\n        update_character_value(&DAT_200003d4,pin_number,6);\n        return;\n      }\n      break;\n    case 10:\n      break;\n    case 0xb:\n      if (pin_number < 0x3c) {\n        if ((&DAT_0800a908)[pin_number] == -1) {\n          is_valid = false;\n        }\n        else {\n          value = find_character_index();\n          if (value == 0) {\n            is_valid = false;\n          }\n          else {\n            value = find_character_index((int)(char)(&DAT_0800a908)[pin_number]);\n            if (value == 1) {\n              is_valid = false;\n            }\n            else {\n              is_valid = true;\n            }\n          }\n        }\n      }\n      else {\n        is_valid = false;\n      }\n      if (is_valid) {\n        reverse_control_and_update_flags(pin_number,2);\n        update_character_value(&DAT_200003d4,pin_number,0xb);\n        store_value_at_offset_in_array(&DAT_200003d4,pin_number,1);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_pin_function_080005f8",
            "entrypoint": "0x080005f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080005f8": "process_pin_function_080005f8",
                "bVar3": "is_valid",
                "cVar2": "character",
                "check_param_and_string_match_0800738a": "check_param_and_string_match",
                "decode_and_set_param_value_08008a24": "decode_and_set_param_value",
                "find_character_index_080036ac": "find_character_index",
                "get_bit_from_data_080026f8": "get_bit_from_data",
                "get_value_from_offset_08002fa0": "get_value_from_offset",
                "iVar1": "value",
                "initialize_data_080005e0": "initialize_data",
                "param_1": "pin_number",
                "param_2": "mode",
                "process_and_decode_data_08002f14": "process_and_decode_data",
                "process_and_update_servo_data_08000500": "process_and_update_servo_data",
                "process_byte_data_08000588": "process_byte_data",
                "process_param_and_value_080088e0": "process_param_and_value",
                "reverse_control_and_update_flags_08008990": "reverse_control_and_update_flags",
                "store_value_at_offset_in_array_08002fc2": "store_value_at_offset_in_array",
                "uVar4": "offset",
                "update_bit_and_process_data_08000488": "update_bit_and_process_data",
                "update_character_value_08002fa8": "update_character_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000a64": {
            "additional_data": {
                "DAT_20000170": {
                    "flag": 6,
                    "is_initialized": 1
                },
                "FUN_08000a64": {
                    "check_pins_and_initialize_i2c": 1,
                    "initialize_and_setup_i2c_peripheral": 2,
                    "initialize_and_setup_pin_functions": 2,
                    "initialize_i2c_and_process_pins": 1,
                    "initialize_i2c_peripheral": 1,
                    "initialize_pin_functions": 3,
                    "process_and_initialize": 1,
                    "process_and_initialize_i2c": 1,
                    "process_and_initialize_pin_function": 1,
                    "process_character_search": 1,
                    "process_data": 1,
                    "process_loop": 1,
                    "process_pin_function": 9,
                    "process_pin_functions": 2,
                    "process_pin_information": 1,
                    "process_pin_initialization": 1,
                    "process_pins": 2
                },
                "check_param_and_string_match_0800738a": {
                    "check_match": 1,
                    "check_matching_params": 1,
                    "check_param_and_string_match": 9,
                    "check_param_string_match": 3,
                    "check_parameter_and_string_match": 3,
                    "check_parameter_string_match": 3
                },
                "find_character_index_080036ac": {
                    "find_character_index": 18,
                    "find_index": 2
                },
                "iVar1": {
                    "character_index": 6,
                    "index": 10,
                    "matching_status": 1,
                    "result": 14
                },
                "initialize_and_setup_i2c_peripheral_08002a26": {
                    "initialize_and_setup_i2c_peripheral": 7,
                    "initialize_i2c_peripheral": 8,
                    "initialize_setup_i2c_peripheral": 2,
                    "setup_i2c_peripheral": 1
                },
                "process_pin_function_080005f8": {
                    "execute_pin_function": 2,
                    "process_pin": 3,
                    "process_pin_function": 14
                },
                "uVar2": {
                    "character_index": 1,
                    "counter": 2,
                    "index": 8,
                    "iteration": 1,
                    "iterator": 1,
                    "loop_counter": 2,
                    "loop_variable": 1,
                    "pin": 5,
                    "pin_index": 9,
                    "u_index": 1
                }
            },
            "called": [
                "FUN_080036ac",
                "FUN_0800738a",
                "FUN_080005f8",
                "FUN_08002a26"
            ],
            "calling": [
                "FUN_08001cd0"
            ],
            "code": "\nvoid process_and_initialize_pin_function_08000a64(void)\n\n{\n  int result;\n  uint pin_index;\n  \n  for (pin_index = 0; pin_index < 0x3c; pin_index = pin_index + 1 & 0xff) {\n    if (pin_index < 0x3c) {\n      if ((&DAT_0800a908)[pin_index] == -1) {\n        result = 0;\n      }\n      else {\n        result = find_character_index();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = find_character_index((int)(char)(&DAT_0800a908)[pin_index]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = check_param_and_string_match((int)(char)(&DAT_0800a908)[pin_index],&DAT_0800a69c);\n            if (result == 0) {\n              result = check_param_and_string_match((int)(char)(&DAT_0800a908)[pin_index],&DAT_0800a66c);\n            }\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      process_pin_function(pin_index,6);\n    }\n  }\n  DAT_20000170 = 1;\n  initialize_i2c_peripheral(&DAT_20000314);\n  return;\n}\n\n",
            "current_name": "process_and_initialize_pin_function_08000a64",
            "entrypoint": "0x08000a64",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000a64": "process_and_initialize_pin_function_08000a64",
                "check_param_and_string_match_0800738a": "check_param_and_string_match",
                "find_character_index_080036ac": "find_character_index",
                "iVar1": "result",
                "initialize_and_setup_i2c_peripheral_08002a26": "initialize_i2c_peripheral",
                "process_pin_function_080005f8": "process_pin_function",
                "uVar2": "pin_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000aec": {
            "additional_data": {
                "DAT_0800a908": {
                    "character_data": 1
                },
                "DAT_20000114": {
                    "counter1": 1,
                    "counter_1": 1,
                    "flag3": 1,
                    "unused_variable_1": 1,
                    "variable1": 1
                },
                "DAT_2000011c": {
                    "counter2": 1,
                    "counter_2": 1,
                    "flag4": 1,
                    "unused_variable_2": 1,
                    "variable2": 1
                },
                "DAT_20000170": {
                    "flag2": 1,
                    "should_initialize": 1,
                    "should_initialize_data": 1
                },
                "DAT_20000171": {
                    "flag": 2,
                    "is_initialized": 2
                },
                "DAT_20000174": {
                    "array2": 1
                },
                "DAT_20000180": {
                    "array3": 1
                },
                "DAT_200001e8": {
                    "array1": 1
                },
                "DAT_200001ed": {
                    "counter3": 1,
                    "counter_3": 1,
                    "flag5": 1,
                    "unused_variable_3": 1,
                    "variable3": 1
                },
                "DAT_200001f0": {
                    "array4": 1
                },
                "FUN_08000aec": {
                    "initialize": 2,
                    "initialize_data": 1,
                    "initialize_game": 2,
                    "initialize_game_state": 1,
                    "initialize_objects": 1,
                    "initialize_pin_configuration": 1,
                    "initialize_pin_configurations": 1,
                    "initialize_pin_data": 1,
                    "initialize_pin_function": 9,
                    "initialize_pin_functions": 3,
                    "initialize_pin_processing": 1,
                    "initialize_pin_settings": 1,
                    "initialize_pin_statuses": 1,
                    "initialize_pins": 6
                },
                "bVar1": {
                    "is_character_found": 1,
                    "is_character_valid": 3,
                    "is_pin_enabled": 1,
                    "is_pin_valid": 1,
                    "is_special_character": 3,
                    "is_valid": 6,
                    "is_valid_char": 1,
                    "is_valid_character": 9,
                    "is_valid_configuration": 1,
                    "is_valid_pin": 5
                },
                "find_character_index_080036ac": {
                    "find_char_index": 1,
                    "find_character_index": 19,
                    "get_character_index": 1
                },
                "iVar2": {
                    "char_index": 5,
                    "character_index": 25,
                    "pin_index": 1
                },
                "initialize_data_080005e0": {
                    "initialize_data": 18,
                    "initialize_data_structure": 1,
                    "initialize_data_structures": 1,
                    "initialize_game_data": 1
                },
                "process_pin_function_080005f8": {
                    "process_pin_function": 23
                },
                "uVar3": {
                    "i": 3,
                    "index": 16,
                    "iteration": 2,
                    "loop_counter": 6,
                    "loop_index": 2,
                    "pin_index": 1,
                    "u_var3_index": 1
                }
            },
            "called": [
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_080005f8"
            ],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\nvoid initialize_pin_function_08000aec(void)\n\n{\n  bool is_valid_character;\n  int character_index;\n  uint index;\n  \n  DAT_20000171 = 1;\n  if (DAT_20000170 != '\\0') {\n    initialize_data();\n  }\n  for (index = 0; index < 5; index = index + 1 & 0xff) {\n    (&DAT_200001e8)[index] = 0;\n    (&DAT_20000174)[index] = 0;\n    (&DAT_20000180)[index] = 0;\n  }\n  for (index = 0; index < 0x3c; index = index + 1 & 0xff) {\n    if ((index - 0x2e & 0xff) < 0xe) {\n      if (index < 0x3c) {\n        character_index = (int)(char)(&DAT_0800a908)[index];\n      }\n      else {\n        character_index = -1;\n      }\n      character_index = find_character_index(character_index);\n      if (character_index == 0) {\n        is_valid_character = false;\n      }\n      else {\n        if (index < 0x3c) {\n          character_index = (int)(char)(&DAT_0800a908)[index];\n        }\n        else {\n          character_index = -1;\n        }\n        character_index = find_character_index(character_index);\n        if (character_index == 1) {\n          is_valid_character = false;\n        }\n        else {\n          is_valid_character = true;\n        }\n      }\n    }\n    else {\n      is_valid_character = false;\n    }\n    if (is_valid_character) {\n      process_pin_function(index,2);\n    }\n    else {\n      if ((((index < 0x3c) && ((&DAT_0800a908)[index] != -1)) &&\n          (character_index = find_character_index(), character_index != 0)) &&\n         (character_index = find_character_index((int)(char)(&DAT_0800a908)[index]), character_index != 1)) {\n        is_valid_character = true;\n      }\n      if (is_valid_character) {\n        process_pin_function(index,1);\n      }\n    }\n    (&DAT_200001f0)[index] = 0xff;\n  }\n  DAT_20000114 = 0;\n  DAT_2000011c = 0;\n  DAT_200001ed = 0;\n  DAT_20000171 = 0;\n  return;\n}\n\n",
            "current_name": "initialize_pin_function_08000aec",
            "entrypoint": "0x08000aec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000aec": "initialize_pin_function_08000aec",
                "bVar1": "is_valid_character",
                "find_character_index_080036ac": "find_character_index",
                "iVar2": "character_index",
                "initialize_data_080005e0": "initialize_data",
                "process_pin_function_080005f8": "process_pin_function",
                "uVar3": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000be8": {
            "additional_data": {
                "FUN_08000be8": {
                    "decode_and_process_data": 8,
                    "decode_data": 1,
                    "process_and_decode_data": 20,
                    "process_data_and_decode": 1,
                    "process_data_and_update": 1
                },
                "param_1": {
                    "data_index": 4,
                    "data_offset": 1,
                    "index": 19,
                    "input_index": 6,
                    "input_offset": 1
                },
                "param_2": {
                    "bit_mask": 2,
                    "bitmask": 3,
                    "data_mask": 1,
                    "input_mask": 3,
                    "mask": 22
                },
                "param_3": {
                    "check": 2,
                    "condition": 11,
                    "condition_flag": 1,
                    "conditional_check": 1,
                    "flag": 16
                },
                "param_4": {
                    "additional_info": 1,
                    "additional_param": 1,
                    "argument": 1,
                    "data": 1,
                    "other_param": 1,
                    "param": 13,
                    "param_4": 7,
                    "parameter": 3,
                    "unknown_param": 1,
                    "unknown_parameter": 1,
                    "value": 1
                },
                "puVar1": {
                    "data1_ptr": 1,
                    "data_array": 2,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "data_pointer1": 2,
                    "data_pointer_1": 1,
                    "data_ptr": 10,
                    "data_ptr1": 1,
                    "data_ptr_1": 2,
                    "data_start": 3,
                    "output_ptr": 1,
                    "pointer1": 1,
                    "pointer_to_data_1": 1,
                    "ptr_data1": 2,
                    "ptr_data_1": 1,
                    "source_data_ptr": 1
                },
                "puVar2": {
                    "data2_ptr": 1,
                    "data_pointer2": 1,
                    "data_pointer_2": 1,
                    "data_ptr2": 1,
                    "data_ptr_2": 2,
                    "decoded_data": 6,
                    "decoded_data_ptr": 1,
                    "filtered_data": 4,
                    "filtered_data_pointer": 1,
                    "filtered_data_ptr": 2,
                    "masked_byte": 1,
                    "masked_data": 2,
                    "masked_output_ptr": 1,
                    "masked_value": 1,
                    "modified_data_ptr": 1,
                    "pointer2": 1,
                    "pointer_to_data_2": 1,
                    "ptr_data2": 2,
                    "ptr_data_2": 1
                }
            },
            "called": [
                "FUN_08002efe"
            ],
            "calling": [
                "FUN_08000ef8"
            ],
            "code": "\nvoid process_data_and_decode_08000be8(int index,uint mask,int flag,undefined4 param)\n\n{\n  undefined1 *data_ptr;\n  undefined1 *decoded_data;\n  \n  data_ptr = &DAT_20000174;\n  decoded_data = (undefined1 *)((byte)(&DAT_20000174)[index] & mask);\n  if ((flag != 0) ||\n     (data_ptr = (undefined1 *)(uint)(byte)(&DAT_20000180)[index], decoded_data != data_ptr)) {\n    process_data_and_decode_08000be8_08002efe(&DAT_200003d4,index,decoded_data,data_ptr,param);\n    (&DAT_20000180)[index] = (char)decoded_data;\n  }\n  return;\n}\n\n",
            "current_name": "process_data_and_decode_08000be8",
            "entrypoint": "0x08000be8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000be8": "process_data_and_decode_08000be8",
                "param_1": "index",
                "param_2": "mask",
                "param_3": "flag",
                "param_4": "param",
                "puVar1": "data_ptr",
                "puVar2": "decoded_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08000ef8": {
            "additional_data": {
                "DAT_20000174": {
                    "byte0": 1,
                    "data1": 1
                },
                "DAT_20000175": {
                    "byte2": 1,
                    "data2": 1
                },
                "DAT_20000176": {
                    "byte3": 1,
                    "data3": 1
                },
                "DAT_20000177": {
                    "byte4": 1,
                    "data4": 1
                },
                "DAT_20000178": {
                    "byte5": 1,
                    "data5": 1
                },
                "DAT_200001e8": {
                    "flag0": 1
                },
                "DAT_200001e9": {
                    "flag1": 1
                },
                "DAT_200001ea": {
                    "flag2": 1
                },
                "DAT_200001eb": {
                    "flag3": 1
                },
                "DAT_200001ec": {
                    "flag4": 1
                },
                "FUN_08000ef8": {
                    "decode_and_process_data": 3,
                    "decode_flags": 1,
                    "process_and_decode_data": 21,
                    "process_bit_flags": 1,
                    "process_character_data": 1,
                    "process_data_and_decode": 2,
                    "process_flags": 1,
                    "process_flags_and_decode_data": 1
                },
                "bVar1": {
                    "byte1": 1,
                    "byte_flag": 1,
                    "byte_flag_1": 1,
                    "byte_val1": 1,
                    "byte_value": 3,
                    "byte_value1": 1,
                    "character_1": 1,
                    "character_flag": 2,
                    "character_flags": 1,
                    "character_value_1": 1,
                    "data1": 2,
                    "data_byte": 4,
                    "data_byte1": 1,
                    "data_byte_1": 1,
                    "data_flag": 1,
                    "data_flag_1": 1,
                    "flag": 1,
                    "flag_byte": 2,
                    "input1": 1,
                    "input_data1": 1,
                    "input_flag": 1
                },
                "bVar2": {
                    "character_value_2": 1,
                    "data_byte_2": 1
                },
                "bVar3": {
                    "bit_flag": 1,
                    "bit_value": 1,
                    "bool_flag": 2,
                    "bool_value": 1,
                    "boolean_value": 1,
                    "boolean_value_1": 1,
                    "character_found": 1,
                    "condition": 2,
                    "condition1": 1,
                    "data_flag_2": 1,
                    "flag": 5,
                    "is_bit_enabled": 1,
                    "is_bit_set": 3,
                    "is_flag_true": 1,
                    "is_set": 1,
                    "is_true": 6
                },
                "bVar4": {
                    "bit_flags": 2,
                    "bit_value": 2,
                    "bool_value2": 1,
                    "boolean_value_2": 1,
                    "byte_flag": 1,
                    "decoded_data": 1,
                    "flag_result": 2,
                    "result": 17,
                    "result1": 1,
                    "result_flag": 1
                },
                "check_and_return_bit_value_08008a6c": {
                    "check_and_return_bit_value": 10,
                    "check_and_return_value": 1,
                    "check_bit_value": 2
                },
                "find_character_index_080036ac": {
                    "find_character_index": 12,
                    "find_index": 1
                },
                "iVar1": {
                    "character_index": 1,
                    "index_value_1": 1
                },
                "iVar2": {
                    "character_index": 1,
                    "index": 26,
                    "index_value_2": 1,
                    "result": 1
                },
                "process_data_and_decode_08000be8": {
                    "process_and_decode": 3,
                    "process_and_decode_data": 5,
                    "process_data_and_decode": 5
                }
            },
            "called": [
                "FUN_080036ac",
                "FUN_08000be8",
                "FUN_08008a6c"
            ],
            "calling": [
                "FUN_080022f8"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001ade) */\n/* WARNING: Removing unreachable block (ram,0x08001a4a) */\n/* WARNING: Removing unreachable block (ram,0x080019b6) */\n/* WARNING: Removing unreachable block (ram,0x08001912) */\n/* WARNING: Removing unreachable block (ram,0x08001866) */\n/* WARNING: Removing unreachable block (ram,0x080017d2) */\n/* WARNING: Removing unreachable block (ram,0x0800173e) */\n/* WARNING: Removing unreachable block (ram,0x0800169a) */\n/* WARNING: Removing unreachable block (ram,0x080015ee) */\n/* WARNING: Removing unreachable block (ram,0x0800155a) */\n/* WARNING: Removing unreachable block (ram,0x08001490) */\n/* WARNING: Removing unreachable block (ram,0x080014a2) */\n/* WARNING: Removing unreachable block (ram,0x080014e4) */\n/* WARNING: Removing unreachable block (ram,0x080014b0) */\n/* WARNING: Removing unreachable block (ram,0x080014ba) */\n/* WARNING: Removing unreachable block (ram,0x080014e8) */\n/* WARNING: Removing unreachable block (ram,0x080014c2) */\n/* WARNING: Removing unreachable block (ram,0x080014b6) */\n/* WARNING: Removing unreachable block (ram,0x08001496) */\n/* WARNING: Removing unreachable block (ram,0x08001430) */\n/* WARNING: Removing unreachable block (ram,0x08001376) */\n/* WARNING: Removing unreachable block (ram,0x080012e2) */\n/* WARNING: Removing unreachable block (ram,0x0800124e) */\n/* WARNING: Removing unreachable block (ram,0x080011b8) */\n/* WARNING: Removing unreachable block (ram,0x08001100) */\n/* WARNING: Removing unreachable block (ram,0x0800106c) */\n/* WARNING: Removing unreachable block (ram,0x08000fd8) */\n/* WARNING: Removing unreachable block (ram,0x08000f42) */\n/* WARNING: Removing unreachable block (ram,0x08000f8e) */\n/* WARNING: Removing unreachable block (ram,0x08001022) */\n/* WARNING: Removing unreachable block (ram,0x080010b6) */\n/* WARNING: Removing unreachable block (ram,0x0800114a) */\n/* WARNING: Removing unreachable block (ram,0x08001204) */\n/* WARNING: Removing unreachable block (ram,0x08001298) */\n/* WARNING: Removing unreachable block (ram,0x0800132c) */\n/* WARNING: Removing unreachable block (ram,0x080013c0) */\n/* WARNING: Removing unreachable block (ram,0x0800147c) */\n/* WARNING: Removing unreachable block (ram,0x08001510) */\n/* WARNING: Removing unreachable block (ram,0x080015a4) */\n/* WARNING: Removing unreachable block (ram,0x08001638) */\n/* WARNING: Removing unreachable block (ram,0x080016f4) */\n/* WARNING: Removing unreachable block (ram,0x08001788) */\n/* WARNING: Removing unreachable block (ram,0x0800181c) */\n/* WARNING: Removing unreachable block (ram,0x080018b0) */\n/* WARNING: Removing unreachable block (ram,0x0800196c) */\n/* WARNING: Removing unreachable block (ram,0x08001a00) */\n/* WARNING: Removing unreachable block (ram,0x08001a94) */\n/* WARNING: Removing unreachable block (ram,0x08001b28) */\n/* WARNING: Removing unreachable block (ram,0x080014ca) */\n\nvoid process_flags_and_decode_data_08000ef8(void)\n\n{\n  byte data_byte;\n  int index;\n  bool is_true;\n  byte result;\n  \n  data_byte = DAT_20000174;\n  if (DAT_200001e8 != '\\0') {\n    index = find_character_index();\n    if (index == 0) {\n      result = 0;\n    }\n    else {\n      index = find_character_index(3);\n      if (index == 1) {\n        result = 0;\n      }\n      else if ((data_byte & 1) == 0) {\n        result = 0;\n      }\n      else {\n        index = check_and_return_bit_value(0);\n        if (index == 0) {\n          result = 0;\n        }\n        else {\n          result = 1;\n        }\n      }\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(2);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 2) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(1);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 2;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(10);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 4) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(2);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 4;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0x13);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 8) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(3);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 8;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0x15);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 0x10) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(4);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 0x10;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0x14);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 0x20) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(5);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 0x20;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0x1a);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 0x40) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(6);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 0x40;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(8);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 0x80) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(7);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 0x80;\n    }\n    process_and_decode_data(0,result);\n  }\n  data_byte = DAT_20000175;\n  if (DAT_200001e9 != '\\0') {\n    index = find_character_index();\n    if (index == 0) {\n      result = 0;\n    }\n    else {\n      index = find_character_index(9);\n      if (index == 1) {\n        result = 0;\n      }\n      else if ((data_byte & 1) == 0) {\n        result = 0;\n      }\n      else {\n        index = check_and_return_bit_value(8);\n        if (index == 0) {\n          result = 0;\n        }\n        else {\n          result = 1;\n        }\n      }\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0x27);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 2) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(9);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 2;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0x16);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 4) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(10);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 4;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(7);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 8) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0xb);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 8;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(6);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 0x10) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0xc);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 0x10;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(5);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 0x20) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0xd);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 0x20;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0x19);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 0x40) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0xe);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 0x40;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0x18);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 0x80) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0xf);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 0x80;\n    }\n    process_and_decode_data(1,result,0);\n  }\n  data_byte = DAT_20000176;\n  if (DAT_200001ea != '\\0') {\n    index = find_character_index();\n    if (index == 0) {\n      result = 0;\n    }\n    else {\n      index = find_character_index(0x2a);\n      if (index == 1) {\n        result = 0;\n      }\n      else if ((data_byte & 1) == 0) {\n        result = 0;\n      }\n      else {\n        index = check_and_return_bit_value(0x10);\n        if (index == 0) {\n          result = 0;\n        }\n        else {\n          result = 1;\n        }\n      }\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0x2c);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 2) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0x11);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 2;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0xd);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 8) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0x13);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 8;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0xe);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 0x10) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0x14);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 0x10;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0xf);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 0x20) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0x15);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 0x20;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0x17);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 0x40) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0x16);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 0x40;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0x2d);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 0x80) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0x17);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 0x80;\n    }\n    process_and_decode_data(2,result,0);\n  }\n  data_byte = DAT_20000177;\n  if (DAT_200001eb != '\\0') {\n    index = find_character_index();\n    if (index == 0) {\n      result = 0;\n    }\n    else {\n      index = find_character_index(0x2e);\n      if (index == 1) {\n        result = 0;\n      }\n      else if ((data_byte & 1) == 0) {\n        result = 0;\n      }\n      else {\n        index = check_and_return_bit_value(0x18);\n        if (index == 0) {\n          result = 0;\n        }\n        else {\n          result = 1;\n        }\n      }\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0x2f);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 2) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0x19);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 2;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0x30);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 4) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0x1a);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 4;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0x31);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 8) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0x1b);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 8;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0x22);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 0x10) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0x1c);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 0x10;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0x23);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 0x20) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0x1d);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 0x20;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0x2b);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 0x40) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0x1e);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 0x40;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0x32);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 0x80) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0x1f);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 0x80;\n    }\n    process_and_decode_data(3,result,0);\n  }\n  data_byte = DAT_20000178;\n  if (DAT_200001ec != '\\0') {\n    index = find_character_index();\n    if (index == 0) {\n      result = 0;\n    }\n    else {\n      index = find_character_index(0x29);\n      if (index == 1) {\n        result = 0;\n      }\n      else if ((data_byte & 1) == 0) {\n        result = 0;\n      }\n      else {\n        index = check_and_return_bit_value(0x20);\n        if (index == 0) {\n          result = 0;\n        }\n        else {\n          result = 1;\n        }\n      }\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0x28);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 2) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0x21);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 2;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0x26);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 4) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0x22);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 4;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0x25);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 8) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0x23);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 8;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0xc);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 0x10) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0x24);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 0x10;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0xb);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 0x20) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0x25);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 0x20;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0x1c);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 0x40) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0x26);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 0x40;\n    }\n    index = find_character_index();\n    if (index == 0) {\n      is_true = false;\n    }\n    else {\n      index = find_character_index(0x1b);\n      if (index == 1) {\n        is_true = false;\n      }\n      else if ((data_byte & 0x80) == 0) {\n        is_true = false;\n      }\n      else {\n        index = check_and_return_bit_value(0x27);\n        if (index == 0) {\n          is_true = false;\n        }\n        else {\n          is_true = true;\n        }\n      }\n    }\n    if (is_true) {\n      result = result | 0x80;\n    }\n    process_and_decode_data(4,result,0);\n  }\n  return;\n}\n\n",
            "current_name": "process_flags_and_decode_data_08000ef8",
            "entrypoint": "0x08000ef8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08000ef8": "process_flags_and_decode_data_08000ef8",
                "bVar1": "data_byte",
                "bVar3": "is_true",
                "bVar4": "result",
                "check_and_return_bit_value_08008a6c": "check_and_return_bit_value",
                "find_character_index_080036ac": "find_character_index",
                "iVar2": "index",
                "process_data_and_decode_08000be8": "process_and_decode_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001b48": {
            "additional_data": {
                "DAT_200003d4": {
                    "data": 1
                },
                "FUN_08001b48": {
                    "initialize_and_execute_firmware": 1,
                    "initialize_and_process_firmware": 1,
                    "initialize_device": 1,
                    "initialize_firmware": 18,
                    "initialize_firmware_components": 1,
                    "initialize_gateway": 7,
                    "initialize_real_firmware": 1
                },
                "LAB_080001a8_1": {
                    "label_3": 1
                },
                "LAB_080002ec_1": {
                    "label_1": 1
                },
                "LAB_08000c18_1": {
                    "label_2": 1
                },
                "execute_system_call_wrapper_0800018c": {
                    "execute_system_call": 3,
                    "execute_system_call_wrapper": 27
                },
                "extract_filename_from_path_08002e44": {
                    "extract_file_name_from_path": 2,
                    "extract_filename": 1,
                    "extract_filename_from_path": 25,
                    "get_file_name_from_path": 1
                },
                "initialize_and_process_serial_data_08003048": {
                    "init_and_process_serial_data": 1,
                    "initialize_and_process_serial_data": 28
                },
                "initialize_pin_function_08000aec": {
                    "init_pin_function": 1,
                    "initialize_pin_function": 29
                },
                "set_param_3_08002f94": {
                    "set_param3": 8,
                    "set_param_3": 7,
                    "set_param_three": 2,
                    "set_param_value": 1,
                    "set_parameter3": 2,
                    "set_parameter_three": 1,
                    "set_third_parameter": 1
                },
                "update_data_if_param_is_max_08002f84": {
                    "update_data_if_param_is_max": 25,
                    "update_data_if_parameter_is_maximum": 1
                },
                "update_data_value_08002f2c": {
                    "update_data_value": 29
                }
            },
            "called": [
                "FUN_08002f2c",
                "FUN_08002e44",
                "FUN_08002f94",
                "FUN_08002f84",
                "FUN_08000aec",
                "FUN_0800018c",
                "FUN_08003048"
            ],
            "calling": [
                "FUN_08008f1c"
            ],
            "code": "\nvoid initialize_firmware_components_08001b48(void)\n\n{\n  extract_filename_from_path(&DAT_200003d4,\"/home/bo/p2im/p2im-real_firmware_scratch/Gateway/StandardFirmata.ino\",\n               2,5);\n  update_data_value(&DAT_200003d4,0xe0,0x8000215);\n  update_data_value(&DAT_200003d4,0x90,&label_1);\n  update_data_value(&DAT_200003d4,0xc0,0x8000489);\n  update_data_value(&DAT_200003d4,0xd0,&label_2);\n  update_data_value(&DAT_200003d4,0xf4,0x80005f9);\n  update_data_value(&DAT_200003d4,0xf5,&label_3);\n  set_param3(&DAT_200003d4,0xf0,0x8001cd1);\n  update_data_if_param_is_max(&DAT_200003d4,0xff,0x8000aed);\n  initialize_and_process_serial_data(&DAT_200003d4,0xe100);\n  initialize_pin_function();\n  execute_system_call_wrapper(0);\n  return;\n}\n\n",
            "current_name": "initialize_firmware_components_08001b48",
            "entrypoint": "0x08001b48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001b48": "initialize_firmware_components_08001b48",
                "LAB_080001a8_1": "label_3",
                "LAB_080002ec_1": "label_1",
                "LAB_08000c18_1": "label_2",
                "execute_system_call_wrapper_0800018c": "execute_system_call_wrapper",
                "extract_filename_from_path_08002e44": "extract_filename_from_path",
                "initialize_and_process_serial_data_08003048": "initialize_and_process_serial_data",
                "initialize_pin_function_08000aec": "initialize_pin_function",
                "set_param_3_08002f94": "set_param3",
                "update_data_if_param_is_max_08002f84": "update_data_if_param_is_max",
                "update_data_value_08002f2c": "update_data_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001bf8": {
            "additional_data": {
                "FUN_08001bf8": {
                    "copy_and_process_data": 4,
                    "process_and_copy_data": 9,
                    "process_data": 16,
                    "process_data_from_binary": 1
                },
                "copy_or_allocate_and_process_data_0800288c": {
                    "copy_and_process_data": 4,
                    "copy_or_process_data": 1,
                    "process_data_function": 1,
                    "process_data_helper": 1
                },
                "original_variable_name_1": {
                    "temp_data": 1
                },
                "param_1": {
                    "data_buffer": 3,
                    "data_destination": 1,
                    "data_ptr": 3,
                    "data_ptr_1": 1,
                    "data_source": 5,
                    "input1": 1,
                    "input_data": 4,
                    "input_data_ptr": 1,
                    "input_param": 3,
                    "input_param1": 1,
                    "source": 1,
                    "source_data": 6
                },
                "param_2": {
                    "data_ptr_2": 1,
                    "unused": 2,
                    "unused_param": 14,
                    "unused_parameter": 2
                },
                "param_3": {
                    "buffer": 1,
                    "data_destination": 4,
                    "data_length": 1,
                    "data_size": 1,
                    "dest_data": 1,
                    "destination": 1,
                    "destination_data": 3,
                    "input2": 1,
                    "input_1": 1,
                    "input_param2": 1,
                    "length": 1,
                    "length_param": 1,
                    "output_data": 3,
                    "output_param": 1,
                    "output_param1": 1,
                    "size": 2,
                    "size_param": 1,
                    "size_parameter": 1,
                    "source_data": 2,
                    "source_data_ptr": 1,
                    "target_data": 1
                },
                "param_4": {
                    "buffer_size": 1,
                    "data_length": 2,
                    "data_size": 3,
                    "data_start": 1,
                    "destination_data_ptr": 1,
                    "function_param": 1,
                    "input_2": 1,
                    "input_param3": 1,
                    "length": 3,
                    "offset": 2,
                    "output_param2": 1,
                    "process_param": 2,
                    "processing_info": 1,
                    "size": 4,
                    "size_of_data": 1,
                    "size_param": 1,
                    "source_param": 1,
                    "unused_param2": 1,
                    "value_parameter": 1
                }
            },
            "called": [
                "FUN_0800288c"
            ],
            "calling": [
                "FUN_08001cd0",
                "FUN_08001c18"
            ],
            "code": "\nvoid copy_and_process_data_08001bf8(undefined4 source_data,undefined4 unused_param,undefined4 data_destination,undefined4 size)\n\n{\n  copy_and_process_data_08001bf8(&DAT_20000314,source_data,data_destination,size,size);\n  return;\n}\n\n",
            "current_name": "copy_and_process_data_08001bf8",
            "entrypoint": "0x08001bf8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001bf8": "copy_and_process_data_08001bf8",
                "copy_or_allocate_and_process_data_0800288c": "copy_and_process_data",
                "param_1": "source_data",
                "param_2": "unused_param",
                "param_3": "data_destination",
                "param_4": "size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001c08": {
            "additional_data": {
                "FUN_08001c08": {
                    "extract_next_byte": 1,
                    "get_byte_from_data": 3,
                    "get_next_byte": 5,
                    "get_next_byte_from_data": 11,
                    "read_byte_from_data": 2,
                    "read_next_byte": 6,
                    "read_next_byte_from_data": 3
                },
                "uVar1": {
                    "byte": 1,
                    "byte_read": 1,
                    "byte_value": 2,
                    "next_byte": 27
                }
            },
            "called": [
                "FUN_08002720"
            ],
            "calling": [
                "FUN_08001c18"
            ],
            "code": "\nundefined get_next_byte_from_data_08001c08(void)\n\n{\n  undefined next_byte;\n  \n  next_byte = get_next_byte_from_data_08001c08_08002720(&DAT_20000314);\n  return next_byte;\n}\n\n",
            "current_name": "get_next_byte_from_data_08001c08",
            "entrypoint": "0x08001c08",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001c08": "get_next_byte_from_data_08001c08",
                "uVar1": "next_byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001c18": {
            "additional_data": {
                "DAT_20000130": {
                    "data_format_result": 1,
                    "data_index_result": 1,
                    "decoded_device_address": 1,
                    "device_address_copy": 1,
                    "device_address_value": 1,
                    "device_address_zero": 1,
                    "param_1_byte": 1,
                    "processed_data_type": 1,
                    "processed_val1": 1,
                    "result_id": 1,
                    "start_index": 1
                },
                "DAT_20000131": {
                    "bytes_received_copy": 1,
                    "data_size_result": 2,
                    "decoded_received_data_length": 1,
                    "length": 1,
                    "num_bytes_received_value": 1,
                    "num_bytes_received_zero": 1,
                    "param_2_byte": 1,
                    "processed_byte_count": 1,
                    "processed_data_length": 1,
                    "processed_val2": 1
                },
                "DAT_20000132": {
                    "decoded_data": 3,
                    "processed_data": 5,
                    "processed_data_array": 1,
                    "received_data": 1
                },
                "DAT_20000314": {
                    "data": 1,
                    "data_array": 1,
                    "data_buffer": 4,
                    "input_data": 1,
                    "processed_data": 1,
                    "received_data": 3
                },
                "DAT_200003d4": {
                    "error_buffer": 2,
                    "error_message": 8,
                    "error_output": 1
                },
                "DecodeDataAndProcess08002f0a": {
                    "decode_and_process_data": 1
                },
                "FUN_08001c18": {
                    "decode_and_process_received_data": 1,
                    "process_and_decode_received_data": 1,
                    "process_binary_data": 2,
                    "process_data": 2,
                    "process_data_and_decode": 1,
                    "process_data_and_return_binary": 1,
                    "process_data_from_binary": 1,
                    "process_i2_c_data": 1,
                    "process_received_binary_data": 1,
                    "process_received_data": 20
                },
                "bVar4": {
                    "data_available": 1,
                    "has_data": 4,
                    "has_data_difference": 3,
                    "has_difference": 8,
                    "has_received_data": 1,
                    "is_data_available": 4,
                    "is_data_difference_non_zero": 1,
                    "is_data_empty": 1,
                    "is_data_remaining": 1,
                    "is_difference_non_zero": 3,
                    "is_difference_nonzero": 1,
                    "is_valid": 1,
                    "is_zero_difference": 1,
                    "valid_bytes": 1
                },
                "calculate_data_difference_0800270c": {
                    "calculate_data_difference": 7
                },
                "copy_and_process_data_08001bf8": {
                    "copy_and_process_data": 5
                },
                "decode_data_and_process_08002f0a": {
                    "decode_and_process_data": 4,
                    "decode_data_and_process": 2
                },
                "get_next_byte_from_data_08001c08": {
                    "get_next_byte": 2,
                    "get_next_byte_from_data": 4
                },
                "iVar2": {
                    "actual_size": 1,
                    "byte_count": 1,
                    "calculated_difference": 1,
                    "current_position": 1,
                    "data_diff": 1,
                    "data_difference": 13,
                    "difference": 12,
                    "index": 1
                },
                "iVar3": {
                    "calculated_difference": 2,
                    "calculated_difference2": 1,
                    "current_diff": 1,
                    "current_difference": 11,
                    "data_difference2": 2,
                    "data_difference_check": 1,
                    "difference": 3,
                    "difference2": 4,
                    "received_bytes": 1,
                    "remaining": 1,
                    "remaining_data": 1,
                    "temp_difference": 3
                },
                "initialize_data_08002a30": {
                    "initialize_data": 5
                },
                "param_1": {
                    "communication_type": 1,
                    "data_address": 1,
                    "data_format": 3,
                    "data_index": 3,
                    "data_offset": 2,
                    "data_pointer": 1,
                    "data_type": 1,
                    "device_address": 11,
                    "error_code": 1,
                    "flags": 1,
                    "initial_value": 1,
                    "input_id": 1,
                    "param_size": 1,
                    "port_type": 1,
                    "status_flag": 1,
                    "val1": 1
                },
                "param_2": {
                    "byte_count": 3,
                    "bytes_received": 1,
                    "data_length": 7,
                    "data_size": 4,
                    "num_bytes": 3,
                    "num_bytes_received": 4,
                    "param_value": 1,
                    "received_byte_count": 1,
                    "received_bytes": 2,
                    "received_data": 1,
                    "received_data_length": 2,
                    "received_data_size": 1,
                    "val2": 1
                },
                "param_3": {
                    "expected_byte_count": 1,
                    "expected_bytes": 3,
                    "expected_count": 3,
                    "expected_data_length": 2,
                    "expected_data_size": 1,
                    "expected_length": 7,
                    "expected_num_bytes": 7,
                    "expected_size": 5,
                    "num_bytes": 1,
                    "val3": 1
                },
                "param_4": {
                    "additional_data": 3,
                    "additional_info": 1,
                    "config": 3,
                    "config_address": 1,
                    "config_data": 1,
                    "config_param": 1,
                    "config_parameter": 1,
                    "config_value": 1,
                    "data_checksum": 1,
                    "data_flag": 1,
                    "data_validation": 1,
                    "device_command": 1,
                    "extra_data": 1,
                    "metadata": 1,
                    "output_id": 1,
                    "param4": 1,
                    "param_4": 2,
                    "param_flag": 1,
                    "some_parameter": 1,
                    "status": 1,
                    "val4": 1,
                    "validate_code": 1,
                    "validation_data": 1,
                    "validation_param": 2,
                    "validation_parameter": 1
                },
                "process_and_decode_data_08002f14": {
                    "process_and_decode_data": 5,
                    "process_and_decode_error": 2
                },
                "process_and_return_binary_data_08002c14": {
                    "process_and_return_binary_data": 7
                },
                "uVar1": {
                    "byte": 2,
                    "current_byte": 2,
                    "next_byte": 27
                },
                "validate_and_process_data_08002a58": {
                    "validate_and_process_data": 5
                }
            },
            "called": [
                "FUN_0800270c",
                "FUN_08002f0a",
                "FUN_08002a30",
                "FUN_08001c08",
                "FUN_08001bf8",
                "FUN_08002f14",
                "FUN_08002a58",
                "FUN_08002c14"
            ],
            "calling": [
                "FUN_080022f8",
                "FUN_08001cd0"
            ],
            "code": "\nvoid process_and_decode_received_data_08001c18(undefined4 device_address,uint data_length,int expected_num_bytes,undefined4 config)\n\n{\n  undefined next_byte;\n  int data_difference;\n  int current_difference;\n  bool has_difference;\n  \n  if (data_length == 0xffffffff) {\n    data_length = 0;\n  }\n  else {\n    initialize_data(&DAT_20000314,device_address);\n    copy_and_process_data(data_length & 0xff);\n    validate_and_process_data(&DAT_20000314,config);\n  }\n  process_and_return_binary_data(&DAT_20000314,device_address,expected_num_bytes);\n  data_difference = calculate_data_difference(&DAT_20000314);\n  if (expected_num_bytes < data_difference) {\n    process_and_decode_data(&DAT_200003d4,\"I2C: Too many bytes received\");\n  }\n  else {\n    data_difference = calculate_data_difference(&DAT_20000314);\n    if (data_difference < expected_num_bytes) {\n      process_and_decode_data(&DAT_200003d4,\"I2C: Too few bytes received\");\n    }\n  }\n  DAT_20000130 = (undefined)device_address;\n  DAT_20000131 = (undefined)data_length;\n  data_difference = 0;\n  while( true ) {\n    if (data_difference < expected_num_bytes) {\n      current_difference = calculate_data_difference(&DAT_20000314);\n      if (current_difference == 0) {\n        has_difference = false;\n      }\n      else {\n        has_difference = true;\n      }\n    }\n    else {\n      has_difference = false;\n    }\n    if (!has_difference) break;\n    next_byte = get_next_byte_from_data();\n    (&DAT_20000132)[data_difference] = next_byte;\n    data_difference = data_difference + 1;\n  }\n  decode_and_process_data(&DAT_200003d4,0x77,expected_num_bytes + 2U & 0xff,&DAT_20000130);\n  return;\n}\n\n",
            "current_name": "process_and_decode_received_data_08001c18",
            "entrypoint": "0x08001c18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001c18": "process_and_decode_received_data_08001c18",
                "bVar4": "has_difference",
                "calculate_data_difference_0800270c": "calculate_data_difference",
                "copy_and_process_data_08001bf8": "copy_and_process_data",
                "decode_data_and_process_08002f0a": "decode_and_process_data",
                "get_next_byte_from_data_08001c08": "get_next_byte_from_data",
                "iVar2": "data_difference",
                "iVar3": "current_difference",
                "initialize_data_08002a30": "initialize_data",
                "param_1": "device_address",
                "param_2": "data_length",
                "param_3": "expected_num_bytes",
                "param_4": "config",
                "process_and_decode_data_08002f14": "process_and_decode_data",
                "process_and_return_binary_data_08002c14": "process_and_return_binary_data",
                "uVar1": "next_byte",
                "validate_and_process_data_08002a58": "validate_and_process_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "additional_data": {
                "DAT_20000004": {
                    "count": 1,
                    "counter": 1
                },
                "DAT_20000008": {
                    "pin_number": 1
                },
                "DAT_2000012c": {
                    "pin_value": 1,
                    "value2": 1
                },
                "DAT_20000170": {
                    "flag": 1,
                    "flag2": 1
                },
                "DAT_200001f0": {
                    "data_byte": 1
                },
                "FUN_08001cd0": {
                    "decode_and_process_data": 1,
                    "execute_command": 2,
                    "execute_dynamic_function": 2,
                    "process_binary_data": 5,
                    "process_binary_function": 1,
                    "process_command": 3,
                    "process_command_08001cd0": 1,
                    "process_data": 6,
                    "process_data_function": 1,
                    "process_input": 3,
                    "process_instructions": 1,
                    "process_operation": 1
                },
                "bVar1": {
                    "byte1": 23,
                    "byte_1": 1,
                    "byte_data1": 1,
                    "byte_var1": 1,
                    "data_byte": 1,
                    "first_byte": 2
                },
                "bVar12": {
                    "bool1": 4,
                    "bool_var": 3,
                    "check_result": 1,
                    "condition": 1,
                    "flag": 14,
                    "flag2": 1,
                    "found": 1,
                    "is_true": 3,
                    "temp_flag": 1
                },
                "bVar2": {
                    "byte1": 1,
                    "byte2": 23,
                    "byte_2": 1,
                    "byte_data2": 1,
                    "byte_var2": 1,
                    "second_byte": 2
                },
                "bVar3": {
                    "byte2": 1,
                    "byte3": 23,
                    "byte_3": 1,
                    "byte_data3": 1,
                    "byte_var3": 1,
                    "third_byte": 2
                },
                "bVar5": {
                    "byte3": 1,
                    "byte4": 22,
                    "byte_4": 1,
                    "byte_data4": 1,
                    "byte_var5": 1,
                    "fourth_byte": 2,
                    "high_byte": 1
                },
                "cVar6": {
                    "byte_result": 1,
                    "char1": 13,
                    "char_data": 1,
                    "char_val": 1,
                    "char_value": 2,
                    "char_var": 4,
                    "char_variable": 2,
                    "character": 4,
                    "code": 1,
                    "low_byte": 1
                },
                "characterData": {
                    "character_data": 1
                },
                "check_param_and_string_match_0800738a": {
                    "check_match": 1,
                    "check_param_and_string_match": 2
                },
                "copy_and_process_data_08001bf8": {
                    "copy_and_process_data": 2,
                    "copy_and_process_data_08001bf8": 1
                },
                "dataPointer": {
                    "data_pointer": 1
                },
                "deviceName": {
                    "device_name": 1
                },
                "execute_dynamic_function_08002f1e": {
                    "execute_dynamic_function": 1,
                    "execute_function": 2
                },
                "find_character_index_080036ac": {
                    "find_char_index": 1,
                    "find_character_index": 2
                },
                "get_bit_from_data_080026f8": {
                    "get_bit_from_data": 1,
                    "get_bit_from_data_080026f8": 1
                },
                "get_value_from_offset_08002fa0": {
                    "get_value_from_offset": 2,
                    "get_value_from_offset_08002fa0": 1
                },
                "get_value_from_offset_08002fba": {
                    "get_value_from_offset": 2,
                    "get_value_from_offset_08002fba": 1
                },
                "iVar11": {
                    "counter2": 1,
                    "counter4": 1,
                    "current_value": 1,
                    "index2": 1,
                    "index3": 11,
                    "index4": 1,
                    "index5": 1,
                    "j": 1,
                    "new_index2": 1,
                    "offset": 1,
                    "result": 1,
                    "temp2": 1,
                    "temp_index2": 2,
                    "temp_index3": 1,
                    "temp_var": 2,
                    "temp_var4": 1,
                    "temp_variable3": 1
                },
                "iVar7": {
                    "index": 26,
                    "index1": 2,
                    "result": 1,
                    "temp_variable1": 1
                },
                "iVar8": {
                    "counter": 2,
                    "counter1": 1,
                    "i": 1,
                    "index1": 1,
                    "index2": 13,
                    "index3": 1,
                    "iterator": 1,
                    "loop_index": 1,
                    "new_index": 1,
                    "start_index": 1,
                    "temp_index": 4,
                    "temp_index1": 1,
                    "temp_var1": 1,
                    "temp_variable2": 1
                },
                "initialize_data_08002a30": {
                    "initialize_data": 2,
                    "initialize_data_08002a30": 1
                },
                "param_1": {
                    "command": 10,
                    "command_code": 1,
                    "command_type": 2,
                    "instruction": 1,
                    "op_code": 1,
                    "opcode": 14,
                    "operation_type": 1
                },
                "param_2": {
                    "length": 13,
                    "num_params": 1,
                    "param_count": 4,
                    "param_length": 4,
                    "size": 8
                },
                "param_3": {
                    "buffer": 1,
                    "data": 24,
                    "param_array": 2,
                    "param_buffer": 1,
                    "param_data": 1,
                    "params_array": 1
                },
                "param_4": {
                    "extra_param": 1,
                    "flag": 1,
                    "param": 15,
                    "param4": 3,
                    "param_4": 4,
                    "param_data_offset": 1,
                    "param_flag": 1,
                    "param_value": 1,
                    "parameter": 1,
                    "result": 1,
                    "unknown": 1
                },
                "process_and_decode_data_08002f14": {
                    "process_and_decode_data": 2,
                    "process_and_decode_data_08002f14": 1
                },
                "process_and_decode_received_data_08001c18": {
                    "process_and_decode_received_data": 2,
                    "process_and_decode_received_data_08001c18": 1
                },
                "process_and_initialize_pin_function_08000a64": {
                    "process_and_initialize_pin_function": 2,
                    "process_and_initialize_pin_function_08000a64": 1
                },
                "process_and_update_servo_data_08000500": {
                    "process_and_update_servo_data": 2,
                    "process_and_update_servo_data_08000500": 1
                },
                "process_and_update_value_08000214": {
                    "process_and_update_value": 2,
                    "process_and_update_value_08000214": 1
                },
                "process_byte_data_08000588": {
                    "process_byte_data": 2,
                    "process_byte_data_08000588": 1
                },
                "process_pin_function_080005f8": {
                    "process_pin_function": 2,
                    "process_pin_function_080005f8": 1
                },
                "process_with_buffer_08001cd0": {
                    "process_command_08001cd0": 1
                },
                "uVar10": {
                    "char_index": 1,
                    "count2": 1,
                    "counter": 1,
                    "counter2": 2,
                    "counter3": 1,
                    "index2": 1,
                    "index4": 1,
                    "inner_loop_index": 1,
                    "loop_counter2": 1,
                    "loop_var2": 3,
                    "loop_variable2": 1,
                    "temp": 1,
                    "temp1": 2,
                    "temp_counter": 2,
                    "temp_index": 1,
                    "temp_value": 2,
                    "temp_var3": 1,
                    "u2": 1,
                    "u_var2": 4,
                    "value2": 2
                },
                "uVar4": {
                    "offset": 1,
                    "offset_value": 1,
                    "result": 11,
                    "temp_var": 1,
                    "value": 13,
                    "value1": 2
                },
                "uVar9": {
                    "count": 2,
                    "counter": 3,
                    "counter1": 1,
                    "counter2": 1,
                    "index": 2,
                    "index3": 1,
                    "iter": 1,
                    "loop_counter": 2,
                    "loop_counter1": 1,
                    "loop_index": 1,
                    "loop_var": 2,
                    "loop_var1": 1,
                    "loop_variable1": 1,
                    "outer_loop_index": 1,
                    "temp_index2": 1,
                    "temp_var2": 1,
                    "u": 1,
                    "u_var1": 4,
                    "value1": 2
                },
                "validate_and_process_data_08002ac0": {
                    "validate_and_process_data": 2,
                    "validate_and_process_data_08002ac0": 1
                }
            },
            "called": [
                "FUN_080036ac",
                "FUN_08000214",
                "FUN_0800738a",
                "FUN_08002a30",
                "FUN_08002fa0",
                "FUN_080005f8",
                "FUN_08002f14",
                "FUN_08002fba",
                "FUN_08000a64",
                "FUN_08000588",
                "FUN_08002f1e",
                "FUN_08000500",
                "FUN_08001bf8",
                "FUN_080026f8",
                "FUN_08001c18",
                "FUN_08002ac0"
            ],
            "calling": [],
            "code": "\nvoid process_binary_data_08001cd0(undefined4 opcode,int length,byte *data,undefined4 param)\n\n{\n  byte byte1;\n  byte byte2;\n  byte byte3;\n  undefined4 value;\n  byte byte4;\n  char char1;\n  int index;\n  int index2;\n  uint u_var1;\n  uint u_var2;\n  int index3;\n  bool flag;\n  \n  switch(opcode) {\n  case 0x69:\n    execute_function(&DAT_200003d4,0xf0);\n    execute_function(&DAT_200003d4,0x6a);\n    for (u_var1 = 0; u_var1 < 0x3c; u_var1 = u_var1 + 1 & 0xff) {\n      u_var2 = u_var1 - 0x2e & 0xff;\n      if (u_var2 < 0xe) {\n        if (u_var1 < 0x3c) {\n          index = (int)(char)(&DAT_0800a908)[u_var1];\n        }\n        else {\n          index = -1;\n        }\n        index = find_character_index(index);\n        if (index == 0) {\n          u_var2 = 0x7f;\n        }\n        else {\n          if (u_var1 < 0x3c) {\n            index = (int)(char)(&DAT_0800a908)[u_var1];\n          }\n          else {\n            index = -1;\n          }\n          index = find_character_index(index);\n          if (index == 1) {\n            u_var2 = 0x7f;\n          }\n        }\n      }\n      else {\n        u_var2 = 0x7f;\n      }\n      execute_function(&DAT_200003d4,u_var2);\n    }\n    execute_function(&DAT_200003d4,0xf7);\n    break;\n  case 0x6b:\n    execute_function(&DAT_200003d4,0xf0);\n    execute_function(&DAT_200003d4,0x6c);\n    for (u_var1 = 0; u_var1 < 0x3c; u_var1 = u_var1 + 1 & 0xff) {\n      if (u_var1 < 0x3c) {\n        if ((&DAT_0800a908)[u_var1] == -1) {\n          flag = false;\n        }\n        else {\n          index = find_character_index();\n          if (index == 0) {\n            flag = false;\n          }\n          else {\n            index = find_character_index((int)(char)(&DAT_0800a908)[u_var1]);\n            if (index == 1) {\n              flag = false;\n            }\n            else {\n              flag = true;\n            }\n          }\n        }\n      }\n      else {\n        flag = false;\n      }\n      if (flag) {\n        execute_function(&DAT_200003d4,0);\n        execute_function(&DAT_200003d4,1);\n        execute_function(&DAT_200003d4,0xb);\n        execute_function(&DAT_200003d4,1);\n        execute_function(&DAT_200003d4,1);\n        execute_function(&DAT_200003d4,1);\n      }\n      if ((u_var1 - 0x2e & 0xff) < 0xe) {\n        if (u_var1 < 0x3c) {\n          index = (int)(char)(&DAT_0800a908)[u_var1];\n        }\n        else {\n          index = -1;\n        }\n        index = find_character_index(index);\n        if (index == 0) {\n          flag = false;\n        }\n        else {\n          if (u_var1 < 0x3c) {\n            index = (int)(char)(&DAT_0800a908)[u_var1];\n          }\n          else {\n            index = -1;\n          }\n          index = find_character_index(index);\n          if (index == 1) {\n            flag = false;\n          }\n          else {\n            flag = true;\n          }\n        }\n      }\n      else {\n        flag = false;\n      }\n      if (flag) {\n        execute_function(&DAT_200003d4,2);\n        execute_function(&DAT_200003d4,10);\n      }\n      if (u_var1 < 0x3c) {\n        if ((&DAT_0800a908)[u_var1] == -1) {\n          index = 0;\n        }\n        else {\n          index = find_character_index();\n          if (index == 0) {\n            index = 0;\n          }\n          else {\n            index = find_character_index((int)(char)(&DAT_0800a908)[u_var1]);\n            if (index == 1) {\n              index = 0;\n            }\n            else {\n              index = check_param_and_string_match((int)(char)(&DAT_0800a908)[u_var1],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        index = 0;\n      }\n      if (index != 0) {\n        execute_function(&DAT_200003d4,3);\n        execute_function(&DAT_200003d4,8);\n      }\n      if (u_var1 < 0x3c) {\n        if ((&DAT_0800a908)[u_var1] == -1) {\n          flag = false;\n        }\n        else {\n          index = find_character_index();\n          if (index == 0) {\n            flag = false;\n          }\n          else {\n            index = find_character_index((int)(char)(&DAT_0800a908)[u_var1]);\n            if (index == 1) {\n              flag = false;\n            }\n            else {\n              flag = true;\n            }\n          }\n        }\n      }\n      else {\n        flag = false;\n      }\n      if (flag) {\n        execute_function(&DAT_200003d4,4);\n        execute_function(&DAT_200003d4,0xe);\n      }\n      if (u_var1 < 0x3c) {\n        if ((&DAT_0800a908)[u_var1] == -1) {\n          index = 0;\n        }\n        else {\n          index = find_character_index();\n          if (index == 0) {\n            index = 0;\n          }\n          else {\n            index = find_character_index((int)(char)(&DAT_0800a908)[u_var1]);\n            if (index == 1) {\n              index = 0;\n            }\n            else {\n              index = check_param_and_string_match((int)(char)(&DAT_0800a908)[u_var1],&DAT_0800a69c);\n              if (index == 0) {\n                index = check_param_and_string_match((int)(char)(&DAT_0800a908)[u_var1],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        index = 0;\n      }\n      if (index != 0) {\n        execute_function(&DAT_200003d4,6);\n        execute_function(&DAT_200003d4,1);\n      }\n      execute_function(&DAT_200003d4,0x7f);\n    }\n    execute_function(&DAT_200003d4,0xf7);\n    return;\n  case 0x6d:\n    if (length != 0) {\n      byte1 = *data;\n      execute_function(&DAT_200003d4,0xf0);\n      execute_function(&DAT_200003d4,0x6e);\n      execute_function(&DAT_200003d4,byte1);\n      if (byte1 < 0x3c) {\n        value = get_value_from_offset(&DAT_200003d4,byte1);\n        execute_function(&DAT_200003d4,value);\n        u_var1 = get_value_from_offset(&DAT_200003d4,byte1);\n        execute_function(&DAT_200003d4,u_var1 & 0x7f);\n        u_var1 = get_value_from_offset(&DAT_200003d4,byte1);\n        if ((u_var1 & 0xff80) != 0) {\n          index = get_value_from_offset(&DAT_200003d4,byte1);\n          execute_function(&DAT_200003d4,(uint)(index << 0x12) >> 0x19);\n        }\n        u_var1 = get_value_from_offset(&DAT_200003d4,byte1);\n        if ((u_var1 & 0xc000) != 0) {\n          index = get_value_from_offset(&DAT_200003d4,byte1);\n          execute_function(&DAT_200003d4,(uint)(index << 0xb) >> 0x19);\n        }\n      }\n      execute_function(&DAT_200003d4,0xf7);\n      return;\n    }\n    break;\n  case 0x6f:\n    if (1 < length) {\n      u_var1 = (uint)data[1];\n      if (2 < length) {\n        u_var1 = u_var1 | (uint)data[2] << 7;\n      }\n      if (3 < length) {\n        u_var1 = u_var1 | (uint)data[3] << 0xe;\n      }\n      process_and_update_value(*data,u_var1);\n      return;\n    }\n    break;\n  case 0x70:\n    if (4 < length) {\n      u_var1 = (uint)*data;\n      byte1 = data[1];\n      byte4 = data[2];\n      byte2 = data[3];\n      byte3 = data[4];\n      if (u_var1 < 0x3c) {\n        if ((&DAT_0800a908)[u_var1] == -1) {\n          flag = false;\n        }\n        else {\n          index = find_character_index();\n          if (index == 0) {\n            flag = false;\n          }\n          else {\n            index = find_character_index((int)(char)(&DAT_0800a908)[u_var1]);\n            if (index == 1) {\n              flag = false;\n            }\n            else {\n              flag = true;\n            }\n          }\n        }\n      }\n      else {\n        flag = false;\n      }\n      if (flag) {\n        if ((byte)(&DAT_200001f0)[u_var1] < 0xc) {\n          index = get_bit_from_data(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[u_var1] * 3);\n        }\n        else {\n          index = 0;\n        }\n        if (index != 0) {\n          process_byte_data(u_var1);\n        }\n        process_and_update_servo_data(u_var1,(uint)byte1 + (uint)byte4 * 0x80,(uint)byte2 + (uint)byte3 * 0x80);\n        process_pin_function(u_var1,4);\n        return;\n      }\n    }\n    break;\n  case 0x76:\n    byte1 = data[1];\n    byte4 = byte1 & 0x18;\n    if ((byte1 & 0x20) != 0) {\n      process_and_decode_data(&DAT_200003d4,\"10-bit addressing not supported\",byte4,byte1,param);\n      return;\n    }\n    byte2 = *data;\n    flag = (byte1 & 0x40) == 0;\n    if (byte4 < 0x19) {\n      switch(byte4) {\n      case 0:\n        initialize_data(&DAT_20000314,byte2);\n        for (u_var1 = 2; (int)u_var1 < length; u_var1 = u_var1 + 2 & 0xff) {\n          copy_and_process_data(data[u_var1 + 1] * -0x80 + data[u_var1]);\n        }\n        validate_and_process_data(&DAT_20000314);\n        return;\n      case 8:\n        if (length == 6) {\n          index = (uint)data[2] + (uint)data[3] * 0x80;\n          char1 = data[4] + data[5] * -0x80;\n        }\n        else {\n          char1 = data[2] + data[3] * -0x80;\n          index = -1;\n        }\n        process_and_decode_received_data(byte2,index,char1);\n        return;\n      case 0x10:\n        if (DAT_20000004 + 1 < 8) {\n          if (length == 6) {\n            index = (uint)data[2] + (uint)data[3] * 0x80;\n            char1 = data[4] + data[5] * -0x80;\n          }\n          else {\n            char1 = data[2] + data[3] * -0x80;\n            index = -1;\n          }\n          DAT_20000004 = DAT_20000004 + '\\x01';\n          index2 = (int)DAT_20000004;\n          index3 = index2 * 0xc;\n          (&DAT_20000188)[index3] = byte2;\n          (&DAT_2000018c)[index2 * 3] = index;\n          (&DAT_20000190)[index3] = char1;\n          (&DAT_20000191)[index3] = flag;\n          return;\n        }\n        process_and_decode_data(&DAT_200003d4,\"too many queries\",(int)DAT_20000004,flag,param);\n        return;\n      case 0x18:\n        if (DAT_20000004 < 1) {\n          DAT_20000004 = 0xff;\n          return;\n        }\n      }\n      for (u_var1 = 0; index = DAT_20000004 + 1, (int)u_var1 < index; u_var1 = u_var1 + 1 & 0xff) {\n        if (byte2 == (&DAT_20000188)[u_var1 * 0xc]) goto LAB_08001e66;\n      }\n      u_var1 = 0;\nLAB_08001e66:\n      for (; (int)u_var1 < index; u_var1 = u_var1 + 1 & 0xff) {\n        if (u_var1 < 8) {\n          index2 = (u_var1 + 1) * 0xc;\n          index3 = u_var1 * 0xc;\n          (&DAT_20000188)[index3] = (&DAT_20000188)[index2];\n          (&DAT_2000018c)[u_var1 * 3] = (&DAT_2000018c)[(u_var1 + 1) * 3];\n          (&DAT_20000190)[index3] = (&DAT_20000190)[index2];\n          (&DAT_20000191)[index3] = (&DAT_20000191)[index2];\n        }\n      }\n      DAT_20000004 = DAT_20000004 + -1;\n      return;\n    }\n    break;\n  case 0x78:\n    index = (uint)*data + (uint)data[1] * 0x80;\n    if ((1 < length) && (index != 0)) {\n      DAT_2000012c = index;\n    }\n    if (DAT_20000170 == '\\0') {\n      process_and_initialize_pin_function();\n      return;\n    }\n    break;\n  case 0x7a:\n    if ((1 < length) &&\n       (DAT_20000008 = (uint)*data + (uint)data[1] * 0x80, DAT_20000008 == 0)) {\n      DAT_20000008 = 1;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_binary_data_08001cd0",
            "entrypoint": "0x08001cd0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08001cd0": "process_binary_data_08001cd0",
                "bVar1": "byte1",
                "bVar12": "flag",
                "bVar2": "byte2",
                "bVar3": "byte3",
                "bVar5": "byte4",
                "cVar6": "char1",
                "check_param_and_string_match_0800738a": "check_param_and_string_match",
                "copy_and_process_data_08001bf8": "copy_and_process_data",
                "execute_dynamic_function_08002f1e": "execute_function",
                "find_character_index_080036ac": "find_character_index",
                "get_bit_from_data_080026f8": "get_bit_from_data",
                "get_value_from_offset_08002fa0": "get_value_from_offset",
                "get_value_from_offset_08002fba": "get_value_from_offset",
                "iVar11": "index3",
                "iVar7": "index",
                "iVar8": "index2",
                "initialize_data_08002a30": "initialize_data",
                "param_1": "opcode",
                "param_2": "length",
                "param_3": "data",
                "param_4": "param",
                "process_and_decode_data_08002f14": "process_and_decode_data",
                "process_and_decode_received_data_08001c18": "process_and_decode_received_data",
                "process_and_initialize_pin_function_08000a64": "process_and_initialize_pin_function",
                "process_and_update_servo_data_08000500": "process_and_update_servo_data",
                "process_and_update_value_08000214": "process_and_update_value",
                "process_byte_data_08000588": "process_byte_data",
                "process_pin_function_080005f8": "process_pin_function",
                "uVar10": "u_var2",
                "uVar4": "value",
                "uVar9": "u_var1",
                "validate_and_process_data_08002ac0": "validate_and_process_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080022f8": {
            "additional_data": {
                "DAT_0800a908": {
                    "character_array": 2,
                    "character_data": 1
                },
                "DAT_20000004": {
                    "cycle_count": 1,
                    "iteration_count": 2,
                    "loop_count": 1,
                    "loop_limit": 3,
                    "num_elements": 1,
                    "num_received_data": 2,
                    "received_data_count": 1
                },
                "DAT_20000008": {
                    "data_size": 1,
                    "data_threshold": 2,
                    "input_size": 1,
                    "max_data_index": 1,
                    "max_data_size": 1,
                    "max_length": 1,
                    "max_offset": 1,
                    "max_value": 1,
                    "threshold": 1,
                    "upper_limit": 1
                },
                "DAT_20000114": {
                    "bit_mask": 1,
                    "bitmask": 4,
                    "character_flags": 2,
                    "data_flags": 1,
                    "data_mask": 1,
                    "mask": 1
                },
                "DAT_20000118": {
                    "data_length": 2,
                    "data_size": 1,
                    "data_value": 1,
                    "data_value_array": 1,
                    "data_values": 6
                },
                "DAT_2000017c": {
                    "current_length": 1,
                    "current_offset": 1,
                    "data_offset": 3,
                    "processed_data_offset": 1,
                    "processed_data_size": 2,
                    "update_size": 1,
                    "updated_data_index": 1,
                    "updated_value": 1
                },
                "DAT_20000188": {
                    "received_data1": 1,
                    "received_data_array": 1
                },
                "DAT_2000018c": {
                    "decode_data_array_1": 1,
                    "received_data2": 1
                },
                "DAT_20000190": {
                    "decode_data_array_2": 1,
                    "received_data3": 1
                },
                "DAT_20000191": {
                    "decode_data_array_3": 1,
                    "received_data4": 1
                },
                "DAT_200003d4": {
                    "data": 2,
                    "data_array": 2
                },
                "FUN_080022f8": {
                    "decode_and_process_data": 2,
                    "decode_and_process_flags": 1,
                    "decode_data_and_update": 1,
                    "process_and_decode_data": 17,
                    "process_and_update_data": 6,
                    "process_data": 3,
                    "process_flags_and_update_data": 1
                },
                "PTR_08000ef8": {
                    "process_flags_and_decode_data": 1
                },
                "PTR_08001c18": {
                    "process_and_decode_received_data": 1
                },
                "PTR_08002ec4": {
                    "execute_callback_function": 1
                },
                "PTR_08002ed2": {
                    "process_data_and_update": 1
                },
                "PTR_08002ef2": {
                    "process_and_decode_data_2": 1
                },
                "PTR_08002fa0": {
                    "get_value_from_offset": 1
                },
                "PTR_080036ac": {
                    "find_character_index": 1
                },
                "PTR_08008880": {
                    "decode_and_process_data": 1
                },
                "PTR_08008abc": {
                    "initialize_and_return_data_values": 1
                },
                "bVar1": {
                    "flag": 1,
                    "is_character_valid": 1,
                    "is_condition_true": 1,
                    "is_valid": 4,
                    "is_valid_character": 1,
                    "is_value_valid": 2,
                    "should_decode": 1,
                    "should_process_data": 1
                },
                "decode_and_process_data_08008880": {
                    "decode_and_process_data": 26
                },
                "execute_callback_function_08002ec4": {
                    "execute_callback": 6,
                    "execute_callback_function": 19
                },
                "find_character_index_080036ac": {
                    "find_character_index": 26
                },
                "get_value_from_offset_08002fa0": {
                    "get_value_from_offset": 26
                },
                "iVar2": {
                    "callback_result": 11,
                    "index": 1,
                    "result": 1
                },
                "initialize_and_return_data_values_08008abc": {
                    "initialize_and_get_data_values": 1,
                    "initialize_and_return_data_values": 20,
                    "initialize_and_return_values": 2,
                    "initialize_data_values": 1
                },
                "process_and_decode_data_08002ef2": {
                    "process_and_decode_data": 24,
                    "process_and_decode_data_received": 1
                },
                "process_and_decode_received_data_08001c18": {
                    "process_and_decode_received_data": 26
                },
                "process_data_and_update_08002ed2": {
                    "process_and_udpate_data": 1,
                    "process_and_upadate_data": 1,
                    "process_and_update_data": 4,
                    "process_data": 1,
                    "process_data_and_update": 17,
                    "update_data": 1
                },
                "process_flags_and_decode_data_08000ef8": {
                    "initialize_data": 1,
                    "process_flags_and_decode_data": 7
                },
                "uVar3": {
                    "data_value": 1,
                    "decoded_data_value": 1,
                    "decoded_value": 11
                },
                "uVar4": {
                    "index1": 1,
                    "index_1": 2,
                    "loop_counter": 1,
                    "loop_index": 1,
                    "loop_index_1": 1,
                    "loop_var_1": 1,
                    "outer_loop_count": 1,
                    "outer_loop_counter": 2,
                    "outer_loop_index": 3
                },
                "uVar5": {
                    "character_index": 2,
                    "index2": 1,
                    "index_2": 2,
                    "inner_loop_count": 1,
                    "inner_loop_counter": 2,
                    "inner_loop_index": 3,
                    "loop_index_2": 1,
                    "loop_var_2": 1
                }
            },
            "called": [
                "FUN_080036ac",
                "FUN_08000ef8",
                "FUN_08002ef2",
                "FUN_08008880",
                "FUN_08002fa0",
                "FUN_08002ec4",
                "FUN_08002ed2",
                "FUN_08001c18",
                "FUN_08008abc"
            ],
            "calling": [
                "FUN_08008f1c"
            ],
            "code": "\nvoid decode_and_process_data_080022f8(void)\n\n{\n  bool is_valid;\n  int callback_result;\n  undefined4 decoded_value;\n  uint outer_loop_index;\n  uint inner_loop_index;\n  \n  process_flags_and_decode_data();\n  while (callback_result = execute_callback_function(&DAT_200003d4), callback_result != 0) {\n    process_data_and_update(&DAT_200003d4);\n  }\n  DAT_20000118 = initialize_and_return_data_values();\n  if (DAT_20000008 < (uint)(DAT_20000118 - DAT_2000017c)) {\n    DAT_2000017c = DAT_2000017c + DAT_20000008;\n    for (outer_loop_index = 0; outer_loop_index < 0x3c; outer_loop_index = outer_loop_index + 1 & 0xff) {\n      inner_loop_index = outer_loop_index - 0x2e & 0xff;\n      if (inner_loop_index < 0xe) {\n        if (outer_loop_index < 0x3c) {\n          callback_result = (int)(char)(&DAT_0800a908)[outer_loop_index];\n        }\n        else {\n          callback_result = -1;\n        }\n        callback_result = find_character_index(callback_result);\n        if (callback_result == 0) {\n          is_valid = false;\n        }\n        else {\n          if (outer_loop_index < 0x3c) {\n            callback_result = (int)(char)(&DAT_0800a908)[outer_loop_index];\n          }\n          else {\n            callback_result = -1;\n          }\n          callback_result = find_character_index(callback_result);\n          if (callback_result == 1) {\n            is_valid = false;\n          }\n          else {\n            callback_result = get_value_from_offset(&DAT_200003d4,outer_loop_index);\n            if (callback_result == 2) {\n              is_valid = true;\n            }\n            else {\n              is_valid = false;\n            }\n          }\n        }\n      }\n      else {\n        is_valid = false;\n      }\n      if ((is_valid) && ((DAT_20000114 >> inner_loop_index & 1U) != 0)) {\n        decoded_value = decode_and_process_data_080022f8(inner_loop_index);\n        process_and_decode_data(&DAT_200003d4,inner_loop_index,decoded_value);\n      }\n    }\n    if (-1 < DAT_20000004) {\n      for (outer_loop_index = 0; (int)outer_loop_index < DAT_20000004 + 1; outer_loop_index = outer_loop_index + 1 & 0xff) {\n        callback_result = outer_loop_index * 0xc;\n        process_and_decode_received_data((&DAT_20000188)[callback_result],(&DAT_2000018c)[outer_loop_index * 3],(&DAT_20000190)[callback_result],\n                     (&DAT_20000191)[callback_result]);\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "decode_and_process_data_080022f8",
            "entrypoint": "0x080022f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080022f8": "decode_and_process_data_080022f8",
                "bVar1": "is_valid",
                "decode_and_process_data_08008880": "decode_and_process_data",
                "execute_callback_function_08002ec4": "execute_callback_function",
                "find_character_index_080036ac": "find_character_index",
                "get_value_from_offset_08002fa0": "get_value_from_offset",
                "iVar2": "callback_result",
                "initialize_and_return_data_values_08008abc": "initialize_and_return_data_values",
                "process_and_decode_data_08002ef2": "process_and_decode_data",
                "process_and_decode_received_data_08001c18": "process_and_decode_received_data",
                "process_data_and_update_08002ed2": "process_data_and_update",
                "process_flags_and_decode_data_08000ef8": "process_flags_and_decode_data",
                "uVar3": "decoded_value",
                "uVar4": "outer_loop_index",
                "uVar5": "inner_loop_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002400": {
            "additional_data": {
                "FUN_08002400": {
                    "check_bit_flag": 2,
                    "check_bit_set": 3,
                    "check_bit_status": 1,
                    "check_bitwise_flag": 1,
                    "check_bitwise_operation": 1,
                    "check_byte_flag": 1,
                    "check_character": 3,
                    "check_data_validity": 1,
                    "check_flag": 2,
                    "check_flag_availability": 1,
                    "check_flag_set": 2,
                    "check_flag_validity": 1,
                    "check_for_bit": 1,
                    "check_for_bit_flag": 1,
                    "check_for_flag": 3,
                    "check_for_valid_data": 1,
                    "check_if_byte_has_set_bit": 1,
                    "check_if_flag_set": 1,
                    "check_memory_flag": 1,
                    "check_parameter_condition": 1,
                    "check_value_in_data": 1,
                    "find_first_bit_set": 1
                },
                "param_1": {
                    "character_index": 2,
                    "data_index": 1,
                    "flag_index": 2,
                    "index": 10,
                    "input": 6,
                    "input_index": 1,
                    "input_param": 1,
                    "input_val": 1,
                    "input_value": 6,
                    "value": 1
                },
                "uVar1": {
                    "bit_index": 1,
                    "count": 1,
                    "counter": 21,
                    "index": 2,
                    "iteration_count": 6
                }
            },
            "called": [],
            "calling": [
                "FUN_08002644",
                "FUN_080025ac"
            ],
            "code": "\nundefined4 check_for_bit_flag_08002400(int index)\n\n{\n  uint counter;\n  \n  counter = 0;\n  while( true ) {\n    if (0xb < counter) {\n      return 0;\n    }\n    if (((&DAT_20000258)[(index * 0xc + counter) * 8] & 0x40) != 0) break;\n    counter = counter + 1 & 0xff;\n  }\n  return 1;\n}\n\n",
            "current_name": "check_for_bit_flag_08002400",
            "entrypoint": "0x08002400",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002400": "check_for_bit_flag_08002400",
                "param_1": "index",
                "uVar1": "counter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800242c": {
            "additional_data": {
                "FUN_0800242c": {
                    "initialize_and_configure": 1,
                    "initialize_and_set_data": 2,
                    "initialize_and_setup": 1,
                    "initialize_configuration": 1,
                    "initialize_data": 24,
                    "initialize_data_with_timeout": 1
                },
                "LAB_08002444_1": {
                    "callback_label": 1,
                    "completion_handler": 1,
                    "label": 1,
                    "label1": 2,
                    "label_1": 4
                },
                "initialize_data_08007648": {
                    "init_data": 1,
                    "initialize_data": 1,
                    "initialize_data_helper": 1,
                    "initialize_with_parameters": 1
                },
                "param_1": {
                    "arg1": 6,
                    "argument_1": 1,
                    "config_param": 2,
                    "config_param_1": 1,
                    "data": 1,
                    "data_1": 1,
                    "data_param": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "param1": 7,
                    "param_1": 5,
                    "param_a": 1,
                    "param_x": 1,
                    "socket_descriptor": 1
                },
                "param_2": {
                    "arg2": 2,
                    "argument_2": 1,
                    "config_param_2": 1,
                    "data_2": 1,
                    "interval_param": 1,
                    "param2": 4,
                    "param_2": 3,
                    "param_b": 1,
                    "param_y": 1,
                    "timeout": 1,
                    "timeout_param": 1
                },
                "param_3": {
                    "arg3": 2,
                    "argument_3": 1,
                    "config_param_3": 1,
                    "data_3": 1,
                    "param3": 4,
                    "param_3": 3,
                    "param_c": 1,
                    "param_z": 1,
                    "size": 1,
                    "value_param": 2
                },
                "param_4": {
                    "additional_param": 1,
                    "arg4": 6,
                    "argument_4": 1,
                    "callback_func": 1,
                    "callback_param": 2,
                    "config_param": 1,
                    "config_param_4": 1,
                    "data_4": 1,
                    "data_param": 1,
                    "param4": 7,
                    "param_4": 7,
                    "param_d": 1,
                    "param_w": 1
                }
            },
            "called": [
                "FUN_08007648"
            ],
            "calling": [
                "FUN_080025ac"
            ],
            "code": "\nvoid initialize_and_set_data_0800242c(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  initialize_with_parameters(param1,60000,0x5dc,&label_1,param4);\n  return;\n}\n\n",
            "current_name": "initialize_and_set_data_0800242c",
            "entrypoint": "0x0800242c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800242c": "initialize_and_set_data_0800242c",
                "LAB_08002444_1": "label_1",
                "initialize_data_08007648": "initialize_with_parameters",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002578": {
            "additional_data": {
                "DAT_": {
                    "": 2
                },
                "FUN_08002578": {
                    "initialize_and_set_control_registers": 5,
                    "initialize_control_registers": 26
                },
                "PTR_": {
                    "": 2
                },
                "initialize_and_set_control_registers_080076e0": {
                    "": 1,
                    "initialize_and_set_control_registers": 17,
                    "initialize_control_registers": 7,
                    "initialize_control_registers_helper": 1,
                    "initialize_ctrl_regs": 1,
                    "initialize_registers": 1
                },
                "initialize_control_registers": {
                    "": 1
                }
            },
            "called": [
                "FUN_080076e0"
            ],
            "calling": [
                "FUN_08002644"
            ],
            "code": "\nvoid initialize_and_set_control_registers_08002578(void)\n\n{\n  initialize_and_set_control_registers_08002578();\n  return;\n}\n\n",
            "current_name": "initialize_and_set_control_registers_08002578",
            "entrypoint": "0x08002578",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002578": "initialize_and_set_control_registers_08002578",
                "initialize_and_set_control_registers_080076e0": "initialize_and_set_control_registers"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002580": {
            "additional_data": {
                "DAT_20000250": {
                    "data_counter": 1
                },
                "FUN_08002580": {
                    "copy_value_and_increment_counter": 1,
                    "generate_data": 1,
                    "initialize_array_element": 1,
                    "initialize_data": 11,
                    "initialize_memory": 1,
                    "initialize_variable": 1,
                    "process_data": 1,
                    "set_byte_value": 2,
                    "set_data": 1,
                    "set_data_value": 1,
                    "set_default_value": 1,
                    "set_error_code": 1,
                    "set_initial_value": 2,
                    "set_output_value": 1,
                    "set_return_value_and_increment": 1,
                    "set_return_value_and_increment_counter": 1,
                    "set_return_value_based_on_counter": 1,
                    "update_data_array": 1,
                    "update_value": 1
                },
                "cVar1": {
                    "adjusted_value": 1,
                    "character": 1,
                    "counter": 1,
                    "current_value": 2,
                    "new_counter_value": 1,
                    "new_value": 1,
                    "next_char": 3,
                    "next_data": 3,
                    "next_value": 15,
                    "temp_char": 1
                },
                "param_1": {
                    "array": 1,
                    "buffer": 1,
                    "byte_array": 1,
                    "byte_pointer": 1,
                    "data": 1,
                    "data_array": 1,
                    "data_pointer": 2,
                    "error_code": 1,
                    "output": 7,
                    "output_array": 1,
                    "output_buffer": 7,
                    "output_byte": 1,
                    "output_data": 3,
                    "output_ptr": 1,
                    "result": 2
                },
                "uVar2": {
                    "array_index": 1,
                    "array_size": 1,
                    "counter": 10,
                    "counter_limit": 1,
                    "current_value": 1,
                    "data": 1,
                    "data_index": 4,
                    "data_length": 3,
                    "data_size": 5,
                    "data_value": 1,
                    "num_elements": 1,
                    "num_iterations": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080004d4"
            ],
            "code": "\nvoid initialize_data_08002580(byte *output)\n\n{\n  char next_value;\n  uint counter;\n  \n  counter = (uint)DAT_20000250;\n  if (0xb < counter) {\n    *output = 0xff;\n    return;\n  }\n  next_value = DAT_20000250 + 1;\n  *output = DAT_20000250;\n  DAT_20000250 = next_value;\n  *(undefined4 *)(&DAT_2000025c + counter * 8) = 0x5dc;\n  return;\n}\n\n",
            "current_name": "initialize_data_08002580",
            "entrypoint": "0x08002580",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002580": "initialize_data_08002580",
                "cVar1": "next_value",
                "param_1": "output",
                "uVar2": "counter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080025ac": {
            "additional_data": {
                "DAT_20000258": {
                    "byte_array_mapping": 1,
                    "data_array": 7,
                    "data_array1": 1,
                    "data_table": 1,
                    "flag_array": 1,
                    "flag_data_array": 1
                },
                "DAT_200002fc": {
                    "data_value2": 1,
                    "data_variable": 1,
                    "final_value": 1,
                    "flag_data": 1,
                    "global_data": 1,
                    "result": 4,
                    "stored_data": 1,
                    "undefined_data": 1,
                    "updated_byte": 1
                },
                "FUN_080025ac": {
                    "update_and_control_flags": 1,
                    "update_and_initialize_data": 2,
                    "update_byte": 1,
                    "update_byte_and_flags": 1,
                    "update_byte_array": 1,
                    "update_byte_control": 1,
                    "update_byte_with_flags": 1,
                    "update_byte_with_params": 1,
                    "update_control_and_flags": 1,
                    "update_control_flags": 4,
                    "update_data": 2,
                    "update_data_and_flags": 2,
                    "update_flags": 1,
                    "update_flags_and_control": 2,
                    "update_flags_and_data": 5,
                    "update_flags_and_values": 5
                },
                "VAR_080025ac_1": {
                    "shifted_offset1": 1
                },
                "VAR_080025ac_2": {
                    "shifted_offset2": 1
                },
                "check_for_bit_flag_08002400": {
                    "check_bit_flag": 4,
                    "check_for_bit_flag": 5
                },
                "iVar4": {
                    "adjusted_offset1": 1,
                    "adjusted_value": 2,
                    "calculation_result": 1,
                    "correction_value": 1,
                    "new_value4": 1,
                    "offset": 6,
                    "offset_1": 1,
                    "temp1": 1,
                    "temp4": 3,
                    "temp_offset": 2,
                    "temp_value": 3,
                    "temp_var": 4,
                    "temp_var4": 1,
                    "temp_var_1": 1,
                    "temp_variable": 1,
                    "temp_variable_1": 1,
                    "updated_var4": 1
                },
                "initialize_and_set_data_0800242c": {
                    "initialize_and_set_data": 5,
                    "initialize_and_set_global_data": 1,
                    "initialize_set_data": 1
                },
                "offset_2": {
                    "offset_2": 1
                },
                "param_1": {
                    "array": 1,
                    "byte_array": 6,
                    "data": 15,
                    "data_ptr": 3,
                    "input": 1,
                    "input_array": 2,
                    "input_data": 2
                },
                "param_2": {
                    "control_value": 1,
                    "data_flag": 1,
                    "flag": 3,
                    "flag_update": 1,
                    "initial_value": 1,
                    "input_value": 1,
                    "param_value": 4,
                    "param_x": 1,
                    "value": 18
                },
                "param_3": {
                    "flag1": 1,
                    "int_value1": 1,
                    "offset1": 10,
                    "offset_1": 4,
                    "param_3": 2,
                    "param_a": 4,
                    "param_y": 1,
                    "value1": 3,
                    "value_1": 3,
                    "value_3": 1,
                    "var1": 1
                },
                "param_4": {
                    "flag2": 1,
                    "int_value2": 1,
                    "offset2": 10,
                    "offset_2": 4,
                    "param_4": 2,
                    "param_b": 4,
                    "param_z": 1,
                    "value2": 3,
                    "value_2": 3,
                    "value_4": 1,
                    "var2": 1
                },
                "reverse_control_and_update_flags_08008990": {
                    "reverse_and_set_flags": 1,
                    "reverse_and_update_flags": 1,
                    "reverse_control_and_update_flags": 3,
                    "reverse_control_update_flags": 1
                },
                "uVar1": {
                    "combined_data_flag": 1,
                    "flag1": 2,
                    "flag_value": 2,
                    "masked_value": 1,
                    "modified_value": 1,
                    "new_data": 1,
                    "new_value1": 2,
                    "temp1": 4,
                    "temp_value_1": 1,
                    "temp_var1": 1,
                    "updated_byte": 1,
                    "updated_byte_value": 1,
                    "updated_data": 3,
                    "updated_flag": 3,
                    "updated_flag_value": 1,
                    "updated_value": 5,
                    "updated_var1": 1
                },
                "uVar2": {
                    "array_element": 1,
                    "byte_data": 2,
                    "byte_index": 1,
                    "byte_val": 1,
                    "byte_value": 4,
                    "data_byte": 1,
                    "data_index": 3,
                    "data_value": 4,
                    "flag2": 2,
                    "index": 3,
                    "input_value": 1,
                    "new_value2": 1,
                    "temp2": 4,
                    "temp_value_2": 1,
                    "temp_var2": 1,
                    "updated_var2": 1
                },
                "uVar3": {
                    "byte_divisor": 1,
                    "data_divided": 2,
                    "div": 1,
                    "div_result": 1,
                    "div_value": 1,
                    "divided_data_len": 1,
                    "divided_value": 3,
                    "division_result": 11,
                    "divisor": 2,
                    "flag3": 1,
                    "new_value3": 1,
                    "temp3": 4,
                    "temp_var3": 1,
                    "updated_var3": 1
                }
            },
            "called": [
                "FUN_0800242c",
                "FUN_08002400",
                "FUN_08008990"
            ],
            "calling": [
                "FUN_08002634",
                "FUN_08000500"
            ],
            "code": "\nbyte update_data_and_flags_080025ac(byte *data,uint value,int offset1,int offset2)\n\n{\n  uint updated_value;\n  uint temp2;\n  uint division_result;\n  int offset;\n  \n  if (*data < 0xc) {\n    reverse_control_and_update_flags(value,1,offset1,*data,offset2);\n    temp2 = (uint)*data;\n    updated_value = (byte)(&DAT_20000258)[temp2 * 8] & 0xffffffc0 | value & 0x3f;\n    (&DAT_20000258)[temp2 * 8] = (char)updated_value;\n    offset = -offset1 + 0x220;\n    if (offset < 0) {\n      offset = -offset1 + 0x223;\n    }\n    data[1] = (byte)((uint)(offset << 0x16) >> 0x18);\n    offset = -offset2 + 0x960;\n    if (offset < 0) {\n      offset = -offset2 + 0x963;\n    }\n    data[2] = (byte)((uint)(offset << 0x16) >> 0x18);\n    division_result = *data / 0xc;\n    offset = check_for_bit_flag(division_result,updated_value,temp2,(uint)*data * -0x55555555);\n    if (offset == 0) {\n      DAT_200002fc = (undefined)division_result;\n      initialize_and_set_data();\n    }\n    (&DAT_20000258)[(uint)*data * 8] = (&DAT_20000258)[(uint)*data * 8] | 0x40;\n  }\n  return *data;\n}\n\n",
            "current_name": "update_data_and_flags_080025ac",
            "entrypoint": "0x080025ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080025ac": "update_data_and_flags_080025ac",
                "check_for_bit_flag_08002400": "check_for_bit_flag",
                "iVar4": "offset",
                "initialize_and_set_data_0800242c": "initialize_and_set_data",
                "param_1": "data",
                "param_2": "value",
                "param_3": "offset1",
                "param_4": "offset2",
                "reverse_control_and_update_flags_08008990": "reverse_control_and_update_flags",
                "uVar1": "updated_value",
                "uVar2": "temp2",
                "uVar3": "division_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002634": {
            "additional_data": {
                "FUN_08002634": {
                    "initialize_data_and_flags": 1,
                    "update_and_flag": 1,
                    "update_and_flag_data": 1,
                    "update_and_flag_process": 1,
                    "update_and_store_data": 1,
                    "update_data": 9,
                    "update_data_and_flags": 12,
                    "update_data_flags": 4,
                    "update_flags": 1
                },
                "param_1": {
                    "arg1": 3,
                    "data1": 2,
                    "data_1": 17,
                    "data_param": 1,
                    "data_pointer1": 1,
                    "input_1": 1,
                    "input_data_1": 1,
                    "input_param": 1,
                    "input_param1": 1,
                    "input_param_1": 2,
                    "param_1": 1
                },
                "param_2": {
                    "arg2": 3,
                    "data2": 2,
                    "data_2": 17,
                    "data_pointer2": 1,
                    "flags_param": 1,
                    "input_2": 1,
                    "input_data_2": 1,
                    "input_param2": 1,
                    "input_param_2": 2,
                    "output_param": 1,
                    "param_2": 1
                },
                "param_3": {
                    "arg3": 1,
                    "constant_1": 5,
                    "offset_1": 1,
                    "param_3": 1,
                    "temp_1": 1,
                    "unused_param": 1
                },
                "param_4": {
                    "arg4": 3,
                    "constant_2": 5,
                    "data4": 2,
                    "data_4": 6,
                    "data_pointer4": 1,
                    "flag_param": 1,
                    "flags": 5,
                    "input_4": 1,
                    "input_param4": 1,
                    "input_param_4": 2,
                    "offset_2": 1,
                    "param": 1,
                    "param_4": 1,
                    "temp_2": 1
                },
                "update_data_and_flags_080025ac": {
                    "update_data_and_flags": 1
                }
            },
            "called": [
                "FUN_080025ac"
            ],
            "calling": [
                "FUN_08000500"
            ],
            "code": "\nvoid update_data_and_flags_08002634(undefined4 data_1,undefined4 data_2,undefined4 constant_1,undefined4 data_4)\n\n{\n  update_data_and_flags_08002634(data_1,data_2,0x220,0x960,data_4);\n  return;\n}\n\n",
            "current_name": "update_data_and_flags_08002634",
            "entrypoint": "0x08002634",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002634": "update_data_and_flags_08002634",
                "param_1": "data_1",
                "param_2": "data_2",
                "param_3": "constant_1",
                "param_4": "data_4",
                "update_data_and_flags_080025ac": "update_data_and_flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002644": {
            "additional_data": {
                "FUN_08002644": {
                    "apply_bit_flag": 1,
                    "decode_and_initialize": 1,
                    "initialize_and_check_bit_flag": 1,
                    "initialize_and_check_flag": 1,
                    "initialize_and_check_for_bit": 1,
                    "initialize_control_registers": 3,
                    "process_byte": 3,
                    "process_byte_array": 1,
                    "process_byte_data": 3,
                    "process_byte_input": 1,
                    "process_data": 6,
                    "process_input": 1,
                    "process_param": 1,
                    "update_control_registers": 7
                },
                "bVar1": {
                    "bit_value": 1,
                    "byte_val": 1,
                    "byte_value": 6,
                    "byte_var": 1,
                    "current_bit_flag": 1,
                    "current_byte": 3,
                    "current_flag": 1,
                    "current_value": 6,
                    "flag": 3,
                    "modified_byte": 4,
                    "original_flag": 1,
                    "original_value": 1,
                    "updated_byte": 1,
                    "value": 1
                },
                "check_for_bit_flag_08002400": {
                    "check_bit_flag": 1
                },
                "iVar3": {
                    "check_result": 8,
                    "flag_check_result": 2,
                    "result": 21
                },
                "initialize_and_set_control_registers_08002578": {
                    "initialize_registers": 1
                },
                "param_1": {
                    "buffer": 1,
                    "byte_array": 4,
                    "byte_data": 4,
                    "data": 17,
                    "data_ptr": 2,
                    "input_buffer": 1,
                    "input_data": 2
                },
                "param_2": {
                    "config1": 1,
                    "flag": 4,
                    "flag1": 3,
                    "flag_1": 1,
                    "param1": 1,
                    "param2": 8,
                    "param_2": 6,
                    "param_a": 1,
                    "parameter_2": 1,
                    "value1": 3,
                    "value_1": 1
                },
                "param_3": {
                    "config2": 1,
                    "flag2": 1,
                    "flag_2": 1,
                    "param2": 1,
                    "param3": 8,
                    "param_3": 6,
                    "parameter_3": 1,
                    "register": 1,
                    "reserved": 1,
                    "unknown_value": 1,
                    "value2": 3,
                    "value_2": 1
                },
                "param_4": {
                    "config3": 1,
                    "control_flag": 1,
                    "data": 1,
                    "flag": 1,
                    "flag2": 2,
                    "flag3": 1,
                    "flag_3": 1,
                    "param3": 1,
                    "param4": 8,
                    "param_4": 7,
                    "param_b": 1,
                    "parameter": 1,
                    "parameter_4": 1,
                    "value3": 3,
                    "value_3": 1
                },
                "uVar2": {
                    "byte_value": 5,
                    "converted_value": 1,
                    "data": 1,
                    "data_index": 1,
                    "first_byte": 10,
                    "index": 11,
                    "input_value": 2
                }
            },
            "called": [
                "FUN_08002400",
                "FUN_08002578"
            ],
            "calling": [
                "FUN_08000588"
            ],
            "code": "\nvoid process_byte_data_08002644(byte *data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  byte current_value;\n  uint index;\n  int result;\n  \n  index = (uint)*data;\n  current_value = (&DAT_20000258)[index * 8];\n  (&DAT_20000258)[index * 8] = current_value & 0xbf;\n  result = check_bit_flag(index / 0xc,param2,current_value & 0xbf,index * -0x55555555,param4);\n  if (result == 0) {\n    initialize_registers(&DAT_200002b8);\n  }\n  return;\n}\n\n",
            "current_name": "process_byte_data_08002644",
            "entrypoint": "0x08002644",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002644": "process_byte_data_08002644",
                "bVar1": "current_value",
                "check_for_bit_flag_08002400": "check_bit_flag",
                "iVar3": "result",
                "initialize_and_set_control_registers_08002578": "initialize_registers",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar2": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800267c": {
            "additional_data": {
                "DAT_2000025c": {
                    "array_base": 1,
                    "array_data": 1,
                    "array_of_arrays": 1,
                    "data_array": 1
                },
                "FUN_0800267c": {
                    "function_update_data": 1,
                    "update_array": 1,
                    "update_array_element": 1,
                    "update_array_value": 5,
                    "update_data": 8,
                    "update_data_mapping": 1,
                    "update_int_array_element": 1,
                    "update_int_array_value": 1,
                    "update_memory_value": 1,
                    "update_parameter": 1,
                    "update_parameter_value": 2,
                    "update_pointer_based_on_condition": 1,
                    "update_scores": 1,
                    "update_value_at_index_if_low": 1,
                    "update_value_based_on_conditions": 1,
                    "update_values": 2,
                    "update_variable": 2
                },
                "iVar1": {
                    "adjusted_value": 1,
                    "calculated_value": 4,
                    "calculation_result": 3,
                    "index": 8,
                    "multiplier": 4,
                    "new_value": 6,
                    "offset": 1,
                    "result": 2,
                    "temp_index": 1
                },
                "param_1": {
                    "array": 10,
                    "byte_array": 2,
                    "byte_data": 1,
                    "data": 11,
                    "data_buffer": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "input_array": 2,
                    "memory_address": 1
                },
                "param_2": {
                    "condition_value": 1,
                    "data_value": 1,
                    "element_value": 1,
                    "index": 2,
                    "input_value": 1,
                    "score": 1,
                    "size": 2,
                    "target_index": 1,
                    "value": 21
                }
            },
            "called": [],
            "calling": [
                "FUN_080026b0"
            ],
            "code": "\nvoid update_data_mapping_0800267c(byte *data,int value)\n\n{\n  int index;\n  \n  if (*data < 0xc) {\n    index = (0x88 - (char)data[1]) * 4;\n    if ((index - value == 0 || index < value) &&\n       (index = (600 - (char)data[2]) * 4,\n       value == index || value + (600 - (char)data[2]) * -4 < 0 != SBORROW4(value,index)))\n    {\n      index = value;\n    }\n    *(int *)(&DAT_2000025c + (uint)*data * 8) = index;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_mapping_0800267c",
            "entrypoint": "0x0800267c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800267c": "update_data_mapping_0800267c",
                "iVar1": "index",
                "param_1": "data",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080026b0": {
            "additional_data": {
                "0": {
                    "min_value": 1
                },
                "0x220": {
                    "max_value": 1
                },
                "0x88": {
                    "char_value1": 1
                },
                "0xb4": {
                    "default_max_value": 1
                },
                "FUN_080026b0": {
                    "adjust_and_store_data": 1,
                    "adjust_and_update_data": 3,
                    "adjust_and_update_mapping": 1,
                    "adjust_data_mapping": 1,
                    "update_adjusted_value": 1,
                    "update_adjusted_value_and_update_data_mapping": 1,
                    "update_data": 6,
                    "update_data_mapping": 12,
                    "update_mapping": 4,
                    "update_mapping_based_on_input": 1
                },
                "calculate_adjusted_value_08008ef4": {
                    "calculate_adjusted_value": 23
                },
                "param_1": {
                    "address": 3,
                    "data_address": 7,
                    "data_index": 1,
                    "data_mapping_pointer": 1,
                    "data_pointer": 2,
                    "data_ptr": 4,
                    "input_1": 1,
                    "input_address": 5,
                    "input_data": 3,
                    "input_param": 1,
                    "input_value": 1,
                    "memory_address": 1,
                    "source_address": 1
                },
                "param_2": {
                    "base_value": 1,
                    "data_value": 1,
                    "initial_value": 2,
                    "input_2": 1,
                    "input_value": 7,
                    "value": 17,
                    "value_param": 1,
                    "value_to_adjust": 1
                },
                "update_data_mapping_0800267c": {
                    "update_data_map": 1,
                    "update_data_mapping": 19,
                    "update_data_mapping_internal": 1,
                    "update_mapping": 2
                }
            },
            "called": [
                "FUN_0800267c",
                "FUN_08008ef4"
            ],
            "calling": [
                "FUN_0800021a"
            ],
            "code": "\nvoid update_adjusted_value_and_update_data_mapping_080026b0(int data_address,int value)\n\n{\n  if (value < 0x220) {\n    if (value < 0) {\n      value = 0;\n    }\n    else if (0xb4 < value) {\n      value = 0xb4;\n    }\n    value = calculate_adjusted_value(value,0,0xb4,(0x88 - *(char *)(data_address + 1)) * 4,\n                           (600 - *(char *)(data_address + 2)) * 4);\n  }\n  update_data_mapping(data_address,value);\n  return;\n}\n\n",
            "current_name": "update_adjusted_value_and_update_data_mapping_080026b0",
            "entrypoint": "0x080026b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080026b0": "update_adjusted_value_and_update_data_mapping_080026b0",
                "calculate_adjusted_value_08008ef4": "calculate_adjusted_value",
                "param_1": "data_address",
                "param_2": "value",
                "update_data_mapping_0800267c": "update_data_mapping"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080026f8": {
            "additional_data": {
                "8": {
                    "constant": 1
                },
                "DAT_20000258": {
                    "bit_array": 2,
                    "bit_data": 1,
                    "bit_lookup_table": 1,
                    "bit_table": 1,
                    "bit_value_array": 1,
                    "bitmask_lookup_table": 1,
                    "byte_array_data": 1,
                    "data": 1,
                    "data_array": 4,
                    "data_buffer": 1,
                    "data_pointer": 1,
                    "data_table": 1,
                    "lookup_table": 1
                },
                "FUN_080026f8": {
                    "bit_shift_and_extract": 1,
                    "bit_shift_and_extract_index": 1,
                    "bit_shift_value": 1,
                    "bitwise_shift_and_extract": 1,
                    "byte_to_bitwise_operation": 1,
                    "calculate_shifted_value": 2,
                    "decode_byte": 1,
                    "extract_and_shift": 1,
                    "extract_bit": 2,
                    "extract_bit_from_array": 1,
                    "extract_bit_from_byte": 1,
                    "extract_bit_from_table": 1,
                    "extract_byte_value": 1,
                    "extract_value_from_byte_array": 1,
                    "extracted_byte": 1,
                    "extracted_byte_to_bit_position": 1,
                    "get_bit_from_data": 2,
                    "get_bit_from_lookup_table": 2,
                    "get_bit_from_table": 1,
                    "get_bit_value": 2,
                    "get_bitmask_from_lookup_table": 1,
                    "get_bits_from_byte": 1,
                    "get_shifted_value": 1,
                    "get_value_from_lookup_table": 1,
                    "reverse_bitwise_operation": 1,
                    "reverse_byte_count": 1
                },
                "byte": {
                    "input_byte": 1
                },
                "d": {
                    "lookup_index": 1
                },
                "param_1": {
                    "byte_array": 4,
                    "data": 3,
                    "input": 6,
                    "input_array": 2,
                    "input_byte": 12,
                    "input_byte_ptr": 1,
                    "input_data": 2
                },
                "uint": {
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080005f8",
                "FUN_08001cd0"
            ],
            "code": "\nresult get_bit_from_data_080026f8(input_byte *input_byte)\n\n{\n  return ((result)(input_byte)(&DAT_20000258)[(result)*input_byte * 8] << 0x19) >> 0x1f;\n}\n\n",
            "current_name": "get_bit_from_data_080026f8",
            "entrypoint": "0x080026f8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080026f8": "get_bit_from_data_080026f8",
                "byte": "input_byte",
                "param_1": "input_byte",
                "uint": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800270c": {
            "additional_data": {
                "DAT_200003b5": {
                    "dat_start": 1,
                    "data2": 1,
                    "data_2": 2,
                    "data_value2": 1,
                    "data_value_2": 1,
                    "data_variable_2": 1,
                    "num2": 1,
                    "second_data": 2,
                    "second_value": 3,
                    "value2": 18
                },
                "DAT_200003b7": {
                    "dat_end": 1,
                    "data1": 1,
                    "data_1": 2,
                    "data_value1": 1,
                    "data_value_1": 1,
                    "data_variable_1": 1,
                    "first_data": 2,
                    "first_value": 3,
                    "num1": 1,
                    "value1": 18
                },
                "FUN_0800270c": {
                    "calculate_dat_difference": 1,
                    "calculate_data_difference": 2,
                    "calculate_difference": 28
                }
            },
            "called": [],
            "calling": [
                "FUN_08001c18"
            ],
            "code": "\nint calculate_data_difference_0800270c(void)\n\n{\n  return (uint)DAT_200003b7 - (uint)DAT_200003b5;\n}\n\n",
            "current_name": "calculate_data_difference_0800270c",
            "entrypoint": "0x0800270c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800270c": "calculate_data_difference_0800270c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002720": {
            "additional_data": {
                "DAT_200003b5": {
                    "buffer_offset": 1,
                    "byte_index_limit": 1,
                    "current_index": 19,
                    "data_index": 1,
                    "data_length": 1,
                    "data_start": 1,
                    "index_limit": 1,
                    "memory_start_index": 1,
                    "start_index": 2,
                    "start_offset": 1
                },
                "DAT_200003b7": {
                    "array_length": 1,
                    "array_size": 1,
                    "buffer_size": 2,
                    "byte_array_length": 1,
                    "data_end": 1,
                    "data_length": 3,
                    "end_index": 5,
                    "end_offset": 1,
                    "max_data_length": 1,
                    "max_index": 11,
                    "memory_end_index": 1,
                    "total_index_count": 1
                },
                "DAT_200003c8": {
                    "array_address": 1,
                    "buffer": 4,
                    "buffer_address": 1,
                    "byte_array": 3,
                    "data_array": 8,
                    "data_buffer": 3,
                    "memory_address": 4,
                    "memory_location": 1,
                    "memory_pointer": 1,
                    "memory_start": 2,
                    "memory_start_address": 1
                },
                "FUN_08002720": {
                    "extract_byte_from_array": 1,
                    "extract_byte_from_data": 1,
                    "extract_byte_from_memory": 1,
                    "extracted_byte_at_index": 1,
                    "fetch_next_byte_from_memory": 1,
                    "get_byte_at_index": 1,
                    "get_byte_at_offset": 1,
                    "get_byte_from_offset": 1,
                    "get_next_byte": 10,
                    "get_next_byte_from_buffer": 1,
                    "get_next_byte_from_data": 1,
                    "read_byte_from_buffer": 1,
                    "read_byte_from_data": 1,
                    "read_byte_from_memory": 6,
                    "read_next_byte": 1,
                    "read_next_byte_from_memory": 1,
                    "retrieve_byte_from_memory": 1
                },
                "return": {
                    "byte_value": 1
                },
                "uVar1": {
                    "counter": 1,
                    "current_byte_index": 1,
                    "current_index": 5,
                    "current_offset": 2,
                    "data_index": 1,
                    "index": 21
                }
            },
            "called": [],
            "calling": [
                "FUN_08001c08"
            ],
            "code": "\nuint get_next_byte_from_data_08002720(void)\n\n{\n  uint index;\n  \n  index = (uint)DAT_200003b5;\n  if (index < DAT_200003b7) {\n    DAT_200003b5 = DAT_200003b5 + 1;\n    byte_value (uint)*(byte *)(DAT_200003c8 + index);\n  }\n  byte_value 0xffffffff;\n}\n\n",
            "current_name": "get_next_byte_from_data_08002720",
            "entrypoint": "0x08002720",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002720": "get_next_byte_from_data_08002720",
                "return": "byte_value",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080027f0": {
            "additional_data": {
                "0x14": {
                    "offset_constant": 1
                },
                "0x20": {
                    "default_buffer_size": 1,
                    "minimum_buffer_size": 1
                },
                "ALLOCATE_MEMORY_AND_PROCESS_DATA_08009908": {
                    "allocate_memory_and_process_data": 1
                },
                "DAT_200003b4": {
                    "allocate_memory_flag": 1,
                    "copy_to_buffer": 1,
                    "flag": 15,
                    "flag1": 2,
                    "is_buffer_empty": 3,
                    "is_buffer_full": 1,
                    "is_buffer_ready": 1,
                    "is_data_copied": 2,
                    "is_data_valid": 1,
                    "is_zero": 1,
                    "should_copy_data": 1,
                    "use_default_buffer": 1
                },
                "DAT_200003b6": {
                    "buffer_current_address": 1,
                    "buffer_data_offset": 1,
                    "buffer_index": 1,
                    "buffer_index2": 1,
                    "buffer_offset": 5,
                    "buffer_offset2": 1,
                    "buffer_offset_2": 1,
                    "buffer_offset_updated": 1,
                    "buffer_position": 1,
                    "buffer_ptr_offset": 1,
                    "buffer_start": 3,
                    "current_buffer_offset": 1
                },
                "DAT_200003b8": {
                    "buffer_end": 6,
                    "buffer_end_address": 1,
                    "buffer_length": 3,
                    "buffer_offset": 6,
                    "buffer_position": 1,
                    "buffer_size": 3,
                    "buffer_start": 1,
                    "current_buffer_data_length": 1,
                    "current_buffer_length": 1,
                    "current_buffer_offset": 1,
                    "current_buffer_size": 2,
                    "current_length": 1,
                    "data_end": 1,
                    "flag2": 1,
                    "previous_data_length": 1
                },
                "DAT_200003c5": {
                    "buffer_capacity": 5,
                    "buffer_length": 1,
                    "buffer_limit": 3,
                    "buffer_size": 8,
                    "current_buffer_size": 1,
                    "current_data_length": 1,
                    "current_length": 1,
                    "max_buffer_data_length": 1,
                    "max_buffer_length": 4,
                    "max_buffer_size": 2,
                    "max_length": 1,
                    "max_size": 1,
                    "maximum_buffer_size": 1
                },
                "DAT_200003cc": {
                    "allocated_buffer": 5,
                    "allocated_memory": 1,
                    "allocated_memory_ptr": 1,
                    "buffer": 11,
                    "buffer_address": 4,
                    "buffer_data_size": 1,
                    "buffer_pointer": 1,
                    "buffer_ptr": 2,
                    "buffer_ptr_new": 1,
                    "data_buffer": 2,
                    "data_buffer_ptr": 1
                },
                "FUN_080027f0": {
                    "copy_and_process_data": 5,
                    "copy_data": 2,
                    "copy_data_and_process": 1,
                    "copy_data_to_buffer": 1,
                    "process_buffer": 1,
                    "process_buffer_data": 2,
                    "process_data": 19
                },
                "allocate_memory_and_process_data_08009908": {
                    "allocate_and_process": 1,
                    "allocate_and_process_data": 7,
                    "allocate_memory": 1,
                    "allocate_memory_and_process_data": 16
                },
                "copy_data_to_buffer_08007ede": {
                    "copy_data": 1,
                    "copy_data_to_buffer": 24,
                    "copy_data_to_buffer_helper": 1
                },
                "copy_data_to_buffer_080091b0": {
                    "append_data_to_buffer": 1,
                    "copy_data_to_buffer": 6,
                    "copy_data_to_buffer2": 8,
                    "copy_data_to_buffer_2": 2,
                    "copy_data_to_buffer_and_update": 1,
                    "copy_data_to_buffer_in_memory": 1,
                    "copy_data_to_buffer_incrementally": 1,
                    "copy_data_to_buffer_plus_offset": 1,
                    "copy_data_to_buffer_with_offset": 4,
                    "copy_to_buffer": 1
                },
                "iVar1": {
                    "copy_result": 25,
                    "copy_status": 2,
                    "error_code": 1,
                    "result": 3
                },
                "param_1": {
                    "base_address": 1,
                    "buffer_address": 1,
                    "buffer_index": 2,
                    "buffer_offset": 9,
                    "buffer_ptr": 2,
                    "data_offset": 2,
                    "input_offset": 6,
                    "offset": 5,
                    "source_offset": 2,
                    "start_address": 1
                },
                "param_2": {
                    "buffer_pointer": 1,
                    "data": 8,
                    "data_buffer": 2,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "destination_address": 1,
                    "input_buffer": 1,
                    "input_data": 3,
                    "source_address": 1,
                    "source_buffer": 1,
                    "source_data": 8,
                    "source_data_ptr": 1,
                    "value": 1
                },
                "param_3": {
                    "data_length": 11,
                    "data_size": 9,
                    "input_length": 1,
                    "input_size": 2,
                    "length": 4,
                    "size": 2,
                    "source_data_length": 1,
                    "source_length": 1
                },
                "return": {
                    "result": 1
                },
                "uVar2": {
                    "new_buffer_size": 1,
                    "new_data_length": 10,
                    "new_data_size": 7,
                    "new_length": 5,
                    "new_size": 4,
                    "updated_data_length": 1,
                    "updated_length": 2,
                    "updated_size": 1
                }
            },
            "called": [
                "FUN_08007ede",
                "FUN_08009908",
                "FUN_080091b0"
            ],
            "calling": [],
            "code": "\nuint copy_data_and_process_080027f0(int buffer_offset,undefined4 source_data,uint data_length)\n\n{\n  int copy_result;\n  uint new_data_length;\n  \n  if (DAT_200003b4 == '\\0') {\n    copy_result = copy_data_to_buffer(buffer_offset + 0x14,source_data,data_length & 0xffff);\n    if (copy_result == 0) {\n      result data_length;\n    }\n    result 0;\n  }\n  new_data_length = DAT_200003b8 + data_length;\n  if (DAT_200003c5 < new_data_length) {\n    if (new_data_length < 0x20) {\n      new_data_length = 0x20;\n    }\n    DAT_200003cc = allocate_memory_and_process_data(DAT_200003cc,new_data_length);\n    if (DAT_200003cc == 0) {\n      DAT_200003c5 = 0;\n    }\n    else {\n      DAT_200003c5 = (byte)new_data_length;\n    }\n  }\n  if (DAT_200003cc == 0) {\n    *(undefined4 *)(buffer_offset + 4) = 1;\n    result 0;\n  }\n  copy_data_to_buffer2((uint)DAT_200003b6 + DAT_200003cc,source_data,data_length);\n  DAT_200003b6 = DAT_200003b6 + (char)data_length;\n  DAT_200003b8 = DAT_200003b6;\n  result data_length;\n}\n\n",
            "current_name": "copy_data_and_process_080027f0",
            "entrypoint": "0x080027f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080027f0": "copy_data_and_process_080027f0",
                "allocate_memory_and_process_data_08009908": "allocate_memory_and_process_data",
                "copy_data_to_buffer_08007ede": "copy_data_to_buffer",
                "copy_data_to_buffer_080091b0": "copy_data_to_buffer2",
                "iVar1": "copy_result",
                "param_1": "buffer_offset",
                "param_2": "source_data",
                "param_3": "data_length",
                "return": "result",
                "uVar2": "new_data_length"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800288c": {
            "additional_data": {
                "DAT_200003b4": {
                    "flag": 5,
                    "is_data_copied": 1,
                    "is_null_flag": 1
                },
                "DAT_200003b6": {
                    "buffer_index": 3
                },
                "DAT_200003b8": {
                    "buffer_index": 1,
                    "buffer_length": 2,
                    "buffer_size": 2,
                    "data_index": 1,
                    "processed_data_size": 1
                },
                "DAT_200003c5": {
                    "buffer_size_limit": 1,
                    "current_buffer_size": 1,
                    "current_data_size": 1,
                    "current_length": 1,
                    "max_data_size": 1,
                    "max_size": 1,
                    "maximum_buffer_length": 1
                },
                "DAT_200003cc": {
                    "buffer": 3,
                    "buffer_pointer": 1,
                    "data_buffer": 2,
                    "processed_data_buffer": 1
                },
                "FUN_0800288c": {
                    "copy_and_process_data": 2,
                    "copy_data": 3,
                    "copy_data_to_buffer": 6,
                    "copy_or_add_data_to_buffer": 1,
                    "copy_or_allocate_and_process_data": 1,
                    "copy_or_allocate_buffer": 1,
                    "copy_or_allocate_data": 2,
                    "copy_or_process_data": 5,
                    "copy_or_store_character": 1,
                    "copy_or_store_data": 1,
                    "copy_to_buffer": 3,
                    "process_data": 5
                },
                "allocate_memory_and_process_data_08009908": {
                    "allocate_memory_and_process_data": 4
                },
                "copy_data_to_buffer_08007ede": {
                    "copy_data_to_buffer": 4
                },
                "iVar2": {
                    "copy_result": 26,
                    "copy_status": 2,
                    "result": 3
                },
                "local_11": {
                    "buffer_value": 1,
                    "byte_data": 1,
                    "byte_to_copy": 2,
                    "copied_data": 2,
                    "current_data": 2,
                    "data_byte": 6,
                    "data_to_copy": 1,
                    "input": 1,
                    "input_byte": 2,
                    "input_char": 1,
                    "input_data": 5,
                    "local_data": 5,
                    "processed_data": 1,
                    "updated_data": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 1,
                    "buffer": 3,
                    "buffer_addr": 1,
                    "buffer_address": 3,
                    "buffer_index": 4,
                    "buffer_offset": 3,
                    "buffer_position": 1,
                    "buffer_size": 1,
                    "data_offset": 1,
                    "dst_ptr": 1,
                    "input": 1,
                    "input_address": 1,
                    "input_data_pointer": 1,
                    "input_index": 1,
                    "input_offset": 3,
                    "input_param": 1,
                    "offset": 1,
                    "source_address": 1,
                    "source_offset": 1
                },
                "param_2": {
                    "character": 1,
                    "data": 21,
                    "data_to_copy": 3,
                    "input_byte": 1,
                    "input_data": 4,
                    "value": 1
                },
                "uVar1": {
                    "result": 11,
                    "return_val": 1,
                    "return_value": 7,
                    "success": 11,
                    "success_flag": 1
                },
                "uVar3": {
                    "buffer_size": 6,
                    "new_buffer_length": 1,
                    "new_buffer_size": 4,
                    "new_data_length": 1,
                    "new_data_size": 11,
                    "new_size": 6,
                    "num_bytes": 1,
                    "updated_size": 1
                }
            },
            "called": [
                "FUN_08007ede",
                "FUN_08009908"
            ],
            "calling": [
                "FUN_08001bf8"
            ],
            "code": "\nundefined4 copy_or_allocate_and_process_data_0800288c(int buffer_index,undefined data)\n\n{\n  undefined4 result;\n  int copy_result;\n  uint new_data_size;\n  undefined data_byte;\n  \n  data_byte = data;\n  if (DAT_200003b4 == '\\0') {\n    copy_result = copy_data_to_buffer(buffer_index + 0x14,&data_byte,1);\n    if (copy_result == 0) {\n      result = 1;\n    }\n    else {\n      result = 0;\n    }\n  }\n  else {\n    new_data_size = DAT_200003b8 + 1;\n    if (DAT_200003c5 < new_data_size) {\n      if (new_data_size < 0x20) {\n        new_data_size = 0x20;\n      }\n      DAT_200003cc = allocate_memory_and_process_data(DAT_200003cc,new_data_size);\n      if (DAT_200003cc == 0) {\n        DAT_200003c5 = 0;\n      }\n      else {\n        DAT_200003c5 = (byte)new_data_size;\n      }\n    }\n    if (DAT_200003cc == 0) {\n      *(undefined4 *)(buffer_index + 4) = 1;\n      result = 0;\n    }\n    else {\n      *(undefined *)(DAT_200003cc + (uint)DAT_200003b6) = data_byte;\n      DAT_200003b6 = DAT_200003b6 + 1;\n      result = 1;\n      DAT_200003b8 = DAT_200003b6;\n    }\n  }\n  return result;\n}\n\n",
            "current_name": "copy_or_allocate_and_process_data_0800288c",
            "entrypoint": "0x0800288c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800288c": "copy_or_allocate_and_process_data_0800288c",
                "allocate_memory_and_process_data_08009908": "allocate_memory_and_process_data",
                "copy_data_to_buffer_08007ede": "copy_data_to_buffer",
                "iVar2": "copy_result",
                "local_11": "data_byte",
                "param_1": "buffer_index",
                "param_2": "data",
                "uVar1": "result",
                "uVar3": "new_data_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800291c": {
            "additional_data": {
                "FUN_0800291c": {
                    "initialize_data": 4,
                    "initialize_function": 11,
                    "initialize_param": 2,
                    "initialize_parameters": 11,
                    "initialize_params": 3
                },
                "PTR_FUN_0800288c_1_0800a5a0": {
                    "func_pointer": 1,
                    "function_pointer": 3,
                    "pointer_to_function": 1
                },
                "param_1": {
                    "data": 3,
                    "data_pointer": 1,
                    "function_parameters": 1,
                    "function_params": 8,
                    "function_pointer": 1,
                    "param_array": 2,
                    "param_list": 1,
                    "parameter_array": 2,
                    "parameters": 11,
                    "params": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002948"
            ],
            "code": "\nvoid initialize_param_0800291c(undefined4 *parameters)\n\n{\n  parameters[1] = 0;\n  parameters[2] = 1000;\n  *parameters = &PTR_copy_or_allocate_and_process_data_0800288c_1_0800a5a0;\n  *(undefined *)(parameters + 0x1b) = 0x19;\n  *(undefined *)((int)parameters + 0x6d) = 0x18;\n  return;\n}\n\n",
            "current_name": "initialize_param_0800291c",
            "entrypoint": "0x0800291c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800291c": "initialize_param_0800291c",
                "param_1": "parameters"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002948": {
            "additional_data": {
                "DAT_20000314": {
                    "": 1,
                    "dat_initialized_value": 1,
                    "data": 1,
                    "initialize_data": 1,
                    "param_data": 1
                },
                "FUN_08002948": {
                    "initialize_data": 7,
                    "initialize_if_param1": 1,
                    "initialize_if_param1_is_1": 2,
                    "initialize_if_param1_is_one": 4,
                    "initialize_if_param_1": 1,
                    "initialize_if_param_1_equals_1": 1,
                    "initialize_if_param_1_is_1": 2,
                    "initialize_if_param_1_is_one": 1,
                    "initialize_if_param_equals_one": 2,
                    "initialize_if_param_is_one": 2,
                    "initialize_if_parameter_1_is_1": 1,
                    "initialize_if_parameter_equal_one": 1,
                    "initialize_if_parameter_equals_1": 1,
                    "initialize_if_parameter_equals_one": 1,
                    "initialize_if_parameter_is_one": 1,
                    "initialize_optional_parameter": 1,
                    "initialize_param_if_necessary": 1,
                    "initialize_param_if_needed": 1
                },
                "initialize_param_0800291c": {
                    "initialize_data": 5,
                    "initialize_data_0800291c": 1,
                    "initialize_data_at_0800291c": 1,
                    "initialize_data_param": 1,
                    "initialize_data_structure": 3,
                    "initialize_function": 1,
                    "initialize_param": 6,
                    "initialize_param_0800291c": 1,
                    "perform_initialization": 1
                },
                "param_1": {
                    "check_param1": 1,
                    "check_param_1": 1,
                    "check_parameter": 1,
                    "check_value": 1,
                    "condition": 4,
                    "data_flag": 1,
                    "flag": 5,
                    "input_condition": 1,
                    "input_param": 1,
                    "input_parameter": 2,
                    "is_first_parameter": 1,
                    "is_initialized": 1,
                    "is_one": 2,
                    "is_param1": 1,
                    "is_param1_one": 1,
                    "is_param_1_set": 1,
                    "is_param_one": 1,
                    "is_parameter_one": 1,
                    "param_condition": 1,
                    "parameter_1": 1,
                    "status": 2
                },
                "param_2": {
                    "check_param2": 2,
                    "check_param_2": 1,
                    "compare_value": 1,
                    "condition_parameter": 2,
                    "input_value": 1,
                    "param2": 2,
                    "param2_value": 1,
                    "param_2_value": 1,
                    "param_check": 1,
                    "param_two": 2,
                    "param_value": 3,
                    "parameter_2": 1,
                    "second_parameter": 1,
                    "value": 11,
                    "value_flag": 1
                }
            },
            "called": [
                "FUN_0800291c"
            ],
            "calling": [
                "FUN_08002c1e"
            ],
            "code": "\nvoid initialize_data_08002948(int flag,int value)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    initialize_param(&DAT_20000314);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_08002948",
            "entrypoint": "0x08002948",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002948": "initialize_data_08002948",
                "initialize_param_0800291c": "initialize_param",
                "param_1": "flag",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002968": {
            "additional_data": {
                "DAT_200003b4": {
                    "byte": 1
                },
                "DAT_200003b5": {
                    "byte1": 1,
                    "counter1": 1
                },
                "DAT_200003b6": {
                    "byte2": 1,
                    "counter3": 1
                },
                "DAT_200003b7": {
                    "byte3": 1,
                    "counter2": 1
                },
                "DAT_200003b8": {
                    "byte4": 1,
                    "counter4": 1
                },
                "DAT_200003c4": {
                    "length1": 1,
                    "mem_block1_size": 1
                },
                "DAT_200003c5": {
                    "length2": 1,
                    "mem_block2_size": 1
                },
                "DAT_200003c8": {
                    "mem_block1": 1,
                    "memory_ptr1": 1
                },
                "DAT_200003cc": {
                    "mem_block2": 1,
                    "memory_ptr2": 1
                },
                "FUN_08002968": {
                    "initialize_and_configure_i2c_peripheral": 1,
                    "initialize_communication": 2,
                    "initialize_i2_c": 4,
                    "initialize_i2_c_peripheral": 5,
                    "initialize_i2c": 4,
                    "initialize_i2c_and_update_data_structure": 1,
                    "initialize_i2c_communication": 1,
                    "initialize_i2c_controller": 2,
                    "initialize_i2c_device": 2,
                    "initialize_i2c_peripheral": 1,
                    "initialize_peripheral": 7,
                    "initialize_sensor": 1
                },
                "LAB_08002774_1": {
                    "data_structure1": 1
                },
                "LAB_08002b00_1": {
                    "data_structure2": 1
                },
                "fill_memory_with_byte_080091c6": {
                    "fill_memory_with_byte": 2
                },
                "iVar1": {
                    "shifted_config": 11,
                    "shifted_config_bits": 1,
                    "shifted_config_data": 1,
                    "shifted_config_flags": 2,
                    "shifted_control_byte": 2,
                    "shifted_control_value": 2,
                    "shifted_device_type": 1,
                    "shifted_flags": 2,
                    "shifted_mode": 5,
                    "shifted_options": 2,
                    "shifted_value": 2
                },
                "iVar2": {
                    "i2c_peripheral_address": 2,
                    "peripheral_address": 24,
                    "peripheral_config_ptr": 1,
                    "peripheral_offset": 1,
                    "peripheral_ptr": 1,
                    "peripheral_register": 1,
                    "register_address": 1
                },
                "initialize_i2_c_peripheral_080077b0": {
                    "configure_i2_c_peripheral": 1,
                    "initialize_i2_c_peripheral": 3,
                    "initialize_i2_c_peripheral_080077b0": 1,
                    "initialize_i2_c_peripheral_helper": 1,
                    "initialize_i2c_peripheral": 2,
                    "initialize_i2c_peripheral_with_settings": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 19,
                    "controller_address": 2,
                    "device_address": 5,
                    "i2c_address": 1,
                    "peripheral_address": 2,
                    "sensor_address": 1
                },
                "param_2": {
                    "config": 4,
                    "config_bits": 1,
                    "config_data": 1,
                    "config_flags": 2,
                    "config_value": 4,
                    "configuration": 1,
                    "control_byte": 2,
                    "control_value": 3,
                    "controller_mode": 1,
                    "device_config": 1,
                    "device_type": 1,
                    "flags": 2,
                    "mode": 3,
                    "options": 2,
                    "peripheral_config": 1,
                    "peripheral_mode": 1,
                    "value": 1
                },
                "update_data_structure_08007f7c": {
                    "update_data_structure2": 3,
                    "update_data_structure_08007f7c": 1,
                    "update_data_structure_2": 2,
                    "update_data_structure_for_case2": 1,
                    "update_data_structure_lab_08002b00": 1,
                    "update_data_structure_with_lab_08002b00_1": 1
                },
                "update_data_structure_08007f8e": {
                    "update_data_structure1": 3,
                    "update_data_structure_08007f8e": 1,
                    "update_data_structure_1": 2,
                    "update_data_structure_for_case1": 1,
                    "update_data_structure_lab_08002774": 1,
                    "update_data_structure_with_lab_08002774_1": 1
                }
            },
            "called": [
                "FUN_080091c6",
                "FUN_08007f7c",
                "FUN_080077b0",
                "FUN_08007f8e"
            ],
            "calling": [
                "FUN_08002a1c"
            ],
            "code": "\nvoid initialize_i2_c_peripheral_08002968(int base_address,uint config)\n\n{\n  int shifted_config;\n  int peripheral_address;\n  \n  DAT_200003b5 = 0;\n  DAT_200003b7 = 0;\n  if (DAT_200003c8 != 0) {\n    fill_memory_with_byte(DAT_200003c8,0,DAT_200003c4);\n  }\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  if (DAT_200003cc != 0) {\n    fill_memory_with_byte(DAT_200003cc,0,DAT_200003c5);\n  }\n  DAT_200003b4 = 0;\n  shifted_config = (config & 0x7f) << 1;\n  *(char *)(base_address + 0x10) = (char)shifted_config;\n  if (config == 0x33) {\n    *(undefined *)(base_address + 0x11) = 1;\n  }\n  else {\n    *(undefined *)(base_address + 0x11) = 0;\n  }\n  peripheral_address = base_address + 0x14;\n  initialize_i2_c_peripheral_08002968(peripheral_address,100000,0x4000,shifted_config,*(undefined *)(base_address + 0x11));\n  if (*(char *)(base_address + 0x11) == '\\0') {\n    update_data_structure1(peripheral_address,&data_structure1);\n    update_data_structure2(peripheral_address,&data_structure2);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_i2_c_peripheral_08002968",
            "entrypoint": "0x08002968",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002968": "initialize_i2_c_peripheral_08002968",
                "LAB_08002774_1": "data_structure1",
                "LAB_08002b00_1": "data_structure2",
                "fill_memory_with_byte_080091c6": "fill_memory_with_byte",
                "iVar1": "shifted_config",
                "iVar2": "peripheral_address",
                "initialize_i2_c_peripheral_080077b0": "initialize_i2_c_peripheral",
                "param_1": "base_address",
                "param_2": "config",
                "update_data_structure_08007f7c": "update_data_structure2",
                "update_data_structure_08007f8e": "update_data_structure1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002a1c": {
            "additional_data": {
                "FUN_08002a1c": {
                    "initialize_and_setup_i2c_peripheral": 1,
                    "initialize_i2_c_peripheral": 6,
                    "initialize_i2c": 5,
                    "initialize_i2c_peripheral": 19
                },
                "param_1": {
                    "address": 2,
                    "arg1": 6,
                    "config_param": 1,
                    "config_param_1": 1,
                    "device_address": 1,
                    "first_param": 1,
                    "param": 1,
                    "param1": 1,
                    "param_1": 4,
                    "param_address": 1,
                    "peripheral_address": 10,
                    "undefined_param_1": 1
                },
                "param_2": {
                    "arg2": 6,
                    "config_param_2": 1,
                    "data_bus": 1,
                    "param2": 1,
                    "param_2": 6,
                    "param_undefined": 1,
                    "parameter_2": 1,
                    "second_param": 1,
                    "undefined": 1,
                    "undefined_2": 1,
                    "undefined_param": 3,
                    "undefined_param_2": 3,
                    "unknown_param": 1,
                    "unused": 1,
                    "unused_param": 1
                },
                "param_3": {
                    "arg3": 6,
                    "clock_pin": 1,
                    "config_param_3": 1,
                    "data_param": 1,
                    "data_param_1": 1,
                    "data_pin": 1,
                    "memory_address": 1,
                    "param3": 1,
                    "param_3": 6,
                    "param_value1": 1,
                    "parameter_3": 3,
                    "port_number": 1,
                    "register_address": 1,
                    "size": 1,
                    "third_param": 1,
                    "undefined_param_3": 3,
                    "unused_2": 1
                },
                "param_4": {
                    "address_param": 1,
                    "arg4": 6,
                    "clock_pin": 1,
                    "config_param_4": 1,
                    "data": 1,
                    "data1": 1,
                    "data_length": 1,
                    "data_param_2": 1,
                    "data_pin": 1,
                    "fourth_param": 1,
                    "param4": 1,
                    "param_4": 6,
                    "param_value2": 1,
                    "parameter_4": 2,
                    "size": 1,
                    "undefined_param_4": 3,
                    "unused_3": 1
                }
            },
            "called": [
                "FUN_08002968"
            ],
            "calling": [
                "FUN_08002a26"
            ],
            "code": "\nvoid initialize_and_setup_i2c_peripheral_08002a1c(undefined4 peripheral_address,undefined arg2,undefined4 param_3,undefined4 arg4)\n\n{\n  initialize_i2_c_peripheral_08002968(peripheral_address,arg2,param_3,arg4,arg4);\n  return;\n}\n\n",
            "current_name": "initialize_and_setup_i2c_peripheral_08002a1c",
            "entrypoint": "0x08002a1c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002a1c": "initialize_and_setup_i2c_peripheral_08002a1c",
                "param_1": "peripheral_address",
                "param_2": "arg2",
                "param_4": "arg4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002a26": {
            "additional_data": {
                "0x33": {
                    "i2c_peripheral_id": 1
                },
                "FUN_08002a26": {
                    "initialize_and_setup_i2_c_peripheral": 2,
                    "initialize_and_setup_i2c": 2,
                    "initialize_and_setup_i2c_peripheral": 2,
                    "initialize_i2_c_peripheral": 10,
                    "initialize_i2c_peripheral": 14,
                    "initialize_periph_with_i2_c": 1
                },
                "initialize_and_setup_i2c_peripheral_08002a1c": {
                    "initialize_and_setup_i2_c_peripheral": 1
                },
                "param_1": {
                    "arg1": 1,
                    "arg_1": 1,
                    "device_address": 1,
                    "i2c_peripheral_address": 1,
                    "param": 1,
                    "param1": 11,
                    "param_1": 1,
                    "param_num_1": 1,
                    "peripheral1": 1,
                    "peripheral_address": 9,
                    "peripheral_id": 1,
                    "port_address": 1,
                    "port_number": 1
                },
                "param_2": {
                    "arg2": 1,
                    "arg_2": 1,
                    "param2": 5,
                    "param_num_2": 1,
                    "peripheral2": 1,
                    "unimportant_param": 1,
                    "unused": 2,
                    "unused1": 1,
                    "unused_param": 2
                },
                "param_3": {
                    "address": 1,
                    "arg3": 1,
                    "arg_3": 1,
                    "config_param_1": 1,
                    "config_val1": 1,
                    "data_1": 1,
                    "param3": 13,
                    "param_2": 1,
                    "param_num_3": 1,
                    "register_address": 2,
                    "setting1": 1,
                    "setup_param1": 2,
                    "setup_param_1": 2,
                    "slave_address": 1,
                    "unused": 1,
                    "unused2": 1
                },
                "param_4": {
                    "arg4": 1,
                    "arg_4": 1,
                    "config_param_2": 1,
                    "config_val2": 1,
                    "data": 1,
                    "data1": 1,
                    "data_2": 1,
                    "data_size": 1,
                    "param4": 13,
                    "param_3": 1,
                    "param_num_4": 1,
                    "reserved": 1,
                    "setting2": 1,
                    "setup_param2": 2,
                    "setup_param_2": 2,
                    "unused": 1,
                    "unused3": 1
                }
            },
            "called": [
                "FUN_08002a1c"
            ],
            "calling": [
                "FUN_08000a64"
            ],
            "code": "\nvoid initialize_and_setup_i2c_peripheral_08002a26(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  initialize_and_setup_i2_c_peripheral(param1,0x33,param3,param4,param4);\n  return;\n}\n\n",
            "current_name": "initialize_and_setup_i2c_peripheral_08002a26",
            "entrypoint": "0x08002a26",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002a26": "initialize_and_setup_i2c_peripheral_08002a26",
                "initialize_and_setup_i2c_peripheral_08002a1c": "initialize_and_setup_i2_c_peripheral",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002a30": {
            "additional_data": {
                "DAT_200003b4": {
                    "data_flag": 5,
                    "flag": 4,
                    "is_data_initialized": 1,
                    "is_initialized": 2
                },
                "DAT_200003b6": {
                    "counter": 1,
                    "unused1": 1,
                    "unused_var": 1,
                    "unused_variable": 6,
                    "unused_variable1": 2
                },
                "DAT_200003b8": {
                    "accumulator": 1,
                    "unused2": 1,
                    "unused_var2": 1,
                    "unused_variable": 4,
                    "unused_variable2": 4
                },
                "DAT_200003d0": {
                    "shifted_char": 1,
                    "shifted_input": 4,
                    "shifted_multiplier": 1,
                    "shifted_value": 8
                },
                "FUN_08002a30": {
                    "initialize_data": 30,
                    "set_flag": 1
                },
                "param_1": {
                    "data_pointer": 1,
                    "flag": 2,
                    "param": 3,
                    "param1": 3,
                    "param_1": 1,
                    "parameter1": 1,
                    "status": 6,
                    "status_flag": 1,
                    "undefined_param": 1,
                    "undefined_parameter": 1,
                    "undefined_value": 1,
                    "unused_param": 6,
                    "unused_parameter": 4
                },
                "param_2": {
                    "input": 3,
                    "input_number": 1,
                    "input_value": 15,
                    "multiplier": 2,
                    "param2": 3,
                    "parameter2": 1,
                    "shift_amount": 1,
                    "value": 5
                }
            },
            "called": [],
            "calling": [
                "FUN_08002b68",
                "FUN_08001cd0",
                "FUN_08001c18"
            ],
            "code": "\nvoid initialize_data_08002a30(undefined4 unused_param,int input_value)\n\n{\n  DAT_200003b4 = 1;\n  DAT_200003d0 = (char)(input_value << 1);\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  return;\n}\n\n",
            "current_name": "initialize_data_08002a30",
            "entrypoint": "0x08002a30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002a30": "initialize_data_08002a30",
                "param_1": "unused_param",
                "param_2": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002a58": {
            "additional_data": {
                "DAT_200003b4": {
                    "unused_var2": 1
                },
                "DAT_200003b6": {
                    "unused_var1": 1
                },
                "DAT_200003b8": {
                    "counter": 1
                },
                "DAT_200003cc": {
                    "fill_flag": 1
                },
                "FUN_08002a58": {
                    "check_data": 1,
                    "check_data_and_reset": 1,
                    "check_data_validity": 1,
                    "process_data": 5,
                    "process_input_data": 1,
                    "validate_and_clear_memory": 1,
                    "validate_and_process_data": 2,
                    "validate_data": 18,
                    "validate_data_function": 1
                },
                "PTR_200003b8": {
                    "counter_ptr": 1
                },
                "PTR_200003cc": {
                    "fill_flag_ptr": 1
                },
                "PTR_200003d0": {
                    "memory_ptr": 1
                },
                "fill_memory_with_byte_080091c6": {
                    "fill_memory": 1
                },
                "iVar1": {
                    "data_check_result": 1,
                    "data_processing_result": 1,
                    "data_result": 1,
                    "process_result": 1,
                    "processing_result": 1,
                    "result": 20,
                    "validation_result": 6
                },
                "param_1": {
                    "data": 10,
                    "data_address": 5,
                    "data_offset": 3,
                    "data_pointer": 1,
                    "data_ptr": 8,
                    "input_address": 1,
                    "input_data": 2,
                    "input_ptr": 1
                },
                "uVar2": {
                    "error_code": 3,
                    "result": 2,
                    "ret_val": 1,
                    "return_code": 2,
                    "return_val": 3,
                    "return_value": 16,
                    "status": 4
                }
            },
            "called": [
                "FUN_080091c6",
                "FUN_08007e74"
            ],
            "calling": [
                "FUN_08002b68",
                "FUN_08001c18",
                "FUN_08002ac0"
            ],
            "code": "\nundefined4 validate_and_process_data_08002a58(int data)\n\n{\n  int result;\n  undefined4 return_value;\n  \n  if (*(char *)(data + 0x11) == '\\0') {\n    return_value = 4;\n  }\n  else {\n    result = process_and_validate_data_08007e74(data + 0x14,DAT_200003d0,DAT_200003cc,DAT_200003b8);\n    if (result == 0) {\n      return_value = 0;\n    }\n    else if (result == 1) {\n      return_value = 1;\n    }\n    else {\n      return_value = 4;\n    }\n    if (DAT_200003cc != 0) {\n      fill_memory(DAT_200003cc,0,DAT_200003c5);\n    }\n    DAT_200003b6 = 0;\n    DAT_200003b8 = 0;\n    DAT_200003b4 = 0;\n  }\n  return return_value;\n}\n\n",
            "current_name": "validate_and_process_data_08002a58",
            "entrypoint": "0x08002a58",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002a58": "validate_and_process_data_08002a58",
                "fill_memory_with_byte_080091c6": "fill_memory",
                "iVar1": "result",
                "param_1": "data",
                "uVar2": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ac0": {
            "additional_data": {
                "FUN_08002ac0": {
                    "process_and_validate_data": 11,
                    "process_data": 11,
                    "process_validated_data": 4,
                    "validate_and_process_data": 5
                },
                "param_1": {
                    "data": 5,
                    "data1": 2,
                    "data_1": 10,
                    "data_input": 2,
                    "data_param": 3,
                    "input_data": 7,
                    "input_param": 1
                },
                "param_2": {
                    "data2": 1,
                    "data_2": 6,
                    "unknown": 1,
                    "unused": 2,
                    "unused_param": 9
                },
                "param_3": {
                    "address_1": 1,
                    "config": 1,
                    "context_param": 1,
                    "data2": 1,
                    "data_3": 10,
                    "data_flag": 1,
                    "data_length": 1,
                    "data_param": 1,
                    "data_param_1": 1,
                    "data_size": 1,
                    "data_validation_param": 1,
                    "input": 1,
                    "length": 1,
                    "param1": 1,
                    "param3": 1,
                    "param_a": 1,
                    "size": 1,
                    "unused": 1,
                    "validation_param": 3,
                    "validation_param_1": 1
                },
                "param_4": {
                    "address_2": 1,
                    "buffer": 2,
                    "buffer_param": 1,
                    "data3": 1,
                    "data_4": 10,
                    "data_param_2": 1,
                    "data_processing_param": 1,
                    "data_ptr": 1,
                    "output": 1,
                    "param2": 1,
                    "param4": 2,
                    "param_b": 1,
                    "processing_param": 2,
                    "ptr4": 1,
                    "settings": 1,
                    "unused": 1,
                    "unused_validation_param": 1,
                    "validation_param": 1,
                    "validation_param_2": 1
                },
                "validate_and_process_data_08002a58": {
                    "validate_and_process_data": 2
                }
            },
            "called": [
                "FUN_08002a58"
            ],
            "calling": [
                "FUN_08001cd0"
            ],
            "code": "\nvoid validate_and_process_data_08002ac0(undefined4 data_1,undefined4 unused_param,undefined4 data_3,undefined4 data_4)\n\n{\n  validate_and_process_data_08002ac0(data_1,1,data_3,data_4,data_4);\n  return;\n}\n\n",
            "current_name": "validate_and_process_data_08002ac0",
            "entrypoint": "0x08002ac0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ac0": "validate_and_process_data_08002ac0",
                "param_1": "data_1",
                "param_2": "unused_param",
                "param_3": "data_3",
                "param_4": "data_4",
                "validate_and_process_data_08002a58": "validate_and_process_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002acc": {
            "additional_data": {
                "DAT_200003c4": {
                    "current_data_length": 1,
                    "current_data_size": 1,
                    "current_length": 2,
                    "current_size": 4
                },
                "DAT_200003c8": {
                    "allocated_data": 2,
                    "allocated_data_ptr": 1,
                    "allocated_memory": 3,
                    "data_buffer": 1,
                    "processed_data": 1
                },
                "FUN_08002acc": {
                    "allocate_and_process_data": 30,
                    "allocate_and_update_data": 1
                },
                "param_1": {
                    "data_length": 2,
                    "data_size": 9,
                    "input_length": 2,
                    "input_size": 9,
                    "requested_bytes": 1,
                    "requested_length": 1,
                    "requested_size": 6,
                    "required_size": 1
                },
                "param_2": {
                    "param_2": 2,
                    "placeholder_1": 1,
                    "unused": 2,
                    "unused_param": 4,
                    "unused_param2": 2,
                    "unused_param_1": 2,
                    "unused_param_2": 8,
                    "unused_parameter_2": 1
                },
                "param_3": {
                    "additional_param": 2,
                    "data": 2,
                    "data_buffer": 1,
                    "data_param": 1,
                    "data_pointer": 3,
                    "data_ptr": 2,
                    "input_data": 2,
                    "memory_address": 1,
                    "output_buffer": 1,
                    "param_3": 2,
                    "placeholder_2": 1,
                    "process_param": 1,
                    "processing_param": 1,
                    "some_data": 1,
                    "source_data": 1,
                    "unused_param": 2,
                    "unused_param3": 1,
                    "unused_param_2": 2,
                    "unused_param_3": 3,
                    "user_data": 1
                },
                "param_4": {
                    "additional_param": 4,
                    "additional_parameter": 1,
                    "another_data": 1,
                    "extra_data": 2,
                    "extra_param": 1,
                    "param_4": 3,
                    "parameter4": 1,
                    "placeholder_3": 1,
                    "some_parameter": 1,
                    "third_param": 1,
                    "unused_param": 2,
                    "unused_param4": 2,
                    "unused_param_3": 2,
                    "unused_param_4": 8,
                    "unused_parameter_4": 1
                }
            },
            "called": [
                "FUN_08009908"
            ],
            "calling": [
                "FUN_08002b68"
            ],
            "code": "\nvoid allocate_and_process_data_08002acc(uint input_size,undefined4 unused_param_2,undefined4 unused_param_3,undefined4 unused_param_4)\n\n{\n  if (DAT_200003c4 < input_size) {\n    if (input_size < 0x20) {\n      input_size = 0x20;\n    }\n    DAT_200003c8 = allocate_memory_and_process_data_08009908(DAT_200003c8,input_size,unused_param_3,(uint)DAT_200003c4,unused_param_4);\n    if (DAT_200003c8 == 0) {\n      DAT_200003c4 = 0;\n    }\n    else {\n      DAT_200003c4 = (byte)input_size;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "allocate_and_process_data_08002acc",
            "entrypoint": "0x08002acc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002acc": "allocate_and_process_data_08002acc",
                "param_1": "input_size",
                "param_2": "unused_param_2",
                "param_3": "unused_param_3",
                "param_4": "unused_param_4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002b68": {
            "additional_data": {
                "DAT_200003b5": {
                    "data_value2": 1,
                    "temp_flag1": 1,
                    "temp_var_1": 1
                },
                "DAT_200003b7": {
                    "data_value3": 1,
                    "temp_flag2": 1,
                    "temp_var_2": 1
                },
                "DAT_200003c8": {
                    "data_check": 1,
                    "data_value1": 1,
                    "global_flag": 1
                },
                "FUN_08002b68": {
                    "process_binary_data": 1,
                    "process_binary_function": 1,
                    "process_data": 29
                },
                "allocate_and_process_data_08002acc": {
                    "allocate_and_process_data": 5,
                    "allocate_and_process_input_data": 1
                },
                "iVar1": {
                    "result": 28,
                    "return_value": 3
                },
                "initialize_data_08002a30": {
                    "initialize_data": 5,
                    "initialize_output_data": 1
                },
                "param_1": {
                    "buffer": 1,
                    "data": 8,
                    "data1": 1,
                    "data_array": 2,
                    "data_buffer": 2,
                    "data_pointer": 2,
                    "data_ptr": 8,
                    "input_array": 2,
                    "output": 1,
                    "output_array": 2,
                    "output_buffer": 1,
                    "output_data": 1
                },
                "param_2": {
                    "array_size": 1,
                    "buffer_size": 2,
                    "count": 1,
                    "data_len": 1,
                    "data_length": 4,
                    "data_size": 8,
                    "input_length": 1,
                    "input_size": 4,
                    "length": 1,
                    "output_size": 1,
                    "size": 7
                },
                "param_3": {
                    "config": 3,
                    "config_data": 1,
                    "data": 1,
                    "data2": 1,
                    "data_address": 4,
                    "data_index": 1,
                    "data_length": 3,
                    "data_offset": 2,
                    "data_parameter": 1,
                    "data_segment": 1,
                    "data_size": 2,
                    "data_to_process": 1,
                    "data_value": 2,
                    "input": 1,
                    "input_buffer_size": 1,
                    "input_data": 1,
                    "memory_location": 1,
                    "param": 1,
                    "param1": 1,
                    "processed_data": 1,
                    "value": 1
                },
                "param_4": {
                    "bitmask": 1,
                    "count": 1,
                    "data": 1,
                    "data_length": 1,
                    "data_offset": 2,
                    "data_size": 3,
                    "data_value": 1,
                    "flag": 5,
                    "index": 1,
                    "input_data": 1,
                    "mask": 4,
                    "offset": 1,
                    "param": 1,
                    "param2": 2,
                    "param4": 1,
                    "processing_size": 1,
                    "processing_value": 1,
                    "size": 1,
                    "value": 2
                },
                "param_5": {
                    "byte_data": 2,
                    "byte_input": 1,
                    "byte_param": 1,
                    "byte_val": 1,
                    "byte_value": 9,
                    "flag": 15,
                    "process_flag": 1,
                    "value": 1
                },
                "process_and_check_data_08007f0e": {
                    "process_and_check_data": 6
                },
                "uVar2": {
                    "byte_count": 8,
                    "byte_counter": 1,
                    "byte_index": 3,
                    "byte_val": 1,
                    "byte_value": 1,
                    "converted_flag": 1,
                    "counter": 1,
                    "flag_copy": 2,
                    "flag_index": 2,
                    "flag_value": 7,
                    "processed_bytes": 1,
                    "reduced_flag": 1,
                    "tmp_flag": 1,
                    "value2": 1
                },
                "uVar3": {
                    "address_var": 1,
                    "bitmask_copy": 1,
                    "converted_count": 1,
                    "current_index": 1,
                    "data_copy": 1,
                    "data_param": 1,
                    "data_size": 2,
                    "flag_copy": 1,
                    "input_data_copy": 1,
                    "mask_value": 1,
                    "masked_value": 1,
                    "modified_offset": 1,
                    "original_flag": 1,
                    "original_flag_value": 2,
                    "original_value": 1,
                    "param2_copy": 1,
                    "param5": 1,
                    "param_copy": 1,
                    "size": 1,
                    "size_copy": 1,
                    "size_value": 1,
                    "temp": 1,
                    "temp_data_size": 1,
                    "temp_size": 2,
                    "temp_value": 1,
                    "temp_var": 1,
                    "tmp_offset": 1,
                    "value3": 1
                },
                "validate_and_process_data_08002a58": {
                    "validate_and_process_data": 5,
                    "validate_and_process_output_data": 1
                }
            },
            "called": [
                "FUN_08007f0e",
                "FUN_08002a30",
                "FUN_08002acc",
                "FUN_08002a58"
            ],
            "calling": [
                "FUN_08002c00"
            ],
            "code": "\nundefined4\nprocess_binary_data_08002b68(undefined4 *data_ptr,uint data_size,undefined4 data_address,uint flag,byte flag)\n\n{\n  int result;\n  uint byte_count;\n  uint original_flag_value;\n  \n  byte_count = (uint)flag;\n  if (*(char *)((int)data_ptr + 0x11) == '\\0') {\n    return 0;\n  }\n  original_flag_value = flag;\n  allocate_and_process_data(data_address);\n  if (DAT_200003c8 != 0) {\n    if (byte_count != 0) {\n      initialize_data(data_ptr,data_size);\n      if (3 < byte_count) {\n        byte_count = 3;\n      }\n      while( true ) {\n        if (byte_count == 0) break;\n        (**(code **)*data_ptr)(data_ptr,flag >> ((byte_count - 1 & 0x1f) << 3) & 0xff);\n        byte_count = byte_count - 1 & 0xff;\n      }\n      validate_and_process_data(data_ptr,0);\n    }\n    result = process_and_check_data(data_ptr + 5,(data_size & 0x7f) << 1,DAT_200003c8,data_address,original_flag_value);\n    if (result != 0) {\n      data_address = 0;\n    }\n    DAT_200003b5 = 0;\n    DAT_200003b7 = (char)data_address;\n    return data_address;\n  }\n  data_ptr[1] = 1;\n  return 0;\n}\n\n",
            "current_name": "process_binary_data_08002b68",
            "entrypoint": "0x08002b68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002b68": "process_binary_data_08002b68",
                "allocate_and_process_data_08002acc": "allocate_and_process_data",
                "iVar1": "result",
                "initialize_data_08002a30": "initialize_data",
                "param_1": "data_ptr",
                "param_2": "data_size",
                "param_3": "data_address",
                "param_4": "flag",
                "param_5": "flag",
                "process_and_check_data_08007f0e": "process_and_check_data",
                "uVar2": "byte_count",
                "uVar3": "original_flag_value",
                "validate_and_process_data_08002a58": "validate_and_process_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002c00": {
            "additional_data": {
                "": {
                    "": 1
                },
                "FUN_08002c00": {
                    "extract_binary_data": 1,
                    "initialize_binary_data": 1,
                    "initialize_binary_data_processing": 1,
                    "initialize_binary_processing": 1,
                    "initialize_data_processing": 2,
                    "process_and_return_binary_data": 2,
                    "process_binary_data": 21,
                    "process_data": 2
                },
                "process_binary_data_08002b68": {
                    "execute_binary_data_processing": 1,
                    "extract_and_process_binary_data": 1,
                    "extract_binary_data": 6,
                    "extract_data_from_binary": 3,
                    "load_binary_data": 3,
                    "prepare_binary_data": 1,
                    "process_binary_data": 10,
                    "process_binary_data_call": 1,
                    "process_function_data": 1
                }
            },
            "called": [
                "FUN_08002b68"
            ],
            "calling": [
                "FUN_08002c14"
            ],
            "code": "\nvoid process_and_return_binary_data_08002c00(void)\n\n{\n  process_binary_data();\n  return;\n}\n\n",
            "current_name": "process_and_return_binary_data_08002c00",
            "entrypoint": "0x08002c00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002c00": "process_and_return_binary_data_08002c00",
                "process_binary_data_08002b68": "process_binary_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002c14": {
            "additional_data": {
                "FUN_08002c14": {
                    "execute_data_processing": 1,
                    "initialize_binary_processing": 1,
                    "process_and_return_binary_data": 11,
                    "process_binary_data": 18
                },
                "process_and_return_binary_data_08002c00": {
                    "decrypt_binary_data": 1,
                    "extract_binary_data": 1,
                    "get_binary_data": 1,
                    "process_and_return_binary_data": 7,
                    "process_binary_data": 7,
                    "process_binary_data_and_return": 1,
                    "process_binary_data_internal": 1,
                    "process_data": 8
                }
            },
            "called": [
                "FUN_08002c00"
            ],
            "calling": [
                "FUN_08001c18"
            ],
            "code": "\nvoid process_and_return_binary_data_08002c14(void)\n\n{\n  process_data();\n  return;\n}\n\n",
            "current_name": "process_and_return_binary_data_08002c14",
            "entrypoint": "0x08002c14",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002c14": "process_and_return_binary_data_08002c14",
                "process_and_return_binary_data_08002c00": "process_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002c1e": {
            "additional_data": {
                "FUN_08002c1e": {
                    "initialize_and_return_data": 1,
                    "initialize_and_set_data": 2,
                    "initialize_and_setup_data": 2,
                    "initialize_data": 26
                },
                "param_1": {
                    "arg1": 3,
                    "arg_1": 1,
                    "constant": 1,
                    "data_count": 1,
                    "data_flag": 1,
                    "data_identifier": 1,
                    "data_type": 2,
                    "dummy_param_1": 1,
                    "first_param": 1,
                    "flag": 5,
                    "input_param_1": 1,
                    "mode": 2,
                    "param1": 2,
                    "param_1": 3,
                    "unk_param_1": 1,
                    "unused_param": 1,
                    "unused_param1": 1,
                    "unused_param_1": 1,
                    "value": 1
                },
                "param_2": {
                    "arg2": 3,
                    "arg_2": 1,
                    "buffer_size": 1,
                    "data_limit": 1,
                    "dummy_param_2": 1,
                    "index": 1,
                    "input_param_2": 1,
                    "limit": 2,
                    "max_data": 1,
                    "max_value": 2,
                    "param2": 2,
                    "param_2": 3,
                    "second_param": 1,
                    "unk_param_2": 1,
                    "unused": 1,
                    "unused_param": 2,
                    "unused_param2": 1,
                    "unused_param_2": 1,
                    "value": 3
                },
                "param_3": {
                    "arg3": 3,
                    "arg_3": 1,
                    "data1": 1,
                    "data_param1": 1,
                    "data_param_1": 1,
                    "data_ptr_1": 1,
                    "data_start": 1,
                    "initialize_param": 1,
                    "initialize_param_1": 1,
                    "input_param_1": 1,
                    "input_param_3": 1,
                    "param3": 3,
                    "param_1": 1,
                    "param_3": 7,
                    "param_ptr_1": 1,
                    "param_start": 1,
                    "parameter_1": 1,
                    "source_data": 1,
                    "start_address": 2,
                    "third_param": 1
                },
                "param_4": {
                    "arg4": 3,
                    "arg_4": 1,
                    "data2": 1,
                    "data_end": 1,
                    "data_param2": 1,
                    "data_param_2": 1,
                    "data_ptr_2": 1,
                    "end_address": 2,
                    "fourth_param": 1,
                    "initialize_param": 1,
                    "initialize_param_2": 1,
                    "input_param_2": 1,
                    "input_param_4": 1,
                    "param4": 3,
                    "param_2": 1,
                    "param_4": 7,
                    "param_end": 1,
                    "param_ptr_2": 1,
                    "parameter_2": 1,
                    "target_data": 1
                }
            },
            "called": [
                "FUN_08002948"
            ],
            "calling": [],
            "code": "\nvoid initialize_and_set_data_08002c1e(undefined4 flag,undefined4 arg2,undefined4 param_3,undefined4 param_4)\n\n{\n  initialize_data_08002948(1,0xffff,param_3,param_4,param_4);\n  return;\n}\n\n",
            "current_name": "initialize_and_set_data_08002c1e",
            "entrypoint": "0x08002c1e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002c1e": "initialize_and_set_data_08002c1e",
                "param_1": "flag",
                "param_2": "arg2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002c2c": {
            "additional_data": {
                "DAT_200005d4": {
                    "callback_function": 1
                },
                "FUN_08002c2c": {
                    "execute_call_back_function": 1,
                    "execute_callback": 22,
                    "execute_callback_function": 7,
                    "execute_function": 1
                },
                "param_1": {
                    "arg1": 2,
                    "argument1": 2,
                    "argument_1": 1,
                    "callback": 3,
                    "callback_function": 4,
                    "callback_id": 1,
                    "callback_param1": 1,
                    "unused": 5,
                    "unused_param": 6,
                    "unused_param1": 3,
                    "unused_parameter": 2,
                    "unused_parameter1": 1
                },
                "param_2": {
                    "arg1": 9,
                    "arg2": 2,
                    "argument1": 1,
                    "argument2": 2,
                    "callback_argument_1": 1,
                    "callback_function": 1,
                    "callback_param1": 5,
                    "callback_param2": 1,
                    "callback_parameter1": 2,
                    "data1": 1,
                    "data_param": 1,
                    "input1": 1,
                    "param1": 3,
                    "parameter2": 1
                },
                "param_3": {
                    "arg2": 9,
                    "arg3": 2,
                    "argument2": 1,
                    "argument3": 2,
                    "callback_argument_2": 1,
                    "callback_param": 1,
                    "callback_param2": 5,
                    "callback_param3": 1,
                    "callback_parameter2": 2,
                    "data2": 1,
                    "input2": 1,
                    "param2": 3,
                    "param_1": 1,
                    "parameter3": 1
                },
                "param_4": {
                    "arg3": 8,
                    "arg4": 2,
                    "argument3": 1,
                    "argument4": 2,
                    "callback_argument_3": 1,
                    "callback_data": 1,
                    "callback_flag": 1,
                    "callback_param4": 1,
                    "callback_parameter3": 2,
                    "context_param": 1,
                    "input3": 1,
                    "param3": 3,
                    "param_2": 1,
                    "parameter4": 1,
                    "unused": 1,
                    "unused_param2": 2,
                    "unused_param4": 1,
                    "unused_parameter2": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid execute_callback_function_08002c2c(undefined4 unused_param,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  if (DAT_200005d4 != (code *)0x0) {\n    (*DAT_200005d4)(arg1,arg2,arg2,DAT_200005d4,arg3);\n  }\n  return;\n}\n\n",
            "current_name": "execute_callback_function_08002c2c",
            "entrypoint": "0x08002c2c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002c2c": "execute_callback_function_08002c2c",
                "param_1": "unused_param",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ce0": {
            "additional_data": {
                "FUN_08002ce0": {
                    "initialize_and_update": 4,
                    "initialize_and_update_data": 20,
                    "initialize_and_update_data_fields": 5,
                    "initialize_data": 1,
                    "initialize_program": 1
                },
                "LAB_08002c40_1": {
                    "callback_function_2": 1,
                    "callback_function_b": 1,
                    "constant_1": 1,
                    "label_1": 14
                },
                "LAB_08002c54_1": {
                    "callback_function_5": 1,
                    "callback_function_e": 1,
                    "constant_4": 1,
                    "label_4": 14
                },
                "LAB_08002c68_1": {
                    "callback_function_6": 1,
                    "callback_function_f": 1,
                    "constant_5": 1,
                    "label_5": 14
                },
                "LAB_08002c7c_1": {
                    "callback_function_3": 1,
                    "callback_function_c": 1,
                    "constant_2": 1,
                    "label_2": 14
                },
                "LAB_08002c90_1": {
                    "callback_function_4": 1,
                    "callback_function_d": 1,
                    "constant_3": 1,
                    "label_3": 14
                },
                "LAB_08002ca4_1": {
                    "callback_function_7": 1,
                    "condition_a": 1,
                    "constant_6": 1,
                    "label_6": 14
                },
                "LAB_08002cb8_1": {
                    "callback_function_8": 1,
                    "callback_function_g": 1,
                    "constant_7": 1,
                    "label_7": 14
                },
                "LAB_08002cd0_1": {
                    "callback_function_11": 1,
                    "callback_function_j": 1,
                    "constant_10": 1,
                    "label_10": 14
                },
                "LAB_08002dea_1": {
                    "callback_function_10": 1,
                    "callback_function_i": 1,
                    "constant_9": 1,
                    "label_9": 14
                },
                "LAB_08002e1a_1": {
                    "callback_function_9": 1,
                    "callback_function_h": 1,
                    "constant_8": 1,
                    "label_8": 14
                },
                "execute_callback_function_08002c2c": {
                    "callback_func_1": 1,
                    "callback_function": 18,
                    "callback_function_08002c2c": 1,
                    "callback_function_1": 5,
                    "callback_function_a": 1
                },
                "iVar1": {
                    "address1": 1,
                    "address_shifted": 1,
                    "data_address": 7,
                    "data_offset": 1,
                    "data_pointer": 1,
                    "data_struct_address": 1,
                    "data_structure_address": 6,
                    "data_structure_offset": 2,
                    "new_address": 1,
                    "offset": 3,
                    "temp_address": 1,
                    "temp_var": 1,
                    "updated_buffer": 1,
                    "updated_param": 1
                },
                "initialize_data_structure_080032bc": {
                    "initialize_data_structure": 24
                },
                "initialize_value_0800314e": {
                    "initialize_program_value": 1,
                    "initialize_value": 20,
                    "initialize_values": 3
                },
                "param_1": {
                    "base_address": 25,
                    "buffer": 1,
                    "input_param": 2,
                    "input_parameter": 1,
                    "param": 1,
                    "start_address": 1
                },
                "set_function_parameters_08003370": {
                    "set_function_parameters": 20
                },
                "update_data_fields_08003306": {
                    "update_data_fields": 24
                },
                "update_parameters_08003346": {
                    "update_parameters": 13,
                    "update_parameters_1": 8
                },
                "update_parameters_08003350": {
                    "update_parameters": 7,
                    "update_parameters2": 1,
                    "update_parameters_2": 13
                },
                "update_parameters_if_equal_08003366": {
                    "update_parameters_if_equal": 16
                }
            },
            "called": [
                "FUN_08003350",
                "FUN_0800314e",
                "FUN_08003306",
                "FUN_08003370",
                "FUN_08003346",
                "FUN_080032bc",
                "FUN_08003366"
            ],
            "calling": [
                "FUN_08002dbc"
            ],
            "code": "\nint initialize_and_update_data_fields_08002ce0(int base_address)\n\n{\n  int data_address;\n  \n  initialize_value(base_address + 0x40);\n  data_address = base_address + 0x44;\n  initialize_data_structure(data_address,base_address,0x40);\n  *(undefined *)(base_address + 0xc4) = 0;\n  *(undefined4 *)(base_address + 200) = 0;\n  *(undefined *)(base_address + 0x1f8) = 0;\n  update_data_fields(data_address,0xe0,callback_function + 1,0);\n  update_data_fields(data_address,0x90,&label_1,0);\n  update_data_fields(data_address,0xc0,&label_2,0);\n  update_data_fields(data_address,0xd0,&label_3,0);\n  update_data_fields(data_address,0xf4,&label_4,0);\n  update_data_fields(data_address,0xf5,&label_5,0);\n  update_parameters_if_equal(data_address,0x71,&label_6,0);\n  set_function_parameters(data_address,0xf0,&label_7,0);\n  update_parameters(data_address,0x79,&label_8,base_address);\n  update_parameters_2(data_address,0xf9,&label_9,base_address);\n  update_parameters_2(data_address,0xff,&label_10,0);\n  return base_address;\n}\n\n",
            "current_name": "initialize_and_update_data_fields_08002ce0",
            "entrypoint": "0x08002ce0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ce0": "initialize_and_update_data_fields_08002ce0",
                "LAB_08002c40_1": "label_1",
                "LAB_08002c54_1": "label_4",
                "LAB_08002c68_1": "label_5",
                "LAB_08002c7c_1": "label_2",
                "LAB_08002c90_1": "label_3",
                "LAB_08002ca4_1": "label_6",
                "LAB_08002cb8_1": "label_7",
                "LAB_08002cd0_1": "label_10",
                "LAB_08002dea_1": "label_9",
                "LAB_08002e1a_1": "label_8",
                "execute_callback_function_08002c2c": "callback_function",
                "iVar1": "data_address",
                "initialize_data_structure_080032bc": "initialize_data_structure",
                "initialize_value_0800314e": "initialize_value",
                "param_1": "base_address",
                "set_function_parameters_08003370": "set_function_parameters",
                "update_data_fields_08003306": "update_data_fields",
                "update_parameters_08003346": "update_parameters",
                "update_parameters_08003350": "update_parameters_2",
                "update_parameters_if_equal_08003366": "update_parameters_if_equal"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002dbc": {
            "additional_data": {
                "DAT_200003d4": {
                    "data_fields": 3
                },
                "FUN_08002dbc": {
                    "handle_param": 1,
                    "initialize_and_update_data": 2,
                    "initialize_and_update_data_fields": 3,
                    "initialize_and_update_data_if_param_1_is_1": 1,
                    "initialize_data_fields": 3,
                    "initialize_data_fields_if_condition_met": 1,
                    "initialize_data_fields_if_needed": 4,
                    "initialize_data_fields_if_param_is_1": 1,
                    "initialize_data_fields_if_parameter_is_one": 1,
                    "initialize_data_fields_if_required": 1,
                    "initialize_if_needed": 1,
                    "initialize_if_param1_equals_1": 1,
                    "initialize_if_param1_is_1": 3,
                    "initialize_if_param1_is_1_and_param2_is_ffff": 1,
                    "initialize_if_param_is_one": 1,
                    "initialize_if_parameter_is_one": 1,
                    "initialize_if_parameter_valid": 1,
                    "initialize_if_required": 3,
                    "update_data_if_param_1_is_1": 1
                },
                "initialize_and_update_data_fields_08002ce0": {
                    "init_and_update_data_fields": 1,
                    "initialize_and_update_data": 1,
                    "initialize_and_update_data_fields": 8,
                    "initialize_and_update_data_fields_helper": 1,
                    "initialize_data_fields": 7,
                    "initialize_data_fields_if_param2_is_0xffff": 1,
                    "update_data_fields": 1
                },
                "param_1": {
                    "check_condition": 1,
                    "check_value": 1,
                    "condition": 4,
                    "first_parameter": 1,
                    "flag": 8,
                    "input_parameter": 2,
                    "is_enabled": 1,
                    "is_initialized": 2,
                    "is_one": 1,
                    "is_param1": 1,
                    "is_param1_true": 1,
                    "is_param1_valid": 1,
                    "is_param_1_one": 1,
                    "option": 1,
                    "param1": 1,
                    "parameter": 1,
                    "status": 1,
                    "status_flag": 1,
                    "value_check": 1
                },
                "param_2": {
                    "data_status": 1,
                    "data_value": 1,
                    "flag_check": 1,
                    "flag_parameter": 1,
                    "flag_value": 1,
                    "param2": 2,
                    "param2_value": 2,
                    "param_2_value": 1,
                    "param_value": 1,
                    "second_parameter": 1,
                    "status_code": 2,
                    "value": 16,
                    "value_to_check": 1
                }
            },
            "called": [
                "FUN_08002ce0"
            ],
            "calling": [],
            "code": "\nvoid initialize_data_fields_if_needed_08002dbc(int flag,int value)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    initialize_and_update_data_fields(&DAT_200003d4);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_fields_if_needed_08002dbc",
            "entrypoint": "0x08002dbc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002dbc": "initialize_data_fields_if_needed_08002dbc",
                "initialize_and_update_data_fields_08002ce0": "initialize_and_update_data_fields",
                "param_1": "flag",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ddc": {
            "additional_data": {
                "FUN_08002ddc": {
                    "execute_and_update_result": 1,
                    "execute_code_with_params": 1,
                    "execute_function": 6,
                    "execute_function_with_additional_params": 1,
                    "execute_function_with_adjusted_params": 5,
                    "execute_function_with_offset": 5,
                    "execute_function_with_params": 6,
                    "execute_function_with_params_offset": 1,
                    "execute_function_with_updated_params": 1,
                    "execute_modified_function": 2,
                    "execute_p1_operation": 1
                },
                "execute_function_with_params_0800322c": {
                    "execute_func_params": 1,
                    "execute_func_with_multiple_params": 1,
                    "execute_function": 1,
                    "execute_with_parameters": 1,
                    "execute_with_params": 1,
                    "execute_with_updated_params": 1
                },
                "input_param": {
                    "input": 1
                },
                "param_1": {
                    "adjusted_param_1": 1,
                    "base_address": 6,
                    "buffer_address": 1,
                    "input": 1,
                    "input_data": 2,
                    "input_param": 10,
                    "input_parameter": 2,
                    "input_ptr": 1,
                    "input_value": 4,
                    "input_var": 1,
                    "original_param": 1,
                    "starting_address": 1
                },
                "param_2": {
                    "constant_param_1": 1,
                    "constant_value_1": 1,
                    "offset_value": 1,
                    "param2": 1,
                    "param_2": 9,
                    "unused_param": 4,
                    "unused_param_1": 1
                },
                "param_3": {
                    "constant_param_2": 1,
                    "constant_value_2": 1,
                    "length": 1,
                    "param3": 1,
                    "param_3": 9,
                    "unused_param": 1,
                    "unused_param2": 1,
                    "unused_param_2": 3
                },
                "param_4": {
                    "callback": 1,
                    "callback_param": 2,
                    "callback_parameter": 1,
                    "data_param": 1,
                    "function_data": 1,
                    "output_param": 5,
                    "output_value": 1,
                    "param": 1,
                    "param4": 1,
                    "param_4": 10,
                    "param_4_offset": 1,
                    "param_value": 2,
                    "parameter": 1,
                    "parameter_4": 1,
                    "result": 1,
                    "unused_param": 1
                },
                "repeated_param": {
                    "param": 1
                }
            },
            "called": [
                "FUN_0800322c"
            ],
            "calling": [
                "FUN_08002e26"
            ],
            "code": "\nvoid execute_function_with_adjusted_params_08002ddc(int input_param,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  execute_with_updated_params(input_param + 0x40,2,5,param_4,param_4);\n  return;\n}\n\n",
            "current_name": "execute_function_with_adjusted_params_08002ddc",
            "entrypoint": "0x08002ddc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ddc": "execute_function_with_adjusted_params_08002ddc",
                "execute_function_with_params_0800322c": "execute_with_updated_params",
                "param_1": "input_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002df6": {
            "additional_data": {
                "DAT_08003d04": {
                    "decoded_data_length": 1
                },
                "FUN_08002df6": {
                    "decode_and_process_data": 13,
                    "decode_and_process_wrapper": 2,
                    "process_data": 14,
                    "process_decoded_data": 2
                },
                "PTR_08002f3c": {
                    "decoded_data": 1
                },
                "decode_and_process_data_wrapper_080031ce": {
                    "decode_and_process_data_wrapper": 4
                },
                "param_1": {
                    "data": 7,
                    "data_address": 1,
                    "data_pointer": 3,
                    "data_ptr": 9,
                    "data_struct": 1,
                    "input": 4,
                    "input_data": 3,
                    "input_param": 2,
                    "input_value": 1
                },
                "puVar1": {
                    "data": 2,
                    "data_array": 2,
                    "data_pointer": 8,
                    "data_ptr": 5,
                    "data_ptr2": 1,
                    "data_wrapper": 2,
                    "data_wrapper_pointer": 1,
                    "data_wrapper_ptr": 2,
                    "decoded_data": 5,
                    "decoded_data_ptr": 1
                }
            },
            "called": [
                "FUN_080031ce"
            ],
            "calling": [
                "FUN_08002e26"
            ],
            "code": "\nvoid decode_and_process_data_08002df6(int data_ptr)\n\n{\n  undefined *data_pointer;\n  \n  if (*(byte *)(data_ptr + 0xc4) == 0) {\n    return;\n  }\n  data_pointer = *(undefined **)(data_ptr + 200);\n  decode_and_process_data_08002df6_wrapper(data_ptr + 0x40,*data_pointer,data_pointer[1],*(byte *)(data_ptr + 0xc4) - 2,data_pointer + 2);\n  return;\n}\n\n",
            "current_name": "decode_and_process_data_08002df6",
            "entrypoint": "0x08002df6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002df6": "decode_and_process_data_08002df6",
                "decode_and_process_data_wrapper_080031ce": "decode_and_process_data_wrapper",
                "param_1": "data_ptr",
                "puVar1": "data_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002e26": {
            "additional_data": {
                "FUN_08002e26": {
                    "copy_and_process_data": 6,
                    "copy_value_and_process_data": 1,
                    "execute_data_processing": 1,
                    "initialize_data": 1,
                    "process_and_decode_data": 3,
                    "process_data": 8,
                    "process_data_and_execute": 1,
                    "process_data_and_execute_function": 1,
                    "process_function": 1,
                    "update_data": 3,
                    "update_data_and_execute": 2,
                    "update_data_and_process": 1,
                    "update_parameters_and_process_data": 1,
                    "update_pointer_and_execute": 1
                },
                "copy_value_to_pointer_array_08003154": {
                    "copy_data_to_array": 1,
                    "copy_data_to_pointer_array": 3,
                    "copy_to_array": 2,
                    "copy_to_pointer_array": 2,
                    "copy_to_ptr_array": 1,
                    "copy_value_to_array": 12,
                    "copy_value_to_pointer_array": 5,
                    "copy_values": 1,
                    "copy_values_to_array": 1,
                    "copy_values_to_pointer_array": 1
                },
                "decode_and_process_data_08002df6": {
                    "decode_and_process": 1,
                    "decode_and_process_data": 29
                },
                "execute_function_with_adjusted_params_08002ddc": {
                    "execute_function": 4,
                    "execute_function_with_adjusted_parameters": 2,
                    "execute_function_with_adjusted_params": 9,
                    "execute_function_with_params": 1,
                    "execute_with_adjusted_params": 14
                },
                "param_1": {
                    "arg1": 1,
                    "base_address": 8,
                    "data": 1,
                    "data_buffer": 2,
                    "data_offset": 1,
                    "data_pointer": 6,
                    "data_ptr": 8,
                    "data_struct": 2,
                    "data_structure": 1,
                    "data_structure_address": 1
                },
                "param_2": {
                    "arg2": 1,
                    "data": 1,
                    "data_value": 2,
                    "input_value": 1,
                    "new_value": 9,
                    "param_value": 3,
                    "value": 13,
                    "value_to_copy": 1
                }
            },
            "called": [
                "FUN_08002df6",
                "FUN_08002ddc",
                "FUN_08003154"
            ],
            "calling": [
                "FUN_08003048"
            ],
            "code": "\nvoid copy_value_and_process_data_08002e26(int data_ptr,undefined4 value)\n\n{\n  *(undefined4 *)(data_ptr + 0xc0) = value;\n  copy_value_to_array(data_ptr + 0x40);\n  execute_with_adjusted_params(data_ptr);\n  decode_and_process_data(data_ptr);\n  return;\n}\n\n",
            "current_name": "copy_value_and_process_data_08002e26",
            "entrypoint": "0x08002e26",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002e26": "copy_value_and_process_data_08002e26",
                "copy_value_to_pointer_array_08003154": "copy_value_to_array",
                "decode_and_process_data_08002df6": "decode_and_process_data",
                "execute_function_with_adjusted_params_08002ddc": "execute_with_adjusted_params",
                "param_1": "data_ptr",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002e44": {
            "additional_data": {
                "FUN_08002e44": {
                    "extract_and_copy_filename": 1,
                    "extract_and_process_string": 1,
                    "extract_common_substring": 6,
                    "extract_file_info": 2,
                    "extract_file_name": 2,
                    "extract_file_name_and_store": 1,
                    "extract_file_path": 1,
                    "extract_filename": 2,
                    "extract_filename_extension": 2,
                    "extract_filename_from_path": 5,
                    "extract_filepath": 1,
                    "extract_filepath_and_copy_string": 1,
                    "extract_filepath_from_string": 2,
                    "extract_string": 1,
                    "get_processed_string": 1,
                    "process_file_information": 1,
                    "reverse_string": 1
                },
                "assign_and_allocate_memory_block_08009190": {
                    "allocate_memory_block": 5
                },
                "bVar1": {
                    "buffer_length": 4,
                    "buffer_size": 1,
                    "byte_value": 1,
                    "byte_var": 1,
                    "char_value": 1,
                    "extension_length": 1,
                    "filename_length": 2,
                    "length": 2,
                    "middle_char": 1,
                    "size_byte": 1,
                    "string_length": 12,
                    "substring_length": 4
                },
                "cVar2": {
                    "char_value": 1,
                    "char_var": 1,
                    "character": 1,
                    "end_char": 5,
                    "end_character": 3,
                    "end_of_string": 6,
                    "end_of_string_char": 4,
                    "end_of_string_character": 1,
                    "first_char": 1,
                    "last_char": 5,
                    "last_character": 2,
                    "offset_char": 1
                },
                "copy_string_with_length_limit_08009954": {
                    "copy_limited_string_length": 1,
                    "copy_string_with_length_limit": 2,
                    "copy_string_with_limit": 2
                },
                "find_end_of_string_08000178": {
                    "find_end_of_string": 5
                },
                "find_first_common_substring_080099a4": {
                    "find_common_substring": 1,
                    "find_common_substring_index": 1,
                    "find_common_substring_length": 1,
                    "find_first_common_substring": 2
                },
                "find_last_occurrence_index_0800997e": {
                    "find_last_occurrence_index": 4,
                    "find_last_separator_index": 1
                },
                "iVar3": {
                    "common_string_start": 1,
                    "common_substr_index": 1,
                    "common_substring": 4,
                    "common_substring_index": 7,
                    "common_substring_length": 10,
                    "first_common_substring_index": 6,
                    "substring_index": 1,
                    "substring_length": 1
                },
                "iVar4": {
                    "last_occurrence_index": 14,
                    "last_separator_index": 5,
                    "last_slash_index": 10,
                    "separator_index": 1,
                    "slash_index": 1
                },
                "param_1": {
                    "buffer_size": 1,
                    "data_buffer": 1,
                    "extracted_string": 1,
                    "file_info_ptr": 1,
                    "file_info_struct": 2,
                    "file_information_struct": 1,
                    "output": 1,
                    "output_buffer": 17,
                    "output_buffer_address": 1,
                    "output_buffer_ptr": 1,
                    "output_storage": 1,
                    "output_string_addr": 1,
                    "output_string_address": 1,
                    "result_buffer": 1
                },
                "param_2": {
                    "file_name": 1,
                    "file_path": 6,
                    "filepath": 1,
                    "input": 1,
                    "input_filepath": 1,
                    "input_path": 4,
                    "input_path_address": 1,
                    "input_string": 13,
                    "input_string_addr": 1,
                    "input_string_address": 1,
                    "path": 1
                },
                "param_3": {
                    "additional_param_1": 1,
                    "char1": 3,
                    "char_1": 4,
                    "char_to_add": 1,
                    "char_to_append": 1,
                    "char_value_1": 1,
                    "character_1": 1,
                    "extra_param_1": 1,
                    "first_char": 1,
                    "input_char_1": 1,
                    "param3": 3,
                    "param_3": 3,
                    "undefined1": 2,
                    "undefined_param": 1,
                    "undefined_param_1": 1,
                    "undefined_param_3": 4,
                    "undefined_var1": 1,
                    "value1": 1
                },
                "param_4": {
                    "additional_param_2": 1,
                    "char2": 3,
                    "char_2": 4,
                    "char_to_append": 1,
                    "char_to_insert": 1,
                    "char_value_2": 1,
                    "character_2": 1,
                    "extra_param_2": 1,
                    "input_char_2": 1,
                    "param4": 3,
                    "param_4": 3,
                    "second_char": 1,
                    "undefined2": 2,
                    "undefined_param2": 1,
                    "undefined_param_2": 1,
                    "undefined_param_4": 4,
                    "undefined_var2": 1,
                    "value2": 1
                },
                "process_and_return_data_080091a0": {
                    "process_and_return_data": 4
                },
                "puVar5": {
                    "allocated_memory": 5,
                    "allocated_memory_block": 3,
                    "dynamic_memory_pointer": 1,
                    "filename_buffer": 3,
                    "new_buffer": 3,
                    "new_string": 4,
                    "new_string_buffer": 1,
                    "new_string_ptr": 2,
                    "output_buffer": 1,
                    "output_filepath": 1,
                    "output_string": 2,
                    "string_buffer": 1,
                    "substring_buffer": 4
                }
            },
            "called": [
                "FUN_08009954",
                "FUN_08009190",
                "FUN_0800997e",
                "FUN_080091a0",
                "FUN_080099a4",
                "FUN_08000178"
            ],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\nvoid extract_filename_from_path_08002e44(int output_buffer,int input_string,undefined undefined_param_3,undefined undefined_param_4)\n\n{\n  byte string_length;\n  char end_of_string;\n  int common_substring_length;\n  int last_occurrence_index;\n  undefined *allocated_memory;\n  \n  common_substring_length = find_first_common_substring(input_string,\".cpp\");\n  last_occurrence_index = find_last_occurrence_index(input_string,0x2f);\n  if (last_occurrence_index == 0) {\n    last_occurrence_index = find_last_occurrence_index(input_string,0x5c);\n  }\n  if (last_occurrence_index != 0) {\n    input_string = last_occurrence_index + 1;\n  }\n  if (common_substring_length == 0) {\n    end_of_string = find_end_of_string(input_string);\n    *(char *)(output_buffer + 0xc4) = end_of_string + '\\x02';\n  }\n  else {\n    *(char *)(output_buffer + 0xc4) = ((char)common_substring_length - (char)input_string) + '\\x02';\n  }\n  process_and_return_data(*(undefined4 *)(output_buffer + 200));\n  string_length = *(byte *)(output_buffer + 0xc4);\n  allocated_memory = (undefined *)allocate_memory_block(string_length + 1);\n  *(undefined **)(output_buffer + 200) = allocated_memory;\n  allocated_memory[string_length] = 0;\n  *allocated_memory = undefined_param_3;\n  allocated_memory[1] = undefined_param_4;\n  copy_string_with_limit(allocated_memory + 2,input_string,*(byte *)(output_buffer + 0xc4) - 2);\n  return;\n}\n\n",
            "current_name": "extract_filename_from_path_08002e44",
            "entrypoint": "0x08002e44",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002e44": "extract_filename_from_path_08002e44",
                "assign_and_allocate_memory_block_08009190": "allocate_memory_block",
                "bVar1": "string_length",
                "cVar2": "end_of_string",
                "copy_string_with_length_limit_08009954": "copy_string_with_limit",
                "find_end_of_string_08000178": "find_end_of_string",
                "find_first_common_substring_080099a4": "find_first_common_substring",
                "find_last_occurrence_index_0800997e": "find_last_occurrence_index",
                "iVar3": "common_substring_length",
                "iVar4": "last_occurrence_index",
                "param_1": "output_buffer",
                "param_2": "input_string",
                "param_3": "undefined_param_3",
                "param_4": "undefined_param_4",
                "process_and_return_data_080091a0": "process_and_return_data",
                "puVar5": "allocated_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ec4": {
            "additional_data": {
                "8": {
                    "function_offset": 1
                },
                "DAT_000000c0": {
                    "constant_offset": 1
                },
                "FUN_08002ec4": {
                    "execute_callback": 6,
                    "execute_callback_function": 5,
                    "execute_code": 1,
                    "execute_code_from_pointer": 1,
                    "execute_dynamic_function": 2,
                    "execute_function": 13,
                    "execute_function_from_pointer": 1,
                    "execute_nested_function": 2
                },
                "PTR_XXXXXXXX": {
                    "unmodified_pointer1": 1
                },
                "PTR_YYYYYYYY": {
                    "unmodified_pointer2": 1
                },
                "param_1": {
                    "callback": 1,
                    "callback_function": 1,
                    "callback_function_pointer": 1,
                    "callback_param": 2,
                    "callback_parameter": 1,
                    "callback_pointer": 2,
                    "callback_ptr": 1,
                    "callback_structure": 1,
                    "code_pointer": 1,
                    "dynamic_function_ptr": 1,
                    "function_index": 1,
                    "function_pointer": 10,
                    "function_ptr": 2,
                    "input": 3,
                    "input_parameter": 1,
                    "nested_function_pointer": 1,
                    "parameter": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080022f8"
            ],
            "code": "\nvoid execute_callback_function_08002ec4(int function_pointer)\n\n{\n  (**(code **)(**(int **)(function_pointer + 0xc0) + 8))();\n  return;\n}\n\n",
            "current_name": "execute_callback_function_08002ec4",
            "entrypoint": "0x08002ec4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ec4": "execute_callback_function_08002ec4",
                "param_1": "function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ed2": {
            "additional_data": {
                "0x44": {
                    "offset_3": 1
                },
                "0xc": {
                    "offset_2": 1
                },
                "0xc0": {
                    "offset_1": 1
                },
                "0xffffffff": {
                    "invalid_val": 1
                },
                "FUN_08002ed2": {
                    "extract_and_process_data": 1,
                    "process_and_update_data": 10,
                    "process_data": 15,
                    "process_data_and_update": 1,
                    "process_update_data": 1,
                    "update_data": 1,
                    "update_data_from_result": 1,
                    "update_data_if_valid": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 2,
                    "data": 12,
                    "data_address": 1,
                    "data_pointer": 3,
                    "data_ptr": 6,
                    "data_starting_address": 1,
                    "input_data": 3,
                    "input_param": 2
                },
                "process_and_update_data_08003474": {
                    "process_and_update_data": 3,
                    "process_data": 1,
                    "update_data": 8
                },
                "uVar1": {
                    "func_result": 1,
                    "function_result": 1,
                    "result": 28,
                    "return_value": 1
                }
            },
            "called": [
                "FUN_08003474"
            ],
            "calling": [
                "FUN_080022f8"
            ],
            "code": "\nvoid process_data_and_update_08002ed2(int data)\n\n{\n  uint result;\n  \n  result = (**(code **)(**(int **)(data + 0xc0) + 0xc))();\n  if (result != 0xffffffff) {\n    update_data(data + 0x44,result & 0xff);\n  }\n  return;\n}\n\n",
            "current_name": "process_data_and_update_08002ed2",
            "entrypoint": "0x08002ed2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ed2": "process_data_and_update_08002ed2",
                "param_1": "data",
                "process_and_update_data_08003474": "update_data",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002ef2": {
            "additional_data": {
                "FUN_08002ef2": {
                    "decode_and_process": 1,
                    "decode_and_process_data": 16,
                    "process_and_decode_data": 2,
                    "process_data": 10,
                    "process_decoded_data": 2
                },
                "decode_and_process_data_08003158": {
                    "decode_and_process_helper": 1
                },
                "param_1": {
                    "buffer": 2,
                    "buffer_start_address": 1,
                    "data": 1,
                    "data_1": 1,
                    "data_address": 3,
                    "data_offset": 5,
                    "data_pointer": 3,
                    "data_ptr": 4,
                    "data_start": 4,
                    "data_start_address": 4,
                    "input_address": 1,
                    "input_buffer": 1,
                    "input_data": 1
                },
                "param_2": {
                    "arg1": 3,
                    "arg2": 4,
                    "data_2": 1,
                    "decoded_data": 1,
                    "param1": 1,
                    "param2": 5,
                    "param_2": 14,
                    "value_1": 1
                },
                "param_3": {
                    "arg2": 3,
                    "arg3": 4,
                    "data_3": 1,
                    "data_size": 2,
                    "param2": 1,
                    "param3": 5,
                    "param_3": 14,
                    "value_2": 1
                },
                "param_4": {
                    "additional_param": 1,
                    "arg3": 3,
                    "arg4": 4,
                    "data_4": 1,
                    "param3": 1,
                    "param4": 5,
                    "param_4": 15,
                    "value_3": 1
                }
            },
            "called": [
                "FUN_08003158"
            ],
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "code": "\nvoid process_and_decode_data_08002ef2(int data_offset,undefined4 param_2,undefined2 param_3,undefined4 param_4)\n\n{\n  decode_and_process_helper(data_offset + 0x40,param_2,param_3,param_4,param_4);\n  return;\n}\n\n",
            "current_name": "process_and_decode_data_08002ef2",
            "entrypoint": "0x08002ef2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002ef2": "process_and_decode_data_08002ef2",
                "decode_and_process_data_08003158": "decode_and_process_helper",
                "param_1": "data_offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002efe": {
            "additional_data": {
                "FUN_08002efe": {
                    "decode_and_process_data": 10,
                    "process_and_decode_data": 20,
                    "process_data_and_decode": 1
                },
                "param_1": {
                    "data": 2,
                    "data_address": 4,
                    "data_location": 1,
                    "data_offset": 5,
                    "data_pointer": 2,
                    "data_ptr": 3,
                    "data_start": 1,
                    "data_start_address": 1,
                    "input_addr": 1,
                    "input_buffer": 4,
                    "input_data": 5,
                    "input_data_ptr": 2
                },
                "param_2": {
                    "arg1": 2,
                    "param": 1,
                    "param1": 2,
                    "param2": 10,
                    "param_2": 14,
                    "parameter_2": 1,
                    "value": 1
                },
                "param_3": {
                    "arg2": 2,
                    "code": 1,
                    "data_size": 1,
                    "param2": 2,
                    "param3": 10,
                    "param_3": 14,
                    "parameter_3": 1
                },
                "param_4": {
                    "address": 1,
                    "arg3": 2,
                    "output_data": 1,
                    "param3": 2,
                    "param4": 10,
                    "param_4": 14,
                    "parameter_4": 1
                }
            },
            "called": [
                "FUN_0800319e"
            ],
            "calling": [
                "FUN_08000be8"
            ],
            "code": "\nvoid process_data_and_decode_08002efe(int input_data,undefined4 param_2,undefined2 param_3,undefined4 param_4)\n\n{\n  process_data_and_decode_08002efe_0800319e(input_data + 0x40,param_2,param_3,param_4,param_4);\n  return;\n}\n\n",
            "current_name": "process_data_and_decode_08002efe",
            "entrypoint": "0x08002efe",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002efe": "process_data_and_decode_08002efe",
                "param_1": "input_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f0a": {
            "additional_data": {
                "0x40": {
                    "data_offset": 2
                },
                "DAT_0800325e": {
                    "decoded_data": 1
                },
                "FUN_08002f0a": {
                    "decode_and_process_data": 19,
                    "decode_data": 1,
                    "decode_data_and_process": 1,
                    "process_and_decode_data": 9,
                    "process_data_and_decode": 1
                },
                "input_data": {
                    "data_to_process": 1
                },
                "new_variable_name_1": {
                    "new_variable_name_1": 1
                },
                "param_1": {
                    "data_offset": 5,
                    "data_pointer": 1,
                    "data_start_address": 1,
                    "data_start_offset": 1,
                    "data_to_process": 1,
                    "decoded_data": 1,
                    "input": 3,
                    "input_data": 15,
                    "input_parameter": 1,
                    "input_value": 2
                },
                "param_2": {
                    "new_parameter_name_2": 1
                },
                "process_data_and_decode_0800325a": {
                    "decode_and_process": 3,
                    "decode_and_process_data_0800325a": 1,
                    "decode_and_process_data_helper": 1,
                    "decode_and_process_data_internal": 4,
                    "decode_and_process_data_step": 1,
                    "decode_data": 4,
                    "process_and_decode_data": 1,
                    "process_data_and_decode": 2,
                    "reverse_input_data": 1
                },
                "ptr_0800325a": {
                    "data_to_decode": 1
                }
            },
            "called": [
                "FUN_0800325a"
            ],
            "calling": [
                "FUN_08001c18"
            ],
            "code": "\nvoid decode_data_and_process_08002f0a(int input_data)\n\n{\n  decode_and_process_data_internal(input_data + 0x40);\n  return;\n}\n\n",
            "current_name": "decode_data_and_process_08002f0a",
            "entrypoint": "0x08002f0a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f0a": "decode_data_and_process_08002f0a",
                "param_1": "input_data",
                "process_data_and_decode_0800325a": "decode_and_process_data_internal"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f14": {
            "additional_data": {
                "FUN_08002f14": {
                    "decode_and_process": 1,
                    "decode_and_process_data": 15,
                    "process_and_decode_data": 2,
                    "process_data": 9,
                    "process_data_at_offset": 1,
                    "process_decoded_data": 3
                },
                "decode_and_process_data_080032a2": {
                    "decode_and_process": 3,
                    "decode_and_process_data": 9,
                    "decode_and_process_data_helper": 1,
                    "decode_and_process_data_internal": 1,
                    "decode_and_process_data_with_offset": 1,
                    "process_data": 1
                },
                "param_1": {
                    "data": 3,
                    "data_address": 2,
                    "data_offset": 5,
                    "encoded_data": 1,
                    "input": 4,
                    "input_data": 9,
                    "input_offset": 1,
                    "input_param": 1,
                    "input_value": 1,
                    "offset": 1,
                    "original_data": 1,
                    "original_param": 1
                }
            },
            "called": [
                "FUN_080032a2"
            ],
            "calling": [
                "FUN_080005f8",
                "FUN_08000500",
                "FUN_08001cd0",
                "FUN_08001c18"
            ],
            "code": "\nvoid process_and_decode_data_08002f14(int input_data)\n\n{\n  decode_and_process_data(input_data + 0x40);\n  return;\n}\n\n",
            "current_name": "process_and_decode_data_08002f14",
            "entrypoint": "0x08002f14",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f14": "process_and_decode_data_08002f14",
                "decode_and_process_data_080032a2": "decode_and_process_data",
                "param_1": "input_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f1e": {
            "additional_data": {
                "FUN_08002f1e": {
                    "execute_callback": 3,
                    "execute_code": 1,
                    "execute_code_from_pointer": 1,
                    "execute_dynamic_function": 1,
                    "execute_function": 22,
                    "execute_function_pointer": 1,
                    "execute_pointer_function": 1,
                    "invoke_callback": 1
                },
                "NULL": {
                    "null": 1
                },
                "code": {
                    "function_pointer_type": 1
                },
                "local_var_1": {
                    "callback_function_ptr": 1
                },
                "param_1": {
                    "arg": 1,
                    "argument": 2,
                    "callback": 2,
                    "callback_pointer": 1,
                    "callback_ptr": 1,
                    "code_pointer": 1,
                    "dynamic_function_pointer": 1,
                    "execution_context": 1,
                    "func_pointer": 1,
                    "function_pointer": 16,
                    "function_ptr": 1,
                    "input": 1,
                    "input_param": 1,
                    "pointer": 1
                },
                "param_2": {
                    "data_structure": 1
                },
                "param_3": {
                    "unused_param": 1
                },
                "ptr1": {
                    "callback_function": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001cd0"
            ],
            "code": "\nvoid execute_dynamic_function_08002f1e(int function_pointer)\n\n{\n  (**(function_pointer_type **)**(undefined4 **)(function_pointer + 0xc0))();\n  return;\n}\n\n",
            "current_name": "execute_dynamic_function_08002f1e",
            "entrypoint": "0x08002f1e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f1e": "execute_dynamic_function_08002f1e",
                "code": "function_pointer_type",
                "param_1": "function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f2c": {
            "additional_data": {
                "DAT_200005d4": {
                    "data_0x_e0": 1
                },
                "DAT_200005dc": {
                    "data_0x90": 1
                },
                "DAT_200005e0": {
                    "data_0x_f4": 1
                },
                "DAT_200005e4": {
                    "data_0x_f5": 1
                },
                "DAT_200005ec": {
                    "data_0x_c0": 1
                },
                "DAT_200005f0": {
                    "data_0x_d0": 1
                },
                "FUN_08002f2c": {
                    "assign_value_to_variable": 1,
                    "set_config_value": 1,
                    "set_data_register": 1,
                    "set_data_value": 3,
                    "store_data": 1,
                    "update_data": 18,
                    "update_data_value": 3,
                    "update_data_variable": 1,
                    "update_param_value": 1,
                    "update_variables": 1
                },
                "param_1": {
                    "arg1": 2,
                    "config_variable": 1,
                    "current_param": 1,
                    "data_address": 1,
                    "data_pointer": 1,
                    "data_type": 1,
                    "input": 1,
                    "input_value_1": 1,
                    "param1": 5,
                    "param_1": 3,
                    "state": 1,
                    "status": 9,
                    "status_flag": 1,
                    "unused": 1,
                    "value": 1,
                    "value_type": 1
                },
                "param_2": {
                    "code": 7,
                    "config_code": 1,
                    "data_code": 5,
                    "data_id": 1,
                    "data_size": 1,
                    "data_type": 4,
                    "data_value": 1,
                    "input_value": 2,
                    "input_value_2": 1,
                    "opcode": 1,
                    "param2": 2,
                    "param_code": 1,
                    "register": 1,
                    "status": 1,
                    "value_code": 1,
                    "variable_id": 1
                },
                "param_3": {
                    "config_value": 1,
                    "data": 2,
                    "data_value": 1,
                    "input_value_3": 1,
                    "new_data": 4,
                    "new_data_value": 1,
                    "new_value": 12,
                    "param3": 2,
                    "value": 7
                },
                "uVar1": {
                    "temp_data": 4,
                    "temp_value": 4,
                    "updated_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\nvoid update_data_value_08002f2c(undefined4 status,uint code,undefined4 new_value)\n\n{\n  undefined4 temp_data;\n  \n  if (code == 0xd0) {\n    DAT_200005f0 = new_value;\n    return;\n  }\n  if (0xd0 < code) {\n    if (code == 0xf4) {\n      DAT_200005e0 = new_value;\n      return;\n    }\n    temp_data = new_value;\n    if ((code != 0xf5) && (temp_data = DAT_200005e4, code == 0xe0)) {\n      DAT_200005d4 = new_value;\n      return;\n    }\n    DAT_200005e4 = temp_data;\n    return;\n  }\n  if (code == 0x90) {\n    DAT_200005dc = new_value;\n    return;\n  }\n  if (code != 0xc0) {\n    return;\n  }\n  DAT_200005ec = new_value;\n  return;\n}\n\n",
            "current_name": "update_data_value_08002f2c",
            "entrypoint": "0x08002f2c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f2c": "update_data_value_08002f2c",
                "param_1": "status",
                "param_2": "code",
                "param_3": "new_value",
                "uVar1": "temp_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f84": {
            "additional_data": {
                "DAT_200005e8": {
                    "stored_value": 1
                },
                "FUN_08002f84": {
                    "save_param3_if_param2_is_255": 1,
                    "save_parameter_value": 1,
                    "set_dat_value": 1,
                    "set_data_value": 1,
                    "set_global_variable": 1,
                    "store_if_max": 1,
                    "store_param_3_if_param_2_is_ff": 1,
                    "store_param_if_equal": 1,
                    "store_param_if_equal_to255": 2,
                    "store_param_if_value_is_max": 1,
                    "update_data": 9,
                    "update_data_if_flag_set": 1,
                    "update_data_if_max_value": 1,
                    "update_data_if_param2_is_max": 1,
                    "update_data_if_param_is_max": 3,
                    "update_data_if_threshold_met": 1,
                    "update_global_value": 1,
                    "update_param_if_value_max": 1,
                    "update_parameter_value": 2
                },
                "param_1": {
                    "arg1": 3,
                    "data_address": 1,
                    "first_param": 1,
                    "flag": 1,
                    "ignored_param": 1,
                    "input1": 1,
                    "input_param": 1,
                    "param": 1,
                    "param1": 4,
                    "ptr_to_data": 1,
                    "status": 2,
                    "status_flag": 1,
                    "status_flags": 1,
                    "undefined4_arg1": 1,
                    "undefined_param": 1,
                    "unspecified_parameter": 1,
                    "unused": 1,
                    "unused_param": 2,
                    "value": 3,
                    "value1": 1,
                    "value_to_update": 1
                },
                "param_2": {
                    "byte_value": 1,
                    "check_value": 2,
                    "condition": 2,
                    "flag": 2,
                    "input_value": 2,
                    "int_arg2": 1,
                    "max_value": 1,
                    "param": 1,
                    "param2": 3,
                    "status": 2,
                    "threshold": 1,
                    "value": 10,
                    "value_to_check": 2,
                    "value_to_compare": 1
                },
                "param_3": {
                    "data": 5,
                    "data_to_save": 1,
                    "data_to_update": 1,
                    "new_data": 6,
                    "new_global_value": 1,
                    "new_value": 10,
                    "param3": 3,
                    "to_store": 1,
                    "undefined4_arg3": 1,
                    "value2": 1,
                    "value_to_save": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\nvoid update_data_if_param_is_max_08002f84(undefined4 param1,int value,undefined4 new_value)\n\n{\n  if (value == 0xff) {\n    DAT_200005e8 = new_value;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_if_param_is_max_08002f84",
            "entrypoint": "0x08002f84",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f84": "update_data_if_param_is_max_08002f84",
                "param_1": "param1",
                "param_2": "value",
                "param_3": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002f94": {
            "additional_data": {
                "DAT_200005d0": {
                    "param_3": 1
                },
                "FUN_08002f94": {
                    "assign_parameter": 1,
                    "initialize_data": 5,
                    "initialize_global_variable": 1,
                    "save_parameter_to_global_variable": 1,
                    "set_dat_200005d0": 2,
                    "set_data": 3,
                    "set_data_param": 1,
                    "set_data_pointer": 2,
                    "set_global_value": 1,
                    "set_param": 1,
                    "set_param_3": 5,
                    "set_param_value": 2,
                    "set_parameter": 1,
                    "store_param_3": 1,
                    "store_param_as_data": 1,
                    "store_parameter": 1,
                    "store_third_param": 1,
                    "update_param_3": 1
                },
                "param_1": {
                    "arg1": 1,
                    "current_param": 1,
                    "data_ptr": 1,
                    "data_ptr_1": 1,
                    "first_param": 1,
                    "initial_value": 1,
                    "input1": 1,
                    "input_1": 1,
                    "input_parameter": 2,
                    "input_value": 1,
                    "not_used": 1,
                    "param": 1,
                    "param_1": 5,
                    "parameter1": 2,
                    "parameter_1": 1,
                    "unspecified_param_1": 1,
                    "unused_param": 1,
                    "unused_param_1": 2,
                    "value1": 3,
                    "value_1": 2
                },
                "param_2": {
                    "arg2": 1,
                    "data_ptr_2": 1,
                    "default_value": 1,
                    "input2": 1,
                    "input_2": 1,
                    "new_data": 1,
                    "next_param": 1,
                    "not_used": 1,
                    "output_parameter": 1,
                    "param": 1,
                    "param_2": 5,
                    "parameter2": 2,
                    "parameter_2": 1,
                    "second_param": 1,
                    "size_ptr": 1,
                    "unspecified_param_2": 1,
                    "unused_param": 1,
                    "unused_param_2": 2,
                    "unused_parameter": 1,
                    "value2": 3,
                    "value_2": 2
                },
                "param_3": {
                    "data": 4,
                    "data_param": 1,
                    "data_to_initialize": 2,
                    "data_to_set": 1,
                    "data_value": 1,
                    "input_data": 1,
                    "input_param": 1,
                    "new_data": 1,
                    "new_data_value": 1,
                    "new_param": 2,
                    "new_param_3": 2,
                    "new_param_value": 1,
                    "new_value": 4,
                    "param_3": 2,
                    "parameter3": 2,
                    "parameter_3": 1,
                    "value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\nvoid set_param_3_08002f94(undefined4 param_1,undefined4 param_2,undefined4 data)\n\n{\n  DAT_200005d0 = data;\n  return;\n}\n\n",
            "current_name": "set_param_3_08002f94",
            "entrypoint": "0x08002f94",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002f94": "set_param_3_08002f94",
                "param_3": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002fa0": {
            "additional_data": {
                "0xcc": {
                    "constant_offset": 1,
                    "offset": 1
                },
                "FUN_08002fa0": {
                    "extract_value_from_offset": 1,
                    "extracted_memory_value": 1,
                    "get_buffer_value": 1,
                    "get_byte_from_address": 1,
                    "get_byte_from_offset": 6,
                    "get_element_from_offset": 1,
                    "get_memory_value": 5,
                    "get_offset_value": 2,
                    "get_uint8_from_offset": 1,
                    "get_value_at_offset": 1,
                    "get_value_from_offset": 7,
                    "retrieve_data_at_offset": 1,
                    "retrieve_memory_value": 1,
                    "retrieve_value_from_offset": 1
                },
                "param_1": {
                    "base_offset": 1,
                    "index": 2,
                    "memory_offset": 1,
                    "offset": 25,
                    "offset1": 1
                },
                "param_2": {
                    "base": 1,
                    "base_address": 27,
                    "buffer": 1,
                    "start_address": 1
                },
                "undefined": {
                    "byte": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080022f8",
                "FUN_0800021a",
                "FUN_080005f8",
                "FUN_08001cd0"
            ],
            "code": "\nbyte get_value_from_offset_08002fa0(int offset,int base_address)\n\n{\n  return *(byte *)(base_address + offset + 0xcc);\n}\n\n",
            "current_name": "get_value_from_offset_08002fa0",
            "entrypoint": "0x08002fa0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002fa0": "get_value_from_offset_08002fa0",
                "param_1": "offset",
                "param_2": "base_address",
                "undefined": "byte"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002fa8": {
            "additional_data": {
                "FUN_08002fa8": {
                    "check_and_update_char": 1,
                    "update_array_value": 1,
                    "update_byte_if_not127": 1,
                    "update_char_at_offset": 1,
                    "update_char_if_not127": 2,
                    "update_char_value": 1,
                    "update_character": 15,
                    "update_character_byte": 2,
                    "update_character_value": 5,
                    "update_value_if_not127": 1,
                    "update_value_if_not_equal": 1
                },
                "param_1": {
                    "array_base": 1,
                    "base_address": 23,
                    "character_address": 2,
                    "character_base": 1,
                    "character_base_address": 1,
                    "character_pointer": 1,
                    "object_pointer": 1,
                    "ptr_to_character": 1
                },
                "param_2": {
                    "character_offset": 1,
                    "offset": 30
                },
                "param_3": {
                    "new_char": 3,
                    "new_character": 5,
                    "new_value": 22,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080005f8"
            ],
            "code": "\nvoid update_character_value_08002fa8(int base_address,int offset,undefined new_value)\n\n{\n  if (*(char *)(base_address + offset + 0xcc) != '\\x7f') {\n    *(undefined *)(base_address + offset + 0xcc) = new_value;\n  }\n  return;\n}\n\n",
            "current_name": "update_character_value_08002fa8",
            "entrypoint": "0x08002fa8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002fa8": "update_character_value_08002fa8",
                "param_1": "base_address",
                "param_2": "offset",
                "param_3": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002fba": {
            "additional_data": {
                "0x42": {
                    "constant_offset": 1,
                    "offset": 2
                },
                "4": {
                    "element_size": 3,
                    "size": 1
                },
                "DAT_": {
                    "unchanged": 1
                },
                "FUN_08002fba": {
                    "get_array_element": 4,
                    "get_data_value": 1,
                    "get_element_at_offset": 1,
                    "get_element_from_offset": 1,
                    "get_element_value": 1,
                    "get_item_at_index": 1,
                    "get_nth_element": 1,
                    "get_offset_value": 2,
                    "get_value_at_index": 1,
                    "get_value_by_index_offset": 1,
                    "get_value_from_array": 1,
                    "get_value_from_offset": 13,
                    "retrieve_data": 1,
                    "retrieve_value": 1,
                    "retrieve_value_at_offset": 1
                },
                "PTR_": {
                    "unchanged": 1
                },
                "new_variable_name_1": {
                    "calculated_offset": 1
                },
                "param_1": {
                    "array": 2,
                    "array_address": 3,
                    "array_base_address": 2,
                    "array_start_address": 1,
                    "base_address": 21,
                    "data_pointer": 1,
                    "index_base": 1
                },
                "param_2": {
                    "element_offset": 1,
                    "index": 12,
                    "index_offset": 1,
                    "offset": 15,
                    "offset_index": 2
                },
                "param_3": {
                    "result": 1
                },
                "param_4": {
                    "multiplier": 1
                },
                "param_5": {
                    "final_result": 1
                },
                "param_n": {
                    "new_parameter_name": 1
                },
                "ptr": {
                    "result_ptr": 1
                },
                "return": {
                    "retrieved_value": 1
                },
                "undefined4": {
                    "value": 1
                },
                "var_1": {
                    "multiplier": 1
                },
                "var_2": {
                    "address": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08001cd0"
            ],
            "code": "\nvalue get_value_from_offset_08002fba(int base_address,int offset)\n\n{\n  retrieved_value *(value *)(base_address + (offset + 0x42) * 4);\n}\n\n",
            "current_name": "get_value_from_offset_08002fba",
            "entrypoint": "0x08002fba",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002fba": "get_value_from_offset_08002fba",
                "param_1": "base_address",
                "param_2": "offset",
                "return": "retrieved_value",
                "undefined4": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002fc2": {
            "additional_data": {
                "FUN_08002fc2": {
                    "set_value_at_index": 2,
                    "set_value_at_offset": 1,
                    "set_value_in_array": 1,
                    "store_at_offset": 1,
                    "store_data": 1,
                    "store_to_memory": 1,
                    "store_value_at_index": 2,
                    "store_value_at_offset": 5,
                    "store_value_at_offset_in_array": 1,
                    "store_value_by_index": 1,
                    "store_value_in_array": 4,
                    "update_memory_value": 1,
                    "update_parameter": 1,
                    "update_parameter_value": 1,
                    "write_parameter_value": 1,
                    "write_to_memory": 6,
                    "write_value_to_memory": 1
                },
                "param_1": {
                    "array": 7,
                    "array_address": 2,
                    "array_base": 1,
                    "base_address": 15,
                    "base_pointer": 1,
                    "data_pointer": 1,
                    "memory": 1,
                    "memory_address": 2,
                    "target_address": 1
                },
                "param_2": {
                    "index": 21,
                    "offset": 9,
                    "offset_index": 1
                },
                "param_3": {
                    "data": 2,
                    "new_value": 2,
                    "value": 27
                },
                "undefined4": {
                    "data_type": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "code": "\nvoid store_value_at_offset_in_array_08002fc2(int base_address,int index,data_type value)\n\n{\n  *(data_type *)(base_address + (index + 0x42) * 4) = value;\n  return;\n}\n\n",
            "current_name": "store_value_at_offset_in_array_08002fc2",
            "entrypoint": "0x08002fc2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002fc2": "store_value_at_offset_in_array_08002fc2",
                "param_1": "base_address",
                "param_2": "index",
                "param_3": "value",
                "undefined4": "data_type"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08002fca": {
            "additional_data": {
                "FUNC_08008ac4": {
                    "perform_action": 1,
                    "perform_operation_a": 1,
                    "reset_param_value": 1
                },
                "FUN_08002fca": {
                    "decode_and_set_param_batch": 1,
                    "decode_and_set_param_value": 1,
                    "decode_and_set_param_value_loop": 2,
                    "decode_and_set_param_values": 12,
                    "decode_and_set_param_values_loop": 1,
                    "decode_and_set_parameter_values": 1,
                    "decode_and_set_params": 6,
                    "perform_operation": 1,
                    "process_param_values": 1,
                    "process_parameters": 2,
                    "process_params": 3
                },
                "decode_and_set_param_value_08008a24": {
                    "decode_and_set_param_value": 1,
                    "decode_and_set_param_value_b": 1,
                    "set_param_value": 1
                },
                "param_1": {
                    "arg1": 2,
                    "batch_start": 1,
                    "config_param_1": 1,
                    "input1": 1,
                    "param1": 1,
                    "param_": 1,
                    "param_1": 6,
                    "undef_param_1": 1,
                    "undefined_1": 1,
                    "undefined_param_1": 1,
                    "unknown_param": 2,
                    "unknown_parameter": 1,
                    "unused": 5,
                    "unused_param": 6,
                    "value_1": 1
                },
                "param_2": {
                    "arg2": 2,
                    "config_param_2": 1,
                    "decoded_param": 1,
                    "input2": 1,
                    "input_param": 1,
                    "input_value": 1,
                    "param2": 1,
                    "param_": 1,
                    "param_2": 4,
                    "param_buffer": 1,
                    "param_ptr": 1,
                    "param_val": 1,
                    "param_value": 10,
                    "target_address": 1,
                    "undef_param_2": 1,
                    "undefined_2": 1,
                    "undefined_param_2": 1,
                    "value_2": 1
                },
                "param_3": {
                    "batch_count": 1,
                    "count": 2,
                    "num_iterations": 19,
                    "num_loops": 1,
                    "num_params": 3,
                    "num_values": 1,
                    "param_count": 3,
                    "parameter_count": 1
                },
                "param_4": {
                    "arg3": 1,
                    "arg4": 1,
                    "decode_param1": 1,
                    "input_param_1": 1,
                    "param1": 1,
                    "param4": 1,
                    "param_": 1,
                    "param_1": 2,
                    "param_4": 6,
                    "param_val2": 1,
                    "param_value2": 1,
                    "param_value_1": 2,
                    "param_value_2": 3,
                    "undef_param_4": 1,
                    "undefined_3": 1,
                    "undefined_param_3": 1,
                    "unknown_param2": 1,
                    "unused": 2,
                    "unused_param": 2,
                    "value_3": 1
                },
                "param_5": {
                    "arg4": 1,
                    "arg5": 1,
                    "decode_param2": 1,
                    "input_param_2": 1,
                    "param2": 1,
                    "param5": 1,
                    "param_": 1,
                    "param_2": 2,
                    "param_5": 6,
                    "param_flag": 1,
                    "param_val3": 1,
                    "param_value3": 1,
                    "param_value_2": 2,
                    "param_value_3": 3,
                    "undef_param_5": 1,
                    "undefined_4": 1,
                    "undefined_param_4": 1,
                    "unknown_param3": 1,
                    "unused": 2,
                    "unused_param": 1,
                    "value_4": 1
                },
                "uVar1": {
                    "count": 1,
                    "counter": 1,
                    "i": 2,
                    "index": 2,
                    "iteration": 3,
                    "iteration_count": 14,
                    "iteration_counter": 1,
                    "iteration_index": 1,
                    "loop_counter": 1,
                    "loop_index": 1
                }
            },
            "called": [
                "FUN_08008ac4",
                "FUN_08008a24"
            ],
            "calling": [
                "FUN_08003002"
            ],
            "code": "\nvoid decode_and_set_param_values_loop_08002fca(undefined4 param_1,undefined4 param_value,int num_iterations,undefined4 param_4,\n                 undefined4 param_5)\n\n{\n  uint iteration_count;\n  \n  for (iteration_count = 0; (int)iteration_count < num_iterations; iteration_count = iteration_count + 1 & 0xff) {\n    FUNC_08008ac4(param_5);\n    decode_and_set_param_value(param_value,1);\n    FUNC_08008ac4(param_4);\n    decode_and_set_param_value(param_value,0);\n  }\n  return;\n}\n\n",
            "current_name": "decode_and_set_param_values_loop_08002fca",
            "entrypoint": "0x08002fca",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08002fca": "decode_and_set_param_values_loop_08002fca",
                "decode_and_set_param_value_08008a24": "decode_and_set_param_value",
                "param_2": "param_value",
                "param_3": "num_iterations",
                "uVar1": "iteration_count"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003002": {
            "additional_data": {
                "0x1f8": {
                    "check_flag_offset": 1,
                    "flag_data": 1,
                    "offset": 4,
                    "status_flag": 1
                },
                "0x28": {
                    "constant2": 1,
                    "constant_2": 1,
                    "constant_28": 1,
                    "loop_limit": 1,
                    "loop_start_count": 1,
                    "param_value2": 1,
                    "param_value_2": 2,
                    "second_param": 1,
                    "value2": 1
                },
                "0x7d": {
                    "constant5": 1,
                    "constant_3": 1,
                    "constant_5": 1,
                    "constant_7d": 1,
                    "data_value2": 1,
                    "operation_value_2": 1,
                    "param_value_2": 1,
                    "param_value_5": 1,
                    "process_value_param2": 1,
                    "update_value_2": 1,
                    "value2": 1,
                    "value5": 1,
                    "value_flag2": 1
                },
                "0xd": {
                    "constant1": 1,
                    "constant_1": 2,
                    "constant_d": 1,
                    "control_flag": 1,
                    "control_flag1": 1,
                    "control_value_1": 1,
                    "first_param": 1,
                    "initial_value": 1,
                    "param_value1": 1,
                    "param_value_1": 2,
                    "value1": 1
                },
                "0xd2": {
                    "constant3": 1,
                    "constant_3": 1,
                    "constant_d2": 1,
                    "param_update_value": 1,
                    "param_value": 1,
                    "param_value3": 1,
                    "param_value_3": 2,
                    "third_param": 1,
                    "value3": 1
                },
                "0xfa": {
                    "constant4": 1,
                    "constant_2": 1,
                    "constant_4": 1,
                    "constant_fa": 1,
                    "data_value1": 1,
                    "operation_value_1": 1,
                    "param_value_1": 1,
                    "param_value_4": 1,
                    "process_value_param1": 1,
                    "update_value_1": 1,
                    "value1": 1,
                    "value4": 1,
                    "value_flag1": 1
                },
                "2": {
                    "param_value_1_offset": 1
                },
                "5": {
                    "param_value_2_offset": 1
                },
                "7d": {
                    "constant3": 1
                },
                "DAT_": {
                    "dat_": 1
                },
                "DAT_08003002": {
                    "decode_and_update_params_input": 1
                },
                "DAT_080030e0": {
                    "value1": 1
                },
                "DAT_08003110": {
                    "value2": 1
                },
                "DAT_08008ac3": {
                    "dat_08008ac3": 1
                },
                "DAT_08008ac4": {
                    "update_param_value_input": 1
                },
                "FA": {
                    "constant1": 1
                },
                "FD": {
                    "constant2": 1
                },
                "FUNC_08008ac4": {
                    "execute_f": 1,
                    "execute_function": 5,
                    "func": 1,
                    "func_08008ac4": 1,
                    "function_a": 1,
                    "function_b": 1,
                    "function_two": 1,
                    "perform_action": 1,
                    "perform_operation": 1,
                    "process_data": 1,
                    "process_value": 1,
                    "set_flag": 1,
                    "set_param_value": 2,
                    "set_value": 1,
                    "simple_function": 1,
                    "update_flags": 1,
                    "update_param_value": 4,
                    "update_param_values": 2,
                    "update_register_value": 1,
                    "update_value": 2,
                    "update_values_with_param": 1
                },
                "FUN_08003002": {
                    "decode_and_set_param_values": 13,
                    "decode_and_update_param_values": 3,
                    "decode_and_update_parameters": 1,
                    "decode_and_update_params": 3,
                    "initialize_param_values": 2,
                    "initialize_params": 2,
                    "initialize_params_and_flags": 1,
                    "process_param_values": 1,
                    "update_and_decode_params": 1,
                    "update_parameter_values": 1,
                    "update_parameters": 2,
                    "update_params": 1
                },
                "FUN_08003002_1": {
                    "check_flag": 1
                },
                "PTR_": {
                    "ptr_": 1
                },
                "PTR_08002fca": {
                    "decode_and_set_param_values_loop_input": 1
                },
                "PTR_08008990": {
                    "control_flag": 1
                },
                "PTR_08008ac4": {
                    "update_flag": 1
                },
                "PTR_08008c2c": {
                    "function_ptr": 1
                },
                "decodeAndSetParamValues": {
                    "decode_and_set_param_values": 1
                },
                "decode_and_set_param_values_loop_08002fca": {
                    "decode_and_set_param_values": 4,
                    "decode_and_set_param_values_loop": 17,
                    "decode_and_set_parameter_values": 1,
                    "decode_and_set_parameter_values_loop": 1,
                    "decode_and_set_params_loop": 2,
                    "decode_and_set_values_loop": 1,
                    "decode_params": 1,
                    "loop_decoder": 1,
                    "param_values_loop": 2,
                    "set_param_values_loop": 1
                },
                "decode_params": {
                    "decode_params": 1
                },
                "executeFunction": {
                    "execute_function": 1
                },
                "initializeParamValues": {
                    "initialize_param_values": 1
                },
                "input_data": {
                    "input_data": 1
                },
                "param_1": {
                    "data": 3,
                    "decoded_parameter": 1,
                    "input": 1,
                    "input_buffer": 1,
                    "input_data": 6,
                    "input_param": 2,
                    "input_value": 2,
                    "obj_ptr": 1,
                    "param": 11,
                    "param_values_struct": 1,
                    "parameter": 1,
                    "pointer": 1
                },
                "reverseControlAndUpdateFlags": {
                    "reverse_control_and_update_flags": 1
                },
                "reverse_control_and_update_flags_08008990": {
                    "reverse_and_update_flags": 2,
                    "reverse_control_and_update_flags": 18,
                    "reverse_flags": 2,
                    "reverse_flags_and_update_control": 1,
                    "update_control_flags": 1,
                    "update_flags": 5
                },
                "set_value": {
                    "set_value": 1
                },
                "update_flags": {
                    "update_flags": 1
                }
            },
            "called": [
                "FUN_08008ac4",
                "FUN_08002fca",
                "FUN_08008990"
            ],
            "calling": [
                "FUN_08003048"
            ],
            "code": "\nvoid decode_and_set_param_values_08003002(int param)\n\n{\n  if (*(char *)(param + 0x1f8) != '\\0') {\n    return;\n  }\n  reverse_control_and_update_flags(0xd,1);\n  decode_and_set_param_values_08003002_loop(param,0xd,2,0x28,0xd2);\n  FUNC_08008ac4(0xfa);\n  decode_and_set_param_values_08003002_loop(param,0xd,5,0x28,0xd2);\n  FUNC_08008ac4(0x7d);\n  return;\n}\n\n",
            "current_name": "decode_and_set_param_values_08003002",
            "entrypoint": "0x08003002",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003002": "decode_and_set_param_values_08003002",
                "decode_and_set_param_values_loop_08002fca": "decode_and_set_param_values_loop",
                "param_1": "param",
                "reverse_control_and_update_flags_08008990": "reverse_control_and_update_flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003048": {
            "additional_data": {
                "DAT_20000700": {
                    "serial_data": 1
                },
                "FUN_08003048": {
                    "initialize_and_process_data": 9,
                    "initialize_and_process_serial_data": 14,
                    "initialize_decode_and_copy": 1,
                    "initialize_decode_and_copy_data": 1,
                    "initialize_decode_and_process": 2,
                    "initialize_decode_copy_and_process": 1,
                    "initialize_decode_copy_process": 2,
                    "initialize_decode_process": 1
                },
                "copy_value_and_process_data_08002e26": {
                    "copy_and_process_data": 6,
                    "copy_and_process_serial_data": 5,
                    "copy_data_and_process": 1,
                    "copy_value_and_process_data": 1,
                    "copy_value_and_process_serial_data": 1
                },
                "decode_and_set_param_values_08003002": {
                    "decode_and_set_data": 1,
                    "decode_and_set_data_params": 1,
                    "decode_and_set_input_param_values": 1,
                    "decode_and_set_input_params": 1,
                    "decode_and_set_param_values": 3,
                    "decode_and_set_parameter_values": 1,
                    "decode_and_set_parameters": 2,
                    "decode_and_set_params": 1,
                    "decode_and_set_serial_params": 2,
                    "decode_and_set_values": 1
                },
                "initialize_serial_port_08008c44": {
                    "initialize_serial_port": 9
                },
                "param_1": {
                    "data": 4,
                    "data_param": 2,
                    "input_data": 5,
                    "input_param": 6,
                    "input_parameter": 2,
                    "input_value": 1,
                    "param1": 1,
                    "param_1": 1,
                    "param_serial_port": 2,
                    "serial_data": 5,
                    "serial_port": 1,
                    "serial_port_address": 1
                },
                "param_2": {
                    "baud_rate": 2,
                    "initialization_value": 1,
                    "param2": 1,
                    "param_2": 2,
                    "param_2_value": 1,
                    "param_value": 1,
                    "port": 3,
                    "port_address": 1,
                    "port_number": 3,
                    "serial_port": 6,
                    "serial_port_config": 2,
                    "serial_port_param": 7,
                    "serial_port_parameter": 1
                },
                "param_3": {
                    "": 1,
                    "data_bits": 1,
                    "param_3": 5,
                    "param_3_value": 1,
                    "param_value": 1,
                    "parameter_3": 1,
                    "uninitialized_param": 1,
                    "unknown": 2,
                    "unknown_param": 1,
                    "unused": 2,
                    "unused1": 1,
                    "unused_param": 6,
                    "unused_parameter": 2
                },
                "param_4": {
                    "another_unused_param": 1,
                    "another_unused_parameter": 1,
                    "buffer": 1,
                    "data_length": 1,
                    "data_param": 2,
                    "param4": 1,
                    "param_4": 6,
                    "param_4_value": 1,
                    "param_data": 1,
                    "param_value": 1,
                    "parameter_4": 1,
                    "stop_bits": 1,
                    "uninitialized_param_2": 1,
                    "unknown": 1,
                    "unknown_2": 1,
                    "unknown_param_2": 1,
                    "unused": 2,
                    "unused2": 1,
                    "unused_param": 2,
                    "unused_param_2": 3,
                    "unused_parameter": 1
                }
            },
            "called": [
                "FUN_08002e26",
                "FUN_08008c44",
                "FUN_08003002"
            ],
            "calling": [
                "FUN_08001b48"
            ],
            "code": "\nvoid initialize_and_process_serial_data_08003048(undefined4 input_param,undefined4 serial_port_param,undefined4 unused_param,undefined4 param_4)\n\n{\n  initialize_serial_port(&DAT_20000700,serial_port_param,6,param_4,param_4);\n  decode_and_set_param_values(input_param);\n  copy_and_process_data(input_param,&DAT_20000700);\n  return;\n}\n\n",
            "current_name": "initialize_and_process_serial_data_08003048",
            "entrypoint": "0x08003048",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003048": "initialize_and_process_serial_data_08003048",
                "copy_value_and_process_data_08002e26": "copy_and_process_data",
                "decode_and_set_param_values_08003002": "decode_and_set_param_values",
                "initialize_serial_port_08008c44": "initialize_serial_port",
                "param_1": "input_param",
                "param_2": "serial_port_param",
                "param_3": "unused_param"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800307a": {
            "additional_data": {
                "FUN_0800307a": {
                    "convert_byte_array_to_integers": 1,
                    "decode_and_execute": 3,
                    "decode_and_process_data": 4,
                    "decode_byte_stream": 1,
                    "decode_bytes": 1,
                    "decode_data": 19,
                    "decode_variable_length_data": 1,
                    "decompress_data": 1
                },
                "param_1": {
                    "callbacks": 1,
                    "data": 1,
                    "data_pointer": 3,
                    "decoded_data": 1,
                    "dest_array_ptr": 1,
                    "func_ptr": 1,
                    "function_address": 1,
                    "function_list": 2,
                    "function_pointer": 3,
                    "function_pointers": 3,
                    "function_ptr": 9,
                    "output": 1,
                    "output_buffer": 2,
                    "stream_function": 1
                },
                "param_2": {
                    "byte_count": 1,
                    "data_len": 1,
                    "data_length": 13,
                    "data_size": 3,
                    "input_length": 8,
                    "input_size": 2,
                    "num_elements": 2,
                    "stream_length": 1
                },
                "param_3": {
                    "byte_array": 3,
                    "byte_stream": 1,
                    "data": 6,
                    "data_buffer": 3,
                    "encoded_data": 5,
                    "input_buffer": 1,
                    "input_bytes": 2,
                    "input_data": 7,
                    "input_data_ptr": 1,
                    "source_data": 1
                },
                "param_4": {
                    "max_decoded_length": 3,
                    "max_iterations": 15,
                    "max_length": 1,
                    "max_output": 1,
                    "max_output_len": 1,
                    "max_output_length": 6,
                    "max_output_size": 1,
                    "output_length": 2,
                    "output_limit": 1
                },
                "uVal2": {
                    "bit_offset": 1
                },
                "uVar1": {
                    "bit_buffer": 1,
                    "current_byte": 29,
                    "current_data": 1
                },
                "uVar2": {
                    "bit_count": 2,
                    "bit_index": 2,
                    "bit_offset": 17,
                    "bit_position": 6,
                    "bits_read": 1,
                    "bits_used": 1,
                    "current_bit_index": 1
                },
                "uVar3": {
                    "decoded_length": 4,
                    "iteration_count": 15,
                    "output_count": 1,
                    "output_counter": 1,
                    "output_len": 1,
                    "output_length": 2,
                    "output_offset": 3,
                    "output_position": 2,
                    "output_size": 1,
                    "processed_length": 1
                },
                "uVar4": {
                    "byte_count": 1,
                    "byte_counter": 1,
                    "byte_index": 10,
                    "current_byte_index": 2,
                    "current_index": 3,
                    "data_index": 2,
                    "element_index": 2,
                    "input_index": 4,
                    "input_offset": 3,
                    "input_position": 2,
                    "stream_index": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800319e",
                "FUN_08003158",
                "FUN_08003106",
                "FUN_080031ce",
                "FUN_0800325a"
            ],
            "code": "\nvoid decode_and_process_data_0800307a(undefined4 *function_ptr,uint data_length,byte *input_data,uint max_iterations)\n\n{\n  uint current_byte;\n  uint bit_offset;\n  uint iteration_count;\n  uint byte_index;\n  \n  current_byte = (uint)*input_data;\n  if (max_iterations == 0) {\n    max_iterations = 0xffffffff;\n  }\n  byte_index = 0;\n  bit_offset = 0;\n  iteration_count = 0;\n  while ((byte_index < data_length && (iteration_count < max_iterations))) {\n    (***(code ***)(undefined4 *)*function_ptr)\n              ((undefined4 *)*function_ptr,((uint)input_data[byte_index] << (bit_offset & 0xff) | current_byte) & 0x7f);\n    current_byte = (int)(uint)input_data[byte_index] >> (7 - bit_offset & 0xff) & 0xff;\n    bit_offset = bit_offset + 1;\n    while ((iteration_count = iteration_count + 1, 6 < bit_offset && (iteration_count < max_iterations))) {\n      (***(code ***)(undefined4 *)*function_ptr)((undefined4 *)*function_ptr,current_byte & 0x7f);\n      current_byte = current_byte >> 7;\n      bit_offset = bit_offset - 7;\n    }\n    byte_index = byte_index + 1;\n  }\n  if ((bit_offset != 0) && (iteration_count < max_iterations)) {\n    (***(code ***)(undefined4 *)*function_ptr)((undefined4 *)*function_ptr,(1 << (bit_offset & 0xff)) - 1U & current_byte)\n    ;\n  }\n  return;\n}\n\n",
            "current_name": "decode_and_process_data_0800307a",
            "entrypoint": "0x0800307a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800307a": "decode_and_process_data_0800307a",
                "param_1": "function_ptr",
                "param_2": "data_length",
                "param_3": "input_data",
                "param_4": "max_iterations",
                "uVar1": "current_byte",
                "uVar2": "bit_offset",
                "uVar3": "iteration_count",
                "uVar4": "byte_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003106": {
            "additional_data": {
                "FUN_08003106": {
                    "decode_and_process": 1,
                    "decode_and_process_data": 1,
                    "decode_and_process_function": 1,
                    "execute_function": 1,
                    "process_data": 25,
                    "process_function": 2
                },
                "decode_and_process_data_0800307a": {
                    "decode_and_process": 1,
                    "decode_and_process_data": 6
                },
                "param_1": {
                    "data_pointer": 4,
                    "data_ptr": 23,
                    "function_ptr": 4
                },
                "param_2": {
                    "constant1": 1,
                    "constant_1": 1,
                    "constant_value1": 1,
                    "data_1": 1,
                    "param2": 1,
                    "param_2": 9,
                    "value1": 3,
                    "value_1": 7,
                    "value_2": 7
                },
                "param_3": {
                    "constant2": 1,
                    "constant_2": 1,
                    "constant_value2": 1,
                    "data_2": 1,
                    "param3": 1,
                    "param_3": 9,
                    "value2": 3,
                    "value_2": 7,
                    "value_3": 7
                },
                "param_4": {
                    "constant3": 1,
                    "constant_3": 1,
                    "constant_value3": 1,
                    "data_3": 1,
                    "param4": 1,
                    "param_4": 9,
                    "value3": 3,
                    "value_3": 7,
                    "value_4": 7
                },
                "puVar1": {
                    "code_ptr": 1,
                    "current_ptr": 1,
                    "func_ptr": 8,
                    "function_pointer": 3,
                    "function_ptr": 7,
                    "ptr": 6,
                    "ptr_to_data": 1,
                    "ptr_to_func": 1,
                    "ptr_to_function": 1,
                    "temp_ptr": 1,
                    "value_pointer": 1
                }
            },
            "called": [
                "FUN_0800307a"
            ],
            "calling": [
                "FUN_08003158"
            ],
            "code": "\nvoid decode_and_process_data_08003106(undefined4 *data_ptr,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 *func_ptr;\n  \n  func_ptr = (undefined4 *)*data_ptr;\n  if (func_ptr != (undefined4 *)0x0) {\n    (**(code **)*func_ptr)(func_ptr,0xf0);\n    (***(code ***)(undefined4 *)*data_ptr)((undefined4 *)*data_ptr,0x6f);\n    (***(code ***)(undefined4 *)*data_ptr)((undefined4 *)*data_ptr,param_2);\n    decode_and_process_data_08003106(data_ptr,param_3,param_4,param_3);\n    (***(code ***)(undefined4 *)*data_ptr)((undefined4 *)*data_ptr,0xf7);\n  }\n  return;\n}\n\n",
            "current_name": "decode_and_process_data_08003106",
            "entrypoint": "0x08003106",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003106": "decode_and_process_data_08003106",
                "decode_and_process_data_0800307a": "decode_and_process_data",
                "param_1": "data_ptr",
                "puVar1": "func_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800314e": {
            "additional_data": {
                "0": {
                    "initial_value": 2
                },
                "FUN_0800314e": {
                    "clear_memory": 5,
                    "clear_pointer": 1,
                    "clear_value": 2,
                    "initialize_param": 4,
                    "initialize_parameter": 3,
                    "initialize_pointer": 2,
                    "initialize_to_zero": 2,
                    "initialize_value": 7,
                    "initialize_variable": 3,
                    "set_param_to_zero": 2
                },
                "param_1": {
                    "memory_pointer": 4,
                    "output": 6,
                    "output_param": 4,
                    "output_pointer": 2,
                    "output_ptr": 1,
                    "output_value": 3,
                    "output_variable": 3,
                    "parameter": 1,
                    "pointer": 1,
                    "result": 2,
                    "result_pointer": 2,
                    "value_pointer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ce0"
            ],
            "code": "\nvoid initialize_value_0800314e(undefined4 *output)\n\n{\n  *output = 0;\n  return;\n}\n\n",
            "current_name": "initialize_value_0800314e",
            "entrypoint": "0x0800314e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800314e": "initialize_value_0800314e",
                "param_1": "output"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003154": {
            "additional_data": {
                "FUN_08003154": {
                    "assign_param_value": 1,
                    "assign_parameter_to_pointer": 1,
                    "assign_parameter_value": 1,
                    "assign_value": 5,
                    "assign_value_to_pointer": 3,
                    "copy_param_to_ptr": 1,
                    "copy_parameter_value": 1,
                    "copy_parameter_value_to_pointer": 1,
                    "copy_value": 4,
                    "copy_value_to_param": 1,
                    "copy_value_to_pointer": 9,
                    "copy_value_to_pointer_array": 1,
                    "set_parameter_value": 1,
                    "update_parameter_value": 1
                },
                "param_1": {
                    "dest": 1,
                    "dest_pointer": 1,
                    "destination": 15,
                    "destination_pointer": 1,
                    "destination_ptr": 1,
                    "output": 2,
                    "output_pointer": 1,
                    "output_ptr": 2,
                    "output_value": 1,
                    "pointer": 2,
                    "ptr_array": 1,
                    "result": 1,
                    "target_pointer": 1
                },
                "param_2": {
                    "input": 2,
                    "input_value": 4,
                    "new_value": 1,
                    "source": 5,
                    "source_value": 1,
                    "value": 13,
                    "value_to_assign": 1,
                    "value_to_copy": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_08002e26"
            ],
            "code": "\nvoid copy_value_to_pointer_array_08003154(undefined4 *destination,undefined4 value)\n\n{\n  *destination = value;\n  return;\n}\n\n",
            "current_name": "copy_value_to_pointer_array_08003154",
            "entrypoint": "0x08003154",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003154": "copy_value_to_pointer_array_08003154",
                "param_1": "destination",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003158": {
            "additional_data": {
                "FUN_08003158": {
                    "decode_and_process": 3,
                    "decode_and_process_data": 5,
                    "process_data": 22,
                    "process_function": 1
                },
                "local_a": {
                    "data_length": 1,
                    "decoded_data": 6,
                    "decoded_data_value": 1,
                    "decoded_input": 1,
                    "decoded_value": 6,
                    "encoded_data": 2,
                    "local_flags": 1,
                    "local_value": 3,
                    "local_variable": 1,
                    "modified_data_value": 1,
                    "new_value": 1,
                    "processed_data": 3,
                    "temp": 1,
                    "temp_value": 3
                },
                "param_1": {
                    "data": 4,
                    "data_array": 2,
                    "data_buffer": 1,
                    "data_pointer": 4,
                    "data_ptr": 15,
                    "function_pointer": 1,
                    "function_ptr": 1,
                    "input_data": 1,
                    "parameter": 1,
                    "ptr_to_param": 1
                },
                "param_2": {
                    "buffer_length": 1,
                    "data_len": 1,
                    "data_length": 6,
                    "data_size": 4,
                    "flag": 2,
                    "flags": 2,
                    "input_length": 1,
                    "length": 5,
                    "size": 8,
                    "value1": 1
                },
                "param_3": {
                    "data_length": 1,
                    "data_value": 12,
                    "flag": 3,
                    "flags": 2,
                    "input_data": 1,
                    "value": 11,
                    "value2": 1
                },
                "puVar1": {
                    "func_ptr": 4,
                    "function_pointer": 1,
                    "function_ptr": 7,
                    "function_ptr_value": 1,
                    "pointer": 4,
                    "ptr": 4,
                    "ptr_data": 1,
                    "ptr_to_func": 1,
                    "ptr_value": 1,
                    "target_ptr": 1
                }
            },
            "called": [
                "FUN_08003106",
                "FUN_0800307a"
            ],
            "calling": [
                "FUN_08002ef2"
            ],
            "code": "\nvoid decode_and_process_data_08003158(undefined4 *data_ptr,uint size,ushort data_value)\n\n{\n  undefined4 *function_ptr;\n  ushort decoded_data;\n  \n  function_ptr = (undefined4 *)*data_ptr;\n  if (function_ptr != (undefined4 *)0x0) {\n    decoded_data = data_value;\n    if (((int)size < 0x10) && (data_value < 0x4000)) {\n      (**(code **)*function_ptr)(function_ptr,size | 0xe0);\n      decode_and_process_data_08003158_0800307a(data_ptr,2,&decoded_data);\n    }\n    else {\n      decode_and_process_data_08003158_08003106(data_ptr,size,2,&decoded_data);\n    }\n  }\n  return;\n}\n\n",
            "current_name": "decode_and_process_data_08003158",
            "entrypoint": "0x08003158",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003158": "decode_and_process_data_08003158",
                "local_a": "decoded_data",
                "param_1": "data_ptr",
                "param_2": "size",
                "param_3": "data_value",
                "puVar1": "function_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800319e": {
            "additional_data": {
                "FUN_0800319e": {
                    "decode_and_process_data": 4,
                    "execute_and_decode_data": 1,
                    "execute_function_and_process_data": 1,
                    "process_and_decode_data": 1,
                    "process_data": 19,
                    "process_data_and_decode": 1,
                    "process_function": 3,
                    "reverse_and_process_data": 1
                },
                "local_a": {
                    "decoded_data": 14,
                    "decoded_data_value": 1,
                    "decoded_value": 2,
                    "flag_modified": 1,
                    "local_data": 1,
                    "local_param": 1,
                    "new_data_type": 1,
                    "processed_data": 6,
                    "temp": 1,
                    "temp_value": 2,
                    "temporary_data": 1
                },
                "param_1": {
                    "data_pointer": 6,
                    "data_ptr": 18,
                    "data_source": 1,
                    "function_address": 1,
                    "function_pointer": 1,
                    "function_ptr": 2,
                    "input_pointer": 1,
                    "pointer": 1
                },
                "param_2": {
                    "data": 3,
                    "data_flag": 1,
                    "data_flags": 1,
                    "data_length": 8,
                    "data_size": 12,
                    "data_to_process": 1,
                    "flags": 2,
                    "input_length": 1,
                    "length": 2
                },
                "param_3": {
                    "additional_info": 1,
                    "data": 3,
                    "data_decrypt_key": 1,
                    "data_flag": 2,
                    "data_identifier": 1,
                    "data_info": 1,
                    "data_tag": 1,
                    "data_type": 2,
                    "data_value": 12,
                    "flag": 2,
                    "input_data": 1,
                    "param_value": 1,
                    "value": 3
                },
                "puVar1": {
                    "func_ptr": 6,
                    "function": 1,
                    "function_pointer": 7,
                    "function_ptr": 14,
                    "function_ptr_val": 1,
                    "function_ptr_value": 1,
                    "next_function_ptr": 1
                }
            },
            "called": [
                "FUN_0800307a"
            ],
            "calling": [
                "FUN_08002efe"
            ],
            "code": "\nvoid process_data_and_decode_0800319e(undefined4 *data_ptr,uint data_size,undefined2 data_value)\n\n{\n  undefined4 *function_ptr;\n  undefined2 decoded_data;\n  \n  function_ptr = (undefined4 *)*data_ptr;\n  if (function_ptr != (undefined4 *)0x0) {\n    decoded_data = data_value;\n    (**(code **)*function_ptr)(function_ptr,data_size & 0xf | 0x90);\n    decode_and_process_data_0800307a(data_ptr,2,&decoded_data);\n  }\n  return;\n}\n\n",
            "current_name": "process_data_and_decode_0800319e",
            "entrypoint": "0x0800319e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800319e": "process_data_and_decode_0800319e",
                "local_a": "decoded_data",
                "param_1": "data_ptr",
                "param_2": "data_size",
                "param_3": "data_value",
                "puVar1": "function_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080031ce": {
            "additional_data": {
                "FUN_080031ce": {
                    "decode_and_process": 1,
                    "decode_and_process_data": 9,
                    "decode_and_process_data_wrapper": 1,
                    "process_data": 20
                },
                "param_1": {
                    "data_pointer": 3,
                    "data_ptr": 22,
                    "function_pointer": 2,
                    "function_ptr": 1,
                    "input_array": 1,
                    "input_data": 2
                },
                "param_2": {
                    "arg2": 1,
                    "param2": 9,
                    "param_2": 12,
                    "param_value_2": 1,
                    "second_param": 1,
                    "size": 1,
                    "value1": 4,
                    "value_2": 2
                },
                "param_3": {
                    "arg3": 1,
                    "flag": 1,
                    "param3": 9,
                    "param_3": 12,
                    "param_value_3": 1,
                    "third_param": 1,
                    "value2": 4,
                    "value_3": 2
                },
                "param_4": {
                    "array_size": 1,
                    "count": 3,
                    "data_count": 3,
                    "data_len": 1,
                    "data_length": 2,
                    "data_size": 1,
                    "length": 4,
                    "num_elements": 4,
                    "num_iterations": 7,
                    "param4": 1,
                    "param_4": 2,
                    "size": 2
                },
                "param_5": {
                    "base_index": 1,
                    "base_param": 1,
                    "base_value": 1,
                    "offset": 14,
                    "param5": 1,
                    "param_5": 6,
                    "start_index": 3,
                    "starting_index": 4
                },
                "puVar1": {
                    "code_ptr": 2,
                    "func_ptr": 8,
                    "function_pointer": 1,
                    "function_ptr": 12,
                    "function_to_call": 1,
                    "ptr": 4,
                    "ptr1": 1,
                    "ptr_to_function": 1,
                    "temp_pointer": 1
                },
                "uVar2": {
                    "counter": 2,
                    "data_index": 1,
                    "i": 7,
                    "index": 13,
                    "iteration_count": 4,
                    "iteration_counter": 1,
                    "iteration_index": 1,
                    "iterator": 1,
                    "loop_index": 1
                }
            },
            "called": [
                "FUN_0800307a"
            ],
            "calling": [
                "FUN_08002df6"
            ],
            "code": "\nvoid decode_and_process_data_wrapper_080031ce(undefined4 *data_ptr,undefined4 param_2,undefined4 param_3,uint num_iterations,int offset\n                 )\n\n{\n  undefined4 *function_ptr;\n  uint index;\n  \n  function_ptr = (undefined4 *)*data_ptr;\n  if (function_ptr != (undefined4 *)0x0) {\n    (**(code **)*function_ptr)(function_ptr,0xf0,param_3,*(code **)*function_ptr,num_iterations);\n    (***(code ***)(undefined4 *)*data_ptr)((undefined4 *)*data_ptr,0x79);\n    (***(code ***)(undefined4 *)*data_ptr)((undefined4 *)*data_ptr,param_2);\n    (***(code ***)(undefined4 *)*data_ptr)((undefined4 *)*data_ptr,param_3);\n    for (index = 0; index < num_iterations; index = index + 1) {\n      decode_and_process_data_0800307a(data_ptr,1,offset + index,0);\n    }\n    (***(code ***)(undefined4 *)*data_ptr)((undefined4 *)*data_ptr,0xf7);\n  }\n  return;\n}\n\n",
            "current_name": "decode_and_process_data_wrapper_080031ce",
            "entrypoint": "0x080031ce",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080031ce": "decode_and_process_data_wrapper_080031ce",
                "param_1": "data_ptr",
                "param_4": "num_iterations",
                "param_5": "offset",
                "puVar1": "function_ptr",
                "uVar2": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800322c": {
            "additional_data": {
                "FUN_0800322c": {
                    "execute_function": 24,
                    "execute_function_chain": 1,
                    "execute_function_with_params": 2,
                    "execute_functions": 1,
                    "execute_operations": 1,
                    "execute_three_functions": 1,
                    "execute_three_operations": 1
                },
                "param_1": {
                    "function_chain_ptr": 1,
                    "function_pointer": 15,
                    "function_pointers": 2,
                    "function_ptr": 11,
                    "function_table": 1,
                    "operations_ptr": 1
                },
                "param_2": {
                    "arg1": 6,
                    "arg2": 1,
                    "arg_1": 1,
                    "arg_2": 1,
                    "argument1": 2,
                    "argument2": 1,
                    "data_1": 1,
                    "input_param_1": 2,
                    "param2": 3,
                    "param_2": 6,
                    "parameter2": 2,
                    "parameter_1": 2,
                    "parameter_2": 2,
                    "value1": 1
                },
                "param_3": {
                    "arg2": 6,
                    "arg3": 1,
                    "arg_2": 1,
                    "arg_3": 1,
                    "argument2": 2,
                    "argument3": 1,
                    "data_2": 1,
                    "input_param_2": 2,
                    "param3": 3,
                    "param_3": 6,
                    "parameter3": 2,
                    "parameter_2": 2,
                    "parameter_3": 2,
                    "value2": 1
                },
                "puVar1": {
                    "current_function": 1,
                    "current_function_ptr": 1,
                    "first_ptr": 1,
                    "func_ptr": 1,
                    "func_ptr_value": 1,
                    "function": 2,
                    "function_address": 2,
                    "function_pointer": 1,
                    "function_pointer_value": 1,
                    "function_ptr": 3,
                    "function_to_execute": 1,
                    "inner_function_pointer": 1,
                    "next_function_pointer": 1,
                    "ptr_in_param1": 1,
                    "ptr_to_func": 1,
                    "ptr_to_function": 5,
                    "target_function": 2,
                    "temp_var": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ddc"
            ],
            "code": "\nvoid execute_function_with_params_0800322c(undefined4 *function_pointer,undefined4 param_2,undefined4 param_3)\n\n{\n  undefined4 *ptr_to_function;\n  \n  ptr_to_function = (undefined4 *)*function_pointer;\n  if (ptr_to_function != (undefined4 *)0x0) {\n    (**(code **)*ptr_to_function)(ptr_to_function,0xf9);\n    (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,param_2);\n    (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,param_3);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "execute_function_with_params_0800322c",
            "entrypoint": "0x0800322c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800322c": "execute_function_with_params_0800322c",
                "param_1": "function_pointer",
                "puVar1": "ptr_to_function"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800325a": {
            "additional_data": {
                "FUN_0800325a": {
                    "decode_and_process": 2,
                    "decode_and_process_data": 3,
                    "process_binary_data": 1,
                    "process_data": 23,
                    "process_data_and_decode": 1
                },
                "decode_and_process_data_0800307a": {
                    "decode_and_process_data": 1
                },
                "param3": {
                    "data_count": 1
                },
                "param_1": {
                    "callback_ptr": 1,
                    "data": 1,
                    "data_array": 2,
                    "data_pointer": 2,
                    "data_ptr": 25
                },
                "param_2": {
                    "data_value": 1,
                    "flag": 2,
                    "length": 1,
                    "param2": 2,
                    "param_2": 8,
                    "param_value": 6,
                    "size": 1,
                    "value": 8,
                    "value_2": 1,
                    "var_2": 1
                },
                "param_3": {
                    "count": 4,
                    "data_count": 6,
                    "data_length": 1,
                    "data_size": 1,
                    "length": 1,
                    "num_elements": 2,
                    "num_iterations": 15
                },
                "param_4": {
                    "base_offset": 1,
                    "base_value": 2,
                    "initial_value": 2,
                    "offset": 19,
                    "start_index": 6,
                    "starting_value": 1
                },
                "puVar1": {
                    "code_ptr": 2,
                    "data_ptr": 1,
                    "func_ptr": 7,
                    "function_pointer": 2,
                    "function_ptr": 14,
                    "ptr_to_data": 1,
                    "ptr_to_func": 1,
                    "ptr_value": 1,
                    "temp_pointer": 1
                },
                "uVar2": {
                    "count_iteration": 1,
                    "counter": 1,
                    "i": 4,
                    "index": 8,
                    "iteration": 4,
                    "iteration_count": 7,
                    "iteration_counter": 3,
                    "iteration_index": 2
                }
            },
            "called": [
                "FUN_0800307a"
            ],
            "calling": [
                "FUN_080032a2",
                "FUN_08002f0a"
            ],
            "code": "\nvoid process_data_and_decode_0800325a(undefined4 *data_ptr,undefined4 param_2,uint num_iterations,int offset)\n\n{\n  undefined4 *function_ptr;\n  uint index;\n  \n  function_ptr = (undefined4 *)*data_ptr;\n  if (function_ptr != (undefined4 *)0x0) {\n    (**(code **)*function_ptr)(function_ptr,0xf0);\n    (***(code ***)(undefined4 *)*data_ptr)((undefined4 *)*data_ptr,param_2);\n    for (index = 0; index < num_iterations; index = index + 1) {\n      decode_and_process_data(data_ptr,1,offset + index,0);\n    }\n    (***(code ***)(undefined4 *)*data_ptr)((undefined4 *)*data_ptr,0xf7);\n  }\n  return;\n}\n\n",
            "current_name": "process_data_and_decode_0800325a",
            "entrypoint": "0x0800325a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800325a": "process_data_and_decode_0800325a",
                "decode_and_process_data_0800307a": "decode_and_process_data",
                "param_1": "data_ptr",
                "param_3": "num_iterations",
                "param_4": "offset",
                "puVar1": "function_ptr",
                "uVar2": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080032a2": {
            "additional_data": {
                "FUN_080032a2": {
                    "decode_and_process_data": 12,
                    "decode_data": 1,
                    "process_and_decode": 1,
                    "process_and_decode_data": 15,
                    "process_and_decode_text": 1
                },
                "find_end_of_string_08000178": {
                    "find_end_of_string": 16,
                    "find_string_end": 2
                },
                "param_1": {
                    "arg1": 4,
                    "data": 2,
                    "data_param": 2,
                    "data_ptr": 2,
                    "input_1": 1,
                    "input_addr": 1,
                    "input_buffer": 1,
                    "input_data": 6,
                    "input_param": 7,
                    "output_buffer": 2,
                    "param_1": 1,
                    "source_data": 1
                },
                "param_2": {
                    "arg2": 4,
                    "input_2": 1,
                    "input_buffer": 1,
                    "input_data": 1,
                    "input_string": 1,
                    "param_2": 1,
                    "string": 5,
                    "string_buffer": 1,
                    "string_data": 4,
                    "string_param": 9,
                    "string_ptr": 2
                },
                "param_3": {
                    "param_3": 1,
                    "unknown_param": 1,
                    "unused": 3,
                    "unused_param": 3,
                    "unused_parameter": 1
                },
                "param_4": {
                    "additional_data": 3,
                    "additional_param": 2,
                    "arg4": 4,
                    "destination_data": 1,
                    "extra": 1,
                    "extra_data": 1,
                    "input_4": 1,
                    "other_param": 1,
                    "output": 1,
                    "output_addr": 1,
                    "output_buffer": 1,
                    "output_data": 4,
                    "output_param": 5,
                    "output_ptr": 1,
                    "param_4": 1,
                    "result_param": 1,
                    "result_ptr": 1
                },
                "process_data_and_decode_0800325a": {
                    "decode_and_process": 1,
                    "decode_and_process_data": 1,
                    "process_and_decode": 5,
                    "process_and_decode_data": 3,
                    "process_and_decode_data_func": 1,
                    "process_data_and_decode": 7
                },
                "uVar1": {
                    "end_of_string": 25,
                    "end_of_string_addr": 1,
                    "end_of_string_index": 1,
                    "end_of_string_position": 1,
                    "string_end": 2
                }
            },
            "called": [
                "FUN_08000178",
                "FUN_0800325a"
            ],
            "calling": [
                "FUN_08002f14"
            ],
            "code": "\nvoid decode_and_process_data_080032a2(undefined4 input_param,undefined4 string_param,undefined4 unused_param,undefined4 output_param)\n\n{\n  undefined4 end_of_string;\n  \n  end_of_string = find_end_of_string(string_param);\n  process_data_and_decode(input_param,0x71,end_of_string,string_param,output_param);\n  return;\n}\n\n",
            "current_name": "decode_and_process_data_080032a2",
            "entrypoint": "0x080032a2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080032a2": "decode_and_process_data_080032a2",
                "find_end_of_string_08000178": "find_end_of_string",
                "param_1": "input_param",
                "param_2": "string_param",
                "param_3": "unused_param",
                "param_4": "output_param",
                "process_data_and_decode_0800325a": "process_data_and_decode",
                "uVar1": "end_of_string"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080032bc": {
            "additional_data": {
                "0x10": {
                    "flag3": 1
                },
                "0x14": {
                    "flag4": 1
                },
                "0x18": {
                    "flag5": 1
                },
                "0x1c": {
                    "flag6": 1
                },
                "0x20": {
                    "flag7": 1
                },
                "0x24": {
                    "flag8": 1
                },
                "0x28": {
                    "flag9": 1
                },
                "0x2c": {
                    "flag10": 1
                },
                "0x30": {
                    "flag11": 1
                },
                "0x34": {
                    "flag12": 1
                },
                "0x38": {
                    "flag13": 1
                },
                "0x3c": {
                    "flag14": 1
                },
                "0x4": {
                    "value_ptr": 1
                },
                "0x40": {
                    "flag15": 1
                },
                "0x44": {
                    "flag16": 1
                },
                "0x48": {
                    "flag17": 1
                },
                "0x4c": {
                    "flag18": 1
                },
                "0x50": {
                    "flag19": 1
                },
                "0x54": {
                    "flag20": 1
                },
                "0x58": {
                    "flag21": 1
                },
                "0x5c": {
                    "flag22": 1
                },
                "0x60": {
                    "flag23": 1
                },
                "0x64": {
                    "flag24": 1
                },
                "0x8": {
                    "data_ptr": 1
                },
                "0xc": {
                    "flag1": 1
                },
                "0xd": {
                    "flag2": 1
                },
                "FUN_080032bc": {
                    "initialize_control": 1,
                    "initialize_data": 7,
                    "initialize_data_struct": 1,
                    "initialize_data_structure": 3,
                    "initialize_data_structures": 1,
                    "initialize_function": 1,
                    "initialize_memory": 1,
                    "initialize_parameters": 8,
                    "initialize_params": 5,
                    "initialize_structure": 2,
                    "set_params": 1
                },
                "param_1": {
                    "base_address": 1,
                    "control": 1,
                    "data_address": 2,
                    "data_pointer": 5,
                    "data_ptr": 1,
                    "data_struct_ptr": 1,
                    "data_structure": 2,
                    "data_structure_pointer": 1,
                    "function_data": 1,
                    "memory_address": 1,
                    "object_address": 1,
                    "object_pointer": 1,
                    "param_1_ptr": 1,
                    "param_address": 4,
                    "param_list": 1,
                    "param_pointer": 1,
                    "param_ptr": 2,
                    "parameter_address": 1,
                    "structure_address": 1,
                    "structure_pointer": 1,
                    "structure_ptr": 1
                },
                "param_2": {
                    "param2": 1,
                    "param2_value": 1,
                    "param_2_value": 1,
                    "param_value": 16,
                    "value": 12
                },
                "param_3": {
                    "additional_param": 1,
                    "data": 2,
                    "extra_value": 1,
                    "initial_value": 2,
                    "param": 1,
                    "param3": 5,
                    "param3_value": 7,
                    "param_3": 1,
                    "param_3_value": 1,
                    "param_data": 2,
                    "param_flag": 1,
                    "param_value2": 5,
                    "ptr_value": 1,
                    "value_address": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ce0"
            ],
            "code": "\nvoid initialize_data_structure_080032bc(int data_pointer,int param_value,undefined4 param3_value)\n\n{\n  *(int *)(data_pointer + 4) = param_value;\n  *(undefined4 *)(data_pointer + 8) = param3_value;\n  *(undefined *)(data_pointer + 0xc) = 0;\n  *(undefined *)(data_pointer + 0xd) = 0;\n  *(undefined4 *)(data_pointer + 0x10) = 0;\n  *(undefined *)(data_pointer + 0x14) = 0;\n  *(undefined4 *)(data_pointer + 0x18) = 0;\n  *(undefined4 *)(data_pointer + 0x1c) = 0;\n  *(undefined4 *)(data_pointer + 0x20) = 0;\n  *(undefined4 *)(data_pointer + 0x24) = 0;\n  *(undefined4 *)(data_pointer + 0x28) = 0;\n  *(undefined4 *)(data_pointer + 0x2c) = 0;\n  *(undefined4 *)(data_pointer + 0x30) = 0;\n  *(undefined4 *)(data_pointer + 0x34) = 0;\n  *(undefined4 *)(data_pointer + 0x38) = 0;\n  *(undefined4 *)(data_pointer + 0x3c) = 0;\n  *(undefined4 *)(data_pointer + 0x40) = 0;\n  *(undefined4 *)(data_pointer + 0x44) = 0;\n  *(undefined4 *)(data_pointer + 0x48) = 0;\n  *(undefined4 *)(data_pointer + 0x4c) = 0;\n  *(undefined4 *)(data_pointer + 0x50) = 0;\n  *(undefined4 *)(data_pointer + 0x54) = 0;\n  *(undefined4 *)(data_pointer + 0x58) = 0;\n  *(undefined4 *)(data_pointer + 0x5c) = 0;\n  *(undefined4 *)(data_pointer + 0x60) = 0;\n  *(undefined4 *)(data_pointer + 100) = 0;\n  *(undefined4 *)(data_pointer + 0x68) = 0;\n  *(undefined4 *)(data_pointer + 0x6c) = 0;\n  *(undefined4 *)(data_pointer + 0x70) = 0;\n  *(undefined4 *)(data_pointer + 0x74) = 0;\n  *(undefined4 *)(data_pointer + 0x78) = 0;\n  *(bool *)data_pointer = param_value == 0;\n  return;\n}\n\n",
            "current_name": "initialize_data_structure_080032bc",
            "entrypoint": "0x080032bc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080032bc": "initialize_data_structure_080032bc",
                "param_1": "data_pointer",
                "param_2": "param_value",
                "param_3": "param3_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003306": {
            "additional_data": {
                "0x90": {
                    "condition_e": 1,
                    "constant_value5": 1,
                    "value_5": 1
                },
                "0xc0": {
                    "condition_f": 1,
                    "constant_value6": 1,
                    "value_6": 1
                },
                "0xd0": {
                    "condition_a": 1,
                    "constant_value1": 1,
                    "value_1": 1
                },
                "0xe0": {
                    "condition_d": 1,
                    "constant_value4": 1,
                    "value_4": 1
                },
                "0xf4": {
                    "condition_b": 1,
                    "constant_value2": 1,
                    "value_2": 1
                },
                "0xf5": {
                    "condition_c": 1,
                    "constant_value3": 1,
                    "value_3": 1
                },
                "FUN_08003306": {
                    "assign_values": 1,
                    "handle_memory_update": 1,
                    "set_configuration": 1,
                    "set_memory_values": 1,
                    "set_param_value": 1,
                    "set_param_values": 1,
                    "set_parameters": 2,
                    "set_registers": 1,
                    "update_config": 1,
                    "update_data": 7,
                    "update_data_at_offset": 1,
                    "update_data_fields": 2,
                    "update_param_values": 1,
                    "update_parameter": 2,
                    "update_parameters": 4,
                    "update_params": 3,
                    "update_values": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 13,
                    "data": 1,
                    "data_address": 2,
                    "data_ptr": 1,
                    "data_struct": 2,
                    "obj_address": 3,
                    "object_address": 6,
                    "param_base_address": 1,
                    "register_base": 1
                },
                "param_2": {
                    "code": 1,
                    "code_value": 1,
                    "config_code": 1,
                    "config_type": 1,
                    "input_value": 2,
                    "offset": 1,
                    "opcode": 1,
                    "param_code": 2,
                    "param_value": 2,
                    "parameter_code": 1,
                    "parameter_value": 1,
                    "register_value": 1,
                    "value": 15,
                    "value_to_check": 1
                },
                "param_3": {
                    "new_param1": 1,
                    "new_param1_value": 1,
                    "new_value": 1,
                    "new_value1": 19,
                    "parameter1": 1,
                    "value1": 6,
                    "value_1": 1,
                    "value_a": 1
                },
                "param_4": {
                    "new_param2": 1,
                    "new_param2_value": 1,
                    "new_value2": 20,
                    "parameter2": 1,
                    "value2": 6,
                    "value_2": 1,
                    "value_b": 1
                },
                "param_5": {
                    "new_param3_value": 1,
                    "new_value3": 3
                },
                "param_6": {
                    "new_param4_value": 1,
                    "new_value4": 3
                },
                "param_7": {
                    "new_value5": 3
                },
                "param_8": {
                    "new_value6": 3
                },
                "param_9": {
                    "new_value7": 1
                },
                "ptr_1": {
                    "offset58": 1
                },
                "ptr_10": {
                    "offset20": 1
                },
                "ptr_11": {
                    "offset54": 1
                },
                "ptr_12": {
                    "offset24": 1
                },
                "ptr_2": {
                    "offset28": 1
                },
                "ptr_3": {
                    "offset5_c": 1
                },
                "ptr_4": {
                    "offset2_c": 1
                },
                "ptr_5": {
                    "offset60": 1
                },
                "ptr_6": {
                    "offset30": 1
                },
                "ptr_7": {
                    "offset4_c": 1
                },
                "ptr_8": {
                    "offset1_c": 1
                },
                "ptr_9": {
                    "offset50": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ce0"
            ],
            "code": "\nvoid update_data_fields_08003306(int base_address,uint value,undefined4 new_value1,undefined4 new_value2)\n\n{\n  if (value == 0xd0) {\n    *(undefined4 *)(base_address + 0x58) = new_value1;\n    *(undefined4 *)(base_address + 0x28) = new_value2;\n    return;\n  }\n  if (0xd0 < value) {\n    if (value == 0xf4) {\n      *(undefined4 *)(base_address + 0x5c) = new_value1;\n      *(undefined4 *)(base_address + 0x2c) = new_value2;\n      return;\n    }\n    if (value == 0xf5) {\n      *(undefined4 *)(base_address + 0x60) = new_value1;\n      *(undefined4 *)(base_address + 0x30) = new_value2;\n    }\n    else if (value == 0xe0) {\n      *(undefined4 *)(base_address + 0x4c) = new_value1;\n      *(undefined4 *)(base_address + 0x1c) = new_value2;\n      return;\n    }\n    return;\n  }\n  if (value == 0x90) {\n    *(undefined4 *)(base_address + 0x50) = new_value1;\n    *(undefined4 *)(base_address + 0x20) = new_value2;\n    return;\n  }\n  if (value == 0xc0) {\n    *(undefined4 *)(base_address + 0x54) = new_value1;\n    *(undefined4 *)(base_address + 0x24) = new_value2;\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_fields_08003306",
            "entrypoint": "0x08003306",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003306": "update_data_fields_08003306",
                "param_1": "base_address",
                "param_2": "value",
                "param_3": "new_value1",
                "param_4": "new_value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003346": {
            "additional_data": {
                "FUN_08003346": {
                    "set_parameters": 1,
                    "set_parameters_if_equal": 1,
                    "set_params_if_condition_met": 1,
                    "set_values_if_param2_matches": 1,
                    "store_data_if_param2_equals": 1,
                    "update_config": 1,
                    "update_data": 4,
                    "update_data_if_param2_matches": 1,
                    "update_info": 1,
                    "update_parameter_values": 1,
                    "update_parameters": 10,
                    "update_params": 4,
                    "update_params_if_matches": 1,
                    "update_values": 3
                },
                "newValue1": {
                    "param1_value": 1
                },
                "newValue2": {
                    "param2_value": 1
                },
                "param_1": {
                    "base_address": 6,
                    "config": 1,
                    "data": 1,
                    "data_address": 2,
                    "data_pointer": 2,
                    "data_struct": 1,
                    "obj_address": 2,
                    "object_address": 10,
                    "object_ptr": 1,
                    "param_address": 1,
                    "struct_address": 2,
                    "target_address": 2
                },
                "param_2": {
                    "check_value": 4,
                    "comparison_value": 1,
                    "condition": 3,
                    "constant_value": 1,
                    "flag": 3,
                    "input_value": 4,
                    "status": 1,
                    "value": 11,
                    "value_to_check": 1,
                    "value_to_compare": 2
                },
                "param_3": {
                    "data1": 1,
                    "data_to_store1": 1,
                    "new_param1": 5,
                    "new_param3": 1,
                    "new_value1": 18,
                    "new_value_1": 1,
                    "param3_value": 1,
                    "parameter1": 1,
                    "value1": 2
                },
                "param_4": {
                    "data2": 1,
                    "data_to_store2": 1,
                    "new_param2": 5,
                    "new_param4": 1,
                    "new_value2": 18,
                    "new_value_2": 1,
                    "param4_value": 1,
                    "parameter2": 1,
                    "value2": 2
                },
                "param_5": {
                    "input_value2": 1,
                    "new_value3": 1
                },
                "param_6": {
                    "new_value3": 1,
                    "new_value4": 1
                },
                "param_7": {
                    "new_value5": 1,
                    "object_address2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ce0"
            ],
            "code": "\nvoid update_parameters_08003346(int object_address,int value,undefined4 new_value1,undefined4 new_value2)\n\n{\n  if (value == 0x79) {\n    *(undefined4 *)(object_address + 0x70) = new_value1;\n    *(undefined4 *)(object_address + 0x34) = new_value2;\n  }\n  return;\n}\n\n",
            "current_name": "update_parameters_08003346",
            "entrypoint": "0x08003346",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003346": "update_parameters_08003346",
                "param_1": "object_address",
                "param_2": "value",
                "param_3": "new_value1",
                "param_4": "new_value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003350": {
            "additional_data": {
                "0x38": {
                    "offset2": 1
                },
                "0x48": {
                    "offset4": 1
                },
                "0x74": {
                    "offset1": 1
                },
                "0x78": {
                    "offset3": 1
                },
                "0xf9": {
                    "condition1_value": 1
                },
                "0xff": {
                    "condition2_value": 1
                },
                "FUN_08003350": {
                    "assign_param_values": 1,
                    "assign_params": 1,
                    "set_param_values": 2,
                    "set_parameter_value": 1,
                    "set_params_based_on_condition": 1,
                    "update_data": 4,
                    "update_param_values": 1,
                    "update_parameter": 1,
                    "update_parameters": 10,
                    "update_params": 7,
                    "update_settings": 1,
                    "update_values": 1
                },
                "param_1": {
                    "base_address": 8,
                    "data": 1,
                    "data_address": 2,
                    "data_pointer": 1,
                    "data_struct": 1,
                    "obj": 1,
                    "obj_addr": 3,
                    "obj_address": 4,
                    "obj_ptr": 2,
                    "object_address": 3,
                    "object_ptr": 1,
                    "p_data": 1,
                    "structure": 1,
                    "target": 1,
                    "target_address": 1
                },
                "param_2": {
                    "condition": 3,
                    "flag": 4,
                    "input_value": 1,
                    "param_value": 3,
                    "parameter_value": 1,
                    "status_code": 1,
                    "value": 18
                },
                "param_3": {
                    "new_param1": 6,
                    "new_value1": 18,
                    "value1": 6,
                    "value_1": 1
                },
                "param_4": {
                    "new_param2": 6,
                    "new_value2": 18,
                    "value2": 6,
                    "value_2": 1
                },
                "param_5": {
                    "new_value3": 1
                },
                "param_6": {
                    "new_value4": 1
                },
                "param_7": {
                    "new_value5": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ce0"
            ],
            "code": "\nvoid update_parameters_08003350(int base_address,int value,undefined4 new_value1,undefined4 new_value2)\n\n{\n  if (value == 0xf9) {\n    *(undefined4 *)(base_address + 0x74) = new_value1;\n    *(undefined4 *)(base_address + 0x38) = new_value2;\n    return;\n  }\n  if (value != 0xff) {\n    return;\n  }\n  *(undefined4 *)(base_address + 0x78) = new_value1;\n  *(undefined4 *)(base_address + 0x48) = new_value2;\n  return;\n}\n\n",
            "current_name": "update_parameters_08003350",
            "entrypoint": "0x08003350",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003350": "update_parameters_08003350",
                "param_1": "base_address",
                "param_2": "value",
                "param_3": "new_value1",
                "param_4": "new_value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003366": {
            "additional_data": {
                "0x71": {
                    "special_value": 1
                },
                "FUN_08003366": {
                    "set_parameters": 2,
                    "set_values_if_condition_met": 1,
                    "store_data_if_needed": 1,
                    "update_configuration": 1,
                    "update_configurations": 1,
                    "update_data": 4,
                    "update_memory": 1,
                    "update_parameter_values": 1,
                    "update_parameters": 10,
                    "update_parameters_if_equal": 1,
                    "update_params": 3,
                    "update_pointers": 1,
                    "update_values": 3
                },
                "param_1": {
                    "base_address": 12,
                    "config_address": 1,
                    "config_structure": 1,
                    "data_address": 2,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "instance": 1,
                    "memory_address": 1,
                    "object_address": 9,
                    "object_pointer": 1,
                    "record_address": 1
                },
                "param_2": {
                    "comparison_value": 1,
                    "condition": 6,
                    "condition_code": 1,
                    "flag": 2,
                    "flag_value": 1,
                    "input_value": 1,
                    "param_value": 1,
                    "status_code": 1,
                    "value": 15,
                    "value_to_check": 2
                },
                "param_3": {
                    "data1": 1,
                    "new_config": 1,
                    "new_data": 1,
                    "new_param1": 4,
                    "new_param_one": 1,
                    "new_parameter1": 1,
                    "new_value": 1,
                    "new_value1": 16,
                    "param1_value": 1,
                    "pointer_value1": 1,
                    "value1": 1,
                    "value_a": 1,
                    "value_to_update1": 1
                },
                "param_4": {
                    "data2": 1,
                    "extra_data": 1,
                    "new_param2": 4,
                    "new_param_two": 1,
                    "new_parameter2": 1,
                    "new_value2": 16,
                    "other_value": 1,
                    "param2_value": 1,
                    "pointer_value2": 1,
                    "updated_value": 1,
                    "value2": 1,
                    "value_b": 1,
                    "value_to_update2": 1
                },
                "param_5": {
                    "new_pointer_value1": 1,
                    "new_value3": 1
                },
                "param_6": {
                    "new_pointer_value2": 1,
                    "new_value4": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ce0"
            ],
            "code": "\nvoid update_parameters_if_equal_08003366(int base_address,int value,undefined4 new_value1,undefined4 new_value2)\n\n{\n  if (value == 0x71) {\n    *(undefined4 *)(base_address + 0x68) = new_value1;\n    *(undefined4 *)(base_address + 0x40) = new_value2;\n  }\n  return;\n}\n\n",
            "current_name": "update_parameters_if_equal_08003366",
            "entrypoint": "0x08003366",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003366": "update_parameters_if_equal_08003366",
                "param_1": "base_address",
                "param_2": "value",
                "param_3": "new_value1",
                "param_4": "new_value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003370": {
            "additional_data": {
                "FUN_08003370": {
                    "set_function_parameters": 2,
                    "set_param_values": 3,
                    "set_parameters": 18,
                    "set_params": 2,
                    "set_values": 3,
                    "update_parameters": 1,
                    "update_values": 2
                },
                "param_1": {
                    "base_address": 6,
                    "context": 1,
                    "data": 1,
                    "function_handle": 1,
                    "function_pointer": 1,
                    "obj_address": 1,
                    "obj_pointer": 1,
                    "object": 2,
                    "object_address": 13,
                    "object_base_address": 1,
                    "object_pointer": 3
                },
                "param_2": {
                    "param2": 3,
                    "unused": 3,
                    "unused_param": 5,
                    "unused_param1": 1,
                    "unused_param2": 1,
                    "unused_parameter": 3
                },
                "param_3": {
                    "new_value1": 2,
                    "param3_value": 3,
                    "param_value1": 1,
                    "parameter1": 3,
                    "parameter3": 2,
                    "parameter_value1": 2,
                    "value1": 17,
                    "value_address": 1
                },
                "param_4": {
                    "new_value2": 2,
                    "param4_value": 3,
                    "param_value2": 1,
                    "parameter2": 3,
                    "parameter4": 2,
                    "parameter_value2": 2,
                    "value": 1,
                    "value2": 17
                }
            },
            "called": [],
            "calling": [
                "FUN_08002ce0"
            ],
            "code": "\nvoid set_function_parameters_08003370(int object_address,undefined4 unused_param,undefined4 value1,undefined4 value2)\n\n{\n  *(undefined4 *)(object_address + 0x6c) = value1;\n  *(undefined4 *)(object_address + 0x44) = value2;\n  return;\n}\n\n",
            "current_name": "set_function_parameters_08003370",
            "entrypoint": "0x08003370",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003370": "set_function_parameters_08003370",
                "param_1": "object_address",
                "param_2": "unused_param",
                "param_3": "value1",
                "param_4": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003376": {
            "additional_data": {
                "DAT_": {
                    "": 1
                },
                "FUN_08003376": {
                    "copy_data": 1,
                    "copy_data_to_buffer": 1,
                    "copy_data_to_memory": 2,
                    "copy_parameter_to_memory": 1,
                    "copy_to_buffer": 1,
                    "save_data": 1,
                    "store_data": 3,
                    "store_value": 1,
                    "store_value_if_needed": 1,
                    "store_value_in_array": 1,
                    "update_array_with_input": 1,
                    "update_data": 9,
                    "update_data_if_needed": 1,
                    "update_memory": 2,
                    "update_param_value": 1,
                    "update_value": 1,
                    "write_data": 1,
                    "write_data_to_memory": 1,
                    "write_to_memory": 1
                },
                "PTR_": {
                    "": 1
                },
                "bVar1": {
                    "is_greater": 1,
                    "is_greater_than_or_equal_to_length": 1,
                    "is_index_valid": 6,
                    "is_new_data_written": 1,
                    "is_offset_valid": 2,
                    "is_out_of_bounds": 7,
                    "is_out_of_range": 1,
                    "is_updatable": 1,
                    "is_updated": 1,
                    "is_valid": 2,
                    "is_valid_index": 2,
                    "is_value_stored": 1,
                    "is_within_range": 3,
                    "skip_update": 1
                },
                "code": {
                    "callback": 1
                },
                "param_1": {
                    "array": 2,
                    "buffer": 4,
                    "data": 13,
                    "data_container": 2,
                    "data_pointer": 1,
                    "data_struct": 4,
                    "memory": 2,
                    "memory_block": 1,
                    "memory_pointer": 1,
                    "param_array": 1
                },
                "param_2": {
                    "data": 2,
                    "data_value": 1,
                    "new_data": 1,
                    "new_element": 1,
                    "new_value": 6,
                    "value": 19,
                    "value_to_copy": 1
                },
                "param_3": {
                    "current_index": 1,
                    "index": 26,
                    "offset": 2,
                    "size": 1,
                    "target_index": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003474",
                "FUN_080033cc"
            ],
            "code": "\nvoid update_data_if_needed_08003376(undefined *data,undefined value,uint index)\n\n{\n  bool is_out_of_bounds;\n  \n  if (index < *(uint *)(data + 8)) {\n    is_out_of_bounds = false;\n  }\n  else {\n    is_out_of_bounds = true;\n    if (*(callback **)(data + 100) != (callback *)0x0) {\n      *data = 1;\n      (**(callback **)(data + 100))(*(undefined4 *)(data + 0x3c));\n      if (index < *(uint *)(data + 8)) {\n        is_out_of_bounds = false;\n      }\n      else {\n        is_out_of_bounds = true;\n      }\n    }\n  }\n  if (!is_out_of_bounds) {\n    *(undefined *)(*(int *)(data + 4) + index) = value;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_if_needed_08003376",
            "entrypoint": "0x08003376",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003376": "update_data_if_needed_08003376",
                "bVar1": "is_out_of_bounds",
                "code": "callback",
                "param_1": "data",
                "param_2": "value",
                "param_3": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080033a8": {
            "additional_data": {
                "FUN_080033a8": {
                    "byte_shift": 1,
                    "copy_and_combine_bytes": 1,
                    "copy_and_shift": 1,
                    "copy_and_shift_bits": 21,
                    "copy_and_shift_bytes": 4,
                    "process_data": 1,
                    "reverse_and_shift": 1,
                    "reverse_bytes": 1
                },
                "bVar1": {
                    "byte_val": 1,
                    "byte_value": 3,
                    "current_byte": 27
                },
                "iVar2": {
                    "copy_index": 2,
                    "current_index": 6,
                    "dest_index": 6,
                    "destination_index": 9,
                    "dst_index": 2,
                    "index": 1,
                    "output_index": 5
                },
                "param_1": {
                    "arg1": 2,
                    "data": 1,
                    "data_buffer": 1,
                    "data_ptr": 1,
                    "destination": 2,
                    "destination_array": 1,
                    "dst": 1,
                    "initial_value": 1,
                    "input": 1,
                    "input_size": 2,
                    "input_value": 1,
                    "param1": 2,
                    "ptr_dest": 1,
                    "size_of_element": 2,
                    "source": 1,
                    "source_array": 1,
                    "source_data": 1,
                    "src_data": 1,
                    "src_pointer": 1,
                    "start_address": 1,
                    "undefined": 4,
                    "undefined_1": 1,
                    "undefined_var": 1
                },
                "param_2": {
                    "arg2": 1,
                    "array_length": 2,
                    "buffer_size": 1,
                    "byte_count": 2,
                    "count": 2,
                    "data_length": 3,
                    "input_data": 1,
                    "length": 7,
                    "num_bytes": 3,
                    "num_elements": 3,
                    "size": 5,
                    "source_length": 1
                },
                "param_3": {
                    "address": 1,
                    "array": 2,
                    "array_address": 3,
                    "array_ptr": 1,
                    "buffer": 1,
                    "data": 3,
                    "data_address": 2,
                    "data_offset": 1,
                    "dest_address": 1,
                    "dest_pointer": 1,
                    "destination": 1,
                    "input_array": 1,
                    "output_buffer": 1,
                    "output_data": 1,
                    "ptr_src": 1,
                    "source": 2,
                    "source_address": 2,
                    "source_array": 3,
                    "source_buffer": 1,
                    "src": 1,
                    "target_array": 1
                },
                "uVar3": {
                    "byte_index": 2,
                    "current_index": 1,
                    "current_offset": 2,
                    "current_position": 1,
                    "i": 1,
                    "index": 1,
                    "input_index": 3,
                    "loop_counter": 1,
                    "loop_index": 1,
                    "read_index": 1,
                    "source_index": 10,
                    "src_index": 7
                }
            },
            "called": [],
            "calling": [
                "FUN_080033cc"
            ],
            "code": "\nvoid copy_and_shift_bits_080033a8(undefined4 undefined,uint length,int data)\n\n{\n  byte current_byte;\n  int destination_index;\n  uint source_index;\n  \n  destination_index = 0;\n  for (source_index = 0; source_index < length; source_index = source_index + 2) {\n    current_byte = *(byte *)(data + source_index);\n    *(byte *)(data + destination_index) = current_byte;\n    *(byte *)(data + destination_index) = *(char *)(data + source_index + 1) << 7 | current_byte;\n    destination_index = destination_index + 1;\n  }\n  return;\n}\n\n",
            "current_name": "copy_and_shift_bits_080033a8",
            "entrypoint": "0x080033a8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080033a8": "copy_and_shift_bits_080033a8",
                "bVar1": "current_byte",
                "iVar2": "destination_index",
                "param_1": "undefined",
                "param_2": "length",
                "param_3": "data",
                "uVar3": "source_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080033cc": {
            "additional_data": {
                "FUN_080033cc": {
                    "process_character": 1,
                    "process_command": 1,
                    "process_data": 10,
                    "process_input": 19
                },
                "cVar1": {
                    "char_value": 1,
                    "character": 1,
                    "first_char": 27,
                    "first_character": 1,
                    "input_char": 1
                },
                "copy_and_shift_bits_080033a8": {
                    "copy_and_shift_bits": 6,
                    "copy_shift_bits": 2
                },
                "iVar2": {
                    "copy_length": 1,
                    "index": 1,
                    "result": 23,
                    "shift_amount": 1,
                    "shifted_bits": 4,
                    "shifted_result": 1
                },
                "param_1": {
                    "command": 1,
                    "context": 1,
                    "data": 6,
                    "data_holder": 1,
                    "data_ptr": 2,
                    "data_struct": 1,
                    "input": 4,
                    "input_data": 10,
                    "input_data_ptr": 1,
                    "input_params": 2,
                    "input_struct": 1,
                    "input_structure": 1
                },
                "param_2": {
                    "arg1": 5,
                    "arg2": 1,
                    "argument_1": 1,
                    "data_param_1": 1,
                    "param1": 1,
                    "param2": 12,
                    "param_2": 5,
                    "param_a": 3,
                    "parameter2": 1,
                    "var1": 1
                },
                "param_3": {
                    "arg2": 5,
                    "arg3": 1,
                    "argument_2": 1,
                    "data_param_2": 1,
                    "param2": 1,
                    "param3": 11,
                    "param_3": 5,
                    "param_b": 3,
                    "parameter3": 1,
                    "var2": 1
                },
                "param_4": {
                    "arg3": 5,
                    "arg4": 1,
                    "argument_3": 1,
                    "data_param_3": 1,
                    "param3": 1,
                    "param4": 12,
                    "param_4": 5,
                    "param_c": 3,
                    "parameter4": 1,
                    "var3": 1
                },
                "pcVar3": {
                    "char_pointer": 1,
                    "char_ptr": 7,
                    "command_ptr": 1,
                    "current_char": 4,
                    "data_ptr": 1,
                    "first_char_ptr": 1,
                    "input_char_ptr": 2,
                    "input_pointer": 2,
                    "input_ptr": 2,
                    "input_str": 3,
                    "input_string": 1,
                    "pointer": 2,
                    "pointer_to_char": 1,
                    "ptr_char": 1,
                    "ptr_input_char": 1,
                    "string_ptr": 1
                },
                "update_data_if_needed_08003376": {
                    "update_data": 2,
                    "update_data_if_needed": 6
                }
            },
            "called": [
                "FUN_08003376",
                "FUN_080033a8"
            ],
            "calling": [
                "FUN_08003474"
            ],
            "code": "\nvoid process_input_080033cc(int input_data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  char first_char;\n  int result;\n  char *char_ptr;\n  \n  char_ptr = *(char **)(input_data + 4);\n  first_char = *char_ptr;\n  if (first_char == 'q') {\n    if (*(int *)(input_data + 0x68) != 0) {\n      result = copy_and_shift_bits(input_data,*(int *)(input_data + 0x18) + -1,char_ptr + 1,char_ptr,param4);\n      update_data_if_needed(input_data,0,result + 1);\n      (**(code **)(input_data + 0x68))(*(undefined4 *)(input_data + 0x40),*(int *)(input_data + 4) + 1);\n      return;\n    }\n  }\n  else if (first_char == 'y') {\n    if (*(code **)(input_data + 0x70) != (code *)0x0) {\n      if (*(uint *)(input_data + 0x18) < 3) {\n        (**(code **)(input_data + 0x70))(*(undefined4 *)(input_data + 0x34),0,0);\n        return;\n      }\n      result = copy_and_shift_bits(input_data,*(uint *)(input_data + 0x18) - 3,char_ptr + 3,char_ptr,param4);\n      update_data_if_needed(input_data,0,result + 3);\n      result = *(int *)(input_data + 4);\n      (**(code **)(input_data + 0x70))\n                (*(undefined4 *)(input_data + 0x34),*(undefined *)(result + 1),*(undefined *)(result + 2)\n                 ,result + 3);\n      return;\n    }\n  }\n  else if (*(code **)(input_data + 0x6c) != (code *)0x0) {\n    (**(code **)(input_data + 0x6c))\n              (*(undefined4 *)(input_data + 0x44),first_char,*(int *)(input_data + 0x18) + -1,char_ptr + 1);\n  }\n  return;\n}\n\n",
            "current_name": "process_input_080033cc",
            "entrypoint": "0x080033cc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080033cc": "process_input_080033cc",
                "cVar1": "first_char",
                "copy_and_shift_bits_080033a8": "copy_and_shift_bits",
                "iVar2": "result",
                "param_1": "input_data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "pcVar3": "char_ptr",
                "update_data_if_needed_08003376": "update_data_if_needed"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800344a": {
            "additional_data": {
                "0x10": {
                    "initialized_data": 1
                },
                "0x14": {
                    "flag3": 1
                },
                "0x18": {
                    "flag4": 1
                },
                "0x48": {
                    "param_value": 1
                },
                "0x78": {
                    "function_pointer": 1
                },
                "0xc": {
                    "flag1": 1
                },
                "0xd": {
                    "flag2": 1
                },
                "FUN_0800344a": {
                    "clear_function_data": 1,
                    "clear_memory": 4,
                    "initialize_data": 12,
                    "initialize_data_structure": 2,
                    "initialize_function": 2,
                    "initialize_memory": 9,
                    "initialize_params": 1
                },
                "param_1": {
                    "base_address": 2,
                    "data_address": 2,
                    "data_pointer": 3,
                    "data_ptr": 4,
                    "data_struct": 2,
                    "data_structure": 2,
                    "data_structure_ptr": 1,
                    "function_data": 3,
                    "memory_address": 10,
                    "memory_ptr": 1,
                    "param": 1
                },
                "uVar1": {
                    "counter": 1,
                    "i": 2,
                    "index": 26,
                    "loop_counter": 1,
                    "loop_index": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003474"
            ],
            "code": "\nvoid initialize_data_structure_0800344a(int memory_address)\n\n{\n  uint index;\n  \n  *(undefined4 *)(memory_address + 0x10) = 0;\n  *(undefined *)(memory_address + 0xc) = 0;\n  *(undefined *)(memory_address + 0xd) = 0;\n  for (index = 0; index < *(uint *)(memory_address + 8); index = index + 1) {\n    *(undefined *)(*(int *)(memory_address + 4) + index) = 0;\n  }\n  *(undefined *)(memory_address + 0x14) = 0;\n  *(undefined4 *)(memory_address + 0x18) = 0;\n  if (*(code **)(memory_address + 0x78) != (code *)0x0) {\n    (**(code **)(memory_address + 0x78))(*(undefined4 *)(memory_address + 0x48));\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_structure_0800344a",
            "entrypoint": "0x0800344a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800344a": "initialize_data_structure_0800344a",
                "param_1": "memory_address",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003474": {
            "additional_data": {
                "FUN_08003474": {
                    "handle_input": 1,
                    "process_and_update_data": 1,
                    "process_data": 20,
                    "process_function": 1,
                    "process_input": 7,
                    "process_input_data": 1
                },
                "bVar1": {
                    "byte_val": 2,
                    "byte_value": 24,
                    "byte_var": 2,
                    "temp_byte": 3
                },
                "code": {
                    "function_pointer": 2,
                    "function_ptr": 1
                },
                "initialize_data_structure_0800344a": {
                    "initialize_data_structure": 16
                },
                "param_1": {
                    "data": 8,
                    "data_address": 1,
                    "data_pointer": 2,
                    "data_ptr": 17,
                    "function_param": 1,
                    "input_data": 1,
                    "input_ptr": 1
                },
                "param_2": {
                    "data_value": 2,
                    "input": 2,
                    "input_data": 2,
                    "input_param": 2,
                    "input_value": 15,
                    "value": 8
                },
                "process_input_080033cc": {
                    "process_input": 15,
                    "process_input_operations": 1
                },
                "update_data_if_needed_08003376": {
                    "update_data": 4,
                    "update_data_if_needed": 12
                }
            },
            "called": [
                "FUN_08003376",
                "FUN_080033cc",
                "FUN_0800344a"
            ],
            "calling": [
                "FUN_08002ed2"
            ],
            "code": "\nvoid process_and_update_data_08003474(int data_ptr,uint input_value)\n\n{\n  byte byte_value;\n  \n  if (*(char *)(data_ptr + 0x14) != '\\0') {\n    if (input_value != 0xf7) {\n      update_data_if_needed(data_ptr,input_value,*(undefined4 *)(data_ptr + 0x18));\n      *(int *)(data_ptr + 0x18) = *(int *)(data_ptr + 0x18) + 1;\n      return;\n    }\n    *(undefined *)(data_ptr + 0x14) = 0;\n    process_input();\n    return;\n  }\n  if ((*(int *)(data_ptr + 0x10) == 0) || (0x7f < (int)input_value)) {\n    if ((int)input_value < 0xf0) {\n      *(byte *)(data_ptr + 0xd) = (byte)input_value & 0xf;\n      input_value = input_value & 0xf0;\n    }\n    if (input_value == 0xf0) {\n      *(undefined *)(data_ptr + 0x14) = 1;\n      *(undefined4 *)(data_ptr + 0x18) = 0;\n      return;\n    }\n    if (input_value < 0xf1) {\n      if (input_value != 0xc0) {\n        if (input_value < 0xc1) {\n          if (input_value != 0x90) {\n            return;\n          }\n        }\n        else {\n          if (input_value == 0xd0) goto LAB_0800359c;\n          if (input_value != 0xe0) {\n            return;\n          }\n        }\nLAB_08003586:\n        *(undefined4 *)(data_ptr + 0x10) = 2;\n        *(char *)(data_ptr + 0xc) = (char)input_value;\n        return;\n      }\nLAB_0800359c:\n      *(undefined4 *)(data_ptr + 0x10) = 1;\n      *(char *)(data_ptr + 0xc) = (char)input_value;\n      return;\n    }\n    if (input_value != 0xf9) {\n      if (0xf9 < input_value) {\n        if (input_value == 0xff) {\n          initialize_data_structure(data_ptr);\n          return;\n        }\n        return;\n      }\n      if (1 < input_value - 0xf4) {\n        return;\n      }\n      goto LAB_08003586;\n    }\n    if (*(function_pointer **)(data_ptr + 0x74) != (function_pointer *)0x0) {\n      (**(function_pointer **)(data_ptr + 0x74))(*(undefined4 *)(data_ptr + 0x38));\n    }\n  }\n  else {\n    *(int *)(data_ptr + 0x10) = *(int *)(data_ptr + 0x10) + -1;\n    update_data_if_needed();\n    if ((*(int *)(data_ptr + 0x10) == 0) && (byte_value = *(byte *)(data_ptr + 0xc), byte_value != 0)) {\n      if (byte_value == 0xd0) {\n        if (*(function_pointer **)(data_ptr + 0x58) != (function_pointer *)0x0) {\n          (**(function_pointer **)(data_ptr + 0x58))\n                    (*(undefined4 *)(data_ptr + 0x28),*(undefined *)(data_ptr + 0xd),\n                     **(undefined **)(data_ptr + 4));\n        }\n      }\n      else if (byte_value < 0xd1) {\n        if (byte_value == 0x90) {\n          if (*(function_pointer **)(data_ptr + 0x50) != (function_pointer *)0x0) {\n            (**(function_pointer **)(data_ptr + 0x50))\n                      (*(undefined4 *)(data_ptr + 0x20),*(undefined *)(data_ptr + 0xd),\n                       (uint)(*(byte **)(data_ptr + 4))[1] + (uint)**(byte **)(data_ptr + 4) * 0x80);\n          }\n        }\n        else if ((byte_value == 0xc0) && (*(function_pointer **)(data_ptr + 0x54) != (function_pointer *)0x0)) {\n          (**(function_pointer **)(data_ptr + 0x54))\n                    (*(undefined4 *)(data_ptr + 0x24),*(undefined *)(data_ptr + 0xd),\n                     **(undefined **)(data_ptr + 4));\n        }\n      }\n      else if (byte_value == 0xf4) {\n        if (*(function_pointer **)(data_ptr + 0x5c) != (function_pointer *)0x0) {\n          (**(function_pointer **)(data_ptr + 0x5c))\n                    (*(undefined4 *)(data_ptr + 0x2c),(*(undefined **)(data_ptr + 4))[1],\n                     **(undefined **)(data_ptr + 4));\n        }\n      }\n      else if (byte_value == 0xf5) {\n        if (*(function_pointer **)(data_ptr + 0x60) != (function_pointer *)0x0) {\n          (**(function_pointer **)(data_ptr + 0x60))\n                    (*(undefined4 *)(data_ptr + 0x30),(*(undefined **)(data_ptr + 4))[1],\n                     **(undefined **)(data_ptr + 4));\n        }\n      }\n      else if ((byte_value == 0xe0) && (*(function_pointer **)(data_ptr + 0x4c) != (function_pointer *)0x0)) {\n        (**(function_pointer **)(data_ptr + 0x4c))\n                  (*(undefined4 *)(data_ptr + 0x1c),*(undefined *)(data_ptr + 0xd),\n                   (uint)(*(byte **)(data_ptr + 4))[1] + (uint)**(byte **)(data_ptr + 4) * 0x80);\n      }\n      *(undefined *)(data_ptr + 0xc) = 0;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_and_update_data_08003474",
            "entrypoint": "0x08003474",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003474": "process_and_update_data_08003474",
                "bVar1": "byte_value",
                "code": "function_pointer",
                "initialize_data_structure_0800344a": "initialize_data_structure",
                "param_1": "data_ptr",
                "param_2": "input_value",
                "process_input_080033cc": "process_input",
                "update_data_if_needed_08003376": "update_data_if_needed"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080035b8": {
            "additional_data": {
                "FUN_080035b8": {
                    "initialize_and_update_memory": 10,
                    "initialize_and_update_system": 3,
                    "initialize_control_system": 1,
                    "initialize_device": 1,
                    "initialize_memory": 2,
                    "initialize_memory_and_control": 1,
                    "initialize_memory_and_controls": 1,
                    "initialize_memory_and_update": 1,
                    "initialize_memory_and_update_control": 3,
                    "initialize_memory_and_update_control_register": 1,
                    "initialize_memory_and_update_controls": 1,
                    "initialize_system": 6
                },
                "check_operation_status_08005460": {
                    "check_operation_status": 1,
                    "check_system_status": 1
                },
                "get_data_value_08005a1c": {
                    "get_data_value": 4,
                    "retrieve_data_value": 2
                },
                "iVar1": {
                    "operation_status": 3,
                    "result": 7,
                    "status": 12,
                    "status_check_result": 1,
                    "status_code": 1
                },
                "initialize_and_update_memory_with_delay_080058ac": {
                    "initialize_and_update_memory": 2,
                    "initialize_memory_with_delay": 3,
                    "initialize_update_memory_delay": 1
                },
                "initialize_memory_08003fd8": {
                    "initialize_memory": 5,
                    "reset_memory": 1
                },
                "local_10": {
                    "control_register": 1,
                    "control_register_bit": 1,
                    "control_value": 1,
                    "counter": 1,
                    "data_value_2": 1,
                    "flag_4": 3,
                    "index": 2,
                    "initial_value": 2,
                    "loop_index": 1,
                    "param4": 1,
                    "status_4": 1,
                    "temp_var4": 1,
                    "value_2": 1,
                    "value_4": 2
                },
                "local_14": {
                    "constant_2": 1,
                    "count": 3,
                    "data_update_rate": 1,
                    "data_value": 1,
                    "data_value2": 1,
                    "data_value_1": 1,
                    "flag_3": 3,
                    "initial_value": 1,
                    "iteration_limit": 1,
                    "loop_count": 1,
                    "memory_block_size": 1,
                    "memory_values": 1,
                    "min_value": 1,
                    "operation_flags": 1,
                    "operation_type": 1,
                    "param3": 1,
                    "status_3": 1,
                    "temp_var3": 1,
                    "update_flag": 1,
                    "update_frequency": 1,
                    "update_value": 3,
                    "value_1": 1,
                    "value_3": 2
                },
                "local_1c": {
                    "buffer_size": 2,
                    "constant_16": 1,
                    "delay": 2,
                    "flag_2": 3,
                    "initialization_value": 1,
                    "max_value": 1,
                    "memory_address": 1,
                    "memory_block_size": 1,
                    "memory_capacity": 1,
                    "memory_location": 2,
                    "memory_size": 7,
                    "param2": 1,
                    "size": 2,
                    "start_value": 1,
                    "status_2": 1,
                    "temp_var2": 1,
                    "value_2": 2
                },
                "local_20": {
                    "constant_1": 1,
                    "control_register": 2,
                    "control_register_bit": 1,
                    "data_length": 1,
                    "data_value": 2,
                    "flag": 3,
                    "flag_1": 3,
                    "initial_value": 1,
                    "initialize_value": 1,
                    "max_value": 1,
                    "memory_address": 1,
                    "memory_size": 2,
                    "param1": 1,
                    "some_value": 1,
                    "status": 2,
                    "status_1": 1,
                    "status_code": 1,
                    "system_status": 1,
                    "temp_var1": 1,
                    "update_flag": 1,
                    "value_1": 2
                },
                "local_30": {
                    "control_params": 1,
                    "control_register_bit_values": 1,
                    "control_values": 1,
                    "data_values": 3,
                    "flags": 1,
                    "memory_parameters": 1,
                    "memory_values": 1,
                    "operation_flags": 3,
                    "operation_params": 2,
                    "operation_status": 7,
                    "operation_status_array": 1,
                    "parameters": 1,
                    "status_flags": 3,
                    "system_flags": 2,
                    "system_status": 1
                },
                "local_34": {
                    "constant_0": 1,
                    "data_flag": 1,
                    "data_value_5": 1,
                    "delay": 3,
                    "flag": 1,
                    "flag_5": 1,
                    "index": 3,
                    "mem_value_5": 1,
                    "memory_flag5": 1,
                    "memory_index": 1,
                    "memory_offset": 1,
                    "memory_value5": 1,
                    "memory_value_5": 1,
                    "memory_values": 1,
                    "update_flag": 1,
                    "value": 2,
                    "value_4": 1,
                    "value_5": 1
                },
                "local_38": {
                    "constant": 1,
                    "constant_0x400": 1,
                    "control_bit": 1,
                    "data_limit": 1,
                    "data_value_4": 1,
                    "delay": 4,
                    "flag_4": 1,
                    "limit": 2,
                    "mem_value_4": 1,
                    "memory_address": 2,
                    "memory_block_size": 1,
                    "memory_capacity": 1,
                    "memory_flag4": 1,
                    "memory_location": 1,
                    "memory_size": 2,
                    "memory_size_limit": 1,
                    "memory_value4": 1,
                    "memory_value_4": 1,
                    "size": 1,
                    "timeout": 2,
                    "value_3": 1
                },
                "local_3c": {
                    "another_value": 1,
                    "constant_0": 1,
                    "control_register_bit": 1,
                    "counter": 1,
                    "data_mode": 1,
                    "data_offset": 1,
                    "data_type": 1,
                    "data_value_3": 1,
                    "delay_flag": 1,
                    "flag": 2,
                    "flag_3": 1,
                    "index": 1,
                    "initial_value": 1,
                    "initialization_flag": 1,
                    "mem_value_3": 1,
                    "memory_data": 1,
                    "memory_flag3": 1,
                    "memory_value3": 1,
                    "memory_value_3": 1,
                    "offset": 4,
                    "update_count": 1,
                    "value_2": 1,
                    "value_4": 1,
                    "value_offset": 1
                },
                "local_40": {
                    "block_count": 1,
                    "condition": 1,
                    "constant_2": 1,
                    "data_count": 1,
                    "data_offset": 1,
                    "data_size": 2,
                    "data_value_2": 1,
                    "delay": 1,
                    "delay_count": 1,
                    "flag_2": 1,
                    "initial_value_2": 1,
                    "mem_value_2": 1,
                    "memory_flag2": 1,
                    "memory_operation": 1,
                    "memory_update_value": 1,
                    "memory_value2": 1,
                    "memory_value_2": 1,
                    "memory_values": 1,
                    "mode": 1,
                    "operation": 1,
                    "operation_mode": 1,
                    "shift": 1,
                    "size": 1,
                    "some_other_value": 1,
                    "step": 2,
                    "update_interval": 1,
                    "value_1": 1,
                    "value_3": 1
                },
                "local_44": {
                    "control_value": 1,
                    "data": 1,
                    "data_addr": 1,
                    "data_mask": 1,
                    "data_value": 2,
                    "data_value_1": 1,
                    "delay_value": 1,
                    "flag_1": 1,
                    "initial_value_1": 1,
                    "mask": 5,
                    "mem_value_1": 1,
                    "memory_block_length": 1,
                    "memory_block_size": 1,
                    "memory_flag1": 1,
                    "memory_location": 3,
                    "memory_offset": 1,
                    "memory_operation": 1,
                    "memory_value": 2,
                    "memory_value1": 1,
                    "memory_value_1": 1,
                    "update_delay": 1,
                    "value": 1
                },
                "local_4c": {
                    "address": 1,
                    "constant_0x8000": 1,
                    "data": 1,
                    "data_address": 1,
                    "data_limit": 2,
                    "data_mask": 5,
                    "data_size": 1,
                    "data_update_value": 1,
                    "data_value": 3,
                    "data_value_1": 2,
                    "data_value_address": 1,
                    "data_value_constant": 1,
                    "data_value_mask": 1,
                    "data_values2": 1,
                    "mask": 1,
                    "memory_address": 2,
                    "memory_location": 1,
                    "memory_value": 1,
                    "threshold": 1,
                    "update_length": 1,
                    "values_limit": 1
                },
                "local_54": {
                    "data": 2,
                    "data_array": 2,
                    "data_sizes": 1,
                    "data_value_array": 1,
                    "data_value_flag": 1,
                    "data_values": 17,
                    "data_values1": 1,
                    "data_values_array": 1,
                    "memory_values": 1,
                    "update_array": 1,
                    "values_params": 1
                },
                "local_c": {
                    "address": 3,
                    "address_offset": 2,
                    "base_address": 2,
                    "constant_0x380000": 1,
                    "constant_value": 2,
                    "delay": 1,
                    "memory_address": 6,
                    "memory_location": 2,
                    "memory_offset": 1,
                    "memory_value": 2,
                    "param5": 1,
                    "status_5": 1,
                    "value_5": 2
                },
                "new_variable_name_n": {
                    "new_variable_name_n": 1
                },
                "run_infinite_loop_080073e8": {
                    "execute_infinite_loop": 1,
                    "run_infinite_loop": 2
                },
                "uVar2": {
                    "average_data_value": 1,
                    "data_value": 17,
                    "data_value_divided": 2,
                    "data_value_normalized": 1,
                    "divided_value": 1
                },
                "update_control_register_bit_08004024": {
                    "set_control_register_bit": 1,
                    "update_control_register_bit": 5
                },
                "update_data_values_08005aa4": {
                    "update_data_values": 6
                },
                "update_memory_location_08003f30": {
                    "update_memory_location": 6
                }
            },
            "called": [
                "FUN_08005a1c",
                "FUN_080073e8",
                "FUN_08003fd8",
                "FUN_08005aa4",
                "FUN_08004024",
                "FUN_080058ac",
                "FUN_08005460",
                "FUN_08003f30"
            ],
            "calling": [
                "FUN_080072fa"
            ],
            "code": "\nvoid initialize_memory_and_update_control_register_080035b8(void)\n\n{\n  int status;\n  uint data_value;\n  undefined4 data_values [2];\n  undefined4 data_mask;\n  undefined4 mask;\n  undefined4 step;\n  undefined4 offset;\n  undefined4 delay;\n  undefined4 index;\n  undefined4 operation_status [4];\n  undefined4 flag;\n  undefined4 memory_size;\n  undefined4 count;\n  undefined4 flag_4;\n  undefined4 memory_address;\n  \n  operation_status[0] = 2;\n  flag = 1;\n  memory_size = 0x10;\n  count = 2;\n  flag_4 = 0;\n  memory_address = 0x380000;\n  status = check_system_status(operation_status);\n  if (status != 0) {\n    run_infinite_loop(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  mask = 0xf;\n  step = 2;\n  offset = 0;\n  delay = 0x400;\n  index = 0;\n  status = initialize_memory_with_delay(&mask);\n  if (status != 0) {\n    run_infinite_loop(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  data_values[0] = 2;\n  data_mask = 0x8000;\n  status = update_data_values(data_values);\n  if (status != 0) {\n    run_infinite_loop(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  data_value = get_data_value();\n  initialize_memory(data_value / 1000);\n  update_control_register_bit(4);\n  update_memory_location(0xffffffff,0);\n  return;\n}\n\n",
            "current_name": "initialize_memory_and_update_control_register_080035b8",
            "entrypoint": "0x080035b8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080035b8": "initialize_memory_and_update_control_register_080035b8",
                "check_operation_status_08005460": "check_system_status",
                "get_data_value_08005a1c": "get_data_value",
                "iVar1": "status",
                "initialize_and_update_memory_with_delay_080058ac": "initialize_memory_with_delay",
                "initialize_memory_08003fd8": "initialize_memory",
                "local_10": "flag_4",
                "local_14": "count",
                "local_1c": "memory_size",
                "local_20": "flag",
                "local_30": "operation_status",
                "local_34": "index",
                "local_38": "delay",
                "local_3c": "offset",
                "local_40": "step",
                "local_44": "mask",
                "local_4c": "data_mask",
                "local_54": "data_values",
                "local_c": "memory_address",
                "run_infinite_loop_080073e8": "run_infinite_loop",
                "uVar2": "data_value",
                "update_control_register_bit_08004024": "update_control_register_bit",
                "update_data_values_08005aa4": "update_data_values",
                "update_memory_location_08003f30": "update_memory_location"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080036a2": {
            "additional_data": {
                "FUN_080036a2": {
                    "initialize_and_update_system": 9,
                    "initialize_system": 1,
                    "initialize_system_and_execute_update": 1,
                    "initialize_system_and_update": 20
                },
                "initialize_system_and_update_080072fa": {
                    "initialize_and_update": 1,
                    "initialize_and_update_system": 5,
                    "initialize_system": 1,
                    "initialize_system_and_update": 10,
                    "system_update": 1,
                    "update_system": 1
                }
            },
            "called": [
                "FUN_080072fa"
            ],
            "calling": [
                "FUN_08008f0e"
            ],
            "code": "\nvoid initialize_system_and_execute_update_080036a2(void)\n\n{\n  initialize_system_and_update();\n  return;\n}\n\n",
            "current_name": "initialize_system_and_execute_update_080036a2",
            "entrypoint": "0x080036a2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080036a2": "initialize_system_and_execute_update_080036a2",
                "initialize_system_and_update_080072fa": "initialize_system_and_update"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080036ac": {
            "additional_data": {
                "DAT_0800a908": {
                    "character_array": 2,
                    "data": 1
                },
                "FUN_080036ac": {
                    "check_character": 1,
                    "check_character_match": 1,
                    "check_param_validity": 1,
                    "check_value": 1,
                    "find_char_index": 4,
                    "find_character": 2,
                    "find_character_in_data": 1,
                    "find_character_index": 16,
                    "find_index": 1,
                    "find_matching_char": 1,
                    "find_matching_index": 1,
                    "validate_input": 1
                },
                "param_1": {
                    "character": 12,
                    "character_to_find": 1,
                    "input": 2,
                    "input_char": 1,
                    "input_character": 3,
                    "input_data": 1,
                    "input_value": 9,
                    "value": 2
                },
                "uVar1": {
                    "char_index": 1,
                    "character_index": 1,
                    "index": 26,
                    "match": 1,
                    "match_index": 1,
                    "matching_index": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080022f8",
                "FUN_08000ef8",
                "FUN_0800021a",
                "FUN_080005f8",
                "FUN_08001cd0",
                "FUN_08000aec",
                "FUN_08000a64"
            ],
            "code": "\nuint find_character_index_080036ac(int character)\n\n{\n  uint index;\n  \n  if ((uint)(character << 0x18) >> 0x1c < 5) {\n    for (index = 0; (index < 0x3c && (character != (char)(&DAT_0800a908)[index])); index = index + 1)\n    {\n    }\n  }\n  else {\n    index = 0xffffffff;\n  }\n  return index;\n}\n\n",
            "current_name": "find_character_index_080036ac",
            "entrypoint": "0x080036ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080036ac": "find_character_index_080036ac",
                "param_1": "character",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080036d4": {
            "called": [],
            "calling": [
                "FUN_08003724"
            ],
            "code": "\nvoid FUNC_080036d4(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080036d4",
            "entrypoint": "0x080036d4",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080036d4": "FUNC_080036d4"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080036d8": {
            "additional_data": {
                "DAT_2000000c": {
                    "division_factor": 1,
                    "memory_division": 1,
                    "time": 1,
                    "time_unit": 1
                },
                "DAT_20000010": {
                    "current_memory_size": 1,
                    "current_value": 1
                },
                "DAT_20000018": {
                    "memory_size": 2,
                    "total_memory": 2
                },
                "FUN_080036d8": {
                    "initialize_and_set_memory": 1,
                    "initialize_and_set_memory_location": 1,
                    "initialize_and_update_memory": 25,
                    "initialize_memory": 4
                },
                "iVar1": {
                    "error": 1,
                    "error_code": 1,
                    "initialize_result": 1,
                    "memory_init_result": 4,
                    "memory_initialization_result": 4,
                    "memory_initialized": 2,
                    "result": 15,
                    "return_code": 1
                },
                "initialize_memory_08003fd8": {
                    "init_memory": 2,
                    "initialize_memory": 4
                },
                "param_1": {
                    "initial_value": 1,
                    "input": 4,
                    "input_value": 6,
                    "memory_size": 9,
                    "memory_value": 1,
                    "param": 1,
                    "size": 6,
                    "value": 2,
                    "value_1": 1
                },
                "update_memory_location_08003f30": {
                    "update_memory_location": 6
                }
            },
            "called": [
                "FUN_08003fd8",
                "FUN_08003f30"
            ],
            "calling": [
                "FUN_08003724",
                "FUN_080058d2"
            ],
            "code": "\nundefined4 initialize_and_update_memory_080036d8(uint memory_size)\n\n{\n  int result;\n  \n  result = initialize_memory(DAT_20000018 / (1000 / DAT_2000000c));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < memory_size) {\n    return 1;\n  }\n  update_memory_location(0xffffffff,memory_size,0);\n  DAT_20000010 = memory_size;\n  return 0;\n}\n\n",
            "current_name": "initialize_and_update_memory_080036d8",
            "entrypoint": "0x080036d8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080036d8": "initialize_and_update_memory_080036d8",
                "iVar1": "result",
                "initialize_memory_08003fd8": "initialize_memory",
                "param_1": "memory_size",
                "update_memory_location_08003f30": "update_memory_location"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003724": {
            "additional_data": {
                "FUNC_080036d4": {
                    "do_something": 2,
                    "execute_additional_function": 2,
                    "execute_func": 1,
                    "execute_function": 10,
                    "execute_memory_function": 1,
                    "perform_additional_function": 2,
                    "perform_additional_functionality": 1,
                    "perform_additional_operation": 3,
                    "perform_additional_operations": 2,
                    "perform_additional_task": 2,
                    "perform_additional_tasks": 4,
                    "some_other_function": 1
                },
                "FUN_08003724": {
                    "initialize_and_update": 4,
                    "initialize_and_update_data": 1,
                    "initialize_and_update_memory": 1,
                    "initialize_and_update_registers": 1,
                    "initialize_and_update_system": 10,
                    "initialize_data": 1,
                    "initialize_main_system": 1,
                    "initialize_memory_and_update_register": 1,
                    "initialize_memory_and_update_value": 1,
                    "initialize_program": 1,
                    "initialize_registers_and_memory": 1,
                    "initialize_system": 2,
                    "set_flag_and_update_value": 3,
                    "update_and_initialize": 1,
                    "update_memory_and_register": 1,
                    "update_register_and_memory": 1
                },
                "_DAT_40022000": {
                    "data_register": 1,
                    "register_value": 2,
                    "system_status": 1,
                    "system_status_register": 1
                },
                "initialize_and_update_memory_080036d8": {
                    "initialize_and_configure_memory": 1,
                    "initialize_and_set_memory": 1,
                    "initialize_and_update_memory": 29
                },
                "update_value_in_register_08003f0c": {
                    "set_register_value": 3,
                    "update_register_value": 27,
                    "update_value_in_register": 1
                }
            },
            "called": [
                "FUN_08003f0c",
                "FUN_080036d4",
                "FUN_080036d8"
            ],
            "calling": [
                "FUN_080072fa"
            ],
            "code": "\n\n\nundefined4 initialize_and_update_system_08003724(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  update_register_value(3);\n  initialize_and_update_memory(0xf);\n  FUNC_080036d4();\n  return 0;\n}\n\n",
            "current_name": "initialize_and_update_system_08003724",
            "entrypoint": "0x08003724",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003724": "initialize_and_update_system_08003724",
                "initialize_and_update_memory_080036d8": "initialize_and_update_memory",
                "update_value_in_register_08003f0c": "update_register_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003748": {
            "additional_data": {
                "": {
                    "": 1
                },
                "DAT_2000000c": {
                    "constant": 1,
                    "constant_to_add": 1,
                    "data": 1,
                    "increment": 2,
                    "increment_value": 1,
                    "input": 4,
                    "input_number": 1,
                    "input_value": 7,
                    "input_variable": 1,
                    "num": 1,
                    "offset": 1,
                    "parameter": 1,
                    "previous_value": 1,
                    "value": 3,
                    "value_to_add": 2
                },
                "DAT_20000a34": {
                    "accumulated_value": 5,
                    "accumulator": 1,
                    "current_value": 1,
                    "global_sum": 1,
                    "global_variable": 2,
                    "result": 10,
                    "sum": 8
                },
                "FUN_08003748": {
                    "accumulate": 1,
                    "accumulate_values": 3,
                    "add_constant_to_global": 1,
                    "add_data_to_global": 1,
                    "add_data_to_global_variable": 1,
                    "add_data_to_sum": 1,
                    "add_pointer_to_variable": 1,
                    "add_previous_value_to_current": 1,
                    "add_two_numbers": 1,
                    "add_two_values": 1,
                    "add_value_to_global_variable": 1,
                    "add_variable_to_global": 2,
                    "add_variable_to_sum": 1,
                    "addition_and_update": 1,
                    "addition_function": 2,
                    "addition_of_data": 1,
                    "addition_operation": 1,
                    "calculate_sum": 2,
                    "combine_values": 1,
                    "increase_sum": 1,
                    "sum_with_offset": 1,
                    "update_accumulator": 1,
                    "update_data": 2,
                    "update_sum": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08007246"
            ],
            "code": "\nvoid accumulate_values_08003748(void)\n\n{\n  DAT_20000a34 = (uint)DAT_2000000c + DAT_20000a34;\n  return;\n}\n\n",
            "current_name": "accumulate_values_08003748",
            "entrypoint": "0x08003748",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003748": "accumulate_values_08003748"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003760": {
            "additional_data": {
                "DAT_20000a34": {
                    "data": 10,
                    "data_offset": 1,
                    "data_value": 2,
                    "global_variable": 1
                },
                "FUN_08003760": {
                    "get_constant_value": 1,
                    "get_dat_20000a34": 1,
                    "get_data": 11,
                    "get_data_from_memory": 1,
                    "get_data_offset": 1,
                    "get_data_value": 15,
                    "get_global_variable": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080067ac",
                "FUN_08005aa4",
                "FUN_08007f0e",
                "FUN_08005460",
                "FUN_08003a20",
                "FUN_080066e8",
                "FUN_08008500",
                "FUN_080058d2",
                "FUN_08007e74",
                "FUN_08003e20",
                "FUN_0800723c",
                "FUN_08003b8c",
                "FUN_0800376c"
            ],
            "code": "\nundefined4 get_data_value_08003760(void)\n\n{\n  return DAT_20000a34;\n}\n\n",
            "current_name": "get_data_value_08003760",
            "entrypoint": "0x08003760",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003760": "get_data_value_08003760"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800376c": {
            "additional_data": {
                "DAT_20000018": {
                    "constant_value": 1
                },
                "FUN_0800376c": {
                    "calculate_result": 2,
                    "calculate_shift": 3,
                    "calculate_shifted_data": 1,
                    "calculate_shifted_data_value": 1,
                    "calculate_shifted_value": 1,
                    "calculate_shifted_values": 1,
                    "check_and_adjust_value": 1,
                    "check_data": 1,
                    "check_data_validity": 2,
                    "check_data_value": 1,
                    "check_parameter_validity": 1,
                    "perform_data_processing": 1,
                    "process_data": 11,
                    "validate_param": 1
                },
                "calculate_shifted_data_value_08005bb8": {
                    "calculate_shifted_value": 1
                },
                "get_data_value_08003760": {
                    "get_initial_value": 1
                },
                "iVar1": {
                    "data_value": 1,
                    "data_value1": 2,
                    "data_value_before": 1,
                    "initial_data_value": 4,
                    "initial_value": 23
                },
                "iVar3": {
                    "calculation_result": 1,
                    "calculation_value": 2,
                    "calculation_var": 1,
                    "comparison_value": 6,
                    "computation_result": 1,
                    "counter": 1,
                    "data_difference": 1,
                    "data_value": 2,
                    "data_value2": 2,
                    "data_value_after": 1,
                    "increment_value": 1,
                    "loop_counter": 1,
                    "loop_increment": 1,
                    "loop_size": 1,
                    "loop_variable": 1,
                    "offset": 1,
                    "shift_multiplier": 1,
                    "shift_threshold": 1,
                    "temp_value": 3,
                    "temp_variable": 1,
                    "threshold": 1
                },
                "local_1c": {
                    "counter": 28,
                    "current_index": 1,
                    "current_value": 1,
                    "iteration_count": 1
                },
                "param_1": {
                    "data": 4,
                    "data_array": 5,
                    "data_list": 3,
                    "data_pointer": 5,
                    "data_ptr": 5,
                    "input_data": 5,
                    "input_params": 1,
                    "param_array": 1,
                    "parameters": 2
                },
                "param_2": {
                    "array_size": 1,
                    "data_length": 2,
                    "data_size": 2,
                    "length": 3,
                    "limit": 4,
                    "max_iterations": 1,
                    "max_value": 1,
                    "param_value": 1,
                    "shift_threshold": 1,
                    "shift_value": 1,
                    "size": 5,
                    "threshold": 2,
                    "value": 5,
                    "value_limit": 2
                },
                "puVar5": {
                    "current_data": 4,
                    "current_data_element": 1,
                    "current_data_ptr": 2,
                    "data": 2,
                    "data_array": 4,
                    "data_pointer": 5,
                    "data_pointer_copy": 1,
                    "data_pointer_value": 1,
                    "data_ptr": 2,
                    "param_pointer": 1,
                    "param_ptr": 1,
                    "pointer": 2,
                    "pointer_data": 1,
                    "ptr": 2,
                    "ptr_data": 1,
                    "ptr_values": 1
                },
                "uVar2": {
                    "shift_value": 1,
                    "shifted_data_value": 11,
                    "shifted_value": 19
                },
                "uVar4": {
                    "result": 25,
                    "return_code": 1,
                    "return_status": 1,
                    "return_value": 2,
                    "status": 1
                },
                "uVar6": {
                    "adjusted_value": 1,
                    "calculated_value": 7,
                    "calculation_result": 12,
                    "modified_data_value": 1,
                    "modified_size": 1,
                    "modified_value": 2,
                    "multiplied_value": 1,
                    "multiplier": 3,
                    "new_value": 1,
                    "result": 1,
                    "scaled_value": 1
                }
            },
            "called": [
                "FUN_08003760",
                "FUN_08005bb8"
            ],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nundefined4 process_data_0800376c(uint **data_ptr,uint value)\n\n{\n  int initial_value;\n  uint shifted_value;\n  int comparison_value;\n  undefined4 result;\n  uint *data_pointer;\n  uint calculation_result;\n  uint counter;\n  \n  counter = 0;\n  initial_value = get_initial_value();\n  calculation_result = DAT_20000018;\n  data_pointer = *data_ptr;\n  if ((data_pointer[2] & 0x100) == 0) {\n    if (((data_pointer[1] & 0x100) == 0) && ((data_pointer[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**data_ptr & 2) != 0) goto LAB_0800387e;\n      } while ((value == 0xffffffff) ||\n              ((value != 0 && (comparison_value = get_initial_value(), (uint)(comparison_value - initial_value) <= value))));\n      data_ptr[10] = (uint *)((uint)data_ptr[10] | 4);\n      *(undefined *)(data_ptr + 9) = 0;\n      result = 3;\n    }\n    else {\n      shifted_value = calculate_shifted_value(2);\n      data_pointer = *data_ptr;\n      if (((data_pointer[4] & 0x24924924) == 0) && ((data_pointer[3] & 0x924924) == 0)) {\n        if ((data_pointer[4] & 0x12492492) == 0) {\n          if ((data_pointer[3] & 0x492492) == 0) {\n            comparison_value = 0x14;\n          }\n          else {\n            comparison_value = 0x29;\n          }\n        }\n        else {\n          comparison_value = 0x29;\n        }\n      }\n      else if (((data_pointer[4] & 0x12492492) == 0) && ((data_pointer[3] & 0x492492) == 0)) {\n        comparison_value = 0x54;\n      }\n      else if ((data_pointer[4] & 0x249249) == 0) {\n        if ((data_pointer[3] & 0x249249) == 0) {\n          comparison_value = 0x54;\n        }\n        else {\n          comparison_value = 0xfc;\n        }\n      }\n      else {\n        comparison_value = 0xfc;\n      }\n      calculation_result = (calculation_result / shifted_value) * comparison_value;\n      for (; counter <= calculation_result && calculation_result - counter != 0; counter = counter + 1) {\n        if ((value != 0xffffffff) &&\n           ((value == 0 || (comparison_value = get_initial_value(), value < (uint)(comparison_value - initial_value))))) {\n          data_ptr[10] = (uint *)((uint)data_ptr[10] | 4);\n          *(undefined *)(data_ptr + 9) = 0;\n          return 3;\n        }\n      }\nLAB_0800387e:\n      **data_ptr = 0xffffffed;\n      data_ptr[10] = (uint *)((uint)data_ptr[10] | 0x200);\n      if (((*data_ptr)[2] & 0xe0000) == 0xe0000) {\n        if (data_ptr[3] == (uint *)0x0) {\n          data_ptr[10] = (uint *)((uint)data_ptr[10] & 0xfffffeff);\n          if (((uint)data_ptr[10] & 0x1000) == 0) {\n            data_ptr[10] = (uint *)((uint)data_ptr[10] | 1);\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    data_ptr[10] = (uint *)((uint)data_ptr[10] | 0x20);\n    *(undefined *)(data_ptr + 9) = 0;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "current_name": "process_data_0800376c",
            "entrypoint": "0x0800376c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800376c": "process_data_0800376c",
                "calculate_shifted_data_value_08005bb8": "calculate_shifted_value",
                "get_data_value_08003760": "get_initial_value",
                "iVar1": "initial_value",
                "iVar3": "comparison_value",
                "local_1c": "counter",
                "param_1": "data_ptr",
                "param_2": "value",
                "puVar5": "data_pointer",
                "uVar2": "shifted_value",
                "uVar4": "result",
                "uVar6": "calculation_result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080038dc": {
            "additional_data": {
                "0x4c": {
                    "offset": 3
                },
                "FUN_080038dc": {
                    "extract_offset_value": 1,
                    "extract_value_from_offset": 1,
                    "get_address_offset": 1,
                    "get_data_at_offset": 1,
                    "get_memory_value": 1,
                    "get_offset": 3,
                    "get_offset_value": 20,
                    "get_value_from_offset": 2,
                    "return_offset_value": 1
                },
                "address_offset": {
                    "offset_address": 1
                },
                "param_1": {
                    "array": 1,
                    "array_pointer": 1,
                    "data_ptr": 1,
                    "input_array": 3,
                    "input_pointer": 4,
                    "input_ptr": 1,
                    "memory_address": 1,
                    "offset": 1,
                    "offset_pointer": 12,
                    "offset_ptr": 3,
                    "pointer": 1
                },
                "undefined4": {
                    "uint32": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nuint32 get_value_from_offset_080038dc(int *offset_pointer)\n\n{\n  return *(uint32 *)(*offset_pointer + 0x4c);\n}\n\n",
            "current_name": "get_value_from_offset_080038dc",
            "entrypoint": "0x080038dc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080038dc": "get_value_from_offset_080038dc",
                "param_1": "offset_pointer",
                "undefined4": "uint32"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080038e4": {
            "additional_data": {
                "DAT_20000018": {
                    "delay": 1
                },
                "FUN_080038e4": {
                    "set_configuration": 1,
                    "set_parameters": 1,
                    "update_config": 7,
                    "update_configuration": 9,
                    "update_parameters": 2,
                    "update_register_values": 1,
                    "update_registers": 1,
                    "update_settings": 7,
                    "update_values": 2
                },
                "PTR_40012400": {
                    "constant_ptr": 1
                },
                "local_c": {
                    "count": 3,
                    "counter": 16,
                    "delay": 5,
                    "iteration_count": 1,
                    "loop_count": 1,
                    "loop_counter": 5
                },
                "param_1": {
                    "base_address": 1,
                    "config": 6,
                    "config_address": 1,
                    "config_data": 2,
                    "config_ptr": 8,
                    "configuration": 1,
                    "flags": 1,
                    "param_array": 1,
                    "parameters": 1,
                    "register_array": 1,
                    "register_ptr": 1,
                    "settings": 7
                },
                "param_2": {
                    "config_data": 1,
                    "data": 2,
                    "data_array": 1,
                    "data_ptr": 5,
                    "input_data": 1,
                    "update_data": 1,
                    "updates": 1,
                    "value_array": 1,
                    "values": 15,
                    "values_ptr": 3
                },
                "uRam40012408": {
                    "global_flag": 1,
                    "memory_value": 1
                },
                "uVar1": {
                    "result": 18,
                    "return_value": 11,
                    "status": 2
                },
                "uVar2": {
                    "data_array_size": 1,
                    "data_value": 1,
                    "index": 13,
                    "multiplier": 1,
                    "offset": 2,
                    "shift_amount": 1,
                    "shift_value": 2,
                    "temp_value": 2,
                    "value": 7,
                    "value_index": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nundefined4 update_configuration_080038e4(int *config_ptr,uint *values)\n\n{\n  undefined4 result;\n  uint index;\n  int counter;\n  \n  if (*(char *)(config_ptr + 9) == '\\x01') {\n    result = 2;\n  }\n  else {\n    *(undefined *)(config_ptr + 9) = 1;\n    index = values[1];\n    if (index < 7) {\n      index = index * 5 - 5;\n      *(uint *)(*config_ptr + 0x34) =\n           *values << (index & 0xff) | *(uint *)(*config_ptr + 0x34) & ~(0x1f << (index & 0xff));\n    }\n    else if (index < 0xd) {\n      index = index * 5 - 0x23;\n      *(uint *)(*config_ptr + 0x30) =\n           *values << (index & 0xff) | *(uint *)(*config_ptr + 0x30) & ~(0x1f << (index & 0xff));\n    }\n    else {\n      index = index * 5 - 0x41;\n      *(uint *)(*config_ptr + 0x2c) =\n           *values << (index & 0xff) | *(uint *)(*config_ptr + 0x2c) & ~(0x1f << (index & 0xff));\n    }\n    index = *values;\n    if (index < 10) {\n      *(uint *)(*config_ptr + 0x10) =\n           values[2] << (index * 3 & 0xff) |\n           *(uint *)(*config_ptr + 0x10) & ~(7 << (index * 3 & 0xff));\n    }\n    else {\n      index = index * 3 - 0x1e;\n      *(uint *)(*config_ptr + 0xc) =\n           values[2] << (index & 0xff) | *(uint *)(*config_ptr + 0xc) & ~(7 << (index & 0xff));\n    }\n    if (*values - 0x10 < 2) {\n      if (*config_ptr == 0x40012400) {\n        if ((global_flag & 0x800000) == 0) {\n          global_flag = global_flag | 0x800000;\n          if (*values == 0x10) {\n            for (counter = (DAT_20000018 / 1000000) * 10; counter != 0; counter = counter + -1) {\n            }\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        config_ptr[10] = config_ptr[10] | 0x20;\n        result = 1;\n      }\n    }\n    else {\n      result = 0;\n    }\n    *(undefined *)(config_ptr + 9) = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "update_configuration_080038e4",
            "entrypoint": "0x080038e4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080038e4": "update_configuration_080038e4",
                "local_c": "counter",
                "param_1": "config_ptr",
                "param_2": "values",
                "uRam40012408": "global_flag",
                "uVar1": "result",
                "uVar2": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003a1c": {
            "additional_data": {
                "0x28": {
                    "offset": 2,
                    "offset_value": 1,
                    "ptr_offset": 1
                },
                "DAT_": {
                    "": 4,
                    "unchanged": 1
                },
                "FUN_08003a1c": {
                    "extract_value_from_address": 1,
                    "extract_value_from_memory": 1,
                    "get_mem_value": 1,
                    "get_memory_value": 1,
                    "get_offset_value": 10,
                    "get_parameter_value": 2,
                    "get_pointer_from_offset": 2,
                    "get_pointer_offset": 1,
                    "get_pointer_value": 4,
                    "get_ptr_from_offset": 1,
                    "get_return_value": 1,
                    "get_stored_value": 1,
                    "get_value_at_offset": 1,
                    "get_value_from_offset": 4
                },
                "PTR_": {
                    "": 4,
                    "unchanged": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 5,
                    "data_pointer": 1,
                    "index": 1,
                    "input_address": 2,
                    "input_pointer": 1,
                    "input_value": 1,
                    "memory_address": 2,
                    "offset": 9,
                    "offset_pointer": 1,
                    "pointer": 3,
                    "pointer_address": 1,
                    "ptr": 1,
                    "source_address": 1,
                    "value_address": 1
                },
                "param_2": {
                    "offset": 1
                },
                "undefined4": {
                    "uint32": 1
                },
                "var_1": {
                    "offset": 1
                },
                "var_2": {
                    "value": 1
                },
                "var_28": {
                    "offset_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nuint32 get_value_from_offset_08003a1c(int offset)\n\n{\n  return *(uint32 *)(offset + 0x28);\n}\n\n",
            "current_name": "get_value_from_offset_08003a1c",
            "entrypoint": "0x08003a1c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003a1c": "get_value_from_offset_08003a1c",
                "param_1": "offset",
                "undefined4": "uint32"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003a20": {
            "additional_data": {
                "FUN_08003a20": {
                    "activate_data": 1,
                    "check_and_update_data": 2,
                    "check_and_update_flags": 1,
                    "enable_data_processing": 1,
                    "handle_data": 2,
                    "initialize_data": 4,
                    "process_and_modify_data": 1,
                    "process_data": 6,
                    "toggle_data_flag": 1,
                    "toggle_flag_and_process": 1,
                    "update_data": 6,
                    "update_data_and_check_value": 1,
                    "update_data_status": 1,
                    "update_flag_and_values": 1,
                    "validate_and_modify_data": 1
                },
                "FUN_1001a6b4": {
                    "initialize_resource": 1
                },
                "data_offset": {
                    "data_pointer": 1
                },
                "get_data_value_08003760": {
                    "get_data_value": 4
                },
                "iVar1": {
                    "current_data_value": 2,
                    "current_value": 12,
                    "data_value": 7,
                    "data_value1": 3,
                    "old_value": 1,
                    "prev_value": 1,
                    "previous_data_value": 2,
                    "previous_value": 1,
                    "result": 1
                },
                "iVar3": {
                    "array_value": 1,
                    "current_value": 1,
                    "data": 1,
                    "data_address": 1,
                    "data_offset": 1,
                    "data_pointer": 4,
                    "data_ptr": 5,
                    "data_ptr_val": 1,
                    "data_ptr_value": 3,
                    "data_value": 7,
                    "data_value2": 3,
                    "data_value_address": 1,
                    "ptr": 1
                },
                "init_value": {
                    "resource_pointer": 1
                },
                "local_14": {
                    "count": 1,
                    "counter": 5,
                    "delay": 2,
                    "iteration_count": 9,
                    "iterations": 1,
                    "loop_count": 4,
                    "loop_counter": 8
                },
                "loop_counter": {
                    "counter": 1
                },
                "param_1": {
                    "data": 12,
                    "data_arr": 1,
                    "data_array": 1,
                    "data_pointer": 6,
                    "data_ptr": 9,
                    "input_array": 1
                },
                "param_2": {
                    "additional_data": 1,
                    "data_size": 1,
                    "data_value": 4,
                    "extra_data": 1,
                    "flag_value": 1,
                    "param": 4,
                    "param2": 2,
                    "param_value": 2,
                    "value": 14
                },
                "temp_variable": {
                    "temp": 1
                },
                "uVar2": {
                    "result": 13,
                    "return_value": 3,
                    "success": 1
                }
            },
            "called": [
                "FUN_08003760"
            ],
            "calling": [
                "FUN_08003e20",
                "FUN_08003aa0"
            ],
            "code": "\nundefined4 update_data_and_check_value_08003a20(int *data,undefined4 value)\n\n{\n  int current_value;\n  undefined4 result;\n  int data_value;\n  uint iteration_count;\n  \n  data_value = *data;\n  if ((*(uint *)(data_value + 8) & 1) == 0) {\n    *(uint *)(data_value + 8) = *(uint *)(data_value + 8) | 1;\n    for (iteration_count = DAT_20000018 / 1000000; iteration_count != 0; iteration_count = iteration_count - 1) {\n    }\n    data_value = get_data_value(data,value,DAT_20000018 * 0x431bde83);\n    do {\n      if ((*(uint *)(*data + 8) & 1) != 0) {\n        return 0;\n      }\n      current_value = get_data_value();\n    } while ((uint)(current_value - data_value) < 3);\n    data[10] = data[10] | 0x10;\n    data[0xb] = data[0xb] | 1;\n    *(undefined *)(data + 9) = 0;\n    result = 1;\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "update_data_and_check_value_08003a20",
            "entrypoint": "0x08003a20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003a20": "update_data_and_check_value_08003a20",
                "get_data_value_08003760": "get_data_value",
                "iVar1": "current_value",
                "iVar3": "data_value",
                "local_14": "iteration_count",
                "param_1": "data",
                "param_2": "value",
                "uVar2": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003aa0": {
            "additional_data": {
                "0x100": {
                    "flag1": 1
                },
                "0x1000": {
                    "flag4": 1
                },
                "0x100000": {
                    "flag2": 1
                },
                "0x1000U": {
                    "mask3": 1
                },
                "0x400": {
                    "flag3": 1
                },
                "0x40012800": {
                    "constant1": 1,
                    "constant_value": 1
                },
                "0x500000": {
                    "flag5": 1
                },
                "0xb": {
                    "index": 1
                },
                "0xe0000": {
                    "mask5": 1
                },
                "0xf0000": {
                    "mask1": 1
                },
                "0xffefffff": {
                    "mask2": 1
                },
                "0xfffffff9": {
                    "mask4": 1
                },
                "0xfffffffd": {
                    "constant3": 1
                },
                "1": {
                    "flag": 1
                },
                "DAT_40012404": {
                    "constant_value": 1
                },
                "FUN_08003aa0": {
                    "check_and_update_value": 3,
                    "initialize_and_check_value": 1,
                    "process_data": 1,
                    "update_and_check_data": 1,
                    "update_and_check_value": 15,
                    "update_check_value": 1,
                    "update_configuration": 1,
                    "update_data_and_check_value": 6,
                    "update_flags": 1
                },
                "PTR_40012800": {
                    "constant_ptr": 1
                },
                "PTR__40012800": {
                    "pointer_data": 1
                },
                "_DAT_40012404": {
                    "constant2": 1,
                    "data": 3,
                    "data_constant": 1,
                    "data_register": 1,
                    "data_value": 5,
                    "other_data": 1
                },
                "iVar1": {
                    "result": 26,
                    "return_value": 2,
                    "status": 1,
                    "update_result": 2
                },
                "iVar3": {
                    "another_variable": 2,
                    "base_addr": 1,
                    "base_address": 1,
                    "data": 1,
                    "temp": 2,
                    "temp_var": 2,
                    "value": 20,
                    "value_to_update": 1,
                    "var": 1
                },
                "param_1": {
                    "array": 2,
                    "config_data": 1,
                    "data": 10,
                    "data_array": 1,
                    "data_ptr": 2,
                    "flags": 1,
                    "input_array": 1,
                    "param": 2,
                    "param_list": 1,
                    "parameter": 1,
                    "parameter_array": 1,
                    "parameters": 8
                },
                "puVar2": {
                    "data_pointer": 1,
                    "data_ptr": 4,
                    "pointer": 9,
                    "pointer_var": 2,
                    "ptr": 14,
                    "ptr_var": 1
                },
                "update_data_and_check_value_08003a20": {
                    "check_data": 1,
                    "perform_update_and_check_value": 1,
                    "update_and_check": 1,
                    "update_and_check_data": 1,
                    "update_data_and_check_value": 6
                }
            },
            "called": [
                "FUN_08003a20"
            ],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\n\n\nint update_data_and_check_value_08003aa0(int *data)\n\n{\n  int result;\n  undefined4 *ptr;\n  int value;\n  \n  if (*(char *)(data + 9) != '\\x01') {\n    *(undefined *)(data + 9) = 1;\n    result = update_data_and_check_value_08003aa0();\n    if (result == 0) {\n      data[10] = data[10] & 0xfffffcfeU | 0x100;\n      ptr = (undefined4 *)*data;\n      if ((ptr == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        data[10] = data[10] | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          data[10] = data[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        data[10] = data[10] & 0xffefffff;\n        if ((ptr[1] & 0x400) != 0) {\n          data[10] = data[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((data[10] & mask3) == 0) {\n        data[0xb] = 0;\n      }\n      else {\n        data[0xb] = data[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(data + 9) = 0;\n      *ptr = 0xfffffffd;\n      value = *data;\n      if (((*(uint *)(value + 8) & 0xe0000) == 0xe0000) &&\n         ((value != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(data + 9) = 0;\n    }\n    return result;\n  }\n  return 2;\n}\n\n",
            "current_name": "update_data_and_check_value_08003aa0",
            "entrypoint": "0x08003aa0",
            "imported": false,
            "improved": true,
            "renaming": {
                "0x1000U": "mask3",
                "FUN_08003aa0": "update_data_and_check_value_08003aa0",
                "iVar1": "result",
                "iVar3": "value",
                "param_1": "data",
                "puVar2": "ptr",
                "update_data_and_check_value_08003a20": "update_data_and_check_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003b8c": {
            "additional_data": {
                "FUN_08003b8c": {
                    "check_and_modify_data": 1,
                    "check_and_update_data": 5,
                    "check_and_update_flags": 2,
                    "check_and_update_values": 1,
                    "reset_data_value": 1,
                    "reverse_and_update_value": 1,
                    "reverse_and_validate_data": 1,
                    "reverse_data": 1,
                    "toggle_data_flag": 1,
                    "update_data": 4,
                    "update_data_and_check": 1,
                    "update_data_and_flags": 1,
                    "update_data_flag": 1,
                    "update_data_flags": 1,
                    "update_data_value": 4,
                    "update_data_values": 2,
                    "update_flag_values": 1,
                    "update_flags_and_values": 2
                },
                "get_data_value_08003760": {
                    "get_random_value": 1
                },
                "iVar1": {
                    "current_data_value": 6,
                    "current_value": 8,
                    "data_value1": 4,
                    "first_data_value": 1,
                    "new_data_value": 1,
                    "new_value": 1,
                    "prev_data_value": 2,
                    "previous_data_value": 3,
                    "random_value1": 1,
                    "value1": 3,
                    "value2": 1
                },
                "iVar2": {
                    "current_data_value": 5,
                    "data_value": 2,
                    "data_value2": 4,
                    "first_value": 1,
                    "initial_data_value": 6,
                    "initial_value": 5,
                    "original_data_value": 1,
                    "original_value": 3,
                    "value1": 1,
                    "value2": 3
                },
                "param_1": {
                    "data": 7,
                    "data_array": 3,
                    "data_pointer": 11,
                    "data_ptr": 7,
                    "data_value_ptr": 1,
                    "data_values": 1,
                    "input_array": 1
                }
            },
            "called": [
                "FUN_08003760"
            ],
            "calling": [
                "FUN_08003de4",
                "FUN_08003bd8",
                "FUN_08003e20",
                "FUN_08003ce8"
            ],
            "code": "\nundefined4 update_data_and_check_08003b8c(int *data_pointer)\n\n{\n  int current_value;\n  int initial_data_value;\n  \n  initial_data_value = *data_pointer;\n  if ((*(uint *)(initial_data_value + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(initial_data_value + 8) = *(uint *)(initial_data_value + 8) & 0xfffffffe;\n  initial_data_value = get_random_value();\n  do {\n    if ((*(uint *)(*data_pointer + 8) & 1) == 0) {\n      return 0;\n    }\n    current_value = get_random_value();\n  } while ((uint)(current_value - initial_data_value) < 3);\n  data_pointer[10] = data_pointer[10] | 0x10;\n  data_pointer[0xb] = data_pointer[0xb] | 1;\n  return 1;\n}\n\n",
            "current_name": "update_data_and_check_08003b8c",
            "entrypoint": "0x08003b8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003b8c": "update_data_and_check_08003b8c",
                "get_data_value_08003760": "get_random_value",
                "iVar1": "current_value",
                "iVar2": "initial_data_value",
                "param_1": "data_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003bd8": {
            "additional_data": {
                "FUN_08003bd8": {
                    "check_and_update_data": 2,
                    "initialize_data": 1,
                    "process_data": 1,
                    "update_and_validate_data": 1,
                    "update_data": 1,
                    "update_data_and_check": 5,
                    "update_data_and_check_flags": 1,
                    "update_data_and_flags": 2,
                    "update_flags_and_registers": 4,
                    "update_function": 1,
                    "update_parameters": 1,
                    "update_registers": 2,
                    "update_registers_and_flags": 6,
                    "update_status": 1,
                    "validate_and_set_data": 1,
                    "verify_data_integrity": 1
                },
                "iVar1": {
                    "check_result": 2,
                    "result": 26,
                    "return_value": 1,
                    "update_result": 1
                },
                "param_1": {
                    "array": 2,
                    "data": 18,
                    "data_array": 1,
                    "data_ptr": 1,
                    "input_array": 1,
                    "param": 1,
                    "param_array": 1,
                    "parameters": 3,
                    "params": 2,
                    "status": 1
                },
                "uVar2": {
                    "bitwise_or": 1,
                    "combined_flags": 4,
                    "combined_value": 2,
                    "combined_values": 3,
                    "combined_vars1": 1,
                    "computed_value_1": 1,
                    "flag1": 3,
                    "flags": 2,
                    "flags1": 1,
                    "register_flags": 2,
                    "uint_var1": 1,
                    "value1": 2,
                    "value_1": 2,
                    "var1": 5
                },
                "uVar3": {
                    "additional_flags": 1,
                    "combined_data": 2,
                    "combined_vars2": 1,
                    "computed_value_2": 1,
                    "conditional_value": 2,
                    "data_flag": 1,
                    "data_mask": 1,
                    "flag2": 3,
                    "flags": 1,
                    "flags2": 1,
                    "flags_mask": 1,
                    "mask": 1,
                    "register_data": 1,
                    "register_flags_temp": 1,
                    "size_value": 1,
                    "temp_value": 1,
                    "uint_var2": 1,
                    "value2": 2,
                    "value_2": 2,
                    "var2": 5
                },
                "update_data_and_check_08003b8c": {
                    "update_data_and_check": 5
                },
                "update_registers_and_flags_08006ca8": {
                    "update_registers_and_flags": 5,
                    "update_registers_and_flags_helper": 1
                }
            },
            "called": [
                "FUN_08006ca8",
                "FUN_08003b8c"
            ],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nundefined4 update_flags_and_registers_08003bd8(int *data)\n\n{\n  int result;\n  uint var1;\n  uint var2;\n  \n  if (data == (int *)0x0) {\n    return 1;\n  }\n  if (data[10] == 0) {\n    data[0xb] = 0;\n    *(undefined *)(data + 9) = 0;\n    update_registers_and_flags();\n  }\n  result = update_data_and_check(data);\n  if (((data[10] & 0x10U) == 0) && (result == 0)) {\n    data[10] = data[10] & 0xffffeefdU | 2;\n    var1 = data[1] | data[7] | data[3] << 1;\n    if (data[2] == 0x100) {\n      var2 = 0x100;\n    }\n    else {\n      var2 = 0;\n      if (data[2] == 1) {\n        var2 = 0x100;\n      }\n    }\n    if (data[5] == 1) {\n      if (data[3] == 0) {\n        var2 = var2 | (data[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        data[10] = data[10] | 0x20;\n        data[0xb] = data[0xb] | 1;\n      }\n    }\n    *(uint *)(*data + 4) = var2 | *(uint *)(*data + 4) & 0xffff16ff;\n    *(uint *)(*data + 8) = *(uint *)(*data + 8) & 0xffe1f7fd | var1;\n    if ((data[2] == 0x100) || (data[2] == 1)) {\n      var2 = (data[4] + -1) * 0x100000;\n    }\n    else {\n      var2 = 0;\n    }\n    *(uint *)(*data + 0x2c) = var2 | *(uint *)(*data + 0x2c) & 0xff0fffff;\n    if (var1 != (*(uint *)(*data + 8) & 0xff1f0efe)) {\n      data[10] = data[10] & 0xffffffedU | 0x10;\n      data[0xb] = data[0xb] | 1;\n      return 1;\n    }\n    data[0xb] = 0;\n    data[10] = data[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  data[10] = data[10] | 0x10;\n  return 1;\n}\n\n",
            "current_name": "update_flags_and_registers_08003bd8",
            "entrypoint": "0x08003bd8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003bd8": "update_flags_and_registers_08003bd8",
                "iVar1": "result",
                "param_1": "data",
                "uVar2": "var1",
                "uVar3": "var2",
                "update_data_and_check_08003b8c": "update_data_and_check",
                "update_registers_and_flags_08006ca8": "update_registers_and_flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003ce8": {
            "additional_data": {
                "FUN_08003ce8": {
                    "initialize_and_check_data": 1,
                    "initialize_data": 1,
                    "mask_and_update_data": 1,
                    "process_data": 1,
                    "update_and_check_data": 6,
                    "update_data": 4,
                    "update_data_and_check": 12,
                    "update_data_and_check_flags": 1,
                    "update_data_and_check_permissions": 1,
                    "update_flags_and_clear_data": 1,
                    "update_function": 1
                },
                "iVar1": {
                    "result": 29,
                    "return_value": 2
                },
                "param_1": {
                    "data": 16,
                    "data_array": 3,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "data_struct": 1,
                    "input_array": 1,
                    "input_data": 2,
                    "param": 1,
                    "param_array": 1,
                    "parameter": 1,
                    "parameters": 1
                },
                "uint": {
                    "type_2": 1
                },
                "undefined4": {
                    "type_1": 1,
                    "uint": 2
                },
                "update_data_and_check_08003b8c": {
                    "check_data_updated": 1,
                    "update_and_check_data": 1,
                    "update_data_and_check": 4,
                    "update_flags": 4,
                    "update_flags_and_check": 1,
                    "update_flags_based_on_data": 1
                },
                "update_flags_based_on_param_value_08006d24": {
                    "update_flags_based_on_param_value": 5,
                    "update_flags_based_on_value": 7
                }
            },
            "called": [
                "FUN_08003b8c",
                "FUN_08006d24"
            ],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nint update_data_and_check_permissions_08003ce8(int *data)\n\n{\n  int result;\n  \n  if (data == (int *)0x0) {\n    result = 1;\n  }\n  else {\n    data[10] = data[10] | 2;\n    result = update_flags();\n    if (result == 0) {\n      *(uint *)*data = 0xffffffe0;\n      *(type_2 *)(*data + 4) = *(type_2 *)(*data + 4) & 0xff3f0000;\n      *(type_2 *)(*data + 8) = *(type_2 *)(*data + 8) & 0xff0106f0;\n      *(type_2 *)(*data + 0xc) = *(type_2 *)(*data + 0xc) & 0xff000000;\n      *(type_2 *)(*data + 0x10) = *(type_2 *)(*data + 0x10) & 0xc0000000;\n      *(type_2 *)(*data + 0x14) = *(type_2 *)(*data + 0x14) & 0xfffff000;\n      *(type_2 *)(*data + 0x18) = *(type_2 *)(*data + 0x18) & 0xfffff000;\n      *(type_2 *)(*data + 0x1c) = *(type_2 *)(*data + 0x1c) & 0xfffff000;\n      *(type_2 *)(*data + 0x20) = *(type_2 *)(*data + 0x20) & 0xfffff000;\n      *(type_2 *)(*data + 0x24) = *(type_2 *)(*data + 0x24) & 0xfffff000;\n      *(type_2 *)(*data + 0x28) = *(type_2 *)(*data + 0x28) & 0xfffff000;\n      *(type_2 *)(*data + 0x2c) = *(type_2 *)(*data + 0x2c) & 0xff000000;\n      *(type_2 *)(*data + 0x2c) = *(type_2 *)(*data + 0x2c) & 0xff000000;\n      *(type_2 *)(*data + 0x30) = *(type_2 *)(*data + 0x30) & 0xc0000000;\n      *(type_2 *)(*data + 0x34) = *(type_2 *)(*data + 0x34) & 0xc0000000;\n      *(type_2 *)(*data + 0x38) = *(type_2 *)(*data + 0x38) & 0xffc00000;\n      *(type_2 *)(*data + 0x38) = *(type_2 *)(*data + 0x38) & 0xffc00000;\n      update_flags_based_on_value(data);\n      data[0xb] = 0;\n      data[10] = 0;\n    }\n    *(undefined *)(data + 9) = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "update_data_and_check_permissions_08003ce8",
            "entrypoint": "0x08003ce8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003ce8": "update_data_and_check_permissions_08003ce8",
                "iVar1": "result",
                "param_1": "data",
                "uint": "type_2",
                "undefined4": "uint",
                "update_data_and_check_08003b8c": "update_flags",
                "update_flags_based_on_param_value_08006d24": "update_flags_based_on_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003de4": {
            "additional_data": {
                "FUN_08003de4": {
                    "check_and_update_data": 17,
                    "update_and_check": 1,
                    "update_and_check_data": 1,
                    "update_and_check_data_state": 1,
                    "update_data_and_check": 9,
                    "update_data_and_check_status": 1,
                    "update_status": 1
                },
                "iVar1": {
                    "result": 27,
                    "result_code": 1,
                    "status": 1,
                    "update_result": 1
                },
                "param_1": {
                    "data": 10,
                    "data_address": 3,
                    "data_param": 1,
                    "data_pointer": 4,
                    "data_ptr": 4,
                    "data_state": 1,
                    "input": 5,
                    "input_data": 1,
                    "param": 1,
                    "status_ptr": 1
                },
                "update_data_and_check_08003b8c": {
                    "update_and_check_data": 1,
                    "update_data_and_check": 3
                }
            },
            "called": [
                "FUN_08003b8c"
            ],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nint update_and_check_data_state_08003de4(int data)\n\n{\n  int result;\n  \n  if (*(char *)(data + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(data + 0x24) = 1;\n  result = update_data_and_check();\n  if (result == 0) {\n    *(uint *)(data + 0x28) = *(uint *)(data + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(data + 0x24) = 0;\n  return result;\n}\n\n",
            "current_name": "update_and_check_data_state_08003de4",
            "entrypoint": "0x08003de4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003de4": "update_and_check_data_state_08003de4",
                "iVar1": "result",
                "param_1": "data",
                "update_data_and_check_08003b8c": "update_data_and_check"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003e20": {
            "additional_data": {
                "FUN_08003e20": {
                    "check_and_update_data": 16,
                    "check_and_update_data_validity": 1,
                    "check_and_update_data_value": 1,
                    "check_data": 1,
                    "check_data_and_update": 2,
                    "perform_data_update_checks": 1,
                    "process_data": 3,
                    "update_and_check_data": 1,
                    "update_check_value": 1,
                    "update_data_and_check": 2,
                    "update_data_check": 1,
                    "verify_update_and_shift_data": 1
                },
                "calculate_shifted_data_value_08005bb8": {
                    "calculate_shifted_data_value": 1
                },
                "get_data_value_08003760": {
                    "get_data_value": 1
                },
                "iVar2": {
                    "check_result": 1,
                    "result": 18,
                    "update_result": 11,
                    "update_status": 1
                },
                "iVar4": {
                    "data_value1": 3,
                    "data_value_3": 1,
                    "init_value": 1,
                    "initial_data_value": 4,
                    "initial_value": 12,
                    "old_value": 1,
                    "prev_value": 1,
                    "previous_value": 4,
                    "start_value": 1,
                    "starting_value": 1,
                    "value1": 2
                },
                "iVar5": {
                    "current_data_value": 4,
                    "current_value": 19,
                    "data_value2": 3,
                    "new_value": 2,
                    "temp_value": 1,
                    "value2": 2
                },
                "local_14": {
                    "division_result": 1,
                    "iteration": 1,
                    "iteration_count": 6,
                    "loop_count": 1,
                    "loop_counter": 9,
                    "num_iterations": 1,
                    "shift_count": 1,
                    "shifted_data": 1,
                    "shifted_data_count": 2,
                    "shifted_data_iterations": 1,
                    "shifted_value": 6,
                    "shifts": 1
                },
                "param_1": {
                    "data": 20,
                    "data_array": 8,
                    "data_pointer": 1,
                    "input_array": 1,
                    "input_data": 1
                },
                "uVar1": {
                    "constant": 1,
                    "constant1": 1,
                    "constant_value": 1,
                    "constant_value_1": 1,
                    "data_size": 1,
                    "data_value1": 1,
                    "data_value_1": 1,
                    "dividend": 4,
                    "division_result": 2,
                    "divisor": 1,
                    "shift_dividend": 1,
                    "shifted_data": 6,
                    "shifted_data_value": 5,
                    "shifted_data_value1": 1,
                    "shifted_value": 2
                },
                "uVar3": {
                    "calculated_value": 1,
                    "constant2": 1,
                    "data_value": 3,
                    "data_value2": 1,
                    "data_value_2": 1,
                    "divisor": 8,
                    "shift_divisor": 1,
                    "shifted_data": 1,
                    "shifted_data_value": 7,
                    "shifted_data_value2": 1,
                    "shifted_data_value_calc": 1,
                    "shifted_value": 3
                },
                "update_data_and_check_08003b8c": {
                    "update_and_check_data1": 1
                },
                "update_data_and_check_value_08003a20": {
                    "update_and_check_data2": 1
                }
            },
            "called": [
                "FUN_08003b8c",
                "FUN_08003760",
                "FUN_08003a20",
                "FUN_08005bb8"
            ],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nint check_and_update_data_validity_08003e20(int *data)\n\n{\n  uint shifted_data;\n  int result;\n  uint divisor;\n  int initial_value;\n  int current_value;\n  int loop_counter;\n  \n  if (*(char *)(data + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(data + 9) = 1;\n  result = update_and_check_data1();\n  if (result == 0) {\n    data[10] = data[10] & 0xffffeefdU | 2;\n    shifted_data = DAT_20000018;\n    divisor = calculate_shifted_data_value(2);\n    for (loop_counter = shifted_data / divisor << 1; loop_counter != 0; loop_counter = loop_counter + -1) {\n    }\n    update_and_check_data2(data);\n    *(uint *)(*data + 8) = *(uint *)(*data + 8) | 8;\n    initial_value = get_data_value();\n    while (current_value = *data, (*(uint *)(current_value + 8) & 8) != 0) {\n      current_value = get_data_value();\n      if (10 < (uint)(current_value - initial_value)) {\n        data[10] = data[10] & 0xffffffedU | 0x10;\n        *(undefined *)(data + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(current_value + 8) = *(uint *)(current_value + 8) | 4;\n    initial_value = get_data_value();\n    while ((*(uint *)(*data + 8) & 4) != 0) {\n      current_value = get_data_value();\n      if (10 < (uint)(current_value - initial_value)) {\n        data[10] = data[10] & 0xffffffedU | 0x10;\n        *(undefined *)(data + 9) = 0;\n        return 1;\n      }\n    }\n    data[10] = data[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(data + 9) = 0;\n  return result;\n}\n\n",
            "current_name": "check_and_update_data_validity_08003e20",
            "entrypoint": "0x08003e20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003e20": "check_and_update_data_validity_08003e20",
                "calculate_shifted_data_value_08005bb8": "calculate_shifted_data_value",
                "get_data_value_08003760": "get_data_value",
                "iVar2": "result",
                "iVar4": "initial_value",
                "iVar5": "current_value",
                "local_14": "loop_counter",
                "param_1": "data",
                "uVar1": "shifted_data",
                "uVar3": "divisor",
                "update_data_and_check_08003b8c": "update_and_check_data1",
                "update_data_and_check_value_08003a20": "update_and_check_data2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f0c": {
            "additional_data": {
                "FUN_08003f0c": {
                    "clear_bits_and_set_constant": 1,
                    "shift_and_update_bits": 1,
                    "update_bits": 1,
                    "update_config": 1,
                    "update_config_register": 1,
                    "update_config_value": 2,
                    "update_configuration": 3,
                    "update_control_register": 2,
                    "update_data": 2,
                    "update_data_bits": 1,
                    "update_e000ed0c_value": 1,
                    "update_flag_bits": 1,
                    "update_flag_value": 3,
                    "update_flags": 2,
                    "update_register_value": 7,
                    "update_settings": 1,
                    "update_value_in_register": 1
                },
                "_DAT_e000ed0c": {
                    "config_register": 1,
                    "config_value": 3,
                    "configuration_register": 1,
                    "control_register": 2,
                    "current_configuration": 1,
                    "current_value": 1,
                    "data_register": 1,
                    "data_value": 1,
                    "e000ed0c_value": 1,
                    "flag": 1,
                    "flag_value": 2,
                    "flags": 1,
                    "masked_value": 1,
                    "old_value": 1,
                    "original_config": 1,
                    "register_value": 9
                },
                "newConfig": {
                    "updated_config": 1
                },
                "param_1": {
                    "config": 1,
                    "config_value": 2,
                    "data": 1,
                    "flags": 1,
                    "input": 2,
                    "input_flag": 1,
                    "input_value": 15,
                    "new_value": 5,
                    "settings": 1,
                    "value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08003724",
                "FUN_08008f0e"
            ],
            "code": "\n\n\nvoid update_value_in_register_08003f0c(uint input_value)\n\n{\n  _DAT_e000ed0c = (input_value & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "current_name": "update_value_in_register_08003f0c",
            "entrypoint": "0x08003f0c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003f0c": "update_value_in_register_08003f0c",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f30": {
            "additional_data": {
                "0xe000e400": {
                    "other_address": 1
                },
                "0xe000ed14": {
                    "address_offset": 1
                },
                "3": {
                    "max_offset_difference": 1
                },
                "4": {
                    "default_offset_difference": 1
                },
                "FUN_08003f30": {
                    "apply_bit_mask": 1,
                    "apply_bitwise_operation": 1,
                    "set_bits_at_position": 1,
                    "set_bits_in_register": 1,
                    "store_bits": 1,
                    "store_results": 1,
                    "update_char_at_index": 1,
                    "update_char_pos": 1,
                    "update_character": 3,
                    "update_character_data": 2,
                    "update_character_value": 3,
                    "update_data": 3,
                    "update_memory": 5,
                    "update_memory_location": 2,
                    "update_register": 1,
                    "update_register_value": 2,
                    "write_data_to_memory": 1,
                    "write_to_memory": 1
                },
                "char": {
                    "byte": 1,
                    "char_value": 1,
                    "data_char": 1
                },
                "param_1": {
                    "address": 10,
                    "address_offset": 1,
                    "base_address": 1,
                    "char_pos": 1,
                    "character_index": 6,
                    "character_pointer": 1,
                    "data_offset": 1,
                    "dest_address": 1,
                    "index": 1,
                    "memory_address": 1,
                    "offset": 1,
                    "register_address": 2,
                    "register_offset": 1,
                    "result_index": 1,
                    "target_address": 2
                },
                "param_1_final": {
                    "final_address": 1
                },
                "param_2": {
                    "bit_mask": 5,
                    "bit_mask1": 3,
                    "bitmask": 1,
                    "bitmask1": 2,
                    "bits_to_insert": 1,
                    "character_data": 1,
                    "character_mask": 1,
                    "data_mask": 1,
                    "input_mask": 1,
                    "mask": 6,
                    "new_value": 1,
                    "original_value": 2,
                    "region_mask": 1,
                    "register_value": 2,
                    "source": 2,
                    "source_value": 1
                },
                "param_3": {
                    "bit_mask2": 3,
                    "bit_pattern": 1,
                    "bit_value": 1,
                    "bitmask2": 2,
                    "character_data": 1,
                    "data": 7,
                    "existing_bits": 1,
                    "input_data": 1,
                    "mask": 4,
                    "mask_value": 1,
                    "new_value": 2,
                    "target": 1,
                    "update_mask": 1,
                    "update_value": 1,
                    "value": 4
                },
                "uVar1": {
                    "bit_shifted_mask": 1,
                    "calculated_value": 1,
                    "masked_data": 1,
                    "shift_amount": 11,
                    "shift_amount1": 1,
                    "shift_count": 2,
                    "shifted_bits": 5,
                    "shifted_data": 1,
                    "shifted_offset": 1,
                    "shifted_value": 3,
                    "updated_bit_mask": 1,
                    "updated_character_data": 1,
                    "updated_source": 1,
                    "updated_value": 1
                },
                "uVar1_bool": {
                    "is_zero_shift": 1
                },
                "uVar1_final": {
                    "bits_to_insert_adjusted": 1,
                    "final_bit_mask1": 1
                },
                "uVar1_i": {
                    "count": 1
                },
                "uVar1_modified": {
                    "shift_amount_adjusted": 1
                },
                "uVar1_modified_final": {
                    "modified_bits": 1
                },
                "uVar1_result": {
                    "shifted_bit_mask1": 1
                },
                "uVar1_shifted": {
                    "shifted_masked_value": 1
                },
                "uVar1_shifted_byte": {
                    "shifted_byte": 1
                },
                "uVar1_temp": {
                    "temp_shift_count": 1
                },
                "uVar2": {
                    "address_mask": 1,
                    "bit_delta": 1,
                    "bit_shift": 1,
                    "bits_to_shift": 1,
                    "number_of_bits_to_shift": 1,
                    "remaining_bits": 7,
                    "remaining_bits_adjusted": 1,
                    "remaining_shift": 3,
                    "reverse_shift_amount": 1,
                    "shift_amount": 1,
                    "shift_amount2": 1,
                    "shift_count": 2,
                    "shift_result": 1,
                    "shifted_amount": 1,
                    "shifted_bits": 1,
                    "shifted_offset_difference": 1,
                    "shifted_value": 1,
                    "shifted_value_adjusted": 1,
                    "shifted_value_index": 1,
                    "updated_bit_value": 1,
                    "updated_shift_count": 1,
                    "updated_target": 1
                },
                "uVar2_i": {
                    "index": 1
                },
                "uVar3": {
                    "lower_mask": 1,
                    "mask": 1,
                    "shifted_bit_mask2": 1,
                    "temp_var1": 1,
                    "temporary_variable": 1
                },
                "uVar3_final": {
                    "final_bit_mask2": 1
                },
                "uVar4": {
                    "merged_bits": 1,
                    "temp_var2": 1,
                    "write_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800863c",
                "FUN_080035b8",
                "FUN_08008694",
                "FUN_080036d8",
                "FUN_080077b0",
                "FUN_08007648"
            ],
            "code": "\n\n\nvoid update_memory_location_08003f30(uint address,uint mask,uint data)\n\n{\n  uint shift_amount;\n  uint remaining_bits;\n  \n  shift_amount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  remaining_bits = 7 - shift_amount;\n  if (3 < remaining_bits) {\n    remaining_bits = 4;\n  }\n  if (shift_amount + 4 < 7) {\n    shift_amount = 0;\n  }\n  else {\n    shift_amount = shift_amount - 3;\n  }\n  shift_amount = (mask & (1 << (remaining_bits & 0xff)) - 1U) << (shift_amount & 0xff) |\n          (1 << (shift_amount & 0xff)) - 1U & data;\n  if ((int)address < 0) {\n    *(byte *)((address & 0xf) + 0xe000ed14) = (byte)(shift_amount << 4);\n  }\n  else {\n    *(byte *)(address + 0xe000e400) = (byte)(shift_amount << 4);\n  }\n  return;\n}\n\n",
            "current_name": "update_memory_location_08003f30",
            "entrypoint": "0x08003f30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003f30": "update_memory_location_08003f30",
                "char": "byte",
                "param_1": "address",
                "param_2": "mask",
                "param_3": "data",
                "uVar1": "shift_amount",
                "uVar2": "remaining_bits"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003f94": {
            "additional_data": {
                "FUN_08003f94": {
                    "set_bit": 13,
                    "set_bit_at_index": 3,
                    "set_bit_at_offset": 1,
                    "set_bit_at_position": 2,
                    "set_bit_in_array": 7,
                    "set_bit_in_memory": 3,
                    "set_bit_value": 1,
                    "store_bitwise_flag": 1
                },
                "int": {
                    "integer": 1
                },
                "param_1": {
                    "bit_index": 9,
                    "bit_offset": 1,
                    "bit_position": 9,
                    "index": 8,
                    "input": 2,
                    "position": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_0800863c",
                "FUN_08008694",
                "FUN_080077b0",
                "FUN_08007648"
            ],
            "code": "\nvoid set_bit_in_array_08003f94(uinteger bit_position)\n\n{\n  if (-1 < (integer)bit_position) {\n    *(integer *)((bit_position >> 5) * 4 + -0x1fff1f00) = 1 << (bit_position & 0x1f);\n  }\n  return;\n}\n\n",
            "current_name": "set_bit_in_array_08003f94",
            "entrypoint": "0x08003f94",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003f94": "set_bit_in_array_08003f94",
                "int": "integer",
                "param_1": "bit_position"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003fb0": {
            "additional_data": {
                "DataSynchronizationBarrier": {
                    "sync_data": 1
                },
                "FUN_08003fb0": {
                    "set_bit": 4,
                    "set_bit_at_position": 2,
                    "set_bit_in_array": 1,
                    "set_bit_in_data_array": 1,
                    "set_bit_in_memory": 15,
                    "set_bit_in_memory_and_synchronize": 1,
                    "set_bit_in_memory_location": 1,
                    "set_bit_value": 1,
                    "store_bit_in_memory": 2,
                    "update_bit": 3
                },
                "InstructionSynchronizationBarrier": {
                    "sync_instructions": 1
                },
                "param_1": {
                    "bit_index": 11,
                    "bit_number": 2,
                    "bit_position": 16,
                    "index": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_080076e0"
            ],
            "code": "\nvoid set_bit_in_memory_and_synchronize_08003fb0(uint bit_position)\n\n{\n  if (-1 < (int)bit_position) {\n    *(int *)(((bit_position >> 5) + 0x20) * 4 + -0x1fff1f00) = 1 << (bit_position & 0x1f);\n    sync_data(0xf);\n    sync_instructions(0xf);\n  }\n  return;\n}\n\n",
            "current_name": "set_bit_in_memory_and_synchronize_08003fb0",
            "entrypoint": "0x08003fb0",
            "imported": false,
            "improved": true,
            "renaming": {
                "DataSynchronizationBarrier": "sync_data",
                "FUN_08003fb0": "set_bit_in_memory_and_synchronize_08003fb0",
                "InstructionSynchronizationBarrier": "sync_instructions",
                "param_1": "bit_position"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08003fd8": {
            "additional_data": {
                "DAT_e000ed23": {
                    "constant": 3,
                    "constant_value": 1,
                    "control_byte": 2,
                    "data_flag": 1,
                    "flag_value": 1,
                    "initial_value": 1,
                    "mask": 1,
                    "mem_value": 1,
                    "memory_value": 2,
                    "register2_value": 1,
                    "some_constant": 1,
                    "special_value": 1,
                    "status": 6,
                    "status_flag": 3,
                    "status_value": 1,
                    "system_status": 1
                },
                "DTA_e000e018": {
                    "counter": 1
                },
                "FUN_08003fd8": {
                    "init_function": 1,
                    "initialize_data": 6,
                    "initialize_memory": 8,
                    "initialize_parameters": 2,
                    "initialize_process": 1,
                    "initialize_registers": 1,
                    "initialize_system": 1,
                    "set_initial_values": 2,
                    "set_input_param": 1,
                    "set_low_threshold": 1,
                    "set_parameters": 2,
                    "set_params_and_limit_check": 1,
                    "update_data": 1,
                    "update_register_values": 1,
                    "validate_input": 1
                },
                "_DAT_e000e010": {
                    "another_value": 1,
                    "bit_mask": 1,
                    "bitmask": 1,
                    "constant_value": 2,
                    "control_bit": 1,
                    "control_value": 1,
                    "counter": 3,
                    "data_count": 1,
                    "fault_flag": 1,
                    "flag": 8,
                    "flag_value": 1,
                    "mem_size": 1,
                    "register4_value": 1,
                    "system_mode": 1,
                    "threshold": 2,
                    "threshold_value": 1,
                    "yet_another_variable": 1
                },
                "_DAT_e000e014": {
                    "adjusted_value": 1,
                    "data_offset": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "end_address": 1,
                    "final_value": 1,
                    "initialized_value": 1,
                    "limit": 1,
                    "lower_limit": 1,
                    "mem_ptr": 1,
                    "memory_address": 3,
                    "modified_input_value": 1,
                    "modified_value": 4,
                    "new_value_minus_one": 1,
                    "processed_value": 1,
                    "register": 1,
                    "register1_value": 1,
                    "result_minus_one": 1,
                    "start_address": 1,
                    "starting_address": 1,
                    "system_offset": 1,
                    "updated_value": 1,
                    "validated_input": 1
                },
                "_DAT_e000e018": {
                    "additional_data": 1,
                    "additional_value": 2,
                    "another_variable": 1,
                    "counter": 11,
                    "data_value": 2,
                    "flag": 3,
                    "mem_flag": 1,
                    "offset": 2,
                    "register3_value": 1,
                    "some_value": 1,
                    "system_flag": 1,
                    "temp_value": 1
                },
                "param_1": {
                    "address": 1,
                    "input_value": 14,
                    "memory_size": 1,
                    "start_address": 1,
                    "value": 13,
                    "value_to_initialize": 1
                },
                "return": {
                    "status": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080035b8",
                "FUN_080036d8"
            ],
            "code": "\n\n\nundefined4 initialize_memory_08003fd8(int input_value)\n\n{\n  if (input_value - 1U < 0x1000000) {\n    _DAT_e000e014 = input_value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    status 0;\n  }\n  status 1;\n}\n\n",
            "current_name": "initialize_memory_08003fd8",
            "entrypoint": "0x08003fd8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08003fd8": "initialize_memory_08003fd8",
                "param_1": "input_value",
                "return": "status"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004004": {
            "additional_data": {
                "FUN_08004004": {
                    "initialize_bit": 1,
                    "set_bit": 8,
                    "set_bit_at_index": 2,
                    "set_bit_at_position": 2,
                    "set_bit_in_array": 9,
                    "set_bit_in_array_at_index": 1,
                    "set_bit_in_bitmap": 1,
                    "set_bit_in_memory": 6,
                    "set_bit_value": 1
                },
                "int": {
                    "bit_vector": 1,
                    "integer": 1
                },
                "param_1": {
                    "bit_index": 8,
                    "bit_position": 8,
                    "index": 12,
                    "input_number": 1,
                    "position": 2
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid set_bit_in_array_at_index_08004004(uinteger index)\n\n{\n  if (-1 < (integer)index) {\n    *(integer *)(((index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "current_name": "set_bit_in_array_at_index_08004004",
            "entrypoint": "0x08004004",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004004": "set_bit_in_array_at_index_08004004",
                "int": "integer",
                "param_1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004024": {
            "additional_data": {
                "FUN_08004024": {
                    "configure_hardware": 1,
                    "set_control_flags": 1,
                    "set_flag": 4,
                    "set_flag_based_on_param": 2,
                    "set_flag_in_register": 1,
                    "update_configuration_bits": 1,
                    "update_control_register": 6,
                    "update_control_register_bit": 1,
                    "update_e000e010": 1,
                    "update_e000e010_bit": 2,
                    "update_e000e010_flag": 1,
                    "update_e000e010_flags": 1,
                    "update_register": 1,
                    "update_register_flag": 2,
                    "update_special_register_flag": 1,
                    "update_status": 5
                },
                "_DAT_e000e010": {
                    "configuration_register": 1,
                    "control_flags": 1,
                    "control_register": 6,
                    "e000e010": 2,
                    "existing_flags": 1,
                    "flag": 1,
                    "flag_register": 2,
                    "hardware_flags": 1,
                    "register": 1,
                    "register_e000e010": 1,
                    "register_flag": 1,
                    "register_value": 5,
                    "special_register_flag": 1,
                    "status_register": 5
                },
                "param_1": {
                    "config_option": 1,
                    "configuration": 1,
                    "flag": 5,
                    "flag_value": 2,
                    "input": 1,
                    "input_value": 5,
                    "param": 1,
                    "state": 1,
                    "status": 5,
                    "value": 9
                }
            },
            "called": [],
            "calling": [
                "FUN_080035b8"
            ],
            "code": "\n\n\nvoid update_control_register_bit_08004024(int value)\n\n{\n  if (value != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "current_name": "update_control_register_bit_08004024",
            "entrypoint": "0x08004024",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004024": "update_control_register_bit_08004024",
                "param_1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004044": {
            "called": [],
            "calling": [
                "FUN_08004046"
            ],
            "code": "\nvoid FUNC_08004044(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004044",
            "entrypoint": "0x08004044",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004044": "FUNC_08004044"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004046": {
            "additional_data": {
                "FUNC_08004044": {
                    "call_helper_function": 1,
                    "call_initialization_function": 1,
                    "call_subroutine": 1,
                    "do_something": 1,
                    "execute_helper_function": 1,
                    "execute_initialization": 3,
                    "execute_subfunction": 1,
                    "execute_subroutine": 1,
                    "initialize": 2,
                    "initialize_components": 2,
                    "initialize_data": 1,
                    "initialize_execution": 1,
                    "initialize_resources": 1,
                    "initialize_subsystems": 1,
                    "initialize_system": 5,
                    "initialize_variables": 1,
                    "perform_initialization": 3,
                    "perform_operation": 1,
                    "perform_task": 1,
                    "run_initialization": 1
                },
                "FUN_08004046": {
                    "execute_code": 1,
                    "execute_function": 6,
                    "execute_initial_function": 1,
                    "execute_initial_task": 1,
                    "execute_initialization": 10,
                    "execute_main_function": 3,
                    "initialize": 4,
                    "initialize_application": 1,
                    "initialize_system": 3,
                    "run_initialization": 1
                }
            },
            "called": [
                "FUN_08004044"
            ],
            "calling": [
                "FUN_08007246"
            ],
            "code": "\nvoid execute_initialization_08004046(void)\n\n{\n  FUNC_08004044();\n  return;\n}\n\n",
            "current_name": "execute_initialization_08004046",
            "entrypoint": "0x08004046",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004046": "execute_initialization_08004046"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004050": {
            "additional_data": {
                "DAT_40020004": {
                    "global_setting": 1
                },
                "FUN_08004050": {
                    "configure_device": 1,
                    "configure_hardware": 1,
                    "initialize_configuration": 1,
                    "initialize_data": 7,
                    "initialize_flags": 1,
                    "initialize_settings": 2,
                    "initialize_value": 1,
                    "initialize_variable": 1,
                    "parse_parameters": 1,
                    "process_data": 2,
                    "set_configuration": 2,
                    "set_data_and_return": 1,
                    "set_data_and_return_result": 1,
                    "set_data_properties": 1,
                    "set_memory_permissions": 1,
                    "set_options": 1,
                    "update_configuration": 2,
                    "update_data": 1,
                    "update_settings": 3
                },
                "PTR_ARR_XYZ": {
                    "array_ptr": 1
                },
                "PTR_FUN_XYZ": {
                    "function_ptr": 1
                },
                "_DAT_40020004": {
                    "config_value": 1,
                    "configuration": 2,
                    "configured_value": 1,
                    "data": 1,
                    "data_flag": 1,
                    "data_property": 1,
                    "data_value": 1,
                    "global_variable": 1,
                    "hardware_level": 1,
                    "new_setting_value": 1,
                    "permission_value": 1,
                    "result": 3,
                    "result_variable": 1,
                    "selected_value": 1,
                    "special_value": 1
                },
                "code": {
                    "callback": 1,
                    "function_pointer": 1,
                    "function_to_execute": 1
                },
                "param_1": {
                    "config": 3,
                    "config_params": 1,
                    "config_ptr": 1,
                    "configuration": 1,
                    "data": 9,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "device_config": 1,
                    "flags": 1,
                    "memory_ptr": 1,
                    "options": 1,
                    "param": 1,
                    "parameters": 1,
                    "params": 1,
                    "settings": 4,
                    "settings_list": 1
                },
                "puVar1": {
                    "address": 2,
                    "config": 1,
                    "current_config": 1,
                    "current_data": 3,
                    "current_data_ptr": 1,
                    "current_flag": 1,
                    "current_option": 1,
                    "current_param": 1,
                    "current_pointer": 1,
                    "current_ptr": 2,
                    "current_setting": 3,
                    "current_value": 4,
                    "pointer_var": 1,
                    "ptr": 5,
                    "selected_setting": 1,
                    "temp_pointer": 1,
                    "value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08004f3c",
                "FUN_080069ec"
            ],
            "code": "\n\n\nundefined4 initialize_data_08004050(uint **data)\n\n{\n  uint *ptr;\n  \n  if (*(char *)((int)data + 0x21) != '\\x02') {\n    data[0xe] = (uint *)0x4;\n    return 1;\n  }\n  **data = **data & 0xfffffff1;\n  **data = **data & 0xfffffffe;\n  ptr = *data;\n  if (ptr == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (ptr == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (ptr == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (ptr == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (ptr == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (ptr == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)data + 0x21) = 1;\n  *(undefined *)(data + 8) = 0;\n  if (data[0xd] != (uint *)0x0) {\n    (*(function_to_execute *)data[0xd])();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "current_name": "initialize_data_08004050",
            "entrypoint": "0x08004050",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004050": "initialize_data_08004050",
                "code": "function_to_execute",
                "param_1": "data",
                "puVar1": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080040e8": {
            "additional_data": {
                "FUN_080040e8": {
                    "update_bitmask": 1,
                    "update_bits": 4,
                    "update_configuration": 1,
                    "update_flags": 6,
                    "update_flags_and_data": 1,
                    "update_flags_and_registers": 4,
                    "update_memory": 1,
                    "update_param_values": 1,
                    "update_parameter_flags": 1,
                    "update_parameters": 3,
                    "update_params": 1,
                    "update_registers": 6
                },
                "_DAT_40010400": {
                    "flag_register_one": 1,
                    "register0": 1,
                    "register1": 1,
                    "register2": 1,
                    "system_register_2": 1
                },
                "_DAT_40010404": {
                    "flag_register_two": 1,
                    "register1": 1,
                    "register2": 1,
                    "register3": 1,
                    "system_register_3": 1
                },
                "_DAT_40010408": {
                    "flag_register_three": 1,
                    "register2": 1,
                    "register3": 1,
                    "register4": 1,
                    "system_register_4": 1
                },
                "_DAT_4001040c": {
                    "flag_register_four": 1,
                    "register3": 1,
                    "register4": 1,
                    "register5": 1,
                    "system_register_5": 1
                },
                "_DAT_40021018": {
                    "control_register": 2,
                    "register": 1,
                    "register1": 1,
                    "system_register_1": 1
                },
                "iVar7": {
                    "bit_offset": 3,
                    "bit_position": 3,
                    "bit_shift": 5,
                    "bit_shift_amount": 1,
                    "bit_shift_amt1": 1,
                    "index": 2,
                    "index1": 2,
                    "index_offset": 1,
                    "offset": 2,
                    "shift": 3,
                    "shift_amount": 3,
                    "shift_amount1": 1,
                    "shift_index": 2,
                    "shift_offset": 1,
                    "tmp_index": 1
                },
                "iVar8": {
                    "bit_shift_amt2": 1,
                    "index": 4,
                    "index2": 2,
                    "index_value": 1,
                    "param_index": 1,
                    "register": 1,
                    "register_index": 19,
                    "shift_amount2": 1,
                    "tmp_value": 1
                },
                "param_1": {
                    "bit_array": 1,
                    "bits_to_update": 1,
                    "config_array": 1,
                    "flags": 3,
                    "flags_array": 2,
                    "input_array": 1,
                    "input_flags": 1,
                    "memory": 1,
                    "output": 2,
                    "output_flags": 3,
                    "output_params": 4,
                    "output_registers": 1,
                    "output_value": 1,
                    "param_array1": 1,
                    "register_array": 1,
                    "register_table": 1,
                    "register_values": 2,
                    "registers": 2,
                    "target": 2
                },
                "param_2": {
                    "bit_values": 1,
                    "bitwise_array": 1,
                    "condition_flags": 1,
                    "data": 1,
                    "data_array": 1,
                    "flag_array": 1,
                    "flags": 3,
                    "input": 3,
                    "input_array": 1,
                    "input_flags": 4,
                    "input_params": 4,
                    "input_registers": 1,
                    "input_value": 1,
                    "input_values": 2,
                    "instruction_array": 1,
                    "param_array2": 1,
                    "source": 2,
                    "update_values": 1,
                    "values": 1
                },
                "puVar1": {
                    "current_register": 1,
                    "dest_ptr": 1,
                    "flags_pointer": 1,
                    "flags_ptr": 1,
                    "output_ptr": 1,
                    "output_value_ptr": 1,
                    "pointer": 1,
                    "register_entry": 1,
                    "register_ptr": 1,
                    "register_values_ptr": 1,
                    "target_ptr": 1,
                    "temp_output_ptr": 1,
                    "updated_output_params": 1
                },
                "uVar2": {
                    "bit_mask": 27,
                    "bitmask": 1,
                    "flag_bit": 1,
                    "mask": 2
                },
                "uVar3": {
                    "bit": 1,
                    "bit_check": 7,
                    "bit_check_result": 1,
                    "bit_mask_result": 1,
                    "bit_result": 3,
                    "bit_value": 3,
                    "bitwise_result": 1,
                    "data_bit": 1,
                    "flag": 2,
                    "flag_check": 2,
                    "flag_match": 1,
                    "flag_value": 2,
                    "input_bit": 1,
                    "input_param_bits": 1,
                    "input_param_value": 1,
                    "instruction_check": 1,
                    "mask_result": 1,
                    "result": 1
                },
                "uVar4": {
                    "bit_index": 14,
                    "bit_position": 3,
                    "count": 1,
                    "counter": 1,
                    "i": 5,
                    "index": 4,
                    "iteration": 2,
                    "var_index": 1
                },
                "uVar5": {
                    "bits_value": 1,
                    "check_value": 1,
                    "condition": 3,
                    "condition_code": 1,
                    "data_type": 2,
                    "flag_value": 2,
                    "input_param_value": 1,
                    "instruction": 2,
                    "op_code": 1,
                    "opcode": 8,
                    "subvar_value": 1,
                    "type_value": 1,
                    "u_value": 1,
                    "value": 6
                },
                "uVar6": {
                    "modified_value": 1,
                    "new_flag_value": 3,
                    "new_param_value": 1,
                    "new_value": 15,
                    "offset": 1,
                    "output_value": 1,
                    "shifted_value": 1,
                    "update_value": 1,
                    "updated_bit_value": 1,
                    "updated_code": 1,
                    "updated_param_value": 1,
                    "updated_value": 4
                },
                "uVar7": {
                    "bit_offset": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006ca8",
                "FUN_08007258",
                "FUN_080077b0",
                "FUN_08008078",
                "FUN_08006e68"
            ],
            "code": "\n\n\nvoid update_flags_and_registers_080040e8(uint *output_params,uint *input_params)\n\n{\n  uint *output_value_ptr;\n  uint bit_mask;\n  uint bit_check;\n  uint bit_index;\n  uint opcode;\n  uint new_value;\n  int bit_shift;\n  int register_index;\n  \n  new_value = 0;\n  bit_index = 0;\n  do {\n    if (0xf < bit_index) {\n      return;\n    }\n    bit_mask = 1 << (bit_index & 0xff);\n    bit_check = *input_params & bit_mask;\n    if (bit_mask == bit_check) {\n      opcode = input_params[1];\n      if (opcode == 0x12) {\n        new_value = input_params[3] + 0xc;\n      }\n      else if (opcode < 0x13) {\n        if (opcode == 2) {\n          new_value = input_params[3] + 8;\n        }\n        else if (opcode < 3) {\n          if (opcode == 0) goto LAB_0800423a;\n          if (opcode == 1) {\n            new_value = input_params[3];\n          }\n        }\n        else if (opcode == 3) {\n          new_value = 0;\n        }\n        else if (opcode == 0x11) {\n          new_value = input_params[3] + 4;\n        }\n      }\n      else if (opcode == 0x10210000) {\nLAB_0800423a:\n        if (input_params[2] == 0) {\n          new_value = 4;\n        }\n        else if (input_params[2] == 1) {\n          output_params[4] = bit_mask;\n          new_value = 8;\n        }\n        else {\n          output_params[5] = bit_mask;\n          new_value = 8;\n        }\n      }\n      else if (opcode < 0x10210001) {\n        if ((opcode == 0x10110000) || (opcode == 0x10120000)) goto LAB_0800423a;\n      }\n      else if ((opcode == 0x10310000) || ((opcode == 0x10320000 || (opcode == 0x10220000))))\n      goto LAB_0800423a;\n      bit_mask = bit_index;\n      output_value_ptr = output_params;\n      if (0xff < bit_check) {\n        bit_mask = bit_index - 8;\n        output_value_ptr = output_params + 1;\n      }\n      *output_value_ptr = *output_value_ptr & ~(0xf << (bit_mask << 2 & 0xff)) | new_value << (bit_mask << 2 & 0xff);\n      if ((input_params[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        bit_shift = (bit_index & 3) << 2;\n        if (output_params == (uint *)0x40010800) {\n          register_index = 0;\n        }\n        else if (output_params == (uint *)0x40010c00) {\n          register_index = 1;\n        }\n        else if (output_params == (uint *)0x40011000) {\n          register_index = 2;\n        }\n        else if (output_params == (uint *)0x40011400) {\n          register_index = 3;\n        }\n        else {\n          register_index = 4;\n        }\n        *(uint *)(((bit_index >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((bit_index >> 2) + 2) * 4 + 0x40010000) & ~(0xf << bit_shift) | register_index << bit_shift;\n        if ((input_params[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~bit_check;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | bit_check;\n        }\n        if ((input_params[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~bit_check;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | bit_check;\n        }\n        if ((input_params[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~bit_check;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | bit_check;\n        }\n        if ((input_params[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~bit_check;\n        }\n        else {\n          _DAT_4001040c = bit_check | _DAT_4001040c;\n        }\n      }\n    }\n    bit_index = bit_index + 1;\n  } while( true );\n}\n\n",
            "current_name": "update_flags_and_registers_080040e8",
            "entrypoint": "0x080040e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080040e8": "update_flags_and_registers_080040e8",
                "iVar7": "bit_shift",
                "iVar8": "register_index",
                "param_1": "output_params",
                "param_2": "input_params",
                "puVar1": "output_value_ptr",
                "uVar2": "bit_mask",
                "uVar3": "bit_check",
                "uVar4": "bit_index",
                "uVar5": "opcode",
                "uVar6": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080042d4": {
            "additional_data": {
                "0": {
                    "false": 1
                },
                "1": {
                    "true": 1
                },
                "FUN_080042d4": {
                    "check_bit": 19,
                    "check_bit_in_mask": 1,
                    "check_bitmask": 2,
                    "check_bitwise_compatibility": 1,
                    "check_bitwise_match": 1,
                    "check_if_bit_set": 1,
                    "check_mask": 1,
                    "check_param_bit": 1,
                    "is_bit_set": 3,
                    "verify_bit": 1
                },
                "new_variable_name_1": {
                    "mask_result": 1
                },
                "param_1": {
                    "address": 5,
                    "data_address": 3,
                    "data_pointer": 1,
                    "input": 2,
                    "input_address": 1,
                    "input_data": 1,
                    "input_number": 1,
                    "input_value": 8,
                    "offset": 4,
                    "value": 4,
                    "value_offset": 1
                },
                "param_2": {
                    "bit_mask": 17,
                    "bitmask": 5,
                    "flags": 2,
                    "mask": 2,
                    "value": 4,
                    "value_bitmask": 1
                },
                "param_3": {
                    "new_parameter_name_3": 1
                },
                "return": {
                    "is_bit_set": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080072f0"
            ],
            "code": "\nundefined4 check_bit_in_mask_080042d4(int input_value,uint bit_mask)\n\n{\n  if ((bit_mask & *(uint *)(input_value + 8)) == 0) {\n    is_bit_set 0;\n  }\n  is_bit_set 1;\n}\n\n",
            "current_name": "check_bit_in_mask_080042d4",
            "entrypoint": "0x080042d4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080042d4": "check_bit_in_mask_080042d4",
                "param_1": "input_value",
                "param_2": "bit_mask",
                "return": "is_bit_set"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080042e2": {
            "additional_data": {
                "0x10": {
                    "offset": 2
                },
                "FUN_080042e2": {
                    "set_data": 1,
                    "set_output_value": 1,
                    "set_param": 5,
                    "set_param_in_device_control": 1,
                    "set_param_value": 12,
                    "set_parameter_value": 2,
                    "store_data": 1,
                    "store_parameter_in_memory": 1,
                    "update_param": 2,
                    "update_param_with_value": 1,
                    "update_parameter": 1,
                    "update_parameter_value": 1,
                    "update_value": 1
                },
                "arrayPointer": {
                    "array_ptr": 1
                },
                "int": {
                    "": 1,
                    "integer_type": 1
                },
                "integer_type": {
                    "type": 1
                },
                "isShifted": {
                    "is_value_shifted": 1
                },
                "is_shifted": {
                    "is_shifted": 1
                },
                "newParam_1": {
                    "new_base_address": 1
                },
                "newParam_2": {
                    "new_value": 1
                },
                "newParam_3": {
                    "should_shift": 1
                },
                "newValue": {
                    "new_val": 1
                },
                "newVariable_1": {
                    "new_value_shifted": 1
                },
                "object_address": {
                    "obj_addr": 1
                },
                "param_1": {
                    "array_pointer": 1,
                    "base_address": 9,
                    "data": 1,
                    "destination": 1,
                    "destination_address": 1,
                    "device_control": 1,
                    "object": 1,
                    "object_addr": 1,
                    "object_address": 9,
                    "object_offset": 1,
                    "object_ptr": 1,
                    "output_address": 1,
                    "target_address": 3
                },
                "param_2": {
                    "data": 1,
                    "input_value": 1,
                    "new_value": 8,
                    "value": 21
                },
                "param_3": {
                    "flag": 1,
                    "is_shifted": 20,
                    "shift_flag": 3,
                    "shift_value": 4,
                    "should_shift": 1,
                    "use_high_bits": 1,
                    "use_shift": 1
                },
                "value": {
                    "new_value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_080072d8"
            ],
            "code": "\nvoid set_param_value_080042e2(int base_address,int value,int is_shifted)\n\n{\n  if (is_shifted == 0) {\n    *(int *)(base_address + 0x10) = value << 0x10;\n    return;\n  }\n  *(int *)(base_address + 0x10) = value;\n  return;\n}\n\n",
            "current_name": "set_param_value_080042e2",
            "entrypoint": "0x080042e2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080042e2": "set_param_value_080042e2",
                "param_1": "base_address",
                "param_2": "value",
                "param_3": "is_shifted"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080042f0": {
            "additional_data": {
                "FUN_080042f0": {
                    "handle_and_process_data": 1,
                    "handle_and_process_data_events": 1,
                    "handle_and_process_events": 1,
                    "handle_data_processing": 2,
                    "handle_data_processing_if_bit_set": 1,
                    "handle_data_processing_if_condition_is_met": 1,
                    "handle_if_condition": 1,
                    "handle_if_parameter_bit_set": 1,
                    "handle_updated_data": 1,
                    "process_data_and_events": 1,
                    "update_and_handle_data": 1,
                    "update_and_handle_data_processing_events": 1,
                    "update_and_handle_events": 5,
                    "update_and_process_data": 1,
                    "update_dat_variable_if_bit_is_set": 1,
                    "update_data_and_handle_events": 5,
                    "update_data_and_process_events": 3,
                    "update_data_handler": 1,
                    "update_handle_and_process_data": 1,
                    "update_register_and_handle_events": 1
                },
                "_DAT_40010414": {
                    "current_data": 4,
                    "current_flags": 1,
                    "data": 2,
                    "data_event_flag": 1,
                    "data_flag": 3,
                    "data_mask": 3,
                    "data_register": 1,
                    "data_status": 1,
                    "data_variable": 3,
                    "event_flags": 2,
                    "existing_data": 1,
                    "global_data_variable": 1,
                    "global_flags": 1,
                    "process_flags": 1,
                    "register": 1,
                    "status": 1,
                    "status_flag": 1,
                    "status_register": 1
                },
                "handle_data_processing_and_events_08009094": {
                    "handle_data_processing_and_events": 2,
                    "process_and_dispatch_events": 1,
                    "process_and_handle_events": 3,
                    "process_data": 1,
                    "process_data_and_events": 2,
                    "process_events": 2
                },
                "param_1": {
                    "bit_mask": 1,
                    "condition": 1,
                    "data": 10,
                    "data_bitmask": 1,
                    "data_event": 1,
                    "data_mask": 1,
                    "data_parameter": 1,
                    "event_data": 1,
                    "flags": 4,
                    "input": 1,
                    "input_data": 2,
                    "input_flag": 1,
                    "input_param": 1,
                    "input_parameter": 1,
                    "input_value": 2,
                    "mask": 1,
                    "updated_data": 1
                }
            },
            "called": [
                "FUN_08009094"
            ],
            "calling": [],
            "code": "\n\n\nvoid update_and_handle_data_processing_events_080042f0(uint data)\n\n{\n  if ((_DAT_40010414 & data) != 0) {\n    _DAT_40010414 = data;\n    process_and_handle_events();\n  }\n  return;\n}\n\n",
            "current_name": "update_and_handle_data_processing_events_080042f0",
            "entrypoint": "0x080042f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080042f0": "update_and_handle_data_processing_events_080042f0",
                "handle_data_processing_and_events_08009094": "process_and_handle_events",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800430c": {
            "additional_data": {
                "0": {
                    "flag_0": 1
                },
                "0x10": {
                    "bit_mask_offset": 1
                },
                "0x11": {
                    "value_offset": 1
                },
                "0x14": {
                    "condition_offset": 1
                },
                "0x3d": {
                    "char_value_offset": 1
                },
                "0x3e": {
                    "char_value_offset": 1
                },
                "0x4000": {
                    "some_constant": 1
                },
                "0xfe": {
                    "flag_0x_fe": 1
                },
                "0xffU": {
                    "flag_0x_ff": 1
                },
                "1": {
                    "flag_1": 1
                },
                "DAT_": {
                    "ignore": 1
                },
                "DAT_0800474a": {
                    "ascii_char1": 1
                },
                "DAT_0800474b": {
                    "ascii_char2": 1
                },
                "FUN_0800430c": {
                    "initialize_flags": 1,
                    "set_bit": 1,
                    "set_flag_based_on_condition": 1,
                    "set_flag_based_on_conditions": 1,
                    "set_flag_value": 1,
                    "set_flags_based_on_condition": 1,
                    "set_flags_based_on_conditions": 1,
                    "set_output_value_based_on_conditions": 1,
                    "set_param": 1,
                    "set_permission_bits": 1,
                    "set_register_value": 1,
                    "update_configuration": 1,
                    "update_control": 1,
                    "update_flag": 2,
                    "update_flag_value": 4,
                    "update_flags": 1,
                    "update_flags_based_on_condition": 1,
                    "update_param": 1,
                    "update_param_value": 2,
                    "update_param_values": 1,
                    "update_parameter": 3,
                    "update_parameter_value": 2,
                    "update_register_value": 1
                },
                "PTR_": {
                    "ignore": 1
                },
                "char": {
                    "character": 1
                },
                "data_ptr": {
                    "data_pointer": 1
                },
                "flagValue": {
                    "flag_value": 1
                },
                "input_array": {
                    "input_array": 1
                },
                "int": {
                    "integer": 1
                },
                "int_array": {
                    "array": 1
                },
                "paramData": {
                    "param_data": 1
                },
                "paramFlag": {
                    "param_flag": 1
                },
                "paramValue": {
                    "param_value": 1
                },
                "param_1": {
                    "array": 1,
                    "config": 1,
                    "control_data": 1,
                    "data_ptr": 1,
                    "flag_array": 1,
                    "flag_data": 2,
                    "flag_info": 1,
                    "flags": 1,
                    "input_array": 5,
                    "input_values": 1,
                    "int_array": 1,
                    "param": 1,
                    "param_array": 2,
                    "param_list": 2,
                    "parameter": 4,
                    "parameters": 3,
                    "permissions": 1,
                    "register": 1,
                    "register_data": 1
                },
                "parameters": {
                    "parameters": 2
                },
                "register": {
                    "register": 1
                },
                "uint": {
                    "unsigned_integer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 update_flag_value_0800430c(integer *input_array)\n\n{\n  if (*(character *)((integer)input_array + 0x3e) == '@') {\n    if (input_array[0x14] == 0) {\n      *(unsigned_integer *)(*input_array + 0x10) = input_array[0x11] & 0xfe;\n    }\n    else {\n      *(unsigned_integer *)(*input_array + 0x10) = input_array[0x11] & flag_0x_ff | 1;\n    }\n  }\n  else if (input_array[4] == 0x4000) {\n    if (*(character *)((integer)input_array + 0x3d) == '!') {\n      *(unsigned_integer *)(*input_array + 0x10) = input_array[0x11] & 0xfe;\n    }\n    else {\n      *(unsigned_integer *)(*input_array + 0x10) = input_array[0x11] & flag_0x_ff | 1;\n    }\n  }\n  else if (input_array[0x14] == 0) {\n    *(unsigned_integer *)(*input_array + 0x10) = (unsigned_integer)(input_array[0x11] << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (input_array[0x14] == 1) {\n    *(unsigned_integer *)(*input_array + 0x10) = (unsigned_integer)(input_array[0x11] << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_flag_value_0800430c",
            "entrypoint": "0x0800430c",
            "imported": false,
            "improved": true,
            "renaming": {
                "0xffU": "flag_0x_ff",
                "FUN_0800430c": "update_flag_value_0800430c",
                "char": "character",
                "int": "integer",
                "param_1": "input_array",
                "uint": "unsigned_integer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004396": {
            "additional_data": {
                "0x10": {
                    "offset": 3,
                    "param_offset": 1
                },
                "0x11": {
                    "index": 2
                },
                "0xff": {
                    "bit_mask": 2,
                    "mask": 5
                },
                "FUN_08004396": {
                    "extract_and_assign_byte": 1,
                    "set_byte_from_index": 1,
                    "set_byte_value": 4,
                    "set_byte_value_from_parameter": 1,
                    "set_lowest_byte": 1,
                    "set_param_value": 6,
                    "set_param_value_from_index": 1,
                    "set_uint_from_param": 1,
                    "set_value_from_parameter": 1,
                    "store_byte_value": 1,
                    "store_parameter_value": 1,
                    "update_data_value": 1,
                    "update_param_value": 3,
                    "update_parameter": 1,
                    "update_parameter_value": 2,
                    "update_value": 1,
                    "update_value_from_param": 1,
                    "update_value_in_memory": 1,
                    "write_byte_to_memory": 1,
                    "write_value_to_pointer": 1
                },
                "paramArray": {
                    "param_array": 1
                },
                "param_1": {
                    "array": 2,
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "data_ptr": 1,
                    "input_array": 4,
                    "input_data": 1,
                    "input_ptr": 1,
                    "memory_address": 2,
                    "param": 1,
                    "param_address": 1,
                    "param_array": 7,
                    "param_list": 1,
                    "param_ptr": 1,
                    "parameter": 3,
                    "parameter_array": 2,
                    "pointer": 1,
                    "ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 set_param_value_from_index_08004396(int *param_array)\n\n{\n  *(uint *)(*param_array + 0x10) = param_array[0x11] & 0xff;\n  return 0;\n}\n\n",
            "current_name": "set_param_value_from_index_08004396",
            "entrypoint": "0x08004396",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004396": "set_param_value_from_index_08004396",
                "param_1": "param_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080043a2": {
            "additional_data": {
                "0x0": {
                    "null": 2
                },
                "0x100": {
                    "flag_1": 2,
                    "flag_100": 1
                },
                "0x1000": {
                    "flag_1000": 1,
                    "flag_5": 2
                },
                "0x12": {
                    "constant_5": 1,
                    "value_12": 1
                },
                "0x14": {
                    "index_20": 1
                },
                "0x2": {
                    "constant_6": 1
                },
                "0x200": {
                    "flag_2": 2,
                    "flag_200": 1
                },
                "0x2a": {
                    "index_42": 1
                },
                "0x3d": {
                    "char_61": 1
                },
                "0x3e": {
                    "char_62": 1
                },
                "0x4": {
                    "constant_3": 1,
                    "value_4": 1
                },
                "0x400": {
                    "flag_3": 2,
                    "flag_400": 1
                },
                "0x8": {
                    "constant_4": 1,
                    "value_8": 1
                },
                "0x800": {
                    "flag_4": 2,
                    "flag_800": 1
                },
                "0xb": {
                    "index_11": 1
                },
                "0xc000": {
                    "constant_1": 1,
                    "value_c000": 1
                },
                "0xffff0000": {
                    "constant_2": 1,
                    "special_val_1": 1,
                    "value_ffff0000": 1
                },
                "0xfffffbff": {
                    "flag_mask": 2,
                    "mask_fffbff": 1
                },
                "FUN_080043a2": {
                    "apply_flags": 1,
                    "apply_permissions": 1,
                    "handle_quotation": 1,
                    "process_data": 1,
                    "process_flags": 3,
                    "process_param": 2,
                    "set_flags": 3,
                    "set_permission_flags": 1,
                    "update_flag": 1,
                    "update_flag_bits": 1,
                    "update_flags": 10,
                    "update_permission_flags": 1,
                    "update_permissions": 2,
                    "update_status_flags": 3
                },
                "char_1": {
                    "first_character": 1
                },
                "char_2": {
                    "second_character": 1
                },
                "char_value": {
                    "char_value": 1
                },
                "char_value_2": {
                    "char_value_2": 1
                },
                "param_1": {
                    "arg": 1,
                    "arguments": 1,
                    "data": 1,
                    "flags": 2,
                    "param": 2,
                    "param_list": 1,
                    "parameters": 18,
                    "params": 3,
                    "permission_array": 1,
                    "permissions": 1
                },
                "puVar1": {
                    "current_flag": 1,
                    "current_value": 1,
                    "flag": 1,
                    "flag_pointer": 1,
                    "flag_ptr": 2,
                    "flag_value": 1,
                    "permission_group": 1,
                    "permission_value": 1,
                    "pointer": 2,
                    "pointer_val1": 1,
                    "pointer_var": 4,
                    "ptr": 3,
                    "ptr1": 2,
                    "temp": 1,
                    "temp_pointer": 1,
                    "temp_var": 3,
                    "value": 2,
                    "value_ptr": 1,
                    "var1": 1
                },
                "short_1": {
                    "short_value": 1
                },
                "short_value": {
                    "short_value": 1
                },
                "uint": {
                    "u": 1
                },
                "uint_1": {
                    "flag_1": 1
                },
                "uint_2": {
                    "flag_2": 1
                },
                "uint_3": {
                    "flag_3": 1
                },
                "uint_4": {
                    "flag_4": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 update_status_flags_080043a2(u **parameters)\n\n{\n  u *pointer_var;\n  \n  pointer_var = parameters[0xb];\n  if ((*(char *)((int)parameters + 0x3d) == '\\\"') &&\n     ((parameters[0x14] != (u *)0x0 || (*(char *)((int)parameters + 0x3e) != '@')))) {\n    if ((parameters[0x14] == (u *)0x0) && (parameters[4] == (u *)0xc000)) {\n      **parameters = **parameters | 0x100;\n      parameters[0x14] = (u *)((int)parameters[0x14] + 1);\n    }\n    else {\n      if (*(short *)((int)parameters + 0x2a) == 0) {\n        **parameters = **parameters | 0x200;\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 1) {\n        if (pointer_var == (u *)0xffff0000) {\n          **parameters = **parameters & 0xfffffbff;\n          pointer_var = *parameters;\n          if ((pointer_var[1] & 0x800) == 0) {\n            *pointer_var = *pointer_var | 0x200;\n          }\n          else {\n            *pointer_var = *pointer_var & 0xfffffbff;\n          }\n        }\n        else if (((pointer_var == (u *)0x4) || (pointer_var == (u *)0x8)) ||\n                (parameters[0xc] == (u *)0x12)) {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x200;\n        }\n        else if (parameters[0xb] == (u *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 2) {\n        if (parameters[0xb] == (u *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters | 0x800;\n          **parameters = **parameters & 0xfffffbff;\n        }\n        pointer_var = *parameters;\n        if ((pointer_var[1] & 0x800) != 0) {\n          pointer_var[1] = pointer_var[1] | 0x1000;\n        }\n      }\n      else {\n        **parameters = **parameters | 0x400;\n        pointer_var = *parameters;\n        if ((pointer_var[1] & 0x800) != 0) {\n          pointer_var[1] = pointer_var[1] | 0x1000;\n        }\n      }\n      parameters[0x14] = (u *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "update_status_flags_080043a2",
            "entrypoint": "0x080043a2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080043a2": "update_status_flags_080043a2",
                "param_1": "parameters",
                "puVar1": "pointer_var",
                "uint": "u"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800457c": {
            "additional_data": {
                "FUN_0800457c": {
                    "decode_byte": 1,
                    "extract_byte_from_param": 1,
                    "increment_value_and_decrement_counter": 1,
                    "process_buffer": 1,
                    "process_data": 1,
                    "update_array": 1,
                    "update_array_element": 1,
                    "update_byte_array": 1,
                    "update_data": 4,
                    "update_data_pointer": 1,
                    "update_data_value": 1,
                    "update_param_value": 1,
                    "update_parameter_value": 3,
                    "update_pointer": 2,
                    "update_pointer_value": 3,
                    "update_value": 6,
                    "update_value_and_decrement": 1,
                    "update_value_in_array": 1
                },
                "param_1": {
                    "array": 7,
                    "buffer": 1,
                    "byte_array": 1,
                    "data": 5,
                    "data_array": 1,
                    "data_pointer": 2,
                    "input_array": 3,
                    "param": 1,
                    "param_array": 2,
                    "parameter": 1,
                    "parameter_list": 1,
                    "pointer": 2,
                    "pointer_array": 2,
                    "values": 1
                },
                "pbVar1": {
                    "array_pointer": 1,
                    "byte_pointer": 22,
                    "byte_ptr": 2,
                    "current_byte": 4,
                    "data_pointer": 1,
                    "ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 update_pointer_value_0800457c(int *array)\n\n{\n  byte *byte_pointer;\n  \n  if (*(short *)((int)array + 0x2a) != 0) {\n    byte_pointer = (byte *)array[9];\n    array[9] = (int)(byte_pointer + 1);\n    *(uint *)(*array + 0x10) = (uint)*byte_pointer;\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_pointer_value_0800457c",
            "entrypoint": "0x0800457c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800457c": "update_pointer_value_0800457c",
                "param_1": "array",
                "pbVar1": "byte_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800459c": {
            "additional_data": {
                "FUN_0800459c": {
                    "copy_character": 1,
                    "increment_and_assign_value": 1,
                    "increment_and_copy_value": 2,
                    "reverse_and_decrement": 1,
                    "update_and_decrement_value": 1,
                    "update_and_shift": 1,
                    "update_array": 3,
                    "update_array_element": 2,
                    "update_array_item": 1,
                    "update_array_value": 2,
                    "update_char_from_memory": 1,
                    "update_counter": 1,
                    "update_data": 5,
                    "update_param": 1,
                    "update_param_9": 1,
                    "update_param_array": 1,
                    "update_param_value": 1,
                    "update_parameter": 1,
                    "update_parameter_and_decrement": 1,
                    "update_value": 1,
                    "update_value_and_decrement": 1,
                    "update_value_in_array": 1
                },
                "param_1": {
                    "array": 15,
                    "counter_array": 1,
                    "data": 5,
                    "input_array": 1,
                    "input_data": 1,
                    "int_array": 1,
                    "param": 1,
                    "param_array": 4,
                    "parameter": 2
                },
                "puVar1": {
                    "array_element": 1,
                    "array_element_pointer": 1,
                    "char_ptr": 1,
                    "character_pointer": 1,
                    "current_element": 3,
                    "current_pointer": 2,
                    "data_offset": 1,
                    "data_ptr": 1,
                    "destination": 2,
                    "destination_pointer": 1,
                    "destination_ptr": 1,
                    "element_pointer": 1,
                    "next_array_item": 1,
                    "next_byte": 2,
                    "p_updated_value": 1,
                    "pointer_to_data": 1,
                    "pointer_to_undefined": 1,
                    "pointer_to_value": 1,
                    "ptr": 6,
                    "ptr_to_char": 1,
                    "ptr_to_data": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 update_value_in_array_0800459c(int *array)\n\n{\n  undefined *ptr;\n  \n  if (*(short *)((int)array + 0x2a) != 0) {\n    ptr = (undefined *)array[9];\n    array[9] = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*array + 0x10);\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_value_in_array_0800459c",
            "entrypoint": "0x0800459c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800459c": "update_value_in_array_0800459c",
                "param_1": "array",
                "puVar1": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080045bc": {
            "called": [],
            "calling": [
                "FUN_080045c0"
            ],
            "code": "\nvoid FUNC_080045bc(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080045bc",
            "entrypoint": "0x080045bc",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080045bc": "FUNC_080045bc"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080045c0": {
            "additional_data": {
                "FUNC_080045bc": {
                    "do_something": 1
                },
                "FUN_080045c0": {
                    "calculate_data": 2,
                    "calculate_parameter": 1,
                    "calculate_parameters": 9,
                    "calculate_params": 1,
                    "calculate_shifted_value": 1,
                    "calculate_threshold": 3,
                    "calculate_values": 9,
                    "initialize_data": 2,
                    "initialize_parameters": 1,
                    "process_data": 1,
                    "update_data_values": 1
                },
                "bVar1": {
                    "is_condition_met": 5,
                    "is_greater_than_threshold": 1,
                    "is_in_range": 1,
                    "is_large": 1,
                    "is_less": 1,
                    "is_less_than4000000": 1,
                    "is_less_than_condition": 1,
                    "is_less_than_threshold": 7,
                    "is_limit_exceeded": 1,
                    "is_small_value": 1,
                    "is_threshold_met": 4,
                    "is_valid": 1,
                    "is_value_less": 1,
                    "is_value_valid": 1,
                    "is_within_range": 3
                },
                "get_data_value_shifted_08005a28": {
                    "get_data_value": 1,
                    "get_data_value_shifted": 3,
                    "get_shifted_data_value": 1
                },
                "param_1": {
                    "data": 6,
                    "data_array": 1,
                    "data_ptr": 1,
                    "input": 2,
                    "input_data": 1,
                    "parameter": 1,
                    "parameters": 14,
                    "params": 4,
                    "values": 1
                },
                "puVar3": {
                    "data_pointer": 1,
                    "data_ptr_shifted": 1,
                    "data_value": 1,
                    "data_value_ptr": 1,
                    "data_value_shifted": 1,
                    "data_value_shifted_divisor": 1,
                    "division_result": 1,
                    "divisor": 1,
                    "p_value": 1,
                    "param1": 1,
                    "param1_val": 1,
                    "param_value": 2,
                    "parameter": 1,
                    "parameter1": 2,
                    "parameter_value": 1,
                    "pointer": 2,
                    "pointer_to_data": 1,
                    "pointer_to_value": 2,
                    "pointer_value": 1,
                    "shifted_value_divider": 1,
                    "temp_var": 1,
                    "temp_variable": 2,
                    "threshold": 1,
                    "threshold_value": 1,
                    "value_pointer": 1
                },
                "uVar2": {
                    "data_value": 21,
                    "data_value_shifted": 3,
                    "shifted_data_value": 2,
                    "shifted_value": 4
                },
                "uVar4": {
                    "adjusted_value": 4,
                    "calculated_result": 1,
                    "calculated_value": 5,
                    "calculation_result": 2,
                    "computed_value": 1,
                    "divide_result": 1,
                    "divided_value": 3,
                    "modified_shifted_value": 1,
                    "modified_value": 1,
                    "new_value": 3,
                    "result": 1,
                    "result_value": 1,
                    "shifted_data_value": 1,
                    "shifted_value": 3,
                    "threshold": 1,
                    "threshold_multiplier": 1
                }
            },
            "called": [
                "FUN_08005a28",
                "FUN_080045bc"
            ],
            "calling": [
                "FUN_080077b0"
            ],
            "code": "\nundefined4 update_data_values_080045c0(uint **parameters)\n\n{\n  bool is_less_than_threshold;\n  uint data_value;\n  uint *pointer_to_value;\n  uint calculated_value;\n  \n  if (parameters == (uint **)0x0) {\n    return 1;\n  }\n  if (*(char *)((int)parameters + 0x3d) == '\\0') {\n    *(undefined *)(parameters + 0xf) = 0;\n    FUNC_080045bc();\n  }\n  *(undefined *)((int)parameters + 0x3d) = 0x24;\n  **parameters = **parameters & 0xfffffffe;\n  data_value = get_data_value_shifted();\n  if (parameters[1] < (uint *)0x186a1) {\n    if (data_value < 2000000) {\n      is_less_than_threshold = true;\n    }\n    else {\n      is_less_than_threshold = false;\n    }\n  }\n  else {\n    is_less_than_threshold = data_value < 4000000;\n  }\n  if (is_less_than_threshold) {\n    return 1;\n  }\n  calculated_value = data_value / 1000000;\n  (*parameters)[1] = calculated_value;\n  if ((uint *)0x186a0 < parameters[1]) {\n    calculated_value = (calculated_value * 300) / 1000;\n  }\n  (*parameters)[8] = calculated_value + 1;\n  pointer_to_value = parameters[1];\n  if (pointer_to_value < (uint *)0x186a1) {\n    data_value = (data_value - 1) / (uint)((int)pointer_to_value << 1) + 1 & 0xfff;\n    if (data_value < 4) {\n      data_value = 4;\n    }\n  }\n  else {\n    if (parameters[2] == (uint *)0x0) {\n      calculated_value = (data_value - 1) / (uint)((int)pointer_to_value * 3);\n    }\n    else {\n      calculated_value = (data_value - 1) / (uint)((int)pointer_to_value * 0x19);\n    }\n    if ((calculated_value + 1 & 0xfff) == 0) {\n      data_value = 1;\n    }\n    else if (parameters[2] == (uint *)0x0) {\n      data_value = (data_value - 1) / (uint)((int)pointer_to_value * 3) + 1 & 0xfff | 0x8000;\n    }\n    else {\n      data_value = (data_value - 1) / (uint)((int)pointer_to_value * 0x19) + 1 & 0xfff | 0xc000;\n    }\n  }\n  (*parameters)[7] = data_value;\n  **parameters = (uint)parameters[7] | (uint)parameters[8];\n  (*parameters)[2] = (uint)parameters[4] | (uint)parameters[3];\n  (*parameters)[3] = (uint)parameters[5] | (uint)parameters[6];\n  **parameters = **parameters | 1;\n  parameters[0x10] = (uint *)0x0;\n  *(undefined *)((int)parameters + 0x3d) = 0x20;\n  parameters[0xc] = (uint *)0x0;\n  *(undefined *)((int)parameters + 0x3e) = 0;\n  return 0;\n}\n\n",
            "current_name": "update_data_values_080045c0",
            "entrypoint": "0x080045c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080045c0": "update_data_values_080045c0",
                "bVar1": "is_less_than_threshold",
                "get_data_value_shifted_08005a28": "get_data_value_shifted",
                "param_1": "parameters",
                "puVar3": "pointer_to_value",
                "uVar2": "data_value",
                "uVar4": "calculated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004728": {
            "additional_data": {
                "FUN_08004728": {
                    "check_and_initialize_param": 1,
                    "check_and_modify_data": 1,
                    "clear_flags": 1,
                    "decode_and_update_flags": 1,
                    "decode_function": 1,
                    "handle_data": 1,
                    "handle_input": 1,
                    "handle_param": 1,
                    "initialize_connection": 1,
                    "process_data": 17,
                    "process_input": 1,
                    "process_params": 1,
                    "update_data": 1,
                    "update_params": 1
                },
                "local_c": {
                    "count": 3,
                    "counter": 26,
                    "iteration_count": 2
                },
                "param_1": {
                    "connection_params": 1,
                    "data": 13,
                    "data_array": 3,
                    "data_pointer": 1,
                    "decoded_flags": 1,
                    "flags": 1,
                    "input_data": 4,
                    "input_params": 2,
                    "input_ptr": 1,
                    "param_array": 3,
                    "params_ptr": 1
                },
                "param_2": {
                    "data_ptr1": 1,
                    "input1": 5,
                    "output_1": 1,
                    "output_array": 2,
                    "output_buffer": 1,
                    "output_data1": 1,
                    "param1": 6,
                    "param2": 4,
                    "param2_pointer": 1,
                    "param_2": 1,
                    "param_a": 1,
                    "param_array1": 1,
                    "param_pointer1": 1,
                    "param_ptr": 1,
                    "param_ptr1": 2,
                    "param_x": 1,
                    "value_ptr": 1
                },
                "param_3": {
                    "additional_data": 1,
                    "data_buffer": 1,
                    "data_ptr": 2,
                    "data_ptr2": 1,
                    "input2": 5,
                    "output_2": 1,
                    "output_data2": 1,
                    "param2": 6,
                    "param3": 4,
                    "param3_pointer": 1,
                    "param_3": 1,
                    "param_array2": 1,
                    "param_b": 1,
                    "param_pointer2": 1,
                    "param_ptr2": 2,
                    "param_y": 1,
                    "temp_array": 1
                },
                "param_4": {
                    "config_value": 1,
                    "flag": 4,
                    "input3": 4,
                    "input_param": 1,
                    "param3": 6,
                    "param4": 5,
                    "param_4": 1,
                    "param_c": 1,
                    "param_flag": 2,
                    "param_value": 4,
                    "param_z": 1,
                    "status_flag": 1
                },
                "puVar2": {
                    "current_data": 1,
                    "current_param": 1,
                    "current_ptr": 1,
                    "flag_ptr": 1,
                    "pointer_var": 3,
                    "ptr": 17,
                    "ptr_to_data": 1,
                    "ptr_var": 3,
                    "temp_ptr": 2,
                    "temp_var": 1
                },
                "uVar1": {
                    "result": 21,
                    "return_value": 10
                }
            },
            "called": [],
            "calling": [
                "FUN_08007e74"
            ],
            "code": "\nundefined4 process_data_08004728(uint **data,uint *param1,uint *param2,undefined2 param3)\n\n{\n  undefined4 result;\n  uint *ptr;\n  int counter;\n  \n  if (*(char *)((int)data + 0x3d) == ' ') {\n    counter = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (counter == 0) {\n        data[0xc] = (uint *)0x0;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        *(undefined *)(data + 0xf) = 0;\n        return 3;\n      }\n      ptr = *data;\n      counter = counter + -1;\n    } while ((ptr[6] & 2) != 0);\n    if (*(char *)(data + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(data + 0xf) = 1;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **data = **data & 0xfffff7ff;\n      *(undefined *)((int)data + 0x3d) = 0x21;\n      *(undefined *)((int)data + 0x3e) = 0x10;\n      result = 0;\n      data[0x10] = (uint *)0x0;\n      data[9] = param2;\n      *(undefined2 *)((int)data + 0x2a) = param3;\n      data[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(data + 10) = *(undefined2 *)((int)data + 0x2a);\n      data[0x11] = param1;\n      **data = **data | 0x100;\n      *(undefined *)(data + 0xf) = 0;\n      (*data)[1] = (*data)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "current_name": "process_data_08004728",
            "entrypoint": "0x08004728",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004728": "process_data_08004728",
                "local_c": "counter",
                "param_1": "data",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "puVar2": "ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080047f4": {
            "additional_data": {
                "FUN_080047f4": {
                    "analyze_data": 1,
                    "check_space_and_initialize": 1,
                    "execute_command": 1,
                    "handle_data": 1,
                    "handle_data_packet": 1,
                    "handle_input": 1,
                    "handle_param": 1,
                    "handle_param_updates": 1,
                    "handle_space_character": 1,
                    "process_data": 13,
                    "process_function": 1,
                    "process_input": 1,
                    "process_param": 1,
                    "process_parameters": 3,
                    "process_params": 1,
                    "update_parameters": 1,
                    "update_status": 1
                },
                "local_c": {
                    "count": 3,
                    "counter": 25,
                    "iteration_count": 1,
                    "loop_counter": 2
                },
                "param_1": {
                    "command_arguments": 1,
                    "data": 5,
                    "data_array": 1,
                    "data_pointer1": 1,
                    "data_ptr": 4,
                    "data_ptrs": 1,
                    "data_struct": 1,
                    "input_array": 2,
                    "input_data": 4,
                    "input_params": 2,
                    "packet": 1,
                    "param_array": 4,
                    "param_list": 1,
                    "param_struct": 1,
                    "pointer_array": 1,
                    "status": 1
                },
                "param_2": {
                    "data1": 1,
                    "data_pointer2": 1,
                    "flag": 1,
                    "input1": 3,
                    "output1": 1,
                    "output_buffer": 1,
                    "param1": 4,
                    "param2": 3,
                    "param2_pointer": 1,
                    "param_2_ptr": 1,
                    "param_a": 5,
                    "param_pointer": 1,
                    "param_pointer1": 1,
                    "param_ptr1": 3,
                    "param_ptr_2": 1,
                    "param_size": 1,
                    "ptr1": 1,
                    "source_pointer": 1
                },
                "param_3": {
                    "data": 1,
                    "data2": 1,
                    "data_pointer3": 1,
                    "destination_pointer": 1,
                    "error_buffer": 1,
                    "input2": 3,
                    "output2": 1,
                    "param2": 4,
                    "param3": 3,
                    "param3_pointer": 1,
                    "param_3_ptr": 1,
                    "param_address": 1,
                    "param_b": 5,
                    "param_pointer2": 1,
                    "param_ptr2": 3,
                    "param_ptr_3": 1,
                    "param_value": 1,
                    "ptr2": 1
                },
                "param_4": {
                    "code_param": 1,
                    "flag": 3,
                    "input_flag": 1,
                    "mode": 1,
                    "option": 1,
                    "param2": 2,
                    "param2_bytes": 1,
                    "param3": 4,
                    "param4": 4,
                    "param_4_value": 1,
                    "param_c": 5,
                    "param_flag": 2,
                    "param_value": 3,
                    "parameter4": 1,
                    "value": 1
                },
                "puVar2": {
                    "current_command": 1,
                    "current_data": 1,
                    "current_param": 1,
                    "current_pointer": 1,
                    "current_ptr": 1,
                    "pointer": 1,
                    "pointer_var": 1,
                    "pointer_variable": 1,
                    "ptr": 14,
                    "ptr2": 1,
                    "ptr_value": 1,
                    "ptr_var": 2,
                    "ptr_variable": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 3
                },
                "uVar1": {
                    "result": 14,
                    "ret_value": 1,
                    "return_value": 16
                }
            },
            "called": [],
            "calling": [
                "FUN_08007f0e"
            ],
            "code": "\nundefined4 process_data_080047f4(uint **data,uint *param_a,uint *param_b,undefined2 param_c)\n\n{\n  undefined4 return_value;\n  uint *ptr;\n  int counter;\n  \n  if (*(char *)((int)data + 0x3d) == ' ') {\n    counter = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (counter == 0) {\n        data[0xc] = (uint *)0x0;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        *(undefined *)(data + 0xf) = 0;\n        return 3;\n      }\n      ptr = *data;\n      counter = counter + -1;\n    } while ((ptr[6] & 2) != 0);\n    if (*(char *)(data + 0xf) == '\\x01') {\n      return_value = 2;\n    }\n    else {\n      *(undefined *)(data + 0xf) = 1;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **data = **data & 0xfffff7ff;\n      *(undefined *)((int)data + 0x3d) = 0x22;\n      *(undefined *)((int)data + 0x3e) = 0x10;\n      return_value = 0;\n      data[0x10] = (uint *)0x0;\n      data[9] = param_b;\n      *(undefined2 *)((int)data + 0x2a) = param_c;\n      data[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(data + 10) = *(undefined2 *)((int)data + 0x2a);\n      data[0x11] = param_a;\n      **data = **data | 0x400;\n      **data = **data | 0x100;\n      *(undefined *)(data + 0xf) = 0;\n      (*data)[1] = (*data)[1] | 0x700;\n    }\n  }\n  else {\n    return_value = 2;\n  }\n  return return_value;\n}\n\n",
            "current_name": "process_data_080047f4",
            "entrypoint": "0x080047f4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080047f4": "process_data_080047f4",
                "local_c": "counter",
                "param_1": "data",
                "param_2": "param_a",
                "param_3": "param_b",
                "param_4": "param_c",
                "puVar2": "ptr",
                "uVar1": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080048c8": {
            "additional_data": {
                "FUN_080048c8": {
                    "check_and_update_params": 2,
                    "initialize_data": 1,
                    "initialize_data_structure": 1,
                    "initialize_function": 1,
                    "initialize_params": 4,
                    "parse_parameters": 1,
                    "parse_params": 1,
                    "process_function": 1,
                    "process_function_parameters": 1,
                    "process_input": 1,
                    "process_input_data": 1,
                    "process_param": 1,
                    "process_parameters": 2,
                    "process_params": 3,
                    "update_parameters": 1,
                    "update_params": 1,
                    "validate_and_initialize": 1,
                    "validate_and_setup_params": 1,
                    "validate_and_update_params": 1,
                    "validate_input": 3,
                    "verify_and_initialize_params": 1
                },
                "param_1": {
                    "data_ptr": 1,
                    "function_data": 1,
                    "input_buffer": 1,
                    "input_data": 2,
                    "input_param": 2,
                    "input_params": 1,
                    "input_pointer": 1,
                    "param_array": 5,
                    "param_buffer": 2,
                    "param_list": 6,
                    "param_ptr": 1,
                    "parameter1": 2,
                    "parameter_list": 2,
                    "parameters": 2,
                    "ptr_param_array_1": 1
                },
                "param_2": {
                    "buffer_ptr": 1,
                    "data_pointer": 2,
                    "data_ptr": 2,
                    "input1": 2,
                    "input_array": 1,
                    "input_data": 1,
                    "input_param": 3,
                    "param1": 1,
                    "param2": 3,
                    "param_2": 1,
                    "param_array": 1,
                    "param_pointer": 1,
                    "param_ptr": 1,
                    "param_ptr1": 2,
                    "param_value": 2,
                    "parameter2": 2,
                    "pointer1": 1,
                    "ptr_param_2": 1,
                    "size_param": 1,
                    "value_param": 1
                },
                "param_3": {
                    "array_length": 1,
                    "buffer_size": 1,
                    "count": 2,
                    "count_param": 1,
                    "data_size": 1,
                    "input2": 2,
                    "input_length": 1,
                    "input_size": 2,
                    "length": 2,
                    "limit_param": 1,
                    "param2": 1,
                    "param3": 3,
                    "param_3": 1,
                    "param_3_length": 1,
                    "param_count": 2,
                    "param_int": 1,
                    "param_length": 2,
                    "param_size": 1,
                    "parameter3": 2,
                    "size": 2
                },
                "param_4": {
                    "flag_param": 1,
                    "input3": 1,
                    "output": 1,
                    "output_array": 2,
                    "output_buffer": 1,
                    "output_data": 1,
                    "output_param": 4,
                    "output_ptr": 2,
                    "param3": 1,
                    "param4": 3,
                    "param_4": 1,
                    "param_data": 2,
                    "param_ptr2": 2,
                    "parameter4": 2,
                    "pointer2": 1,
                    "ptr_param": 1,
                    "ptr_param_4": 1,
                    "result_param": 1,
                    "result_ptr": 1,
                    "target_pointer": 1
                },
                "puVar2": {
                    "array_value": 1,
                    "first_param": 2,
                    "flags_ptr": 1,
                    "pointer": 1,
                    "pointer3": 1,
                    "pointer_var": 2,
                    "ptr": 5,
                    "ptr1": 1,
                    "ptr_data": 1,
                    "ptr_param": 1,
                    "ptr_temp_var": 1,
                    "ptr_to_data": 1,
                    "ptr_to_param": 1,
                    "ptr_to_param1": 1,
                    "ptr_var": 4,
                    "temp_pointer": 3,
                    "temp_ptr": 1,
                    "temp_variable": 1
                },
                "uVar1": {
                    "result": 20,
                    "return_value": 7,
                    "status": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08007fa0"
            ],
            "code": "\nundefined4 verify_and_initialize_params_080048c8(uint **param_list,uint *input_param,int param3,uint *output_param)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)param_list + 0x3d) == '(') {\n    if (input_param == (uint *)0x0) {\n      result = 1;\n    }\n    else if (param3 == 0) {\n      result = 1;\n    }\n    else if (*(char *)(param_list + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(param_list + 0xf) = 1;\n      ptr = *param_list;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **param_list = **param_list & 0xfffff7ff;\n      *(undefined *)((int)param_list + 0x3d) = 0x29;\n      *(undefined *)((int)param_list + 0x3e) = 0x20;\n      result = 0;\n      param_list[0x10] = (uint *)0x0;\n      param_list[9] = input_param;\n      *(short *)((int)param_list + 0x2a) = (short)param3;\n      param_list[0xb] = output_param;\n      *(undefined2 *)(param_list + 10) = *(undefined2 *)((int)param_list + 0x2a);\n      *(undefined *)(param_list + 0xf) = 0;\n      (*param_list)[1] = (*param_list)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "current_name": "verify_and_initialize_params_080048c8",
            "entrypoint": "0x080048c8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080048c8": "verify_and_initialize_params_080048c8",
                "param_1": "param_list",
                "param_2": "input_param",
                "param_3": "param3",
                "param_4": "output_param",
                "puVar2": "ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004954": {
            "additional_data": {
                "FUN_08004954": {
                    "check_and_initialize": 1,
                    "check_parameter_validity": 1,
                    "handle_param": 1,
                    "initialize_parameters": 1,
                    "initialize_params": 2,
                    "parse_input": 1,
                    "process_input": 4,
                    "process_param": 2,
                    "process_parameters": 4,
                    "process_params": 3,
                    "update_parameters": 2,
                    "validate_and_initialize": 1,
                    "validate_input": 6,
                    "validate_param": 1,
                    "validate_parameters": 1
                },
                "param_1": {
                    "config_ptr": 1,
                    "function_params": 1,
                    "input_buffer": 1,
                    "input_data": 6,
                    "input_flags": 1,
                    "input_params": 1,
                    "input_ptr": 1,
                    "input_struct": 1,
                    "param_array": 7,
                    "param_list": 4,
                    "parameter1": 1,
                    "parameter_array": 1,
                    "parameter_list": 2,
                    "parameters": 1,
                    "params": 1,
                    "ptr_array": 1
                },
                "param_2": {
                    "data_ptr": 2,
                    "input1": 2,
                    "input_data": 1,
                    "input_data_ptr": 1,
                    "input_param": 2,
                    "input_param1": 1,
                    "input_ptr": 1,
                    "optional_param": 1,
                    "param1": 3,
                    "param2": 5,
                    "param2_ptr": 1,
                    "param_a": 1,
                    "param_pointer": 3,
                    "param_ptr": 4,
                    "parameter2": 1,
                    "ptr_param2": 1,
                    "source_data": 1
                },
                "param_3": {
                    "data_length": 1,
                    "input2": 2,
                    "input_length": 1,
                    "input_param2": 1,
                    "input_size": 2,
                    "length": 2,
                    "num_elements": 1,
                    "param2": 3,
                    "param3": 6,
                    "param_b": 1,
                    "param_len": 1,
                    "param_length": 2,
                    "param_size": 4,
                    "param_value": 2,
                    "parameter3": 1,
                    "size": 1
                },
                "param_4": {
                    "another_param": 1,
                    "data_ptr": 1,
                    "destination_data": 1,
                    "input3": 2,
                    "output_data": 3,
                    "output_data_ptr": 1,
                    "output_param": 3,
                    "output_pointer": 1,
                    "output_ptr": 2,
                    "param3": 2,
                    "param4": 5,
                    "param4_ptr": 1,
                    "param_buffer": 1,
                    "param_c": 1,
                    "param_data": 2,
                    "param_ptr2": 1,
                    "parameter4": 1,
                    "ptr_param4": 1,
                    "result": 1
                },
                "puVar2": {
                    "config_data_ptr": 1,
                    "first_ptr": 1,
                    "flag_ptr": 1,
                    "flags_ptr": 1,
                    "p_value": 1,
                    "pointer": 2,
                    "pointer_var": 2,
                    "ptr": 9,
                    "ptr_data": 1,
                    "ptr_to_param1": 1,
                    "ptr_value": 1,
                    "ptr_var": 3,
                    "pu_var": 1,
                    "temp_ptr": 3,
                    "value_ptr": 1,
                    "var_ptr": 1
                },
                "uVar1": {
                    "result": 18,
                    "return_value": 9,
                    "status": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08007fa0"
            ],
            "code": "\nundefined4 validate_input_08004954(uint **param_array,uint *param2,int param3,uint *param4)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)param_array + 0x3d) == '(') {\n    if (param2 == (uint *)0x0) {\n      result = 1;\n    }\n    else if (param3 == 0) {\n      result = 1;\n    }\n    else if (*(char *)(param_array + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(param_array + 0xf) = 1;\n      ptr = *param_array;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **param_array = **param_array & 0xfffff7ff;\n      *(undefined *)((int)param_array + 0x3d) = 0x2a;\n      *(undefined *)((int)param_array + 0x3e) = 0x20;\n      result = 0;\n      param_array[0x10] = (uint *)0x0;\n      param_array[9] = param2;\n      *(short *)((int)param_array + 0x2a) = (short)param3;\n      param_array[0xb] = param4;\n      *(undefined2 *)(param_array + 10) = *(undefined2 *)((int)param_array + 0x2a);\n      *(undefined *)(param_array + 0xf) = 0;\n      (*param_array)[1] = (*param_array)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "current_name": "validate_input_08004954",
            "entrypoint": "0x08004954",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004954": "validate_input_08004954",
                "param_1": "param_array",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "puVar2": "ptr",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080049e0": {
            "additional_data": {
                "FUN_080049e0": {
                    "check_and_set_flags": 1,
                    "initialize_and_set_flags": 1,
                    "initialize_data": 11,
                    "initialize_data_structure": 4,
                    "initialize_flags": 2,
                    "initialize_param": 3,
                    "modify_parameter_and_flags": 1,
                    "set_flags_and_permissions": 1,
                    "set_flags_and_values": 3,
                    "update_data": 1,
                    "update_flags_and_values": 1,
                    "update_parameter": 1,
                    "update_values": 1
                },
                "param_1": {
                    "data": 3,
                    "data_pointer": 9,
                    "data_structure": 4,
                    "flags": 2,
                    "input": 2,
                    "param": 3,
                    "parameter": 2,
                    "parameters": 2,
                    "pointer": 1,
                    "pointer_array": 1,
                    "pointer_to_arguments": 1,
                    "ptr_list": 1
                },
                "puVar1": {
                    "arg1": 1,
                    "array": 1,
                    "current_data_pointer": 1,
                    "current_element": 1,
                    "current_value": 1,
                    "data_pointer": 1,
                    "data_value": 1,
                    "first_element": 7,
                    "first_element_of_array": 1,
                    "first_element_pointer": 1,
                    "first_item_pointer": 1,
                    "first_pointer": 1,
                    "first_value": 1,
                    "first_value_pointer": 1,
                    "flag_address": 1,
                    "pointer": 2,
                    "pointer1": 1,
                    "pointer_to_data": 1,
                    "pointer_to_flags": 1,
                    "pointer_var1": 1,
                    "ptr1": 1,
                    "temp_pointer": 2,
                    "var1": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08007f7c",
                "FUN_08007ff0",
                "FUN_08007f8e",
                "FUN_08008020"
            ],
            "code": "\nundefined4 initialize_data_structure_080049e0(uint **data_pointer)\n\n{\n  uint *first_element;\n  \n  if (*(char *)((int)data_pointer + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)data_pointer + 0x3d) = 0x28;\n  first_element = *data_pointer;\n  if ((*first_element & 1) == 0) {\n    *first_element = *first_element | 1;\n  }\n  **data_pointer = **data_pointer | 0x400;\n  (*data_pointer)[1] = (*data_pointer)[1] | 0x300;\n  return 0;\n}\n\n",
            "current_name": "initialize_data_structure_080049e0",
            "entrypoint": "0x080049e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080049e0": "initialize_data_structure_080049e0",
                "param_1": "data_pointer",
                "puVar1": "first_element"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004a1e": {
            "called": [],
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "code": "\nvoid FUNC_08004a1e(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004a1e",
            "entrypoint": "0x08004a1e",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004a1e": "FUNC_08004a1e"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004a20": {
            "called": [],
            "calling": [
                "FUN_08004e3c",
                "FUN_08004d6c"
            ],
            "code": "\nvoid FUNC_08004a20(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004a20",
            "entrypoint": "0x08004a20",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004a20": "FUNC_08004a20"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004a22": {
            "called": [],
            "calling": [
                "FUN_08004a24",
                "FUN_08004aec"
            ],
            "code": "\nvoid FUNC_08004a22(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004a22",
            "entrypoint": "0x08004a22",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004a22": "FUNC_08004a22"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004a24": {
            "additional_data": {
                "FUNC_08004a22": {
                    "helper_function": 3,
                    "perform_action": 1,
                    "perform_additional_operation": 1,
                    "perform_operation": 1,
                    "process_additional_data": 1,
                    "some_function": 3
                },
                "FUN_08004a24": {
                    "decode_and_handle_data": 1,
                    "decode_and_process": 1,
                    "decode_and_process_data": 1,
                    "decode_and_update": 1,
                    "decode_buffer": 1,
                    "decode_byte": 1,
                    "decode_bytes": 1,
                    "decode_data": 2,
                    "decode_function": 2,
                    "decode_input": 1,
                    "extract_and_process_data": 1,
                    "extract_and_update_byte": 1,
                    "extract_data": 1,
                    "extract_value": 1,
                    "parse_command": 1,
                    "parse_data": 1,
                    "process_data": 9,
                    "process_function": 1,
                    "process_input": 1,
                    "process_input_data": 1
                },
                "cVar1": {
                    "char1": 1,
                    "char_value": 8,
                    "char_var1": 1,
                    "character": 7,
                    "character_check": 1,
                    "character_var": 1,
                    "closing_bracket": 1,
                    "current_char": 4,
                    "data_end_marker": 1,
                    "first_char": 2,
                    "last_char": 1,
                    "param_char": 1,
                    "parenthesis": 1
                },
                "param_1": {
                    "buffer": 1,
                    "byte_array": 1,
                    "command": 1,
                    "data": 11,
                    "data_array": 1,
                    "data_buffer": 1,
                    "data_pointer": 2,
                    "function_params": 1,
                    "input": 2,
                    "input_array": 6,
                    "input_data": 3
                },
                "pbVar2": {
                    "byte_array": 1,
                    "byte_pointer": 10,
                    "byte_ptr": 15,
                    "current_byte": 2,
                    "data_ptr": 1,
                    "pointer_to_byte": 1
                }
            },
            "called": [
                "FUN_08004a22"
            ],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 extract_and_process_data_08004a24(int *data)\n\n{\n  char char_value;\n  byte *byte_ptr;\n  \n  char_value = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    byte_ptr = (byte *)data[9];\n    data[9] = (int)(byte_ptr + 1);\n    *(uint *)(*data + 0x10) = (uint)*byte_ptr;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (char_value == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08004a22();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "current_name": "extract_and_process_data_08004a24",
            "entrypoint": "0x08004a24",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004a24": "extract_and_process_data_08004a24",
                "cVar1": "char_value",
                "param_1": "data",
                "pbVar2": "byte_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004a74": {
            "called": [],
            "calling": [
                "FUN_08005084",
                "FUN_08004a76"
            ],
            "code": "\nvoid FUNC_08004a74(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004a74",
            "entrypoint": "0x08004a74",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004a74": "FUNC_08004a74"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004a76": {
            "additional_data": {
                "FUNC_08004a74": {
                    "another_function": 2,
                    "cleanup": 1,
                    "do_something": 1,
                    "helper_function": 1,
                    "perform_task": 1,
                    "process_data": 2,
                    "some_function": 4,
                    "some_other_function": 1
                },
                "FUN_08004a76": {
                    "increment_and_check_value": 1,
                    "process_data": 12,
                    "process_input": 3,
                    "process_param": 3,
                    "update_char": 1,
                    "update_char_array": 2,
                    "update_data": 6,
                    "update_parameter": 2,
                    "update_value": 1
                },
                "cVar1": {
                    "char1": 2,
                    "char_value": 10,
                    "char_var": 1,
                    "character": 9,
                    "current_char": 5,
                    "first_char": 2,
                    "last_char": 1,
                    "previous_char": 1
                },
                "param_1": {
                    "arr": 1,
                    "array": 3,
                    "data": 17,
                    "data_ptr": 1,
                    "input": 1,
                    "input_array": 1,
                    "input_ptr": 1,
                    "param": 1,
                    "param_array": 2,
                    "parameter": 1,
                    "parameters": 2
                },
                "puVar2": {
                    "byte_ptr": 1,
                    "current_char_ptr": 1,
                    "current_ptr": 1,
                    "data_pointer": 1,
                    "next_byte": 1,
                    "next_byte_ptr": 1,
                    "next_char_address": 1,
                    "next_char_ptr": 2,
                    "pointer": 6,
                    "pointer_var": 2,
                    "ptr": 11,
                    "ptr_to_char": 2,
                    "ptr_to_param9": 1
                }
            },
            "called": [
                "FUN_08004a74"
            ],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 process_data_08004a76(int *data)\n\n{\n  char char_value;\n  undefined *ptr;\n  \n  char_value = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    ptr = (undefined *)data[9];\n    data[9] = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*data + 0x10);\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (char_value == '*')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x22;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08004a74();\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_08004a76",
            "entrypoint": "0x08004a76",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004a76": "process_data_08004a76",
                "cVar1": "char_value",
                "param_1": "data",
                "puVar2": "ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004ac2": {
            "additional_data": {
                "FUN_08004ac2": {
                    "process_and_return": 1,
                    "process_and_return_result": 3,
                    "process_input": 15,
                    "process_input_and_return_status": 1,
                    "process_input_params": 10,
                    "process_params": 1
                },
                "param_1": {
                    "input": 1,
                    "input_array": 8,
                    "input_data": 3,
                    "input_params": 17,
                    "input_ptr": 2
                },
                "param_2": {
                    "arg_2": 1,
                    "param2": 7,
                    "param_2": 13,
                    "unknown1": 1,
                    "unused1": 1,
                    "unused_param": 5,
                    "unused_param1": 1,
                    "unused_param_1": 1,
                    "value_1": 1
                },
                "param_3": {
                    "arg_3": 1,
                    "param3": 7,
                    "param_3": 13,
                    "unknown2": 1,
                    "unused2": 1,
                    "unused_param": 5,
                    "unused_param2": 1,
                    "unused_param_2": 1,
                    "value_2": 1
                },
                "param_4": {
                    "arg_4": 1,
                    "output_param": 4,
                    "param4": 7,
                    "param_4": 14,
                    "unknown3": 1,
                    "unused3": 1,
                    "unused_param3": 1,
                    "unused_param_3": 1,
                    "value_3": 1
                },
                "process_input_params_08007fa0": {
                    "process_input_params": 1
                },
                "uVar1": {
                    "desired_value": 1,
                    "input_param": 1,
                    "output_var": 1,
                    "result": 3,
                    "selected_param": 4,
                    "selected_val": 1,
                    "selected_value": 20
                },
                "uVar2": {
                    "attribute_value": 1,
                    "flag": 13,
                    "flag_value": 1,
                    "flags": 10,
                    "input_value": 1,
                    "mask": 1,
                    "param_flag": 2,
                    "value": 1,
                    "value_flags": 1
                }
            },
            "called": [
                "FUN_08007fa0"
            ],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 process_input_params_08004ac2(int *input_params,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined2 selected_value;\n  uint flag;\n  \n  flag = *(uint *)(*input_params + 0x18);\n  if ((flag & 0x80) == 0) {\n    selected_value = *(undefined2 *)(input_params + 3);\n  }\n  else {\n    selected_value = *(undefined2 *)(input_params + 6);\n  }\n  process_input_params_08004ac2(input_params,(*(uint *)(*input_params + 0x18) & 4) == 0,selected_value,flag,param_4);\n  return 0;\n}\n\n",
            "current_name": "process_input_params_08004ac2",
            "entrypoint": "0x08004ac2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004ac2": "process_input_params_08004ac2",
                "param_1": "input_params",
                "process_input_params_08007fa0": "process_input_params",
                "uVar1": "selected_value",
                "uVar2": "flag"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004aec": {
            "additional_data": {
                "0": {
                    "updated_character_value2": 1
                },
                "0x0": {
                    "mask2": 1
                },
                "0x20": {
                    "replacement_value": 1,
                    "space_value": 1,
                    "updated_character_value1": 1
                },
                "0x21": {
                    "mask3": 1
                },
                "0x3d": {
                    "character_1": 1
                },
                "0x3e": {
                    "character_2": 1
                },
                "0x4": {
                    "value1": 1
                },
                "0x8": {
                    "value2": 1
                },
                "0xb": {
                    "index": 1
                },
                "0xc": {
                    "value": 1
                },
                "0xffff0000": {
                    "mask1": 1
                },
                "0xfffff8ff": {
                    "mask4": 1
                },
                "0xfffffbff": {
                    "mask5": 1
                },
                "FUNC_08004a22": {
                    "execute_function": 2,
                    "function_a": 1,
                    "perform_action": 4,
                    "perform_specific_action": 1,
                    "reverse_condition": 1,
                    "reverse_data": 2,
                    "reverse_something": 4
                },
                "FUN_08004aec": {
                    "execute_command": 1,
                    "execute_logic": 2,
                    "execute_operation": 1,
                    "execute_task": 1,
                    "initialize_data_structure": 15,
                    "initialize_function": 1,
                    "initialize_parameter": 1,
                    "initialize_parameters": 2,
                    "process_input": 1,
                    "process_param": 2,
                    "process_parameter": 3,
                    "process_parameters": 1
                },
                "char": {
                    "character": 1
                },
                "command_params": {
                    "command_params": 1
                },
                "execute_command": {
                    "execute_command": 1
                },
                "execute_function_and_initialize_data_structure_08007ff0": {
                    "execute_and_init": 1,
                    "execute_and_initialize": 1,
                    "execute_custom_function": 1,
                    "execute_data_structure_initialization": 1,
                    "execute_function": 1,
                    "execute_function_and_initialization": 1,
                    "execute_function_and_initialize_data": 1,
                    "execute_function_and_initialize_data_structure": 2,
                    "execute_init_func": 1,
                    "execute_init_function": 1,
                    "init_data_structure": 2,
                    "initialize_data_structure": 3,
                    "initialize_structure": 1
                },
                "function_and_structure": {
                    "execute_function_and_initialize_data_structure": 1
                },
                "initialize_data_structure_08007ff0": {
                    "execute_initialization": 1
                },
                "param_1": {
                    "command_params": 1,
                    "data_structure": 10,
                    "function_params": 1,
                    "input_data": 1,
                    "input_params": 2,
                    "operation_params": 1,
                    "param": 3,
                    "param_array": 1,
                    "parameter": 4,
                    "parameters": 7
                },
                "perform_specific_action": {
                    "perform_specific_action": 1
                }
            },
            "called": [
                "FUN_08007ff0",
                "FUN_08004a22"
            ],
            "calling": [
                "FUN_080052f0"
            ],
            "code": "\nundefined4 initialize_data_structure_08004aec(uint **data_structure)\n\n{\n  if (((data_structure[0xb] == (uint *)0x4) || (data_structure[0xb] == (uint *)0x8)) &&\n     (*(character *)((int)data_structure + 0x3d) == '(')) {\n    data_structure[0xb] = (uint *)0xffff0000;\n    (*data_structure)[1] = (*data_structure)[1] & 0xfffff8ff;\n    (*data_structure)[5] = 0xfffffbff;\n    **data_structure = **data_structure & 0xfffffbff;\n    data_structure[0xc] = (uint *)0x0;\n    *(undefined *)((int)data_structure + 0x3d) = 0x20;\n    *(undefined *)((int)data_structure + 0x3e) = 0;\n    initialize_data_structure_08004aec();\n  }\n  else if (*(character *)((int)data_structure + 0x3d) == '!') {\n    data_structure[0xb] = (uint *)0xffff0000;\n    data_structure[0xc] = (uint *)0x21;\n    *(undefined *)((int)data_structure + 0x3d) = 0x20;\n    *(undefined *)((int)data_structure + 0x3e) = 0;\n    (*data_structure)[1] = (*data_structure)[1] & 0xfffff8ff;\n    (*data_structure)[5] = 0xfffffbff;\n    **data_structure = **data_structure & 0xfffffbff;\n    FUNC_08004a22();\n  }\n  else {\n    (*data_structure)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "current_name": "initialize_data_structure_08004aec",
            "entrypoint": "0x08004aec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004aec": "initialize_data_structure_08004aec",
                "char": "character",
                "execute_function_and_initialize_data_structure_08007ff0": "initialize_data_structure",
                "initialize_data_structure_08007ff0": "execute_initialization",
                "param_1": "data_structure"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004b80": {
            "called": [],
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "code": "\nvoid FUNC_08004b80(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004b80",
            "entrypoint": "0x08004b80",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004b80": "FUNC_08004b80"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004b82": {
            "additional_data": {
                "FUNC_08004a1e": {
                    "alternate_function": 1,
                    "alternative_function": 1,
                    "do_something_else": 1,
                    "forward_action": 1,
                    "func2": 1,
                    "function2": 3,
                    "function81": 1,
                    "function_2": 1,
                    "function_b": 2,
                    "function_two": 1,
                    "handle_error": 1,
                    "perform_another_task": 1,
                    "process_condition_2": 1
                },
                "FUNC_08004b80": {
                    "do_something": 1,
                    "execute_command": 1,
                    "func1": 1,
                    "function1": 3,
                    "function80": 1,
                    "function_1": 1,
                    "function_a": 2,
                    "function_one": 1,
                    "perform_specific_task": 1,
                    "process_condition_1": 1,
                    "reset_function": 1,
                    "reversal_function": 1,
                    "reverse_action": 1
                },
                "FUN_08004b82": {
                    "decode_and_process": 1,
                    "extract_and_process_data": 2,
                    "extracted_function": 1,
                    "handle_param": 2,
                    "parse_command": 2,
                    "parse_function": 1,
                    "parse_input": 1,
                    "parse_input_data": 1,
                    "process_binary": 1,
                    "process_data": 5,
                    "process_flags": 1,
                    "process_function": 2,
                    "process_input": 3,
                    "process_param": 3,
                    "process_parameter": 1,
                    "process_params": 1,
                    "update_flags_and_perform_action": 1,
                    "update_status": 1
                },
                "cVar1": {
                    "char1": 3,
                    "char_flag": 1,
                    "char_param": 1,
                    "char_val": 1,
                    "char_value": 10,
                    "char_var": 4,
                    "char_variable": 1,
                    "character": 6,
                    "character_1": 1,
                    "first_char": 3
                },
                "param_1": {
                    "arguments": 1,
                    "binary": 1,
                    "command": 2,
                    "data": 3,
                    "data_array": 1,
                    "function_params": 1,
                    "input": 1,
                    "input_array": 1,
                    "input_data": 2,
                    "input_params": 4,
                    "param": 3,
                    "param_array": 1,
                    "param_list": 2,
                    "parameter1": 1,
                    "parameters": 4,
                    "params": 3
                },
                "ptr_2a": {
                    "ptr_2a": 1
                },
                "ptr_3d": {
                    "ptr_3d": 1
                },
                "ptr_3e": {
                    "ptr_3e": 1
                },
                "puVar2": {
                    "param_pointer": 1,
                    "pointer": 4,
                    "pointer2": 1,
                    "pointer_value": 3,
                    "pointer_var": 6,
                    "pointer_variable": 1,
                    "ptr": 2,
                    "ptr_2": 1,
                    "ptr_b": 1,
                    "ptr_value": 3,
                    "ptr_var": 4,
                    "temp": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 2
                }
            },
            "called": [
                "FUN_08004a1e",
                "FUN_08004b80"
            ],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 extract_and_process_data_08004b82(uint **parameters)\n\n{\n  char char_value;\n  uint *pointer_var;\n  \n  char_value = *(char *)((int)parameters + 0x3d);\n  pointer_var = parameters[0xb];\n  if ((*(short *)(parameters + 10) == 0) && (char_value == '!')) {\n    if ((pointer_var == (uint *)0x4) || ((pointer_var == (uint *)0x8 || (pointer_var == (uint *)0xffff0000)))) {\n      (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n      **parameters = **parameters | 0x200;\n      parameters[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      if (*(char *)((int)parameters + 0x3e) == '@') {\n        *(undefined *)((int)parameters + 0x3e) = 0;\n        FUNC_08004b80();\n      }\n      else {\n        *(undefined *)((int)parameters + 0x3e) = 0;\n        FUNC_08004a1e();\n      }\n    }\n    else {\n      (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n      parameters[0xc] = (uint *)0x11;\n      *(undefined *)((int)parameters + 0x3e) = 0;\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      FUNC_08004a1e();\n    }\n  }\n  else if ((char_value == '!') || ((*(char *)((int)parameters + 0x3e) == '@' && (char_value == '\\\"')))) {\n    if (*(short *)((int)parameters + 0x2a) == 0) {\n      (*parameters)[1] = (*parameters)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)parameters + 0x3e) == '@') {\n      if (parameters[0x14] == (uint *)0x0) {\n        if (parameters[0x13] == (uint *)0x1) {\n          (*parameters)[4] = (uint)parameters[0x12] & 0xff;\n          parameters[0x14] = (uint *)((int)parameters[0x14] + 2);\n        }\n        else {\n          (*parameters)[4] = (uint)((int)parameters[0x12] << 0x10) >> 0x18;\n          parameters[0x14] = (uint *)((int)parameters[0x14] + 1);\n        }\n      }\n      else if (parameters[0x14] == (uint *)0x1) {\n        (*parameters)[4] = (uint)parameters[0x12] & 0xff;\n        parameters[0x14] = (uint *)((int)parameters[0x14] + 1);\n      }\n      else if (parameters[0x14] == (uint *)0x2) {\n        if (*(char *)((int)parameters + 0x3d) == '\\\"') {\n          **parameters = **parameters | 0x100;\n        }\n        else if (*(char *)((int)parameters + 0x3d) == '!') {\n          pointer_var = parameters[9];\n          parameters[9] = (uint *)((int)pointer_var + 1);\n          (*parameters)[4] = (uint)*(byte *)pointer_var;\n          *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      pointer_var = parameters[9];\n      parameters[9] = (uint *)((int)pointer_var + 1);\n      (*parameters)[4] = (uint)*(byte *)pointer_var;\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "extract_and_process_data_08004b82",
            "entrypoint": "0x08004b82",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004b82": "extract_and_process_data_08004b82",
                "cVar1": "char_value",
                "param_1": "parameters",
                "puVar2": "pointer_var"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004ccc": {
            "additional_data": {
                "0": {
                    "constant0": 1
                },
                "0l": {
                    "new_value2": 1
                },
                "0x20": {
                    "new_value": 1,
                    "new_value1": 1,
                    "new_value2": 1
                },
                "0x200": {
                    "flag_value": 1
                },
                "DAT_08004c3d": {
                    "at": 1
                },
                "DAT_08004c3e": {
                    "space": 1
                },
                "DAT_08004cdb": {
                    "zero": 1
                },
                "DAT_08004ce9": {
                    "exclamation_mark": 1
                },
                "FUNC_08004a1e": {
                    "function_two": 1,
                    "handle_default_case": 1,
                    "handle_flag_character_b": 1,
                    "perform_action": 1,
                    "some_function2": 1
                },
                "FUNC_08004b80": {
                    "function_one": 1,
                    "handle_at_symbol": 1,
                    "handle_flag_character_a": 1,
                    "reverse_action": 1,
                    "some_function1": 1
                },
                "FUN_08004ccc": {
                    "execute_action": 1,
                    "process_data": 3,
                    "process_flag": 1,
                    "process_input": 7,
                    "process_param": 7,
                    "process_parameter": 5,
                    "process_paramters": 1,
                    "update_control_settings": 1,
                    "update_param": 2,
                    "update_parameter": 1,
                    "update_parameters": 1,
                    "update_settings": 1
                },
                "PTR_08004cd3": {
                    "pointer_value_2": 1
                },
                "PTR_08004cd7": {
                    "pointer_value_1": 1
                },
                "PTR_DAT_08004868_b": {
                    "b_value": 1
                },
                "PTR_DAT_08004898_39": {
                    "n_value": 1
                },
                "PTR_DAT_0800489c_3e": {
                    "second_char": 1
                },
                "func_08004a1e": {
                    "perform_action2": 1
                },
                "func_08004b80": {
                    "perform_action1": 1
                },
                "param_1": {
                    "data": 3,
                    "input": 1,
                    "input_arr": 1,
                    "input_array": 1,
                    "input_data": 1,
                    "input_params": 4,
                    "param": 3,
                    "param_array": 3,
                    "param_list": 1,
                    "parameter": 1,
                    "parameters": 11,
                    "settings": 1
                },
                "puVar1": {
                    "char_ptr": 1,
                    "current_param": 1,
                    "current_value": 1,
                    "element": 2,
                    "flag_value": 1,
                    "nine_element": 1,
                    "param9": 1,
                    "param_1_b": 1,
                    "param_value": 1,
                    "pointer": 1,
                    "pointer_var": 1,
                    "ptr_value": 1,
                    "ptr_value1": 1,
                    "ptr_var1": 1,
                    "temp_pointer": 1,
                    "temp_ptr": 2,
                    "value": 9,
                    "value_ptr": 3,
                    "var1": 1
                },
                "unknown_variable_1": {
                    "temp_var1": 1
                },
                "unknown_variable_2": {
                    "temp_var2": 1
                },
                "unknown_variable_3": {
                    "temp_var3": 1
                }
            },
            "called": [
                "FUN_08004a1e",
                "FUN_08004b80"
            ],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 process_flag_08004ccc(uint **parameters)\n\n{\n  uint *value;\n  \n  value = parameters[0xb];\n  if (*(char *)((int)parameters + 0x3d) == '!') {\n    if (*(short *)((int)parameters + 0x2a) == 0) {\n      if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        **parameters = **parameters | 0x200;\n        parameters[0xc] = (uint *)0x0;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        if (*(char *)((int)parameters + 0x3e) == '@') {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08004b80();\n        }\n        else {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08004a1e();\n        }\n      }\n      else {\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        parameters[0xc] = (uint *)0x11;\n        *(undefined *)((int)parameters + 0x3e) = 0;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        FUNC_08004a1e();\n      }\n    }\n    else {\n      value = parameters[9];\n      parameters[9] = (uint *)((int)value + 1);\n      (*parameters)[4] = (uint)*(byte *)value;\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_flag_08004ccc",
            "entrypoint": "0x08004ccc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004ccc": "process_flag_08004ccc",
                "param_1": "parameters",
                "puVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004d6a": {
            "called": [],
            "calling": [
                "FUN_08004e3c",
                "FUN_08004d6c"
            ],
            "code": "\nvoid FUNC_08004d6a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004d6a",
            "entrypoint": "0x08004d6a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004d6a": "FUNC_08004d6a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004d6c": {
            "additional_data": {
                "0x2a": {
                    "value": 1
                },
                "2a": {
                    "value": 1
                },
                "DAT_08004d6d": {
                    "space_char": 1
                },
                "DAT_08004d6e": {
                    "at_char": 1
                },
                "DAT_08004d6f": {
                    "quote_char": 1
                },
                "FUNC_08004a20": {
                    "do_something_else": 1
                },
                "FUNC_08004d6a": {
                    "do_something": 1
                },
                "FUN_08004d6c": {
                    "apply_settings": 1,
                    "decode_and_modify": 1,
                    "decode_string": 2,
                    "process_data": 1,
                    "process_input": 1,
                    "process_param": 3,
                    "process_parameter": 4,
                    "process_string": 2,
                    "set_flag": 1,
                    "set_flags_and_process_char": 1,
                    "set_permissions": 1,
                    "update_flag_and_status": 1,
                    "update_flag_value": 1,
                    "update_flags": 2,
                    "update_flags_and_data": 1,
                    "update_flags_and_state": 1,
                    "update_flags_and_value": 1,
                    "update_flags_and_values": 3,
                    "update_permission_flags": 1,
                    "update_permissions": 1
                },
                "PTR_FUN_08004a20": {
                    "process_at_char": 1
                },
                "PTR_FUN_08004d6a": {
                    "process_char": 1
                },
                "char_at_0x3d": {
                    "first_char": 1
                },
                "char_at_0x3e": {
                    "second_char": 1
                },
                "param_1": {
                    "arguments": 1,
                    "data": 1,
                    "flags": 1,
                    "function_parameters": 1,
                    "input": 1,
                    "input_data": 1,
                    "param": 2,
                    "param_array": 1,
                    "parameter": 3,
                    "parameters": 9,
                    "params": 2,
                    "permissions": 3,
                    "settings": 1,
                    "string_pointer": 1,
                    "string_ptr": 3
                },
                "puVar1": {
                    "char_ptr": 2,
                    "next_char": 1,
                    "next_char_ptr": 1,
                    "pointer": 1,
                    "pointer1": 1,
                    "ptr": 1,
                    "ptr1": 1,
                    "ptr_array": 1,
                    "pu_var1": 1,
                    "temp": 2,
                    "temp_pointer": 6,
                    "temp_ptr": 8,
                    "temp_ptr1": 1,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "updated_value": 1
                },
                "uint_at_0x0_of_string_ptr": {
                    "string_value": 1
                },
                "uint_at_0x1_of_string_ptr": {
                    "flag2": 1
                },
                "uint_at_0x4_of_string_ptr": {
                    "additional_value": 1
                },
                "uint_at_0xb_of_string_ptr": {
                    "flag": 1
                },
                "ushort_at_0x2a": {
                    "length": 1
                }
            },
            "called": [
                "FUN_08004a20",
                "FUN_08004d6a"
            ],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 update_flags_and_values_08004d6c(uint **parameters)\n\n{\n  uint *temp_ptr;\n  \n  if (*(char *)((int)parameters + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)parameters + 0x2a) < 4) {\n      if (*(ushort *)((int)parameters + 0x2a) - 2 < 2) {\n        if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x800;\n        }\n        (*parameters)[1] = (*parameters)[1] & 0xfffffbff;\n      }\n      else {\n        if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        temp_ptr = parameters[9];\n        parameters[9] = (uint *)((int)temp_ptr + 1);\n        *(char *)temp_ptr = (char)(*parameters)[4];\n        *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        parameters[0xc] = (uint *)0x0;\n        if (*(char *)((int)parameters + 0x3e) == '@') {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08004d6a();\n        }\n        else {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08004a20();\n        }\n      }\n    }\n    else {\n      temp_ptr = parameters[9];\n      parameters[9] = (uint *)((int)temp_ptr + 1);\n      *(char *)temp_ptr = (char)(*parameters)[4];\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "update_flags_and_values_08004d6c",
            "entrypoint": "0x08004d6c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004d6c": "update_flags_and_values_08004d6c",
                "param_1": "parameters",
                "puVar1": "temp_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004e3c": {
            "additional_data": {
                "0x20": {
                    "space": 1
                },
                "9": {
                    "index": 1
                },
                "FUNC_08004a20": {
                    "do_something_else": 1,
                    "func_b": 1,
                    "uppercase_characters": 1
                },
                "FUNC_08004d6a": {
                    "do_something": 1,
                    "func_a": 1,
                    "reverse_characters": 1
                },
                "FUN_08004e3c": {
                    "handle_function": 1,
                    "parse_value": 1,
                    "process_data": 18,
                    "process_input": 2,
                    "process_param": 6,
                    "process_parameter": 2,
                    "update_param_value": 1
                },
                "PTR_FUN_08004a20": {
                    "function_b": 1
                },
                "PTR_FUN_08004d6a": {
                    "function_a": 1
                },
                "param_1": {
                    "data": 13,
                    "data_array": 1,
                    "handle_params": 1,
                    "input": 2,
                    "input_array": 1,
                    "input_parameters": 1,
                    "param": 2,
                    "param_list": 3,
                    "parameter_list": 1,
                    "parameters": 4,
                    "params": 1,
                    "ptr_array": 1
                },
                "puVar1": {
                    "curr_param": 1,
                    "current_param": 3,
                    "current_ptr": 1,
                    "current_value": 3,
                    "param": 1,
                    "pointer": 1,
                    "ptr": 3,
                    "ptr1": 1,
                    "temp": 1,
                    "temp_pointer": 1,
                    "temp_pointer2": 1,
                    "temp_ptr": 1,
                    "value": 12,
                    "value_ptr": 1
                },
                "short_param_1": {
                    "count": 1
                }
            },
            "called": [
                "FUN_08004a20",
                "FUN_08004d6a"
            ],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 process_data_08004e3c(uint **data)\n\n{\n  uint *value;\n  \n  value = data[0xb];\n  if (*(short *)((int)data + 0x2a) == 3) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      **data = **data & 0xfffffbff;\n    }\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  else if (*(short *)((int)data + 0x2a) == 2) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n      **data = **data | 0x200;\n    }\n    else {\n      if (value == (uint *)0x2) {\n        **data = **data | 0x400;\n      }\n      else {\n        **data = **data & 0xfffffbff;\n      }\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n    }\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    data[0xc] = (uint *)0x0;\n    if (*(char *)((int)data + 0x3e) == '@') {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08004d6a();\n    }\n    else {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08004a20();\n    }\n  }\n  else {\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_08004e3c",
            "entrypoint": "0x08004e3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004e3c": "process_data_08004e3c",
                "param_1": "data",
                "puVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08004f3a": {
            "called": [],
            "calling": [
                "FUN_08004f3c"
            ],
            "code": "\nvoid FUNC_08004f3a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08004f3a",
            "entrypoint": "0x08004f3a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08004f3a": "FUNC_08004f3a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08004f3c": {
            "additional_data": {
                "FUNC_08004f3a": {
                    "reverse_data_structure": 1
                },
                "FUN_08004f3c": {
                    "execute_data_processing": 1,
                    "extract_data": 1,
                    "initialize_and_execute": 2,
                    "initialize_data_structure": 9,
                    "initialize_function": 4,
                    "process_data": 8,
                    "process_input": 1,
                    "process_param": 3,
                    "process_parameter": 2
                },
                "LAB_080053cc_1": {
                    "label": 1,
                    "label1": 1,
                    "label_080053cc_1": 1
                },
                "execute_function_and_initialize_data_structure_08007ff0": {
                    "execute_and_initialize": 1,
                    "execute_function_and_initialize_data_structure": 2
                },
                "iVar1": {
                    "index": 1,
                    "initialize_result": 1,
                    "initialized_value": 1,
                    "result": 17,
                    "result_code": 1,
                    "return_code": 1,
                    "return_value": 7,
                    "status": 1,
                    "variable1": 1
                },
                "initialize_data_08004050": {
                    "initialize_data": 3
                },
                "initialize_data_structure_if_needed_08008020": {
                    "initialize_data_structure": 1,
                    "initialize_data_structure_if_needed": 1,
                    "initialize_if_needed": 1
                },
                "param_1": {
                    "data": 7,
                    "data_array": 1,
                    "data_buffer": 1,
                    "data_structure": 5,
                    "function_args": 1,
                    "function_parameters": 1,
                    "function_params": 1,
                    "input_data": 1,
                    "param_array": 1,
                    "parameter": 3,
                    "parameter_list": 1,
                    "parameters": 7,
                    "pointer": 1
                },
                "puVar2": {
                    "buffer": 1,
                    "char_ptr": 3,
                    "pointer": 2,
                    "pointer_1": 1,
                    "pointer_2": 2,
                    "pointer_var1": 1,
                    "pointer_var2": 2,
                    "pointer_var_1": 1,
                    "pointer_var_2": 1,
                    "pointer_variable1": 1,
                    "pointer_variable2": 1,
                    "pointer_variable_2": 1,
                    "ptr": 3,
                    "ptr2": 4,
                    "ptr_2": 1,
                    "ptr_char": 1,
                    "ptr_var2": 1,
                    "pu_data": 1,
                    "temp_pointer": 1,
                    "temp_pointer_1": 1,
                    "temp_ptr": 1
                },
                "puVar3": {
                    "current_pointer": 1,
                    "data": 2,
                    "data_ptr": 2,
                    "data_ptr2": 1,
                    "input_ptr": 1,
                    "pointer": 1,
                    "pointer2": 1,
                    "pointer_2": 1,
                    "pointer_3": 2,
                    "pointer_var2": 1,
                    "pointer_var3": 2,
                    "pointer_var_2": 1,
                    "pointer_var_3": 1,
                    "pointer_variable2": 1,
                    "pointer_variable3": 1,
                    "pointer_variable_3": 1,
                    "ptr2": 1,
                    "ptr3": 4,
                    "ptr_3": 1,
                    "ptr_uint": 1,
                    "ptr_var3": 1,
                    "pu_data2": 1,
                    "temp_pointer_2": 1,
                    "temp_ptr2": 1
                }
            },
            "called": [
                "FUN_08007ff0",
                "FUN_08004f3a",
                "FUN_08004050",
                "FUN_08008020"
            ],
            "calling": [
                "FUN_08005084",
                "FUN_080052f0"
            ],
            "code": "\nvoid initialize_data_structure_08004f3c(uint **parameters)\n\n{\n  int result;\n  uint *ptr2;\n  uint *ptr3;\n  \n  if (*(byte *)((int)parameters + 0x3d) - 0x29 < 2) {\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)parameters + 0x3d) != '`') && (((*parameters)[1] & 0x800) == 0)) {\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n    }\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n  }\n  **parameters = **parameters & 0xfffff7ff;\n  ptr3 = *parameters;\n  if ((ptr3[1] & 0x800) == 0) {\n    if (*(char *)((int)parameters + 0x3d) == '`') {\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      parameters[0x10] = (uint *)0x0;\n      if ((ptr3[5] & 0x40) != 0) {\n        ptr2 = parameters[9];\n        parameters[9] = (uint *)((int)ptr2 + 1);\n        *(char *)ptr2 = (char)ptr3[4];\n      }\n      **parameters = **parameters & 0xfffffffe;\n      FUNC_08004f3a(parameters);\n    }\n    else {\n      if ((ptr3[5] & 0x40) != 0) {\n        ptr2 = parameters[9];\n        parameters[9] = (uint *)((int)ptr2 + 1);\n        *(char *)ptr2 = (char)ptr3[4];\n      }\n      initialize_if_needed(parameters);\n    }\n  }\n  else {\n    ptr3[1] = ptr3[1] & 0xfffff7ff;\n    if (*(char *)((int)parameters[0xd] + 0x21) == '\\x01') {\n      parameters[0xe][0xd] = (uint)&label;\n      result = initialize_data(parameters[0xe]);\n      if (result != 0) {\n        if (((*parameters)[5] & 0x40) != 0) {\n          ptr3 = parameters[9];\n          parameters[9] = (uint *)((int)ptr3 + 1);\n          *(char *)ptr3 = (char)(*parameters)[4];\n        }\n        **parameters = **parameters & 0xfffffffe;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        (*(code *)parameters[0xe][0xd])();\n      }\n    }\n    else {\n      parameters[0xd][0xd] = (uint)&label;\n      result = initialize_data(parameters[0xd]);\n      if (result != 0) {\n        **parameters = **parameters & 0xfffffffe;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        (*(code *)parameters[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)parameters + 0x3d) == '(') && (((uint)parameters[0x10] & 4) != 0)) {\n    parameters[0xb] = (uint *)0xffff0000;\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    execute_function_and_initialize_data_structure_08004f3c(parameters);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_structure_08004f3c",
            "entrypoint": "0x08004f3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08004f3c": "initialize_data_structure_08004f3c",
                "LAB_080053cc_1": "label",
                "execute_function_and_initialize_data_structure_08007ff0": "execute_function_and_initialize_data_structure",
                "iVar1": "result",
                "initialize_data_08004050": "initialize_data",
                "initialize_data_structure_if_needed_08008020": "initialize_if_needed",
                "param_1": "parameters",
                "puVar2": "ptr2",
                "puVar3": "ptr3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005084": {
            "additional_data": {
                "FUNC_08004a74": {
                    "reset_data_structure_08004a74": 1
                },
                "FUN_08005084": {
                    "initialize_and_execute": 2,
                    "initialize_and_execute_function": 1,
                    "initialize_data_structure": 12,
                    "initialize_flags": 1,
                    "initialize_function": 1,
                    "initialize_structure_and_execute": 1,
                    "parse_input": 1,
                    "process_data": 4,
                    "process_function": 1,
                    "process_input": 1,
                    "process_parameter": 1,
                    "update_data_structure": 2,
                    "update_parameter": 1,
                    "update_parameters": 1
                },
                "cVar1": {
                    "char1": 3,
                    "char_flags": 1,
                    "char_value": 11,
                    "character": 11,
                    "character_1": 1,
                    "first_char": 2,
                    "first_character": 1,
                    "input_char": 1
                },
                "execute_function_and_initialize_data_structure_08007ff0": {
                    "execute_function": 1
                },
                "param_1": {
                    "data": 5,
                    "data_structure": 7,
                    "flags": 1,
                    "function_data": 1,
                    "input": 3,
                    "input_data": 1,
                    "param": 3,
                    "parameter": 1,
                    "parameters": 8,
                    "params": 1
                },
                "puVar2": {
                    "data_pointer_1": 1,
                    "first_element": 1,
                    "first_pointer": 1,
                    "param": 1,
                    "pointer": 1,
                    "pointer1": 9,
                    "pointer_1": 4,
                    "pointer_2": 2,
                    "ptr": 2,
                    "ptr1": 5,
                    "ptr_flags": 1,
                    "ptr_var1": 1,
                    "ptr_var2": 2
                },
                "puVar3": {
                    "another_pointer": 1,
                    "data_pointer_2": 1,
                    "pointer2": 9,
                    "pointer_2": 4,
                    "pointer_3": 2,
                    "ptr2": 6,
                    "ptr_flags_counter": 1,
                    "ptr_temp": 1,
                    "ptr_var2": 1,
                    "ptr_var3": 2,
                    "second_pointer": 1,
                    "temp": 1,
                    "temp_element": 1
                }
            },
            "called": [
                "FUN_08007ff0",
                "FUN_08004a74",
                "FUN_08004f3c"
            ],
            "calling": [
                "FUN_08005188"
            ],
            "code": "\nundefined4 initialize_data_structure_08005084(uint **parameters)\n\n{\n  char char_value;\n  uint *pointer1;\n  uint *pointer2;\n  \n  char_value = *(char *)((int)parameters + 0x3d);\n  (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n  **parameters = **parameters | 1;\n  **parameters = **parameters & 0xfffffbff;\n  pointer1 = *parameters;\n  if ((pointer1[1] & 0x800) != 0) {\n    if ((*(char *)((int)parameters + 0x3d) == '\\\"') || (*(char *)((int)parameters + 0x3d) == '*')) {\n      *(short *)((int)parameters + 0x2a) = (short)*(undefined4 *)(*parameters[0xe] + 4);\n    }\n    else {\n      *(short *)((int)parameters + 0x2a) = (short)*(undefined4 *)(*parameters[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)parameters + 0x2a) != 0) {\n    if ((pointer1[5] & 4) != 0) {\n      pointer2 = parameters[9];\n      parameters[9] = (uint *)((int)pointer2 + 1);\n      *(char *)pointer2 = (char)pointer1[4];\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n    if (((*parameters)[5] & 0x40) != 0) {\n      pointer1 = parameters[9];\n      parameters[9] = (uint *)((int)pointer1 + 1);\n      *(char *)pointer1 = (char)(*parameters)[4];\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 4);\n  }\n  if (parameters[0x10] == (uint *)0x0) {\n    if (((char_value == '(') || (char_value == '*')) || (char_value == ')')) {\n      parameters[0xb] = (uint *)0xffff0000;\n      parameters[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      *(undefined *)((int)parameters + 0x3e) = 0;\n      execute_function();\n    }\n    else if ((parameters[0xc] == (uint *)0x22) || (char_value == '\\\"')) {\n      parameters[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      *(undefined *)((int)parameters + 0x3e) = 0;\n      FUNC_08004a74();\n    }\n  }\n  else {\n    initialize_data_structure_08005084_08004f3c();\n  }\n  return 0;\n}\n\n",
            "current_name": "initialize_data_structure_08005084",
            "entrypoint": "0x08005084",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005084": "initialize_data_structure_08005084",
                "cVar1": "char_value",
                "execute_function_and_initialize_data_structure_08007ff0": "execute_function",
                "param_1": "parameters",
                "puVar2": "pointer1",
                "puVar3": "pointer2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005188": {
            "additional_data": {
                "FUN_08005188": {
                    "handle_function": 1,
                    "process_command": 1,
                    "process_data": 1,
                    "process_function": 24,
                    "process_input": 1,
                    "process_logic_operations": 1,
                    "process_param_data": 1,
                    "process_parameters": 1
                },
                "extract_and_process_data_08004a24": {
                    "extract_and_process_data": 6,
                    "extract_and_process_data_v2": 1
                },
                "extract_and_process_data_08004b82": {
                    "extract_and_process_data": 7
                },
                "iVar1": {
                    "array_index": 1,
                    "array_size": 1,
                    "array_value": 1,
                    "command_ptr": 1,
                    "data": 1,
                    "data_pointer": 3,
                    "data_ptr": 2,
                    "data_value": 3,
                    "param_value": 10,
                    "parameter_value": 1,
                    "pointer": 2,
                    "value": 3,
                    "var1": 1,
                    "variable1": 1
                },
                "initialize_data_structure_08005084": {
                    "initialize_data_structure": 7
                },
                "param_1": {
                    "command": 1,
                    "data": 3,
                    "data_array": 1,
                    "data_param": 1,
                    "data_ptr": 1,
                    "function_data": 1,
                    "function_param": 2,
                    "function_parameter": 1,
                    "function_params": 2,
                    "input_array": 2,
                    "input_data": 5,
                    "input_param": 1,
                    "input_params": 6,
                    "param_data": 1,
                    "parameter": 2
                },
                "process_data_08004a76": {
                    "process_data": 6,
                    "process_data_v2": 1
                },
                "process_data_08004e3c": {
                    "process_data": 7
                },
                "process_flag_08004ccc": {
                    "process_flag": 7
                },
                "process_input_params_08004ac2": {
                    "process_input_params": 7
                },
                "set_param_value_from_index_08004396": {
                    "set_param_value": 2,
                    "set_param_value_from_index": 5
                },
                "uVar2": {
                    "flag": 1,
                    "flag1": 1,
                    "flag_value": 17,
                    "flag_value1": 1,
                    "flag_value_1": 1,
                    "flags": 1,
                    "flags1": 2,
                    "flags_value": 1,
                    "flags_var": 1,
                    "value1": 2,
                    "value_1": 1,
                    "var2": 1,
                    "variable2": 1
                },
                "uVar3": {
                    "bitmask": 1,
                    "command": 1,
                    "condition_value": 1,
                    "conditional_value": 1,
                    "data_value": 3,
                    "flag2": 1,
                    "flag_value2": 1,
                    "flag_value_2": 1,
                    "flags2": 2,
                    "status": 1,
                    "status_flag": 2,
                    "status_flags": 6,
                    "status_value": 4,
                    "value2": 2,
                    "value_2": 1,
                    "values_var": 1,
                    "var3": 1,
                    "variable3": 1
                },
                "uVar4": {
                    "additional_flags": 1,
                    "data_flag": 2,
                    "data_structure": 1,
                    "data_value": 2,
                    "extra_flag": 1,
                    "extra_flags": 1,
                    "flag3": 1,
                    "flag_and_value": 2,
                    "flag_value3": 1,
                    "flag_value_3": 1,
                    "flags3": 2,
                    "other_value": 1,
                    "param_value": 1,
                    "pointer_value": 1,
                    "status": 1,
                    "status_flag": 1,
                    "status_flags": 6,
                    "value3": 2,
                    "value_3": 1,
                    "var4": 1,
                    "variable4": 1
                },
                "update_flag_value_0800430c": {
                    "update_flag_value": 7
                },
                "update_flags_and_values_08004d6c": {
                    "update_flags_and_values": 7
                },
                "update_pointer_value_0800457c": {
                    "update_pointer_value": 7
                },
                "update_status_flags_080043a2": {
                    "update_status_flags": 7
                },
                "update_value_in_array_0800459c": {
                    "update_value_in_array": 7
                }
            },
            "called": [
                "FUN_0800430c",
                "FUN_080043a2",
                "FUN_08005084",
                "FUN_08004a76",
                "FUN_0800457c",
                "FUN_08004d6c",
                "FUN_08004ccc",
                "FUN_08004b82",
                "FUN_0800459c",
                "FUN_08004a24",
                "FUN_08004e3c",
                "FUN_08004396",
                "FUN_08004ac2"
            ],
            "calling": [],
            "code": "\nvoid process_function_08005188(int *input_params)\n\n{\n  int param_value;\n  uint flag_value;\n  uint status_flags;\n  uint status_flags;\n  \n  param_value = *input_params;\n  status_flags = *(uint *)(param_value + 0x18);\n  flag_value = *(uint *)(param_value + 0x14);\n  status_flags = *(uint *)(param_value + 4);\n  if ((*(char *)((int)input_params + 0x3e) == '\\x10') || (*(char *)((int)input_params + 0x3e) == '@')) {\n    if (((flag_value & 0x10001) == 0) || ((status_flags & 0x200) == 0)) {\n      if (((flag_value & 0x10008) == 0) || ((status_flags & 0x200) == 0)) {\n        if (((flag_value & 0x10002) != 0) && ((status_flags & 0x200) != 0)) {\n          update_status_flags(input_params);\n        }\n      }\n      else {\n        set_param_value_from_index(input_params);\n      }\n    }\n    else {\n      update_flag_value(input_params);\n    }\n    if ((status_flags & 0x100004) == 0) {\n      if ((((flag_value & 0x10040) != 0) && ((status_flags & 0x400) != 0)) && ((flag_value & 0x10004) == 0)) {\n        update_flags_and_values(input_params);\n        return;\n      }\n      if (((flag_value & 0x10004) != 0) && ((status_flags & 0x200) != 0)) {\n        process_data(input_params);\n        return;\n      }\n    }\n    else {\n      if ((((flag_value & 0x10080) != 0) && ((status_flags & 0x400) != 0)) && ((flag_value & 0x10004) == 0)) {\n        extract_and_process_data(input_params);\n        return;\n      }\n      if (((flag_value & 0x10004) != 0) && ((status_flags & 0x200) != 0)) {\n        process_flag(input_params);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flag_value & 0x10002) != 0) && ((status_flags & 0x200) != 0)) {\n      process_input_params();\n      return;\n    }\n    if (((flag_value & 0x10010) != 0) && ((status_flags & 0x200) != 0)) {\n      initialize_data_structure(input_params);\n      return;\n    }\n    if ((status_flags & 0x100004) == 0) {\n      if ((((flag_value & 0x10040) != 0) && ((status_flags & 0x400) != 0)) && ((flag_value & 0x10004) == 0)) {\n        process_data(input_params);\n        return;\n      }\n      if (((flag_value & 0x10004) != 0) && ((status_flags & 0x200) != 0)) {\n        update_value_in_array(input_params);\n      }\n    }\n    else {\n      if ((((flag_value & 0x10080) != 0) && ((status_flags & 0x400) != 0)) && ((flag_value & 0x10004) == 0)) {\n        extract_and_process_data(input_params);\n        return;\n      }\n      if (((flag_value & 0x10004) != 0) && ((status_flags & 0x200) != 0)) {\n        update_pointer_value(input_params);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_function_08005188",
            "entrypoint": "0x08005188",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005188": "process_function_08005188",
                "extract_and_process_data_08004a24": "extract_and_process_data",
                "extract_and_process_data_08004b82": "extract_and_process_data",
                "iVar1": "param_value",
                "initialize_data_structure_08005084": "initialize_data_structure",
                "param_1": "input_params",
                "process_data_08004a76": "process_data",
                "process_data_08004e3c": "process_data",
                "process_flag_08004ccc": "process_flag",
                "process_input_params_08004ac2": "process_input_params",
                "set_param_value_from_index_08004396": "set_param_value_from_index",
                "uVar2": "flag_value",
                "uVar3": "status_flags",
                "uVar4": "status_flags",
                "update_flag_value_0800430c": "update_flag_value",
                "update_flags_and_values_08004d6c": "update_flags_and_values",
                "update_pointer_value_0800457c": "update_pointer_value",
                "update_status_flags_080043a2": "update_status_flags",
                "update_value_in_array_0800459c": "update_value_in_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080052f0": {
            "additional_data": {
                "FUN_080052f0": {
                    "check_and_initialize": 1,
                    "check_and_initialize_flags": 1,
                    "check_and_update_flags": 1,
                    "configure_hardware": 1,
                    "initialize_flags": 6,
                    "process_data": 1,
                    "process_parameters": 1,
                    "update_data_structure": 7,
                    "update_data_structure_flags": 1,
                    "update_flags": 5,
                    "update_flags_and_data_structure": 1,
                    "update_flags_and_initialize_data_structure": 1,
                    "update_param_flags": 1,
                    "update_permissions": 1,
                    "update_status": 1,
                    "update_status_flags": 1
                },
                "cVar1": {
                    "char1": 5,
                    "char_value": 5,
                    "char_var": 2,
                    "char_var1": 1,
                    "char_variable": 2,
                    "character": 14,
                    "character1": 1,
                    "first_char": 1
                },
                "initialize_data_structure_08004aec": {
                    "initialize_data_structure": 1,
                    "initialize_data_structure1": 1,
                    "initialize_data_structure_1": 1,
                    "initialize_data_structure_if_conditions_met": 1,
                    "initialize_structure": 1
                },
                "initialize_data_structure_08004f3c": {
                    "initialize_data_structure2": 1,
                    "initialize_data_structure_2": 1,
                    "initialize_data_structure_flagged": 1,
                    "initialize_data_structure_if_flags_set": 1,
                    "initialize_structure": 1
                },
                "param_1": {
                    "arguments": 1,
                    "configuration": 1,
                    "data": 1,
                    "data_ptr": 5,
                    "data_structure": 7,
                    "flags": 2,
                    "input": 1,
                    "input_data": 1,
                    "param": 3,
                    "param_pointer": 1,
                    "parameters": 4,
                    "permissions": 1,
                    "pointer_array": 1,
                    "status": 1,
                    "status_flags": 1
                },
                "puVar2": {
                    "data_ptr": 1,
                    "param_value": 1,
                    "pointer": 11,
                    "pointer_variable": 1,
                    "ptr": 6,
                    "ptr2": 1,
                    "ptr_arg1": 1,
                    "ptr_data": 1,
                    "ptr_flags": 1,
                    "ptr_param": 1,
                    "ptr_permissions": 1,
                    "ptr_to_data": 1,
                    "ptr_to_data_structure": 1,
                    "ptr_value": 1,
                    "ptr_var": 1
                },
                "uVar3": {
                    "flag1": 12,
                    "flag_1": 1,
                    "flag_mask": 1,
                    "flag_value": 1,
                    "flag_value_1": 1,
                    "flag_var": 1,
                    "flags": 1,
                    "flags1": 2,
                    "permission_flags": 1,
                    "value1": 7,
                    "value3": 1,
                    "value_1": 1,
                    "var3": 1
                },
                "uVar4": {
                    "condition_mask": 1,
                    "flag": 1,
                    "flag2": 12,
                    "flag_2": 1,
                    "flag_check_var": 1,
                    "flag_value_2": 1,
                    "flags2": 2,
                    "int_value": 1,
                    "value": 1,
                    "value2": 7,
                    "value4": 1,
                    "value_2": 1,
                    "var4": 1
                }
            },
            "called": [
                "FUN_08004f3c",
                "FUN_08004aec"
            ],
            "calling": [],
            "code": "\nvoid update_flags_and_initialize_data_structure_080052f0(uint **data_structure)\n\n{\n  char character;\n  uint *pointer;\n  uint flag1;\n  uint flag2;\n  \n  pointer = *data_structure;\n  flag1 = pointer[5];\n  flag2 = pointer[1];\n  if (((flag1 & 0x10100) != 0) && ((flag2 & 0x100) != 0)) {\n    data_structure[0x10] = (uint *)((uint)data_structure[0x10] | 1);\n    pointer[5] = 0xfffffeff;\n    **data_structure = **data_structure | 0x8000;\n  }\n  if (((flag1 & 0x10200) != 0) && ((flag2 & 0x100) != 0)) {\n    data_structure[0x10] = (uint *)((uint)data_structure[0x10] | 2);\n    (*data_structure)[5] = 0xfffffdff;\n  }\n  if (((flag1 & 0x10400) != 0) && ((flag2 & 0x100) != 0)) {\n    character = *(char *)((int)data_structure + 0x3d);\n    if (((*(char *)((int)data_structure + 0x3e) == ' ') && (*(short *)((int)data_structure + 0x2a) == 0)) &&\n       (((character == '!' || (character == ')')) || ((character == '(' && (data_structure[0xc] == (uint *)0x21)))))) {\n      initialize_data_structure_if_conditions_met(data_structure);\n    }\n    else {\n      data_structure[0x10] = (uint *)((uint)data_structure[0x10] | 4);\n      if (*(char *)((int)data_structure + 0x3e) == '\\x10') {\n        **data_structure = **data_structure | 0x200;\n      }\n      (*data_structure)[5] = 0xfffffbff;\n    }\n  }\n  if (((flag1 & 0x10800) != 0) && ((flag2 & 0x100) != 0)) {\n    data_structure[0x10] = (uint *)((uint)data_structure[0x10] | 8);\n    (*data_structure)[5] = 0xfffff7ff;\n  }\n  if (data_structure[0x10] != (uint *)0x0) {\n    initialize_data_structure2(data_structure);\n  }\n  return;\n}\n\n",
            "current_name": "update_flags_and_initialize_data_structure_080052f0",
            "entrypoint": "0x080052f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080052f0": "update_flags_and_initialize_data_structure_080052f0",
                "cVar1": "character",
                "initialize_data_structure_08004aec": "initialize_data_structure_if_conditions_met",
                "initialize_data_structure_08004f3c": "initialize_data_structure2",
                "param_1": "data_structure",
                "puVar2": "pointer",
                "uVar3": "flag1",
                "uVar4": "flag2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800542a": {
            "additional_data": {
                "0x3d": {
                    "offset": 1
                },
                "DAT_": {
                    "unchanged": 1
                },
                "FUN_0800542a": {
                    "extract_byte_from_memory": 1,
                    "extract_byte_value": 1,
                    "extract_value_from_address": 1,
                    "get_byte_from_offset": 7,
                    "get_byte_from_offset_pointer": 1,
                    "get_byte_offset": 1,
                    "get_byte_value": 7,
                    "get_memory_byte": 1,
                    "get_memory_value": 1,
                    "get_offset_value": 4,
                    "get_pointer_value": 1,
                    "get_value_at_offset": 1,
                    "get_value_from_offset": 3,
                    "retrieve_byte": 1
                },
                "NULL": {
                    "nullptr": 1
                },
                "PTR_": {
                    "unchanged": 1
                },
                "param_1": {
                    "address": 7,
                    "base_address": 7,
                    "data_address": 1,
                    "input_address": 2,
                    "input_offset": 1,
                    "input_value": 1,
                    "memory_address": 4,
                    "offset": 8
                },
                "undefined": {
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "code": "\nvalue get_byte_from_offset_pointer_0800542a(int offset)\n\n{\n  return *(value *)(offset + 0x3d);\n}\n\n",
            "current_name": "get_byte_from_offset_pointer_0800542a",
            "entrypoint": "0x0800542a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800542a": "get_byte_from_offset_pointer_0800542a",
                "param_1": "offset",
                "undefined": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005430": {
            "additional_data": {
                "0x40": {
                    "offset": 1
                },
                "DAT_": {
                    "": 1,
                    "dat_": 1
                },
                "FUN_08005430": {
                    "get_address": 1,
                    "get_address_from_offset": 1,
                    "get_data": 1,
                    "get_data_at_offset": 1,
                    "get_data_from_offset": 1,
                    "get_memory_value": 3,
                    "get_offset_value": 4,
                    "get_parameter_value": 2,
                    "get_pointer_from_offset": 1,
                    "get_pointer_value": 3,
                    "get_value_at_offset": 4,
                    "get_value_from_address": 2,
                    "get_value_from_offset": 5,
                    "get_value_from_param_plus_0x40": 1
                },
                "PTR_": {
                    "": 1,
                    "ptr_": 1
                },
                "param_1": {
                    "address": 8,
                    "base_address": 6,
                    "input_address": 1,
                    "input_offset": 1,
                    "input_param": 1,
                    "input_pointer": 2,
                    "memory_address": 3,
                    "offset": 6,
                    "parameter": 1,
                    "pointer_address": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "code": "\nundefined4 get_value_from_offset_08005430(int address)\n\n{\n  return *(undefined4 *)(address + 0x40);\n}\n\n",
            "current_name": "get_value_from_offset_08005430",
            "entrypoint": "0x08005430",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005430": "get_value_from_offset_08005430",
                "param_1": "address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005434": {
            "additional_data": {
                "FUN_08005434": {
                    "calculate_delay": 13,
                    "calculate_iterations": 11,
                    "compute_delay": 1,
                    "count_down": 1,
                    "delay_function": 4,
                    "generate_multiple": 1
                },
                "bVar1": {
                    "continue_loop": 1,
                    "is_delay_complete": 1,
                    "is_delay_ongoing": 1,
                    "is_non_zero": 1,
                    "is_not_zero": 1,
                    "is_positive": 1,
                    "loop_condition": 1
                },
                "local_4": {
                    "adjusted_input": 1,
                    "calculated_value": 3,
                    "computed_delay": 1,
                    "counter": 1,
                    "delay": 2,
                    "delay_count": 11,
                    "delay_counter": 1,
                    "iteration": 1,
                    "iteration_count": 2,
                    "iterations": 1,
                    "loop_counter": 1,
                    "num_iterations": 3,
                    "result": 3
                },
                "param_1": {
                    "delay": 1,
                    "input": 4,
                    "input_value": 25,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005460"
            ],
            "code": "\nvoid calculate_delay_08005434(int input_value)\n\n{\n  bool is_positive;\n  int delay_count;\n  \n  delay_count = input_value * (DAT_20000018 / 8000);\n  do {\n    is_positive = delay_count != 0;\n    delay_count = delay_count + -1;\n  } while (is_positive);\n  return;\n}\n\n",
            "current_name": "calculate_delay_08005434",
            "entrypoint": "0x08005434",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005434": "calculate_delay_08005434",
                "bVar1": "is_positive",
                "local_4": "delay_count",
                "param_1": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005460": {
            "additional_data": {
                "FUN_08005460": {
                    "check_and_control": 1,
                    "check_and_control_system": 1,
                    "check_and_update_configuration": 1,
                    "check_and_update_flags": 1,
                    "check_and_update_settings": 1,
                    "check_condition": 1,
                    "check_conditions": 2,
                    "check_conditions_and_return_status": 1,
                    "check_conditions_and_timers": 1,
                    "check_configuration": 1,
                    "check_device_status": 2,
                    "check_flags": 3,
                    "check_hardware_status": 1,
                    "check_input_conditions": 1,
                    "check_operation_status": 3,
                    "check_status": 4,
                    "check_status_and_delay": 1,
                    "check_system_configuration": 1,
                    "perform_operation": 1,
                    "process_data": 1,
                    "process_flags": 1
                },
                "_DAT_40007000": {
                    "delay_reg2": 1,
                    "hardware_flags": 1,
                    "register_6": 1
                },
                "_DAT_40021000": {
                    "control_system": 1,
                    "register_2": 1,
                    "status_reg": 1
                },
                "_DAT_40021004": {
                    "control_reg": 1,
                    "register_1": 1,
                    "system_flags": 1
                },
                "_DAT_4002101c": {
                    "flag_reg": 1,
                    "hardware_control": 1,
                    "register_5": 1
                },
                "_DAT_40021020": {
                    "flag_reg2": 1,
                    "hardware_control2": 1,
                    "register_7": 1
                },
                "_DAT_40021024": {
                    "delay_reg1": 1,
                    "register_4": 1,
                    "system_flags2": 1
                },
                "_DAT_42420000": {
                    "delay_flag1": 1,
                    "flag1": 1,
                    "register_3": 1
                },
                "_DAT_42420060": {
                    "flag2": 1,
                    "flag_reg3": 1,
                    "register_8": 1
                },
                "_DAT_42420480": {
                    "delay_flag2": 1
                },
                "bVar5": {
                    "bit_value": 1,
                    "condition": 3,
                    "condition_met1": 1,
                    "flag": 3,
                    "has_flag": 1,
                    "is_condition_met": 3,
                    "is_condition_true": 1,
                    "is_false": 2,
                    "is_flag_set": 7,
                    "is_no_data_mode": 1,
                    "is_not_flag_set": 1,
                    "is_set": 5,
                    "is_true": 1,
                    "is_value_set": 1
                },
                "calculate_delay_08005434": {
                    "calculate_delay": 4
                },
                "get_data_value_08003760": {
                    "get_data_value": 4
                },
                "iVar1": {
                    "current_value": 1,
                    "data_value1": 1,
                    "initial_time": 1,
                    "initial_value": 11,
                    "start_time": 4,
                    "start_value": 11
                },
                "iVar2": {
                    "current_time": 5,
                    "current_value": 20,
                    "data_value2": 1,
                    "new_value": 2,
                    "updated_value": 1
                },
                "param_1": {
                    "config": 1,
                    "config_data": 1,
                    "data": 1,
                    "device_status": 2,
                    "flags": 14,
                    "hardware_status": 1,
                    "input_params": 1,
                    "operation_flags": 1,
                    "parameters": 2,
                    "params": 1,
                    "settings": 1,
                    "status": 2,
                    "status_array": 1,
                    "status_params": 1
                },
                "uVar3": {
                    "result": 28,
                    "result_status": 1,
                    "return_value": 1,
                    "status": 1
                },
                "uVar4": {
                    "condition": 1,
                    "param1_1": 1,
                    "param1_value": 2,
                    "param_1_1": 1,
                    "param_value": 3,
                    "status_flag": 1,
                    "temp": 1,
                    "temp1": 1,
                    "value": 19
                }
            },
            "called": [
                "FUN_08003760",
                "FUN_08005434"
            ],
            "calling": [
                "FUN_080035b8"
            ],
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 check_operation_status_08005460(uint *flags)\n\n{\n  int initial_value;\n  int current_value;\n  undefined4 result;\n  uint value;\n  bool is_flag_set;\n  \n  if ((*flags & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (flags[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      value = flags[1];\n      if (value == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (value == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (value == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (flags[1] == 0) {\n        initial_value = get_data_value();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          current_value = get_data_value();\n          if (100 < (uint)(current_value - initial_value)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        initial_value = get_data_value();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          current_value = get_data_value();\n          if (100 < (uint)(current_value - initial_value)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (flags[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n    else if (flags[4] == 0) {\n      _DAT_42420000 = 0;\n      initial_value = get_data_value();\n      while ((_DAT_40021000 & 2) != 0) {\n        current_value = get_data_value();\n        if (2 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      initial_value = get_data_value();\n      while ((_DAT_40021000 & 2) == 0) {\n        current_value = get_data_value();\n        if (2 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flags[6] == 0) {\n      _DAT_42420480 = 0;\n      initial_value = get_data_value();\n      while ((_DAT_40021024 & 2) != 0) {\n        current_value = get_data_value();\n        if (2 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      initial_value = get_data_value();\n      while ((_DAT_40021024 & 2) == 0) {\n        current_value = get_data_value();\n        if (2 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n      calculate_delay(1);\n    }\n  }\n  if ((*flags & 4) != 0) {\n    is_flag_set = (_DAT_4002101c & 0x10000000) == 0;\n    if (is_flag_set) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      initial_value = get_data_value();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        current_value = get_data_value();\n        if (100 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    value = flags[3];\n    if (value == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (value == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (value == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (flags[3] == 0) {\n      initial_value = get_data_value();\n      while ((_DAT_40021020 & 2) != 0) {\n        current_value = get_data_value();\n        if (5000 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      initial_value = get_data_value();\n      while ((_DAT_40021020 & 2) == 0) {\n        current_value = get_data_value();\n        if (5000 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    if (is_flag_set) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (flags[7] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (flags[7] == 2) {\n    _DAT_42420060 = 0;\n    initial_value = get_data_value();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (flags[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | flags[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | flags[8] | flags[9];\n        _DAT_42420060 = 1;\n        initial_value = get_data_value();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          current_value = get_data_value();\n        } while ((uint)(current_value - initial_value) < 3);\n        return 3;\n      }\n      current_value = get_data_value();\n    } while ((uint)(current_value - initial_value) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    initial_value = get_data_value();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      current_value = get_data_value();\n    } while ((uint)(current_value - initial_value) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "current_name": "check_operation_status_08005460",
            "entrypoint": "0x08005460",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005460": "check_operation_status_08005460",
                "bVar5": "is_flag_set",
                "calculate_delay_08005434": "calculate_delay",
                "get_data_value_08003760": "get_data_value",
                "iVar1": "initial_value",
                "iVar2": "current_value",
                "param_1": "flags",
                "uVar3": "result",
                "uVar4": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005840": {
            "additional_data": {
                "DAT_08001300": {
                    "constant_var2": 1
                },
                "FUN_08005840": {
                    "calculate_delay": 15,
                    "calculate_delay_time": 3,
                    "calculate_execution_time": 4,
                    "calculate_frequency": 2,
                    "calculate_function_time": 1,
                    "calculate_time_delay": 1,
                    "calculate_timer_value": 1,
                    "calculate_value": 2,
                    "get_clock_speed": 1,
                    "get_frequency": 1
                },
                "PTR_08001000": {
                    "constant_var1": 1
                },
                "_DAT_40021004": {
                    "condition": 1,
                    "config": 1,
                    "config_register": 2,
                    "config_value": 1,
                    "control_register": 1,
                    "data_register": 1,
                    "data_value": 2,
                    "flag": 2,
                    "flags": 1,
                    "input_data": 1,
                    "input_flag": 1,
                    "input_value": 4,
                    "register_status": 1,
                    "register_value": 2,
                    "status": 1,
                    "status_register": 1
                },
                "local_1c": {
                    "argc": 1,
                    "constant": 1,
                    "constant5": 1,
                    "constant_value": 1,
                    "count": 1,
                    "counter": 4,
                    "data_e": 1,
                    "data_index": 1,
                    "delay_multiplier": 2,
                    "delay_offset": 1,
                    "execution_flags": 1,
                    "execution_time_limit": 1,
                    "execution_time_microseconds": 1,
                    "input": 1,
                    "input_flag": 1,
                    "input_value": 2,
                    "multiplier": 2,
                    "parameter_value": 1,
                    "result": 2,
                    "status_code": 1,
                    "temp_var1": 1,
                    "temperature": 1,
                    "time": 1,
                    "value": 1
                },
                "uStack_10": {
                    "config_value3": 2,
                    "constant2": 5,
                    "constant_c": 1,
                    "constant_value": 1,
                    "constant_value3": 1,
                    "data3": 1,
                    "data_3": 1,
                    "data_c": 1,
                    "data_packet2": 1,
                    "data_value3": 1,
                    "default_processing_time": 1,
                    "determinant": 1,
                    "divisor": 1,
                    "divisor2": 1,
                    "factor2": 1,
                    "mask3": 1,
                    "operand_3": 1,
                    "param3": 1,
                    "temp_var4": 1,
                    "value": 1,
                    "value2": 1,
                    "value3": 3,
                    "value_c": 1
                },
                "uStack_14": {
                    "config_value2": 2,
                    "constant1": 3,
                    "constant3": 2,
                    "constant_b": 1,
                    "constant_value2": 1,
                    "data2": 1,
                    "data_2": 1,
                    "data_b": 1,
                    "data_packet3": 1,
                    "data_value2": 1,
                    "divisor1": 1,
                    "factor": 2,
                    "factor1": 1,
                    "mask2": 1,
                    "multiplier": 3,
                    "operand_2": 1,
                    "optimized_processing_time": 1,
                    "param2": 1,
                    "temp_var3": 1,
                    "value1": 1,
                    "value2": 3,
                    "value_b": 1
                },
                "uStack_18": {
                    "array_value": 1,
                    "base_value": 1,
                    "config_value1": 2,
                    "constant4": 2,
                    "constant_a": 1,
                    "constant_value1": 1,
                    "data1": 1,
                    "data_1": 1,
                    "data_a": 1,
                    "data_packet4": 1,
                    "data_value1": 1,
                    "input_data": 1,
                    "mask": 1,
                    "mask1": 1,
                    "multiplier": 6,
                    "offset_value": 1,
                    "operand_1": 1,
                    "param1": 1,
                    "pattern": 1,
                    "temp_var2": 1,
                    "value1": 3,
                    "value_a": 1
                },
                "uStack_c": {
                    "config_value4": 2,
                    "constant": 4,
                    "constant1": 2,
                    "constant3": 3,
                    "constant_d": 1,
                    "constant_value4": 1,
                    "data4": 1,
                    "data_4": 1,
                    "data_d": 1,
                    "data_packet1": 1,
                    "data_value4": 1,
                    "divisor3": 1,
                    "hardware_address": 1,
                    "mask4": 1,
                    "operand_4": 1,
                    "param4": 1,
                    "random_value": 1,
                    "temp_var5": 1,
                    "value3": 1,
                    "value4": 3,
                    "value_d": 1
                },
                "uVar1": {
                    "delay": 6,
                    "result": 2,
                    "time_delay": 1,
                    "timer_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080058d2"
            ],
            "code": "\n\n\nuint calculate_time_delay_08005840(void)\n\n{\n  uint delay;\n  undefined2 counter;\n  undefined4 multiplier;\n  undefined4 value2;\n  undefined4 constant2;\n  undefined4 constant;\n  \n  constant = 0x10100f0e;\n  constant2 = 0xd0c0b0a;\n  value2 = 0x9080706;\n  multiplier = 0x5040302;\n  counter = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    delay = (uint)*(byte *)((int)&multiplier + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      delay = delay * 4000000;\n    }\n    else {\n      delay = (delay * 8000000) /\n              (uint)*(byte *)((int)&counter - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    delay = 8000000;\n  }\n  return delay;\n}\n\n",
            "current_name": "calculate_time_delay_08005840",
            "entrypoint": "0x08005840",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005840": "calculate_time_delay_08005840",
                "local_1c": "counter",
                "uStack_10": "constant2",
                "uStack_14": "value2",
                "uStack_18": "multiplier",
                "uStack_c": "constant",
                "uVar1": "delay"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080058ac": {
            "additional_data": {
                "DAT_20000018": {
                    "delay_update": 1,
                    "delay_value": 2,
                    "delayed_operation": 1,
                    "delayed_time": 1,
                    "time_delay": 6,
                    "time_delay_result": 2,
                    "time_delay_value": 1,
                    "updated_memory_value": 1
                },
                "FUN_080058ac": {
                    "initialize_and_calculate_delay": 1,
                    "initialize_and_update": 3,
                    "initialize_and_update_memory": 13,
                    "initialize_and_update_memory_with_delay": 1,
                    "initialize_system": 1,
                    "initialize_timeout": 1,
                    "update_memory": 3,
                    "update_memory_and_calculate_delay": 1,
                    "update_memory_and_delay": 1,
                    "update_memory_and_time_delay": 1,
                    "update_settings": 1
                },
                "_DAT_40021000": {
                    "constant_value": 1
                },
                "_DAT_40021004": {
                    "control_flag": 1,
                    "control_flags": 1,
                    "control_register": 1,
                    "data_register2": 1,
                    "global_status": 1,
                    "global_variable2": 1,
                    "memory_control_register": 1,
                    "memory_data": 1,
                    "memory_options": 1,
                    "memory_register": 1,
                    "memory_settings": 3,
                    "memory_status": 1,
                    "memory_update": 1,
                    "register_config": 1,
                    "register_settings": 1,
                    "system_control": 1
                },
                "_DAT_40022000": {
                    "allocation_flags": 1,
                    "data_register": 1,
                    "data_register1": 1,
                    "flag_register": 1,
                    "global_config": 1,
                    "global_variable1": 1,
                    "memory_config": 5,
                    "memory_control_status": 1,
                    "memory_flag": 1,
                    "memory_flags": 2,
                    "memory_settings": 2,
                    "system_status": 1
                },
                "calculate_time_delay_08005840": {
                    "calculate_delay": 2,
                    "calculate_time_delay": 15,
                    "calculate_total_delay": 1
                },
                "get_data_value_08003760": {
                    "get_current_data_value": 1,
                    "get_current_time": 1,
                    "get_current_value": 3,
                    "get_data_value": 12,
                    "get_elapsed_time": 1
                },
                "iVar1": {
                    "init_value": 1,
                    "initial_time": 1,
                    "initial_value": 13,
                    "prev_value": 1,
                    "start_time": 5,
                    "start_value": 1,
                    "starting_time": 1
                },
                "iVar2": {
                    "curr_value": 2,
                    "current_time": 7,
                    "current_value": 12,
                    "updated_value": 2
                },
                "initialize_and_update_memory_080036d8": {
                    "initialize_and_update_memory": 10,
                    "initialize_memory": 2
                },
                "param_1": {
                    "array": 1,
                    "config": 1,
                    "config_data": 1,
                    "config_parameters": 1,
                    "config_params": 2,
                    "configuration_flags": 1,
                    "data": 1,
                    "data_array": 2,
                    "flags": 14,
                    "input_parameters": 1,
                    "input_params": 1,
                    "options": 1,
                    "pointer": 1,
                    "settings_array": 1,
                    "system_config": 1,
                    "timeout_parameters": 1
                },
                "param_2": {
                    "array_size": 1,
                    "buffer_size": 1,
                    "config_size": 2,
                    "data_length": 1,
                    "delay": 1,
                    "delay_time": 1,
                    "input_size": 1,
                    "length": 2,
                    "max_allowed_connections": 1,
                    "max_allowed_value": 1,
                    "max_delay": 1,
                    "max_timeout_value": 1,
                    "num_elements": 1,
                    "num_flags": 1,
                    "param_size": 1,
                    "size": 14
                },
                "uVar3": {
                    "calculated_delay": 1,
                    "calculated_value": 1,
                    "result": 1,
                    "status": 3,
                    "temp_value": 1,
                    "time_delay": 20,
                    "value": 4
                }
            },
            "called": [
                "FUN_080058d2"
            ],
            "calling": [
                "FUN_080035b8"
            ],
            "code": "\n\n\nundefined4 initialize_and_update_memory_with_delay_080058ac(uint *flags,uint size)\n\n{\n  int initial_value;\n  int current_value;\n  uint time_delay;\n  \n  if ((_DAT_40022000 & 7) < size) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | size;\n    if (size != (size & 7)) {\n      return 1;\n    }\n  }\n  if ((*flags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | flags[2];\n  }\n  if ((*flags & 1) != 0) {\n    time_delay = flags[1];\n    if (time_delay == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((time_delay != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = time_delay | _DAT_40021004 & 0xfffffffc;\n    initial_value = get_data_value();\n    if (flags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        current_value = get_data_value();\n        if (5000 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    else if (flags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        current_value = get_data_value();\n        if (5000 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        current_value = get_data_value();\n        if (5000 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (size < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | size;\n    if (size != (size & 7)) {\n      return 1;\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | flags[3];\n  }\n  if ((*flags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | flags[4] << 3;\n  }\n  time_delay = calculate_time_delay();\n  DAT_20000018 = time_delay >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  initialize_and_update_memory(0xf);\n  return 0;\n}\n\n",
            "current_name": "initialize_and_update_memory_with_delay_080058ac",
            "entrypoint": "0x080058ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080058ac": "initialize_and_update_memory_with_delay_080058ac",
                "calculate_time_delay_08005840": "calculate_time_delay",
                "get_data_value_08003760": "get_data_value",
                "iVar1": "initial_value",
                "iVar2": "current_value",
                "initialize_and_update_memory_080036d8": "initialize_and_update_memory",
                "param_1": "flags",
                "param_2": "size",
                "uVar3": "time_delay"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080058d2": {
            "additional_data": {
                "5000": {
                    "time_threshold": 1
                },
                "DAT_20000018": {
                    "delay": 1,
                    "delay_result": 1,
                    "delay_threshold": 1,
                    "delay_value": 3,
                    "final_value": 1,
                    "memory_usage": 1,
                    "result": 2,
                    "time_delay": 12,
                    "time_delay_result": 3
                },
                "FUN_080058d2": {
                    "configure_device": 1,
                    "improve_code": 1,
                    "initialize_and_update": 2,
                    "initialize_and_update_memory": 3,
                    "initialize_data": 1,
                    "initialize_memory": 3,
                    "initialize_memory_and_delay": 1,
                    "initialize_system": 2,
                    "process_configuration": 1,
                    "process_data": 1,
                    "update_and_initialize_memory": 1,
                    "update_config": 1,
                    "update_configuration": 2,
                    "update_configurations": 1,
                    "update_data_and_memory": 1,
                    "update_data_settings": 1,
                    "update_memory_and_delay": 2,
                    "update_parameters": 1,
                    "update_settings": 2
                },
                "_DAT_40021000": {
                    "config_reg1": 1,
                    "config_register": 1,
                    "configuration_register": 1,
                    "constant_1": 1,
                    "control_register": 4,
                    "data": 1,
                    "data_register1": 1,
                    "device_settings": 1,
                    "global_settings": 1,
                    "hardware_reg": 1,
                    "hardware_register1": 1,
                    "hardware_status": 1,
                    "hardware_status_register": 1,
                    "other_register_value": 1,
                    "reg_value": 1,
                    "register_a": 1,
                    "register_value": 1,
                    "status_register": 4,
                    "system_flags": 2
                },
                "_DAT_40021004": {
                    "config": 1,
                    "config_reg": 1,
                    "config_register": 1,
                    "configuration_register": 1,
                    "control_register": 4,
                    "current_value": 1,
                    "data_reg": 1,
                    "data_register": 2,
                    "device_status": 1,
                    "global_settings": 1,
                    "hardware_registers": 1,
                    "memory_address": 1,
                    "memory_buffer": 1,
                    "memory_settings": 1,
                    "memory_value": 1,
                    "register": 1,
                    "register_value": 2,
                    "system_config": 1,
                    "system_status": 1,
                    "updated_configuration_register": 1,
                    "updated_flags": 1
                },
                "_DAT_40022000": {
                    "available_memory": 1,
                    "constant_2": 1,
                    "data_register": 1,
                    "external_device_reg": 1,
                    "mem_value": 1,
                    "memory": 1,
                    "memory_capacity": 1,
                    "memory_reg": 2,
                    "memory_register": 5,
                    "memory_setting": 1,
                    "memory_settings": 1,
                    "memory_size": 3,
                    "memory_status": 1,
                    "memory_value": 1,
                    "output_register": 1,
                    "register_b": 1
                },
                "calculate_time_delay_08005840": {
                    "calculate_delay": 4,
                    "calculate_time_delay": 21
                },
                "get_data_value_08003760": {
                    "get_current_value": 3,
                    "get_data_value": 19,
                    "get_elapsed_time": 1,
                    "get_memory_value": 1,
                    "read_data": 1
                },
                "iVar1": {
                    "initial_data_value": 1,
                    "initial_value": 20,
                    "prev_value": 1,
                    "start_value": 4
                },
                "iVar2": {
                    "current_data_value": 1,
                    "current_value": 21,
                    "new_value": 3
                },
                "initialize_and_update_memory_080036d8": {
                    "init_and_update_memory": 1,
                    "initialize_and_udpate_memory": 1,
                    "initialize_and_update_memory": 17,
                    "initialize_memory": 2,
                    "update_memory": 1
                },
                "param_1": {
                    "config_flags": 5,
                    "data_flags": 1,
                    "device_config": 1,
                    "flags": 19,
                    "options": 1,
                    "settings": 1,
                    "settings_flags": 1,
                    "settings_ptr": 1,
                    "system_flags": 1
                },
                "param_2": {
                    "config_value": 1,
                    "data_size": 1,
                    "delay": 2,
                    "desired_value": 1,
                    "external_device_count": 1,
                    "input_value": 1,
                    "limit": 1,
                    "num": 3,
                    "num_elements": 1,
                    "param": 2,
                    "param_value": 1,
                    "priority": 1,
                    "setting_value": 1,
                    "size": 1,
                    "threshold": 2,
                    "value": 11
                },
                "uVar3": {
                    "data_value": 3,
                    "delay": 1,
                    "flag_value": 1,
                    "option": 1,
                    "option_value": 1,
                    "param_value": 1,
                    "result": 1,
                    "status": 3,
                    "temp": 1,
                    "temp_value": 1,
                    "time_delay": 10,
                    "type": 1,
                    "value": 5
                }
            },
            "called": [
                "FUN_08005840",
                "FUN_080036d8",
                "FUN_08003760"
            ],
            "calling": [
                "FUN_080058ac"
            ],
            "code": "\n\n\nundefined4 update_and_initialize_memory_080058d2(uint *flags,uint value)\n\n{\n  int initial_value;\n  int current_value;\n  uint time_delay;\n  \n  if ((*flags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | flags[2];\n  }\n  if ((*flags & 1) != 0) {\n    time_delay = flags[1];\n    if (time_delay == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((time_delay != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = time_delay | _DAT_40021004 & 0xfffffffc;\n    initial_value = get_data_value();\n    if (flags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        current_value = get_data_value();\n        if (5000 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    else if (flags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        current_value = get_data_value();\n        if (5000 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        current_value = get_data_value();\n        if (5000 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (value < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | value;\n    if (value != (value & 7)) {\n      return 1;\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | flags[3];\n  }\n  if ((*flags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | flags[4] << 3;\n  }\n  time_delay = calculate_time_delay();\n  DAT_20000018 = time_delay >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  initialize_and_update_memory(0xf);\n  return 0;\n}\n\n",
            "current_name": "update_and_initialize_memory_080058d2",
            "entrypoint": "0x080058d2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080058d2": "update_and_initialize_memory_080058d2",
                "calculate_time_delay_08005840": "calculate_time_delay",
                "get_data_value_08003760": "get_data_value",
                "iVar1": "initial_value",
                "iVar2": "current_value",
                "initialize_and_update_memory_080036d8": "initialize_and_update_memory",
                "param_1": "flags",
                "param_2": "value",
                "uVar3": "time_delay"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005a1c": {
            "additional_data": {
                "DAT_20000018": {
                    "constant_value": 1,
                    "data": 10,
                    "data_offset": 1,
                    "data_value": 5,
                    "global_data": 1,
                    "global_value": 3,
                    "global_variable": 2,
                    "global_variable_value": 1,
                    "internal_data": 1,
                    "result": 1
                },
                "D_20000018": {
                    "result": 1
                },
                "FUN_08005a1c": {
                    "get_constant_value": 1,
                    "get_data": 13,
                    "get_data_from_memory": 1,
                    "get_data_offset": 1,
                    "get_data_value": 7,
                    "get_global_data": 1,
                    "get_global_value": 3,
                    "get_global_variable": 2,
                    "get_global_variable_value": 1,
                    "get_internal_data": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080035b8",
                "FUN_08005a48",
                "FUN_08005a28"
            ],
            "code": "\nundefined4 get_data_value_08005a1c(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "current_name": "get_data_value_08005a1c",
            "entrypoint": "0x08005a1c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005a1c": "get_data_value_08005a1c"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005a28": {
            "additional_data": {
                "0x15": {
                    "shift_amount1": 1
                },
                "0x1d": {
                    "shift_amount2": 1
                },
                "DAT_0800a954": {
                    "bit_shift_table": 1,
                    "lookup_table": 1,
                    "shift_array": 4,
                    "shift_lookup_table": 1,
                    "shift_table": 3,
                    "shift_values": 3,
                    "variable_2": 1,
                    "variable_b": 1
                },
                "FUN_08005a28": {
                    "decode_data_value": 1,
                    "extract_and_shift_data": 1,
                    "extract_data_value": 1,
                    "extract_value_and_shift": 1,
                    "extracted_data_shift": 1,
                    "extracted_data_value": 1,
                    "extracted_value_shifted": 1,
                    "get_data_value_shifted": 2,
                    "get_shifted_data": 1,
                    "get_shifted_data_value": 7,
                    "get_shifted_value": 2,
                    "get_value_from_data": 1,
                    "retrieve_data_shifted": 1,
                    "shift_data_value": 6,
                    "shifted_data_value": 3,
                    "shifted_value_by_data_index": 1
                },
                "_DAT_40021004": {
                    "_some_variable": 1,
                    "bit_mask": 1,
                    "bit_shifted_value": 1,
                    "data": 1,
                    "data_offset": 1,
                    "input_data": 2,
                    "input_value": 10,
                    "input_var": 1,
                    "input_variable": 1,
                    "shift": 1,
                    "shift_amount": 2,
                    "shift_value": 3,
                    "shifted_value": 1,
                    "value": 1,
                    "variable_1": 1,
                    "variable_a": 1
                },
                "get_data_value_08005a1c": {
                    "get_data_value": 10,
                    "retrieve_data": 1,
                    "retrieve_data_value": 1
                },
                "uVar1": {
                    "data_value": 27,
                    "extracted_value": 1,
                    "shifted_value": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_08005a1c"
            ],
            "calling": [
                "FUN_080075dc",
                "FUN_08006538",
                "FUN_080045c0"
            ],
            "code": "\n\n\nuint get_data_value_shifted_08005a28(void)\n\n{\n  uint data_value;\n  \n  data_value = get_data_value();\n  return data_value >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "current_name": "get_data_value_shifted_08005a28",
            "entrypoint": "0x08005a28",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005a28": "get_data_value_shifted_08005a28",
                "get_data_value_08005a1c": "get_data_value",
                "uVar1": "data_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005a48": {
            "additional_data": {
                "DAT_0800a954": {
                    "shift_amount": 1,
                    "shift_array": 3,
                    "shift_index": 1,
                    "shift_lookup_table": 1,
                    "shift_table": 5,
                    "shift_values": 2
                },
                "FUN_08005a48": {
                    "decode_data_value": 1,
                    "extract_and_shift": 1,
                    "extract_and_shift_value": 1,
                    "extract_data_value": 1,
                    "extract_data_value_right_shift": 1,
                    "extracted_data_shift": 1,
                    "extracted_data_value": 2,
                    "get_adjusted_data_value": 1,
                    "get_shifted_data_value": 12,
                    "retrieve_shifted_data": 1,
                    "shift_data_value": 5,
                    "shift_value_based_on_data": 1,
                    "shifted_data_value": 3
                },
                "_DAT_40021004": {
                    "data_constant": 1,
                    "data_mask": 1,
                    "data_ptr": 1,
                    "data_value": 2,
                    "input_data": 2,
                    "input_value": 11,
                    "input_variable": 1,
                    "shift": 1,
                    "shift_amount": 2,
                    "shift_argument": 1,
                    "shift_constant": 1,
                    "shift_value": 4,
                    "shifted_value": 1
                },
                "get_data_value_08005a1c": {
                    "get_data_value": 14
                },
                "uVar1": {
                    "adjusted_data_value": 1,
                    "data_value": 28
                }
            },
            "called": [
                "FUN_08005a1c"
            ],
            "calling": [
                "FUN_080075dc",
                "FUN_08006538",
                "FUN_08005bb8"
            ],
            "code": "\n\n\nuint get_shifted_data_value_08005a48(void)\n\n{\n  uint data_value;\n  \n  data_value = get_data_value();\n  return data_value >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "current_name": "get_shifted_data_value_08005a48",
            "entrypoint": "0x08005a48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005a48": "get_shifted_data_value_08005a48",
                "get_data_value_08005a1c": "get_data_value",
                "uVar1": "data_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005a68": {
            "additional_data": {
                "FUN_08005a68": {
                    "configure_hardware": 1,
                    "extract_data": 1,
                    "initialize_address_info": 1,
                    "initialize_data": 6,
                    "initialize_param": 1,
                    "initialize_param_values": 1,
                    "initialize_parameters": 9,
                    "initialize_params": 6,
                    "initialize_values": 1,
                    "set_param_values": 2,
                    "set_parameters": 1,
                    "set_params": 1
                },
                "_DAT_40021004": {
                    "address_register": 1,
                    "data": 1,
                    "data1": 2,
                    "data_register": 5,
                    "data_register_1": 2,
                    "data_value": 1,
                    "data_value1": 1,
                    "hardware_register1": 1,
                    "input_data": 6,
                    "input_value": 3,
                    "input_value_1": 2,
                    "memory_value_1": 1,
                    "register_value": 2,
                    "system_status": 1
                },
                "_DAT_40022000": {
                    "additional_data": 1,
                    "address": 1,
                    "address_register": 1,
                    "config_register": 1,
                    "control_register": 1,
                    "data2": 2,
                    "data_register": 2,
                    "data_register_2": 2,
                    "data_value": 1,
                    "data_value2": 1,
                    "hardware_register2": 1,
                    "hardware_status": 1,
                    "input_value2": 1,
                    "input_value_2": 2,
                    "memory_address": 1,
                    "memory_register": 1,
                    "memory_value": 2,
                    "memory_value_2": 1,
                    "output_data": 3,
                    "output_value": 1,
                    "ptr_data": 1,
                    "status_register": 1
                },
                "config_value": {
                    "config_register_bitwise_7": 1
                },
                "inputData": {
                    "input_data": 1
                },
                "input_values": {
                    "input_flags": 1
                },
                "outputData": {
                    "output_data": 1
                },
                "output_value": {
                    "0xf": 1
                },
                "output_values": {
                    "result": 1
                },
                "paramArray": {
                    "param_array": 1
                },
                "param_1": {
                    "address_info_ptr": 1,
                    "output": 1,
                    "output_arr": 1,
                    "output_array": 11,
                    "output_buffer": 3,
                    "output_param": 1,
                    "output_parameters": 2,
                    "output_params": 4,
                    "output_pointer": 1,
                    "output_values": 1,
                    "param_array": 2,
                    "result_array": 2,
                    "status_registers": 1
                },
                "param_2": {
                    "address_data_ptr": 1,
                    "config": 1,
                    "config_array": 2,
                    "control_flags": 1,
                    "control_registers": 1,
                    "control_value": 1,
                    "data_array": 1,
                    "input_arr": 1,
                    "input_array": 5,
                    "input_buffer": 2,
                    "input_param": 1,
                    "input_parameters": 1,
                    "input_params": 3,
                    "input_pointer": 2,
                    "input_values": 1,
                    "output_value": 1,
                    "output_values": 2,
                    "result": 1,
                    "result_array": 1,
                    "status_array": 1,
                    "status_flags": 1
                },
                "result": {
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080075dc"
            ],
            "code": "\n\n\nvoid initialize_parameters_08005a68(undefined4 *output_array,uint *input_array)\n\n{\n  *output_array = 0xf;\n  output_array[1] = _DAT_40021004 & 3;\n  output_array[2] = _DAT_40021004 & 0xf0;\n  output_array[3] = _DAT_40021004 & 0x700;\n  output_array[4] = _DAT_40021004 >> 3 & 0x700;\n  *input_array = _DAT_40022000 & 7;\n  return;\n}\n\n",
            "current_name": "initialize_parameters_08005a68",
            "entrypoint": "0x08005a68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005a68": "initialize_parameters_08005a68",
                "param_1": "output_array",
                "param_2": "input_array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005aa4": {
            "additional_data": {
                "FUN_08005aa4": {
                    "configure_hardware": 1,
                    "initialize_and_configure": 1,
                    "initialize_component": 1,
                    "initialize_device": 3,
                    "initialize_flags": 1,
                    "initialize_parameters": 1,
                    "initialize_system": 3,
                    "process_data": 2,
                    "process_flags": 1,
                    "update_config": 1,
                    "update_configuration": 2,
                    "update_control_registers": 1,
                    "update_data": 4,
                    "update_data_parameters": 1,
                    "update_data_registers": 1,
                    "update_data_values": 1,
                    "update_flags": 1,
                    "update_settings": 3,
                    "update_system_config": 1
                },
                "_DAT_40007000": {
                    "bitwise_flag2": 1,
                    "constant2": 1,
                    "data_register": 1,
                    "data_register2": 1,
                    "device_config2": 1,
                    "original_flag2": 1,
                    "register2": 4,
                    "register3": 1
                },
                "_DAT_40021004": {
                    "control_register": 1,
                    "data_register5": 1,
                    "register5": 3,
                    "settings_register": 1,
                    "variable2": 1
                },
                "_DAT_4002101c": {
                    "bitwise_flag1": 1,
                    "constant1": 1,
                    "data_register1": 1,
                    "device_config1": 1,
                    "flags_register": 1,
                    "original_flag1": 1,
                    "register1": 5
                },
                "_DAT_40021020": {
                    "bitwise_flag3": 1,
                    "config_register": 1,
                    "constant3": 1,
                    "data_register3": 1,
                    "device_config3": 1,
                    "original_flag3": 1,
                    "register2": 1,
                    "register3": 4
                },
                "_DAT_42420440": {
                    "data_register4": 1,
                    "device_config4": 1,
                    "register4": 5,
                    "temp_data": 1,
                    "unused_var1": 1,
                    "variable1": 1
                },
                "bVar5": {
                    "condition": 1,
                    "flag": 4,
                    "flag_condition": 1,
                    "flag_status": 2,
                    "flag_var": 1,
                    "has_original_flag": 1,
                    "is_bit_set": 1,
                    "is_first_initialization": 1,
                    "is_flag_set": 16,
                    "is_module_enabled": 1,
                    "should_activate": 1,
                    "should_set_flag": 1
                },
                "get_data_value_08003760": {
                    "get_data_value": 4
                },
                "iVar3": {
                    "data_value1": 2,
                    "index_var1": 1,
                    "initial_value": 23,
                    "initial_value1": 1,
                    "start_value": 3,
                    "value1": 1
                },
                "iVar4": {
                    "current_value": 24,
                    "current_value1": 1,
                    "data_value2": 2,
                    "index_var2": 1,
                    "new_value": 2,
                    "value2": 1
                },
                "param_1": {
                    "config_bits": 1,
                    "config_flags": 1,
                    "config_params": 2,
                    "config_values": 1,
                    "configuration": 1,
                    "control_params": 1,
                    "data": 5,
                    "data_params": 1,
                    "data_registers": 1,
                    "data_values": 1,
                    "device_config": 1,
                    "device_flags": 1,
                    "device_settings": 1,
                    "flags": 4,
                    "hardware_configuration": 1,
                    "input_values": 1,
                    "inputs": 1,
                    "parameters": 1,
                    "settings": 3,
                    "system_config": 1,
                    "system_flags": 1
                },
                "uVar1": {
                    "bit_flag1": 1,
                    "data_value1": 1,
                    "flag": 1,
                    "flag1": 5,
                    "mask1": 2,
                    "result1": 1,
                    "temp1": 2,
                    "temp_flag": 3,
                    "temp_var1": 11,
                    "value1": 4
                },
                "uVar2": {
                    "bit_flag2": 1,
                    "data_value2": 1,
                    "flag2": 6,
                    "mask2": 2,
                    "result2": 1,
                    "temp2": 2,
                    "temp_flag2": 2,
                    "temp_value": 1,
                    "temp_var2": 11,
                    "value2": 4
                }
            },
            "called": [
                "FUN_08003760"
            ],
            "calling": [
                "FUN_080035b8"
            ],
            "code": "\n\n\nundefined4 update_data_values_08005aa4(uint *data)\n\n{\n  uint temp_var1;\n  uint temp_var2;\n  int initial_value;\n  int current_value;\n  bool is_flag_set;\n  \n  if ((*data & 1) != 0) {\n    is_flag_set = (_DAT_4002101c & 0x10000000) == 0;\n    if (is_flag_set) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      initial_value = get_data_value();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        current_value = get_data_value();\n        if (100 < (uint)(current_value - initial_value)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (data[1] & 0x300))) {\n      temp_var2 = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      temp_var1 = _DAT_40021020 & 1;\n      _DAT_40021020 = temp_var2;\n      if (temp_var1 != 0) {\n        initial_value = get_data_value();\n        while ((_DAT_40021020 & 2) == 0) {\n          current_value = get_data_value();\n          if (5000 < (uint)(current_value - initial_value)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | data[1];\n    if (is_flag_set) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*data & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | data[2];\n  }\n  if ((*data & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | data[3];\n  }\n  return 0;\n}\n\n",
            "current_name": "update_data_values_08005aa4",
            "entrypoint": "0x08005aa4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005aa4": "update_data_values_08005aa4",
                "bVar5": "is_flag_set",
                "get_data_value_08003760": "get_data_value",
                "iVar3": "initial_value",
                "iVar4": "current_value",
                "param_1": "data",
                "uVar1": "temp_var1",
                "uVar2": "temp_var2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005bb8": {
            "additional_data": {
                "FUN_08005bb8": {
                    "calculate_clock_speed": 1,
                    "calculate_data": 1,
                    "calculate_data_value": 10,
                    "calculate_parameter": 1,
                    "calculate_parameter_value": 4,
                    "calculate_shifted_data": 1,
                    "calculate_shifted_data_value": 6,
                    "calculate_some_value": 1,
                    "calculate_value": 5,
                    "get_modified_value": 1
                },
                "_DAT_40021000": {
                    "data2": 1,
                    "data_value2": 1,
                    "flag1": 1,
                    "variable2": 1
                },
                "_DAT_40021004": {
                    "data1": 1,
                    "data_value1": 1,
                    "shifted_data": 1,
                    "variable1": 1
                },
                "_DAT_40021020": {
                    "data4": 1,
                    "flag2": 1,
                    "variable3": 1
                },
                "_DAT_40021024": {
                    "data5": 1,
                    "flag3": 1,
                    "variable4": 1
                },
                "byte": {
                    "data3": 1
                },
                "local_24": {
                    "constant": 1,
                    "constant1": 1,
                    "constant_1": 2,
                    "constant_value": 3,
                    "data": 3,
                    "data_shift": 1,
                    "flag1": 1,
                    "shift_amount": 1,
                    "shift_data": 1,
                    "shift_value": 3,
                    "shifted_data": 7,
                    "shifted_data_value": 1,
                    "shifted_value": 6
                },
                "param_1": {
                    "data_type": 1,
                    "data_value": 3,
                    "input": 7,
                    "input_param": 1,
                    "input_value": 15,
                    "mode": 1,
                    "parameter": 3
                },
                "uStack_14": {
                    "constant1": 3,
                    "constant3": 1,
                    "constant4": 2,
                    "constant5": 1,
                    "constant_1": 3,
                    "constant_3": 1,
                    "constant_4": 1,
                    "constant_5": 1,
                    "constant_d": 1,
                    "constant_value": 1,
                    "constant_value4": 2,
                    "constant_value_2": 1,
                    "constant_value_4": 1,
                    "data_value3": 2,
                    "divider2": 1,
                    "flag5": 1,
                    "initial_value": 1,
                    "shifted_data5": 1,
                    "shifted_value4": 1,
                    "stack_value4": 1,
                    "temp2": 1,
                    "value2": 1,
                    "value_1_a": 1,
                    "var4": 1
                },
                "uStack_18": {
                    "constant2": 4,
                    "constant3": 2,
                    "constant4": 1,
                    "constant_2": 4,
                    "constant_4": 1,
                    "constant_c": 1,
                    "constant_value3": 2,
                    "constant_value_3": 1,
                    "data_value2": 2,
                    "divider1": 1,
                    "flag4": 1,
                    "multiplier_2": 1,
                    "shifted_data4": 1,
                    "shifted_data_value": 1,
                    "shifted_value3": 1,
                    "special_flag": 1,
                    "stack_value3": 1,
                    "temp3": 1,
                    "value1": 1,
                    "value_1_b": 1,
                    "var3": 1
                },
                "uStack_1c": {
                    "constant2": 2,
                    "constant3": 4,
                    "constant_3": 5,
                    "constant_b": 1,
                    "constant_value2": 2,
                    "constant_value_2": 1,
                    "divisor": 1,
                    "flag3": 1,
                    "multiplier2": 1,
                    "shift_value": 1,
                    "shifted_data3": 1,
                    "shifted_value2": 1,
                    "stack_value2": 1,
                    "value_1_c": 1,
                    "var2": 1
                },
                "uStack_20": {
                    "constant1": 3,
                    "constant2": 1,
                    "constant4": 2,
                    "constant_2": 2,
                    "constant_4": 3,
                    "constant_a": 1,
                    "constant_value": 1,
                    "constant_value1": 1,
                    "constant_value_1": 1,
                    "data_multiplier": 1,
                    "data_value1": 2,
                    "divisor": 1,
                    "extra_multiplier": 1,
                    "flag2": 1,
                    "multiplier1": 1,
                    "multiplier_1": 1,
                    "shift_value": 1,
                    "shifted_data2": 1,
                    "shifted_factor": 1,
                    "shifted_value": 1,
                    "shifted_value1": 1,
                    "stack_value1": 1,
                    "temp4": 1,
                    "var1": 1
                },
                "uVar1": {
                    "calculated_value": 1,
                    "clock_speed": 1,
                    "data_value": 2,
                    "result": 27
                }
            },
            "called": [
                "FUN_08005a48"
            ],
            "calling": [
                "FUN_08003e20",
                "FUN_0800376c"
            ],
            "code": "\n\n\nuint calculate_shifted_data_value_08005bb8(int input_value)\n\n{\n  uint result;\n  undefined2 shifted_data;\n  undefined4 constant1;\n  undefined4 constant_3;\n  undefined4 constant_2;\n  undefined4 constant_1;\n  \n  constant_1 = 0x10100f0e;\n  constant_2 = 0xd0c0b0a;\n  constant_3 = 0x9080706;\n  constant1 = 0x5040302;\n  shifted_data = 0x201;\n  if (input_value == 2) {\n    result = get_shifted_data_value_08005a48();\n    result = result / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (input_value == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      result = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        result = 4000000;\n      }\n      else {\n        result = 8000000 / *(data3 *)((int)&shifted_data - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      result = result * *(data3 *)((int)&constant1 + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        result = (result * 2) / 3;\n      }\n    }\n  }\n  else if (input_value == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      result = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      result = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        result = 0;\n      }\n      else {\n        result = 0xf424;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "current_name": "calculate_shifted_data_value_08005bb8",
            "entrypoint": "0x08005bb8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005bb8": "calculate_shifted_data_value_08005bb8",
                "byte": "data3",
                "local_24": "shifted_data",
                "param_1": "input_value",
                "uStack_14": "constant_1",
                "uStack_18": "constant_2",
                "uStack_1c": "constant_3",
                "uStack_20": "constant1",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005cb4": {
            "additional_data": {
                "DAT_40010414": {
                    "data": 1,
                    "global_flag": 1
                },
                "FUN_08005cb4": {
                    "check_and_execute_callback": 2,
                    "execute_and_reset": 1,
                    "execute_and_reset_flags": 6,
                    "execute_and_reset_param_1": 1,
                    "execute_and_set_flags": 1,
                    "execute_and_update_data": 1,
                    "execute_and_update_memory": 1,
                    "execute_callback": 2,
                    "execute_callback_and_reset": 3,
                    "execute_callback_and_reset_flag": 1,
                    "execute_callback_and_set_flag": 1,
                    "execute_callback_if_bit_is_set": 1,
                    "execute_callback_if_both_flags_set": 1,
                    "execute_callback_if_flags_set": 1,
                    "execute_function_and_update_flags": 1,
                    "initialize_and_execute": 1,
                    "initialize_data": 1,
                    "initialize_memory": 2,
                    "process_param": 1,
                    "set_flag_and_execute_callback": 1,
                    "update_callback_and_flag": 1
                },
                "PTR_": {
                    "unchanged": 1
                },
                "PTR_08005ccd": {
                    "ptr": 1
                },
                "PTR_08005cd0": {
                    "ptr_flag": 1
                },
                "_DAT_40010414": {
                    "constant_address": 1,
                    "constant_value": 2,
                    "data": 2,
                    "data_1": 1,
                    "data_40010414": 3,
                    "data_address": 1,
                    "data_register": 2,
                    "data_variable": 1,
                    "memory_address": 3,
                    "memory_location": 2,
                    "output_register": 1,
                    "some_constant": 1,
                    "some_data_variable": 1
                },
                "execute_callback_function_080073c0": {
                    "execute_callback": 12,
                    "execute_callback_function": 8,
                    "execute_custom_callback": 1,
                    "execute_specific_callback": 1
                },
                "int": {
                    "temp_int": 1
                },
                "param_1": {
                    "callback_data": 3,
                    "callback_flags": 3,
                    "callback_param": 2,
                    "callback_parameters": 1,
                    "data": 1,
                    "flags": 3,
                    "flags_ptr": 2,
                    "function_flags": 1,
                    "function_parameters": 2,
                    "input_data": 1,
                    "input_param": 1,
                    "input_params": 1,
                    "memory": 1,
                    "memory_pointer": 1,
                    "param": 3,
                    "parameter": 1,
                    "parameters": 1,
                    "params": 1,
                    "updated_data": 1
                },
                "undefined": {
                    "temp_undefined": 1
                }
            },
            "called": [
                "FUN_080073c0"
            ],
            "calling": [],
            "code": "\n\n\nvoid execute_and_reset_flags_08005cb4(utemp_int **callback_data)\n\n{\n  if (((**callback_data & 2) != 0) && (((*callback_data)[1] & 2) != 0)) {\n    execute_callback();\n    (*callback_data)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(temp_undefined *)((temp_int)callback_data + 0x11) = 1;\n  return;\n}\n\n",
            "current_name": "execute_and_reset_flags_08005cb4",
            "entrypoint": "0x08005cb4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005cb4": "execute_and_reset_flags_08005cb4",
                "execute_callback_function_080073c0": "execute_callback",
                "int": "temp_int",
                "param_1": "callback_data",
                "undefined": "temp_undefined"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005cec": {
            "additional_data": {
                "0x18": {
                    "another_flag_offset": 1
                },
                "0x20": {
                    "flag_offset": 1
                },
                "0x34": {
                    "value_offset": 1
                },
                "0x40012c00": {
                    "special_address": 1
                },
                "FUN_08005cec": {
                    "initialize_parameters": 1,
                    "modify_parameters": 1,
                    "update_config": 2,
                    "update_data": 4,
                    "update_flags_and_values": 1,
                    "update_param": 2,
                    "update_param_values": 1,
                    "update_parameter_values": 1,
                    "update_parameters": 11,
                    "update_params": 5,
                    "update_registers": 2
                },
                "param_1": {
                    "address": 1,
                    "base_address": 15,
                    "config_address": 1,
                    "config_base": 1,
                    "data_address": 3,
                    "data_ptr": 1,
                    "param": 2,
                    "param_address": 1,
                    "param_base": 1,
                    "param_base_address": 2,
                    "parameter1": 1,
                    "register_address": 2
                },
                "param_2": {
                    "config_data": 1,
                    "config_values": 1,
                    "data": 1,
                    "data_array": 1,
                    "input_data": 1,
                    "new_params": 1,
                    "new_values": 2,
                    "param_array": 2,
                    "param_ptr": 1,
                    "param_values": 4,
                    "parameter2": 1,
                    "parameter_array": 1,
                    "parameters": 7,
                    "params": 1,
                    "params_array": 1,
                    "register_values": 1,
                    "source_params": 1,
                    "values": 3
                },
                "uVar1": {
                    "modified_base_address": 1,
                    "modified_config1": 1,
                    "modified_value1": 2,
                    "new_u_var1": 1,
                    "new_var1": 1,
                    "updated_flag": 1,
                    "updated_flag1": 1,
                    "updated_param1": 1,
                    "updated_param_1": 1,
                    "updated_register": 1,
                    "updated_register1": 1,
                    "updated_value1": 10,
                    "updated_var1": 9
                },
                "uVar2": {
                    "modified_config2": 1,
                    "modified_value": 1,
                    "modified_value2": 2,
                    "new_u_var2": 1,
                    "new_var2": 1,
                    "param_value": 1,
                    "register_value": 1,
                    "updated_flag2": 1,
                    "updated_param2": 1,
                    "updated_param_2": 1,
                    "updated_register2": 1,
                    "updated_value2": 10,
                    "updated_var2": 9
                },
                "uVar3": {
                    "config_value1": 1,
                    "data_value": 1,
                    "modified_value3": 1,
                    "new_u_var3": 1,
                    "new_value": 2,
                    "new_var3": 1,
                    "updated_param3": 1,
                    "updated_param_3": 1,
                    "updated_register3": 1,
                    "updated_value": 1,
                    "updated_value3": 10,
                    "updated_var3": 9,
                    "value3": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006128",
                "FUN_08006186"
            ],
            "code": "\nvoid update_parameters_08005cec(int base_address,uint *parameters)\n\n{\n  uint updated_value1;\n  uint updated_value2;\n  uint updated_value3;\n  \n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & 0xfffffffe;\n  updated_value2 = *(uint *)(base_address + 4);\n  updated_value3 = *parameters;\n  updated_value1 = *(uint *)(base_address + 0x20) & 0xfffffffd | parameters[2];\n  if (base_address == 0x40012c00) {\n    updated_value1 = (updated_value1 & 0xfffffff7 | parameters[3]) & 0xfffffffb;\n    updated_value2 = updated_value2 & 0xfffffcff | parameters[5] | parameters[6];\n  }\n  *(uint *)(base_address + 4) = updated_value2;\n  *(uint *)(base_address + 0x18) = *(uint *)(base_address + 0x18) & 0xffffff8c | updated_value3;\n  *(uint *)(base_address + 0x34) = parameters[1];\n  *(uint *)(base_address + 0x20) = updated_value1;\n  return;\n}\n\n",
            "current_name": "update_parameters_08005cec",
            "entrypoint": "0x08005cec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005cec": "update_parameters_08005cec",
                "param_1": "base_address",
                "param_2": "parameters",
                "uVar1": "updated_value1",
                "uVar2": "updated_value2",
                "uVar3": "updated_value3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005d48": {
            "additional_data": {
                "0x1c": {
                    "value_offset3": 1
                },
                "0x20": {
                    "register4": 1,
                    "value_offset1": 1
                },
                "0x3c": {
                    "offset2": 1,
                    "value_offset4": 1
                },
                "0x4": {
                    "value_offset2": 1
                },
                "0x40012c00": {
                    "constant": 1,
                    "constant_value": 1,
                    "specific_address": 1
                },
                "0xffffcfff": {
                    "mask5": 1
                },
                "0xfffff7ff": {
                    "mask3": 1
                },
                "0xfffffbff": {
                    "mask4": 1
                },
                "0xfffffdff": {
                    "bit_mask2": 1,
                    "mask2": 1
                },
                "0xfffffeff": {
                    "bit_mask1": 1,
                    "mask1": 1
                },
                "0xffffff8c": {
                    "bit_mask3": 1,
                    "mask6": 1
                },
                "4": {
                    "offset1": 1
                },
                "FUN_08005d48": {
                    "set_configuration": 1,
                    "set_parameters": 1,
                    "update_config": 1,
                    "update_configuration": 1,
                    "update_data": 3,
                    "update_data_and_set_flags": 1,
                    "update_data_fields": 1,
                    "update_function": 1,
                    "update_memory_values": 1,
                    "update_parameter": 3,
                    "update_parameters": 11,
                    "update_params": 2,
                    "update_register": 1,
                    "update_registers": 1,
                    "update_settings": 1,
                    "update_values": 1
                },
                "param_1": {
                    "address": 5,
                    "base_address": 10,
                    "config_address": 3,
                    "data": 1,
                    "data_address": 1,
                    "function_address": 1,
                    "input_address": 1,
                    "memory_address": 1,
                    "param_address": 3,
                    "param_offset": 1,
                    "parameter1": 1,
                    "register_address": 1,
                    "register_base_address": 1,
                    "settings_address": 1
                },
                "param_2": {
                    "config_data": 3,
                    "data": 2,
                    "data_values": 1,
                    "input_data": 1,
                    "input_params": 1,
                    "param_array": 1,
                    "param_values": 3,
                    "parameter2": 1,
                    "parameter_array": 1,
                    "parameters": 9,
                    "params": 2,
                    "values": 6
                },
                "uVar1": {
                    "flags1": 1,
                    "mask": 1,
                    "modified_u_var1": 1,
                    "modified_value1": 5,
                    "new_param1": 1,
                    "updated_config": 1,
                    "updated_flag": 1,
                    "updated_param1": 1,
                    "updated_value1": 14,
                    "updated_var1": 5
                },
                "uVar2": {
                    "flags2": 1,
                    "mask": 1,
                    "modified_u_var2": 1,
                    "modified_value2": 5,
                    "new_param2": 1,
                    "previous_value": 2,
                    "updated_param2": 1,
                    "updated_value2": 14,
                    "updated_var2": 5
                },
                "uVar3": {
                    "data_value": 1,
                    "input_value": 1,
                    "modified_u_var3": 1,
                    "modified_value3": 1,
                    "new_param3": 1,
                    "new_value": 2,
                    "param_value": 3,
                    "parameter_value": 1,
                    "updated_param3": 1,
                    "updated_value3": 12,
                    "updated_var3": 5,
                    "value": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08006128",
                "FUN_08006186"
            ],
            "code": "\nvoid update_parameters_08005d48(int base_address,uint *parameters)\n\n{\n  uint updated_value1;\n  uint updated_value2;\n  uint updated_value3;\n  \n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & 0xfffffeff;\n  updated_value2 = *(uint *)(base_address + 4);\n  updated_value3 = *parameters;\n  updated_value1 = *(uint *)(base_address + 0x20) & 0xfffffdff | parameters[2] << 8;\n  if (base_address == 0x40012c00) {\n    updated_value1 = (updated_value1 & 0xfffff7ff | parameters[3] << 8) & 0xfffffbff;\n    updated_value2 = updated_value2 & 0xffffcfff | parameters[5] << 4 | parameters[6] << 4;\n  }\n  *(uint *)(base_address + 4) = updated_value2;\n  *(uint *)(base_address + 0x1c) = *(uint *)(base_address + 0x1c) & 0xffffff8c | updated_value3;\n  *(uint *)(base_address + 0x3c) = parameters[1];\n  *(uint *)(base_address + 0x20) = updated_value1;\n  return;\n}\n\n",
            "current_name": "update_parameters_08005d48",
            "entrypoint": "0x08005d48",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005d48": "update_parameters_08005d48",
                "param_1": "base_address",
                "param_2": "parameters",
                "uVar1": "updated_value1",
                "uVar2": "updated_value2",
                "uVar3": "updated_value3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005dac": {
            "additional_data": {
                "FUN_08005dac": {
                    "update_config": 2,
                    "update_configuration": 1,
                    "update_data": 3,
                    "update_function": 2,
                    "update_memory": 1,
                    "update_param": 1,
                    "update_param_values": 3,
                    "update_parameter_values": 2,
                    "update_parameters": 9,
                    "update_params": 5,
                    "update_registers": 1
                },
                "iVar2": {
                    "data_value1": 1,
                    "first_param": 5,
                    "first_param_value": 1,
                    "first_parameter": 1,
                    "param2_value": 1,
                    "param2_var": 1,
                    "param2_var1": 1,
                    "param_2_0": 1,
                    "param_value1": 1,
                    "param_value_1": 1,
                    "second_param": 1,
                    "temp_value2": 1,
                    "value1": 9,
                    "value2": 6
                },
                "iVar3": {
                    "data_value2": 1,
                    "param2_var2": 2,
                    "param3_value": 1,
                    "param_2_2": 1,
                    "param_value2": 1,
                    "param_value_2": 1,
                    "second_param": 1,
                    "second_param_value": 1,
                    "temp_value3": 1,
                    "third_param": 5,
                    "third_parameter": 1,
                    "value2": 9,
                    "value3": 6
                },
                "param_1": {
                    "address": 2,
                    "base_address": 16,
                    "config_address": 2,
                    "config_ptr": 1,
                    "data_address": 3,
                    "function_address": 2,
                    "memory_address": 1,
                    "param_address": 1,
                    "param_base": 1,
                    "parameter1": 1,
                    "ptr_to_struct": 1
                },
                "param_2": {
                    "array_ptr": 1,
                    "config_data": 1,
                    "config_values": 1,
                    "data": 2,
                    "data_values": 1,
                    "param_array": 8,
                    "param_values": 2,
                    "parameter2": 1,
                    "parameter_array": 1,
                    "parameters": 6,
                    "params_array": 5,
                    "params_ptr": 1,
                    "ptr_to_array": 1
                },
                "uVar1": {
                    "config_value": 1,
                    "first_param": 1,
                    "flag": 2,
                    "flag_value": 1,
                    "flags": 4,
                    "new_value": 1,
                    "old_flags": 1,
                    "original_value": 4,
                    "param1_value": 1,
                    "param_2_4": 1,
                    "param_value": 1,
                    "ptr_value1": 1,
                    "register_value": 1,
                    "temp_value": 1,
                    "temp_value1": 1,
                    "updated_value": 2,
                    "value": 1,
                    "value1": 5
                }
            },
            "called": [],
            "calling": [
                "FUN_08006128",
                "FUN_08006186"
            ],
            "code": "\nvoid update_parameters_08005dac(int base_address,int *param_array)\n\n{\n  uint value1;\n  int value1;\n  int value2;\n  \n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & 0xffffefff;\n  value1 = *(uint *)(base_address + 4);\n  value1 = *param_array;\n  value2 = param_array[2];\n  if (base_address == 0x40012c00) {\n    value1 = value1 & 0xffffbfff | param_array[5] << 6;\n  }\n  *(uint *)(base_address + 4) = value1;\n  *(uint *)(base_address + 0x1c) = *(uint *)(base_address + 0x1c) & 0xffff8cff | value1 << 8;\n  *(int *)(base_address + 0x40) = param_array[1];\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & 0xffffdfff | value2 << 0xc;\n  return;\n}\n\n",
            "current_name": "update_parameters_08005dac",
            "entrypoint": "0x08005dac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005dac": "update_parameters_08005dac",
                "iVar2": "value1",
                "iVar3": "value2",
                "param_1": "base_address",
                "param_2": "param_array",
                "uVar1": "value1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005df4": {
            "additional_data": {
                "DAT_08005e28": {
                    "constant_1": 1
                },
                "DAT_08005e29": {
                    "constant_2": 1
                },
                "FUN_08005df4": {
                    "initialize_and_check_configuration": 1,
                    "initialize_and_clear": 2,
                    "initialize_and_clear_data": 1,
                    "initialize_and_clear_memory": 1,
                    "initialize_and_clear_registers": 1,
                    "initialize_and_control": 1,
                    "initialize_and_modify_registers": 2,
                    "initialize_and_reset": 2,
                    "initialize_and_set_control_registers": 2,
                    "initialize_and_set_controls": 1,
                    "initialize_and_update_registers": 1,
                    "initialize_control_registers": 2,
                    "initialize_device": 1,
                    "initialize_function": 1,
                    "initialize_registers": 6,
                    "initialize_system": 2,
                    "set_control_registers": 1,
                    "update_control_registers": 2
                },
                "initialize_control_registers_08007710": {
                    "initialize_control_registers": 17,
                    "initialize_control_registers_08007710": 1,
                    "initialize_registers": 1
                },
                "param_1": {
                    "configuration_data": 1,
                    "control_parameters": 1,
                    "control_registers": 5,
                    "data_pointer": 1,
                    "device": 1,
                    "function_params": 1,
                    "input_params": 1,
                    "param": 2,
                    "parameter": 1,
                    "parameters": 5,
                    "params": 1,
                    "pointer": 1,
                    "ptr_parameters": 1,
                    "register_array": 2,
                    "register_ptr": 1,
                    "registers": 4,
                    "system_parameters": 1,
                    "system_params": 1
                },
                "puVar1": {
                    "array_pointer": 1,
                    "config_data_ptr": 1,
                    "current_register": 4,
                    "current_values": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "pointer": 4,
                    "pointer_to_control_parameters": 1,
                    "pointer_to_registers": 1,
                    "pointer_to_system_parameters": 1,
                    "pointer_var": 1,
                    "pointer_variable": 1,
                    "ptr": 3,
                    "ptr_to_data": 1,
                    "ptr_to_param": 1,
                    "ptr_variable_1": 1,
                    "register": 1,
                    "register_placeholder": 1,
                    "register_pointer": 2,
                    "register_ptr": 1,
                    "temp_reg": 1,
                    "temp_var1": 1
                }
            },
            "called": [
                "FUN_08007710"
            ],
            "calling": [
                "FUN_080076e0"
            ],
            "code": "\nvoid initialize_and_set_control_registers_08005df4(uint **control_registers)\n\n{\n  uint *pointer;\n  \n  *(undefined *)((int)control_registers + 0x3d) = 2;\n  pointer = *control_registers;\n  if ((pointer[8] & 0x1111) == 0) {\n    if ((pointer[8] & 0x444) == 0) {\n      *pointer = *pointer & 0xfffffffe;\n    }\n  }\n  initialize_control_registers(control_registers);\n  *(undefined *)((int)control_registers + 0x3d) = 0;\n  *(undefined *)(control_registers + 0xf) = 0;\n  return;\n}\n\n",
            "current_name": "initialize_and_set_control_registers_08005df4",
            "entrypoint": "0x08005df4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005df4": "initialize_and_set_control_registers_08005df4",
                "initialize_control_registers_08007710": "initialize_control_registers",
                "param_1": "control_registers",
                "puVar1": "pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005e2e": {
            "additional_data": {
                "FUN_08005e2e": {
                    "initialize_and_check_flags": 1,
                    "initialize_and_control": 1,
                    "initialize_and_control_registers": 1,
                    "initialize_and_modify_control_registers": 1,
                    "initialize_and_modify_data": 1,
                    "initialize_and_reset": 2,
                    "initialize_and_reset_control_registers": 1,
                    "initialize_and_set_controls": 1,
                    "initialize_configuration": 1,
                    "initialize_control_registers": 7,
                    "initialize_control_settings": 1,
                    "initialize_flags": 1,
                    "initialize_parameters": 1,
                    "initialize_registers": 7,
                    "update_control_registers": 2,
                    "update_memory_permissions": 1
                },
                "initialize_control_registers_08007110": {
                    "initialize_control_registers": 17,
                    "initialize_registers": 2
                },
                "param_1": {
                    "configuration": 1,
                    "control_register_array": 1,
                    "control_registers": 4,
                    "data": 1,
                    "flags": 1,
                    "function_args": 1,
                    "input": 1,
                    "input_params": 1,
                    "memory": 1,
                    "param": 1,
                    "parameter": 2,
                    "parameter_array": 1,
                    "parameters": 10,
                    "pointer": 1,
                    "registers": 3,
                    "settings": 1
                },
                "puVar1": {
                    "current_control_register": 1,
                    "current_parameter": 1,
                    "current_register": 3,
                    "data": 3,
                    "data_ptr": 1,
                    "param_pointer": 1,
                    "pointer": 11,
                    "pointer1": 1,
                    "pointer_to_control_registers": 1,
                    "pointer_to_parameters": 1,
                    "pointer_variable": 1,
                    "ptr": 1,
                    "ptr_flags": 1,
                    "ptr_to_control_value": 1,
                    "register": 1,
                    "register_pointer": 2
                }
            },
            "called": [
                "FUN_08007110"
            ],
            "calling": [
                "FUN_080071e4"
            ],
            "code": "\nvoid initialize_and_reset_control_registers_08005e2e(uint **parameters)\n\n{\n  uint *pointer;\n  \n  *(undefined *)((int)parameters + 0x3d) = 2;\n  pointer = *parameters;\n  if ((pointer[8] & 0x1111) == 0) {\n    if ((pointer[8] & 0x444) == 0) {\n      *pointer = *pointer & 0xfffffffe;\n    }\n  }\n  initialize_control_registers(parameters);\n  *(undefined *)((int)parameters + 0x3d) = 0;\n  *(undefined *)(parameters + 0xf) = 0;\n  return;\n}\n\n",
            "current_name": "initialize_and_reset_control_registers_08005e2e",
            "entrypoint": "0x08005e2e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005e2e": "initialize_and_reset_control_registers_08005e2e",
                "initialize_control_registers_08007110": "initialize_control_registers",
                "param_1": "parameters",
                "puVar1": "pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005e68": {
            "called": [],
            "calling": [
                "FUN_08005e6e"
            ],
            "code": "\nvoid FUNC_08005e68(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005e68",
            "entrypoint": "0x08005e68",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005e68": "FUNC_08005e68"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005e6a": {
            "called": [],
            "calling": [
                "FUN_08005e6e"
            ],
            "code": "\nvoid FUNC_08005e6a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005e6a",
            "entrypoint": "0x08005e6a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005e6a": "FUNC_08005e6a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005e6c": {
            "called": [],
            "calling": [
                "FUN_08005e6e"
            ],
            "code": "\nvoid FUNC_08005e6c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08005e6c",
            "entrypoint": "0x08005e6c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08005e6c": "FUNC_08005e6c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08005e6e": {
            "additional_data": {
                "FUC_08005e68": {
                    "do_something_else": 1
                },
                "FUC_08005e6a": {
                    "do_something": 1
                },
                "FUNCTION_2": {
                    "function_c": 1
                },
                "FUNC_08005e68": {
                    "alternative_logic1": 1,
                    "alternative_process_input": 1,
                    "common_function_b": 1,
                    "do_something": 1,
                    "do_something_else": 1,
                    "fallback_callback": 1,
                    "func_b": 2,
                    "function2": 2,
                    "function_b": 6,
                    "handle_abnormal_case": 1,
                    "perform_action_b": 1,
                    "perform_alternate_action": 1,
                    "perform_alternative_action": 1,
                    "perform_fallback_action": 1,
                    "process_flag_case_b": 1,
                    "process_params_b": 1
                },
                "FUNC_08005e6a": {
                    "common_function_a": 1,
                    "do_something": 2,
                    "func_a": 2,
                    "function1": 2,
                    "function_a": 6,
                    "handle_normal_case": 1,
                    "perform_action": 5,
                    "perform_action_a": 1,
                    "perform_logic": 1,
                    "process_callback": 1,
                    "process_flag_case_a": 1,
                    "process_input": 1,
                    "process_param": 1,
                    "process_params_a": 1
                },
                "FUNC_08005e6c": {
                    "another_function": 1,
                    "do_another_thing": 1,
                    "do_other_thing": 1,
                    "do_something_different": 1,
                    "func2": 1,
                    "func_d": 2,
                    "function4": 2,
                    "function_b": 1,
                    "function_d": 5,
                    "function_e": 1,
                    "perform_action": 1,
                    "perform_action2": 2,
                    "perform_action_b": 1,
                    "perform_action_d": 1,
                    "perform_additional_action": 1,
                    "perform_another_action": 1,
                    "perform_extra_action": 1,
                    "perform_operation_b": 1,
                    "some_function": 1
                },
                "FUNC_080064ac": {
                    "another_another_function": 1,
                    "different_function": 1,
                    "do_something_different": 1,
                    "do_yet_another_thing": 2,
                    "execute_final_action": 1,
                    "func3": 1,
                    "func_e": 2,
                    "function5": 2,
                    "function_c": 1,
                    "function_e": 5,
                    "function_f": 1,
                    "perform_action": 1,
                    "perform_action3": 2,
                    "perform_action_c": 1,
                    "perform_action_e": 1,
                    "perform_extra_action": 1,
                    "perform_operation_c": 1,
                    "perform_other_action": 1
                },
                "FUNC_080064ae": {
                    "another_function": 1,
                    "do_another_thing": 1,
                    "do_something": 1,
                    "do_something_else": 1,
                    "func1": 1,
                    "func_c": 2,
                    "function3": 2,
                    "function_a": 1,
                    "function_c": 5,
                    "function_d": 1,
                    "function_with_flag": 1,
                    "perform_action": 2,
                    "perform_action1": 2,
                    "perform_action_a": 1,
                    "perform_action_c": 1,
                    "perform_another_action": 1,
                    "perform_operation_a": 1,
                    "perform_special_action": 1
                },
                "FUN_08005e6c": {
                    "perform_action2": 1
                },
                "FUN_08005e6e": {
                    "execute_action": 1,
                    "execute_flag_checks": 3,
                    "process_data": 1,
                    "process_flags": 23,
                    "process_function": 1,
                    "process_params": 1
                },
                "FUN_080064ac": {
                    "perform_action3": 1
                },
                "FUN_080064ae": {
                    "perform_action1": 1
                },
                "execute_callback_if_flag_set_0800771c": {
                    "execute_callback": 2,
                    "execute_callback1": 1,
                    "execute_callback_if_flag_set": 10,
                    "execute_callback_if_set": 2,
                    "execute_flag_callback": 11,
                    "execute_flag_set_callback": 1
                },
                "execute_if_callback_exists_08007736": {
                    "execute_callback": 2,
                    "execute_callback2": 1,
                    "execute_callback_if_exists": 10,
                    "execute_existing_callback": 2,
                    "execute_if_callback_exists": 6,
                    "execute_if_exists": 6
                },
                "iVar1": {
                    "action_var1": 1,
                    "current_flag": 3,
                    "current_flags": 1,
                    "current_param": 1,
                    "current_value": 4,
                    "data": 1,
                    "entry": 1,
                    "param_value": 1,
                    "ptr": 2,
                    "temp": 1,
                    "temp_var": 1,
                    "value": 10,
                    "value1": 1,
                    "var1": 1
                },
                "param_1": {
                    "action_param": 1,
                    "data": 2,
                    "flags": 16,
                    "flags_data": 1,
                    "input": 3,
                    "input_array": 1,
                    "input_data": 3,
                    "param": 2,
                    "params": 2
                }
            },
            "called": [
                "FUN_0800771c",
                "FUN_080064ae",
                "FUN_08005e6a",
                "FUN_08005e68",
                "FUN_08005e6c",
                "FUN_080064ac",
                "FUN_08007736"
            ],
            "calling": [],
            "code": "\nvoid process_flags_08005e6e(int *flags)\n\n{\n  int value;\n  \n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 2) != 0) && ((*(uint *)(value + 0xc) & 2) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffd;\n    *(undefined *)(flags + 7) = 1;\n    if ((*(uint *)(*flags + 0x18) & 3) == 0) {\n      execute_flag_callback();\n      FUNC_08005e6a(flags);\n    }\n    else {\n      FUNC_08005e68();\n    }\n    *(undefined *)(flags + 7) = 0;\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 4) != 0) && ((*(uint *)(value + 0xc) & 4) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffb;\n    *(undefined *)(flags + 7) = 2;\n    if ((*(uint *)(*flags + 0x18) & 0x300) == 0) {\n      execute_flag_callback(flags);\n      FUNC_08005e6a(flags);\n    }\n    else {\n      FUNC_08005e68(flags);\n    }\n    *(undefined *)(flags + 7) = 0;\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 8) != 0) && ((*(uint *)(value + 0xc) & 8) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffff7;\n    *(undefined *)(flags + 7) = 4;\n    if ((*(uint *)(*flags + 0x1c) & 3) == 0) {\n      execute_flag_callback(flags);\n      FUNC_08005e6a(flags);\n    }\n    else {\n      FUNC_08005e68(flags);\n    }\n    *(undefined *)(flags + 7) = 0;\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 0x10) != 0) && ((*(uint *)(value + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffef;\n    *(undefined *)(flags + 7) = 8;\n    if ((*(uint *)(*flags + 0x1c) & 0x300) == 0) {\n      execute_flag_callback(flags);\n      FUNC_08005e6a(flags);\n    }\n    else {\n      FUNC_08005e68(flags);\n    }\n    *(undefined *)(flags + 7) = 0;\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 1) != 0) && ((*(uint *)(value + 0xc) & 1) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffe;\n    execute_callback_if_exists(flags);\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 0x80) != 0) && ((*(uint *)(value + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffff7f;\n    FUNC_080064ae(flags);\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 0x40) != 0) && ((*(uint *)(value + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffbf;\n    FUNC_08005e6c(flags);\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 0x20) != 0) && ((*(uint *)(value + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffdf;\n    FUNC_080064ac(flags);\n  }\n  return;\n}\n\n",
            "current_name": "process_flags_08005e6e",
            "entrypoint": "0x08005e6e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005e6e": "process_flags_08005e6e",
                "execute_callback_if_flag_set_0800771c": "execute_flag_callback",
                "execute_if_callback_exists_08007736": "execute_callback_if_exists",
                "iVar1": "value",
                "param_1": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08005fe8": {
            "additional_data": {
                "DAT_08005fe4": {
                    "mappings2": 1
                },
                "FUN_08005fe8": {
                    "modify_data": 1,
                    "update_config": 1,
                    "update_data": 1,
                    "update_memory": 16,
                    "update_memory_block": 1,
                    "update_memory_layout": 1,
                    "update_memory_values": 3,
                    "update_param_values": 1,
                    "update_parameters": 4,
                    "update_registers": 1,
                    "update_values": 1
                },
                "PTR_08005fe0": {
                    "mappings1": 1
                },
                "param_1": {
                    "address": 1,
                    "config1": 1,
                    "destination": 1,
                    "input_array": 1,
                    "input_data": 1,
                    "input_params": 2,
                    "memory1": 1,
                    "memory_address": 6,
                    "memory_block": 5,
                    "memory_location": 3,
                    "memory_pointer": 1,
                    "memory_pointer1": 1,
                    "old_parameters": 1,
                    "register1": 1,
                    "source": 2,
                    "source_data": 1,
                    "source_memory": 1,
                    "target_params": 1
                },
                "param_2": {
                    "config2": 1,
                    "data": 3,
                    "data_array": 1,
                    "data_block": 2,
                    "data_pointer": 1,
                    "data_to_write": 1,
                    "memory2": 1,
                    "memory_pointer2": 1,
                    "new_data": 2,
                    "new_memory_values": 1,
                    "new_parameters": 1,
                    "new_params": 2,
                    "new_value": 1,
                    "new_values": 4,
                    "register2": 1,
                    "replacement_data": 1,
                    "source": 1,
                    "source_block": 1,
                    "source_data": 1,
                    "source_params": 1,
                    "target": 1,
                    "values": 1,
                    "values_array": 1
                },
                "uRam40012c30": {
                    "extra_data": 1,
                    "memory_value": 1,
                    "register2_value": 1,
                    "special_value": 4,
                    "updated_value": 1,
                    "value2": 1,
                    "value_at40012c30": 1
                },
                "uVar1": {
                    "current_value": 2,
                    "memory_value": 1,
                    "modified_value": 1,
                    "new_value": 1,
                    "old_value": 4,
                    "original_data": 1,
                    "original_value": 3,
                    "param1_value": 1,
                    "source_value": 1,
                    "temp_value": 5,
                    "tmp_var1": 1,
                    "updated_value": 7,
                    "value": 1,
                    "value1": 1,
                    "value_to_modify": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006092",
                "FUN_08006060"
            ],
            "code": "\nvoid update_memory_values_08005fe8(uint *memory_address,uint *new_values)\n\n{\n  uint updated_value;\n  \n  updated_value = *memory_address;\n  if ((((memory_address == (uint *)0x40012c00) || (memory_address == (uint *)0x40000000)) ||\n      (memory_address == (uint *)0x40000400)) || (memory_address == (uint *)0x40000800)) {\n    updated_value = updated_value & 0xffffff8f | new_values[1];\n  }\n  if (((memory_address == (uint *)0x40012c00) || (memory_address == (uint *)0x40000000)) ||\n     ((memory_address == (uint *)0x40000400 || (memory_address == (uint *)0x40000800)))) {\n    updated_value = updated_value & 0xfffffcff | new_values[3];\n  }\n  *memory_address = updated_value & 0xffffff7f | new_values[5];\n  memory_address[0xb] = new_values[2];\n  memory_address[10] = *new_values;\n  if (memory_address == (uint *)0x40012c00) {\n    special_value = new_values[4];\n  }\n  memory_address[5] = 1;\n  return;\n}\n\n",
            "current_name": "update_memory_values_08005fe8",
            "entrypoint": "0x08005fe8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08005fe8": "update_memory_values_08005fe8",
                "param_1": "memory_address",
                "param_2": "new_values",
                "uRam40012c30": "special_value",
                "uVar1": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006060": {
            "additional_data": {
                "0x3d": {
                    "flag_offset": 1
                },
                "FUN_08006060": {
                    "check_and_update_memory": 1,
                    "execute_and_update_memory": 1,
                    "execute_memory_update": 1,
                    "handle_data": 1,
                    "initialize_and_update_memory": 1,
                    "initialize_data": 2,
                    "initialize_processing": 1,
                    "process_data": 1,
                    "update_and_execute": 1,
                    "update_data": 1,
                    "update_data_and_flags": 1,
                    "update_flag_and_data": 1,
                    "update_flags_and_data": 1,
                    "update_fun": 1,
                    "update_function": 1,
                    "update_memory": 4,
                    "update_memory_and_execute": 2,
                    "update_memory_and_flags": 1,
                    "update_memory_flags": 1,
                    "update_memory_status": 1,
                    "update_memory_value": 1,
                    "update_memory_values": 5
                },
                "char": {
                    "character": 1
                },
                "execute_update_flags_and_data_08007708": {
                    "execute_flag_update": 4,
                    "execute_flags_and_data_update": 1,
                    "execute_update": 4,
                    "execute_update_flags_and_data": 5,
                    "update_flags_and_data": 4,
                    "update_flags_and_data_execution": 1
                },
                "param_1": {
                    "data": 4,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 5,
                    "function_data": 1,
                    "input": 1,
                    "input_data": 2,
                    "memory": 1,
                    "memory_array": 1,
                    "memory_chunk": 1,
                    "memory_pointer": 1,
                    "memory_ptr": 3,
                    "memory_status": 1,
                    "memory_value": 1,
                    "memory_values": 2,
                    "memory_values_ptr": 1,
                    "param": 2,
                    "pointer": 1,
                    "ptr": 1
                },
                "update_memory_values_08005fe8": {
                    "update_memory": 1,
                    "update_memory_values": 15,
                    "update_memory_values_helper": 1,
                    "update_values": 1
                }
            },
            "called": [
                "FUN_08005fe8",
                "FUN_08007708"
            ],
            "calling": [
                "FUN_08007648"
            ],
            "code": "\nundefined4 update_memory_values_08006060(undefined4 *data_ptr)\n\n{\n  if (data_ptr != (undefined4 *)0x0) {\n    if (*(character *)((int)data_ptr + 0x3d) == '\\0') {\n      *(undefined *)(data_ptr + 0xf) = 0;\n      execute_update_flags_and_data();\n    }\n    *(undefined *)((int)data_ptr + 0x3d) = 2;\n    update_memory_values_08006060(*data_ptr,data_ptr + 1);\n    *(undefined *)((int)data_ptr + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "update_memory_values_08006060",
            "entrypoint": "0x08006060",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006060": "update_memory_values_08006060",
                "char": "character",
                "execute_update_flags_and_data_08007708": "execute_update_flags_and_data",
                "param_1": "data_ptr",
                "update_memory_values_08005fe8": "update_memory_values"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006092": {
            "additional_data": {
                "FUN_08006092": {
                    "check_and_update_memory": 1,
                    "check_and_update_param": 1,
                    "clear_register_flags_and_update_memory": 1,
                    "initialize_and_update_memory": 1,
                    "initialize_and_update_registers": 3,
                    "initialize_data": 3,
                    "initialize_memory": 6,
                    "initialize_parameter": 1,
                    "process_data": 1,
                    "process_param": 2,
                    "set_memory_values": 1,
                    "set_registers_and_update_memory": 1,
                    "update_function": 1,
                    "update_memory_and_flags": 1,
                    "update_memory_status": 3,
                    "update_memory_values": 2,
                    "validate_and_update_memory": 1,
                    "verify_and_update_values": 1
                },
                "check_flag": {
                    "is_flag_zero": 1
                },
                "param_1": {
                    "data": 1,
                    "data_arr": 1,
                    "data_ptr": 3,
                    "function_args": 1,
                    "function_array": 1,
                    "input": 2,
                    "input_array": 2,
                    "mem_ptr": 1,
                    "memory": 2,
                    "memory_array": 1,
                    "memory_block": 2,
                    "memory_data": 1,
                    "memory_ptr": 4,
                    "memory_status": 3,
                    "memory_values": 1,
                    "param": 4,
                    "param_ptr": 1
                },
                "set_flags_and_update_registers_08006e68": {
                    "set_flags_and_registers": 1,
                    "set_flags_and_update_registers": 2,
                    "update_flags_and_registers": 1,
                    "update_flags_registers": 1,
                    "update_register_flags": 1,
                    "update_registers": 13
                },
                "update_memory_values_08005fe8": {
                    "update_memory": 7,
                    "update_memory_values": 14
                }
            },
            "called": [
                "FUN_08005fe8",
                "FUN_08006e68"
            ],
            "calling": [
                "FUN_08007118"
            ],
            "code": "\nundefined4 initialize_and_update_memory_08006092(undefined4 *memory_ptr)\n\n{\n  if (memory_ptr != (undefined4 *)0x0) {\n    if (*(char *)((int)memory_ptr + 0x3d) == '\\0') {\n      *(undefined *)(memory_ptr + 0xf) = 0;\n      update_registers();\n    }\n    *(undefined *)((int)memory_ptr + 0x3d) = 2;\n    update_memory_values(*memory_ptr,memory_ptr + 1);\n    *(undefined *)((int)memory_ptr + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_and_update_memory_08006092",
            "entrypoint": "0x08006092",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006092": "initialize_and_update_memory_08006092",
                "param_1": "memory_ptr",
                "set_flags_and_update_registers_08006e68": "update_registers",
                "update_memory_values_08005fe8": "update_memory_values"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080060c4": {
            "additional_data": {
                "0x18": {
                    "mask2": 1,
                    "offset2": 1,
                    "offset_2": 1
                },
                "0x20": {
                    "mask1": 1,
                    "offset1": 1,
                    "offset_1": 1
                },
                "0x38": {
                    "offset3": 1,
                    "offset_3": 1,
                    "result_address_offset": 1
                },
                "0x40012c00": {
                    "const_1": 1,
                    "constant_address": 1,
                    "special_address": 1
                },
                "0xfffff3ff": {
                    "mask_5": 1
                },
                "0xffffff7f": {
                    "mask_3": 1
                },
                "0xffffffbf": {
                    "mask_4": 1
                },
                "0xffffffdf": {
                    "mask_2": 1
                },
                "0xffffffef": {
                    "mask_1": 1
                },
                "4": {
                    "address_offset": 1
                },
                "FUN_080060c4": {
                    "modify_parameters": 2,
                    "update_and_set_values": 1,
                    "update_config": 3,
                    "update_config_data": 1,
                    "update_configuration": 1,
                    "update_control_flags": 1,
                    "update_data": 4,
                    "update_param": 2,
                    "update_param_values": 4,
                    "update_parameter_values": 1,
                    "update_parameters": 4,
                    "update_params": 5,
                    "update_register_values": 1,
                    "update_values": 1
                },
                "iVar3": {
                    "argument_value": 1,
                    "config_value": 1,
                    "data_value": 4,
                    "input_value": 4,
                    "input_var": 1,
                    "new_param3": 1,
                    "new_value": 1,
                    "param2_value": 2,
                    "param3_value": 1,
                    "param_value": 9,
                    "parameter_value": 1,
                    "stored_value": 1,
                    "updated_param3": 1,
                    "updated_value3": 1,
                    "updated_value_3": 1,
                    "value_to_update": 1
                },
                "param_1": {
                    "address": 5,
                    "base_addr": 2,
                    "base_address": 8,
                    "config_addr": 1,
                    "config_address": 3,
                    "config_data_address": 1,
                    "control_struct": 1,
                    "data_address": 2,
                    "data_pointer": 1,
                    "input_address": 1,
                    "param_address": 2,
                    "param_base_address": 1,
                    "param_ptr": 1,
                    "parameter_address": 1,
                    "register_base_address": 1
                },
                "param_2": {
                    "arguments": 1,
                    "config_data": 2,
                    "config_params": 1,
                    "config_values": 1,
                    "data": 3,
                    "data_array": 1,
                    "input_array": 1,
                    "input_params": 1,
                    "param_array": 4,
                    "param_list": 2,
                    "param_values": 1,
                    "parameter_values": 1,
                    "parameters": 3,
                    "params": 2,
                    "params_array": 2,
                    "register_data": 1,
                    "values": 4
                },
                "uVar1": {
                    "modified_config1": 1,
                    "modified_flags": 4,
                    "modified_param1": 1,
                    "modified_value1": 5,
                    "new_param1": 1,
                    "updated_config1": 1,
                    "updated_flags": 2,
                    "updated_param1": 1,
                    "updated_value1": 12,
                    "updated_value_1": 1,
                    "updated_var1": 2
                },
                "uVar2": {
                    "modified_config2": 1,
                    "modified_param2": 1,
                    "modified_register": 1,
                    "modified_value": 2,
                    "modified_value2": 5,
                    "new_param2": 1,
                    "original_flags": 1,
                    "updated_config2": 1,
                    "updated_param2": 1,
                    "updated_value": 1,
                    "updated_value2": 12,
                    "updated_value_2": 1,
                    "updated_var": 1,
                    "updated_var2": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08006128",
                "FUN_08006186"
            ],
            "code": "\nvoid update_config_data_080060c4(int base_address,int *param_array)\n\n{\n  uint updated_value1;\n  uint updated_value2;\n  int param_value;\n  \n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & 0xffffffef;\n  updated_value2 = *(uint *)(base_address + 4);\n  param_value = *param_array;\n  updated_value1 = *(uint *)(base_address + 0x20) & 0xffffffdf | param_array[2] << 4;\n  if (base_address == 0x40012c00) {\n    updated_value1 = (updated_value1 & 0xffffff7f | param_array[3] << 4) & 0xffffffbf;\n    updated_value2 = updated_value2 & 0xfffff3ff | param_array[5] << 2 | param_array[6] << 2;\n  }\n  *(uint *)(base_address + 4) = updated_value2;\n  *(uint *)(base_address + 0x18) = *(uint *)(base_address + 0x18) & 0xffff8cff | param_value << 8;\n  *(int *)(base_address + 0x38) = param_array[1];\n  *(uint *)(base_address + 0x20) = updated_value1;\n  return;\n}\n\n",
            "current_name": "update_config_data_080060c4",
            "entrypoint": "0x080060c4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080060c4": "update_config_data_080060c4",
                "iVar3": "param_value",
                "param_1": "base_address",
                "param_2": "param_array",
                "uVar1": "updated_value1",
                "uVar2": "updated_value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006128": {
            "additional_data": {
                "0": {
                    "case_0": 1
                },
                "0xc": {
                    "case_12": 1
                },
                "4": {
                    "case_4": 1
                },
                "8": {
                    "case_8": 1
                },
                "FUN_08006128": {
                    "process_parameters": 1,
                    "update_and_configure": 2,
                    "update_and_reset": 1,
                    "update_and_reset_params": 2,
                    "update_and_return": 1,
                    "update_and_return_result": 1,
                    "update_and_return_status": 10,
                    "update_config": 2,
                    "update_data": 1,
                    "update_function": 2,
                    "update_parameter": 2,
                    "update_parameters": 5,
                    "update_params_and_config_data": 1
                },
                "param_1": {
                    "array": 1,
                    "array_ptr": 1,
                    "config": 1,
                    "config_array": 1,
                    "config_data": 1,
                    "data": 3,
                    "data_ptr": 1,
                    "function_parameters": 1,
                    "function_params": 1,
                    "input_array": 1,
                    "input_params": 1,
                    "param_array": 2,
                    "parameter_array": 2,
                    "parameters": 11,
                    "params": 3
                },
                "param_2": {
                    "config_data": 6,
                    "config_param": 1,
                    "config_value": 1,
                    "data_parameter": 1,
                    "flag": 4,
                    "ignored_param": 1,
                    "input_value": 1,
                    "mode": 1,
                    "param_2": 3,
                    "parameter_count": 1,
                    "unused": 2,
                    "unused_param": 2,
                    "value1": 3,
                    "value_1": 3,
                    "value_2": 1
                },
                "param_3": {
                    "action_type": 1,
                    "command": 1,
                    "config": 1,
                    "config_data": 1,
                    "config_parameter": 1,
                    "config_type": 2,
                    "config_value": 1,
                    "mode": 1,
                    "operation": 1,
                    "operation_code": 1,
                    "option": 3,
                    "param_3": 1,
                    "type": 1,
                    "update_param": 1,
                    "update_type": 7,
                    "value": 1,
                    "value2": 3,
                    "value_2": 3
                },
                "update_config_data_080060c4": {
                    "update_config_data": 3,
                    "update_config_data_case4": 2,
                    "update_config_data_case_4": 1,
                    "update_config_parameters": 1,
                    "update_parameter_case4": 1,
                    "update_parameters_case4": 3,
                    "update_params_case4": 1
                },
                "update_parameters_08005cec": {
                    "update_default_parameters": 2,
                    "update_parameter_case0": 1,
                    "update_parameters1": 1,
                    "update_parameters_based_on_config": 1,
                    "update_parameters_case0": 4,
                    "update_parameters_case1": 1,
                    "update_parameters_case_0": 1,
                    "update_params_case0": 1
                },
                "update_parameters_08005d48": {
                    "update_custom_parameters": 1,
                    "update_parameter_case8": 1,
                    "update_parameters2": 1,
                    "update_parameters_case8": 5,
                    "update_parameters_case_8": 1,
                    "update_parameters_with_value": 1,
                    "update_params_case8": 1,
                    "update_specific_parameters": 1
                },
                "update_parameters_08005dac": {
                    "update_additional_parameters": 1,
                    "update_parameter_case12": 1,
                    "update_parameters3": 1,
                    "update_parameters_case12": 5,
                    "update_parameters_case_c": 1,
                    "update_parameters_with_data": 1,
                    "update_params_case12": 1,
                    "update_special_parameters": 1
                }
            },
            "called": [
                "FUN_08005d48",
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec"
            ],
            "calling": [
                "FUN_08007648"
            ],
            "code": "\nundefined4 update_and_return_status_08006128(undefined4 *parameters,undefined4 config_data,undefined4 update_type)\n\n{\n  if (*(char *)(parameters + 0xf) != '\\x01') {\n    *(undefined *)(parameters + 0xf) = 1;\n    *(undefined *)((int)parameters + 0x3d) = 2;\n    switch(update_type) {\n    case 0:\n      update_parameters_case0(*parameters);\n      break;\n    case 4:\n      update_config_data(*parameters);\n      break;\n    case 8:\n      update_parameters_case8(*parameters);\n      break;\n    case 0xc:\n      update_parameters_case12(*parameters);\n    }\n    *(undefined *)((int)parameters + 0x3d) = 1;\n    *(undefined *)(parameters + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "current_name": "update_and_return_status_08006128",
            "entrypoint": "0x08006128",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006128": "update_and_return_status_08006128",
                "param_1": "parameters",
                "param_2": "config_data",
                "param_3": "update_type",
                "update_config_data_080060c4": "update_config_data",
                "update_parameters_08005cec": "update_parameters_case0",
                "update_parameters_08005d48": "update_parameters_case8",
                "update_parameters_08005dac": "update_parameters_case12"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006186": {
            "additional_data": {
                "0": {
                    "config_type_a": 1,
                    "update_command": 1
                },
                "0x01": {
                    "flag_updated": 1
                },
                "0x02": {
                    "config_flag_updated": 1
                },
                "0x08": {
                    "bit_flag_2_set": 1
                },
                "0x18": {
                    "offset_a": 1,
                    "param_flag": 2
                },
                "0x1c": {
                    "config_flag": 1,
                    "offset_c": 1,
                    "param_flag_alt": 1
                },
                "0x3d": {
                    "flag": 1,
                    "status_flag": 1
                },
                "0x8": {
                    "mask_bit_3": 1
                },
                "0x800": {
                    "bit_flag_11": 1,
                    "mask_a": 1
                },
                "0xc": {
                    "config_type_d": 1,
                    "update_config_command": 1
                },
                "0xc0": {
                    "shift_bits_8": 1
                },
                "0xf": {
                    "has_updated_parameters": 1,
                    "is_initialized": 1
                },
                "0xfffffbff": {
                    "bit_flag_10_clear": 1,
                    "mask_bit_10": 1
                },
                "0xfffffffb": {
                    "bit_flag_2_clear": 1
                },
                "4": {
                    "config_command": 1,
                    "config_type_b": 1
                },
                "8": {
                    "config_type_c": 1,
                    "update_params_command": 1
                },
                "FUN_08006186": {
                    "handle_update": 1,
                    "update_and_check_parameters": 1,
                    "update_and_process_data": 1,
                    "update_and_return_status": 1,
                    "update_and_set_config": 1,
                    "update_config": 2,
                    "update_configuration": 1,
                    "update_function": 1,
                    "update_param_config": 1,
                    "update_parameter": 2,
                    "update_parameter_config": 1,
                    "update_parameter_with_config": 1,
                    "update_parameters": 11,
                    "update_parameters_and_config": 5,
                    "update_parameters_flags": 1
                },
                "char": {
                    "byte": 1,
                    "character": 1
                },
                "param_1": {
                    "config": 3,
                    "config_ptr": 4,
                    "data_array": 1,
                    "data_ptr": 1,
                    "input_params": 1,
                    "param_address": 1,
                    "param_array": 5,
                    "param_buffer": 1,
                    "param_list": 1,
                    "param_ptr": 1,
                    "parameter_array": 3,
                    "parameter_list": 1,
                    "parameters": 7,
                    "params": 1
                },
                "param_2": {
                    "config_data": 14,
                    "config_data_address": 1,
                    "config_data_ptr": 1,
                    "config_param": 2,
                    "config_ptr": 1,
                    "data": 6,
                    "data_array": 1,
                    "data_offset": 1,
                    "data_ptr": 3,
                    "param_2": 1
                },
                "param_3": {
                    "action": 2,
                    "action_code": 1,
                    "action_id": 1,
                    "case_selector": 1,
                    "case_type": 1,
                    "case_value": 1,
                    "code": 1,
                    "command": 1,
                    "config_option": 1,
                    "config_type": 7,
                    "mode": 4,
                    "operation": 3,
                    "operation_type": 1,
                    "option": 2,
                    "update_type": 4
                },
                "update_config_data_080060c4": {
                    "update_config_data": 8,
                    "update_config_data_case_4": 1,
                    "update_param_case_4": 1,
                    "update_param_type_4": 1,
                    "update_parameters_2": 2
                },
                "update_parameters_08005cec": {
                    "update_first_parameter": 1,
                    "update_param_case_0": 1,
                    "update_param_type_0": 1,
                    "update_parameter_set_a": 1,
                    "update_parameters": 2,
                    "update_parameters_1": 3,
                    "update_parameters_a": 2,
                    "update_parameters_case_0": 1,
                    "update_specific_parameters": 1
                },
                "update_parameters_08005d48": {
                    "update_other_parameters": 1,
                    "update_param_case_8": 1,
                    "update_param_type_8": 1,
                    "update_parameter_set_b": 1,
                    "update_parameters": 1,
                    "update_parameters2": 1,
                    "update_parameters_2": 1,
                    "update_parameters_3": 2,
                    "update_parameters_b": 1,
                    "update_parameters_c": 1,
                    "update_parameters_case_8": 1,
                    "update_second_parameter": 1
                },
                "update_parameters_08005dac": {
                    "update_more_parameters": 1,
                    "update_param_case_c": 1,
                    "update_param_type_12": 1,
                    "update_parameter_set_c": 1,
                    "update_parameters": 1,
                    "update_parameters3": 1,
                    "update_parameters_3": 1,
                    "update_parameters_4": 2,
                    "update_parameters_c": 1,
                    "update_parameters_case_c": 1,
                    "update_parameters_d": 1,
                    "update_third_parameter": 1
                }
            },
            "called": [
                "FUN_08005d48",
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec"
            ],
            "calling": [
                "FUN_08007118"
            ],
            "code": "\nundefined4 update_parameters_and_config_08006186(int *parameters,int config_data,undefined4 config_type)\n\n{\n  if (*(byte *)(parameters + 0xf) != '\\x01') {\n    *(undefined *)(parameters + 0xf) = 1;\n    *(undefined *)((int)parameters + 0x3d) = 2;\n    switch(config_type) {\n    case 0:\n      update_parameters_1(*parameters);\n      *(uint *)(*parameters + 0x18) = *(uint *)(*parameters + 0x18) | 8;\n      *(uint *)(*parameters + 0x18) = *(uint *)(*parameters + 0x18) & 0xfffffffb;\n      *(uint *)(*parameters + 0x18) = *(uint *)(*parameters + 0x18) | *(uint *)(config_data + 0x10);\n      break;\n    case 4:\n      update_config_data(*parameters);\n      *(uint *)(*parameters + 0x18) = *(uint *)(*parameters + 0x18) | 0x800;\n      *(uint *)(*parameters + 0x18) = *(uint *)(*parameters + 0x18) & 0xfffffbff;\n      *(uint *)(*parameters + 0x18) = *(uint *)(*parameters + 0x18) | *(int *)(config_data + 0x10) << 8;\n      break;\n    case 8:\n      update_parameters_3(*parameters);\n      *(uint *)(*parameters + 0x1c) = *(uint *)(*parameters + 0x1c) | 8;\n      *(uint *)(*parameters + 0x1c) = *(uint *)(*parameters + 0x1c) & 0xfffffffb;\n      *(uint *)(*parameters + 0x1c) = *(uint *)(*parameters + 0x1c) | *(uint *)(config_data + 0x10);\n      break;\n    case 0xc:\n      update_parameters_4(*parameters);\n      *(uint *)(*parameters + 0x1c) = *(uint *)(*parameters + 0x1c) | 0x800;\n      *(uint *)(*parameters + 0x1c) = *(uint *)(*parameters + 0x1c) & 0xfffffbff;\n      *(uint *)(*parameters + 0x1c) = *(uint *)(*parameters + 0x1c) | *(int *)(config_data + 0x10) << 8;\n    }\n    *(undefined *)((int)parameters + 0x3d) = 1;\n    *(undefined *)(parameters + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "current_name": "update_parameters_and_config_08006186",
            "entrypoint": "0x08006186",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006186": "update_parameters_and_config_08006186",
                "char": "byte",
                "param_1": "parameters",
                "param_2": "config_data",
                "param_3": "config_type",
                "update_config_data_080060c4": "update_config_data",
                "update_parameters_08005cec": "update_parameters_1",
                "update_parameters_08005d48": "update_parameters_3",
                "update_parameters_08005dac": "update_parameters_4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006262": {
            "additional_data": {
                "FUN_08006262": {
                    "set_bit_value": 1,
                    "set_bit_value_at_position": 1,
                    "update_bit": 9,
                    "update_bit_and_shift": 1,
                    "update_bit_value": 5,
                    "update_bits": 5,
                    "update_bitwise_value": 7,
                    "update_bitwise_values": 1,
                    "update_parameter": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 19,
                    "bitset": 1,
                    "data": 6,
                    "data_pointer": 1,
                    "data_structure_address": 1,
                    "memory_address": 1,
                    "object_address": 1
                },
                "param_2": {
                    "bit_index": 5,
                    "bit_offset": 1,
                    "bit_position": 24,
                    "position": 1
                },
                "param_3": {
                    "bit_value": 9,
                    "new_bit_value": 2,
                    "new_value": 18,
                    "value": 1,
                    "value_to_update": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006280",
                "FUN_080062f4",
                "FUN_080063c0",
                "FUN_08006390"
            ],
            "code": "\nvoid update_bit_value_08006262(int base_address,uint bit_position,int new_value)\n\n{\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & ~(1 << (bit_position & 0xff));\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) | new_value << (bit_position & 0xff);\n  return;\n}\n\n",
            "current_name": "update_bit_value_08006262",
            "entrypoint": "0x08006262",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006262": "update_bit_value_08006262",
                "param_1": "base_address",
                "param_2": "bit_position",
                "param_3": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006280": {
            "additional_data": {
                "DAT_40012c00": {
                    "base_address": 1,
                    "target_value": 1
                },
                "FUN_08006280": {
                    "enable_feature": 1,
                    "set_bit_and_check": 1,
                    "set_bit_and_flag": 1,
                    "set_bit_and_update": 4,
                    "set_bit_and_update_value": 1,
                    "set_bit_in_value_and_update": 1,
                    "set_bit_value_and_update": 1,
                    "set_flags_and_values": 1,
                    "update_and_set_bits": 1,
                    "update_bit": 1,
                    "update_bit_and_flag": 1,
                    "update_bit_fields": 1,
                    "update_bit_value": 3,
                    "update_bit_value_and_flags": 2,
                    "update_bit_value_and_set_flags": 1,
                    "update_flag_and_value": 1,
                    "update_flags": 1,
                    "update_flags_and_values": 4,
                    "update_param": 1,
                    "update_permissions": 3
                },
                "PTR_0x40012c00": {
                    "base_address": 1
                },
                "param_1": {
                    "array": 1,
                    "array_pointer": 1,
                    "bit_array": 3,
                    "bit_fields": 1,
                    "bit_value_ptr": 1,
                    "data": 4,
                    "data_pointer": 1,
                    "feature_flags": 1,
                    "flags": 3,
                    "flags_array": 1,
                    "param_array": 2,
                    "param_list": 1,
                    "param_ptr": 1,
                    "parameter_array": 1,
                    "parameters": 1,
                    "permissions": 3,
                    "pointer_to_value": 1,
                    "ptr_array": 1,
                    "values": 2
                },
                "param_2": {
                    "access_level": 1,
                    "bit_index": 2,
                    "bit_position": 8,
                    "flag": 7,
                    "flag_index": 1,
                    "flag_value": 1,
                    "index": 1,
                    "param_value": 1,
                    "permission_code": 1,
                    "value": 8
                },
                "uRam40012c44": {
                    "flag": 2,
                    "flag_register": 1,
                    "flag_value": 2,
                    "memory_address": 2,
                    "memory_location": 2,
                    "memory_value": 1,
                    "some_flag": 1,
                    "special_flag": 1,
                    "status_flag": 4,
                    "status_register": 1
                },
                "update_bit_value_08006262": {
                    "update_bit_value": 14,
                    "update_feature_bit_value": 1
                }
            },
            "called": [
                "FUN_08006262"
            ],
            "calling": [
                "FUN_08007648"
            ],
            "code": "\nundefined4 set_bit_in_value_and_update_08006280(uint **data,undefined4 bit_position)\n\n{\n  switch(bit_position) {\n  case 0:\n    (*data)[3] = (*data)[3] | 2;\n    break;\n  case 4:\n    (*data)[3] = (*data)[3] | 4;\n    break;\n  case 8:\n    (*data)[3] = (*data)[3] | 8;\n    break;\n  case 0xc:\n    (*data)[3] = (*data)[3] | 0x10;\n  }\n  update_bit_value(*data,bit_position,1);\n  if (*data == (uint *)0x40012c00) {\n    status_flag = status_flag | 0x8000;\n  }\n  **data = **data | 1;\n  return 0;\n}\n\n",
            "current_name": "set_bit_in_value_and_update_08006280",
            "entrypoint": "0x08006280",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006280": "set_bit_in_value_and_update_08006280",
                "param_1": "data",
                "param_2": "bit_position",
                "uRam40012c44": "status_flag",
                "update_bit_value_08006262": "update_bit_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080062f4": {
            "additional_data": {
                "FUN_080062f4": {
                    "bitwise_operation_and_update": 1,
                    "clear_bit_and_update": 1,
                    "update_bit_and_check": 1,
                    "update_bit_and_value": 2,
                    "update_bit_value": 2,
                    "update_bit_value_and_clear_flags": 5,
                    "update_bit_value_and_conditions": 1,
                    "update_bit_value_and_flags": 4,
                    "update_bit_value_and_mask": 2,
                    "update_bit_value_and_reset_flags": 2,
                    "update_bit_value_and_set_flag": 1,
                    "update_bitmask_and_value": 1,
                    "update_bitwise_flags": 1,
                    "update_bitwise_operations": 1,
                    "update_bitwise_values": 1,
                    "update_flags_and_values": 3,
                    "update_parameter_and_bits": 1,
                    "update_permission": 1
                },
                "param_1": {
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "bit_array": 5,
                    "bit_array_ptr": 1,
                    "bitmask_and_value": 1,
                    "bits_array": 1,
                    "bitwise_flags": 1,
                    "data": 3,
                    "data_array": 2,
                    "data_ptr": 1,
                    "flags_pointer": 1,
                    "input": 1,
                    "param": 2,
                    "param_array": 4,
                    "parameter_list": 1,
                    "parameter_pointer": 1,
                    "parameters": 1,
                    "permissions": 1,
                    "pointer_array": 1,
                    "value": 1
                },
                "param_2": {
                    "bit_index": 3,
                    "bit_mask": 1,
                    "bit_position": 7,
                    "bit_value": 2,
                    "bitmask_value": 1,
                    "flag": 8,
                    "flag_value": 1,
                    "param_value": 3,
                    "permission_type": 1,
                    "value": 4
                },
                "puVar1": {
                    "bit_array": 1,
                    "bit_array_pointer": 1,
                    "bit_array_ptr": 1,
                    "bit_pointer": 1,
                    "current_array": 1,
                    "current_data": 1,
                    "current_permissions": 1,
                    "current_ptr": 1,
                    "current_value": 1,
                    "data_pointer": 1,
                    "data_ptr": 2,
                    "flags": 1,
                    "flags_ptr": 1,
                    "internal_array": 1,
                    "parameter_ptr": 1,
                    "pointer": 2,
                    "pointer_value": 2,
                    "ptr": 2,
                    "temp_pointer": 3,
                    "temp_ptr": 4,
                    "temporary_pointer": 1,
                    "var1": 1
                },
                "uRam40012c00": {
                    "constant1": 3,
                    "constant_address": 1,
                    "memory_address": 1,
                    "memory_location_a": 1
                },
                "uRam40012c20": {
                    "constant2": 3,
                    "memory_location_b": 1,
                    "memory_value1": 1,
                    "ram_var1": 1,
                    "status_flags": 1
                },
                "uRam40012c44": {
                    "constant3": 3,
                    "memory_location_c": 1,
                    "memory_value2": 1,
                    "ram_var2": 1,
                    "status_flags": 1
                },
                "update_bit_value_08006262": {
                    "update_bit_value": 3
                }
            },
            "called": [
                "FUN_08006262"
            ],
            "calling": [
                "FUN_080076e0"
            ],
            "code": "\nundefined4 update_bit_value_and_clear_flags_080062f4(uint **bit_array,undefined4 flag)\n\n{\n  uint *temp_ptr;\n  \n  switch(flag) {\n  case 0:\n    (*bit_array)[3] = (*bit_array)[3] & 0xfffffffd;\n    break;\n  case 4:\n    (*bit_array)[3] = (*bit_array)[3] & 0xfffffffb;\n    break;\n  case 8:\n    (*bit_array)[3] = (*bit_array)[3] & 0xfffffff7;\n    break;\n  case 0xc:\n    (*bit_array)[3] = (*bit_array)[3] & 0xffffffef;\n  }\n  update_bit_value(*bit_array,flag,0);\n  if (((*bit_array == (uint *)0x40012c00) && ((constant2 & 0x1111) == 0)) &&\n     ((constant2 & 0x444) == 0)) {\n    constant3 = constant3 & 0xffff7fff;\n  }\n  temp_ptr = *bit_array;\n  if (((temp_ptr[8] & 0x1111) == 0) && ((temp_ptr[8] & 0x444) == 0)) {\n    *temp_ptr = *temp_ptr & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_bit_value_and_clear_flags_080062f4",
            "entrypoint": "0x080062f4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080062f4": "update_bit_value_and_clear_flags_080062f4",
                "param_1": "bit_array",
                "param_2": "flag",
                "puVar1": "temp_ptr",
                "uRam40012c20": "constant2",
                "uRam40012c44": "constant3",
                "update_bit_value_08006262": "update_bit_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006390": {
            "additional_data": {
                "0x40012c00": {
                    "target_address": 1,
                    "target_value": 1
                },
                "FUN_08006390": {
                    "set_bit_and_update": 5,
                    "set_bit_and_update_value": 1,
                    "set_bit_value": 3,
                    "set_bit_value_and_update": 1,
                    "update_and_check_bit_value": 3,
                    "update_and_flag": 1,
                    "update_and_set_bit": 4,
                    "update_and_set_bit_value": 3,
                    "update_and_set_flag": 2,
                    "update_bit_and_flag": 2,
                    "update_bit_and_set_flag": 1,
                    "update_bit_and_set_value": 1,
                    "update_bit_and_value": 1,
                    "update_bit_value_and_flag": 1,
                    "update_bit_value_and_set_flag": 2
                },
                "PTR_08006262": {
                    "bit_data_pointer": 1
                },
                "param_1": {
                    "bit_array": 10,
                    "bit_array_pointer": 1,
                    "bit_array_ptr": 2,
                    "bit_pointer": 6,
                    "bit_value": 5,
                    "bit_values": 1,
                    "data": 1,
                    "data_pointer": 2,
                    "input_array": 1,
                    "pointer": 1,
                    "value": 1
                },
                "param_2": {
                    "bit_mask": 1,
                    "bit_position": 5,
                    "bit_value": 16,
                    "flag": 2,
                    "flag_value": 1,
                    "new_bit_value": 1,
                    "new_value": 1,
                    "value": 4
                },
                "uRam40012c44": {
                    "bit_array_flags": 1,
                    "bit_register": 1,
                    "bit_value2": 1,
                    "flag_register": 2,
                    "flag_value": 3,
                    "flag_variable": 6,
                    "memory_40012c44": 1,
                    "register_value": 1,
                    "special_register": 1,
                    "special_value": 1,
                    "status_flag": 1,
                    "status_register": 8
                },
                "update_bit_value_08006262": {
                    "update_bit_value": 1
                }
            },
            "called": [
                "FUN_08006262"
            ],
            "calling": [
                "FUN_08007118"
            ],
            "code": "\nundefined4 update_bit_value_and_set_flag_08006390(uint **bit_array,undefined4 bit_value)\n\n{\n  update_bit_value(*bit_array,bit_value,1);\n  if (*bit_array == (uint *)0x40012c00) {\n    status_register = status_register | 0x8000;\n  }\n  **bit_array = **bit_array | 1;\n  return 0;\n}\n\n",
            "current_name": "update_bit_value_and_set_flag_08006390",
            "entrypoint": "0x08006390",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006390": "update_bit_value_and_set_flag_08006390",
                "param_1": "bit_array",
                "param_2": "bit_value",
                "uRam40012c44": "status_register",
                "update_bit_value_08006262": "update_bit_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080063c0": {
            "additional_data": {
                "FUN_080063c0": {
                    "update_and_check": 1,
                    "update_and_check_bit_value": 1,
                    "update_and_check_bits": 1,
                    "update_and_check_flags": 2,
                    "update_and_check_value": 1,
                    "update_and_check_values": 1,
                    "update_and_clear_bits": 2,
                    "update_and_clear_flags": 3,
                    "update_bit_value": 2,
                    "update_bit_value_and_clear": 1,
                    "update_bit_value_and_clear_flags": 1,
                    "update_bit_values": 7,
                    "update_config_and_flags": 1,
                    "update_configuration": 1,
                    "update_flags": 1,
                    "update_flags_and_bits": 1,
                    "update_flags_and_values": 2,
                    "update_flags_bit": 1,
                    "update_memory_state": 1
                },
                "PTR_update_bit_value_08006262": {
                    "update_bit_value": 1
                },
                "param_1": {
                    "array_ptr": 1,
                    "bit_array": 8,
                    "bit_data": 1,
                    "bits": 1,
                    "bits_array": 1,
                    "config": 1,
                    "config_ptr": 1,
                    "data": 1,
                    "data_array": 1,
                    "data_ptr": 3,
                    "flag_array": 1,
                    "flags": 2,
                    "flags_and_values": 1,
                    "input_data": 3,
                    "input_ptr": 2,
                    "memory_state_pointer": 1,
                    "pointer_to_array": 1,
                    "values": 1
                },
                "param_2": {
                    "bit": 2,
                    "bit_value": 14,
                    "flag": 1,
                    "flag_value": 3,
                    "input_value": 1,
                    "new_value": 1,
                    "value": 7,
                    "value_to_update": 2
                },
                "puVar1": {
                    "array_element": 1,
                    "array_pointer": 1,
                    "array_ptr": 2,
                    "bit_array_ptr": 2,
                    "bit_ptr": 1,
                    "config": 1,
                    "current_bit_array": 1,
                    "current_bit_data": 1,
                    "current_bits": 1,
                    "current_config": 1,
                    "current_data": 3,
                    "current_element": 2,
                    "current_flag": 2,
                    "current_flags": 1,
                    "current_flags_and_values": 1,
                    "current_pointer": 1,
                    "current_ptr": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "data_ptr_local": 1,
                    "pointer": 1,
                    "ptr": 3,
                    "value_ptr": 1
                },
                "uRam40012c00": {
                    "array_start_address": 1,
                    "base_address": 4,
                    "config1": 1,
                    "const_value_1": 1,
                    "constant1": 1,
                    "constant_value": 1,
                    "constant_value1": 2,
                    "data_address_1": 1,
                    "flag_ptr": 1,
                    "magic_value_1": 1,
                    "memory_address": 1,
                    "memory_address_1": 1
                },
                "uRam40012c20": {
                    "additional_flags": 1,
                    "array_mask_1": 1,
                    "bit_array_value1": 1,
                    "bit_mask1": 1,
                    "bit_mask_1": 1,
                    "bitmask": 1,
                    "config2": 1,
                    "config_flags": 1,
                    "constant2": 1,
                    "constant_value2": 2,
                    "data_address_2": 1,
                    "flag1": 1,
                    "flag_1": 1,
                    "flag_check_mask": 1,
                    "flag_data": 1,
                    "flag_mask": 1,
                    "flag_mask_1": 1,
                    "flags_1": 1,
                    "magic_value_2": 1,
                    "mask_ptr": 1,
                    "memory_address_2": 1,
                    "memory_value_1": 1,
                    "ram_value1": 1
                },
                "uRam40012c44": {
                    "array_mask_2": 1,
                    "bit_array_value2": 1,
                    "bit_mask2": 1,
                    "bit_mask_2": 1,
                    "bitmask": 1,
                    "config3": 1,
                    "constant3": 1,
                    "constant_value3": 2,
                    "control_var": 1,
                    "data_address_3": 1,
                    "flag": 2,
                    "flag2": 1,
                    "flag_2": 1,
                    "flag_mask_2": 1,
                    "flags_2": 1,
                    "magic_value_3": 1,
                    "memory_address_3": 1,
                    "memory_value_2": 1,
                    "modified_flag": 1,
                    "ram_value2": 1,
                    "update_flag_mask": 1,
                    "updated_flags": 1
                },
                "update_bit_value_08006262": {
                    "update_bit_value": 1
                }
            },
            "called": [
                "FUN_08006262"
            ],
            "calling": [
                "FUN_080071e4"
            ],
            "code": "\nundefined4 update_bit_value_and_clear_flags_080063c0(uint **bit_array,undefined4 bit_value)\n\n{\n  uint *current_data;\n  \n  update_bit_value(*bit_array,bit_value,0);\n  if (((*bit_array == (uint *)0x40012c00) && ((constant_value2 & 0x1111) == 0)) &&\n     ((constant_value2 & 0x444) == 0)) {\n    flag = flag & 0xffff7fff;\n  }\n  current_data = *bit_array;\n  if (((current_data[8] & 0x1111) == 0) && ((current_data[8] & 0x444) == 0)) {\n    *current_data = *current_data & 0xfffffffe;\n  }\n  *(undefined *)((int)bit_array + 0x3d) = 1;\n  return 0;\n}\n\n",
            "current_name": "update_bit_value_and_clear_flags_080063c0",
            "entrypoint": "0x080063c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080063c0": "update_bit_value_and_clear_flags_080063c0",
                "param_1": "bit_array",
                "param_2": "bit_value",
                "puVar1": "current_data",
                "uRam40012c20": "constant_value2",
                "uRam40012c44": "flag",
                "update_bit_value_08006262": "update_bit_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006420": {
            "additional_data": {
                "FUN_08006420": {
                    "apply_bitwise_operations": 1,
                    "clear_bit_and_set_bit": 1,
                    "set_bit_value": 1,
                    "set_bits_based_on_position": 1,
                    "update_bit": 1,
                    "update_bit_value": 4,
                    "update_bitmask": 2,
                    "update_bitwise_value": 4,
                    "update_config": 1,
                    "update_configuration": 1,
                    "update_data": 3,
                    "update_data_buffer": 1,
                    "update_flags": 3,
                    "update_parameter": 1,
                    "update_parameter_value": 1,
                    "update_register": 1,
                    "update_register_value": 1,
                    "update_settings": 1,
                    "update_value": 1,
                    "update_value_in_memory": 1
                },
                "param_1": {
                    "array": 1,
                    "base_address": 17,
                    "config_address": 2,
                    "data_address": 2,
                    "data_buffer": 1,
                    "data_pointer": 2,
                    "input_pointer": 1,
                    "object_address": 1,
                    "ptr": 1,
                    "register_address": 1,
                    "register_base": 1,
                    "settings": 1
                },
                "param_2": {
                    "bit_index": 1,
                    "bit_mask": 1,
                    "bit_number": 1,
                    "bit_offset": 8,
                    "bit_position": 17,
                    "bits_to_set": 1,
                    "offset": 1,
                    "position": 1
                },
                "param_3": {
                    "bit_value": 4,
                    "data": 2,
                    "new_value": 16,
                    "value": 9
                },
                "param_4": {
                    "mask": 1
                },
                "param_5": {
                    "shift": 1
                },
                "param_6": {
                    "updated_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08006460",
                "FUN_0800643c"
            ],
            "code": "\nvoid update_bit_value_08006420(int base_address,uint bit_position,int new_value)\n\n{\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & ~(4 << (bit_position & 0xff));\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) | new_value << (bit_position & 0xff);\n  return;\n}\n\n",
            "current_name": "update_bit_value_08006420",
            "entrypoint": "0x08006420",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006420": "update_bit_value_08006420",
                "param_1": "base_address",
                "param_2": "bit_position",
                "param_3": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800643c": {
            "additional_data": {
                "0x11": {
                    "constant_value": 1,
                    "index": 3
                },
                "0x8000": {
                    "bit_mask": 1,
                    "bitmask": 1,
                    "flag_mask": 1
                },
                "4": {
                    "bit_position": 1
                },
                "BIT_0": {
                    "enable_bit": 1
                },
                "BIT_11": {
                    "flag_bit": 1
                },
                "FUN_0800643c": {
                    "set_bit_and_update": 2,
                    "set_bit_and_update_value": 3,
                    "set_bit_and_update_values": 2,
                    "set_bit_value_and_update": 1,
                    "update_and_set_bits": 1,
                    "update_and_set_flags": 9,
                    "update_bit_and_flags": 1,
                    "update_bit_and_values": 1,
                    "update_bit_value": 4,
                    "update_bit_value_and_flags": 1,
                    "update_bit_value_and_set_flags": 1,
                    "update_bit_values": 1,
                    "update_flags": 1,
                    "update_flags_and_values": 1,
                    "update_value_and_flags": 1,
                    "update_values": 1
                },
                "PB_08006420": {
                    "update_bit_value": 1
                },
                "bit_mask": {
                    "bit_mask": 1
                },
                "data_ptr": {
                    "data_ptr": 1
                },
                "flag_value": {
                    "flag_value": 1
                },
                "index": {
                    "index": 1
                },
                "new_variable_name_1": {
                    "bit_array_element": 1,
                    "bit_array_length": 1,
                    "bit_array_size": 1,
                    "bit_mask": 1,
                    "index": 1,
                    "new_value": 1,
                    "temp": 1,
                    "temp_value": 1
                },
                "new_variable_name_2": {
                    "bit_mask": 1
                },
                "param_1": {
                    "array": 1,
                    "array_pointer": 2,
                    "bit_array": 12,
                    "bits": 1,
                    "data": 8,
                    "data_array": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "flags": 1,
                    "input_array": 1,
                    "param_array": 1,
                    "pointer_to_data": 1
                },
                "param_2": {
                    "bit_value": 19,
                    "bit_value_to_update": 1,
                    "flag_value": 2,
                    "value": 9
                },
                "readable_variable_name_1": {
                    "bit_mask": 1
                },
                "readable_variable_name_2": {
                    "flag_mask": 1
                },
                "update_and_set_flags": {
                    "update_and_set_flags": 1
                },
                "update_bit_value_08006420": {
                    "set_bit_value": 1,
                    "update_bit_value": 16
                }
            },
            "called": [
                "FUN_08006420"
            ],
            "calling": [
                "FUN_08007118"
            ],
            "code": "\nundefined4 update_bit_value_and_set_flags_0800643c(uint **bit_array,undefined4 bit_value)\n\n{\n  update_bit_value(*bit_array,bit_value,4);\n  (*bit_array)[0x11] = (*bit_array)[0x11] | 0x8000;\n  **bit_array = **bit_array | 1;\n  return 0;\n}\n\n",
            "current_name": "update_bit_value_and_set_flags_0800643c",
            "entrypoint": "0x0800643c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800643c": "update_bit_value_and_set_flags_0800643c",
                "param_1": "bit_array",
                "param_2": "bit_value",
                "update_bit_value_08006420": "update_bit_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006460": {
            "additional_data": {
                "0x1111": {
                    "bit_mask1": 1,
                    "bit_pattern1": 1,
                    "first_flag": 1
                },
                "0x444": {
                    "bit_mask2": 1,
                    "bit_pattern2": 1,
                    "second_flag": 1
                },
                "FUN_08006460": {
                    "update_and_check_bit_value": 4,
                    "update_and_check_bit_values": 2,
                    "update_and_check_bits": 2,
                    "update_and_clear_bits": 2,
                    "update_and_clear_flags": 2,
                    "update_bit": 1,
                    "update_bit_and_check": 1,
                    "update_bit_and_toggle": 1,
                    "update_bit_value": 5,
                    "update_bit_values": 8,
                    "update_bits": 1,
                    "update_flags_and_bits": 1,
                    "update_flags_and_values": 1
                },
                "param_1": {
                    "array_of_pointers": 1,
                    "array_ptr": 1,
                    "bit_array": 11,
                    "bit_array_ptr": 2,
                    "bit_value": 1,
                    "bit_values": 3,
                    "bits": 2,
                    "bits_array": 3,
                    "data_array": 1,
                    "flags_and_bits": 1,
                    "input_array": 2,
                    "input_matrix": 1,
                    "pointer_to_uint": 1,
                    "updates": 1
                },
                "param_2": {
                    "bit_flag": 1,
                    "bit_index": 1,
                    "bit_mask": 1,
                    "bit_position": 1,
                    "bit_value": 22,
                    "value": 4,
                    "value_to_set": 1
                },
                "puVar1": {
                    "array": 2,
                    "array_pointer": 1,
                    "array_ptr": 3,
                    "bit_array": 3,
                    "bit_array_pointer": 1,
                    "bit_array_ptr": 3,
                    "bit_value_ptr": 1,
                    "bits_array_ptr": 1,
                    "bits_ptr": 2,
                    "current_array": 2,
                    "current_bit_array": 4,
                    "current_bit_value": 1,
                    "current_bit_values": 1,
                    "current_pointer": 1,
                    "data_ptr": 1,
                    "flags_and_bits_ptr": 1,
                    "matrix_ptr": 1,
                    "pointer_to_uint1": 1,
                    "ptr": 1
                },
                "update_bit_value_08006420": {
                    "update_bit_value": 4
                }
            },
            "called": [
                "FUN_08006420"
            ],
            "calling": [
                "FUN_080071e4"
            ],
            "code": "\nundefined4 update_and_check_bit_values_08006460(uint **bit_array,undefined4 bit_value)\n\n{\n  uint *current_bit_array;\n  \n  update_bit_value(*bit_array,bit_value,0);\n  current_bit_array = *bit_array;\n  if (((current_bit_array[8] & 0x1111) == 0) && ((current_bit_array[8] & 0x444) == 0)) {\n    current_bit_array[0x11] = current_bit_array[0x11] & 0xffff7fff;\n  }\n  current_bit_array = *bit_array;\n  if (((current_bit_array[8] & 0x1111) == 0) && ((current_bit_array[8] & 0x444) == 0)) {\n    *current_bit_array = *current_bit_array & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "current_name": "update_and_check_bit_values_08006460",
            "entrypoint": "0x08006460",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006460": "update_and_check_bit_values_08006460",
                "param_1": "bit_array",
                "param_2": "bit_value",
                "puVar1": "current_bit_array",
                "update_bit_value_08006420": "update_bit_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080064ac": {
            "called": [],
            "calling": [
                "FUN_08005e6e"
            ],
            "code": "\nvoid FUNC_080064ac(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080064ac",
            "entrypoint": "0x080064ac",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080064ac": "FUNC_080064ac"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080064ae": {
            "called": [],
            "calling": [
                "FUN_08005e6e"
            ],
            "code": "\nvoid FUNC_080064ae(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_080064ae",
            "entrypoint": "0x080064ae",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_080064ae": "FUNC_080064ae"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_080064b0": {
            "additional_data": {
                "0x14": {
                    "flag2_offset": 1,
                    "mask14": 1,
                    "offset2": 3,
                    "value2": 1,
                    "value2_offset": 2
                },
                "0x20": {
                    "constant": 1
                },
                "0x3a": {
                    "value3": 1
                },
                "0xc": {
                    "flag1_offset": 1,
                    "mask_c": 1,
                    "offset1": 3,
                    "value1": 1,
                    "value1_offset": 2
                },
                "0xfffffedf": {
                    "mask1": 1
                },
                "0xfffffffe": {
                    "mask2": 1
                },
                "DAT_": {
                    "dat_": 1
                },
                "DAT_1": {
                    "offset1": 1
                },
                "DAT_2": {
                    "offset2": 1
                },
                "FUN_080064b0": {
                    "apply_modifications": 1,
                    "clear_bit_flags": 1,
                    "clear_bits": 2,
                    "clear_bits_and_set_flag": 1,
                    "clear_bits_and_set_space": 1,
                    "clear_flags": 10,
                    "clear_flags_and_set_space": 1,
                    "clear_flags_and_set_space_char": 1,
                    "configure_memory": 1,
                    "set_flags_and_values": 2,
                    "update_and_modify_values": 1,
                    "update_data": 2,
                    "update_flags_and_values": 1,
                    "update_memory_values": 2,
                    "update_parameter_values": 1,
                    "update_settings": 1,
                    "update_value": 1,
                    "update_values": 1
                },
                "PTR_": {
                    "ptr_": 1
                },
                "PTR_1": {
                    "base_address": 1
                },
                "int": {
                    "integer": 1
                },
                "param_1": {
                    "array": 2,
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "data": 6,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "flags": 4,
                    "flags_pointer": 1,
                    "input": 1,
                    "input_params": 1,
                    "memory": 1,
                    "memory_address": 1,
                    "memory_config": 1,
                    "memory_pointer": 1,
                    "parameter": 1,
                    "ptr": 2,
                    "settings": 1,
                    "values": 1,
                    "values_array": 1
                },
                "uint": {
                    "unsigned_integer": 1
                },
                "undefined": {
                    "uchar": 1,
                    "unknown": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080069ec"
            ],
            "code": "\nvoid clear_bit_flags_080064b0(integer *data)\n\n{\n  *(unsigned_integer *)(*data + 0xc) = *(unsigned_integer *)(*data + 0xc) & 0xfffffedf;\n  *(unsigned_integer *)(*data + 0x14) = *(unsigned_integer *)(*data + 0x14) & 0xfffffffe;\n  *(unknown *)((integer)data + 0x3a) = 0x20;\n  return;\n}\n\n",
            "current_name": "clear_bit_flags_080064b0",
            "entrypoint": "0x080064b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080064b0": "clear_bit_flags_080064b0",
                "int": "integer",
                "param_1": "data",
                "uint": "unsigned_integer",
                "undefined": "unknown"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080064cc": {
            "additional_data": {
                "FUN_080064cc": {
                    "decode_and_increment": 1,
                    "decode_and_update": 1,
                    "decode_and_update_flags": 2,
                    "decode_and_update_value": 1,
                    "decode_data": 2,
                    "extract_and_modify": 1,
                    "extract_byte_value": 1,
                    "handle_param": 1,
                    "parse_data": 4,
                    "process_binary_data": 3,
                    "process_data": 11,
                    "process_input": 1,
                    "process_param": 1
                },
                "param_1": {
                    "binary_data": 1,
                    "data": 19,
                    "data_ptr": 2,
                    "input_array": 5,
                    "input_data": 2,
                    "param": 1,
                    "param_array": 1
                },
                "pbVar2": {
                    "byte_array": 1,
                    "byte_pointer": 6,
                    "byte_ptr": 19,
                    "current_byte": 2
                },
                "sVar1": {
                    "count": 8,
                    "counter": 9,
                    "iteration_count": 1,
                    "num_iterations": 1,
                    "remaining_count": 3,
                    "remaining_iterations": 6,
                    "remaining_steps": 1,
                    "updated_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080069ec"
            ],
            "code": "\nundefined4 process_binary_data_080064cc(int *data)\n\n{\n  short counter;\n  byte *byte_ptr;\n  \n  if (*(char *)((int)data + 0x39) != '!') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    *(uint *)(*data + 4) = *(ushort *)data[8] & 0x1ff;\n    if (data[4] == 0) {\n      data[8] = data[8] + 2;\n    }\n    else {\n      data[8] = data[8] + 1;\n    }\n  }\n  else {\n    byte_ptr = (byte *)data[8];\n    data[8] = (int)(byte_ptr + 1);\n    *(uint *)(*data + 4) = (uint)*byte_ptr;\n  }\n  counter = *(short *)((int)data + 0x26) + -1;\n  *(short *)((int)data + 0x26) = counter;\n  if (counter == 0) {\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffff7f;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "current_name": "process_binary_data_080064cc",
            "entrypoint": "0x080064cc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080064cc": "process_binary_data_080064cc",
                "param_1": "data",
                "pbVar2": "byte_ptr",
                "sVar1": "counter"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006538": {
            "additional_data": {
                "FUN_08006538": {
                    "calculate_and_update_values": 1,
                    "calculate_data": 1,
                    "calculate_data_shifted": 1,
                    "calculate_data_value": 10,
                    "calculate_data_values": 1,
                    "calculate_modified_value": 1,
                    "calculate_new_value": 1,
                    "calculate_result": 2,
                    "calculate_shifted_data_value": 1,
                    "calculate_value": 3,
                    "calculate_values": 2,
                    "calculate_values_and_update": 1,
                    "update_data": 1,
                    "update_data_values": 5
                },
                "get_data_value_shifted_08005a28": {
                    "get_data_value_shifted": 1,
                    "get_data_value_shifted1": 1
                },
                "get_shifted_data_value_08005a48": {
                    "get_shifted_data_value": 1,
                    "get_shifted_data_value1": 1
                },
                "iRam40013808": {
                    "result_value": 2
                },
                "iVar1": {
                    "data_value1": 9,
                    "factor1": 1,
                    "value1": 21
                },
                "iVar10": {
                    "accumulator": 1,
                    "data_value": 1,
                    "data_value10": 8,
                    "initial_value": 1,
                    "input_value": 1,
                    "pointer_value": 1,
                    "temp_var": 1,
                    "value10": 17
                },
                "iVar2": {
                    "data_value2": 9,
                    "factor2": 1,
                    "value2": 21
                },
                "iVar3": {
                    "data_value3": 9,
                    "factor3": 1,
                    "value3": 21
                },
                "iVar4": {
                    "data_value4": 9,
                    "factor4": 1,
                    "value4": 21
                },
                "iVar5": {
                    "data_value5": 9,
                    "factor5": 1,
                    "value5": 21
                },
                "iVar6": {
                    "data_value6": 9,
                    "factor6": 1,
                    "value6": 21
                },
                "iVar7": {
                    "data_value7": 9,
                    "factor7": 1,
                    "value7": 21
                },
                "iVar8": {
                    "data_value8": 9,
                    "factor8": 1,
                    "value8": 21
                },
                "iVar9": {
                    "data_value9": 9,
                    "factor9": 1,
                    "value9": 21
                },
                "param_1": {
                    "data": 4,
                    "data_parameters": 1,
                    "data_pointer": 2,
                    "data_values": 9,
                    "input": 1,
                    "input_array": 5,
                    "input_data": 5,
                    "input_params": 2,
                    "parameters": 1,
                    "values": 1
                }
            },
            "called": [
                "FUN_08005a48",
                "FUN_08005a28"
            ],
            "calling": [
                "FUN_0800674e"
            ],
            "code": "\nvoid calculate_shifted_data_value_08006538(int *data_values)\n\n{\n  int value1;\n  int value2;\n  int value3;\n  int value4;\n  int value5;\n  int value6;\n  int value7;\n  int value8;\n  int value9;\n  int value10;\n  \n  *(uint *)(*data_values + 0x10) = *(uint *)(*data_values + 0x10) & 0xffffcfff | data_values[3];\n  *(uint *)(*data_values + 0xc) =\n       data_values[2] | data_values[4] | data_values[5] | *(uint *)(*data_values + 0xc) & 0xffffe9f3;\n  *(uint *)(*data_values + 0x14) = *(uint *)(*data_values + 0x14) & 0xfffffcff | data_values[6];\n  value10 = *data_values;\n  if (value10 != 0x40013800) {\n    value1 = get_data_value_shifted();\n    value6 = data_values[1];\n    value2 = get_data_value_shifted();\n    value7 = data_values[1];\n    value3 = get_data_value_shifted();\n    value8 = data_values[1];\n    value4 = get_data_value_shifted();\n    value9 = data_values[1];\n    value5 = get_data_value_shifted();\n    *(uint *)(value10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(value4 * 0x19) / (uint)(value9 << 2) +\n                        (int)(((ulonglong)(uint)(value5 * 0x19) / (ulonglong)(uint)(data_values[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(value2 * 0x19) / (uint)(value7 << 2) +\n           (int)(((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(value8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(value1 * 0x19) / (ulonglong)(uint)(value6 << 2)) / 100) * 0x10;\n    return;\n  }\n  value10 = get_shifted_data_value();\n  value5 = data_values[1];\n  value1 = get_shifted_data_value();\n  value6 = data_values[1];\n  value2 = get_shifted_data_value();\n  value7 = data_values[1];\n  value3 = get_shifted_data_value();\n  value8 = data_values[1];\n  value4 = get_shifted_data_value();\n  result_value = ((uint)((int)((ulonglong)\n                               (((uint)(value3 * 0x19) / (uint)(value8 << 2) +\n                                (int)(((ulonglong)(uint)(value4 * 0x19) /\n                                      (ulonglong)(uint)(data_values[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(value1 * 0x19) / (uint)(value6 << 2) +\n                   (int)(((ulonglong)(uint)(value2 * 0x19) / (ulonglong)(uint)(value7 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(value10 * 0x19) / (ulonglong)(uint)(value5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "current_name": "calculate_shifted_data_value_08006538",
            "entrypoint": "0x08006538",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006538": "calculate_shifted_data_value_08006538",
                "get_data_value_shifted_08005a28": "get_data_value_shifted",
                "get_shifted_data_value_08005a48": "get_shifted_data_value",
                "iRam40013808": "result_value",
                "iVar1": "value1",
                "iVar10": "value10",
                "iVar2": "value2",
                "iVar3": "value3",
                "iVar4": "value4",
                "iVar5": "value5",
                "iVar6": "value6",
                "iVar7": "value7",
                "iVar8": "value8",
                "iVar9": "value9",
                "param_1": "data_values"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080066e8": {
            "additional_data": {
                "DAT_": {
                    "dat_": 1
                },
                "FUN_080066e8": {
                    "check_and_modify_flags": 1,
                    "check_condition": 3,
                    "check_condition_and_modify_array": 1,
                    "check_condition_and_update": 2,
                    "check_conditional": 1,
                    "check_conditions": 3,
                    "check_conditions_and_modify": 1,
                    "check_data_integrity": 1,
                    "check_data_validity": 1,
                    "check_flag": 1,
                    "check_flag_validity": 1,
                    "check_flags": 1,
                    "check_flags_validity": 1,
                    "check_inputs": 1,
                    "check_parameters": 4,
                    "check_permission": 1,
                    "check_permissions": 1,
                    "process_data": 1,
                    "validate_condition": 1,
                    "validate_parameters": 1,
                    "verify_condition": 1,
                    "verify_input": 1,
                    "verify_parameter": 1
                },
                "PTR_": {
                    "ptr_": 1
                },
                "get_data_value_08003760": {
                    "get_data_value": 4
                },
                "iVar1": {
                    "current_data_value": 3,
                    "current_value": 3,
                    "data_comparison": 1,
                    "data_diff": 1,
                    "data_difference": 3,
                    "data_value": 19
                },
                "param_1": {
                    "array": 1,
                    "array_pointer": 1,
                    "data": 5,
                    "data_array": 1,
                    "data_array_ptr": 1,
                    "data_ptr": 3,
                    "flag_array": 1,
                    "flags": 3,
                    "flags_array": 1,
                    "input_array": 4,
                    "input_ptr": 1,
                    "parameter_array": 1,
                    "parameter_list": 3,
                    "permission_array": 1,
                    "permissions": 1,
                    "pointer_array": 1,
                    "ptr_list": 1,
                    "ptr_to_ptr": 1
                },
                "param_2": {
                    "condition": 1,
                    "condition_1": 1,
                    "condition_flag": 1,
                    "condition_mask": 1,
                    "flag": 7,
                    "flag_mask": 2,
                    "input_flag": 1,
                    "input_flags": 1,
                    "input_value": 1,
                    "mask": 9,
                    "required_flags": 1,
                    "required_permissions": 2,
                    "target_bitmask": 1,
                    "value": 1,
                    "value1": 1
                },
                "param_3": {
                    "check_flag": 1,
                    "condition": 3,
                    "condition1": 1,
                    "condition_2": 1,
                    "desired_flag": 1,
                    "expected": 1,
                    "expected_result": 15,
                    "flag": 4,
                    "has_permission": 2,
                    "is_valid": 1,
                    "valid": 1
                },
                "param_4": {
                    "base_value": 1,
                    "comparison": 1,
                    "comparison_value": 1,
                    "current_value": 1,
                    "data": 3,
                    "data_len": 1,
                    "data_value": 12,
                    "reference_value": 2,
                    "target_value": 1,
                    "threshold": 1,
                    "value": 3,
                    "value1": 1,
                    "value2": 1,
                    "value_to_compare": 2
                },
                "param_5": {
                    "allowed_difference": 2,
                    "condition2": 1,
                    "difference_limit": 1,
                    "limit": 2,
                    "max_diff": 1,
                    "max_difference": 9,
                    "maximum_difference": 1,
                    "maximum_offset": 1,
                    "range": 1,
                    "threshold": 11,
                    "value2": 1
                },
                "return": {
                    "result": 1
                }
            },
            "called": [
                "FUN_08003760"
            ],
            "calling": [
                "FUN_080067ac"
            ],
            "code": "\nundefined4 check_condition_and_update_080066e8(uint **data,uint mask,uint expected_result,int data_value,uint threshold)\n\n{\n  int data_value;\n  \n  do {\n    if (((mask & ~**data) == 0) != expected_result) {\n      result 0;\n    }\n  } while ((threshold == 0xffffffff) ||\n          ((threshold != 0 && (data_value = get_data_value(), (uint)(data_value - data_value) <= threshold))));\n  (*data)[3] = (*data)[3] & 0xfffffe5f;\n  (*data)[5] = (*data)[5] & 0xfffffffe;\n  *(undefined *)((int)data + 0x39) = 0x20;\n  *(undefined *)((int)data + 0x3a) = 0x20;\n  *(undefined *)(data + 0xe) = 0;\n  result 3;\n}\n\n",
            "current_name": "check_condition_and_update_080066e8",
            "entrypoint": "0x080066e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080066e8": "check_condition_and_update_080066e8",
                "get_data_value_08003760": "get_data_value",
                "iVar1": "data_value",
                "param_1": "data",
                "param_2": "mask",
                "param_3": "expected_result",
                "param_4": "data_value",
                "param_5": "threshold",
                "return": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800674c": {
            "called": [],
            "calling": [
                "FUN_0800674e"
            ],
            "code": "\nvoid FUNC_0800674c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800674c",
            "entrypoint": "0x0800674c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800674c": "FUNC_0800674c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800674e": {
            "additional_data": {
                "0x0": {
                    "null": 1
                },
                "0x10": {
                    "second_data_offset": 1,
                    "value_2": 1,
                    "variable2_offset": 1
                },
                "0x14": {
                    "third_data_offset": 1,
                    "value_3": 1,
                    "variable3_offset": 1
                },
                "0x20": {
                    "flag_1": 1,
                    "flag_value": 1,
                    "new_value": 1
                },
                "0x2000": {
                    "constant_value2": 1,
                    "flag_2": 1,
                    "set_bit_13": 1
                },
                "0x24": {
                    "flag_constant": 1,
                    "new_flag_value": 1
                },
                "0x39": {
                    "flag": 1,
                    "flag_offset": 2
                },
                "0x3a": {
                    "flag_value2": 1
                },
                "0xc": {
                    "first_data_offset": 1,
                    "value_1": 1,
                    "variable1_offset": 1
                },
                "0xf": {
                    "temp_value": 1,
                    "unused_variable": 1
                },
                "0xffffb7ff": {
                    "clear_bit_11": 1,
                    "mask2": 1,
                    "mask_2": 1
                },
                "0xffffdfff": {
                    "clear_bit_13": 1,
                    "mask1": 1,
                    "mask_1": 1
                },
                "0xffffffd5": {
                    "clear_bit_29": 1,
                    "mask3": 1,
                    "mask_3": 1
                },
                "FUNC_0800674c": {
                    "do_something": 3,
                    "execute_function": 1,
                    "execute_related_function": 2,
                    "helper_function": 3,
                    "initialize": 1,
                    "initialize_configuration": 2,
                    "perform_action": 1,
                    "perform_additional_initialization": 2,
                    "perform_additional_processing": 2,
                    "perform_additional_setup": 2,
                    "perform_operation": 1,
                    "some_other_function": 1,
                    "update_data": 1
                },
                "FUN_0800674e": {
                    "check_and_modify_data": 1,
                    "check_and_modify_param": 1,
                    "check_and_update_data": 1,
                    "clear_and_reset_data": 1,
                    "initialize_data": 8,
                    "initialize_data_structure": 5,
                    "process_data": 3,
                    "validate_and_configure": 1,
                    "validate_and_configure_data": 1,
                    "validate_and_configure_params": 1,
                    "validate_and_initialize_data": 1,
                    "validate_and_modify_data": 1,
                    "validate_and_process_data": 1,
                    "validate_and_update_data": 2,
                    "verify_and_update_data": 1,
                    "verify_integrity": 1
                },
                "c": {
                    "constant_value": 1
                },
                "calculate_shifted_data_value_08006538": {
                    "calculate_shifted_data_value": 19,
                    "calculate_shifted_value": 6
                },
                "char": {
                    "character": 1
                },
                "data_value_c": {
                    "data_value_c": 1
                },
                "e": {
                    "flag": 1
                },
                "func_0800674c": {
                    "do_something": 1
                },
                "int": {
                    "integer": 1
                },
                "param_1": {
                    "data": 2,
                    "data_array": 6,
                    "data_pointer": 3,
                    "data_ptr": 12,
                    "data_structure": 3,
                    "data_structure_ptr": 1,
                    "input": 1,
                    "input_array": 1,
                    "param": 1,
                    "params": 1
                },
                "sizeofData": {
                    "size_of_data": 1
                },
                "uint": {
                    "u_int32": 1
                },
                "undefined": {
                    "void": 1
                },
                "undefined4": {
                    "u_int32": 1
                }
            },
            "called": [
                "FUN_08006538",
                "FUN_0800674c"
            ],
            "calling": [
                "FUN_08008078"
            ],
            "code": "\nu_int32 initialize_data_structure_0800674e(integer *data_ptr)\n\n{\n  if (data_ptr != (integer *)0x0) {\n    if (*(character *)((integer)data_ptr + 0x39) == '\\0') {\n      *(void *)(data_ptr + 0xe) = 0;\n      FUNC_0800674c();\n    }\n    *(void *)((integer)data_ptr + 0x39) = 0x24;\n    *(u_int32 *)(*data_ptr + 0xc) = *(u_int32 *)(*data_ptr + 0xc) & 0xffffdfff;\n    calculate_shifted_data_value(data_ptr);\n    *(u_int32 *)(*data_ptr + 0x10) = *(u_int32 *)(*data_ptr + 0x10) & 0xffffb7ff;\n    *(u_int32 *)(*data_ptr + 0x14) = *(u_int32 *)(*data_ptr + 0x14) & 0xffffffd5;\n    *(u_int32 *)(*data_ptr + 0xc) = *(u_int32 *)(*data_ptr + 0xc) | 0x2000;\n    data_ptr[0xf] = 0;\n    *(void *)((integer)data_ptr + 0x39) = 0x20;\n    *(void *)((integer)data_ptr + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "current_name": "initialize_data_structure_0800674e",
            "entrypoint": "0x0800674e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800674e": "initialize_data_structure_0800674e",
                "calculate_shifted_data_value_08006538": "calculate_shifted_data_value",
                "char": "character",
                "int": "integer",
                "param_1": "data_ptr",
                "uint": "u_int32",
                "undefined": "void",
                "undefined4": "u_int32"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080067ac": {
            "additional_data": {
                "FUN_080067ac": {
                    "extract_and_process_data": 1,
                    "perform_data_processing": 1,
                    "process_data": 25,
                    "process_input_data": 3,
                    "validate_input": 1
                },
                "check_condition_and_update_080066e8": {
                    "check_and_update": 1,
                    "check_and_update_condition": 1,
                    "check_condition_and_update": 2
                },
                "get_data_value_08003760": {
                    "get_data_value": 4
                },
                "iVar1": {
                    "check_result": 1,
                    "condition_result": 7,
                    "result": 21,
                    "return_value": 1,
                    "status": 1
                },
                "param_1": {
                    "array": 1,
                    "data": 1,
                    "data_array": 9,
                    "data_buffer": 5,
                    "data_pointer": 2,
                    "data_ptr": 11,
                    "input_data": 1,
                    "input_param": 1
                },
                "param_2": {
                    "data": 1,
                    "data_array": 1,
                    "data_buffer": 1,
                    "data_ptr": 1,
                    "data_values": 5,
                    "input_array": 4,
                    "input_buffer": 1,
                    "input_data": 3,
                    "input_values": 1,
                    "payload_ptr": 1,
                    "ushort_array": 1,
                    "ushort_pointer": 1,
                    "ushort_ptr": 1,
                    "value_array": 3,
                    "value_buffer": 1,
                    "value_ptr": 2,
                    "values": 1,
                    "values_ptr": 2
                },
                "param_3": {
                    "array_length": 6,
                    "array_size": 1,
                    "buffer_size": 1,
                    "data_buffer_size": 1,
                    "data_length": 7,
                    "input_length": 2,
                    "input_size": 2,
                    "length": 3,
                    "num_values": 6,
                    "payload_length": 1,
                    "value_count": 1
                },
                "param_4": {
                    "additional_data": 1,
                    "additional_param": 6,
                    "config": 1,
                    "data_config": 1,
                    "data_value": 7,
                    "extra_param": 5,
                    "flag": 1,
                    "other_param": 1,
                    "param_4": 3,
                    "parameter": 1,
                    "unknown_param": 1,
                    "value": 3
                },
                "uVar2": {
                    "output_value": 1,
                    "result": 5,
                    "return_value": 17,
                    "status": 8
                }
            },
            "called": [
                "FUN_080066e8",
                "FUN_08003760"
            ],
            "calling": [
                "FUN_08008500"
            ],
            "code": "\nundefined4 process_input_data_080067ac(int *data_ptr,ushort *data_values,int data_length,undefined4 data_value)\n\n{\n  int result;\n  undefined4 return_value;\n  \n  if (*(char *)((int)data_ptr + 0x39) == ' ') {\n    if (data_values == (ushort *)0x0) {\n      return_value = 1;\n    }\n    else if (data_length == 0) {\n      return_value = 1;\n    }\n    else if (*(char *)(data_ptr + 0xe) == '\\x01') {\n      return_value = 2;\n    }\n    else {\n      *(undefined *)(data_ptr + 0xe) = 1;\n      data_ptr[0xf] = 0;\n      *(undefined *)((int)data_ptr + 0x39) = 0x21;\n      return_value = get_data_value();\n      *(short *)(data_ptr + 9) = (short)data_length;\n      *(short *)((int)data_ptr + 0x26) = (short)data_length;\n      while (*(short *)((int)data_ptr + 0x26) != 0) {\n        *(short *)((int)data_ptr + 0x26) = *(short *)((int)data_ptr + 0x26) + -1;\n        if (data_ptr[2] == 0x1000) {\n          result = check_condition_and_update(data_ptr,0x80,0,return_value,data_value);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_ptr + 4) = *data_values & 0x1ff;\n          if (data_ptr[4] == 0) {\n            data_values = data_values + 1;\n          }\n          else {\n            data_values = (ushort *)((int)data_values + 1);\n          }\n        }\n        else {\n          result = check_condition_and_update(data_ptr,0x80,0,return_value,data_value);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_ptr + 4) = (uint)*(byte *)data_values;\n          data_values = (ushort *)((int)data_values + 1);\n        }\n      }\n      result = check_condition_and_update(data_ptr,0x40,0,return_value,data_value);\n      if (result == 0) {\n        *(undefined *)((int)data_ptr + 0x39) = 0x20;\n        *(undefined *)(data_ptr + 0xe) = 0;\n        return_value = 0;\n      }\n      else {\n        return_value = 3;\n      }\n    }\n  }\n  else {\n    return_value = 2;\n  }\n  return return_value;\n}\n\n",
            "current_name": "process_input_data_080067ac",
            "entrypoint": "0x080067ac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080067ac": "process_input_data_080067ac",
                "check_condition_and_update_080066e8": "check_condition_and_update",
                "get_data_value_08003760": "get_data_value",
                "iVar1": "result",
                "param_1": "data_ptr",
                "param_2": "data_values",
                "param_3": "data_length",
                "param_4": "data_value",
                "uVar2": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800688e": {
            "additional_data": {
                "0": {
                    "null_value": 1
                },
                "0x21": {
                    "exclamation_character": 1
                },
                "0x26": {
                    "param_1_index_0x26": 1
                },
                "0x39": {
                    "char_flag": 1,
                    "flag": 1
                },
                "0x80": {
                    "bitmask": 1
                },
                "0xc": {
                    "param_1_index_0xc": 1
                },
                "0xe": {
                    "short_flag": 1
                },
                "0xf": {
                    "param_1_index_0xf": 1
                },
                "1": {
                    "valid_result": 1
                },
                "2": {
                    "invalid_result": 1
                },
                "8": {
                    "param_1_index_8": 1
                },
                "9": {
                    "param_1_index_9": 1
                },
                "FUN_0800688e": {
                    "check_and_set_values": 1,
                    "check_parameter_validity": 1,
                    "initialize_data": 10,
                    "initialize_input": 1,
                    "process_data": 2,
                    "process_input": 2,
                    "update_data": 1,
                    "update_params": 1,
                    "validate_input": 10,
                    "validate_parameters": 2
                },
                "c": {
                    "param_1_index_c": 1
                },
                "char_1": {
                    "first_char": 1
                },
                "char_2": {
                    "second_char": 1
                },
                "char_var1": {
                    "char_flag": 1
                },
                "char_var2": {
                    "char_flag2": 1
                },
                "param_1": {
                    "array": 4,
                    "data": 10,
                    "data_array": 1,
                    "data_pointer": 2,
                    "input": 2,
                    "input_array": 10,
                    "parameters": 1,
                    "params": 1
                },
                "param_2": {
                    "int_value": 1,
                    "param2": 1,
                    "value1": 18,
                    "value_1": 11
                },
                "param_3": {
                    "param3": 1,
                    "short_value": 1,
                    "value2": 18,
                    "value_2": 11
                },
                "parameters": {
                    "parameters": 1
                },
                "short_1": {
                    "short_value1": 1
                },
                "short_2": {
                    "short_value2": 1
                },
                "uint_1": {
                    "flag": 1
                },
                "value1": {
                    "value1": 1
                },
                "value2": {
                    "value2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08008730",
                "FUN_08008694"
            ],
            "code": "\nundefined4 initialize_input_0800688e(int *input_array,int value1,int value2)\n\n{\n  if (*(char *)((int)input_array + 0x39) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    input_array[8] = value1;\n    *(short *)(input_array + 9) = (short)value2;\n    *(short *)((int)input_array + 0x26) = (short)value2;\n    input_array[0xf] = 0;\n    *(undefined *)((int)input_array + 0x39) = 0x21;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "current_name": "initialize_input_0800688e",
            "entrypoint": "0x0800688e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800688e": "initialize_input_0800688e",
                "param_1": "input_array",
                "param_2": "value1",
                "param_3": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080068d6": {
            "additional_data": {
                "FUN_080068d6": {
                    "check_and_update_parameters": 1,
                    "handle_input": 1,
                    "initialize_data": 3,
                    "initialize_widget": 1,
                    "preprocess_data": 1,
                    "process_data": 3,
                    "process_input": 3,
                    "process_params": 1,
                    "update_data": 1,
                    "validate_and_update": 1,
                    "validate_and_update_parameters": 1,
                    "validate_and_update_params": 1,
                    "validate_input": 7,
                    "validate_inputs": 2,
                    "validate_parameters": 3,
                    "validate_params": 1
                },
                "char_1": {
                    "char1": 1
                },
                "char_ptr_1": {
                    "char_ptr": 1
                },
                "input_data": {
                    "data": 1
                },
                "int_1": {
                    "int1": 1
                },
                "int_ptr_1": {
                    "int_ptr": 1
                },
                "param_1": {
                    "arg_array": 1,
                    "array": 1,
                    "array_ptr": 1,
                    "data": 6,
                    "data_array": 1,
                    "data_pointer": 2,
                    "input": 2,
                    "input_array": 7,
                    "input_buffer": 1,
                    "input_data": 2,
                    "input_list": 1,
                    "input_vals": 1,
                    "param_array": 2,
                    "parameters": 1,
                    "params": 1,
                    "widget": 1
                },
                "param_2": {
                    "param_2": 1,
                    "param_x": 1,
                    "size": 3,
                    "val1": 1,
                    "value1": 14,
                    "value_1": 9,
                    "value_2": 1,
                    "width": 1
                },
                "param_3": {
                    "flag": 1,
                    "height": 1,
                    "param_3": 1,
                    "param_y": 1,
                    "val2": 1,
                    "value": 2,
                    "value2": 14,
                    "value_2": 9,
                    "value_3": 1
                },
                "short_1": {
                    "short1": 1
                },
                "short_ptr_1": {
                    "short_ptr": 1
                },
                "uint_ptr_1": {
                    "uint_ptr": 1
                },
                "undefined_ptr_1": {
                    "undefined_ptr": 1
                },
                "value1": {
                    "length": 1
                },
                "value2": {
                    "size": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800863c",
                "FUN_08008600"
            ],
            "code": "\nundefined4 validate_input_080068d6(int *input_array,int value1,int value2)\n\n{\n  if (*(char *)((int)input_array + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    input_array[10] = value1;\n    *(short *)(input_array + 0xb) = (short)value2;\n    *(short *)((int)input_array + 0x2e) = (short)value2;\n    input_array[0xf] = 0;\n    *(undefined *)((int)input_array + 0x3a) = 0x22;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x100;\n    *(uint *)(*input_array + 0x14) = *(uint *)(*input_array + 0x14) | 1;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "current_name": "validate_input_080068d6",
            "entrypoint": "0x080068d6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080068d6": "validate_input_080068d6",
                "param_1": "input_array",
                "param_2": "value1",
                "param_3": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006932": {
            "additional_data": {
                "0x20": {
                    "flag_value": 1,
                    "value": 1,
                    "value_to_assign": 1
                },
                "0x39": {
                    "flag_offset": 1,
                    "offset_param_1": 1,
                    "offset_value": 1,
                    "some_constant": 1
                },
                "0xc": {
                    "address_offset": 1,
                    "offset": 3,
                    "offset_value": 1
                },
                "0xffffffbf": {
                    "bit_mask": 1,
                    "bitmask": 1,
                    "mask": 3
                },
                "FUN_08006932": {
                    "clear_bit_and_set_char": 1,
                    "configure_input": 1,
                    "initialize_and_adjust_settings": 1,
                    "initialize_and_clear_data": 1,
                    "initialize_and_configure": 1,
                    "initialize_and_modify_data": 1,
                    "initialize_and_modify_values": 1,
                    "initialize_and_set_flags": 3,
                    "initialize_binary_data": 1,
                    "initialize_binary_input": 4,
                    "initialize_data": 1,
                    "initialize_input": 7,
                    "initialize_input_and_clear_flags": 1,
                    "prepare_input_data": 1,
                    "set_and_initialize_input": 1,
                    "set_bit_and_initialize_input": 1,
                    "set_bit_to_zero": 1,
                    "set_input_flag_and_initialize": 1,
                    "update_flags_and_initialize_input": 1,
                    "update_input_and_initialize": 1
                },
                "PTR_08008730": {
                    "input_binary_ptr": 1
                },
                "initialize_input_from_binary_08008730": {
                    "initialize_binary_input": 3,
                    "initialize_from_binary": 1,
                    "initialize_input_from_binary": 10
                },
                "input": {
                    "input": 1
                },
                "param_1": {
                    "data_ptr": 3,
                    "flags_ptr": 2,
                    "input": 3,
                    "input_address": 1,
                    "input_array": 1,
                    "input_buffer": 1,
                    "input_config": 1,
                    "input_data": 4,
                    "input_pointer": 2,
                    "input_ptr": 12,
                    "input_settings": 1
                }
            },
            "called": [
                "FUN_08008730"
            ],
            "calling": [
                "FUN_080069ec"
            ],
            "code": "\nundefined4 initialize_binary_input_08006932(int *input_ptr)\n\n{\n  *(uint *)(*input_ptr + 0xc) = *(uint *)(*input_ptr + 0xc) & 0xffffffbf;\n  *(undefined *)((int)input_ptr + 0x39) = 0x20;\n  initialize_input_from_binary();\n  return 0;\n}\n\n",
            "current_name": "initialize_binary_input_08006932",
            "entrypoint": "0x08006932",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006932": "initialize_binary_input_08006932",
                "initialize_input_from_binary_08008730": "initialize_input_from_binary",
                "param_1": "input_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800694c": {
            "additional_data": {
                "FUN_0800694c": {
                    "decode_and_execute": 1,
                    "decode_and_execute_function": 1,
                    "decode_data": 1,
                    "decode_string": 1,
                    "parse_and_execute_command": 1,
                    "parse_input_string": 1,
                    "parse_string": 2,
                    "process_binary": 1,
                    "process_binary_data": 4,
                    "process_character": 1,
                    "process_data": 12,
                    "process_param": 1,
                    "process_string": 3
                },
                "execute_selected_function_0800870c": {
                    "execute_function": 1,
                    "execute_helper_function": 1,
                    "execute_selected_function": 1
                },
                "param_1": {
                    "binary_data": 2,
                    "command_data": 1,
                    "data": 10,
                    "data_array": 1,
                    "data_buffer": 1,
                    "data_pointer": 2,
                    "data_ptr": 2,
                    "input": 2,
                    "input_array": 3,
                    "input_data": 2,
                    "input_string": 1,
                    "param_array": 1,
                    "parameters": 1,
                    "string_data": 1,
                    "string_info": 1
                },
                "pbVar1": {
                    "byte_pointer": 9,
                    "byte_ptr": 14,
                    "dest_byte_ptr": 1,
                    "output_byte": 4
                },
                "puVar3": {
                    "byte_pointer2": 1,
                    "byte_ptr": 1,
                    "byte_ptr2": 1,
                    "char_ptr": 1,
                    "dest_ptr": 1,
                    "dest_undefined_ptr": 1,
                    "output_byte_ptr": 3,
                    "output_ptr": 1,
                    "pointer": 1,
                    "undef_pointer": 1,
                    "undefined_pointer": 7,
                    "undefined_ptr": 9
                },
                "sVar2": {
                    "count": 11,
                    "counter": 9,
                    "loop_counter": 2,
                    "num_iterations": 1,
                    "remaining_count": 1,
                    "remaining_iterations": 1,
                    "remaining_steps": 1,
                    "temp_short": 1,
                    "temp_value": 1
                }
            },
            "called": [
                "FUN_0800870c"
            ],
            "calling": [
                "FUN_080069ec"
            ],
            "code": "\nundefined4 process_binary_data_0800694c(int *data)\n\n{\n  byte *byte_ptr;\n  short count;\n  undefined *undefined_ptr;\n  \n  if (*(char *)((int)data + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    if (data[4] == 0) {\n      *(ushort *)data[10] = (ushort)((uint)(*(int *)(*data + 4) << 0x17) >> 0x17);\n      data[10] = data[10] + 2;\n    }\n    else {\n      *(ushort *)data[10] = (ushort)*(undefined4 *)(*data + 4) & 0xff;\n      data[10] = data[10] + 1;\n    }\n  }\n  else if (data[4] == 0) {\n    undefined_ptr = (undefined *)data[10];\n    data[10] = (int)(undefined_ptr + 1);\n    *undefined_ptr = (char)*(undefined4 *)(*data + 4);\n  }\n  else {\n    byte_ptr = (byte *)data[10];\n    data[10] = (int)(byte_ptr + 1);\n    *byte_ptr = (byte)*(undefined4 *)(*data + 4) & 0x7f;\n  }\n  count = *(short *)((int)data + 0x2e) + -1;\n  *(short *)((int)data + 0x2e) = count;\n  if (count != 0) {\n    return 0;\n  }\n  *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffffdf;\n  *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xfffffeff;\n  *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) & 0xfffffffe;\n  *(undefined *)((int)data + 0x3a) = 0x20;\n  execute_selected_function();\n  return 0;\n}\n\n",
            "current_name": "process_binary_data_0800694c",
            "entrypoint": "0x0800694c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800694c": "process_binary_data_0800694c",
                "execute_selected_function_0800870c": "execute_selected_function",
                "param_1": "data",
                "pbVar1": "byte_ptr",
                "puVar3": "undefined_ptr",
                "sVar2": "count"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080069ec": {
            "additional_data": {
                "$": {
                    "i_var1": 1
                },
                "FUNC_0800877c": {
                    "cleanup": 2,
                    "clear_flags": 1,
                    "function_1": 1
                },
                "FUN_080069ec": {
                    "check_and_process_binary_data": 1,
                    "check_binary_data": 2,
                    "handle_binary_data": 2,
                    "process_binary": 1,
                    "process_binary_data": 2,
                    "process_data": 18,
                    "process_flags_and_data": 1,
                    "process_input_data": 4
                },
                "LAB_08006b0c_1": {
                    "constant_label": 1,
                    "label_1": 1,
                    "some_label": 1
                },
                "clear_bit_flags_080064b0": {
                    "clear_bit_flags": 3,
                    "clear_bit_flags_case2": 1,
                    "clear_flags": 2
                },
                "func_0800877c": {
                    "cleanup": 1
                },
                "iVar1": {
                    "error_code": 2,
                    "init_data_result": 1,
                    "init_result": 1,
                    "initialize_data_result": 1,
                    "result": 21,
                    "return_value": 2,
                    "status": 1
                },
                "initialize_binary_input_08006932": {
                    "initialize_binary_input": 2,
                    "initialize_input": 4
                },
                "initialize_data_08004050": {
                    "initialize_data": 5
                },
                "param_1": {
                    "binary_data": 3,
                    "data": 18,
                    "data_ptr": 2,
                    "input_data": 7,
                    "parameters": 1
                },
                "process_binary_data_080064cc": {
                    "process_binary_data2": 1,
                    "process_binary_data_case2": 1,
                    "process_data2": 1,
                    "process_data_case_2": 1,
                    "process_data_type2": 1,
                    "process_input_data": 1
                },
                "process_binary_data_0800694c": {
                    "process_binary_data1": 1,
                    "process_binary_data_case1": 1,
                    "process_data": 1,
                    "process_data1": 1,
                    "process_data_case_1": 1,
                    "process_data_type1": 1
                },
                "puVar3": {
                    "data": 3,
                    "data_pointer": 1,
                    "data_ptr": 4,
                    "input_value": 1,
                    "pointer": 2,
                    "pointer_3": 1,
                    "ptr": 11,
                    "ptr3": 2,
                    "ptr_data": 6
                },
                "uVar2": {
                    "flag": 3,
                    "flag1": 2,
                    "flag_1": 1,
                    "flag_value": 1,
                    "flags": 3,
                    "param2_value": 1,
                    "param3_val": 1,
                    "second_value": 1,
                    "value": 1,
                    "value1": 5,
                    "value2": 4,
                    "value_2": 3,
                    "var1": 1,
                    "var2": 4
                },
                "uVar4": {
                    "bit_flag": 6,
                    "check_value": 2,
                    "flag": 9,
                    "flag2": 3,
                    "flag_2": 1,
                    "value2": 3,
                    "value4": 1,
                    "value_4": 1,
                    "var2": 1,
                    "var4": 4
                },
                "uVar5": {
                    "byte_flag": 1,
                    "data": 1,
                    "data_flag": 2,
                    "first_value": 1,
                    "flag": 1,
                    "flag3": 2,
                    "flag_3": 1,
                    "flag_mask": 2,
                    "input_flag": 1,
                    "param1_val": 1,
                    "param1_value": 1,
                    "value1": 3,
                    "value2": 2,
                    "value3": 3,
                    "value5": 1,
                    "value_1": 2,
                    "value_5": 1,
                    "var3": 1,
                    "var5": 4
                }
            },
            "called": [
                "FUN_080064cc",
                "FUN_080064b0",
                "FUN_0800694c",
                "FUN_08006932",
                "FUN_0800877c",
                "FUN_08004050"
            ],
            "calling": [],
            "code": "\nvoid process_input_data_080069ec(uint **data)\n\n{\n  int result;\n  uint value1;\n  uint *ptr;\n  uint flag;\n  uint var5;\n  \n  ptr = *data;\n  var5 = *ptr;\n  value1 = ptr[3];\n  if ((((var5 & 0xf) == 0) && ((var5 & 0x20) != 0)) && ((value1 & 0x20) != 0)) {\n    process_binary_data_case1(data);\n    return;\n  }\n  if (((var5 & 0xf) == 0) || ((flag = ptr[5] & 1, flag == 0 && ((value1 & 0x120) == 0)))) {\n    if (((var5 & 0x80) != 0) && ((value1 & 0x80) != 0)) {\n      process_binary_data2(data);\n      return;\n    }\n    if (((var5 & 0x40) != 0) && ((value1 & 0x40) != 0)) {\n      initialize_input(data);\n    }\n  }\n  else {\n    if (((var5 & 1) != 0) && ((value1 & 0x100) != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 1);\n    }\n    if (((var5 & 4) != 0) && (flag != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 2);\n    }\n    if (((var5 & 2) != 0) && (flag != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 4);\n    }\n    if (((var5 & 8) != 0) && (flag != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 8);\n    }\n    if (data[0xf] != (uint *)0x0) {\n      if (((var5 & 0x20) != 0) && ((value1 & 0x20) != 0)) {\n        process_binary_data_case1(data);\n      }\n      if ((((uint)data[0xf] & 8) == 0) && (((*data)[5] & 0x40) == 0)) {\n        FUNC_0800877c(data);\n        data[0xf] = (uint *)0x0;\n        return;\n      }\n      clear_bit_flags(data);\n      ptr = *data;\n      if ((ptr[5] & 0x40) == 0) {\n        FUNC_0800877c(data);\n        return;\n      }\n      ptr[5] = ptr[5] & 0xffffffbf;\n      if (data[0xd] == (uint *)0x0) {\n        FUNC_0800877c(data);\n        return;\n      }\n      data[0xd][0xd] = (uint)&label_1;\n      result = initialize_data(data[0xd]);\n      if (result != 0) {\n        (*(code *)data[0xd][0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_input_data_080069ec",
            "entrypoint": "0x080069ec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080069ec": "process_input_data_080069ec",
                "LAB_08006b0c_1": "label_1",
                "clear_bit_flags_080064b0": "clear_bit_flags",
                "iVar1": "result",
                "initialize_binary_input_08006932": "initialize_input",
                "initialize_data_08004050": "initialize_data",
                "param_1": "data",
                "process_binary_data_080064cc": "process_binary_data2",
                "process_binary_data_0800694c": "process_binary_data_case1",
                "puVar3": "ptr",
                "uVar2": "value1",
                "uVar4": "flag",
                "uVar5": "var5"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006b1c": {
            "additional_data": {
                "FUN_08006b1": {
                    "combine_bytes": 1
                },
                "FUN_08006b1c": {
                    "combine_bytes": 29,
                    "merge_bytes": 1
                },
                "param_1": {
                    "address": 4,
                    "base_address": 2,
                    "input": 14,
                    "input_address": 2,
                    "input_offset": 1,
                    "input_value": 3,
                    "offset": 3,
                    "start_address": 1,
                    "starting_address": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080085dc",
                "FUN_080085b8"
            ],
            "code": "\nbyte combine_bytes_08006b1c(int input)\n\n{\n  return *(byte *)(input + 0x3a) | *(byte *)(input + 0x39);\n}\n\n",
            "current_name": "combine_bytes_08006b1c",
            "entrypoint": "0x08006b1c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006b1c": "combine_bytes_08006b1c",
                "param_1": "input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006b28": {
            "additional_data": {
                "DAT_": {
                    "": 1
                },
                "DAT_1f010101": {
                    "mask": 1
                },
                "DAT_XXXXXX": {
                    "unchanged_variable": 1
                },
                "FUN_08006b28": {
                    "extract_and_shift_bits": 1,
                    "extract_bit": 2,
                    "extract_bit_from_pointer": 2,
                    "extract_bit_from_uint": 1,
                    "extract_bits": 1,
                    "extract_bits_from_uint": 1,
                    "extracted_bit": 1,
                    "get_bit": 1,
                    "get_bit_at_index": 1,
                    "get_bit_from_address": 1,
                    "get_bit_from_encoded_value": 1,
                    "get_bit_from_memory": 1,
                    "get_bit_from_uint": 1,
                    "get_bit_from_uint_array": 2,
                    "get_bit_value": 7,
                    "lookup_value": 1,
                    "read_bit_from_memory": 1,
                    "retrieve_bit": 3,
                    "retrieve_bit_value": 1,
                    "reverse_bitwise_extraction": 1
                },
                "PTR_": {
                    "": 1
                },
                "PTR_XXXXXX": {
                    "unchanged_variable": 1
                },
                "mask": {
                    "bit_mask": 1
                },
                "param_1": {
                    "address": 1,
                    "bit_index": 1,
                    "bit_position": 1,
                    "data": 3,
                    "encoded_value": 1,
                    "index": 7,
                    "input": 2,
                    "input_value": 6,
                    "value": 8,
                    "value_shifted": 1
                },
                "param_2": {
                    "address": 4,
                    "address_offset": 1,
                    "array": 4,
                    "array_address": 5,
                    "array_base": 3,
                    "array_base_address": 1,
                    "array_index": 1,
                    "array_offset": 1,
                    "array_ptr": 2,
                    "array_start": 1,
                    "base_address": 1,
                    "data": 1,
                    "data_address": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "memory_address": 1,
                    "pointer": 1,
                    "pointer_address": 1
                },
                "param_3": {
                    "bit_index": 1
                },
                "uint": {
                    "unsigned_int": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080088e0",
                "FUN_08008990",
                "FUN_08008a24",
                "FUN_08008a6c"
            ],
            "code": "\nunsigned_int get_bit_from_encoded_value_08006b28(unsigned_int value,int array_address)\n\n{\n  return *(unsigned_int *)(array_address + ((value << 0x18) >> 0x1c) * 4) >> (value & 0xf) & 1;\n}\n\n",
            "current_name": "get_bit_from_encoded_value_08006b28",
            "entrypoint": "0x08006b28",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006b28": "get_bit_from_encoded_value_08006b28",
                "param_1": "value",
                "param_2": "array_address",
                "uint": "unsigned_int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006b3e": {
            "additional_data": {
                "FUN_08006b3e": {
                    "bitwise_set_bit_in_array": 1,
                    "initialize_bit": 1,
                    "set_bit": 3,
                    "set_bit_at_offset": 1,
                    "set_bit_in_array": 10,
                    "set_bit_in_memory": 1,
                    "set_bit_in_pointer_array": 1,
                    "update_bit": 2,
                    "update_bit_in_array": 4,
                    "update_bit_value": 2,
                    "update_bitwise_value": 1,
                    "update_memory": 2,
                    "update_param2_value": 1
                },
                "original_variable_name_1": {
                    "updated_value": 1
                },
                "param_1": {
                    "bit_index": 6,
                    "bit_number": 1,
                    "bit_position": 8,
                    "index": 2,
                    "input": 2,
                    "input_value": 9,
                    "value": 2,
                    "value_to_set": 1
                },
                "param_2": {
                    "array": 9,
                    "array_address": 11,
                    "array_pointer": 1,
                    "array_ptr": 3,
                    "bit_array": 1,
                    "buffer": 1,
                    "data_array": 1,
                    "memory_address": 3,
                    "param_pointer": 1
                },
                "uVar1": {
                    "array_index": 3,
                    "bit_index": 1,
                    "byte_index": 3,
                    "byte_offset": 1,
                    "byte_shift": 1,
                    "element_index": 1,
                    "index": 2,
                    "offset": 1,
                    "shift_amount": 1,
                    "shifted_bit_index": 1,
                    "shifted_bits": 1,
                    "shifted_index": 6,
                    "shifted_position": 2,
                    "shifted_value": 3,
                    "word_offset": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080088e0",
                "FUN_08008990"
            ],
            "code": "\nvoid bitwise_set_bit_in_array_08006b3e(uint input_value,int array_address)\n\n{\n  uint shifted_index;\n  \n  shifted_index = (input_value << 0x18) >> 0x1c;\n  *(uint *)(array_address + shifted_index * 4) = *(uint *)(array_address + shifted_index * 4) | 1 << (input_value & 0xf);\n  return;\n}\n\n",
            "current_name": "bitwise_set_bit_in_array_08006b3e",
            "entrypoint": "0x08006b3e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006b3e": "bitwise_set_bit_in_array_08006b3e",
                "param_1": "input_value",
                "param_2": "array_address",
                "uVar1": "shifted_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006b5c": {
            "additional_data": {
                "FUN_08006b5c": {
                    "set_bit_to_zero": 2,
                    "store_bit_in_array": 1,
                    "update_array_bit": 1,
                    "update_array_element": 1,
                    "update_array_value": 1,
                    "update_bit": 7,
                    "update_bit_array": 1,
                    "update_bit_in_array": 3,
                    "update_bit_value": 3,
                    "update_bit_value_at_index": 1,
                    "update_bitmask": 1,
                    "update_bits": 3,
                    "update_bits_in_array": 1,
                    "update_data_bits": 1,
                    "update_data_in_array": 2,
                    "update_parameter_value": 1,
                    "update_value_in_array": 1
                },
                "param_1": {
                    "array_index": 1,
                    "bit_index": 3,
                    "bit_num": 1,
                    "bit_position": 11,
                    "data": 1,
                    "index": 3,
                    "input_value": 5,
                    "value": 6
                },
                "param_2": {
                    "address": 1,
                    "array": 9,
                    "array_addr": 1,
                    "array_address": 9,
                    "array_base": 1,
                    "array_base_address": 1,
                    "array_offset": 1,
                    "bitmask_ptr": 1,
                    "data": 2,
                    "data_address": 1,
                    "data_array": 1,
                    "memory_address": 1,
                    "memory_buffer": 1,
                    "target_address": 1
                },
                "uVar1": {
                    "array_index": 2,
                    "bit_index": 1,
                    "byte_offset": 1,
                    "index": 2,
                    "masked_index": 1,
                    "offset": 1,
                    "shift_amount": 1,
                    "shifted_bit": 2,
                    "shifted_bits": 1,
                    "shifted_index": 10,
                    "shifted_position": 4,
                    "shifted_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08008990"
            ],
            "code": "\nvoid update_bit_in_array_08006b5c(uint bit_position,int array)\n\n{\n  uint shifted_index;\n  \n  shifted_index = (bit_position << 0x18) >> 0x1c;\n  *(uint *)(array + shifted_index * 4) = *(uint *)(array + shifted_index * 4) & ~(1 << (bit_position & 0xf));\n  return;\n}\n\n",
            "current_name": "update_bit_in_array_08006b5c",
            "entrypoint": "0x08006b5c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006b5c": "update_bit_in_array_08006b5c",
                "param_1": "bit_position",
                "param_2": "array",
                "uVar1": "shifted_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006b7c": {
            "additional_data": {
                "0": {
                    "addr_0": 1,
                    "address0": 1,
                    "address1": 3,
                    "address_0": 3,
                    "base": 1,
                    "base_address": 2,
                    "base_address_0": 1,
                    "first_value": 1,
                    "mem_address_1": 1,
                    "memory_address_0": 2,
                    "memory_offset_0": 1,
                    "offset_0": 1
                },
                "1": {
                    "addr_1": 1,
                    "address1": 1,
                    "address2": 3,
                    "address_1": 4,
                    "address_step": 1,
                    "base_address_1": 1,
                    "mem_address_2": 1,
                    "memory_address_1": 2,
                    "memory_offset_1": 1,
                    "offset1": 1,
                    "offset_1": 1,
                    "second_value": 1
                },
                "2": {
                    "addr_2": 1,
                    "address2": 1,
                    "address3": 3,
                    "address_2": 4,
                    "address_increment": 1,
                    "base_address_2": 1,
                    "mem_address_3": 1,
                    "memory_address_2": 2,
                    "memory_offset_2": 1,
                    "offset2": 1,
                    "offset_2": 1,
                    "third_value": 1
                },
                "3": {
                    "addr_3": 1,
                    "address3": 1,
                    "address4": 3,
                    "address_3": 4,
                    "address_multiplier": 1,
                    "base_address_3": 1,
                    "fourth_value": 1,
                    "mem_address_4": 1,
                    "memory_address_3": 2,
                    "memory_offset_3": 1,
                    "offset3": 1,
                    "offset_3": 1
                },
                "4": {
                    "addr_4": 1,
                    "address4": 1,
                    "address5": 3,
                    "address_4": 4,
                    "address_offset": 1,
                    "base_address_4": 1,
                    "fifth_value": 1,
                    "mem_address_5": 1,
                    "memory_address_4": 2,
                    "memory_offset_4": 1,
                    "offset4": 1,
                    "offset_4": 1
                },
                "FUN_08006b7c": {
                    "get_address": 1,
                    "get_address_based_on_param": 1,
                    "get_address_by_index": 1,
                    "get_address_offset": 1,
                    "get_base_address": 1,
                    "get_memory_address": 19,
                    "get_memory_offset": 1,
                    "map_input_to_address": 2,
                    "map_param_to_address": 3,
                    "map_parameter_value": 1
                },
                "param_1": {
                    "index": 5,
                    "input": 6,
                    "input_index": 1,
                    "input_param": 1,
                    "input_value": 9,
                    "memory_index": 1,
                    "option": 1,
                    "param": 3,
                    "parameter": 1,
                    "value": 3
                },
                "return": {
                    "memory_address": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_08008a24",
                "FUN_08008a6c"
            ],
            "code": "\nundefined4 get_memory_address_08006b7c(undefined4 input_value)\n\n{\n  switch(input_value) {\n  case 0:\n    memory_address 0x40010800;\n  case 1:\n    memory_address 0x40010c00;\n  case 2:\n    memory_address 0x40011000;\n  case 3:\n    memory_address 0x40011400;\n  case 4:\n    memory_address 0x40011800;\n  default:\n    memory_address 0;\n  }\n}\n\n",
            "current_name": "get_memory_address_08006b7c",
            "entrypoint": "0x08006b7c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006b7c": "get_memory_address_08006b7c",
                "param_1": "input_value",
                "return": "memory_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006bb8": {
            "additional_data": {
                "FUN_08006bb8": {
                    "configure_device": 1,
                    "configure_memory_address": 1,
                    "configure_peripheral": 2,
                    "set_base_address": 1,
                    "set_bit_and_return_address": 2,
                    "set_configuration": 1,
                    "set_data_and_return_address": 1,
                    "set_flag_and_return_address": 4,
                    "set_flag_and_return_value": 1,
                    "set_flags_and_return_address": 2,
                    "set_memory_access_flags": 1,
                    "set_memory_address": 1,
                    "set_memory_flag": 2,
                    "set_memory_location": 1,
                    "set_permission_address": 1,
                    "set_permissions": 1,
                    "set_permissions_and_address": 1,
                    "set_register_address": 1,
                    "set_registers": 1,
                    "update_data": 1,
                    "update_data_in_register": 1,
                    "update_memory_with_values": 1,
                    "update_register_address": 1,
                    "update_register_and_return_address": 1
                },
                "_DAT_40021018": {
                    "flags": 1,
                    "memory_address": 1
                },
                "param_1": {
                    "access_type": 1,
                    "address_index": 1,
                    "bit_flag": 1,
                    "bit_index": 2,
                    "configuration": 1,
                    "data_index": 1,
                    "device_type": 1,
                    "flag": 6,
                    "flag_value": 1,
                    "input": 4,
                    "input_value": 2,
                    "option": 1,
                    "peripheral_index": 2,
                    "permission_index": 1,
                    "permission_level": 1,
                    "permission_type": 1,
                    "register_index": 2,
                    "value": 2
                },
                "uVar1": {
                    "address": 8,
                    "base_address": 2,
                    "device_address": 1,
                    "memory_address": 1,
                    "new_address": 1,
                    "new_memory_address": 1,
                    "new_memory_location": 1,
                    "output": 2,
                    "output_address": 1,
                    "peripheral_address": 1,
                    "register_address": 1,
                    "result": 3,
                    "return_address": 4,
                    "return_value": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_08006ca8",
                "FUN_08007258",
                "FUN_080077b0",
                "FUN_08008078",
                "FUN_08006e68"
            ],
            "code": "\n\n\nundefined4 set_flag_and_return_address_08006bb8(undefined4 flag)\n\n{\n  undefined4 address;\n  \n  switch(flag) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    address = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    address = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    address = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    address = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    address = 0x40011800;\n    break;\n  default:\n    address = 0;\n  }\n  return address;\n}\n\n",
            "current_name": "set_flag_and_return_address_08006bb8",
            "entrypoint": "0x08006bb8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006bb8": "set_flag_and_return_address_08006bb8",
                "param_1": "flag",
                "uVar1": "address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006c60": {
            "additional_data": {
                "FUN_08006c60": {
                    "calculate_shifted_value": 1,
                    "extract_and_adjust_value": 1,
                    "extract_value": 4,
                    "extracted_value": 2,
                    "get_bit": 1,
                    "get_indexed_value": 1,
                    "get_modified_value": 1,
                    "get_shifted_and_masked_value": 1,
                    "get_shifted_value": 14,
                    "get_value_by_index": 1,
                    "get_value_index": 1,
                    "get_value_limit": 1,
                    "get_value_shifted": 1,
                    "process_value": 1
                },
                "iVar1": {
                    "bit_value": 1,
                    "extracted_value": 3,
                    "indexed_value": 3,
                    "result": 4,
                    "shifted_value": 1,
                    "value": 15,
                    "value_by_index": 1
                },
                "param_1": {
                    "index": 13,
                    "input_1": 1,
                    "input_param": 1,
                    "input_value": 2,
                    "value": 7,
                    "value1": 2,
                    "value_1": 2,
                    "value_index": 2,
                    "value_param_1": 1
                },
                "param_2": {
                    "constant": 1,
                    "index": 3,
                    "input_2": 1,
                    "param": 1,
                    "param2": 1,
                    "param_2": 4,
                    "reserved_param": 1,
                    "unknown": 2,
                    "unused": 2,
                    "unused_param": 4,
                    "unused_param_2": 1,
                    "value2": 2,
                    "value_2": 1,
                    "value_param_2": 1
                },
                "param_3": {
                    "array": 2,
                    "array_start": 1,
                    "data_param": 1,
                    "data_start": 1,
                    "index": 5,
                    "index_param": 1,
                    "input_3": 1,
                    "length": 1,
                    "param": 1,
                    "param3": 1,
                    "param_3": 6,
                    "pointer_1": 1,
                    "start_value": 1,
                    "unknown": 1,
                    "unknown2": 1,
                    "unused": 1,
                    "unused_param": 1,
                    "unused_param_3": 1,
                    "value3": 1,
                    "value_3": 2
                },
                "param_4": {
                    "array_length": 1,
                    "data_end": 1,
                    "end_value": 1,
                    "extra_param": 1,
                    "index_param": 1,
                    "input_4": 1,
                    "mask": 1,
                    "param4": 1,
                    "param_4": 8,
                    "pointer_2": 1,
                    "size": 4,
                    "unknown": 1,
                    "unknown3": 1,
                    "unused": 1,
                    "unused_param": 1,
                    "unused_param2": 1,
                    "unused_param_2": 1,
                    "unused_param_4": 1,
                    "value4": 1,
                    "value_4": 2
                },
                "uVar2": {
                    "adjusted_value": 1,
                    "bit_result": 1,
                    "result": 1,
                    "shifted_value": 26
                }
            },
            "called": [
                "FUN_08007376"
            ],
            "calling": [
                "FUN_08006d80"
            ],
            "code": "\nuint get_shifted_and_masked_value_08006c60(undefined4 index,undefined4 unused_param,undefined4 param_3,undefined4 param_4)\n\n{\n  int value;\n  uint shifted_value;\n  \n  value = get_value_by_index_08007376(index,&DAT_0800a5b8,param_3,param_4,param_4);\n  shifted_value = (uint)(value << 0xc) >> 0x1b;\n  if (0x10 < shifted_value - 1) {\n    shifted_value = 0;\n  }\n  return shifted_value;\n}\n\n",
            "current_name": "get_shifted_and_masked_value_08006c60",
            "entrypoint": "0x08006c60",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006c60": "get_shifted_and_masked_value_08006c60",
                "iVar1": "value",
                "param_1": "index",
                "param_2": "unused_param",
                "uVar2": "shifted_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006c7c": {
            "additional_data": {
                "FUN_08006c7c": {
                    "calculate_result": 1,
                    "calculate_shifted_value": 2,
                    "decode_and_get_value": 1,
                    "decode_value": 1,
                    "extract_and_calculate_value": 1,
                    "find_value": 1,
                    "get_result_from_binary": 1,
                    "get_return_value": 1,
                    "get_shifted_value": 16,
                    "get_value_from_index_and_convert": 1,
                    "get_value_shifted": 1,
                    "get_value_shifted_bits": 1,
                    "get_value_type": 1,
                    "process_value": 2
                },
                "iVar1": {
                    "decoded_value": 1,
                    "extracted_value": 1,
                    "index": 1,
                    "index_value": 2,
                    "result": 11,
                    "return_value": 1,
                    "shifted_value": 5,
                    "value": 7,
                    "value_result": 1
                },
                "param_1": {
                    "index": 5,
                    "input": 2,
                    "input_value": 8,
                    "input_value_1": 1,
                    "value": 14,
                    "value_1": 1
                },
                "param_2": {
                    "index": 5,
                    "param2": 4,
                    "param_2": 8,
                    "unknown_param_1": 1,
                    "unnamed_param_2": 1,
                    "unused": 1,
                    "unused_param": 4,
                    "unused_parameter": 1
                },
                "param_3": {
                    "array": 1,
                    "data": 2,
                    "data_1": 1,
                    "index": 8,
                    "index_value": 1,
                    "input_value_2": 1,
                    "param3": 4,
                    "param_3": 9,
                    "unknown_param_2": 1,
                    "unnamed_param_3": 1,
                    "unused": 1,
                    "value_2": 1
                },
                "param_4": {
                    "data_2": 1,
                    "input_value_3": 1,
                    "param": 2,
                    "param4": 4,
                    "param_4": 12,
                    "size": 5,
                    "unknown_param_3": 1,
                    "unnamed_param_4": 1,
                    "unused": 1,
                    "unused_param": 1,
                    "unused_param_2": 1,
                    "value_3": 1
                },
                "uVar2": {
                    "bit_masked_value": 1,
                    "shifted_bits": 8,
                    "shifted_value": 20,
                    "value_type": 1
                }
            },
            "called": [
                "FUN_08007376"
            ],
            "calling": [
                "FUN_08007118",
                "FUN_080071e4"
            ],
            "code": "\nundefined4 get_value_shifted_bits_08006c7c(undefined4 value,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  uint shifted_value;\n  \n  result = get_value_by_index_08007376(value,&DAT_0800a6cc,param_3,param_4,param_4);\n  shifted_value = (uint)(result << 0xc) >> 0x1b;\n  if (shifted_value == 3) {\n    return 8;\n  }\n  if (shifted_value != 4) {\n    if (shifted_value != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "current_name": "get_value_shifted_bits_08006c7c",
            "entrypoint": "0x08006c7c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006c7c": "get_value_shifted_bits_08006c7c",
                "iVar1": "result",
                "param_1": "value",
                "uVar2": "shifted_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006ca8": {
            "additional_data": {
                "FUN_08006ca8": {
                    "update_flag_and_register": 3,
                    "update_flag_and_register_info": 1,
                    "update_flag_and_registers": 3,
                    "update_flag_and_return_address": 3,
                    "update_flag_register": 1,
                    "update_flag_register_and_return": 1,
                    "update_flag_registers": 1,
                    "update_flags_and_registers": 14,
                    "update_register_flags": 2,
                    "update_registers": 1,
                    "update_registers_and_flags": 1
                },
                "iVar3": {
                    "current_value": 5,
                    "data": 1,
                    "data_value": 1,
                    "first_element": 1,
                    "flag": 2,
                    "flag_code": 1,
                    "flag_mask": 1,
                    "flag_offset": 1,
                    "flag_value": 2,
                    "input": 1,
                    "input_value": 2,
                    "input_var": 1,
                    "register_value": 2,
                    "value": 7,
                    "value1": 1,
                    "value_check": 1,
                    "variable_value": 1
                },
                "local_10": {
                    "accumulator": 1,
                    "another_constant": 1,
                    "constant2": 4,
                    "constant_0": 6,
                    "constant_value2": 1,
                    "flag_offset": 1,
                    "initial_value": 1,
                    "offset": 3,
                    "register_2": 3,
                    "register_value": 3,
                    "register_value_old": 1,
                    "some_variable": 1,
                    "temp_value": 1,
                    "unused_variable": 1,
                    "update_value": 1,
                    "value3": 1,
                    "zero_value": 1
                },
                "local_14": {
                    "bit_count": 1,
                    "constant1": 4,
                    "constant_1": 3,
                    "constant_3": 3,
                    "constant_value": 1,
                    "constant_value1": 1,
                    "count": 2,
                    "flag": 1,
                    "flag_bit": 1,
                    "flag_count": 1,
                    "flag_length": 1,
                    "flag_update_value": 1,
                    "length": 1,
                    "num_bits": 2,
                    "num_iterations": 1,
                    "register_1": 3,
                    "register_value": 1,
                    "some_constant": 2,
                    "value2": 1
                },
                "local_18": {
                    "bit_mask": 15,
                    "bitmask": 13,
                    "bitwise_flag": 1,
                    "flag_bit": 1,
                    "mask": 1
                },
                "param_1": {
                    "data": 4,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "flag": 1,
                    "flag_address": 1,
                    "flag_array": 1,
                    "flag_pointer": 1,
                    "flag_ptr": 2,
                    "flags_and_registers": 1,
                    "input": 1,
                    "input_array": 2,
                    "input_data": 3,
                    "input_ptr": 4,
                    "pointer": 1,
                    "register": 1,
                    "register_ptr": 1,
                    "value": 1,
                    "value_ptr": 1
                },
                "param_2": {
                    "address": 4,
                    "address_value": 1,
                    "flag": 3,
                    "flag_value": 4,
                    "input_value": 2,
                    "param": 6,
                    "param_value": 5,
                    "parameter_value": 1,
                    "value": 5
                },
                "set_flag_and_return_address_08006bb8": {
                    "set_flag_and_return_address": 1
                },
                "uVar1": {
                    "address": 14,
                    "address_returned": 1,
                    "flag_address": 1,
                    "flag_and_address": 1,
                    "flag_register": 1,
                    "flag_returned": 1,
                    "new_address": 1,
                    "result": 7,
                    "return_address": 3,
                    "updated_address": 1
                },
                "uVar2": {
                    "flag": 10,
                    "flag_and_address": 1,
                    "flag_mask": 1,
                    "flag_update_value": 1,
                    "flag_updated": 1,
                    "flag_value": 11,
                    "flag_variable": 1,
                    "flags": 3,
                    "updated_flag": 1,
                    "updated_flag_register": 1
                },
                "update_flags_and_registers_080040e8": {
                    "update_flags_and_registers": 1
                }
            },
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "calling": [
                "FUN_08003bd8"
            ],
            "code": "\n\n\nvoid update_registers_and_flags_08006ca8(int *input_ptr,undefined4 param)\n\n{\n  undefined4 address;\n  uint flag_value;\n  int value;\n  uint bit_mask;\n  undefined4 constant1;\n  undefined4 constant_0;\n  \n  value = *input_ptr;\n  if (value == 0x40012400) {\n    flag_value = _DAT_40021018 | 0x200;\n    value = 0x200;\n    _DAT_40021018 = flag_value;\n  }\n  else {\n    flag_value = 0x40012800;\n    if (value == 0x40012800) {\n      flag_value = _DAT_40021018 | 0x400;\n      value = 0x400;\n      _DAT_40021018 = flag_value;\n    }\n  }\n  address = set_flag_and_return_address((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c,param,flag_value,value);\n  bit_mask = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  constant1 = 3;\n  constant_0 = 0;\n  update_flags_and_registers(address,&bit_mask);\n  return;\n}\n\n",
            "current_name": "update_registers_and_flags_08006ca8",
            "entrypoint": "0x08006ca8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006ca8": "update_registers_and_flags_08006ca8",
                "iVar3": "value",
                "local_10": "constant_0",
                "local_14": "constant1",
                "local_18": "bit_mask",
                "param_1": "input_ptr",
                "param_2": "param",
                "set_flag_and_return_address_08006bb8": "set_flag_and_return_address",
                "uVar1": "address",
                "uVar2": "flag_value",
                "update_flags_and_registers_080040e8": "update_flags_and_registers"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006d24": {
            "additional_data": {
                "FUN_08006d24": {
                    "check_and_modify_data": 1,
                    "set_access_permissions": 1,
                    "set_memory_protection": 1,
                    "update_control_bits": 1,
                    "update_control_register": 1,
                    "update_control_registers": 4,
                    "update_data_access_permissions": 1,
                    "update_data_flags": 1,
                    "update_data_registers": 1,
                    "update_flags": 4,
                    "update_flags_based_on_param": 1,
                    "update_flags_based_on_param_value": 1,
                    "update_memory_protection": 3,
                    "update_permissions": 3,
                    "update_register_values": 3,
                    "update_registers": 1,
                    "update_registers_based_on_value": 1,
                    "update_settings": 2
                },
                "_DAT_4002100c": {
                    "control_bit1": 1,
                    "control_register1": 4,
                    "data_register1": 2,
                    "flag1": 1,
                    "flag_register1": 1,
                    "memory_protection_reg1": 1,
                    "memory_protection_register1": 1,
                    "peripherals_register1": 1,
                    "register1": 7,
                    "register_1": 1,
                    "register_a": 1,
                    "register_value1": 2,
                    "register_x": 1
                },
                "_DAT_40021018": {
                    "control_bit2": 1,
                    "control_register2": 4,
                    "data_register2": 2,
                    "flag2": 1,
                    "flag_register2": 1,
                    "memory_protection_reg2": 1,
                    "memory_protection_register2": 1,
                    "peripherals_register2": 1,
                    "register2": 7,
                    "register_2": 1,
                    "register_b": 1,
                    "register_value2": 2,
                    "register_y": 1
                },
                "param_1": {
                    "access_permissions": 1,
                    "address": 3,
                    "control_register": 1,
                    "data": 1,
                    "data_address": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "flag_ptr": 1,
                    "input": 2,
                    "input_data": 1,
                    "input_value": 1,
                    "memory_address": 3,
                    "param": 1,
                    "permissions": 1,
                    "register_value": 4,
                    "setting_ptr": 1,
                    "settings": 1,
                    "status": 1,
                    "value": 3,
                    "value_ptr": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08003ce8"
            ],
            "code": "\n\n\nvoid update_flags_based_on_param_value_08006d24(int *register_value)\n\n{\n  if (*register_value != 0x40012400) {\n    if (*register_value == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "current_name": "update_flags_based_on_param_value_08006d24",
            "entrypoint": "0x08006d24",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006d24": "update_flags_based_on_param_value_08006d24",
                "param_1": "register_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006d80": {
            "additional_data": {
                "DAT_0800a5b8": {
                    "default_data": 2,
                    "default_data_value": 1,
                    "default_value": 1,
                    "default_value_array": 1
                },
                "DAT_20000014": {
                    "config_data": 1,
                    "data": 1,
                    "data_1": 1,
                    "data_param": 1,
                    "data_param_1": 1,
                    "data_ptr": 1,
                    "data_value": 1,
                    "global_offset": 1,
                    "input_data_byte": 1,
                    "param1_value": 1,
                    "param_1": 1,
                    "param_1_as_byte": 1,
                    "param_1_value": 1,
                    "param_byte": 1,
                    "parameter_value": 1,
                    "special_data": 1
                },
                "FUN_08006d80": {
                    "decode_and_process_data": 1,
                    "extract_and_check_value": 1,
                    "get_updated_value": 1,
                    "process_and_check_data": 1,
                    "process_configuration": 1,
                    "process_data": 10,
                    "process_data_and_update": 1,
                    "process_data_and_update_result": 1,
                    "process_data_or_default": 1,
                    "process_input": 1,
                    "process_memory": 1,
                    "process_param": 2,
                    "process_parameter": 1,
                    "process_value": 5
                },
                "check_and_update_data_validity_08003e20": {
                    "check_and_update_data_validity": 2
                },
                "fill_memory_with_byte_080091c6": {
                    "fill_memory_with_byte": 1,
                    "initialize_memory": 1
                },
                "find_value_or_default_08007320": {
                    "find_value_or_default": 1,
                    "search_value_or_default": 1
                },
                "get_shifted_and_masked_value_08006c60": {
                    "get_shifted_and_masked_value": 2
                },
                "get_value_from_offset_080038dc": {
                    "get_value_from_offset": 2
                },
                "get_value_from_offset_08003a1c": {
                    "get_value_from_offset": 2
                },
                "iVar1": {
                    "result": 5,
                    "result_of_operations": 1,
                    "return_value": 3,
                    "status": 6
                },
                "local_10": {
                    "config_param3": 1,
                    "constant3": 1,
                    "dummy_value": 1,
                    "flag3": 1,
                    "flag5": 2,
                    "flag8": 2,
                    "flags_5": 1,
                    "offset_2": 1,
                    "offset_param_4": 1,
                    "reg8": 1,
                    "reg_value5": 1,
                    "register": 1,
                    "register5": 2,
                    "register_5": 2,
                    "register_7": 1,
                    "register_8": 2,
                    "temp5": 1,
                    "temp8": 2,
                    "temp_5": 2,
                    "temp_8": 1,
                    "temp_value": 1,
                    "temp_var8": 1,
                    "var8": 1,
                    "zero_flag": 1
                },
                "local_1c": {
                    "config_param2": 1,
                    "config_value": 1,
                    "constant": 1,
                    "constant2": 1,
                    "constant_value": 3,
                    "default_value": 2,
                    "flag3": 1,
                    "flag7": 2,
                    "flag_value": 1,
                    "offset": 4,
                    "offset_1": 1,
                    "offset_param_3": 1,
                    "offset_value": 1,
                    "reg7": 1,
                    "register_7": 2,
                    "starting_offset": 1,
                    "temp7": 2,
                    "temp_7": 1,
                    "temp_var7": 1,
                    "var7": 1
                },
                "local_20": {
                    "config_2": 1,
                    "config_param1": 1,
                    "constant5": 1,
                    "constant_2": 1,
                    "flag10": 1,
                    "flag4": 1,
                    "flag6": 2,
                    "flag7": 1,
                    "flags_7": 1,
                    "offset_3": 1,
                    "offset_param_2": 1,
                    "offset_value": 1,
                    "reg6": 1,
                    "reg_value6": 1,
                    "register6": 2,
                    "register_6": 4,
                    "temp6": 2,
                    "temp7": 1,
                    "temp_6": 1,
                    "temp_7": 2,
                    "temp_var6": 1,
                    "var10": 1
                },
                "local_24": {
                    "config_param5": 1,
                    "constant1": 1,
                    "flag4": 2,
                    "flag5": 3,
                    "flags_4": 1,
                    "offset_param_1": 1,
                    "reg4": 1,
                    "reg5": 1,
                    "reg_value4": 1,
                    "register4": 2,
                    "register_4": 3,
                    "register_5": 3,
                    "temp4": 1,
                    "temp5": 2,
                    "temp_4": 2,
                    "temp_5": 1,
                    "temp_var5": 1,
                    "tmp_4": 1,
                    "var5": 1
                },
                "local_28": {
                    "config_1": 1,
                    "config_param4": 1,
                    "config_value3": 1,
                    "constant4": 1,
                    "constant_1": 1,
                    "counter": 1,
                    "flag": 1,
                    "flag6": 2,
                    "flag9": 1,
                    "flags_6": 1,
                    "permission": 1,
                    "reg4": 1,
                    "register_4": 3,
                    "register_5": 1,
                    "register_param_4": 1,
                    "shift": 1,
                    "shift_value": 2,
                    "temp4": 2,
                    "temp6": 1,
                    "temp_4": 1,
                    "temp_6": 2,
                    "temp_var4": 1,
                    "var9": 1
                },
                "local_2c": {
                    "config_param6": 1,
                    "flag3": 4,
                    "flag8": 1,
                    "flags_3": 1,
                    "reg3": 2,
                    "reg_value3": 1,
                    "register3": 2,
                    "register_3": 6,
                    "register_param_3": 1,
                    "temp3": 3,
                    "temp_3": 3,
                    "temp_var3": 1,
                    "tmp_3": 1,
                    "var3": 1
                },
                "local_30": {
                    "config_param7": 1,
                    "flag2": 4,
                    "flag7": 1,
                    "flags_2": 1,
                    "reg2": 2,
                    "reg_value2": 1,
                    "register2": 2,
                    "register_2": 6,
                    "register_param_2": 1,
                    "temp2": 3,
                    "temp_2": 3,
                    "temp_var2": 1,
                    "tmp_2": 1,
                    "var2": 1
                },
                "local_34": {
                    "config_param8": 1,
                    "flag1": 4,
                    "flags_1": 1,
                    "reg1": 2,
                    "reg_value1": 1,
                    "register1": 2,
                    "register_1": 6,
                    "register_param_1": 1,
                    "temp1": 3,
                    "temp_1": 3,
                    "temp_var1": 1,
                    "tmp_1": 1,
                    "var1": 1
                },
                "local_38": {
                    "config_value": 1,
                    "configured_value": 1,
                    "data": 2,
                    "default_value": 7,
                    "found_value": 7,
                    "memory_value": 1,
                    "search_value": 1,
                    "value": 9,
                    "value_or_default": 2
                },
                "local_3c": {
                    "config_flag": 1,
                    "config_flag2": 2,
                    "config_flag_2": 1,
                    "config_param_2": 1,
                    "config_update2": 1,
                    "config_value2": 3,
                    "data_flag": 2,
                    "data_validity": 1,
                    "flag2": 9,
                    "flag_2": 6,
                    "is_updated": 1,
                    "permission_updated": 1,
                    "permission_value": 1,
                    "value_update_flag": 1
                },
                "local_40": {
                    "config_flag": 2,
                    "config_flag1": 2,
                    "config_flag_1": 1,
                    "config_param_1": 1,
                    "config_update1": 1,
                    "config_update_flag": 1,
                    "config_update_success": 1,
                    "config_updated": 1,
                    "config_value": 2,
                    "config_value1": 2,
                    "configuration_value": 1,
                    "flag1": 9,
                    "flag_1": 6,
                    "is_valid": 1
                },
                "local_44": {
                    "data_size": 1,
                    "masked_value": 6,
                    "shifted_and_masked_value": 2,
                    "shifted_value": 22
                },
                "local_46": {
                    "output_value": 11,
                    "result": 16,
                    "result_value": 1,
                    "return_value": 2,
                    "updated_value": 1
                },
                "param_1": {
                    "input_data": 3,
                    "input_param": 6,
                    "input_parameter": 1,
                    "input_value": 20,
                    "value": 1
                },
                "process_data_0800376c": {
                    "process_data": 2
                },
                "uVar2": {
                    "data_value": 1,
                    "flag_check": 1,
                    "masked_value": 1,
                    "offset_value": 6,
                    "shifted_value": 1,
                    "value": 1,
                    "value_from_offset": 2
                },
                "update_and_check_data_state_08003de4": {
                    "update_and_check_data_state": 2
                },
                "update_configuration_080038e4": {
                    "update_configuration": 2
                },
                "update_data_and_check_permissions_08003ce8": {
                    "update_and_check_permissions": 2
                },
                "update_data_and_check_value_08003aa0": {
                    "update_data_and_check_value": 2
                },
                "update_flags_and_registers_08003bd8": {
                    "update_flags_and_registers": 2
                }
            },
            "called": [
                "FUN_080091c6",
                "FUN_08003de4",
                "FUN_080038dc",
                "FUN_08003bd8",
                "FUN_08006c60",
                "FUN_08003e20",
                "FUN_080038e4",
                "FUN_08003a1c",
                "FUN_0800376c",
                "FUN_08007320",
                "FUN_08003aa0",
                "FUN_08003ce8"
            ],
            "calling": [
                "FUN_08008880"
            ],
            "code": "\nundefined2 decode_and_process_data_08006d80(undefined4 input_value)\n\n{\n  int status;\n  uint offset_value;\n  undefined2 result;\n  uint shifted_value;\n  undefined4 flag1;\n  undefined4 flag2;\n  int value;\n  undefined4 register_1;\n  undefined4 register_2;\n  undefined4 register_3;\n  undefined4 register_4;\n  undefined4 flag5;\n  undefined4 register_6;\n  undefined4 offset;\n  undefined4 register_8;\n  \n  fill_memory_with_byte(&value,0,0x30);\n  shifted_value = 0;\n  flag1 = 0;\n  flag2 = 0;\n  result = 0;\n  value = find_value_or_default(input_value,&DAT_0800a5b8);\n  if (value == 0) {\n    result = 0;\n  }\n  else {\n    register_1 = 0;\n    register_2 = 0;\n    register_3 = 0;\n    flag5 = 0;\n    offset = 0xe0000;\n    register_8 = 0;\n    register_4 = 1;\n    register_6 = 0;\n    DAT_20000014 = (undefined)input_value;\n    status = update_flags_and_registers(&value);\n    if (status == 0) {\n      shifted_value = get_shifted_and_masked_value(input_value);\n      if (shifted_value < 0x12) {\n        flag1 = 1;\n        flag2 = 2;\n        status = update_configuration(&value,&shifted_value);\n        if (status == 0) {\n          status = check_and_update_data_validity(&value);\n          if (status == 0) {\n            status = update_data_and_check_value(&value);\n            if (status == 0) {\n              status = process_data(&value,10);\n              if (status == 0) {\n                offset_value = get_value_from_offset(&value);\n                if ((offset_value & 0x200) != 0) {\n                  result = get_value_from_offset(&value);\n                }\n                status = update_and_check_data_state(&value);\n                if (status == 0) {\n                  status = update_and_check_permissions(&value);\n                  if (status != 0) {\n                    result = 0;\n                  }\n                }\n                else {\n                  result = 0;\n                }\n              }\n              else {\n                result = 0;\n              }\n            }\n            else {\n              result = 0;\n            }\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  return result;\n}\n\n",
            "current_name": "decode_and_process_data_08006d80",
            "entrypoint": "0x08006d80",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006d80": "decode_and_process_data_08006d80",
                "check_and_update_data_validity_08003e20": "check_and_update_data_validity",
                "fill_memory_with_byte_080091c6": "fill_memory_with_byte",
                "find_value_or_default_08007320": "find_value_or_default",
                "get_shifted_and_masked_value_08006c60": "get_shifted_and_masked_value",
                "get_value_from_offset_080038dc": "get_value_from_offset",
                "get_value_from_offset_08003a1c": "get_value_from_offset",
                "iVar1": "status",
                "local_10": "register_8",
                "local_1c": "offset",
                "local_20": "register_6",
                "local_24": "flag5",
                "local_28": "register_4",
                "local_2c": "register_3",
                "local_30": "register_2",
                "local_34": "register_1",
                "local_38": "value",
                "local_3c": "flag2",
                "local_40": "flag1",
                "local_44": "shifted_value",
                "local_46": "result",
                "param_1": "input_value",
                "process_data_0800376c": "process_data",
                "uVar2": "offset_value",
                "update_and_check_data_state_08003de4": "update_and_check_data_state",
                "update_configuration_080038e4": "update_configuration",
                "update_data_and_check_permissions_08003ce8": "update_and_check_permissions",
                "update_data_and_check_value_08003aa0": "update_data_and_check_value",
                "update_flags_and_registers_08003bd8": "update_flags_and_registers"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08006e68": {
            "additional_data": {
                "FUN_08006e68": {
                    "initialize_flags_and_data": 2,
                    "set_flags_and_update_registers": 1,
                    "update_data_and_flags": 1,
                    "update_device_configuration": 1,
                    "update_device_info": 1,
                    "update_flag_and_registers": 1,
                    "update_flags": 1,
                    "update_flags_and_data": 6,
                    "update_flags_and_registers": 12,
                    "update_register_flags": 1,
                    "update_registers": 1,
                    "update_registers_and_flags": 3
                },
                "_DAT_40010004": {
                    "flags_register": 1
                },
                "_DAT_40021018": {
                    "control_register": 1
                },
                "iVar1": {
                    "index": 4,
                    "index_value": 13,
                    "value": 9,
                    "value_by_index": 1,
                    "value_index": 4
                },
                "local_14": {
                    "constant3": 1,
                    "constant_3": 2,
                    "data_value": 1,
                    "local_var3": 1,
                    "option3": 1,
                    "some_value3": 1,
                    "value": 1,
                    "value2": 2,
                    "value3": 2,
                    "value_14": 1,
                    "value_3": 2,
                    "var2": 3,
                    "var3": 7,
                    "variable2": 1,
                    "variable3": 2,
                    "variable_3": 3
                },
                "local_18": {
                    "constant2": 1,
                    "constant_0": 2,
                    "flag_position": 1,
                    "local_var2": 1,
                    "offset": 1,
                    "option2": 1,
                    "some_value2": 1,
                    "value2": 2,
                    "value3": 1,
                    "value_18": 1,
                    "value_2": 2,
                    "var2": 7,
                    "variable2": 2,
                    "variable_2": 3
                },
                "local_1c": {
                    "constant1": 1,
                    "constant_1": 1,
                    "constant_2": 1,
                    "count": 1,
                    "flag_value": 1,
                    "local_var1": 1,
                    "option1": 1,
                    "some_value1": 1,
                    "value1": 4,
                    "value_1": 2,
                    "value_1c": 1,
                    "var1": 10,
                    "variable1": 3,
                    "variable_1": 3
                },
                "local_20": {
                    "bit_mask": 12,
                    "bit_pattern": 1,
                    "bit_value": 1,
                    "bitmask": 6,
                    "flag": 6,
                    "flag_bit": 1,
                    "flag_bitmask": 1,
                    "flag_mask": 1,
                    "mask": 2
                },
                "param_1": {
                    "arg1": 1,
                    "data": 4,
                    "device_id": 1,
                    "device_info": 1,
                    "input_data": 2,
                    "input_param": 3,
                    "input_parameter": 2,
                    "input_value": 9,
                    "new_value": 1,
                    "param": 7
                },
                "uVar2": {
                    "address": 7,
                    "flag": 2,
                    "flag_address": 14,
                    "flag_and_address": 3,
                    "flag_value": 4,
                    "return_value": 1
                }
            },
            "called": [
                "FUN_08007438",
                "FUN_080040e8",
                "FUN_08006bb8",
                "FUN_08007376"
            ],
            "calling": [
                "FUN_08006092"
            ],
            "code": "\n\n\nvoid set_flags_and_update_registers_08006e68(undefined4 input_value)\n\n{\n  int index_value;\n  undefined4 flag_address;\n  uint bit_mask;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  \n  index_value = get_value_by_index_08007376((int)(char)DAT_20000014,&DAT_0800a6cc);\n  update_flags_and_data_08007438(input_value);\n  flag_address = set_flag_and_return_address_08006bb8((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c);\n  var1 = 2;\n  var2 = 0;\n  var3 = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  switch((uint)(index_value << 0x11) >> 0x19) {\n  case 1:\n    _DAT_40010004 = _DAT_40010004 | 0x7000001;\n    break;\n  case 2:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n    break;\n  case 3:\n    _DAT_40010004 = _DAT_40010004 | 0x7000002;\n    break;\n  case 4:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n    break;\n  case 5:\n    _DAT_40010004 = _DAT_40010004 | 0x7000004;\n    break;\n  case 6:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n    break;\n  case 7:\n    _DAT_40010004 = _DAT_40010004 | 0x7000008;\n    break;\n  case 8:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n    break;\n  case 9:\n    _DAT_40010004 = _DAT_40010004 | 0x7000030;\n    break;\n  case 10:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n    break;\n  case 0xb:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n    break;\n  case 0xc:\n    _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n    break;\n  case 0xd:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n    break;\n  case 0xe:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n    break;\n  case 0xf:\n    _DAT_40010004 = _DAT_40010004 | 0x7000300;\n    break;\n  case 0x10:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n    break;\n  case 0x11:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n    break;\n  case 0x12:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n    break;\n  case 0x13:\n    _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n    break;\n  case 0x14:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n    break;\n  case 0x15:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n    break;\n  case 0x16:\n    _DAT_40010004 = _DAT_40010004 | 0x7001000;\n    break;\n  case 0x17:\n    _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n    break;\n  case 0x1b:\n    _DAT_40010004 = _DAT_40010004 | 0x7008000;\n    break;\n  case 0x1c:\n    _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n    break;\n  case 0x21:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n    break;\n  case 0x22:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n    break;\n  case 0x23:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n    break;\n  case 0x24:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  bit_mask = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  update_flags_and_registers_080040e8(flag_address,&bit_mask);\n  return;\n}\n\n",
            "current_name": "set_flags_and_update_registers_08006e68",
            "entrypoint": "0x08006e68",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08006e68": "set_flags_and_update_registers_08006e68",
                "iVar1": "index_value",
                "local_14": "var3",
                "local_18": "var2",
                "local_1c": "var1",
                "local_20": "bit_mask",
                "param_1": "input_value",
                "uVar2": "flag_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007110": {
            "additional_data": {
                "FUN_08007110": {
                    "initialize_control_registers": 21,
                    "update_control_registers": 10
                },
                "update_control_registers_080074e0": {
                    "update_control_registers": 26,
                    "update_registers": 5
                },
                "void": {
                    "void": 1
                }
            },
            "called": [
                "FUN_080074e0"
            ],
            "calling": [
                "FUN_08005e2e"
            ],
            "code": "\nvoid initialize_control_registers_08007110(void)\n\n{\n  update_control_registers();\n  return;\n}\n\n",
            "current_name": "initialize_control_registers_08007110",
            "entrypoint": "0x08007110",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007110": "initialize_control_registers_08007110",
                "update_control_registers_080074e0": "update_control_registers"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007118": {
            "additional_data": {
                "DAT_0800a6cc": {
                    "config_data": 1,
                    "constant_value": 1,
                    "data": 4,
                    "data_array": 7,
                    "data_index": 1,
                    "default_data": 1,
                    "default_value": 3,
                    "some_data": 1
                },
                "DAT_20000014": {
                    "bit_flag_data": 1,
                    "config_flag": 1,
                    "config_value": 1,
                    "constant_data": 1,
                    "data_byte": 1,
                    "data_flag": 1,
                    "flag_data": 1,
                    "flagged_param": 1,
                    "global_data": 3,
                    "global_value": 1,
                    "global_var": 1,
                    "global_variable": 2,
                    "input_value": 1,
                    "memory_value": 1,
                    "result": 1
                },
                "FUN_08007118": {
                    "initialize": 1,
                    "initialize_and_configure": 1,
                    "initialize_and_update": 1,
                    "initialize_and_update_data": 1,
                    "initialize_binary": 1,
                    "initialize_config": 1,
                    "initialize_configuration": 1,
                    "initialize_data": 7,
                    "initialize_data_and_config": 1,
                    "initialize_data_processing": 1,
                    "initialize_memory": 7,
                    "initialize_memory_and_config": 2,
                    "initialize_process": 1,
                    "process_data": 3,
                    "update_configurations": 1
                },
                "calculate_shifted_data_value_080075dc": {
                    "calculate_shifted_data_value": 8,
                    "calculate_shifted_value": 6
                },
                "fill_memory_with_byte_080091c6": {
                    "fill_buffer_with_zeros": 1,
                    "fill_memory": 8,
                    "fill_memory_with_byte": 2,
                    "initialize_data": 1
                },
                "find_value_or_default_08007320": {
                    "find_data_or_default": 1,
                    "find_value": 2,
                    "find_value_or_default": 11
                },
                "get_value_by_index_08007376": {
                    "get_value_by_index": 14
                },
                "get_value_shifted_bits_08006c7c": {
                    "get_bit_shifted_value": 1,
                    "get_bits_shifted_value": 1,
                    "get_shifted_bits": 3,
                    "get_shifted_mode": 1,
                    "get_value_shifted_bits": 8
                },
                "iVar2": {
                    "bit_value": 3,
                    "bits_value": 1,
                    "shifted_bits": 1,
                    "shifted_bits_value": 2,
                    "value_shifted_bits": 1
                },
                "iVar3": {
                    "result": 1,
                    "update_parameters_result": 1,
                    "update_result": 4,
                    "update_return_value": 1,
                    "update_status": 1
                },
                "initialize_and_update_memory_08006092": {
                    "init_update_memory": 1,
                    "initialize_and_update": 1,
                    "initialize_and_update_memory": 11,
                    "initialize_memory": 1
                },
                "local_1b": {
                    "another_flag": 1,
                    "bit_flag": 2,
                    "flag": 2,
                    "flag_2": 1,
                    "flag_status": 1,
                    "flag_two": 1,
                    "flag_value": 2,
                    "local_flag": 4,
                    "temp": 1,
                    "temp5": 2,
                    "temp_2": 1,
                    "temp_5": 1,
                    "temp_flag": 1,
                    "temp_memory_6": 1,
                    "temp_var5": 1,
                    "temporary_flag": 1,
                    "unknown_value5": 1,
                    "unused4": 1,
                    "value11": 2,
                    "value12": 1,
                    "var_1b": 1
                },
                "local_44": {
                    "bit_value3": 1,
                    "calculated_value5": 1,
                    "local_var2": 1,
                    "param10": 1,
                    "parameter10": 1,
                    "temp2": 2,
                    "temp4": 2,
                    "temp_1": 1,
                    "temp_4": 1,
                    "temp_b": 1,
                    "temp_memory_5": 1,
                    "temp_value": 1,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "unknown_value4": 1,
                    "unused3": 1,
                    "updated_value_10": 1,
                    "value10": 2,
                    "value11": 1,
                    "value4": 2,
                    "value_11": 1,
                    "value_nine": 1,
                    "var3": 1,
                    "var_44": 1
                },
                "local_48": {
                    "bit_value1": 1,
                    "calculated_value4": 1,
                    "local_value": 1,
                    "local_var1": 1,
                    "param9": 1,
                    "parameter9": 1,
                    "temp1": 2,
                    "temp3": 2,
                    "temp_1": 1,
                    "temp_3": 1,
                    "temp_a": 1,
                    "temp_memory_4": 1,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "unknown_value3": 1,
                    "unused2": 1,
                    "updated_value_9": 1,
                    "value10": 1,
                    "value3": 2,
                    "value9": 2,
                    "value_10": 1,
                    "value_eight": 1,
                    "var2": 1,
                    "var_48": 1
                },
                "local_4c": {
                    "another_number": 1,
                    "calculated_value3": 1,
                    "count": 1,
                    "index": 1,
                    "modified_offset": 1,
                    "new_value": 1,
                    "num_updates": 1,
                    "param3_copy": 1,
                    "temp2": 2,
                    "temp_2": 1,
                    "temp_memory_3": 1,
                    "temp_var2": 1,
                    "unknown_value2": 1,
                    "updated_count": 3,
                    "updated_counter": 2,
                    "updated_offset": 3,
                    "updated_param3": 2,
                    "updated_value": 3,
                    "value2": 2,
                    "value9": 1,
                    "value_9": 1
                },
                "local_50": {
                    "bit_value2": 1,
                    "calculated_value2": 1,
                    "param8": 1,
                    "parameter8": 1,
                    "temp1": 2,
                    "temp_1": 1,
                    "temp_var1": 2,
                    "unknown_value1": 1,
                    "unused": 1,
                    "updated_value_8": 1,
                    "value1": 2,
                    "value8": 3,
                    "value_8": 2,
                    "value_seven": 1
                },
                "local_54": {
                    "calculated_value": 1,
                    "calculated_value1": 1,
                    "num_iterations": 1,
                    "result": 1,
                    "shift_count": 1,
                    "shifted_data": 6,
                    "shifted_data_result": 1,
                    "shifted_data_value": 4,
                    "shifted_div": 1,
                    "shifted_val": 1,
                    "shifted_value": 11,
                    "temp_memory_2": 1,
                    "updated_value": 1
                },
                "local_58": {
                    "buffer": 1,
                    "data": 1,
                    "data_location": 1,
                    "default_value": 1,
                    "input_buffer": 1,
                    "memory": 14,
                    "memory_address": 1,
                    "memory_buffer": 2,
                    "memory_value": 4,
                    "result": 1,
                    "result_value": 1,
                    "temp_memory_1": 1,
                    "value": 2
                },
                "local_5c": {
                    "config_value7": 1,
                    "constant_7": 1,
                    "data7": 1,
                    "initial_value7": 1,
                    "memory_init_val_7": 1,
                    "memory_value7": 1,
                    "param7": 1,
                    "parameter7": 1,
                    "shifted_value": 1,
                    "temp4": 1,
                    "updated_value_7": 1,
                    "value5": 1,
                    "value7": 4,
                    "value_7": 2,
                    "value_six": 1
                },
                "local_60": {
                    "config_value6": 1,
                    "constant_6": 1,
                    "data": 1,
                    "data6": 1,
                    "initial_value6": 1,
                    "memory_init_val_6": 1,
                    "memory_value6": 1,
                    "param6": 1,
                    "parameter6": 1,
                    "temp5": 1,
                    "updated_value_6": 1,
                    "value6": 5,
                    "value_6": 2,
                    "value_five": 1
                },
                "local_64": {
                    "config_value5": 1,
                    "constant_5": 1,
                    "data5": 1,
                    "initial_value5": 1,
                    "memory_init_val_5": 1,
                    "memory_value5": 1,
                    "param5": 1,
                    "parameter5": 1,
                    "temp": 1,
                    "temp2": 1,
                    "updated_value_5": 1,
                    "value3": 1,
                    "value5": 4,
                    "value_5": 2,
                    "value_four": 1
                },
                "local_68": {
                    "config_value4": 1,
                    "constant_4": 1,
                    "data4": 1,
                    "index": 1,
                    "initial_value4": 1,
                    "memory_init_val_4": 1,
                    "memory_value4": 1,
                    "param4": 1,
                    "parameter4": 1,
                    "temp3": 1,
                    "updated_value_4": 1,
                    "value4": 5,
                    "value_4": 2,
                    "value_three": 1
                },
                "local_6c": {
                    "config_value3": 1,
                    "constant_3": 1,
                    "count": 1,
                    "data3": 1,
                    "initial_value3": 1,
                    "memory_init_val_3": 1,
                    "memory_value3": 1,
                    "param3": 1,
                    "parameter3": 1,
                    "temp1": 1,
                    "updated_value_3": 1,
                    "value2": 1,
                    "value3": 4,
                    "value_3": 2,
                    "value_two": 1
                },
                "local_70": {
                    "config_value": 1,
                    "config_value2": 1,
                    "constant_2": 1,
                    "data2": 1,
                    "initial_value2": 1,
                    "memory_init_val_2": 1,
                    "memory_value2": 1,
                    "offset": 1,
                    "param2": 1,
                    "parameter2": 1,
                    "updated_value_2": 1,
                    "value": 1,
                    "value2": 4,
                    "value_2": 2
                },
                "local_74": {
                    "config_value1": 1,
                    "constant_1": 1,
                    "data1": 1,
                    "initial_value1": 1,
                    "memory_init_val_1": 1,
                    "memory_value1": 1,
                    "param1": 1,
                    "parameter1": 1,
                    "size": 1,
                    "size1": 1,
                    "updated_value_1": 1,
                    "value1": 5,
                    "value_1": 2,
                    "value_one": 1,
                    "var1": 1
                },
                "param_1": {
                    "config_value": 1,
                    "data": 2,
                    "data_value": 3,
                    "input": 2,
                    "input_param": 5,
                    "input_param1": 2,
                    "input_parameter": 2,
                    "input_value": 9,
                    "param": 1,
                    "param1": 2,
                    "value": 2
                },
                "param_2": {
                    "data_size": 2,
                    "division_factor": 1,
                    "divisor": 18,
                    "input_param2": 2,
                    "param2": 2,
                    "shift_factor": 1,
                    "shift_param": 1,
                    "shift_value": 3,
                    "size": 1
                },
                "param_3": {
                    "count": 4,
                    "counter": 2,
                    "increment": 1,
                    "increment_value": 1,
                    "input_param3": 2,
                    "length": 1,
                    "num": 1,
                    "offset": 5,
                    "param3": 4,
                    "param_3": 1,
                    "primary_param": 1,
                    "some_number": 1,
                    "subtract_value": 2,
                    "update_value": 1,
                    "value": 4
                },
                "param_4": {
                    "config": 13,
                    "config_param": 4,
                    "config_value": 8,
                    "input_param4": 2,
                    "param4": 4
                },
                "param_5": {
                    "flag": 27,
                    "flag_param": 1,
                    "input_param5": 2,
                    "param5": 1
                },
                "uVar1": {
                    "shifted_data": 2,
                    "shifted_data_value": 3,
                    "shifted_value": 3
                },
                "update_bit_value_and_set_flag_08006390": {
                    "update_bit_and_set_flag": 2,
                    "update_bit_value": 2,
                    "update_bit_value_and_set_flag": 10
                },
                "update_bit_value_and_set_flags_0800643c": {
                    "update_bit_and_set_flags": 2,
                    "update_bit_value_and_set_flags": 11,
                    "update_bit_value_with_flags": 1
                },
                "update_parameters_and_config_08006186": {
                    "update_parameters_and_config": 12,
                    "update_params_and_config": 1,
                    "update_params_config": 1
                }
            },
            "called": [
                "FUN_080091c6",
                "FUN_08006c7c",
                "FUN_08006092",
                "FUN_080075dc",
                "FUN_0800643c",
                "FUN_08007376",
                "FUN_08006186",
                "FUN_08007320",
                "FUN_08006390"
            ],
            "calling": [
                "FUN_080088e0"
            ],
            "code": "\nvoid initialize_memory_and_config_08007118(undefined4 input_value,uint divisor,int offset,undefined4 config,char flag)\n\n{\n  uint shifted_data_value;\n  int bit_value;\n  int update_result;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  undefined4 value6;\n  undefined4 value7;\n  int memory;\n  int shifted_value;\n  undefined4 value8;\n  int updated_value;\n  undefined4 value9;\n  undefined4 value10;\n  undefined local_flag;\n  \n  fill_memory(&memory,0,0x40);\n  value1 = 0;\n  value2 = 0;\n  value3 = 0;\n  value4 = 0;\n  value5 = 0;\n  value6 = 0;\n  value7 = 0;\n  memory = find_value_or_default(input_value,&DAT_0800a6cc);\n  if (memory != 0) {\n    shifted_data_value = calculate_shifted_data_value();\n    shifted_value = shifted_data_value / divisor - 1;\n    updated_value = offset + -1;\n    value9 = 0;\n    value8 = 0;\n    value10 = 0;\n    local_flag = 0;\n    if (flag == '\\x01') {\n      DAT_20000014 = (undefined)input_value;\n      bit_value = initialize_and_update_memory(&memory);\n      if (bit_value != 0) {\n        return;\n      }\n    }\n    bit_value = get_value_shifted_bits(input_value);\n    if ((((bit_value == 0) || (bit_value == 4)) || (bit_value == 8)) || ((bit_value == 0xc || (bit_value == 0x18)))) {\n      value1 = 0x60;\n      value3 = 0;\n      value5 = 0;\n      value4 = 0;\n      value7 = 0;\n      value6 = 0;\n      value2 = config;\n      update_result = update_parameters_and_config(&memory,&value1,bit_value);\n      if (update_result == 0) {\n        shifted_data_value = get_value_by_index(input_value,&DAT_0800a6cc);\n        if ((shifted_data_value & 0x100000) == 0) {\n          update_bit_value_and_set_flag(&memory,bit_value);\n        }\n        else {\n          update_bit_value_and_set_flags(&memory,bit_value);\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "current_name": "initialize_memory_and_config_08007118",
            "entrypoint": "0x08007118",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007118": "initialize_memory_and_config_08007118",
                "calculate_shifted_data_value_080075dc": "calculate_shifted_data_value",
                "fill_memory_with_byte_080091c6": "fill_memory",
                "find_value_or_default_08007320": "find_value_or_default",
                "get_value_by_index_08007376": "get_value_by_index",
                "get_value_shifted_bits_08006c7c": "get_value_shifted_bits",
                "iVar2": "bit_value",
                "iVar3": "update_result",
                "initialize_and_update_memory_08006092": "initialize_and_update_memory",
                "local_1b": "local_flag",
                "local_44": "value10",
                "local_48": "value9",
                "local_4c": "updated_value",
                "local_50": "value8",
                "local_54": "shifted_value",
                "local_58": "memory",
                "local_5c": "value7",
                "local_60": "value6",
                "local_64": "value5",
                "local_68": "value4",
                "local_6c": "value3",
                "local_70": "value2",
                "local_74": "value1",
                "param_1": "input_value",
                "param_2": "divisor",
                "param_3": "offset",
                "param_4": "config",
                "param_5": "flag",
                "uVar1": "shifted_data_value",
                "update_bit_value_and_set_flag_08006390": "update_bit_value_and_set_flag",
                "update_bit_value_and_set_flags_0800643c": "update_bit_value_and_set_flags",
                "update_parameters_and_config_08006186": "update_parameters_and_config"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080071e4": {
            "additional_data": {
                "FUN_080071e4": {
                    "analyze_and_update_registers": 1,
                    "initialize_control_registers": 6,
                    "initialize_registers": 3,
                    "process_control_registers": 2,
                    "process_data": 4,
                    "process_function": 1,
                    "update_and_initialize_control_registers": 1,
                    "update_and_reset_control_registers": 2,
                    "update_bit_control_registers": 1,
                    "update_bit_values": 2,
                    "update_control_registers": 5,
                    "update_shifted_bit_values": 1
                },
                "find_value_or_default_08007320": {
                    "find_default_value": 2,
                    "find_value_or_default": 3
                },
                "get_value_by_index_08007376": {
                    "get_value_by_index": 5
                },
                "get_value_shifted_bits_08006c7c": {
                    "get_shifted_bits_value": 2,
                    "get_shifted_value": 1,
                    "get_value_shifted_bits": 1,
                    "get_value_with_shifted_bits": 1
                },
                "iVar1": {
                    "shifted_bits": 8,
                    "shifted_bits_result": 1,
                    "shifted_bits_value": 4,
                    "shifted_value": 6
                },
                "initialize_and_reset_control_registers_08005e2e": {
                    "initialize_and_reset_control_registers": 3,
                    "initialize_and_reset_registers": 2
                },
                "local_50": {
                    "bit_values": 5,
                    "control_registers": 5,
                    "register_values": 6,
                    "values": 7,
                    "values_array": 7,
                    "values_set": 1
                },
                "param_1": {
                    "data": 2,
                    "input": 3,
                    "input_data": 2,
                    "input_param": 6,
                    "input_parameter": 2,
                    "input_value": 16
                },
                "uVar2": {
                    "index_value": 2,
                    "indexed_value": 9,
                    "value_by_index": 2
                },
                "update_and_check_bit_values_08006460": {
                    "update_and_check_bit_values": 4,
                    "update_and_check_values": 1
                },
                "update_bit_value_and_clear_flags_080063c0": {
                    "update_bit_value_and_clear_flags": 4,
                    "update_value_and_clear_flags": 1
                }
            },
            "called": [
                "FUN_08006c7c",
                "FUN_08005e2e",
                "FUN_08006460",
                "FUN_080063c0",
                "FUN_08007376",
                "FUN_08007320"
            ],
            "calling": [
                "FUN_08008990"
            ],
            "code": "\nvoid update_and_initialize_control_registers_080071e4(undefined4 input_value)\n\n{\n  int shifted_bits;\n  uint indexed_value;\n  int values [17];\n  \n  values[0] = find_value_or_default(input_value,&DAT_0800a6cc);\n  if ((values[0] != 0) &&\n     ((((shifted_bits = get_shifted_bits_value(input_value), shifted_bits == 0 || (shifted_bits == 4)) || (shifted_bits == 8)) ||\n      ((shifted_bits == 0xc || (shifted_bits == 0x18)))))) {\n    indexed_value = get_value_by_index(input_value,&DAT_0800a6cc);\n    if ((indexed_value & 0x100000) == 0) {\n      update_bit_value_and_clear_flags(values,shifted_bits);\n    }\n    else {\n      update_and_check_bit_values(values,shifted_bits);\n    }\n    initialize_and_reset_control_registers(values);\n  }\n  return;\n}\n\n",
            "current_name": "update_and_initialize_control_registers_080071e4",
            "entrypoint": "0x080071e4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080071e4": "update_and_initialize_control_registers_080071e4",
                "find_value_or_default_08007320": "find_value_or_default",
                "get_value_by_index_08007376": "get_value_by_index",
                "get_value_shifted_bits_08006c7c": "get_shifted_bits_value",
                "iVar1": "shifted_bits",
                "initialize_and_reset_control_registers_08005e2e": "initialize_and_reset_control_registers",
                "local_50": "values",
                "param_1": "input_value",
                "uVar2": "indexed_value",
                "update_and_check_bit_values_08006460": "update_and_check_bit_values",
                "update_bit_value_and_clear_flags_080063c0": "update_bit_value_and_clear_flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800723c": {
            "additional_data": {
                "FUN_0800723c": {
                    "extract_data_from_binary": 1,
                    "extract_data_values": 1,
                    "fetch_data": 2,
                    "fetch_data_value": 1,
                    "get_data": 1,
                    "get_data_value": 5,
                    "get_data_value_from_binary": 1,
                    "getting_data_value": 1,
                    "initialize_data": 12,
                    "initialize_data_value": 2,
                    "initialize_data_values": 2,
                    "retrieve_data": 2
                },
                "get_data_value_08003760": {
                    "extract_data": 1,
                    "fetch_data": 3,
                    "fetch_data_value": 7,
                    "fetch_data_values": 2,
                    "get_data_value": 8,
                    "load_data_value": 1,
                    "read_binary_data": 1,
                    "retrieve_data": 2,
                    "retrieve_data_from_binary": 1,
                    "retrieve_data_value": 3
                }
            },
            "called": [
                "FUN_08003760"
            ],
            "calling": [
                "FUN_08008abc"
            ],
            "code": "\nvoid initialize_data_values_0800723c(void)\n\n{\n  get_data_value();\n  return;\n}\n\n",
            "current_name": "initialize_data_values_0800723c",
            "entrypoint": "0x0800723c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800723c": "initialize_data_values_0800723c",
                "get_data_value_08003760": "get_data_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007244": {
            "called": [],
            "calling": [
                "FUN_08007246"
            ],
            "code": "\nvoid FUNC_08007244(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08007244",
            "entrypoint": "0x08007244",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08007244": "FUNC_08007244"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08007246": {
            "additional_data": {
                "FUNC_08007244": {
                    "additional_processing": 1,
                    "cleanup_system": 1,
                    "custom_function": 1,
                    "execute_additional_operations": 1,
                    "execute_additional_task": 1,
                    "execute_finalization": 1,
                    "execute_function": 4,
                    "execute_helper_function": 1,
                    "execute_operation": 1,
                    "execute_sub_task": 1,
                    "function_08007244": 1,
                    "perform_action": 1,
                    "perform_additional_tasks": 2,
                    "perform_operation": 2,
                    "perform_operations": 3,
                    "perform_tasks": 2,
                    "process": 1,
                    "process_data": 2,
                    "reverse_data": 1,
                    "reverse_order": 1,
                    "run_process": 1
                },
                "FUN_08003748": {
                    "accumulate_values": 1
                },
                "FUN_08004046": {
                    "initialize_execution": 1
                },
                "FUN_08007244": {
                    "execute_subfunction": 1
                },
                "FUN_08007246": {
                    "execute_main_function": 2,
                    "execute_main_task": 2,
                    "execute_program": 3,
                    "execute_setup_tasks": 1,
                    "initialize": 1,
                    "initialize_accumulation_process": 1,
                    "initialize_and_accumulate_values": 4,
                    "initialize_and_execute": 7,
                    "initialize_system": 10
                },
                "accumulate_values_08003748": {
                    "accumulate_values": 22,
                    "calculate_accumulated_values": 2,
                    "calculate_sum": 1,
                    "calculate_total": 1,
                    "sum_values": 1
                },
                "execute_initialization_08004046": {
                    "execute_initialization": 20,
                    "initialize": 2,
                    "initialize_components": 1,
                    "initialize_execution": 4,
                    "perform_initialization": 2
                }
            },
            "called": [
                "FUN_08007244",
                "FUN_08004046",
                "FUN_08003748"
            ],
            "calling": [],
            "code": "\nvoid initialize_system_08007246(void)\n\n{\n  accumulate_values();\n  execute_initialization();\n  FUNC_08007244();\n  return;\n}\n\n",
            "current_name": "initialize_system_08007246",
            "entrypoint": "0x08007246",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007246": "initialize_system_08007246",
                "accumulate_values_08003748": "accumulate_values",
                "execute_initialization_08004046": "execute_initialization"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007258": {
            "additional_data": {
                "FUN_08007258": {
                    "initialize_component": 1,
                    "initialize_flag_and_register": 2,
                    "initialize_flag_and_return_address": 2,
                    "initialize_flags_and_registers": 1,
                    "initialize_hardware": 1,
                    "initialize_peripheral": 3,
                    "set_registers_and_flags": 1,
                    "update_flag_and_registers": 4,
                    "update_flag_and_return_address": 3,
                    "update_flags_and_registers": 13
                },
                "_DAT_40010004": {
                    "control_register": 1,
                    "flag_register2": 1,
                    "register": 1,
                    "register2": 4,
                    "register_value2": 1
                },
                "_DAT_40021018": {
                    "data_register": 1,
                    "flag_register": 1,
                    "register": 1,
                    "register1": 4,
                    "register_value1": 1
                },
                "local_14": {
                    "action": 1,
                    "arg3": 1,
                    "const_value": 1,
                    "constant": 8,
                    "constant_3": 2,
                    "constant_value": 1,
                    "flag": 1,
                    "local4": 1,
                    "local_constant": 2,
                    "local_param_14": 1,
                    "local_var": 6,
                    "local_var3": 2,
                    "local_var_1": 1,
                    "local_variable": 1,
                    "local_variable1": 1
                },
                "local_18": {
                    "arg2": 1,
                    "data_param": 1,
                    "local3": 1,
                    "local_param3": 7,
                    "local_param_18": 1,
                    "local_param_3": 3,
                    "local_parameter3": 1,
                    "local_parameter_3": 1,
                    "local_register_param": 1,
                    "local_var2": 2,
                    "new_param3": 1,
                    "param3_copy": 8,
                    "param3_local": 1,
                    "param_3_updated": 1,
                    "updated_value": 1
                },
                "local_1c": {
                    "address_param": 1,
                    "arg1": 1,
                    "local2": 1,
                    "local_flag_param": 1,
                    "local_param2": 7,
                    "local_param_1c": 1,
                    "local_param_2": 3,
                    "local_parameter2": 1,
                    "local_parameter_2": 1,
                    "local_var1": 2,
                    "new_param2": 1,
                    "param2_copy": 8,
                    "param2_local": 1,
                    "param_2_updated": 1,
                    "updated_address": 1
                },
                "local_20": {
                    "bit_mask": 17,
                    "bitmask": 11,
                    "flag": 1,
                    "mask": 1,
                    "peripheral_mask": 1
                },
                "param_1": {
                    "component_type": 1,
                    "device_index": 1,
                    "flag": 6,
                    "input": 5,
                    "input_param": 3,
                    "input_value": 12,
                    "peripheral_id": 2,
                    "peripheral_type": 1
                },
                "param_2": {
                    "address": 2,
                    "arg1": 1,
                    "flag1": 1,
                    "flag_param": 1,
                    "param2": 16,
                    "param_2": 4,
                    "parameter2": 1,
                    "parameter_2": 2,
                    "value1": 1,
                    "var1": 2
                },
                "param_3": {
                    "arg2": 1,
                    "data": 1,
                    "flag2": 1,
                    "param3": 16,
                    "param_3": 4,
                    "parameter3": 1,
                    "parameter_3": 2,
                    "register_param": 1,
                    "value": 1,
                    "value2": 1,
                    "var2": 2
                },
                "uVar1": {
                    "address": 14,
                    "flag_addr": 1,
                    "flag_address": 10,
                    "flag_and_address": 1,
                    "flag_val": 1,
                    "flag_value": 3
                }
            },
            "called": [
                "FUN_080040e8",
                "FUN_08006bb8"
            ],
            "calling": [
                "FUN_08008990"
            ],
            "code": "\n\n\nvoid update_flags_and_registers_08007258(uint input_value,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 address;\n  uint bit_mask;\n  undefined4 param2_copy;\n  undefined4 param3_copy;\n  undefined4 constant;\n  \n  address = set_flag_and_return_address_08006bb8((input_value << 0x18) >> 0x1c);\n  bit_mask = 1 << (input_value & 0xf) & 0xffff;\n  constant = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((input_value - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((input_value == 0xf) || (input_value == 0x13)) || (input_value == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  param2_copy = param2;\n  param3_copy = param3;\n  update_flags_and_registers_08007258_080040e8(address,&bit_mask);\n  return;\n}\n\n",
            "current_name": "update_flags_and_registers_08007258",
            "entrypoint": "0x08007258",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007258": "update_flags_and_registers_08007258",
                "local_14": "constant",
                "local_18": "param3_copy",
                "local_1c": "param2_copy",
                "local_20": "bit_mask",
                "param_1": "input_value",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080072d8": {
            "additional_data": {
                "FUN_080072d8": {
                    "set_param_based_on_condition": 1,
                    "set_param_flag": 1,
                    "set_param_value": 18,
                    "set_param_value_based_on_condition": 9,
                    "set_param_value_if_condition": 1,
                    "update_param_value": 1
                },
                "param_1": {
                    "input_param": 1,
                    "param1": 8,
                    "param_a": 1,
                    "param_address": 1,
                    "param_ptr": 3,
                    "param_value": 3,
                    "param_value1": 1,
                    "param_value_1": 6,
                    "value": 1,
                    "value1": 4,
                    "value_1": 1,
                    "value_to_set": 1
                },
                "param_2": {
                    "data_ptr": 1,
                    "input_value": 1,
                    "param2": 8,
                    "param_2_value": 1,
                    "param_b": 1,
                    "param_flag": 1,
                    "param_option": 1,
                    "param_string": 1,
                    "param_value": 3,
                    "param_value2": 1,
                    "param_value_2": 6,
                    "type": 1,
                    "value2": 4,
                    "value_2": 1
                },
                "param_3": {
                    "condition": 16,
                    "flag": 8,
                    "is_enabled": 1,
                    "param3": 4,
                    "param_condition": 1,
                    "param_value_3": 1
                },
                "param_4": {
                    "config_ptr": 1,
                    "data": 3,
                    "data_ptr": 1,
                    "default_value": 1,
                    "extra_param": 3,
                    "flag": 1,
                    "output_param": 1,
                    "param": 1,
                    "param4": 6,
                    "param_c": 1,
                    "param_data": 1,
                    "param_value4": 1,
                    "param_value_2": 2,
                    "param_value_3": 3,
                    "param_value_4": 1,
                    "value": 1,
                    "value3": 3
                },
                "set_param_value_080042e2": {
                    "set_param_value": 1
                }
            },
            "called": [
                "FUN_080042e2"
            ],
            "calling": [
                "FUN_08008a24"
            ],
            "code": "\nvoid set_param_value_based_on_condition_080072d8(undefined4 param1,undefined2 param2,int condition,undefined4 param4)\n\n{\n  if (condition == 0) {\n    set_param_value(param1,param2,0,param4,param4);\n    return;\n  }\n  set_param_value(param1,param2,1,param4,param4);\n  return;\n}\n\n",
            "current_name": "set_param_value_based_on_condition_080072d8",
            "entrypoint": "0x080072d8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080072d8": "set_param_value_based_on_condition_080072d8",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "condition",
                "param_4": "param4",
                "set_param_value_080042e2": "set_param_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080072f0": {
            "additional_data": {
                "FUN_080072f0": {
                    "check_and_return_bit_in_mask": 2,
                    "check_and_set_bit_in_mask": 1,
                    "check_and_update_bit_in_mask": 1,
                    "check_bit_in_mask": 15,
                    "check_bit_mask": 5,
                    "check_bit_presence": 1,
                    "check_bits_and_return": 1,
                    "check_mask_bit": 3,
                    "decode_mask": 1,
                    "mask_check": 1
                },
                "check_bit_in_mask_080042d4": {
                    "check_bit_in_mask": 1,
                    "check_mask_bit_helper": 1
                },
                "param_1": {
                    "arg1": 1,
                    "argument_1": 1,
                    "bit": 1,
                    "data": 1,
                    "first_param": 1,
                    "flag": 1,
                    "input_1": 1,
                    "input_param": 2,
                    "input_value": 2,
                    "input_variable_1": 1,
                    "mask": 11,
                    "mask_ptr": 1,
                    "mask_value": 3,
                    "value": 4
                },
                "param_2": {
                    "arg2": 1,
                    "argument_2": 1,
                    "bit": 6,
                    "bit_index": 2,
                    "bit_param": 1,
                    "bit_position": 6,
                    "bit_to_check": 1,
                    "bits": 1,
                    "flag": 1,
                    "index": 1,
                    "input_2": 1,
                    "input_variable_2": 1,
                    "mask": 4,
                    "mask_bit": 1,
                    "mask_param": 1,
                    "position": 1,
                    "second_param": 1
                },
                "param_3": {
                    "arg1": 2,
                    "arg3": 1,
                    "argument_3": 1,
                    "bit_mask": 1,
                    "bitmask": 1,
                    "data_ptr": 1,
                    "input_3": 1,
                    "input_variable_3": 1,
                    "mask": 4,
                    "mask_length": 1,
                    "mask_param": 1,
                    "mask_value": 1,
                    "param": 1,
                    "param1": 1,
                    "param_1_copy": 1,
                    "param_3": 4,
                    "param_a": 1,
                    "parameter_3": 1,
                    "ptr_1": 1,
                    "size_of_mask": 1,
                    "third_param": 1,
                    "value": 1,
                    "value1": 2
                },
                "param_4": {
                    "arg2": 2,
                    "arg4": 1,
                    "argument_4": 1,
                    "bit": 1,
                    "bit_mask": 1,
                    "bit_mask_copy": 1,
                    "fourth_param": 1,
                    "input_4": 1,
                    "input_mask": 1,
                    "input_variable_4": 1,
                    "mask": 1,
                    "mask_length": 1,
                    "mask_param_2": 1,
                    "mask_value": 1,
                    "param2": 2,
                    "param_2_copy": 1,
                    "param_4": 5,
                    "param_b": 1,
                    "parameter_4": 1,
                    "ptr_2": 1,
                    "result_ptr": 1,
                    "size": 1,
                    "value": 1,
                    "value2": 2
                }
            },
            "called": [
                "FUN_080042d4"
            ],
            "calling": [
                "FUN_08008a6c"
            ],
            "code": "\nvoid check_and_return_bit_in_mask_080072f0(undefined4 mask,undefined2 bit_position,undefined4 param_3,undefined4 param_4)\n\n{\n  check_mask_bit_helper(mask,bit_position,param_3,param_4,param_4);\n  return;\n}\n\n",
            "current_name": "check_and_return_bit_in_mask_080072f0",
            "entrypoint": "0x080072f0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080072f0": "check_and_return_bit_in_mask_080072f0",
                "check_bit_in_mask_080042d4": "check_mask_bit_helper",
                "param_1": "mask",
                "param_2": "bit_position"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080072fa": {
            "additional_data": {
                "FUN_080072fa": {
                    "initialize_memory_and_control_register_update": 1,
                    "initialize_system": 27,
                    "initialize_system_and_memory": 1,
                    "initialize_system_and_update": 1,
                    "initialize_system_components": 1
                },
                "initialize_and_update_system_08003724": {
                    "init_system_components": 1,
                    "init_system_update": 1,
                    "initialize_and_update_system": 28,
                    "initialize_system": 1
                },
                "initialize_memory_and_update_control_register_080035b8": {
                    "init_mem_update_ctrl_register": 1,
                    "init_memory_and_control_register": 1,
                    "initialize_memory": 1,
                    "initialize_memory_and_control": 3,
                    "initialize_memory_and_control_register": 11,
                    "initialize_memory_and_control_register_update": 2,
                    "initialize_memory_and_update_control_register": 11,
                    "initialize_memory_and_update_registers": 1
                }
            },
            "called": [
                "FUN_08003724",
                "FUN_080035b8"
            ],
            "calling": [
                "FUN_080036a2"
            ],
            "code": "\nvoid initialize_system_and_update_080072fa(void)\n\n{\n  initialize_and_update_system();\n  initialize_memory_and_control_register();\n  return;\n}\n\n",
            "current_name": "initialize_system_and_update_080072fa",
            "entrypoint": "0x080072fa",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080072fa": "initialize_system_and_update_080072fa",
                "initialize_and_update_system_08003724": "initialize_and_update_system",
                "initialize_memory_and_update_control_register_080035b8": "initialize_memory_and_control_register"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007306": {
            "additional_data": {
                "FUN_08007306": {
                    "find_integer": 1,
                    "find_item_index": 1,
                    "find_matching_value": 2,
                    "find_offset": 1,
                    "find_param_value": 1,
                    "find_parameter_offset": 1,
                    "find_value": 5,
                    "find_value_by_key": 1,
                    "find_value_in_array": 7,
                    "find_value_in_list": 6,
                    "find_value_index": 4,
                    "find_value_position": 1
                },
                "param_1": {
                    "item": 1,
                    "key": 1,
                    "search_value": 1,
                    "target": 1,
                    "target_value": 12,
                    "value": 9,
                    "value_to_find": 6
                },
                "param_2": {
                    "array": 13,
                    "array_pointer": 1,
                    "array_ptr": 4,
                    "data": 1,
                    "data_array": 2,
                    "list": 2,
                    "list_ptr": 4,
                    "param_array": 1,
                    "param_list": 1,
                    "val_array": 1,
                    "values_array": 1
                }
            },
            "called": [
                "FUN_08007306"
            ],
            "calling": [
                "FUN_08007306",
                "FUN_08007320"
            ],
            "code": "\nundefined4 find_value_in_array_08007306(int target_value,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (*array == target_value) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 4);\n}\n\n",
            "current_name": "find_value_in_array_08007306",
            "entrypoint": "0x08007306",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007306": "find_value_in_array_08007306",
                "param_1": "target_value",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007320": {
            "additional_data": {
                "FUN_08007320": {
                    "check_and_find_value": 2,
                    "check_parameter_value": 1,
                    "check_value_in_array": 1,
                    "find_value": 2,
                    "find_value_if_not_negative": 1,
                    "find_value_in_array": 3,
                    "find_value_or_default": 10,
                    "find_value_or_zero": 10,
                    "get_value_from_array": 1
                },
                "param_1": {
                    "input": 2,
                    "input_value": 16,
                    "value": 9,
                    "value_to_check": 1,
                    "value_to_find": 3
                },
                "uVar1": {
                    "found_value": 21,
                    "result": 4,
                    "value": 2
                }
            },
            "called": [
                "FUN_08007306"
            ],
            "calling": [
                "FUN_08007118",
                "FUN_080071e4",
                "FUN_08008500",
                "FUN_080084b0",
                "FUN_080077b0",
                "FUN_08008078",
                "FUN_08006d80"
            ],
            "code": "\nundefined4 find_value_or_default_08007320(int input_value)\n\n{\n  undefined4 found_value;\n  \n  if (input_value != -1) {\n    found_value = find_value_in_array_08007306();\n    return found_value;\n  }\n  return 0;\n}\n\n",
            "current_name": "find_value_or_default_08007320",
            "entrypoint": "0x08007320",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007320": "find_value_or_default_08007320",
                "param_1": "input_value",
                "uVar1": "found_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007332": {
            "additional_data": {
                "FUN_08007332": {
                    "find_char_position": 1,
                    "find_character": 4,
                    "find_character_in_sequence": 1,
                    "find_character_in_string": 1,
                    "find_character_index": 7,
                    "find_character_position": 2,
                    "find_element": 1,
                    "find_element_index": 2,
                    "find_first_occurrence": 1,
                    "find_index_of_value": 1,
                    "find_param_in_array": 1,
                    "find_value": 1,
                    "find_value_from_list": 1,
                    "find_value_in_array": 4,
                    "find_value_in_list": 2,
                    "find_value_index": 1
                },
                "PTR_x": {
                    "current_value_ptr": 1
                },
                "list_start": {
                    "list_ptr": 1
                },
                "param_1": {
                    "char_to_find": 1,
                    "character": 8,
                    "character_index": 1,
                    "character_to_find": 5,
                    "element": 2,
                    "search_value": 1,
                    "target": 2,
                    "target_index": 1,
                    "target_value": 3,
                    "value": 4,
                    "value_to_find": 3
                },
                "param_2": {
                    "array": 11,
                    "array_of_values": 1,
                    "array_ptr": 1,
                    "character_array": 4,
                    "character_list": 2,
                    "data": 1,
                    "list_ptr": 2,
                    "list_start": 1,
                    "sequence": 1,
                    "string": 7
                },
                "return": {
                    "result": 1
                }
            },
            "called": [
                "FUN_08007332"
            ],
            "calling": [
                "FUN_0800734a",
                "FUN_08007332"
            ],
            "code": "\nint find_character_index_08007332(int character,char *array)\n\n{\n  while( true ) {\n    if (*(int *)(array + 4) == 0) {\n      result -1;\n    }\n    if (*(int *)(array + 4) == character) break;\n    array = array + 0xc;\n  }\n  result (int)*array;\n}\n\n",
            "current_name": "find_character_index_08007332",
            "entrypoint": "0x08007332",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007332": "find_character_index_08007332",
                "param_1": "character",
                "param_2": "array",
                "return": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800734a": {
            "additional_data": {
                "FUN_0800734a": {
                    "check_character_index": 1,
                    "find_character": 1,
                    "find_character_index": 13,
                    "find_character_index_or_default": 5,
                    "find_character_index_or_error": 4,
                    "find_character_index_or_minus_one": 1,
                    "find_character_index_or_negative": 1,
                    "find_character_index_or_return_error": 1,
                    "find_index_if_not_zero": 2,
                    "get_character_index": 2
                },
                "param_1": {
                    "character": 3,
                    "character_id": 1,
                    "character_index": 1,
                    "index": 1,
                    "input": 11,
                    "input_character": 1,
                    "input_param": 1,
                    "input_value": 12
                },
                "uVar1": {
                    "character_index": 17,
                    "character_index_or_error": 1,
                    "index": 6,
                    "index_result": 1,
                    "result": 5
                }
            },
            "called": [
                "FUN_08007332"
            ],
            "calling": [
                "FUN_080084b0",
                "FUN_08008d30"
            ],
            "code": "\nundefined4 find_character_index_or_default_0800734a(int input_value)\n\n{\n  undefined4 character_index;\n  \n  if (input_value != 0) {\n    character_index = find_character_index_08007332();\n    return character_index;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "find_character_index_or_default_0800734a",
            "entrypoint": "0x0800734a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800734a": "find_character_index_or_default_0800734a",
                "param_1": "input_value",
                "uVar1": "character_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800735a": {
            "additional_data": {
                "DAT_": {
                    "": 2
                },
                "DAT_0xc": {
                    "element_size": 1
                },
                "DAT_0xffffffff": {
                    "not_found": 1
                },
                "FUN_0800735a": {
                    "find_param_in_array": 1,
                    "find_value": 1,
                    "find_value_after_key": 1,
                    "find_value_at_offset": 1,
                    "find_value_by_index": 1,
                    "find_value_by_key": 1,
                    "find_value_in_array": 7,
                    "find_value_in_list": 4,
                    "find_value_in_sequence": 1,
                    "find_value_index": 10,
                    "find_value_offset": 1,
                    "find_value_position": 1,
                    "search_and_return_value": 1
                },
                "PTR_": {
                    "": 2
                },
                "PTR_8": {
                    "array_element_offset": 1
                },
                "PTR_undefined4_0800736c": {
                    "result": 1
                },
                "break_loop_flag": {
                    "found_value": 1
                },
                "param_1": {
                    "key": 2,
                    "target": 1,
                    "target_value": 8,
                    "value": 12,
                    "value_to_find": 8
                },
                "param_2": {
                    "array": 15,
                    "array_of_values": 1,
                    "array_ptr": 1,
                    "data": 2,
                    "data_array": 5,
                    "list": 4,
                    "sequence": 1,
                    "value_array": 1,
                    "values": 1
                }
            },
            "called": [
                "FUN_0800735a"
            ],
            "calling": [
                "FUN_0800735a",
                "FUN_08007376"
            ],
            "code": "\nundefined4 find_value_by_index_0800735a(int value,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0xffffffff;\n    }\n    if (*array == value) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 8);\n}\n\n",
            "current_name": "find_value_by_index_0800735a",
            "entrypoint": "0x0800735a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800735a": "find_value_by_index_0800735a",
                "param_1": "value",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007376": {
            "additional_data": {
                "FUN_08007376": {
                    "find_value": 1,
                    "find_value_or_default": 1,
                    "find_value_or_negative_one": 1,
                    "find_value_or_return_minus_one": 1,
                    "get_value": 15,
                    "get_value_at_index": 4,
                    "get_value_by_index": 5,
                    "get_value_or_default": 2,
                    "get_value_or_find": 1
                },
                "param_1": {
                    "index": 21,
                    "input_value": 5,
                    "value": 1,
                    "value_index": 4
                },
                "uVar1": {
                    "found_value": 10,
                    "value": 20
                }
            },
            "called": [
                "FUN_0800735a"
            ],
            "calling": [
                "FUN_08007118",
                "FUN_080071e4",
                "FUN_08006c7c",
                "FUN_08006c60",
                "FUN_080077b0",
                "FUN_08008078",
                "FUN_08006e68"
            ],
            "code": "\nundefined4 get_value_by_index_08007376(int index)\n\n{\n  undefined4 value;\n  \n  if (index == -1) {\n    return 0xffffffff;\n  }\n  value = find_value_by_index_0800735a();\n  return value;\n}\n\n",
            "current_name": "get_value_by_index_08007376",
            "entrypoint": "0x08007376",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007376": "get_value_by_index_08007376",
                "param_1": "index",
                "uVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800738a": {
            "additional_data": {
                "0xc": {
                    "next_char_offset": 1
                },
                "FUN_0800738a": {
                    "check_for_match": 1,
                    "check_match": 4,
                    "check_param": 1,
                    "check_param_and_string_match": 1,
                    "check_param_occurrence": 1,
                    "check_parameters": 1,
                    "check_value_in_array": 2,
                    "compare": 1,
                    "compare_integers": 1,
                    "compare_param_and_array": 1,
                    "compare_value_and_string": 1,
                    "compare_values": 4,
                    "find_character": 1,
                    "find_match": 3,
                    "find_value": 1,
                    "find_value_in_array": 2,
                    "find_value_in_string": 2,
                    "find_value_index": 1,
                    "is_value_in_array": 1,
                    "linear_search": 1
                },
                "param_1": {
                    "char_to_find": 1,
                    "check_value": 1,
                    "input_value": 3,
                    "number_1": 1,
                    "number_to_compare": 1,
                    "search_value": 3,
                    "target": 1,
                    "target_value": 3,
                    "value": 7,
                    "value1": 2,
                    "value_1": 3,
                    "value_to_check": 2,
                    "value_to_find": 2,
                    "value_to_match": 1
                },
                "param_2": {
                    "array": 9,
                    "array_of_values": 2,
                    "array_to_search": 1,
                    "char_array": 2,
                    "data_array": 3,
                    "number_list": 1,
                    "param_array": 1,
                    "string": 3,
                    "string_array": 2,
                    "string_ptr": 1,
                    "string_to_search": 1,
                    "target_string": 1,
                    "value_array": 1,
                    "values": 1,
                    "values_array": 2
                },
                "return": {
                    "result": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8",
                "FUN_08001cd0",
                "FUN_080088e0",
                "FUN_08008990",
                "FUN_08000a64"
            ],
            "code": "\nundefined4 check_param_and_string_match_0800738a(int value,char *array)\n\n{\n  if (value == -1) {\n    result 0;\n  }\n  while( true ) {\n    if (*array == -1) {\n      result 0;\n    }\n    if (value == *array) break;\n    array = array + 0xc;\n  }\n  result 1;\n}\n\n",
            "current_name": "check_param_and_string_match_0800738a",
            "entrypoint": "0x0800738a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800738a": "check_param_and_string_match_0800738a",
                "param_1": "value",
                "param_2": "array",
                "return": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080073ae": {
            "additional_data": {
                "FUN_080073ae": {
                    "compare_and_return": 3,
                    "compare_and_return_least": 1,
                    "compare_and_return_non_zero": 1,
                    "compare_and_return_nonzero": 2,
                    "compare_and_return_param1_if_equal_param2": 1,
                    "compare_and_return_smaller": 7,
                    "compare_and_return_smaller_value": 3,
                    "compare_and_return_zero": 2,
                    "compare_and_select_minimum": 1,
                    "compare_and_select_nonzero": 1,
                    "find_common_number": 1,
                    "find_different_parameter": 1,
                    "find_non_zero": 1,
                    "find_nonzero_param": 3,
                    "find_nonzero_value": 1,
                    "find_smaller_value": 1,
                    "get_non_zero_parameter": 1
                },
                "param_1": {
                    "first_number": 3,
                    "first_value": 2,
                    "input_1": 1,
                    "input_value1": 1,
                    "num1": 3,
                    "number1": 2,
                    "operand1": 1,
                    "value1": 11,
                    "value_1": 7
                },
                "param_2": {
                    "input_2": 1,
                    "input_value2": 1,
                    "num2": 3,
                    "number2": 2,
                    "operand2": 1,
                    "second_number": 3,
                    "second_value": 2,
                    "value2": 11,
                    "value_2": 7
                }
            },
            "called": [],
            "calling": [
                "FUN_080077b0",
                "FUN_08008078"
            ],
            "code": "\nint compare_and_return_smaller_value_080073ae(int value1,int value2)\n\n{\n  if (value1 != value2) {\n    if (value1 == 0) {\n      return value2;\n    }\n    if (value2 == 0) {\n      return value1;\n    }\n    value1 = 0;\n  }\n  return value1;\n}\n\n",
            "current_name": "compare_and_return_smaller_value_080073ae",
            "entrypoint": "0x080073ae",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080073ae": "compare_and_return_smaller_value_080073ae",
                "param_1": "value1",
                "param_2": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080073c0": {
            "additional_data": {
                "0x0": {
                    "null_pointer": 1
                },
                "DAT_200005f4": {
                    "callback": 2,
                    "callback_function": 11,
                    "callback_function_pointer": 7,
                    "callback_function_ptr": 4,
                    "callback_pointer": 1,
                    "callback_ptr": 1,
                    "function": 1
                },
                "DAT_2000060c": {
                    "callback_argument": 4,
                    "callback_data": 7,
                    "callback_function_argument": 5,
                    "callback_function_parameter": 2,
                    "callback_parameter": 7,
                    "data": 3,
                    "parameter": 1
                },
                "FUN_080073c0": {
                    "execute_callback": 17,
                    "execute_callback_function": 13,
                    "execute_function": 1
                },
                "callback_function": {
                    "callback_function": 1
                },
                "code": {
                    "callback_function": 2,
                    "function_pointer": 1
                },
                "execute_callback": {
                    "execute_callback": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08005cb4"
            ],
            "code": "\nvoid execute_callback_function_080073c0(void)\n\n{\n  if (DAT_200005f4 != (callback_function *)0x0) {\n    (*DAT_200005f4)(DAT_2000060c);\n  }\n  return;\n}\n\n",
            "current_name": "execute_callback_function_080073c0",
            "entrypoint": "0x080073c0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080073c0": "execute_callback_function_080073c0",
                "code": "callback_function"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080073e8": {
            "additional_data": {
                "DAT_": {
                    "": 1,
                    "dat_": 1
                },
                "FUN_080073e8": {
                    "do_nothing_loop": 1,
                    "endless_loop": 2,
                    "infinite_loop": 24,
                    "loop_forever": 1,
                    "run_infinite_loop": 3
                },
                "PTR_": {
                    "": 1,
                    "ptr_": 1
                },
                "do": {
                    "infinite_loop": 1,
                    "infinite_loop_condition": 1
                },
                "original_variable_name_1": {
                    "counter": 1
                },
                "store": {
                    "infinite_value": 1
                },
                "while": {
                    "infinite_loop": 1
                }
            },
            "called": [
                "FUN_080073e8"
            ],
            "calling": [
                "FUN_080073e8",
                "FUN_080035b8"
            ],
            "code": "\nvoid run_infinite_loop_080073e8(void)\n\n{\n  infinite_loop_condition {\n                    /* WARNING: Do nothing block with infinite loop */\n  } infinite_loop( true );\n}\n\n",
            "current_name": "run_infinite_loop_080073e8",
            "entrypoint": "0x080073e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080073e8": "run_infinite_loop_080073e8",
                "do": "infinite_loop_condition",
                "while": "infinite_loop"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080073ec": {
            "additional_data": {
                "": {
                    "": 1
                },
                "FUN_080073ec": {
                    "configure_peripheral": 1,
                    "init_peripheral_registers": 1,
                    "initialize_hardware": 3,
                    "initialize_hardware_registers": 1,
                    "initialize_memory": 1,
                    "initialize_peripheral": 2,
                    "initialize_peripheral_devices": 1,
                    "initialize_peripheral_registers": 3,
                    "initialize_peripherals": 2,
                    "initialize_register_values": 1,
                    "initialize_registers": 10,
                    "initialize_system": 2,
                    "set_flags_and_values": 1,
                    "set_peripheral_registers": 1,
                    "setup_registers": 1
                },
                "_DAT_40021000": {
                    "config_register1": 2,
                    "control_register": 1,
                    "control_register0": 1,
                    "control_register1": 2,
                    "control_register_1": 1,
                    "flag_register": 1,
                    "gpio_register": 1,
                    "hardware_reg1": 1,
                    "memory_config_reg": 1,
                    "peripheral_control_register": 5,
                    "peripheral_reg1": 1,
                    "peripheral_register1": 2,
                    "peripheral_register_a": 1,
                    "port_config1": 1,
                    "reg1": 1,
                    "register1": 6,
                    "register_1": 1,
                    "system_status": 1
                },
                "_DAT_40021004": {
                    "clock_configuration_register": 1,
                    "config_register": 1,
                    "config_register2": 2,
                    "control_register1": 1,
                    "control_register2": 2,
                    "control_register_2": 1,
                    "hardware_reg2": 1,
                    "interrupt_register": 1,
                    "mask_register": 1,
                    "memory_access_reg": 1,
                    "peripheral_configuration_register": 3,
                    "peripheral_reg2": 1,
                    "peripheral_register2": 2,
                    "peripheral_register_b": 1,
                    "peripheral_status_register": 1,
                    "port_config2": 1,
                    "reg2": 1,
                    "register2": 6,
                    "register_2": 1,
                    "system_settings": 1
                },
                "_DAT_40021008": {
                    "control_register": 1,
                    "data_register": 1,
                    "hardware_reg3": 1,
                    "interrupt_configuration_register": 1,
                    "interrupt_enable_register": 1,
                    "interrupt_priority_register": 1,
                    "memory_address": 1,
                    "memory_configuration": 1,
                    "memory_control_reg": 1,
                    "peripheral_base_address_register": 1,
                    "peripheral_baud_rate": 1,
                    "peripheral_mode_register": 1,
                    "peripheral_reg3": 1,
                    "peripheral_register3": 2,
                    "peripheral_register_c": 1,
                    "reg3": 1,
                    "register3": 6,
                    "register_3": 1,
                    "status_register": 1,
                    "system_configuration": 1,
                    "timeout_value": 1,
                    "timer_config_register": 1,
                    "timer_register": 1,
                    "value_register": 1
                },
                "_DAT_e000ed08": {
                    "clock_control_register": 1,
                    "control_register": 1,
                    "hardware_configuration": 1,
                    "hardware_reg4": 1,
                    "interrupt_config_register": 1,
                    "interrupt_configuration": 1,
                    "interrupt_control": 2,
                    "interrupt_controller_register": 1,
                    "interrupt_ctrl_reg": 1,
                    "interrupt_flags": 1,
                    "interrupt_priority_register": 1,
                    "interrupt_register": 2,
                    "peripheral_reg4": 1,
                    "peripheral_register4": 2,
                    "peripheral_register_d": 1,
                    "reg4": 1,
                    "register4": 6,
                    "register_4": 1,
                    "system_control_register": 4
                }
            },
            "called": [],
            "calling": [
                "entry"
            ],
            "code": "\n\n\nvoid initialize_peripheral_registers_080073ec(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "current_name": "initialize_peripheral_registers_080073ec",
            "entrypoint": "0x080073ec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080073ec": "initialize_peripheral_registers_080073ec"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007438": {
            "additional_data": {
                "DAT_20000610": {
                    "address1": 1,
                    "data1": 1,
                    "data_flag1_ptr": 1,
                    "flag1_ptr": 1,
                    "flag_address_1": 1,
                    "flagged_param1": 1,
                    "memory_address1": 1,
                    "memory_state_1": 1,
                    "param_1_flag1": 1,
                    "param_flag1": 1,
                    "param_zero": 1,
                    "peripheral_data1": 1,
                    "pointer_1": 1,
                    "pointer_to_region0x40012c00": 1,
                    "pointer_to_section_a40012c00": 1,
                    "ptr_1": 1,
                    "ptr_flag1": 1,
                    "register_3": 1,
                    "register_a": 1,
                    "register_ptr1": 1,
                    "status_ptr0": 1,
                    "zero_flag_register_value": 1
                },
                "DAT_20000614": {
                    "address2": 1,
                    "data2": 1,
                    "data_flag2_ptr": 1,
                    "flag2_ptr": 1,
                    "flag_address_2": 1,
                    "flagged_param2": 1,
                    "memory_address2": 1,
                    "memory_state_2": 1,
                    "one_flag_register_value": 1,
                    "param_1_flag2": 1,
                    "param_flag2": 1,
                    "param_one": 1,
                    "peripheral_data2": 1,
                    "pointer_2": 1,
                    "pointer_to_region0x40000000": 1,
                    "pointer_to_section_a40000000": 1,
                    "ptr_2": 1,
                    "ptr_flag2": 1,
                    "register_4": 1,
                    "register_b": 1,
                    "register_ptr2": 1,
                    "status_ptr1": 1
                },
                "DAT_20000618": {
                    "address3": 1,
                    "data3": 1,
                    "data_flag3_ptr": 1,
                    "flag3_ptr": 1,
                    "flag_address_3": 1,
                    "flagged_param3": 1,
                    "memory_address3": 1,
                    "memory_state_3": 1,
                    "param_1_flag3": 1,
                    "param_flag3": 1,
                    "param_two": 1,
                    "peripheral_data3": 1,
                    "pointer_3": 1,
                    "pointer_to_region0x40000400": 1,
                    "pointer_to_section_a40000400": 1,
                    "ptr_3": 1,
                    "ptr_flag3": 1,
                    "register_5": 1,
                    "register_c": 1,
                    "register_ptr3": 1,
                    "status_ptr2": 1,
                    "two_flag_register_value": 1
                },
                "DAT_2000061c": {
                    "address4": 1,
                    "data4": 1,
                    "data_flag4_ptr": 1,
                    "flag4_ptr": 1,
                    "flag_address_4": 1,
                    "flagged_param4": 1,
                    "four_flag_register_value": 1,
                    "memory_address4": 1,
                    "memory_state_4": 1,
                    "param_1_flag4": 1,
                    "param_flag4": 1,
                    "param_three": 1,
                    "peripheral_data4": 1,
                    "pointer_4": 1,
                    "pointer_to_region0x40000800": 1,
                    "pointer_to_section_a40000800": 1,
                    "ptr_4": 1,
                    "ptr_flag4": 1,
                    "register_6": 1,
                    "register_d": 1,
                    "register_ptr4": 1,
                    "status_ptr3": 1
                },
                "FUN_08007438": {
                    "classify_memory_region": 1,
                    "configure_peripheral": 1,
                    "initialize_flags": 1,
                    "process_binary_data": 1,
                    "process_param": 1,
                    "set_flags_based_on_param": 1,
                    "set_flags_based_on_value": 2,
                    "update_control_flags": 1,
                    "update_data_fields": 1,
                    "update_data_flags": 2,
                    "update_flags": 3,
                    "update_flags_and_data": 2,
                    "update_flags_based_on_param": 1,
                    "update_memory_flags": 1,
                    "update_memory_states": 1,
                    "update_register_flags": 1,
                    "update_registers": 7,
                    "update_status": 2,
                    "update_variables": 1
                },
                "_DAT_40021018": {
                    "control_flag1": 1,
                    "flag1": 5,
                    "flag_register_1": 1,
                    "flags1": 1,
                    "flags_1": 1,
                    "flags_register_1": 1,
                    "peripheral_config1": 1,
                    "register1": 1,
                    "register_1": 1,
                    "register_flag1": 2,
                    "register_flag_a": 1,
                    "section_flags": 1,
                    "status_register": 2,
                    "system_status_one": 1
                },
                "_DAT_4002101c": {
                    "control_flag2": 1,
                    "control_register": 1,
                    "flag2": 3,
                    "flag_register_2": 1,
                    "flags": 2,
                    "flags2": 1,
                    "flags_2": 1,
                    "flags_register_2": 1,
                    "peripheral_config2": 1,
                    "register2": 1,
                    "register_2": 1,
                    "register_flag2": 2,
                    "register_flag_b": 1,
                    "section_mask": 1,
                    "status_control": 1,
                    "system_status_two": 1
                },
                "param_1": {
                    "address": 1,
                    "binary_data_pointer": 1,
                    "data": 4,
                    "data_pointer": 2,
                    "flag_pointer": 1,
                    "input": 2,
                    "input_param": 2,
                    "input_ptr": 1,
                    "input_value": 3,
                    "memory_address": 2,
                    "memory_region": 1,
                    "param": 1,
                    "peripheral_address": 1,
                    "register": 1,
                    "register_value": 3,
                    "registers": 2,
                    "status": 1,
                    "status_ptr": 1,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08007708",
                "FUN_08006e68"
            ],
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid update_flags_and_data_08007438(int *data)\n\n{\n  if (*data == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 | 0x800;\n    DAT_20000610 = data;\n  }\n  if (*data == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c | 1;\n    DAT_20000614 = data;\n  }\n  if (*data == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c | 2;\n    DAT_20000618 = data;\n  }\n  if (*data == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c | 4;\n    DAT_2000061c = data;\n  }\n  return;\n}\n\n",
            "current_name": "update_flags_and_data_08007438",
            "entrypoint": "0x08007438",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007438": "update_flags_and_data_08007438",
                "param_1": "data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080074e0": {
            "additional_data": {
                "0x40000000": {
                    "clear_flag": 1,
                    "flag_2_value_1": 1,
                    "flag_mask_2": 1
                },
                "0x40000400": {
                    "disable_flag": 1,
                    "flag_2_value_2": 1,
                    "flag_mask_3": 1
                },
                "0x40000800": {
                    "flag_2_value_3": 1,
                    "flag_mask_4": 1,
                    "reset_flag": 1
                },
                "0x40012c00": {
                    "enable_flag": 1,
                    "flag_1_value": 1,
                    "flag_mask_1": 1
                },
                "DAT_40021018": {
                    "register_a": 1
                },
                "DAT_4002101c": {
                    "register_b": 1
                },
                "FUN_080074e0": {
                    "apply_configuration": 1,
                    "clear_flags": 3,
                    "process_param": 1,
                    "update_config": 3,
                    "update_control_register": 1,
                    "update_control_registers": 1,
                    "update_data": 4,
                    "update_data_based_on_value": 1,
                    "update_data_register": 1,
                    "update_flags": 2,
                    "update_flags_based_on_param": 2,
                    "update_memory_flags": 1,
                    "update_memory_values": 1,
                    "update_register_values": 2,
                    "update_registers": 5,
                    "update_settings": 2
                },
                "PTR_40021018": {
                    "setting_a": 1
                },
                "PTR_4002101c": {
                    "setting_b": 1
                },
                "_DAT_40021018": {
                    "control_register1": 2,
                    "control_register_a": 1,
                    "current_value_40021018": 1,
                    "flag_1": 1,
                    "flag_register1": 1,
                    "flags_register": 1,
                    "flags_register1": 1,
                    "flags_register_1": 1,
                    "register_1": 2,
                    "register_a": 1,
                    "register_value_1": 2,
                    "setting1": 1,
                    "value1": 1
                },
                "_DAT_4002101c": {
                    "config_register": 1,
                    "control_register2": 2,
                    "control_register_b": 1,
                    "current_value_4002101c": 1,
                    "flag_2": 1,
                    "flag_register2": 1,
                    "flags_register2": 1,
                    "flags_register_2": 1,
                    "register_2": 2,
                    "register_b": 1,
                    "register_value_2": 2,
                    "setting2": 1,
                    "value2": 1
                },
                "config": {
                    "config": 1
                },
                "configValue": {
                    "config_value": 1
                },
                "param_1": {
                    "config": 2,
                    "config_ptr": 1,
                    "config_value": 1,
                    "configuration": 1,
                    "control_value": 1,
                    "data": 3,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "flag": 1,
                    "flags": 2,
                    "input_param": 1,
                    "memory_address": 3,
                    "param": 2,
                    "register": 2,
                    "register_value": 5,
                    "setting_value": 1
                },
                "param_2": {
                    "new_data": 1
                },
                "x": {
                    "register_value": 1
                },
                "y": {
                    "register_value": 1
                },
                "z": {
                    "register_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08007110",
                "FUN_08007710"
            ],
            "code": "\n\n\nvoid update_control_registers_080074e0(int *register_value)\n\n{\n  if (*register_value == 0register_value40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0register_valuefffff7ff;\n  }\n  if (*register_value == 0register_value40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0register_valuefffffffe;\n  }\n  if (*register_value == 0register_value40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0register_valuefffffffd;\n  }\n  if (*register_value == 0register_value40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0register_valuefffffffb;\n  }\n  return;\n}\n\n",
            "current_name": "update_control_registers_080074e0",
            "entrypoint": "0x080074e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080074e0": "update_control_registers_080074e0",
                "param_1": "register_value",
                "x": "register_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007544": {
            "additional_data": {
                "0x19": {
                    "timer_ir_qn_4_code": 1,
                    "timer_irqn_4": 1
                },
                "0x1c": {
                    "timer_ir_qn_2_code": 1,
                    "timer_irqn_2": 1
                },
                "0x1d": {
                    "timer_ir_qn_1_code": 1,
                    "timer_irqn_1": 1
                },
                "0x1e": {
                    "timer_ir_qn_3_code": 1,
                    "timer_irqn_3": 1
                },
                "0x40000000": {
                    "some_value_2": 1,
                    "timer_ir_qn_2": 1
                },
                "0x40000400": {
                    "some_value_1": 1,
                    "timer_ir_qn_1": 1
                },
                "0x40000401": {
                    "timer_ir_qn_condition": 1
                },
                "0x40000800": {
                    "some_value_3": 1,
                    "timer_ir_qn_3": 1
                },
                "0x40012c00": {
                    "some_value_4": 1,
                    "timer_ir_qn_4": 1
                },
                "0xffffffff": {
                    "invalid_timer_ir_qn": 1,
                    "invalid_timer_value": 1
                },
                "FUN_08007544": {
                    "check_timer_ir_qn": 1,
                    "check_timer_irq": 3,
                    "decode_timer_irq": 2,
                    "determine_timer_irq": 1,
                    "find_timer_ir_qn": 2,
                    "get_timer_ir_qn": 8,
                    "get_timer_irq": 1,
                    "get_timer_irq_number": 1,
                    "get_timer_irq_value": 1,
                    "get_timer_irqn": 1,
                    "get_timer_priority": 1,
                    "handle_timer_interrupt": 1,
                    "identify_timer_ir_qn": 1,
                    "map_param_to_return_value": 1,
                    "map_timer_ir_qn_to_code": 1,
                    "map_timer_irq": 1,
                    "process_timer_irq": 3,
                    "timer_irq_handler": 1
                },
                "decode_and_process_input_data_080098d8": {
                    "decode_and_process_input_data": 1,
                    "handle_error": 1,
                    "handle_timer_error": 1,
                    "handle_unknown_irq": 1,
                    "handle_unknown_timer_ir_qn": 4,
                    "handle_unknown_timer_irq": 1,
                    "log_error": 1,
                    "log_error_message": 1,
                    "log_unknown_timer_ir_qn": 1,
                    "process_error_message": 2,
                    "process_unknown_timer_ir_qn": 1
                },
                "param_1": {
                    "input": 1,
                    "input_value": 1,
                    "irq_number": 5,
                    "irq_value": 2,
                    "timer_code": 1,
                    "timer_ir_qn": 4,
                    "timer_irq": 1,
                    "timer_irq_number": 3,
                    "timer_irq_value": 1,
                    "timer_irqn": 1,
                    "timer_number": 1,
                    "timer_value": 10
                }
            },
            "called": [
                "FUN_080098d8"
            ],
            "calling": [
                "FUN_080076e0",
                "FUN_08007648"
            ],
            "code": "\nundefined4 get_timer_ir_qn_08007544(uint timer_value)\n\n{\n  if (timer_value == 0xffffffff) {\n    return 0;\n  }\n  if (timer_value == 0x40000400) {\n    return 0x1d;\n  }\n  if (timer_value < 0x40000401) {\n    if (timer_value == 0x40000000) {\n      return 0x1c;\n    }\n  }\n  else {\n    if (timer_value == 0x40000800) {\n      return 0x1e;\n    }\n    if (timer_value == 0x40012c00) {\n      return 0x19;\n    }\n  }\n  handle_unknown_timer_ir_qn(\"TIM: Unknown timer IRQn\");\n  return 0;\n}\n\n",
            "current_name": "get_timer_ir_qn_08007544",
            "entrypoint": "0x08007544",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007544": "get_timer_ir_qn_08007544",
                "decode_and_process_input_data_080098d8": "handle_unknown_timer_ir_qn",
                "param_1": "timer_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007594": {
            "additional_data": {
                "FUN_08007594": {
                    "check_timer": 1,
                    "check_timer_instance": 25,
                    "determine_timer_instance": 1,
                    "find_timer_instance": 1,
                    "get_timer_instance": 2,
                    "identify_timer_instance": 1
                },
                "decode_and_process_input_data_080098d8": {
                    "handle_error": 4,
                    "handle_error_message": 2,
                    "handle_unknown_instance": 1,
                    "handle_unknown_timer": 1,
                    "handle_unknown_timer_instance": 12,
                    "log_error": 1,
                    "print_error_message": 1,
                    "process_error_message": 4,
                    "process_unknown_timer_error": 2,
                    "process_unknown_timer_instance": 2
                },
                "param_1": {
                    "instance": 1,
                    "timer_instance": 29,
                    "timer_value": 1
                },
                "param_2": {
                    "new_parameter_name": 1
                }
            },
            "called": [
                "FUN_080098d8"
            ],
            "calling": [
                "FUN_080075dc"
            ],
            "code": "\nundefined4 check_timer_instance_08007594(uint timer_instance)\n\n{\n  if (timer_instance == 0xffffffff) {\n    return 0;\n  }\n  if (timer_instance == 0x40000400) {\n    return 1;\n  }\n  if (timer_instance < 0x40000401) {\n    if (timer_instance == 0x40000000) {\n      return 1;\n    }\n  }\n  else {\n    if (timer_instance == 0x40000800) {\n      return 1;\n    }\n    if (timer_instance == 0x40012c00) {\n      return 2;\n    }\n  }\n  handle_unknown_timer_instance(\"TIM: Unknown timer instance\");\n  return 0;\n}\n\n",
            "current_name": "check_timer_instance_08007594",
            "entrypoint": "0x08007594",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007594": "check_timer_instance_08007594",
                "decode_and_process_input_data_080098d8": "handle_unknown_timer_instance",
                "param_1": "timer_instance"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080075dc": {
            "additional_data": {
                "FUN_080075dc": {
                    "calculate_shifted_data": 1,
                    "calculate_shifted_data_value": 7,
                    "calculate_shifted_timer_value": 1,
                    "calculate_shifted_value": 14,
                    "calculate_shifted_value_for_clock": 1,
                    "calculate_timer_shift": 1,
                    "clock_source_to_shifted_value": 1,
                    "improve_and_get_shifted_data": 1,
                    "process_clock_source": 2,
                    "process_timer": 1,
                    "process_timer_data": 1
                },
                "check_timer_instance_08007594": {
                    "check_timer_instance": 3
                },
                "decode_and_process_input_data_080098d8": {
                    "display_error_message": 1,
                    "handle_unknown_clock_source": 1,
                    "process_error_message": 1
                },
                "get_data_value_shifted_08005a28": {
                    "get_shifted_data_value": 2,
                    "get_shifted_data_value_1": 1
                },
                "get_shifted_data_value_08005a48": {
                    "get_shifted_data_value": 2,
                    "get_shifted_data_value_2": 1
                },
                "iVar2": {
                    "data_value": 2,
                    "result": 17,
                    "result_value": 1,
                    "return_value": 4,
                    "shifted_value": 1,
                    "shifted_value2": 1
                },
                "initialize_parameters_08005a68": {
                    "initialize_local_parameters": 1,
                    "initialize_parameters": 2
                },
                "local_10": {
                    "clock_source_value": 1,
                    "condition1": 1,
                    "data_value": 3,
                    "initialized_var4": 1,
                    "local_data1": 1,
                    "local_value1": 2,
                    "local_var1": 4,
                    "local_variable1": 1,
                    "local_variable3": 1,
                    "local_variable_4": 1,
                    "parameter_3": 1,
                    "shifted_param_1": 1,
                    "shifted_value": 3,
                    "shifted_value1": 1,
                    "timer_instance": 2,
                    "timer_param_5": 1,
                    "timer_state": 1,
                    "timer_value": 2,
                    "value3": 1,
                    "value_5": 1
                },
                "local_14": {
                    "clock_source": 1,
                    "counter3": 1,
                    "initialized_param3": 1,
                    "initialized_param_3": 1,
                    "initialized_parameter4": 1,
                    "initialized_value3": 3,
                    "initialized_var3": 1,
                    "local_variable_3": 1,
                    "param4": 1,
                    "parameter2": 1,
                    "parameter4": 12,
                    "parameter_2": 1,
                    "parameter_3": 1,
                    "parameter_4": 1,
                    "timer_param_4": 1,
                    "value_4": 1
                },
                "local_18": {
                    "counter2": 1,
                    "data_value": 1,
                    "initialized_param2": 1,
                    "initialized_param_2": 1,
                    "initialized_parameter3": 1,
                    "initialized_value2": 3,
                    "initialized_var2": 1,
                    "local_variable_2": 1,
                    "param3": 1,
                    "parameter1": 1,
                    "parameter3": 12,
                    "parameter_1": 1,
                    "parameter_2": 1,
                    "parameter_3": 1,
                    "timer_param_3": 1,
                    "value_3": 1
                },
                "local_1c": {
                    "counter1": 1,
                    "data_value": 1,
                    "initialized_param": 1,
                    "initialized_param_1": 1,
                    "initialized_parameter2": 1,
                    "initialized_value1": 3,
                    "initialized_var1": 1,
                    "local_variable_1": 1,
                    "param2": 1,
                    "parameter1": 1,
                    "parameter2": 12,
                    "parameter_1": 1,
                    "parameter_2": 1,
                    "shifted_data": 1,
                    "timer_instance": 2,
                    "timer_param_2": 1,
                    "value_2": 1
                },
                "local_20": {
                    "initialized_param_4": 1,
                    "initialized_parameter1": 1,
                    "local_var3": 1,
                    "param1": 1,
                    "param1_copy": 1,
                    "param_2": 1,
                    "parameter1": 17,
                    "parameter2": 1,
                    "parameter_1": 1,
                    "parameter_4": 1,
                    "parameters": 1,
                    "shifted_data_value": 1,
                    "some_parameter": 1,
                    "timer_param_1": 1,
                    "value_1": 1
                },
                "local_c": {
                    "clock_source": 2,
                    "clock_source_value": 1,
                    "condition2": 1,
                    "counter": 1,
                    "data_value": 1,
                    "initialized_var5": 1,
                    "local_data2": 1,
                    "local_value2": 2,
                    "local_var2": 4,
                    "local_variable2": 1,
                    "local_variable4": 1,
                    "local_variable_5": 1,
                    "parameter_4": 1,
                    "shifted_data_value": 4,
                    "shifted_param_2": 1,
                    "shifted_value2": 1,
                    "timer_flag": 1,
                    "timer_instance": 2,
                    "timer_param_6": 1,
                    "value4": 1,
                    "value_6": 1
                },
                "param_1": {
                    "clock_source": 6,
                    "input": 1,
                    "input_param": 2,
                    "input_value": 15,
                    "timer_instance": 3,
                    "timer_value": 2,
                    "value": 1,
                    "value_to_check": 1
                },
                "uVar1": {
                    "data_value1": 3,
                    "local_c": 2,
                    "local_u_var1": 2,
                    "local_var1": 2,
                    "local_variable1": 1,
                    "prev_clock_source_value": 1,
                    "shift_value": 1,
                    "shifted_data": 1,
                    "shifted_data_value": 1,
                    "shifted_value": 2,
                    "shifted_value1": 2,
                    "temp1": 1,
                    "temp_value1": 1,
                    "temp_var1": 1,
                    "temp_variable_1": 1,
                    "temporary_var1": 1,
                    "value1": 1,
                    "var1": 1
                },
                "uVar3": {
                    "clock_source": 4,
                    "current_clock_source_value": 1,
                    "data_value2": 3,
                    "local_u_var3": 2,
                    "local_var2": 2,
                    "local_variable2": 1,
                    "shifted_value": 2,
                    "shifted_value2": 1,
                    "shifted_value3": 1,
                    "temp2": 1,
                    "temp_value2": 1,
                    "temp_var2": 1,
                    "temp_variable_2": 1,
                    "temporary_var2": 1,
                    "timer_instance": 1,
                    "value2": 1,
                    "var2": 1
                }
            },
            "called": [
                "FUN_08005a48",
                "FUN_08005a28",
                "FUN_08005a68",
                "FUN_080098d8",
                "FUN_08007594"
            ],
            "calling": [
                "FUN_08007118",
                "FUN_08007648"
            ],
            "code": "\nint calculate_shifted_data_value_080075dc(undefined4 input_value)\n\n{\n  uint data_value1;\n  int result;\n  uint clock_source;\n  undefined4 parameter1;\n  undefined4 parameter2;\n  undefined4 parameter3;\n  undefined4 parameter4;\n  uint local_var1;\n  uint shifted_data_value;\n  \n  parameter2 = 0;\n  parameter3 = 0;\n  parameter4 = 0;\n  local_var1 = 0;\n  shifted_data_value = 0;\n  parameter1 = 0;\n  initialize_parameters(&parameter2,&parameter1);\n  result = check_timer_instance(input_value);\n  data_value1 = shifted_data_value;\n  clock_source = local_var1;\n  if (result == 1) {\n    result = get_shifted_data_value();\n  }\n  else if (result == 2) {\n    result = get_shifted_data_value();\n    clock_source = data_value1;\n  }\n  else {\n    display_error_message(\"TIM: Unknown clock source\");\n    result = 0;\n    clock_source = 0;\n  }\n  if (clock_source != 0x500) {\n    if (clock_source < 0x501) {\n      if (clock_source != 0x400) {\n        return result;\n      }\n    }\n    else if ((clock_source != 0x600) && (clock_source != 0x700)) {\n      return result;\n    }\n  }\n  return result << 1;\n}\n\n",
            "current_name": "calculate_shifted_data_value_080075dc",
            "entrypoint": "0x080075dc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080075dc": "calculate_shifted_data_value_080075dc",
                "check_timer_instance_08007594": "check_timer_instance",
                "decode_and_process_input_data_080098d8": "display_error_message",
                "get_data_value_shifted_08005a28": "get_shifted_data_value",
                "get_shifted_data_value_08005a48": "get_shifted_data_value",
                "iVar2": "result",
                "initialize_parameters_08005a68": "initialize_parameters",
                "local_10": "local_var1",
                "local_14": "parameter4",
                "local_18": "parameter3",
                "local_1c": "parameter2",
                "local_20": "parameter1",
                "local_c": "shifted_data_value",
                "param_1": "input_value",
                "uVar1": "data_value1",
                "uVar3": "clock_source"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007648": {
            "additional_data": {
                "FUN_08007648": {
                    "initialize_data": 17,
                    "initialize_function": 3,
                    "initialize_memory": 1,
                    "initialize_param1": 1,
                    "initialize_parameters": 7,
                    "initialize_params": 2
                },
                "cVar1": {
                    "char_var": 1,
                    "character": 1,
                    "timer": 2,
                    "timer_char": 1,
                    "timer_id": 1,
                    "timer_ir_qn": 2,
                    "timer_irq_value": 1,
                    "timer_irqn": 1,
                    "timer_queue_index": 1,
                    "timer_status": 3,
                    "timer_value": 14,
                    "timer_value2": 1,
                    "timer_value_char": 1
                },
                "calculate_shifted_data_value_080075dc": {
                    "calculate_shifted_data_value": 1
                },
                "get_timer_ir_qn_08007544": {
                    "get_timer_value": 1
                },
                "iVar3": {
                    "return_value": 1,
                    "status": 20,
                    "status_value": 1,
                    "update_result": 1,
                    "update_status": 8
                },
                "local_1c": {
                    "local7": 1,
                    "local_data7": 1,
                    "local_var7": 13,
                    "local_var_g": 1,
                    "local_variable7": 4,
                    "temp7": 1,
                    "value7": 3,
                    "var7": 5
                },
                "local_20": {
                    "local6": 1,
                    "local_data6": 1,
                    "local_var6": 13,
                    "local_var_f": 1,
                    "local_variable6": 4,
                    "temp6": 1,
                    "value6": 3,
                    "var6": 5
                },
                "local_24": {
                    "local5": 1,
                    "local_data5": 1,
                    "local_var5": 13,
                    "local_var_e": 1,
                    "local_variable5": 4,
                    "temp5": 1,
                    "value5": 3,
                    "var5": 5
                },
                "local_28": {
                    "local4": 1,
                    "local_data4": 1,
                    "local_var4": 13,
                    "local_var_d": 1,
                    "local_variable4": 4,
                    "temp4": 1,
                    "value4": 3,
                    "var4": 5
                },
                "local_2c": {
                    "local3": 1,
                    "local_data3": 1,
                    "local_var3": 13,
                    "local_var_c": 1,
                    "local_variable3": 4,
                    "temp3": 1,
                    "value3": 3,
                    "var3": 5
                },
                "local_30": {
                    "local2": 1,
                    "local_data2": 1,
                    "local_var2": 13,
                    "local_var_b": 1,
                    "local_variable2": 4,
                    "temp2": 1,
                    "value2": 3,
                    "var2": 5
                },
                "local_34": {
                    "local1": 1,
                    "local_data1": 1,
                    "local_var1": 13,
                    "local_var_a": 1,
                    "local_variable1": 4,
                    "temp1": 1,
                    "value1": 3,
                    "var1": 5
                },
                "param_1": {
                    "config_parameters": 1,
                    "data": 7,
                    "data_buffer": 1,
                    "data_pointer": 5,
                    "data_ptr": 2,
                    "memory_array": 1,
                    "out_data": 1,
                    "output_array": 5,
                    "output_buffer": 1,
                    "output_ptr": 1,
                    "param_array": 1,
                    "parameters": 2,
                    "params": 1,
                    "ptr": 1,
                    "result_array": 1
                },
                "param_2": {
                    "data_value": 5,
                    "input_data": 1,
                    "input_value": 6,
                    "input_value1": 1,
                    "param2": 5,
                    "param_2": 1,
                    "shifted_value": 1,
                    "value": 3,
                    "value1": 7,
                    "value_a": 1
                },
                "param_3": {
                    "config_data": 1,
                    "input_value2": 1,
                    "param3": 5,
                    "param_3": 1,
                    "timer": 3,
                    "timer_index": 1,
                    "timer_irq": 2,
                    "timer_offset": 1,
                    "timer_status": 1,
                    "timer_value": 7,
                    "value2": 7,
                    "value_b": 1
                },
                "param_4": {
                    "additional_data": 1,
                    "another_input_value": 1,
                    "flag_value": 1,
                    "input_value2": 1,
                    "input_value3": 1,
                    "ir_qn": 1,
                    "memory_location": 6,
                    "param": 2,
                    "param4": 5,
                    "param_4": 2,
                    "param_value": 1,
                    "parameter_value": 1,
                    "value3": 7,
                    "value_c": 1
                },
                "puVar4": {
                    "array_pointer": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "next_array_element": 1,
                    "next_data": 3,
                    "next_data_buffer": 1,
                    "next_data_pointer": 4,
                    "next_data_ptr": 3,
                    "next_memory_array": 1,
                    "next_output_buffer": 1,
                    "next_param": 2,
                    "next_parameter": 1,
                    "next_pointer": 2,
                    "output_array_iterator": 1,
                    "param1_pointer": 1,
                    "param_ptr": 1,
                    "parameter_pointer": 1,
                    "params_ptr": 1,
                    "pointer": 1,
                    "ptr_plus_one": 1,
                    "temp_param_array": 1
                },
                "set_bit_in_array_08003f94": {
                    "set_bit_in_array": 1
                },
                "set_bit_in_value_and_update_08006280": {
                    "set_bit_in_value_and_update": 1
                },
                "uVar2": {
                    "calculated_value": 1,
                    "shifted_data": 1,
                    "shifted_data_value": 25,
                    "shifted_value": 4
                },
                "update_and_return_status_08006128": {
                    "update_and_return_status": 1
                },
                "update_memory_location_08003f30": {
                    "update_memory_location": 1
                },
                "update_memory_values_08006060": {
                    "update_memory_values": 1
                }
            },
            "called": [
                "FUN_08006280",
                "FUN_08003f94",
                "FUN_08007544",
                "FUN_080075dc",
                "FUN_08006128",
                "FUN_08006060",
                "FUN_08003f30"
            ],
            "calling": [
                "FUN_0800242c"
            ],
            "code": "\nvoid initialize_data_08007648(undefined4 *data,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  char timer_value;\n  uint shifted_data_value;\n  int status;\n  undefined4 *next_data_pointer;\n  undefined4 local_var1;\n  undefined4 local_var2;\n  undefined4 local_var3;\n  undefined4 local_var4;\n  undefined4 local_var5;\n  undefined4 local_var6;\n  undefined4 local_var7;\n  \n  local_var1 = 0;\n  local_var2 = 0;\n  local_var3 = 0;\n  local_var4 = 0;\n  local_var5 = 0;\n  local_var6 = 0;\n  local_var7 = 0;\n  next_data_pointer = data + 1;\n  *data = 0x40000000;\n  data[1] = 0x40000000;\n  data[4] = value1;\n  shifted_data_value = calculate_shifted_data_value();\n  data[2] = shifted_data_value / 1000000 - 1;\n  data[5] = 0;\n  data[3] = 0;\n  data[6] = 0;\n  data[0x13] = value3;\n  local_var1 = 0;\n  local_var3 = 0;\n  local_var5 = 0;\n  local_var4 = 0;\n  local_var6 = 0;\n  local_var7 = 0;\n  local_var2 = value2;\n  timer_value = get_timer_value(*data);\n  update_memory_location((int)timer_value,0xe,0);\n  timer_value = get_timer_value(*data);\n  set_bit_in_array((int)timer_value);\n  status = update_memory_values(next_data_pointer);\n  if ((status == 0) && (status = update_and_return_status(next_data_pointer,&local_var1,0), status == 0)) {\n    set_bit_in_value_and_update(next_data_pointer,0);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_08007648",
            "entrypoint": "0x08007648",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007648": "initialize_data_08007648",
                "cVar1": "timer_value",
                "calculate_shifted_data_value_080075dc": "calculate_shifted_data_value",
                "get_timer_ir_qn_08007544": "get_timer_value",
                "iVar3": "status",
                "local_1c": "local_var7",
                "local_20": "local_var6",
                "local_24": "local_var5",
                "local_28": "local_var4",
                "local_2c": "local_var3",
                "local_30": "local_var2",
                "local_34": "local_var1",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "puVar4": "next_data_pointer",
                "set_bit_in_array_08003f94": "set_bit_in_array",
                "set_bit_in_value_and_update_08006280": "set_bit_in_value_and_update",
                "uVar2": "shifted_data_value",
                "update_and_return_status_08006128": "update_and_return_status",
                "update_memory_location_08003f30": "update_memory_location",
                "update_memory_values_08006060": "update_memory_values"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080076e0": {
            "additional_data": {
                "FUN_080076e0": {
                    "initialize_and_clear_registers": 1,
                    "initialize_and_configure": 1,
                    "initialize_and_set_control_registers": 3,
                    "initialize_and_set_registers": 1,
                    "initialize_and_sync": 2,
                    "initialize_and_sync_control_registers": 1,
                    "initialize_and_sync_timer": 1,
                    "initialize_and_update": 1,
                    "initialize_and_update_registers": 2,
                    "initialize_and_update_timer": 1,
                    "initialize_control_registers": 7,
                    "initialize_hardware": 6,
                    "initialize_peripheral": 1,
                    "initialize_timer": 2,
                    "update_control_registers": 1
                },
                "cVar1": {
                    "timer": 1,
                    "timer_flag": 1,
                    "timer_ir_value": 1,
                    "timer_irq": 3,
                    "timer_status": 2,
                    "timer_value": 23
                },
                "get_timer_ir_qn_08007544": {
                    "get_timer_value": 1
                },
                "iVar2": {
                    "control_init_result": 2,
                    "control_init_status": 1,
                    "control_reg_init_result": 1,
                    "control_reg_init_status": 1,
                    "control_register_status": 2,
                    "control_register_value": 1,
                    "control_registers_initialized": 1,
                    "control_registers_result": 1,
                    "control_registers_status": 2,
                    "control_registers_value": 1,
                    "init_result": 2,
                    "initialization_status": 1,
                    "initialize_result": 3,
                    "initialize_status": 1,
                    "register_value": 1,
                    "result": 9,
                    "return_value": 1
                },
                "initialize_and_set_control_registers_08005df4": {
                    "init_and_set_control_regs": 1
                },
                "param_1": {
                    "config_params": 3,
                    "control_registers": 3,
                    "function_parameters": 1,
                    "hardware_config": 2,
                    "hardware_params": 1,
                    "hardware_settings": 3,
                    "input_params": 1,
                    "param_array": 1,
                    "parameters": 9,
                    "peripheral_data": 1,
                    "register_array": 2,
                    "registers": 1,
                    "timer_data": 1,
                    "timer_params": 1
                },
                "set_bit_in_memory_and_synchronize_08003fb0": {
                    "set_timer_bit_and_sync": 1
                },
                "update_bit_value_and_clear_flags_080062f4": {
                    "update_bit_and_clear_flags": 1
                }
            },
            "called": [
                "FUN_08007544",
                "FUN_080062f4",
                "FUN_08005df4",
                "FUN_08003fb0"
            ],
            "calling": [
                "FUN_08002578"
            ],
            "code": "\nvoid initialize_and_set_control_registers_080076e0(undefined4 *parameters)\n\n{\n  char timer_value;\n  int result;\n  \n  parameters[0x13] = 0;\n  timer_value = get_timer_value(*parameters);\n  set_timer_bit_and_sync((int)timer_value);\n  result = init_and_set_control_regs(parameters + 1);\n  if (result == 0) {\n    update_bit_and_clear_flags(parameters + 1,0);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_and_set_control_registers_080076e0",
            "entrypoint": "0x080076e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080076e0": "initialize_and_set_control_registers_080076e0",
                "cVar1": "timer_value",
                "get_timer_ir_qn_08007544": "get_timer_value",
                "iVar2": "result",
                "initialize_and_set_control_registers_08005df4": "init_and_set_control_regs",
                "param_1": "parameters",
                "set_bit_in_memory_and_synchronize_08003fb0": "set_timer_bit_and_sync",
                "update_bit_value_and_clear_flags_080062f4": "update_bit_and_clear_flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007708": {
            "additional_data": {
                "FUN_08007708": {
                    "execute_update_flags_and_data": 1,
                    "initialize_and_update_flags_and_data": 1,
                    "initialize_data": 1,
                    "initialize_flags_and_data": 1,
                    "perform_data_update": 1,
                    "update_and_return_flags": 1,
                    "update_flags": 6,
                    "update_flags_and_data": 19
                },
                "update_flags_and_data_08007438": {
                    "calculate_flags": 2,
                    "update_flags_and_data": 27
                }
            },
            "called": [
                "FUN_08007438"
            ],
            "calling": [
                "FUN_08006060"
            ],
            "code": "\nvoid execute_update_flags_and_data_08007708(void)\n\n{\n  update_flags_and_data();\n  return;\n}\n\n",
            "current_name": "execute_update_flags_and_data_08007708",
            "entrypoint": "0x08007708",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007708": "execute_update_flags_and_data_08007708",
                "update_flags_and_data_08007438": "update_flags_and_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007710": {
            "additional_data": {
                "": {
                    "": 1
                },
                "FUN_08007710": {
                    "initialize_control_registers": 16,
                    "perform_initialization": 1,
                    "update_control_registers": 14
                },
                "update_control_registers_080074e0": {
                    "update_control_registers": 22,
                    "update_registers": 5
                }
            },
            "called": [
                "FUN_080074e0"
            ],
            "calling": [
                "FUN_08005df4"
            ],
            "code": "\nvoid initialize_control_registers_08007710(void)\n\n{\n  update_control_registers();\n  return;\n}\n\n",
            "current_name": "initialize_control_registers_08007710",
            "entrypoint": "0x08007710",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007710": "initialize_control_registers_08007710",
                "update_control_registers_080074e0": "update_control_registers"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007718": {
            "additional_data": {
                "FUN_08007718": {
                    "decrement_by_four": 1,
                    "subtract_four": 30
                },
                "param_1": {
                    "input": 4,
                    "input_num": 2,
                    "input_number": 5,
                    "input_value": 6,
                    "new_value": 3,
                    "num": 1,
                    "number": 3,
                    "result": 7
                },
                "param_2": {
                    "new_parameter_name": 1
                },
                "param_n": {
                    "other_new_parameter_name": 1
                },
                "return": {
                    "result": 1
                },
                "var_1": {
                    "new_variable_name": 1
                },
                "var_2": {
                    "another_new_variable_name": 1
                },
                "var_n": {
                    "some_other_new_variable_name": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800771c",
                "FUN_08007736"
            ],
            "code": "\nint subtract_four_08007718(int result)\n\n{\n  result result + -4;\n}\n\n",
            "current_name": "subtract_four_08007718",
            "entrypoint": "0x08007718",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007718": "subtract_four_08007718",
                "param_1": "result",
                "return": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800771c": {
            "additional_data": {
                "0x0": {
                    "null": 2,
                    "null_ptr": 1,
                    "null_value": 1
                },
                "0x1c": {
                    "char_offset": 1
                },
                "0x4c": {
                    "callback_func_offset": 2,
                    "function_offset": 1,
                    "function_pointer_offset": 1,
                    "offset": 1
                },
                "FUN_0800771c": {
                    "execute_action_if_flag_set": 1,
                    "execute_callback": 5,
                    "execute_callback_function": 2,
                    "execute_callback_if_condition_met": 4,
                    "execute_callback_if_enabled": 1,
                    "execute_callback_if_flag_set": 6,
                    "execute_callback_if_true": 1,
                    "execute_code_if_condition_satisfied": 1,
                    "execute_function_if_condition_met": 5,
                    "execute_if_condition_is_met": 1,
                    "execute_if_condition_met": 1,
                    "execute_if_flag_set": 1,
                    "execute_subtract_four": 2
                },
                "code": {
                    "action_function": 1,
                    "callback_function": 1,
                    "callback_signature": 1,
                    "callback_type": 1,
                    "function_pointer": 3
                },
                "iVar1": {
                    "action": 1,
                    "callback": 1,
                    "callback_func": 2,
                    "callback_function": 5,
                    "callback_function_ptr": 1,
                    "callback_function_result": 1,
                    "callback_result": 3,
                    "function_pointer": 1,
                    "function_ptr": 1,
                    "function_result": 1,
                    "result": 9,
                    "subtract_result": 1,
                    "subtracted_value": 1,
                    "subtraction_result": 3
                },
                "param_1": {
                    "callback_arg": 1,
                    "callback_argument": 2,
                    "callback_context": 1,
                    "callback_data": 7,
                    "callback_param": 4,
                    "callback_parameter": 1,
                    "flag": 3,
                    "input": 1,
                    "input_param": 2,
                    "input_parameter": 5,
                    "input_value": 4
                },
                "subtract_four_08007718": {
                    "get_action_address": 1,
                    "get_callback_address": 1,
                    "get_callback_func": 1,
                    "get_callback_func_pointer": 1,
                    "get_callback_function": 2,
                    "get_callback_function_address": 3,
                    "get_callback_function_ptr": 2,
                    "get_callback_index": 1,
                    "get_function": 1,
                    "get_function_address": 2,
                    "get_function_pointer": 4,
                    "get_function_pointer_offset": 1,
                    "get_function_ptr": 1,
                    "get_subtracted_value": 1,
                    "subtract_four": 1
                },
                "var_1": {
                    "is_function_set": 1
                }
            },
            "called": [
                "FUN_08007718"
            ],
            "calling": [
                "FUN_08005e6e"
            ],
            "code": "\nvoid execute_callback_if_flag_set_0800771c(int callback_data)\n\n{\n  int result;\n  \n  result = get_function_pointer();\n  if ((*(function_pointer **)(result + 0x4c) != (function_pointer *)0x0) && (*(char *)(callback_data + 0x1c) == '\\x01')) {\n    (**(function_pointer **)(result + 0x4c))(result,0);\n  }\n  return;\n}\n\n",
            "current_name": "execute_callback_if_flag_set_0800771c",
            "entrypoint": "0x0800771c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800771c": "execute_callback_if_flag_set_0800771c",
                "code": "function_pointer",
                "iVar1": "result",
                "param_1": "callback_data",
                "subtract_four_08007718": "get_function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007736": {
            "additional_data": {
                "0x48": {
                    "callback_offset": 1,
                    "function_offset": 3,
                    "function_pointer_offset": 1
                },
                "FUN_08007736": {
                    "execute_08007736": 1,
                    "execute_callback": 8,
                    "execute_callback_function": 1,
                    "execute_code_if_available": 1,
                    "execute_function": 3,
                    "execute_function_at_address": 1,
                    "execute_function_from_pointer": 1,
                    "execute_if_callback_exists": 1,
                    "execute_if_valid": 1,
                    "execute_if_valid_code_pointer": 1,
                    "execute_subtract_four": 2,
                    "execute_subtract_four_function": 2,
                    "execute_subtraction": 1,
                    "execute_subtraction_and_call": 1,
                    "execute_subtraction_and_call_function": 2,
                    "execute_subtraction_function": 1,
                    "execute_subtractions": 1,
                    "invoke_callback_function": 1,
                    "run_subtract_four_function": 1
                },
                "code": {
                    "function_pointer": 4
                },
                "iVar1": {
                    "function_pointer_offset": 1,
                    "result": 30
                },
                "subtract_four_08007718": {
                    "get_callback_address": 1,
                    "get_callback_data": 1,
                    "get_callback_function": 3,
                    "get_callback_pointer": 4,
                    "get_function_address": 1,
                    "get_function_pointer": 5,
                    "get_function_pointer_08007718": 1,
                    "get_function_pointer_offset": 1,
                    "get_function_ptr": 1,
                    "get_subtract_four_function": 1,
                    "get_subtract_four_result": 1,
                    "get_subtraction_function": 1,
                    "get_valid_code_pointer": 1,
                    "perform_four_subtractions": 1,
                    "perform_subtraction": 3,
                    "subtract_four": 4,
                    "subtract_four_function": 1
                }
            },
            "called": [
                "FUN_08007718"
            ],
            "calling": [
                "FUN_08005e6e"
            ],
            "code": "\nvoid execute_if_callback_exists_08007736(void)\n\n{\n  int result;\n  \n  result = get_function_pointer();\n  if (*(function_pointer **)(result + 0x48) != (function_pointer *)0x0) {\n    (**(function_pointer **)(result + 0x48))();\n  }\n  return;\n}\n\n",
            "current_name": "execute_if_callback_exists_08007736",
            "entrypoint": "0x08007736",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007736": "execute_if_callback_exists_08007736",
                "code": "function_pointer",
                "iVar1": "result",
                "subtract_four_08007718": "get_function_pointer"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007744": {
            "additional_data": {
                "0x24": {
                    "value_offset": 1
                },
                "DAT_": {
                    "dat": 1,
                    "dat_": 1
                },
                "DAT_XXXXX": {
                    "": 1
                },
                "DAT_y": {
                    "y": 1
                },
                "FUN_08007744": {
                    "get_address_from_param": 1,
                    "get_address_from_pointer": 1,
                    "get_data_value": 1,
                    "get_memory_location": 1,
                    "get_memory_value": 1,
                    "get_offset_value": 7,
                    "get_pointer_from_offset": 1,
                    "get_pointer_value": 5,
                    "get_return_value": 2,
                    "get_value_from_address": 2,
                    "get_value_from_offset": 6,
                    "get_value_from_pointer": 2,
                    "get_value_from_ptr_offset": 1
                },
                "PTR_": {
                    "ptr": 1,
                    "ptr_": 1
                },
                "PTR_XXXXX": {
                    "": 1
                },
                "PTR_x": {
                    "x": 1
                },
                "local_var_1": {
                    "new_variable_name_1": 1
                },
                "local_var_2": {
                    "new_variable_name_2": 1
                },
                "local_var_n": {
                    "new_variable_name_n": 1
                },
                "new_variable_name_1": {
                    "base_address": 1
                },
                "param_1": {
                    "address": 5,
                    "input": 4,
                    "input_param": 1,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "input_value": 4,
                    "offset": 9,
                    "offset_address": 1,
                    "param": 1,
                    "pointer": 2,
                    "ptr": 1,
                    "value": 1
                },
                "param_2": {
                    "new_parameter_name": 1
                },
                "param_n": {
                    "new_parameter_name_n": 1
                },
                "var_1": {
                    "offset": 1,
                    "pointer": 1
                },
                "var_2": {
                    "base_address": 1,
                    "value": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nundefined4 get_value_from_ptr_offset_08007744(int offset)\n\n{\n  return *(undefined4 *)(*(int *)(offset + 4) + 0x24);\n}\n\n",
            "current_name": "get_value_from_ptr_offset_08007744",
            "entrypoint": "0x08007744",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007744": "get_value_from_ptr_offset_08007744",
                "param_1": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800774a": {
            "additional_data": {
                "FUN_0800774a": {
                    "set_function_parameter": 1,
                    "set_memory_value": 1,
                    "set_param_at_offset": 1,
                    "set_param_value": 4,
                    "set_parameter": 1,
                    "set_parameter_value": 1,
                    "store_param_in_address": 1,
                    "store_parameter_in_memory": 1,
                    "store_parameter_in_pointer_offset": 1,
                    "store_parameter_value": 1,
                    "store_value_in_memory": 1,
                    "update_data": 1,
                    "update_data_value": 1,
                    "update_integer_value": 1,
                    "update_memory": 1,
                    "update_memory_value": 1,
                    "update_param_value": 1,
                    "update_parameter": 2,
                    "update_parameter_in_structure": 1,
                    "update_parameter_value": 7,
                    "update_pointer": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 1,
                    "container_offset": 1,
                    "data_pointer": 1,
                    "data_structure": 1,
                    "input_address": 1,
                    "input_param": 1,
                    "input_parameter": 3,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "memory_address": 4,
                    "obj_ptr": 1,
                    "object": 1,
                    "object_address": 4,
                    "object_pointer": 1,
                    "param_address": 1,
                    "parameter_index": 1,
                    "struct_pointer": 2,
                    "structure_index": 1,
                    "target_object": 1,
                    "updated_value": 1,
                    "value_container": 1
                },
                "param_2": {
                    "new_parameter_value": 1,
                    "new_value": 22,
                    "parameter_value": 1,
                    "value": 5,
                    "value_to_store": 2
                },
                "param_3": {
                    "buffer": 1,
                    "new_memory_address": 1,
                    "offset": 1
                },
                "param_4": {
                    "second_value": 1
                },
                "var_1": {
                    "base_address": 1
                },
                "var_2": {
                    "target_address": 1
                },
                "x": {
                    "variable_x": 1
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid update_parameter_value_0800774a(int memory_address,undefined4 new_value)\n\n{\n  *(undefined4 *)(*(int *)(memory_address + 4) + 0variable_x24) = new_value;\n  return;\n}\n\n",
            "current_name": "update_parameter_value_0800774a",
            "entrypoint": "0x0800774a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800774a": "update_parameter_value_0800774a",
                "param_1": "memory_address",
                "param_2": "new_value",
                "x": "variable_x"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007750": {
            "additional_data": {
                "FUN_08007750": {
                    "save_to_memory": 1,
                    "set_param_value": 6,
                    "set_parameter_value": 2,
                    "set_value_at_offset": 2,
                    "set_value_in_array": 1,
                    "store_value_at_index": 1,
                    "store_value_at_offset": 2,
                    "store_value_in_array": 1,
                    "store_value_in_memory": 1,
                    "update_array_element": 1,
                    "update_data": 1,
                    "update_data_value": 1,
                    "update_element_value": 1,
                    "update_parameter_value": 1,
                    "update_value_at_offset": 4,
                    "write_parameter_to_memory": 1,
                    "write_to_memory": 3,
                    "write_value_to_memory": 1
                },
                "new_variable_name_1": {
                    "array_base_ptr": 1
                },
                "param_1": {
                    "arg1": 1,
                    "array": 1,
                    "array_pointer": 3,
                    "array_ptr": 1,
                    "base_address": 11,
                    "data_ptr": 1,
                    "data_structure": 1,
                    "data_structure_pointer": 1,
                    "memory_address": 2,
                    "memory_pointer": 1,
                    "obj_base": 1,
                    "obj_ptr": 1,
                    "object": 1,
                    "object_address": 2,
                    "object_pointer": 1,
                    "struct_pointer": 1,
                    "value_list_address": 1
                },
                "param_2": {
                    "arg2": 1,
                    "element_index": 1,
                    "index": 24,
                    "offset": 3,
                    "offset_index": 1,
                    "param_index": 1
                },
                "param_3": {
                    "new_parameter_value": 1,
                    "new_value": 11,
                    "param_value": 1,
                    "value": 18
                }
            },
            "called": [],
            "calling": [],
            "code": "\nvoid set_param_value_08007750(int base_address,int index,undefined4 value)\n\n{\n  *(undefined4 *)(*(int *)(base_address + 4) + 0x34 + index * 4) = value;\n  return;\n}\n\n",
            "current_name": "set_param_value_08007750",
            "entrypoint": "0x08007750",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007750": "set_param_value_08007750",
                "param_1": "base_address",
                "param_2": "index",
                "param_3": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080077b0": {
            "additional_data": {
                "DAT_080098d8": {
                    "error_function": 1
                },
                "DAT_0800a66c": {
                    "array2": 1,
                    "data2": 1,
                    "data_array2": 1,
                    "data_set2": 1,
                    "peripheral_table2": 1,
                    "pin_values_2": 1
                },
                "DAT_0800a69c": {
                    "array1": 1,
                    "data1": 1,
                    "data_array1": 1,
                    "data_set1": 1,
                    "peripheral_table1": 1,
                    "pin_values_1": 1
                },
                "DAT_20000668": {
                    "data1": 2,
                    "data_address1": 2,
                    "global_data1": 2,
                    "global_variable": 1,
                    "global_variable_1": 1,
                    "memory_location1": 2,
                    "register3": 1,
                    "variable1": 1
                },
                "DAT_2000066c": {
                    "another_global_variable": 1,
                    "data2": 2,
                    "data_address2": 2,
                    "global_data2": 2,
                    "global_variable_2": 1,
                    "memory_location2": 2,
                    "register4": 1,
                    "variable2": 1
                },
                "DAT_40000668": {
                    "global_data_ptr1": 1
                },
                "DAT_4000066c": {
                    "global_data_ptr2": 1
                },
                "DAT_40010004": {
                    "register5": 1
                },
                "DAT_40021010": {
                    "register2": 1
                },
                "DAT_40021018": {
                    "gpio_register3": 1,
                    "register3": 1,
                    "register6": 1
                },
                "DAT_4002101c": {
                    "register1": 1
                },
                "FUN_080077b0": {
                    "configure_i2_c": 2,
                    "configure_i2_c_peripheral": 3,
                    "configure_i2_c_pins": 1,
                    "initialize_i2_c": 9,
                    "initialize_i2_c_configuration": 1,
                    "initialize_i2_c_interface": 1,
                    "initialize_i2_c_peripheral": 8,
                    "initialize_i2_c_pins": 2,
                    "initialize_i2_c_settings": 1,
                    "initialize_i2_cpins": 1,
                    "initialize_i2c_pin_configuration": 1,
                    "initialize_peripheral": 1
                },
                "_DAT_40010004": {
                    "register4": 1,
                    "register_4": 1,
                    "register_value4": 1
                },
                "_DAT_40021010": {
                    "gpio_register2": 1,
                    "reg2": 1,
                    "register2": 7,
                    "register_2": 1,
                    "register_value2": 1
                },
                "_DAT_40021018": {
                    "control_reg": 1,
                    "register": 1,
                    "register3": 2,
                    "register_3": 1,
                    "register_value3": 1
                },
                "_DAT_4002101c": {
                    "gpio_register1": 1,
                    "reg1": 1,
                    "register1": 7,
                    "register_1": 1,
                    "register_value1": 1
                },
                "compare_and_return_smaller_value_080073ae": {
                    "get_smaller_value": 1
                },
                "decode_and_process_input_data_080098d8": {
                    "validate_and_process_data": 1
                },
                "find_value_or_default_08007320": {
                    "find_value_or_default": 1
                },
                "get_value_by_index_08007376": {
                    "get_value_by_index": 1
                },
                "iVar1": {
                    "derived_value1": 1,
                    "min_pin_peripheral_index": 1,
                    "peripheral1": 11,
                    "peripheral_1": 1,
                    "peripheral_pin1": 1,
                    "peripheral_value1": 1,
                    "pin1_peripheral": 5,
                    "pin1_peripheral_value": 1,
                    "pin1_value": 1,
                    "pin_config_value1": 1,
                    "pin_peripheral1": 1,
                    "pin_value1": 4,
                    "value1": 1,
                    "value_a": 1
                },
                "iVar2": {
                    "derived_value2": 1,
                    "max_pin_peripheral_index": 1,
                    "peripheral2": 11,
                    "peripheral_2": 1,
                    "peripheral_pin2": 1,
                    "peripheral_value2": 1,
                    "pin2_peripheral": 5,
                    "pin2_peripheral_value": 1,
                    "pin2_value": 1,
                    "pin_config_value2": 1,
                    "pin_peripheral2": 1,
                    "pin_value2": 4,
                    "value2": 1,
                    "value_b": 1
                },
                "local_2c": {
                    "constant": 4,
                    "constant3": 4,
                    "constant_value": 2,
                    "constant_value1": 1,
                    "count": 1,
                    "flag4": 2,
                    "local2_c": 1,
                    "local_2c": 2,
                    "local_value": 1,
                    "local_var": 1,
                    "local_var2c": 2,
                    "local_var4": 1,
                    "placeholder": 1,
                    "shift_value2": 1,
                    "temp3": 1,
                    "temp_value3": 1,
                    "undefined4_var": 1,
                    "undefined_address": 1,
                    "unknown_value": 1,
                    "value": 1,
                    "value_d": 1
                },
                "local_30": {
                    "bit_mask3": 2,
                    "bit_position3": 1,
                    "bit_shift_amount": 1,
                    "bitmask_3": 1,
                    "flag3": 4,
                    "local30": 1,
                    "local_var3": 1,
                    "local_var30": 2,
                    "mask3": 1,
                    "pin2_shifted_value": 1,
                    "pin_value_index": 1,
                    "shift_value": 5,
                    "shift_value1": 1,
                    "shifted_value": 5,
                    "value": 1,
                    "value3": 2,
                    "value_c": 1
                },
                "local_34": {
                    "bit_mask2": 4,
                    "bit_position2": 1,
                    "bitmask2": 1,
                    "bitmask_2": 1,
                    "combined_value": 1,
                    "flag2": 4,
                    "local34": 1,
                    "local_var2": 1,
                    "mask2": 3,
                    "mask_value": 1,
                    "pin2_flag": 1,
                    "pin2_value": 2,
                    "pin_bitmask2": 1,
                    "pin_config": 2,
                    "pin_mask2": 5,
                    "pin_settings": 1,
                    "value_b": 1
                },
                "local_38": {
                    "bit_mask1": 6,
                    "bit_position1": 1,
                    "bitmask1": 1,
                    "bitmask_1": 1,
                    "flag": 1,
                    "flag1": 4,
                    "local_var1": 1,
                    "mask1": 3,
                    "pin1_bit": 1,
                    "pin1_flag": 1,
                    "pin1_mask": 3,
                    "pin_bit_mask1": 1,
                    "pin_bitmask1": 1,
                    "pin_mask1": 5,
                    "value_a": 1
                },
                "local_5a": {
                    "bitfield1": 1
                },
                "local_5b": {
                    "bitfield2": 1
                },
                "local_5d": {
                    "undefined1": 1
                },
                "param_1": {
                    "config": 2,
                    "configuration": 1,
                    "i2c_config": 6,
                    "i2c_configuration": 1,
                    "i2c_peripheral": 1,
                    "i2c_peripheral_data": 1,
                    "i2c_pin": 1,
                    "i2c_settings": 1,
                    "pin": 1,
                    "pin_config": 7,
                    "pin_configuration": 3,
                    "pin_settings": 1,
                    "pins": 4,
                    "pins_array": 1
                },
                "param_2": {
                    "baud_rate": 1,
                    "param2": 20,
                    "param_pin1": 1,
                    "param_value1": 1,
                    "pin1": 2,
                    "pin1_value": 1,
                    "pin_count": 1,
                    "pin_value1": 1,
                    "value1": 3
                },
                "param_3": {
                    "param3": 20,
                    "param_pin2": 1,
                    "param_value2": 1,
                    "pin2": 2,
                    "pin2_value": 1,
                    "pin_value2": 1,
                    "timeout": 1,
                    "value1": 1,
                    "value2": 3
                },
                "param_4": {
                    "data_mode": 1,
                    "param4": 20,
                    "param_4": 3,
                    "param_value": 1,
                    "param_value3": 1,
                    "pin3_value": 1,
                    "value2": 1,
                    "value3": 3
                },
                "param_5": {
                    "clock_stretching": 1,
                    "param5": 20,
                    "param_5": 3,
                    "param_flag": 1,
                    "param_value4": 1,
                    "pin_mode": 1,
                    "undefined_value": 1,
                    "value4": 3
                },
                "piVar6": {
                    "address_pointer": 1,
                    "data": 2,
                    "data_buffer": 1,
                    "data_pointer": 3,
                    "data_ptr": 3,
                    "input_data": 1,
                    "new_pointer": 1,
                    "next_address": 2,
                    "next_parameter": 1,
                    "next_pointer": 2,
                    "p_data": 1,
                    "param1_plus1": 1,
                    "pi_var6": 1,
                    "pin_config_ptr": 1,
                    "pin_value": 1,
                    "pin_values": 1,
                    "pointer": 2,
                    "pointer1": 1,
                    "pointer_to_i2_c_settings": 1,
                    "ptr": 1,
                    "ptr_temp": 1,
                    "ptr_value1": 1,
                    "value_ptr": 1
                },
                "set_bit_in_array_08003f94": {
                    "set_bit_in_array": 2
                },
                "set_flag_and_return_address_08006bb8": {
                    "set_flag_and_return_address": 1
                },
                "uVar3": {
                    "address": 6,
                    "address1": 3,
                    "flag": 2,
                    "flag1": 2,
                    "flag_address": 8,
                    "flag_and_address1": 1,
                    "flag_value": 4,
                    "pin1_flag_address": 1,
                    "pin1_peripheral_index": 1,
                    "pin_mode": 1,
                    "return_address": 1,
                    "value": 1
                },
                "uVar4": {
                    "flag": 1,
                    "flag1": 1,
                    "new_value1": 1,
                    "reg_value1": 1,
                    "register1": 1,
                    "register_flag1": 1,
                    "register_value1": 1,
                    "temp1": 2,
                    "temp_value": 1,
                    "temp_value1": 2,
                    "u_var4": 2,
                    "value1": 13,
                    "value4": 2,
                    "value_1": 1,
                    "value_c": 1
                },
                "uVar5": {
                    "data_value": 1,
                    "flag2": 1,
                    "new_value2": 1,
                    "reg_value2": 1,
                    "register2": 1,
                    "register_flag2": 1,
                    "register_value2": 1,
                    "temp2": 2,
                    "temp_value2": 3,
                    "u_var5": 2,
                    "value2": 13,
                    "value5": 2,
                    "value_2": 1,
                    "value_d": 1
                },
                "update_data_values_080045c0": {
                    "update_data_values": 2
                },
                "update_flags_and_registers_080040e8": {
                    "update_flags_and_registers": 2
                },
                "update_memory_location_08003f30": {
                    "update_memory_location": 2
                }
            },
            "called": [
                "FUN_08003f94",
                "FUN_080073ae",
                "FUN_080045c0",
                "FUN_08006bb8",
                "FUN_080040e8",
                "FUN_08007376",
                "FUN_08007320",
                "FUN_08003f30",
                "FUN_080098d8"
            ],
            "calling": [
                "FUN_08002968"
            ],
            "code": "\n\n\nvoid initialize_i2_c_peripheral_080077b0(int *pin_config,int param2,int param3,int param4,undefined param5)\n\n{\n  int peripheral1;\n  int peripheral2;\n  undefined4 flag_address;\n  uint value1;\n  uint value2;\n  int *data_ptr;\n  uint bit_mask1;\n  uint pin_mask2;\n  uint shift_value;\n  undefined4 constant3;\n  \n  if (pin_config != (int *)0x0) {\n    data_ptr = pin_config + 1;\n    peripheral1 = find_value_or_default((int)*(char *)(pin_config + 0x16),&DAT_0800a69c);\n    peripheral2 = find_value_or_default((int)*(char *)((int)pin_config + 0x59),&DAT_0800a66c);\n    if ((peripheral1 == 0) || (peripheral2 == 0)) {\n      validate_and_process_data(\"ERROR: at least one I2C pin has no peripheral\\n\");\n    }\n    else {\n      peripheral1 = get_smaller_value(peripheral1,peripheral2);\n      *pin_config = peripheral1;\n      if (peripheral1 == 0) {\n        validate_and_process_data(\"ERROR: I2C pins mismatch\\n\");\n      }\n      else {\n        if (peripheral1 == 0x40005400) {\n          _DAT_4002101c = _DAT_4002101c | 0x200000;\n          _DAT_40021010 = _DAT_40021010 & 0xffdfffff;\n          *(undefined *)((int)pin_config + 0x5a) = 0x1f;\n          *(undefined *)((int)pin_config + 0x5b) = 0x20;\n          DAT_20000668 = data_ptr;\n        }\n        if (*pin_config == 0x40005800) {\n          _DAT_4002101c = _DAT_4002101c | 0x400000;\n          _DAT_40021010 = _DAT_40021010 & 0xffbfffff;\n          *(undefined *)((int)pin_config + 0x5a) = 0x21;\n          *(undefined *)((int)pin_config + 0x5b) = 0x22;\n          DAT_2000066c = data_ptr;\n        }\n        flag_address = set_flag_and_return_address((uint)((int)*(char *)((int)pin_config + 0x59) << 0x18) >> 0x1c);\n        bit_mask1 = 1 << ((int)*(char *)((int)pin_config + 0x59) & 0xfU) & 0xffff;\n        value1 = get_value_by_index((int)*(char *)((int)pin_config + 0x59),&DAT_0800a66c);\n        value2 = get_value_by_index((int)*(char *)((int)pin_config + 0x59),&DAT_0800a66c);\n        pin_mask2 = (value1 >> 3 & 1) << 4 | value2 & 7;\n        constant3 = 3;\n        peripheral1 = get_value_by_index((int)*(char *)((int)pin_config + 0x59),&DAT_0800a66c);\n        shift_value = (uint)(peripheral1 << 0x1a) >> 0x1e;\n        peripheral1 = get_value_by_index((int)*(char *)((int)pin_config + 0x59),&DAT_0800a66c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        value2 = 1;\n        value1 = _DAT_40021018;\n        switch((uint)(peripheral1 << 0x11) >> 0x19) {\n        case 1:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = value2;\n          break;\n        case 2:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = value2;\n          break;\n        case 3:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = value2;\n          break;\n        case 4:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = value2;\n          break;\n        case 5:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = value2;\n          break;\n        case 6:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = value2;\n          break;\n        case 7:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = value2;\n          break;\n        case 8:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = value2;\n          break;\n        case 9:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = value2;\n          break;\n        case 10:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = value2;\n          break;\n        case 0xb:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = value2;\n          break;\n        case 0xc:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = value2;\n          break;\n        case 0xd:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = value2;\n          break;\n        case 0xe:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = value2;\n          break;\n        case 0xf:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = value2;\n          break;\n        case 0x10:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = value2;\n          break;\n        case 0x11:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = value2;\n          break;\n        case 0x12:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = value2;\n          break;\n        case 0x13:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = value2;\n          break;\n        case 0x14:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = value2;\n          break;\n        case 0x15:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = value2;\n          break;\n        case 0x16:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = value2;\n          break;\n        case 0x17:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = value2;\n          break;\n        case 0x1b:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = value2;\n          break;\n        case 0x1c:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = value2;\n          break;\n        case 0x21:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = value2;\n          break;\n        case 0x22:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = value2;\n          break;\n        case 0x23:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = value2;\n          break;\n        case 0x24:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = value2;\n        }\n        update_flags_and_registers(flag_address,&bit_mask1,value1,value2);\n        flag_address = set_flag_and_return_address((uint)((int)*(char *)(pin_config + 0x16) << 0x18) >> 0x1c);\n        bit_mask1 = 1 << ((int)*(char *)(pin_config + 0x16) & 0xfU) & 0xffff;\n        value1 = get_value_by_index((int)*(char *)(pin_config + 0x16),&DAT_0800a69c);\n        value2 = get_value_by_index((int)*(char *)(pin_config + 0x16),&DAT_0800a69c);\n        pin_mask2 = (value1 >> 3 & 1) << 4 | value2 & 7;\n        constant3 = 3;\n        peripheral1 = get_value_by_index((int)*(char *)(pin_config + 0x16),&DAT_0800a69c);\n        shift_value = (uint)(peripheral1 << 0x1a) >> 0x1e;\n        peripheral1 = get_value_by_index((int)*(char *)(pin_config + 0x16),&DAT_0800a69c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        value2 = 1;\n        value1 = _DAT_40021018;\n        switch((uint)(peripheral1 << 0x11) >> 0x19) {\n        case 1:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = value2;\n          break;\n        case 2:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = value2;\n          break;\n        case 3:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = value2;\n          break;\n        case 4:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = value2;\n          break;\n        case 5:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = value2;\n          break;\n        case 6:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = value2;\n          break;\n        case 7:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = value2;\n          break;\n        case 8:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = value2;\n          break;\n        case 9:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = value2;\n          break;\n        case 10:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = value2;\n          break;\n        case 0xb:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = value2;\n          break;\n        case 0xc:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = value2;\n          break;\n        case 0xd:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = value2;\n          break;\n        case 0xe:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = value2;\n          break;\n        case 0xf:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = value2;\n          break;\n        case 0x10:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = value2;\n          break;\n        case 0x11:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = value2;\n          break;\n        case 0x12:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = value2;\n          break;\n        case 0x13:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = value2;\n          break;\n        case 0x14:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = value2;\n          break;\n        case 0x15:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = value2;\n          break;\n        case 0x16:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = value2;\n          break;\n        case 0x17:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = value2;\n          break;\n        case 0x1b:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = value2;\n          break;\n        case 0x1c:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = value2;\n          break;\n        case 0x21:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = value2;\n          break;\n        case 0x22:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = value2;\n          break;\n        case 0x23:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = value2;\n          break;\n        case 0x24:\n          value1 = 0x40010000;\n          value2 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = value2;\n        }\n        update_flags_and_registers(flag_address,&bit_mask1,value1,value2);\n        pin_config[1] = *pin_config;\n        pin_config[2] = param2;\n        pin_config[3] = 0;\n        pin_config[4] = param4;\n        pin_config[7] = 0xff;\n        pin_config[5] = param3;\n        pin_config[6] = 0;\n        pin_config[8] = 0;\n        pin_config[9] = 0;\n        *(undefined *)((int)pin_config + 0x41) = 0;\n        update_memory_location((int)*(char *)((int)pin_config + 0x5a),0,1);\n        set_bit_in_array((int)*(char *)((int)pin_config + 0x5a));\n        update_memory_location((int)*(char *)((int)pin_config + 0x5b),0,1);\n        set_bit_in_array((int)*(char *)((int)pin_config + 0x5b));\n        update_data_values(data_ptr);\n        *(undefined *)((int)pin_config + 0x5d) = param5;\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_i2_c_peripheral_080077b0",
            "entrypoint": "0x080077b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080077b0": "initialize_i2_c_peripheral_080077b0",
                "compare_and_return_smaller_value_080073ae": "get_smaller_value",
                "decode_and_process_input_data_080098d8": "validate_and_process_data",
                "find_value_or_default_08007320": "find_value_or_default",
                "get_value_by_index_08007376": "get_value_by_index",
                "iVar1": "peripheral1",
                "iVar2": "peripheral2",
                "local_2c": "constant3",
                "local_30": "shift_value",
                "local_34": "pin_mask2",
                "local_38": "bit_mask1",
                "param_1": "pin_config",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "piVar6": "data_ptr",
                "set_bit_in_array_08003f94": "set_bit_in_array",
                "set_flag_and_return_address_08006bb8": "set_flag_and_return_address",
                "uVar3": "flag_address",
                "uVar4": "value1",
                "uVar5": "value2",
                "update_data_values_080045c0": "update_data_values",
                "update_flags_and_registers_080040e8": "update_flags_and_registers",
                "update_memory_location_08003f30": "update_memory_location"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007e74": {
            "additional_data": {
                "FUN_08007e74": {
                    "analyze_data": 1,
                    "process_and_calculate_value": 1,
                    "process_and_check_data": 2,
                    "process_and_validate_data": 4,
                    "process_and_verify_data": 1,
                    "process_data": 16,
                    "process_data_and_check_threshold": 1,
                    "process_data_and_get_result": 2,
                    "process_input_data": 1,
                    "process_value": 1
                },
                "get_byte_from_offset_pointer_0800542a": {
                    "get_byte_at_offset": 1,
                    "get_next_byte": 1,
                    "get_offset_byte": 1
                },
                "get_data_value_08003760": {
                    "get_base_value": 1,
                    "get_initial_data_value": 2
                },
                "get_value_from_offset_08005430": {
                    "get_offset_value": 1,
                    "get_value_at_offset": 1,
                    "get_value_from_offset": 1
                },
                "iVar1": {
                    "base_value": 4,
                    "data_value": 10,
                    "data_value1": 1,
                    "initial_data_value": 5,
                    "initial_value": 10,
                    "original_value": 1
                },
                "iVar2": {
                    "byte_value": 2,
                    "data_processing_result": 2,
                    "data_value": 4,
                    "data_value_from_offset": 1,
                    "process_data_result": 1,
                    "process_result": 1,
                    "process_value": 1,
                    "result": 13,
                    "return_value": 3,
                    "value": 2
                },
                "iVar4": {
                    "loop_condition": 2,
                    "loop_variable": 1,
                    "result": 12,
                    "result_code": 1,
                    "result_status": 1,
                    "state": 1,
                    "status": 12,
                    "validation_result": 1
                },
                "iVar5": {
                    "current_offset": 2,
                    "data_end": 1,
                    "data_offset_plus_4": 1,
                    "data_offset_temp": 1,
                    "data_pointer": 1,
                    "incremented_pointer": 1,
                    "index": 1,
                    "offset": 6,
                    "offset_plus_4": 2,
                    "offset_plus_four": 1,
                    "offset_pointer": 5,
                    "offset_ptr": 4,
                    "offset_value": 1,
                    "pointer_offset": 1,
                    "ptr_offset": 1,
                    "temp_offset": 1,
                    "temp_var": 1
                },
                "param_1": {
                    "array_offset": 1,
                    "data": 2,
                    "data_array": 1,
                    "data_index": 1,
                    "data_offset": 7,
                    "data_pointer": 5,
                    "data_ptr": 7,
                    "data_start": 2,
                    "input_data": 2,
                    "input_param": 1,
                    "input_pointer": 1,
                    "input_value": 1
                },
                "param_2": {
                    "arg1": 1,
                    "flag_1": 1,
                    "param1": 2,
                    "param2": 12,
                    "param2_value": 1,
                    "param_2": 9,
                    "param_a": 1,
                    "param_ptr": 2,
                    "param_x": 1,
                    "value_1": 1
                },
                "param_3": {
                    "arg2": 1,
                    "flag_2": 1,
                    "param2": 2,
                    "param3": 12,
                    "param3_value": 1,
                    "param_3": 9,
                    "param_b": 1,
                    "param_size": 1,
                    "param_y": 1,
                    "value_2": 1,
                    "value_ptr": 1
                },
                "param_4": {
                    "arg3": 1,
                    "extra_param": 1,
                    "flag_3": 1,
                    "length_ptr": 1,
                    "param3": 2,
                    "param4": 12,
                    "param4_value": 1,
                    "param_4": 9,
                    "param_c": 1,
                    "param_z": 1,
                    "value_3": 1
                },
                "process_data_08004728": {
                    "process_data": 2,
                    "process_data_at_offset": 1
                },
                "uVar3": {
                    "data_difference": 1,
                    "difference": 27,
                    "difference_value": 1,
                    "value_difference": 2
                },
                "uVar6": {
                    "additional_param": 1,
                    "extra_param_copy": 1,
                    "flag_3_copy": 1,
                    "input_value": 1,
                    "original_param4": 1,
                    "param": 1,
                    "param4": 1,
                    "param4_copy": 4,
                    "param4_value": 1,
                    "param_4_copy": 4,
                    "param_4_temp": 1,
                    "param_c_copy": 1,
                    "temp": 1,
                    "temp_arg": 1,
                    "temp_param": 4,
                    "temp_param4": 1,
                    "temporary": 1,
                    "temporary_value": 1,
                    "u_var6": 1
                }
            },
            "called": [
                "FUN_08005430",
                "FUN_08003760",
                "FUN_08004728",
                "FUN_0800542a"
            ],
            "calling": [
                "FUN_08002a58"
            ],
            "code": "\nint process_and_validate_data_08007e74(int data_ptr,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int initial_value;\n  int result;\n  uint difference;\n  int status;\n  int offset;\n  undefined4 param4_copy;\n  \n  param4_copy = param4;\n  initial_value = get_initial_data_value();\n  difference = 0;\n  status = 2;\n  do {\n    offset = data_ptr + 4;\n    result = process_data(offset,param2,param3,param4,param4_copy);\n    if (result == 0) {\n      status = 0;\n      while ((result = get_byte_at_offset(offset), result != 0x20 && (status == 0))) {\n        result = get_initial_data_value();\n        difference = result - initial_value;\n        if (difference < 0x65) {\n          result = get_value_at_offset(offset);\n          if (result != 0) {\n            status = 2;\n          }\n        }\n        else {\n          status = 1;\n        }\n      }\n    }\n    result = get_value_at_offset(offset);\n  } while ((result == 4) && (difference < 100));\n  return status;\n}\n\n",
            "current_name": "process_and_validate_data_08007e74",
            "entrypoint": "0x08007e74",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007e74": "process_and_validate_data_08007e74",
                "get_byte_from_offset_pointer_0800542a": "get_byte_at_offset",
                "get_data_value_08003760": "get_initial_data_value",
                "get_value_from_offset_08005430": "get_value_at_offset",
                "iVar1": "initial_value",
                "iVar2": "result",
                "iVar4": "status",
                "iVar5": "offset",
                "param_1": "data_ptr",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "process_data_08004728": "process_data",
                "uVar3": "difference",
                "uVar6": "param4_copy"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007ede": {
            "additional_data": {
                "FUN_08007ede": {
                    "copy_and_increment": 4,
                    "copy_buffer": 1,
                    "copy_bytes": 2,
                    "copy_bytes_to_memory": 1,
                    "copy_data": 16,
                    "copy_data_from_source_to_destination": 1,
                    "copy_data_to_buffer": 3,
                    "copy_data_to_destination": 1,
                    "copy_data_to_memory": 1,
                    "copy_to_buffer": 1
                },
                "param_1": {
                    "dest": 5,
                    "dest_address": 4,
                    "dest_buffer": 1,
                    "dest_ptr": 1,
                    "destination": 11,
                    "destination_address": 2,
                    "destination_buffer": 4,
                    "destination_pointer": 1,
                    "dst_address": 1,
                    "target_buffer": 1
                },
                "param_2": {
                    "source": 11,
                    "source_address": 2,
                    "source_buffer": 5,
                    "source_pointer": 1,
                    "src": 5,
                    "src_address": 5,
                    "src_buffer": 1,
                    "src_ptr": 1
                },
                "param_3": {
                    "buffer_size": 1,
                    "byte_count": 1,
                    "data_length": 1,
                    "length": 13,
                    "num_bytes": 8,
                    "num_elements": 1,
                    "size": 5,
                    "size_of_data": 1
                },
                "uVar1": {
                    "byte_index": 2,
                    "i": 12,
                    "index": 16,
                    "iterator": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_0800288c",
                "FUN_080027f0"
            ],
            "code": "\nundefined4 copy_data_to_buffer_08007ede(int destination,int source,uint length)\n\n{\n  uint index;\n  \n  if (0x20 < length) {\n    return 2;\n  }\n  for (index = 0; index < length; index = index + 1 & 0xff) {\n    *(undefined *)(destination + index + 0x68) = *(undefined *)(source + index);\n    *(char *)(destination + 0x88) = *(char *)(destination + 0x88) + '\\x01';\n  }\n  return 0;\n}\n\n",
            "current_name": "copy_data_to_buffer_08007ede",
            "entrypoint": "0x08007ede",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007ede": "copy_data_to_buffer_08007ede",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "length",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007f0e": {
            "additional_data": {
                "FUN_08007f0e": {
                    "process_and_check_data": 5,
                    "process_and_get_result": 1,
                    "process_and_validate_data": 1,
                    "process_data": 19,
                    "process_data_and_get_result": 2,
                    "process_data_check": 1,
                    "process_data_with_conditions": 1,
                    "process_values": 1
                },
                "get_byte_from_offset_pointer_0800542a": {
                    "get_byte": 2,
                    "get_byte_at_pointer_offset": 1,
                    "get_byte_from_offset_pointer": 1
                },
                "get_data_value_08003760": {
                    "get_data_value": 2,
                    "get_initial_data_value": 1
                },
                "get_value_from_offset_08005430": {
                    "get_value": 2,
                    "get_value_at_offset": 1,
                    "get_value_from_offset": 1
                },
                "iVar1": {
                    "data_value": 15,
                    "data_value1": 3,
                    "data_value_1": 1,
                    "initial_data_value": 8,
                    "initial_value": 4
                },
                "iVar2": {
                    "data_value": 1,
                    "process_result": 4,
                    "process_value": 1,
                    "processed_data": 1,
                    "result": 18,
                    "result_value": 1,
                    "result_variable": 1,
                    "value": 3
                },
                "iVar4": {
                    "condition": 2,
                    "flag": 3,
                    "loop_condition": 4,
                    "loop_control_variable": 1,
                    "loop_status": 1,
                    "result": 8,
                    "status": 12
                },
                "iVar5": {
                    "current_offset": 1,
                    "data_index": 1,
                    "data_offset_plus_4": 1,
                    "data_offset_ptr": 1,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "ivar5": 1,
                    "offset": 7,
                    "offset_address": 1,
                    "offset_data": 1,
                    "offset_plus_4": 1,
                    "offset_plus_four": 1,
                    "offset_pointer": 5,
                    "offset_ptr": 3,
                    "temp_offset": 2,
                    "temp_ptr": 1,
                    "temp_var": 1
                },
                "param_1": {
                    "base_address": 1,
                    "data": 4,
                    "data_array": 1,
                    "data_offset": 9,
                    "data_pointer": 3,
                    "data_ptr": 2,
                    "data_start": 2,
                    "input_data": 7,
                    "input_param": 1,
                    "input_ptr": 1
                },
                "param_2": {
                    "arg1": 3,
                    "param2": 19,
                    "param_2": 5,
                    "value1": 2,
                    "value_2": 2
                },
                "param_3": {
                    "arg2": 3,
                    "param3": 19,
                    "param_3": 5,
                    "value2": 2,
                    "value_3": 2
                },
                "param_4": {
                    "additional_param": 1,
                    "arg3": 3,
                    "param4": 18,
                    "param_4": 5,
                    "value3": 2,
                    "value_4": 2
                },
                "process_data_080047f4": {
                    "process_data": 1,
                    "process_data_helper": 1,
                    "process_data_impl": 1,
                    "process_data_iteration": 1
                },
                "uVar3": {
                    "difference": 27,
                    "difference_value": 3,
                    "value_difference": 1
                },
                "uVar6": {
                    "additional_param_copy": 1,
                    "arg3_copy": 1,
                    "argument": 1,
                    "new_param4": 1,
                    "new_value_from_param4": 1,
                    "original_param_4": 1,
                    "param": 1,
                    "param4": 1,
                    "param4_copy": 8,
                    "param4_value": 2,
                    "param_4_copy": 5,
                    "temp": 1,
                    "temp_param": 2,
                    "temp_param4": 2,
                    "temp_var2": 1,
                    "u_var6": 1
                }
            },
            "called": [
                "FUN_08005430",
                "FUN_080047f4",
                "FUN_08003760",
                "FUN_0800542a"
            ],
            "calling": [
                "FUN_08002b68"
            ],
            "code": "\nint process_and_check_data_08007f0e(int data_offset,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int data_value;\n  int result;\n  uint difference;\n  int status;\n  int offset;\n  undefined4 param4_copy;\n  \n  param4_copy = param4;\n  data_value = get_data_value();\n  difference = 0;\n  status = 2;\n  do {\n    offset = data_offset + 4;\n    result = process_data_iteration(offset,param2,param3,param4,param4_copy);\n    if (result == 0) {\n      status = 0;\n      while ((result = get_byte(offset), result != 0x20 && (status == 0))) {\n        result = get_data_value();\n        difference = result - data_value;\n        if (difference < 0x65) {\n          result = get_value(offset);\n          if (result != 0) {\n            status = 2;\n          }\n        }\n        else {\n          status = 1;\n        }\n      }\n    }\n    result = get_value(offset);\n  } while ((result == 4) && (difference < 100));\n  return status;\n}\n\n",
            "current_name": "process_and_check_data_08007f0e",
            "entrypoint": "0x08007f0e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007f0e": "process_and_check_data_08007f0e",
                "get_byte_from_offset_pointer_0800542a": "get_byte",
                "get_data_value_08003760": "get_data_value",
                "get_value_from_offset_08005430": "get_value",
                "iVar1": "data_value",
                "iVar2": "result",
                "iVar4": "status",
                "iVar5": "offset",
                "param_1": "data_offset",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "process_data_080047f4": "process_data_iteration",
                "uVar3": "difference",
                "uVar6": "param4_copy"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007f78": {
            "additional_data": {
                "FUN_08007f78": {
                    "add_negative_four": 1,
                    "decrement_by_four": 1,
                    "increment_param": 1,
                    "substract_four_from_param": 1,
                    "subtract_4_from_param": 1,
                    "subtract_four": 23,
                    "subtract_four_from_input": 1,
                    "subtract_four_from_parameter": 1,
                    "subtract_four_from_value": 1
                },
                "param_1": {
                    "input": 5,
                    "input_number": 7,
                    "input_value": 6,
                    "new_value": 1,
                    "num": 2,
                    "output": 1,
                    "param": 1,
                    "result": 7,
                    "value": 1
                },
                "param_2": {
                    "new_parameter_name_2": 1
                },
                "return": {
                    "result": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08007ff0",
                "FUN_08007fa0",
                "FUN_08008020"
            ],
            "code": "\nint subtract_four_from_input_08007f78(int result)\n\n{\n  result result + -4;\n}\n\n",
            "current_name": "subtract_four_from_input_08007f78",
            "entrypoint": "0x08007f78",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007f78": "subtract_four_from_input_08007f78",
                "param_1": "result",
                "return": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007f7c": {
            "additional_data": {
                "FUN_08007f7c": {
                    "update_data_structure": 31
                },
                "initialize_data_structure_080049e0": {
                    "initialize_data_structure": 9,
                    "initialize_structure": 1
                },
                "param_1": {
                    "address": 1,
                    "base_address": 1,
                    "data_pointer": 1,
                    "data_structure": 12,
                    "data_structure_address": 6,
                    "data_structure_pointer": 3,
                    "data_structure_ptr": 5,
                    "input_pointer": 1,
                    "object_address": 1
                },
                "param_2": {
                    "data_value": 1,
                    "new_data": 4,
                    "new_data_value": 2,
                    "new_value": 21,
                    "value": 3
                },
                "param_n": {
                    "new_param_n": 1
                }
            },
            "called": [
                "FUN_080049e0"
            ],
            "calling": [
                "FUN_08002968"
            ],
            "code": "\nvoid update_data_structure_08007f7c(int data_structure,int new_value)\n\n{\n  if (data_structure != 0) {\n    if (new_value != 0) {\n      *(int *)(data_structure + 0x60) = new_value;\n      initialize_data_structure(data_structure + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_structure_08007f7c",
            "entrypoint": "0x08007f7c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007f7c": "update_data_structure_08007f7c",
                "initialize_data_structure_080049e0": "initialize_data_structure",
                "param_1": "data_structure",
                "param_2": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007f8e": {
            "additional_data": {
                "100": {
                    "offset": 1
                },
                "4": {
                    "size": 1
                },
                "FUN_08007f8e": {
                    "initialize_data": 1,
                    "initialize_data_structure": 3,
                    "update_data": 1,
                    "update_data_structure": 26
                },
                "initialize_data_structure_080049e0": {
                    "init_data_structure": 2,
                    "initialize_data": 1,
                    "initialize_data_structure": 5,
                    "initialize_data_structure_at_offset": 1,
                    "initialize_structure": 2
                },
                "param_1": {
                    "address": 1,
                    "data": 1,
                    "data_address": 2,
                    "data_pointer": 2,
                    "data_ptr": 5,
                    "data_structure": 9,
                    "data_structure_addr": 1,
                    "data_structure_address": 3,
                    "data_structure_ptr": 3,
                    "input_data": 1,
                    "pointer_to_data": 1,
                    "ptr": 1,
                    "source_address": 1
                },
                "param_2": {
                    "data": 1,
                    "data_value": 1,
                    "new_data": 1,
                    "new_data_value": 1,
                    "new_value": 18,
                    "value": 8,
                    "value_to_initialize": 1
                }
            },
            "called": [
                "FUN_080049e0"
            ],
            "calling": [
                "FUN_08002968"
            ],
            "code": "\nvoid update_data_structure_08007f8e(int data_structure,int new_value)\n\n{\n  if (data_structure != 0) {\n    if (new_value != 0) {\n      *(int *)(data_structure + 100) = new_value;\n      initialize_data_structure(data_structure + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "update_data_structure_08007f8e",
            "entrypoint": "0x08007f8e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007f8e": "update_data_structure_08007f8e",
                "initialize_data_structure_080049e0": "initialize_data_structure",
                "param_1": "data_structure",
                "param_2": "new_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007fa0": {
            "additional_data": {
                "0x0": {
                    "null": 1
                },
                "0x20": {
                    "constant1": 1,
                    "constant20": 1
                },
                "8": {
                    "constant2": 1,
                    "constant8": 1
                },
                "FUN_08007fa0": {
                    "check_and_initialize_params": 1,
                    "check_params": 1,
                    "handle_input": 1,
                    "handle_param_validation": 1,
                    "initialize_and_validate_params": 2,
                    "initialize_params": 2,
                    "process_input": 17,
                    "process_input_params": 1,
                    "process_params": 3,
                    "verify_and_initialize_params": 2
                },
                "code": {
                    "function_pointer": 1
                },
                "iVar1": {
                    "input_offset": 1,
                    "result": 29,
                    "return_value": 1
                },
                "param_1": {
                    "base_address": 1,
                    "input": 4,
                    "input1": 2,
                    "input_addr": 1,
                    "input_address": 6,
                    "input_array": 1,
                    "input_buffer": 1,
                    "input_data": 2,
                    "input_memory": 1,
                    "input_param": 3,
                    "input_param1": 1,
                    "input_pointer": 2,
                    "input_ptr": 6
                },
                "param_2": {
                    "condition": 1,
                    "condition1": 1,
                    "flag": 22,
                    "input2": 2,
                    "input_param2": 1,
                    "is_zero": 3,
                    "option_flag": 1
                },
                "param_3": {
                    "check_value": 5,
                    "compare_value": 5,
                    "comparison_param": 1,
                    "comparison_value": 2,
                    "condition": 1,
                    "condition2": 1,
                    "input3": 2,
                    "input_condition": 1,
                    "input_param3": 1,
                    "param_value": 2,
                    "reference_value": 1,
                    "size": 2,
                    "target": 2,
                    "validation_code": 1,
                    "value": 3,
                    "variable": 1
                },
                "param_4": {
                    "callback": 2,
                    "code_pointer": 1,
                    "extra_param": 1,
                    "function_ptr": 1,
                    "input4": 2,
                    "input_param4": 1,
                    "param": 7,
                    "param4": 1,
                    "param_4": 2,
                    "param_four": 1,
                    "param_value": 4,
                    "parameter": 1,
                    "undefined_param": 3,
                    "undefined_value": 1,
                    "unknown_param": 3
                },
                "subtract_four_from_input_08007f78": {
                    "calculate_result": 1,
                    "subtract_four": 19,
                    "subtract_four_from_input": 10
                },
                "validate_input_08004954": {
                    "validate_input": 29,
                    "validate_input_helper": 1
                },
                "verify_and_initialize_params_080048c8": {
                    "init_params": 1,
                    "initialize_params": 6,
                    "validate_parameters": 1,
                    "verify_and_init_params": 4,
                    "verify_and_initialize": 1,
                    "verify_and_initialize_params": 16,
                    "verify_and_initialize_params_helper": 1
                }
            },
            "called": [
                "FUN_08004954",
                "FUN_080048c8",
                "FUN_08007f78"
            ],
            "calling": [
                "FUN_08004ac2"
            ],
            "code": "\nvoid process_input_params_08007fa0(int input_ptr,int flag,int check_value,undefined4 param)\n\n{\n  int result;\n  \n  result = subtract_four();\n  if (check_value == *(int *)(input_ptr + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(result + 0x88) = 0;\n      *(undefined *)(result + 0x5c) = 0;\n      if (*(function_pointer **)(result + 100) != (function_pointer *)0x0) {\n        (**(function_pointer **)(result + 100))();\n      }\n      verify_and_initialize_params(input_ptr,result + 0x68,*(undefined *)(result + 0x88),8);\n      return;\n    }\n    *(undefined *)(result + 0x5c) = 1;\n    validate_input(input_ptr,result + 0x68,0x20,8,param);\n  }\n  return;\n}\n\n",
            "current_name": "process_input_params_08007fa0",
            "entrypoint": "0x08007fa0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007fa0": "process_input_params_08007fa0",
                "code": "function_pointer",
                "iVar1": "result",
                "param_1": "input_ptr",
                "param_2": "flag",
                "param_3": "check_value",
                "param_4": "param",
                "subtract_four_from_input_08007f78": "subtract_four",
                "validate_input_08004954": "validate_input",
                "verify_and_initialize_params_080048c8": "verify_and_initialize_params"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08007ff0": {
            "additional_data": {
                "0x2c": {
                    "other_char_offset": 1
                },
                "0x5c": {
                    "char_value_offset": 1
                },
                "0x60": {
                    "function_ptr_offset": 1
                },
                "0x68": {
                    "additional_offset": 1
                },
                "FUN_08007ff0": {
                    "execute_action": 2,
                    "execute_function": 1,
                    "execute_function_and_initialize_data_structure": 2,
                    "execute_if_condition_met": 1,
                    "execute_input_processing": 1,
                    "execute_main_logic": 1,
                    "initialize_and_execute": 7,
                    "initialize_and_execute_function": 7,
                    "initialize_and_invoke": 1,
                    "initialize_and_process_data": 1,
                    "initialize_data_structure": 4,
                    "initialize_structure_and_call_function": 1,
                    "process_input": 2
                },
                "code": {
                    "function": 1,
                    "function_pointer": 7,
                    "function_type": 1
                },
                "iVar1": {
                    "address": 1,
                    "function_result": 1,
                    "input_result": 1,
                    "result": 24,
                    "result_of_subtracting_four": 1,
                    "subtract_result": 1,
                    "subtracted_value": 1,
                    "value": 1
                },
                "initialize_data_structure_080049e0": {
                    "initialize_data_structure": 27,
                    "initialize_helper_structure": 1
                },
                "param_1": {
                    "data": 3,
                    "input": 1,
                    "input_data": 2,
                    "input_param": 12,
                    "input_parameter": 10,
                    "input_value": 1,
                    "param_1": 1,
                    "parameter": 1
                },
                "subtract_four_from_input_08007f78": {
                    "get_address": 1,
                    "get_pointer_to_function": 1,
                    "get_value_from_input": 1,
                    "sub_four_from_input": 1,
                    "subtract_four": 6,
                    "subtract_four_from_input": 19
                }
            },
            "called": [
                "FUN_080049e0",
                "FUN_08007f78"
            ],
            "calling": [
                "FUN_08004f3c",
                "FUN_08005084",
                "FUN_08004aec"
            ],
            "code": "\nvoid execute_function_and_initialize_data_structure_08007ff0(undefined4 input_param)\n\n{\n  int result;\n  \n  result = subtract_four_from_input();\n  if (((*(function_pointer **)(result + 0x60) != (function_pointer *)0x0) && (*(char *)(result + 0x5c) == '\\x01')) &&\n     (*(char *)(result + 0x2c) != ' ')) {\n    (**(function_pointer **)(result + 0x60))(result + 0x68);\n  }\n  initialize_data_structure(input_param);\n  return;\n}\n\n",
            "current_name": "execute_function_and_initialize_data_structure_08007ff0",
            "entrypoint": "0x08007ff0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08007ff0": "execute_function_and_initialize_data_structure_08007ff0",
                "code": "function_pointer",
                "iVar1": "result",
                "initialize_data_structure_080049e0": "initialize_data_structure",
                "param_1": "input_param",
                "subtract_four_from_input_08007f78": "subtract_four_from_input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008020": {
            "additional_data": {
                "FUN_08008020": {
                    "check_and_initialize_data_structure": 5,
                    "initialize_data_structure": 1,
                    "initialize_data_structure_if_input_is_zero": 1,
                    "initialize_data_structure_if_needed": 7,
                    "initialize_data_structure_if_not_initialized": 2,
                    "initialize_if_char_is_zero": 1,
                    "initialize_if_condition_is_met": 1,
                    "initialize_if_condition_met": 1,
                    "initialize_if_data_not_already_initialized": 1,
                    "initialize_if_data_not_present": 1,
                    "initialize_if_data_not_set": 2,
                    "initialize_if_data_structure_is_empty": 1,
                    "initialize_if_data_structure_not_initialized": 1,
                    "initialize_if_data_structure_uninitialized": 1,
                    "initialize_if_input_equals_zero": 1,
                    "initialize_if_input_is_zero": 2,
                    "initialize_or_skip_data_structure": 1,
                    "initialize_or_skip_initialization": 1
                },
                "iVar1": {
                    "offset": 1,
                    "result": 22,
                    "result_of_subtraction": 3,
                    "subtract_result": 1,
                    "subtracted_value": 4
                },
                "initialize_data_structure_080049e0": {
                    "initialize_data_structure": 15
                },
                "param_1": {
                    "data": 1,
                    "initialization_parameter": 2,
                    "input": 7,
                    "input_data": 4,
                    "input_param": 4,
                    "input_parameter": 8,
                    "input_value": 3,
                    "param": 2
                },
                "subtract_four_from_input_08007f78": {
                    "calculate_adjusted_input_address": 1,
                    "calculate_offset": 1,
                    "get_offset": 1,
                    "subtract_four": 6,
                    "subtract_four_from": 1,
                    "subtract_four_from_input": 3,
                    "subtract_four_from_result": 2
                }
            },
            "called": [
                "FUN_080049e0",
                "FUN_08007f78"
            ],
            "calling": [
                "FUN_08004f3c"
            ],
            "code": "\nvoid initialize_data_structure_if_needed_08008020(undefined4 input_parameter)\n\n{\n  int result;\n  \n  result = subtract_four();\n  if (*(char *)(result + 0x5d) == '\\0') {\n    initialize_data_structure(input_parameter);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_structure_if_needed_08008020",
            "entrypoint": "0x08008020",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008020": "initialize_data_structure_if_needed_08008020",
                "iVar1": "result",
                "initialize_data_structure_080049e0": "initialize_data_structure",
                "param_1": "input_parameter",
                "subtract_four_from_input_08007f78": "subtract_four"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008078": {
            "additional_data": {
                "0x1": {
                    "uart_pin_register_bit": 1
                },
                "0x11": {
                    "uart_pin_register_bit_6": 1
                },
                "0x15": {
                    "uart_pin_register_bit_7": 1
                },
                "0x16": {
                    "uart_pin_register_bit_8": 1
                },
                "0x1b": {
                    "uart_pin_register_bit_9": 1
                },
                "0x2": {
                    "uart_pin_register_bit_2": 1
                },
                "0x21": {
                    "uart_pin_register_bit_10": 1
                },
                "0x23": {
                    "uart_pin_register_bit_11": 1
                },
                "0x24": {
                    "uart_pin_register_bit_12": 1
                },
                "0x3": {
                    "uart_pin_register_bit_3": 1
                },
                "0x4": {
                    "uart_pin_register_bit_4": 1
                },
                "0x40004400": {
                    "uart_pin1_value_2": 1
                },
                "0x40004800": {
                    "uart_pin1_value_3": 1
                },
                "0x40013800": {
                    "uart_pin1_value_1": 1
                },
                "0xc": {
                    "uart_pin_register_bit_5": 1
                },
                "DAT_0800a81c": {
                    "gpio_pin_values": 1,
                    "peripheral_pin_config_data": 1,
                    "uart1_data": 1,
                    "uart2_pin_values": 1,
                    "uart2_pins": 1,
                    "uart_data2": 1,
                    "uart_peripheral2": 1,
                    "uart_peripheral_data2": 1,
                    "uart_pin1_labels": 1,
                    "uart_pin2_data": 2,
                    "uart_pin_2_values": 1,
                    "uart_pin_data2": 1,
                    "uart_pin_values2": 1,
                    "uart_pin_values_2": 1,
                    "uart_pins2": 1,
                    "uart_values2": 1,
                    "uart_values_2": 1,
                    "usart_pin_config": 1
                },
                "DAT_0800a864": {
                    "uart1_pin_values": 1,
                    "uart1_pins": 1,
                    "uart2_data": 1,
                    "uart_data1": 1,
                    "uart_peripheral1": 1,
                    "uart_peripheral_data1": 1,
                    "uart_pin1_data": 2,
                    "uart_pin2_labels": 1,
                    "uart_pin_1_values": 1,
                    "uart_pin_config": 1,
                    "uart_pin_config_data": 1,
                    "uart_pin_data1": 1,
                    "uart_pin_values": 1,
                    "uart_pin_values1": 1,
                    "uart_pin_values_1": 1,
                    "uart_pins1": 1,
                    "uart_values1": 1,
                    "uart_values_1": 1
                },
                "DAT_200006c0": {
                    "data_struct_array": 1,
                    "data_structure": 4,
                    "peripheral_data_structure": 1,
                    "uart_data": 1,
                    "uart_pin_data_structure": 2,
                    "uart_pin_registers": 1,
                    "uart_registers": 1
                },
                "DAT_40010004": {
                    "register5": 1,
                    "uart_register1_3": 1
                },
                "DAT_40021010": {
                    "register3": 1
                },
                "DAT_40021018": {
                    "uart_register1_2": 1
                },
                "DAT_4002101c": {
                    "register4": 1
                },
                "FUN_08008078": {
                    "configure_peripheral": 1,
                    "configure_uart_peripheral": 1,
                    "configure_uart_pins": 7,
                    "initialize_peripheral": 1,
                    "initialize_uart": 1,
                    "initialize_uart_peripheral": 2,
                    "initialize_uart_pins": 18
                },
                "_DAT_40010004": {
                    "device_ctrl_reg": 1,
                    "flag_register": 1,
                    "gpio_function_select": 1,
                    "gpio_port_register": 1,
                    "peripheral_register": 1,
                    "register3_value": 1,
                    "register5": 1,
                    "uart3_reg": 1,
                    "uart_address5": 1,
                    "uart_cr1_register": 1,
                    "uart_flags_register": 1,
                    "uart_gpio_config": 1,
                    "uart_register": 2,
                    "uart_register_value": 1
                },
                "_DAT_4002100c": {
                    "register1": 5,
                    "register1_value": 1,
                    "register_value1": 1,
                    "uart1_peripheral": 1,
                    "uart1_peripheral_register1": 1,
                    "uart1_peripheral_register_1": 1,
                    "uart1_reg1": 1,
                    "uart_1_peripheral": 1,
                    "uart_address1": 1,
                    "uart_control_register_0": 1,
                    "uart_pin1_config_register1": 1,
                    "uart_pin1_register1": 3,
                    "uart_pin_ctrl_reg1": 1,
                    "uart_pin_reg1": 1,
                    "uart_register1": 3,
                    "uart_register1_1": 1,
                    "uart_register_1": 1,
                    "uartcr1": 1
                },
                "_DAT_40021010": {
                    "gpio_interrupt_control_register": 1,
                    "gpio_register1": 1,
                    "peripheral_pin_ctrl_reg1": 1,
                    "register3": 3,
                    "register_value3": 1,
                    "uar_tx_peripheral_reset_1": 1,
                    "uart2_peripheral_register1": 1,
                    "uart2_peripheral_register_1": 1,
                    "uart2_reg1": 1,
                    "uart_3_peripheral": 1,
                    "uart_address3": 1,
                    "uart_pin2_config_register1": 1,
                    "uart_pin2_register1": 2,
                    "uart_pin_reg3": 1,
                    "uart_pin_register2": 1,
                    "uart_register2_1": 1,
                    "uart_register3": 2,
                    "uart_register_3": 1,
                    "usartcr1": 1
                },
                "_DAT_40021018": {
                    "register2": 5,
                    "register2_value": 1,
                    "register_value2": 1,
                    "uart1_peripheral_register2": 1,
                    "uart1_peripheral_register_2": 1,
                    "uart1_reg2": 1,
                    "uart2_peripheral": 1,
                    "uart_2_peripheral": 1,
                    "uart_address2": 1,
                    "uart_control_register_1": 1,
                    "uart_pin1_config_register2": 1,
                    "uart_pin1_register2": 2,
                    "uart_pin_ctrl_reg2": 1,
                    "uart_pin_reg2": 1,
                    "uart_pin_register_control": 1,
                    "uart_register1_2": 1,
                    "uart_register2": 3,
                    "uart_register_2": 1,
                    "uartcr2": 1
                },
                "_DAT_4002101c": {
                    "gpio_interrupt_trigger_register": 1,
                    "gpio_register2": 1,
                    "peripheral_pin_ctrl_reg2": 1,
                    "register4": 3,
                    "register_value4": 1,
                    "uar_tx_peripheral_reset_2": 1,
                    "uart2_peripheral_register2": 1,
                    "uart2_peripheral_register_2": 1,
                    "uart2_reg2": 1,
                    "uart_4_peripheral": 1,
                    "uart_address4": 1,
                    "uart_pin2_config_register2": 1,
                    "uart_pin2_register2": 2,
                    "uart_pin2_register_control": 1,
                    "uart_pin_reg4": 1,
                    "uart_register2_2": 1,
                    "uart_register4": 2,
                    "uart_register_4": 1,
                    "usartcr2": 1
                },
                "byte": {
                    "byte_value": 1
                },
                "byte_1": {
                    "uart_pin_index1": 1
                },
                "byte_10": {
                    "uart_pin_index10": 1
                },
                "byte_11": {
                    "uart_pin_index11": 1
                },
                "byte_12": {
                    "uart_pin_index12": 1
                },
                "byte_13": {
                    "uart_pin_index13": 1
                },
                "byte_14": {
                    "uart_pin_index14": 1
                },
                "byte_15": {
                    "uart_pin_index15": 1
                },
                "byte_16": {
                    "uart_pin_index16": 1
                },
                "byte_17": {
                    "uart_pin_index17": 1
                },
                "byte_18": {
                    "uart_pin_index18": 1
                },
                "byte_19": {
                    "uart_pin_index19": 1
                },
                "byte_2": {
                    "uart_pin_index2": 1
                },
                "byte_20": {
                    "uart_pin_index20": 1
                },
                "byte_21": {
                    "uart_pin_index21": 1
                },
                "byte_22": {
                    "uart_pin_index22": 1
                },
                "byte_23": {
                    "uart_pin_index23": 1
                },
                "byte_24": {
                    "uart_pin_index24": 1
                },
                "byte_25": {
                    "uart_pin_index25": 1
                },
                "byte_26": {
                    "uart_pin_index26": 1
                },
                "byte_3": {
                    "uart_pin_index3": 1
                },
                "byte_4": {
                    "uart_pin_index4": 1
                },
                "byte_5": {
                    "uart_pin_index5": 1
                },
                "byte_6": {
                    "uart_pin_index6": 1
                },
                "byte_7": {
                    "uart_pin_index7": 1
                },
                "byte_8": {
                    "uart_pin_index8": 1
                },
                "byte_9": {
                    "uart_pin_index9": 1
                },
                "byte_value_1": {
                    "uart_pin_1": 1
                },
                "byte_value_2": {
                    "uart_pin_2": 1
                },
                "compare_and_return_smaller_value_080073ae": {
                    "compare_and_return_smaller_value": 7,
                    "compare_uart_pins": 1,
                    "compare_uart_values": 1,
                    "compare_values": 1,
                    "find_smaller_value": 2,
                    "get_smaller_value": 2
                },
                "decode_and_process_input_data_080098d8": {
                    "handle_error": 1,
                    "handle_error_message": 1,
                    "print_error": 2,
                    "print_error_message": 6,
                    "process_error": 1,
                    "process_error_data": 1,
                    "process_input_data": 2
                },
                "find_value_or_default_08007320": {
                    "find_peripheral_value_or_default": 1,
                    "find_pin_value_or_default": 1,
                    "find_value_or_default": 4
                },
                "get_value_by_index_08007376": {
                    "get_pin_value": 1,
                    "get_uart_value": 1,
                    "get_value_by_index": 12
                },
                "i": {
                    "index": 1
                },
                "iVar1": {
                    "peripheral1": 1,
                    "peripheral_1": 1,
                    "pin1_value": 3,
                    "uart0_value": 1,
                    "uart1_pin": 1,
                    "uart_periph1": 1,
                    "uart_peripheral1": 3,
                    "uart_peripheral_1": 1,
                    "uart_pin": 1,
                    "uart_pin1": 2,
                    "uart_pin1_value": 6,
                    "uart_pin_1_config": 1,
                    "uart_pin_1_val": 1,
                    "uart_pin_1_value": 1,
                    "uart_pin_default": 1,
                    "uart_pin_value": 4,
                    "uart_pin_value1": 1,
                    "value_uart1": 1
                },
                "iVar2": {
                    "peripheral2": 1,
                    "peripheral_2": 1,
                    "peripheral_pin": 1,
                    "peripheral_pin_value": 1,
                    "peripheral_value": 1,
                    "pin2_value": 3,
                    "uart1_value": 1,
                    "uart2_pin": 1,
                    "uart_periph2": 1,
                    "uart_peripheral2": 3,
                    "uart_peripheral_2": 1,
                    "uart_peripheral_value": 1,
                    "uart_pin2": 2,
                    "uart_pin2_value": 6,
                    "uart_pin_2_config": 1,
                    "uart_pin_2_val": 1,
                    "uart_pin_2_value": 1,
                    "uart_pin_peripheral": 1,
                    "uart_pin_valid": 1,
                    "uart_pin_value2": 1,
                    "value_uart2": 1
                },
                "initialize_data_structure_0800674e": {
                    "initialize_data_structure": 15,
                    "initialize_uart_data_structure": 2,
                    "initialize_uart_pin_data_structure": 1
                },
                "local_14": {
                    "const_value": 1,
                    "constant": 1,
                    "constant_value": 1,
                    "data_length": 1,
                    "default": 1,
                    "default_value": 1,
                    "flag": 2,
                    "flag_value": 1,
                    "flags": 1,
                    "local_variable": 2,
                    "num_flags": 1,
                    "temp_var": 1,
                    "uart1_flag": 1,
                    "uart_data": 1,
                    "uart_flag": 1,
                    "uart_flag2": 1,
                    "uart_mode": 2,
                    "uart_pin1_config": 1,
                    "uart_pin1_registers": 1,
                    "uart_pin2_mask": 1,
                    "uart_pin_1_flag_update": 1,
                    "uart_pin_constant": 1,
                    "uart_pin_count": 5,
                    "uart_type": 1
                },
                "local_18": {
                    "alternate_function": 1,
                    "peripheral_pin_position": 1,
                    "pin2_bit_settings": 1,
                    "pin2_shifted_bits": 1,
                    "pin_config": 1,
                    "pin_mode": 1,
                    "pin_shift": 1,
                    "pin_speed": 1,
                    "shift_count": 1,
                    "shift_value": 1,
                    "shifted_flag": 1,
                    "shifted_value2": 1,
                    "uart1_clock": 1,
                    "uart_config2": 1,
                    "uart_pin1_alternative_config": 1,
                    "uart_pin2_data": 1,
                    "uart_pin2_flag_value": 1,
                    "uart_pin2_shift": 1,
                    "uart_pin2_value": 1,
                    "uart_pin2_value_shifted2": 1,
                    "uart_pin3_mask": 1,
                    "uart_pin_2_shift": 1,
                    "uart_pin_2_shifted": 1,
                    "uart_pin_2_val_shifted": 1,
                    "uart_pin_bitmask3": 1,
                    "uart_pin_configuration": 1,
                    "uart_pin_shift": 3,
                    "uart_pin_shifted_value": 1,
                    "uart_pin_speed": 1
                },
                "local_1c": {
                    "config_bits": 1,
                    "gpio_settings": 1,
                    "peripheral_mask": 1,
                    "peripheral_pin_config": 1,
                    "pin1_bit_settings": 1,
                    "pin2_packed": 1,
                    "pin_config": 2,
                    "pin_configuration": 1,
                    "pin_value": 1,
                    "shifted_value": 2,
                    "uart1_configuration": 1,
                    "uart_config1": 1,
                    "uart_pin1_config": 1,
                    "uart_pin2_flag": 1,
                    "uart_pin2_flag_config": 1,
                    "uart_pin2_mask": 3,
                    "uart_pin2_value_shifted": 1,
                    "uart_pin_2_mask": 2,
                    "uart_pin_2_val_bits": 1,
                    "uart_pin_bitmask2": 1,
                    "uart_pin_config": 2,
                    "uart_pin_flag": 1,
                    "uart_pin_mode": 2,
                    "uart_pin_value_modified": 1
                },
                "local_20": {
                    "bit_mask": 1,
                    "mask": 1,
                    "pin1_bitmask": 1,
                    "pin1_mask": 1,
                    "pin_bit": 1,
                    "pin_bitmask": 2,
                    "pin_mask": 5,
                    "uart1_bitmask": 1,
                    "uart_mask": 1,
                    "uart_pin1_flag": 1,
                    "uart_pin1_mask": 4,
                    "uart_pin2_flag": 1,
                    "uart_pin_1_bitmask": 1,
                    "uart_pin_1_mask": 1,
                    "uart_pin_2_bitmask": 1,
                    "uart_pin_bitmask1": 1,
                    "uart_pin_mask": 6,
                    "uart_pin_mask_value": 1
                },
                "param_1": {
                    "peripheral_data": 1,
                    "pin": 1,
                    "pin_config": 3,
                    "pin_values": 1,
                    "pins": 1,
                    "uart_config": 3,
                    "uart_configuration": 1,
                    "uart_pins": 20
                },
                "set_flag_and_return_address_08006bb8": {
                    "set_flag": 1,
                    "set_flag_and_get_address": 1,
                    "set_flag_and_return_address": 10,
                    "set_uart_flag": 1
                },
                "uVar3": {
                    "address": 1,
                    "flag1": 1,
                    "flag_address": 2,
                    "flag_address1": 1,
                    "flag_value": 1,
                    "pin2_shifted": 1,
                    "pin_flags": 1,
                    "pin_value": 1,
                    "uart1_value": 1,
                    "uart_config": 1,
                    "uart_flag": 1,
                    "uart_flag1": 1,
                    "uart_pin1_address": 2,
                    "uart_pin1_config": 1,
                    "uart_pin1_setting": 2,
                    "uart_pin1_value": 1,
                    "uart_pin2_register": 1,
                    "uart_pin_1_flag": 2,
                    "uart_pin_address": 2,
                    "uart_pin_flag1": 1,
                    "uart_pin_mask": 1,
                    "uart_pin_selection": 1,
                    "uart_pin_value": 2,
                    "uart_value": 1,
                    "uart_value_1": 1
                },
                "uVar4": {
                    "index_value": 1,
                    "peripheral_value": 2,
                    "pin2_value_shifted": 1,
                    "pin_index": 2,
                    "pin_value": 1,
                    "uart2_value": 1,
                    "uart_index_value": 1,
                    "uart_pin2_config": 2,
                    "uart_pin2_setting": 2,
                    "uart_pin2_value": 2,
                    "uart_pin2_value_index": 1,
                    "uart_pin_2_index": 1,
                    "uart_pin_2_val_index": 1,
                    "uart_pin_flag2": 1,
                    "uart_pin_index": 3,
                    "uart_pin_value": 1,
                    "uart_value": 2,
                    "uart_value1": 1,
                    "uart_value_2": 1,
                    "value": 3,
                    "value_by_index": 1
                },
                "update_flags_and_registers_080040e8": {
                    "update_flags_and_registers": 14
                }
            },
            "called": [
                "FUN_080073ae",
                "FUN_08006bb8",
                "FUN_080040e8",
                "FUN_08007376",
                "FUN_08007320",
                "FUN_0800674e",
                "FUN_080098d8"
            ],
            "calling": [
                "FUN_080084b0",
                "FUN_08008c44"
            ],
            "code": "\n\n\nvoindexd initialize_uart_pins_08008078(indexnt *uart_pins)\n\n{\n  indexnt uart_pin1_value;\n  indexnt uart_pin2_value;\n  undefindexned4 uart_pin_value;\n  uindexnt uart_pin_index;\n  uindexnt uart_pin_mask;\n  uindexnt uart_pin2_mask;\n  uindexnt uart_pin_shift;\n  undefindexned4 uart_pin_count;\n  \n  indexf (uart_pins != (indexnt *)0x0) {\n    uart_pin1_value = find_value_or_default((indexnt)*(char *)(uart_pins + 0x16),&DAT_0800a864);\n    uart_pin2_value = find_value_or_default((indexnt)*(char *)((indexnt)uart_pins + 0x59),&DAT_0800a81c);\n    indexf ((uart_pin2_value == 0) || (uart_pin1_value == 0)) {\n      print_error_message(\"ERROR: at least one UART pindexn has no perindexpheral\\n\",uart_pin2_value);\n    }\n    else {\n      uart_pin1_value = compare_and_return_smaller_value(uart_pin1_value);\n      *uart_pins = uart_pin1_value;\n      indexf (uart_pin1_value == 0) {\n        print_error_message(\"ERROR: U(S)ART pindexns mindexsmatch\\n\");\n      }\n      else {\n        indexf (uart_pin1_value == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefindexned *)(uart_pins + 0x11) = 0;\n          *(undefindexned *)((indexnt)uart_pins + 0x5a) = 0x25;\n        }\n        else indexf (uart_pin1_value == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefindexned *)(uart_pins + 0x11) = 1;\n          *(undefindexned *)((indexnt)uart_pins + 0x5a) = 0x26;\n        }\n        else indexf (uart_pin1_value == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefindexned *)(uart_pins + 0x11) = 2;\n          *(undefindexned *)((indexnt)uart_pins + 0x5a) = 0x27;\n        }\n        uart_pin_value = set_flag_and_return_address((uindexnt)((indexnt)*(char *)((indexnt)uart_pins + 0x59) << 0x18) >> 0x1c);\n        uart_pin_index = get_value_by_index((indexnt)*(char *)((indexnt)uart_pins + 0x59),&DAT_0800a81c);\n        uart_pin_mask = 1 << (*(byte_value *)((indexnt)uart_pins + 0x59) & 0xf) & 0xffff;\n        uart_pin2_mask = (uart_pin_index >> 3 & 1) << 4 | uart_pin_index & 7;\n        uart_pin_shift = (uart_pin_index << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        swindextch((uart_pin_index << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        uart_pin_count = 3;\n        update_flags_and_registers(uart_pin_value,&uart_pin_mask);\n        uart_pin_value = set_flag_and_return_address((uindexnt)((indexnt)*(char *)(uart_pins + 0x16) << 0x18) >> 0x1c);\n        uart_pin_index = get_value_by_index((indexnt)*(char *)(uart_pins + 0x16),&DAT_0800a864);\n        uart_pin_mask = 1 << (*(byte_value *)(uart_pins + 0x16) & 0xf) & 0xffff;\n        uart_pin2_mask = (uart_pin_index >> 3 & 1) << 4 | uart_pin_index & 7;\n        uart_pin_shift = (uart_pin_index << 0x1a) >> 0x1e;\n        update_flags_and_registers(uart_pin_value,&uart_pin_mask);\n        (&DAT_200006c0)[*(byte_value *)(uart_pins + 0x11)] = uart_pins + 1;\n        uart_pins[1] = *uart_pins;\n        uart_pins[2] = uart_pins[0x12];\n        uart_pins[3] = uart_pins[0x13];\n        uart_pins[4] = uart_pins[0x14];\n        uart_pins[5] = uart_pins[0x15];\n        uart_pins[6] = 0xc;\n        uart_pins[7] = 0;\n        uart_pins[8] = 0;\n        initialize_data_structure(uart_pins + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_uart_pins_08008078",
            "entrypoint": "0x08008078",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008078": "initialize_uart_pins_08008078",
                "byte": "byte_value",
                "compare_and_return_smaller_value_080073ae": "compare_and_return_smaller_value",
                "decode_and_process_input_data_080098d8": "print_error_message",
                "find_value_or_default_08007320": "find_value_or_default",
                "get_value_by_index_08007376": "get_value_by_index",
                "i": "index",
                "iVar1": "uart_pin1_value",
                "iVar2": "uart_pin2_value",
                "initialize_data_structure_0800674e": "initialize_data_structure",
                "local_14": "uart_pin_count",
                "local_18": "uart_pin_shift",
                "local_1c": "uart_pin2_mask",
                "local_20": "uart_pin_mask",
                "param_1": "uart_pins",
                "set_flag_and_return_address_08006bb8": "set_flag_and_return_address",
                "uVar3": "uart_pin_value",
                "uVar4": "uart_pin_index",
                "update_flags_and_registers_080040e8": "update_flags_and_registers"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080084b0": {
            "additional_data": {
                "DAT_0800a81c": {
                    "character_index": 1
                },
                "DAT_0800a864": {
                    "default_values": 1
                },
                "DAT_2000001c": {
                    "uart_pins": 1
                },
                "DAT_20000064": {
                    "constant1": 1,
                    "constant_value": 1,
                    "initial_value": 1,
                    "value1": 1
                },
                "DAT_20000068": {
                    "default_value2": 1,
                    "value3": 1,
                    "variable2": 1,
                    "variable_b": 1
                },
                "DAT_2000006c": {
                    "default_value3": 1,
                    "value4": 1,
                    "variable3": 1,
                    "variable_c": 1
                },
                "DAT_20000070": {
                    "default_value1": 1,
                    "value2": 1,
                    "variable1": 1,
                    "variable_a": 1
                },
                "DAT_20000074": {
                    "constant": 1,
                    "constant2": 1,
                    "some_flag": 1,
                    "some_value": 1
                },
                "DAT_20000075": {
                    "character_index": 2,
                    "character_index_or_default": 1,
                    "character_index_result": 1
                },
                "FUN_080084b0": {
                    "initialize_connection": 1,
                    "initialize_system": 1,
                    "initialize_uart": 19,
                    "initialize_uart_and_pins": 1,
                    "initialize_uart_if_required": 1,
                    "initialize_uart_pins": 8
                },
                "find_character_index_or_default_0800734a": {
                    "find_character_index_or_default": 4
                },
                "find_value_or_default_08007320": {
                    "find_value_or_default": 4
                },
                "iVar1": {
                    "first_value": 2,
                    "result": 4,
                    "return_value": 1,
                    "value": 6,
                    "value1": 14,
                    "value_1": 1,
                    "value_check_result": 1,
                    "value_found": 1,
                    "value_index": 1
                },
                "initialize_uart_pins_08008078": {
                    "initialize_uart_pins": 6
                },
                "uVar2": {
                    "character": 1,
                    "character_index": 5,
                    "character_value": 1,
                    "default_value": 5,
                    "second_value": 3,
                    "value": 1,
                    "value2": 14,
                    "value_2": 1
                }
            },
            "called": [
                "FUN_0800734a",
                "FUN_08008078",
                "FUN_08007320"
            ],
            "calling": [
                "FUN_08008500"
            ],
            "code": "\nvoid initialize_uart_and_pins_080084b0(void)\n\n{\n  int value1;\n  undefined4 value2;\n  \n  value1 = find_value_or_default(2,&DAT_0800a864);\n  if (value1 != 0) {\n    value2 = find_value_or_default(2,&DAT_0800a864);\n    DAT_20000075 = find_character_index_or_default(value2,&DAT_0800a81c);\n    DAT_20000074 = 2;\n    DAT_20000064 = 0x2580;\n    DAT_20000070 = 0;\n    DAT_20000068 = 0;\n    DAT_2000006c = 0;\n    initialize_uart_pins(&DAT_2000001c);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_uart_and_pins_080084b0",
            "entrypoint": "0x080084b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080084b0": "initialize_uart_and_pins_080084b0",
                "find_character_index_or_default_0800734a": "find_character_index_or_default",
                "find_value_or_default_08007320": "find_value_or_default",
                "iVar1": "value1",
                "initialize_uart_pins_08008078": "initialize_uart_pins",
                "uVar2": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008500": {
            "additional_data": {
                "DAT_0800a864": {
                    "default_array": 1,
                    "default_value": 3
                },
                "DAT_20000060": {
                    "data_limit": 1,
                    "data_value3": 1,
                    "max_value": 1,
                    "some_value": 1,
                    "uart_pin_value": 1,
                    "uart_pins_value": 1,
                    "uart_value": 1
                },
                "DAT_200006c0": {
                    "data_array": 1,
                    "input_data": 1
                },
                "FUN_08008500": {
                    "process_and_check_data": 1,
                    "process_and_check_input": 1,
                    "process_and_validate_data": 2,
                    "process_and_validate_input": 1,
                    "process_data": 20,
                    "process_input": 1,
                    "process_input_data": 2,
                    "process_input_with_delay": 1,
                    "process_input_with_timeout": 1,
                    "validate_input": 1
                },
                "find_value_or_default_08007320": {
                    "find_value_or_default": 9
                },
                "get_data_value_08003760": {
                    "get_current_data_value": 2,
                    "get_data_value": 8
                },
                "iVar1": {
                    "data_value": 4,
                    "data_value1": 12,
                    "data_value_1": 7,
                    "initial_data": 1,
                    "initial_data_value": 5,
                    "original_data_value": 1,
                    "prev_value": 1
                },
                "iVar2": {
                    "data_value2": 11,
                    "data_value_2": 7,
                    "default_value": 4,
                    "found_value": 8,
                    "value_or_default": 1
                },
                "initialize_uart_and_pins_080084b0": {
                    "initialize_uar_tand_pins": 2,
                    "initialize_uart": 2,
                    "initialize_uart_and_pins": 8,
                    "initialize_uart_pins": 4
                },
                "param_1": {
                    "data_param": 2,
                    "data_param1": 1,
                    "data_pointer": 1,
                    "data_size": 1,
                    "data_type": 1,
                    "input_buffer": 1,
                    "input_data": 2,
                    "input_param": 3,
                    "input_param_1": 1,
                    "input_parameter": 1,
                    "input_parameter_1": 1,
                    "input_size": 1,
                    "input_value": 6,
                    "input_value1": 1,
                    "param_a": 1,
                    "param_one": 1,
                    "status": 2,
                    "timeout_value": 1,
                    "undefined_value": 1,
                    "value1": 2
                },
                "param_2": {
                    "data": 2,
                    "data_count": 1,
                    "data_param2": 1,
                    "data_value": 4,
                    "flag_param": 2,
                    "flags": 3,
                    "input_data": 2,
                    "input_length": 1,
                    "input_param_2": 1,
                    "input_parameter_2": 1,
                    "input_size": 1,
                    "input_value": 4,
                    "input_value2": 1,
                    "output_param": 2,
                    "output_value": 1,
                    "param_b": 1,
                    "param_two": 1,
                    "value2": 2
                },
                "process_input_data_080067ac": {
                    "process_data": 2,
                    "process_input": 1,
                    "process_input_data": 13
                },
                "uVar3": {
                    "counter": 5,
                    "index": 19,
                    "iterator": 1,
                    "loop_counter": 6
                }
            },
            "called": [
                "FUN_080067ac",
                "FUN_080084b0",
                "FUN_08003760",
                "FUN_08007320"
            ],
            "calling": [
                "FUN_0800885c"
            ],
            "code": "\nuint process_and_validate_data_08008500(undefined4 input_value,uint data_value)\n\n{\n  int data_value1;\n  int data_value2;\n  uint index;\n  \n  data_value1 = get_data_value();\n  data_value2 = find_value_or_default(2,&DAT_0800a864);\n  if (data_value2 == 0) {\n    return 0;\n  }\n  for (index = 0;\n      (index < 5 &&\n      (((&DAT_200006c0)[index] == 0 ||\n       (data_value2 = find_value_or_default(2,&DAT_0800a864), *(int *)(&DAT_200006c0)[index] != data_value2))));\n      index = index + 1 & 0xff) {\n  }\n  if (4 < index) {\n    if ((4 < DAT_20000060) && (initialize_uart_and_pins(), 4 < DAT_20000060)) {\n      return 0;\n    }\n    index = (uint)DAT_20000060;\n  }\n  do {\n    data_value2 = process_input_data((&DAT_200006c0)[index],input_value,data_value & 0xffff,1000);\n    if (data_value2 == 0) {\n      return data_value;\n    }\n    data_value2 = get_data_value();\n  } while ((uint)(data_value2 - data_value1) < 1000);\n  return 0;\n}\n\n",
            "current_name": "process_and_validate_data_08008500",
            "entrypoint": "0x08008500",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008500": "process_and_validate_data_08008500",
                "find_value_or_default_08007320": "find_value_or_default",
                "get_data_value_08003760": "get_data_value",
                "iVar1": "data_value1",
                "iVar2": "data_value2",
                "initialize_uart_and_pins_080084b0": "initialize_uart_and_pins",
                "param_1": "input_value",
                "param_2": "data_value",
                "process_input_data_080067ac": "process_input_data",
                "uVar3": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080085b8": {
            "additional_data": {
                "0x22": {
                    "bit_mask": 1,
                    "comparison_value": 1,
                    "expected_value": 1,
                    "mask": 1,
                    "required_byte_combination": 1
                },
                "0x44": {
                    "offset": 1
                },
                "DAT_200006c0": {
                    "byte_array": 1,
                    "data_array": 2,
                    "data_block": 1
                },
                "FUN_080085b8": {
                    "check_bit_pattern": 2,
                    "check_bits": 1,
                    "check_combination": 9,
                    "check_combined_bytes": 1,
                    "check_condition": 2,
                    "check_flag": 1,
                    "is_bit_set": 1,
                    "is_combination_equal_to22": 1,
                    "is_combination_valid": 8,
                    "is_combined_data_equal_to0x22": 1,
                    "is_data_valid": 1,
                    "is_flag_set": 3
                },
                "byte": {
                    "byte_value": 1,
                    "index": 2,
                    "input_byte": 1,
                    "selected_byte": 1
                },
                "combine_bytes_08006b1c": {
                    "combine_bytes": 6,
                    "combine_bytes_function": 1
                },
                "param_1": {
                    "byte_index": 1,
                    "data": 1,
                    "flag": 2,
                    "flag_value": 1,
                    "input": 3,
                    "input_param": 3,
                    "input_value": 19,
                    "value": 1
                },
                "uVar1": {
                    "byte_combination": 1,
                    "combined_byte": 1,
                    "combined_bytes": 26,
                    "combined_data": 1,
                    "combined_value": 1
                }
            },
            "called": [
                "FUN_08006b1c"
            ],
            "calling": [
                "FUN_0800863c",
                "FUN_08008600"
            ],
            "code": "\nbool check_combination_080085b8(int input_value)\n\n{\n  uint combined_bytes;\n  \n  combined_bytes = combine_bytes((&DAT_200006c0)[*(index *)(input_value + 0x44)]);\n  return (combined_bytes & 0x22) == 0x22;\n}\n\n",
            "current_name": "check_combination_080085b8",
            "entrypoint": "0x080085b8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080085b8": "check_combination_080085b8",
                "byte": "index",
                "combine_bytes_08006b1c": "combine_bytes",
                "param_1": "input_value",
                "uVar1": "combined_bytes"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080085dc": {
            "additional_data": {
                "0x21": {
                    "bitmask": 1,
                    "check_value": 1,
                    "comparison_value": 1,
                    "mask": 2
                },
                "DAT_200006c0": {
                    "data_array": 2,
                    "data_buffer": 1
                },
                "FUN_080085dc": {
                    "check_bitmask": 1,
                    "check_combination": 2,
                    "check_combination_value": 1,
                    "check_condition": 7,
                    "check_flag": 2,
                    "check_flag_combination": 1,
                    "check_flag_condition": 1,
                    "check_flag_set": 1,
                    "check_flag_value": 1,
                    "is_bit_set": 1,
                    "is_combination_flag_set": 1,
                    "is_combination_valid": 4,
                    "is_combined_bytes_equal": 1,
                    "is_desirable_value": 1,
                    "is_flag_set": 2,
                    "is_matching_value": 1,
                    "is_reversed": 1,
                    "is_valid_combination": 2
                },
                "byte": {
                    "byte_value": 4,
                    "param_byte": 1
                },
                "combine_bytes_08006b1c": {
                    "combine_bytes": 8
                },
                "param_1": {
                    "flag": 3,
                    "flag_value": 3,
                    "input_value": 22,
                    "number": 1,
                    "value": 2
                },
                "uVar1": {
                    "combined_bytes": 23,
                    "combined_bytes_check": 1,
                    "combined_bytes_result": 1,
                    "combined_result": 1,
                    "combined_value": 5
                }
            },
            "called": [
                "FUN_08006b1c"
            ],
            "calling": [],
            "code": "\nbool check_flag_condition_080085dc(int input_value)\n\n{\n  uint combined_bytes;\n  \n  combined_bytes = combine_bytes((&DAT_200006c0)[*(byte_value *)(input_value + 0x44)]);\n  return (combined_bytes & 0x21) == 0x21;\n}\n\n",
            "current_name": "check_flag_condition_080085dc",
            "entrypoint": "0x080085dc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080085dc": "check_flag_condition_080085dc",
                "byte": "byte_value",
                "combine_bytes_08006b1c": "combine_bytes",
                "param_1": "input_value",
                "uVar1": "combined_bytes"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008600": {
            "additional_data": {
                "DAT_200006c0": {
                    "data_array": 1,
                    "data_value": 1,
                    "validation_data": 1
                },
                "FUN_08008600": {
                    "copy_and_validate_combination": 1,
                    "copy_and_validate_input": 2,
                    "extract_and_validate_input": 1,
                    "extract_combination": 6,
                    "extract_data": 1,
                    "extract_data_and_validate": 2,
                    "extract_data_from_binary": 2,
                    "extract_input": 2,
                    "extract_value_and_validate": 2,
                    "process_combination": 2,
                    "process_data": 1,
                    "process_input": 5,
                    "process_input_data": 1,
                    "validate_combination": 3
                },
                "PTR_DAT_200006c0": {
                    "data": 1
                },
                "check_combination_080085b8": {
                    "check_combination": 3
                },
                "iVar1": {
                    "check_result": 2,
                    "combination_check": 4,
                    "combination_check_result": 14,
                    "combination_result": 10,
                    "combination_status": 1
                },
                "param_1": {
                    "binary_address": 1,
                    "combination": 1,
                    "combination_length": 1,
                    "combination_size": 1,
                    "data_length": 1,
                    "input": 4,
                    "input_address": 2,
                    "input_data": 3,
                    "input_data_size": 1,
                    "input_length": 6,
                    "input_pointer": 2,
                    "input_ptr": 1,
                    "input_size": 4,
                    "input_value": 2,
                    "value": 1
                },
                "param_2": {
                    "extracted_combination": 1,
                    "extracted_data": 1,
                    "output": 12,
                    "output_buffer": 2,
                    "output_combination": 1,
                    "output_data": 6,
                    "output_pointer": 1,
                    "output_ptr": 1,
                    "output_value": 4,
                    "result": 1,
                    "result_ptr": 1
                },
                "param_3": {
                    "arg1": 2,
                    "comb_var_1": 1,
                    "flag_1": 1,
                    "param3": 5,
                    "param_3": 9,
                    "param_a": 1,
                    "param_value1": 1,
                    "size": 1,
                    "size_param": 1,
                    "unused_param": 1,
                    "unused_parameter": 1,
                    "validation_code": 1,
                    "validation_param1": 2,
                    "validation_param_1": 1,
                    "validation_result": 3
                },
                "param_4": {
                    "additional_data": 1,
                    "additional_param": 2,
                    "arg2": 2,
                    "comb_var_2": 1,
                    "extra_param": 1,
                    "extract_param": 1,
                    "flag_2": 1,
                    "param4": 5,
                    "param_4": 10,
                    "param_b": 1,
                    "param_value2": 1,
                    "unused_parameter": 1,
                    "validation_param": 1,
                    "validation_param2": 2,
                    "validation_param_2": 1
                },
                "validate_input_080068d6": {
                    "validate_extracted_combination": 1,
                    "validate_input": 1
                }
            },
            "called": [
                "FUN_080068d6",
                "FUN_080085b8"
            ],
            "calling": [
                "FUN_08008b66"
            ],
            "code": "\nundefined4 process_input_data_08008600(int input_length,undefined *output,undefined4 param_3,undefined4 param_4)\n\n{\n  int combination_check_result;\n  \n  if (input_length == 0) {\n    return 0xffffffff;\n  }\n  combination_check_result = check_combination();\n  if (combination_check_result == 0) {\n    *output = *(undefined *)(input_length + 0x45);\n    validate_input((&DAT_200006c0)[*(byte *)(input_length + 0x44)],input_length + 0x45,1,&DAT_200006c0,param_4);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "process_input_data_08008600",
            "entrypoint": "0x08008600",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008600": "process_input_data_08008600",
                "check_combination_080085b8": "check_combination",
                "iVar1": "combination_check_result",
                "param_1": "input_length",
                "param_2": "output",
                "validate_input_080068d6": "validate_input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800863c": {
            "additional_data": {
                "FUN_0800863c": {
                    "process_combination": 1,
                    "process_input": 4,
                    "save_or_update_combination": 1,
                    "store_combination": 5,
                    "store_input_combination": 1,
                    "store_input_data": 1,
                    "store_input_details": 1,
                    "update_combination": 15,
                    "update_data": 1,
                    "update_memory_combination": 1
                },
                "check_combination_080085b8": {
                    "check_combination": 3
                },
                "iVar1": {
                    "check_result": 9,
                    "combination_check": 1,
                    "combination_check_result": 7,
                    "combination_result": 2,
                    "combination_valid": 2,
                    "result": 10
                },
                "param_1": {
                    "combination": 10,
                    "combination_address": 2,
                    "combination_ptr": 1,
                    "input": 8,
                    "input_address": 1,
                    "input_data": 2,
                    "input_parameter": 1,
                    "input_pointer": 1,
                    "input_ptr": 2,
                    "input_value": 3
                },
                "param_2": {
                    "data": 1,
                    "data1": 1,
                    "data_1": 1,
                    "new_value": 7,
                    "updated_value": 1,
                    "value": 15,
                    "value1": 2,
                    "value_1": 1,
                    "value_ptr": 1,
                    "value_to_add": 1
                },
                "param_3": {
                    "data1": 1,
                    "data2": 1,
                    "data_2": 1,
                    "param": 2,
                    "param3": 3,
                    "param_3": 1,
                    "placeholder": 1,
                    "unknown1": 1,
                    "unused": 5,
                    "unused1": 5,
                    "unused_param": 3,
                    "unused_parameter": 2,
                    "unused_ptr": 1,
                    "value2": 2,
                    "value_2": 1
                },
                "param_4": {
                    "additional_info": 1,
                    "additional_value": 1,
                    "arg": 1,
                    "data": 3,
                    "data2": 1,
                    "data3": 1,
                    "data_3": 1,
                    "data_ptr": 1,
                    "flag": 2,
                    "index": 1,
                    "last_param": 1,
                    "memory_location": 2,
                    "other_param": 1,
                    "param4": 3,
                    "param_4": 1,
                    "unknown2": 1,
                    "unused2": 5,
                    "update_flag": 1,
                    "value3": 2,
                    "value_3": 1
                },
                "set_bit_in_array_08003f94": {
                    "set_bit_in_array": 15
                },
                "uVar2": {
                    "byte_index": 3,
                    "byte_offset": 2,
                    "byte_value": 2,
                    "combination_index": 5,
                    "index": 19
                },
                "update_memory_location_08003f30": {
                    "update_memory_location": 15
                },
                "validate_input_080068d6": {
                    "validate_input": 15
                }
            },
            "called": [
                "FUN_08003f94",
                "FUN_08003f30",
                "FUN_080068d6",
                "FUN_080085b8"
            ],
            "calling": [
                "FUN_08008c44"
            ],
            "code": "\nvoid update_memory_combination_0800863c(int combination,undefined4 value,undefined4 unused1,undefined4 unused2)\n\n{\n  int result;\n  uint index;\n  \n  if (combination != 0) {\n    result = check_combination();\n    if (result == 0) {\n      index = (uint)*(byte *)(combination + 0x44);\n      *(undefined4 *)(&DAT_20000670 + index * 4) = value;\n      *(int *)(&DAT_20000684 + index * 4) = combination;\n      update_memory_location((int)*(char *)(combination + 0x5a),0,1,index,unused2);\n      set_bit_in_array((int)*(char *)(combination + 0x5a));\n      validate_input((&DAT_200006c0)[*(byte *)(combination + 0x44)],combination + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "update_memory_combination_0800863c",
            "entrypoint": "0x0800863c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800863c": "update_memory_combination_0800863c",
                "check_combination_080085b8": "check_combination",
                "iVar1": "result",
                "param_1": "combination",
                "param_2": "value",
                "param_3": "unused1",
                "param_4": "unused2",
                "set_bit_in_array_08003f94": "set_bit_in_array",
                "uVar2": "index",
                "update_memory_location_08003f30": "update_memory_location",
                "validate_input_080068d6": "validate_input"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008694": {
            "additional_data": {
                "FUN_08008694": {
                    "update_and_initialize_data": 3,
                    "update_data": 4,
                    "update_data_and_initialize_input": 1,
                    "update_function": 1,
                    "update_function_data": 3,
                    "update_input_data": 1,
                    "update_memory": 2,
                    "update_memory_and_initialize": 1,
                    "update_memory_and_initialize_input": 3,
                    "update_memory_info": 1,
                    "update_memory_location": 9,
                    "update_parameter": 1,
                    "update_parameter_info": 1
                },
                "bVar1": {
                    "byte_value": 23,
                    "index": 8
                },
                "initialize_input_0800688e": {
                    "initialize_input": 9
                },
                "param_1": {
                    "address": 2,
                    "data_addr": 1,
                    "data_pointer": 4,
                    "data_ptr": 5,
                    "function_data": 2,
                    "input": 1,
                    "input_address": 2,
                    "input_data": 2,
                    "input_pointer": 4,
                    "memory_address": 4,
                    "parameter": 1,
                    "pointer": 2,
                    "ptr": 1
                },
                "param_2": {
                    "data_value": 1,
                    "input_value": 1,
                    "new_value": 20,
                    "value": 9
                },
                "set_bit_in_array_08003f94": {
                    "set_bit_in_array": 9
                },
                "update_memory_location_08003f30": {
                    "update_memory_location": 7,
                    "update_memory_location2": 1,
                    "update_memory_location_helper": 1
                }
            },
            "called": [
                "FUN_08003f94",
                "FUN_0800688e",
                "FUN_08003f30"
            ],
            "calling": [],
            "code": "\nvoid update_memory_location_08008694(int data_ptr,undefined4 new_value)\n\n{\n  byte byte_value;\n  \n  if (data_ptr != 0) {\n    byte_value = *(byte *)(data_ptr + 0x44);\n    *(undefined4 *)(&DAT_20000698 + (uint)byte_value * 4) = new_value;\n    *(int *)(&DAT_200006ac + (uint)byte_value * 4) = data_ptr;\n    update_memory_location_08008694((int)*(char *)(data_ptr + 0x5a),0,2);\n    set_bit_in_array((int)*(char *)(data_ptr + 0x5a));\n    initialize_input((&DAT_200006c0)[*(byte *)(data_ptr + 0x44)],\n                 *(int *)(data_ptr + 100) + (uint)*(ushort *)(data_ptr + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "update_memory_location_08008694",
            "entrypoint": "0x08008694",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008694": "update_memory_location_08008694",
                "bVar1": "byte_value",
                "initialize_input_0800688e": "initialize_input",
                "param_1": "data_ptr",
                "param_2": "new_value",
                "set_bit_in_array_08003f94": "set_bit_in_array",
                "update_memory_location_08003f30": "update_memory_location"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080086e8": {
            "additional_data": {
                "FUN_080086e8": {
                    "find_element_index": 1,
                    "find_index": 9,
                    "find_index_in_array": 1,
                    "find_match": 1,
                    "find_match_index": 1,
                    "find_matching_index": 3,
                    "find_number": 1,
                    "find_number_index": 1,
                    "find_value_index": 13
                },
                "param_1": {
                    "element": 2,
                    "index": 1,
                    "input_number": 1,
                    "input_value": 10,
                    "number": 1,
                    "value": 15,
                    "value_to_find": 1
                },
                "uVar1": {
                    "found_index": 1,
                    "index": 25,
                    "match_index": 3,
                    "matching_index": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08008730",
                "FUN_0800870c"
            ],
            "code": "\nuint find_value_index_080086e8(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (value == (&DAT_200006c0)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "current_name": "find_value_index_080086e8",
            "entrypoint": "0x080086e8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080086e8": "find_value_index_080086e8",
                "param_1": "value",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800870c": {
            "additional_data": {
                "DAT_20000670": {
                    "action_table": 2,
                    "function_array": 1,
                    "function_pointer_array": 1,
                    "function_pointer_table": 1,
                    "function_pointers": 2,
                    "function_pointers_start": 1,
                    "function_ptr_array": 1,
                    "function_ptr_start": 1,
                    "function_table": 8
                },
                "DAT_20000684": {
                    "argument_array": 1,
                    "argument_pointers": 1,
                    "argument_table": 6,
                    "arguments_start": 1,
                    "data_table": 1,
                    "function_arg_start": 1,
                    "function_args": 1,
                    "parameter_array": 1,
                    "parameter_table": 4,
                    "params_array": 1
                },
                "FUN_0800870c": {
                    "execute_action": 1,
                    "execute_found_value_action": 1,
                    "execute_function": 8,
                    "execute_indexed_function": 3,
                    "execute_matching_function": 1,
                    "execute_operation": 2,
                    "execute_relevant_operation": 1,
                    "execute_selected_action": 1,
                    "execute_selected_func": 1,
                    "execute_selected_function": 7,
                    "execute_selected_operation": 1,
                    "execute_selected_value": 1,
                    "execute_specific_operation": 1,
                    "process_data": 1
                },
                "code": {
                    "function_pointer": 2,
                    "function_pointer_array": 1
                },
                "find_value_index_080086e8": {
                    "find_index": 1,
                    "find_selected_value_index": 1,
                    "find_value_index": 22
                },
                "uVar1": {
                    "index": 11,
                    "value_index": 19
                }
            },
            "called": [
                "FUN_080086e8"
            ],
            "calling": [
                "FUN_0800694c"
            ],
            "code": "\nvoid execute_selected_function_0800870c(void)\n\n{\n  uint value_index;\n  \n  value_index = find_value_index();\n  if (value_index < 5) {\n    (**(function_pointer **)(&DAT_20000670 + value_index * 4))(*(undefined4 *)(&DAT_20000684 + value_index * 4));\n  }\n  return;\n}\n\n",
            "current_name": "execute_selected_function_0800870c",
            "entrypoint": "0x0800870c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800870c": "execute_selected_function_0800870c",
                "code": "function_pointer",
                "find_value_index_080086e8": "find_value_index",
                "uVar1": "value_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008730": {
            "additional_data": {
                "BYTE_20000698": {
                    "byte_data_offsets": 1
                },
                "BYTE_200006c0": {
                    "byte_data": 1
                },
                "DAT_20000698": {
                    "code_address": 1,
                    "code_array": 2,
                    "code_data": 1,
                    "code_pointers": 1,
                    "data_block2": 1,
                    "data_function_array": 1,
                    "data_pointer2": 1,
                    "data_ptr2": 1,
                    "func_array": 1,
                    "function_addresses": 1,
                    "function_array": 1,
                    "function_pointers_array": 1
                },
                "DAT_200006ac": {
                    "data": 1,
                    "data_address": 1,
                    "data_addresses": 2,
                    "data_array": 4,
                    "data_array_a": 1,
                    "data_block1": 1,
                    "data_pointer1": 1,
                    "data_ptr1": 1,
                    "value_array": 1,
                    "values_array": 1
                },
                "DAT_200006c0": {
                    "data_arr": 1,
                    "data_block3": 1,
                    "input_array": 4,
                    "input_data": 1,
                    "input_data_array": 1
                },
                "FUN_08008730": {
                    "initialize_and_execute": 1,
                    "initialize_and_process_value": 1,
                    "initialize_input": 14,
                    "initialize_input_and_index": 1,
                    "initialize_input_from_binary": 6,
                    "initialize_input_from_index": 1,
                    "initialize_input_from_value_index": 1,
                    "initialize_selected_input": 2,
                    "process_input": 1,
                    "process_value": 3
                },
                "INT_200006ac": {
                    "int_data": 1
                },
                "INT_200006c0": {
                    "int_data_offsets": 1
                },
                "PTR_0800688e": {
                    "input_initializer": 1
                },
                "find_value_index_080086e8": {
                    "find_index": 2,
                    "find_index_of_value": 1,
                    "find_value_index": 24
                },
                "iVar2": {
                    "result": 30,
                    "return_value": 1
                },
                "iVar3": {
                    "address": 9,
                    "base_address": 1,
                    "data": 10,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "selected_value": 1,
                    "value": 8
                },
                "initialize_input_0800688e": {
                    "initialize_input": 24,
                    "initialize_input_data": 1,
                    "initialize_input_helper": 1
                },
                "uVar1": {
                    "index": 18,
                    "value_index": 13
                }
            },
            "called": [
                "FUN_0800688e",
                "FUN_080086e8"
            ],
            "calling": [
                "FUN_08006932"
            ],
            "code": "\nvoid initialize_input_from_binary_08008730(void)\n\n{\n  uint index;\n  int result;\n  int data;\n  \n  index = find_value_index();\n  data = *(int *)(&DAT_200006ac + index * 4);\n  if ((index < 5) && (result = (**(code **)(&DAT_20000698 + index * 4))(data), result != -1)) {\n    initialize_input((&DAT_200006c0)[*(byte *)(data + 0x44)],\n                 *(int *)(data + 100) + (uint)*(ushort *)(data + 0x6a),1);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_input_from_binary_08008730",
            "entrypoint": "0x08008730",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008730": "initialize_input_from_binary_08008730",
                "find_value_index_080086e8": "find_value_index",
                "iVar2": "result",
                "iVar3": "data",
                "initialize_input_0800688e": "initialize_input",
                "uVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800877c": {
            "called": [],
            "calling": [
                "FUN_080069ec"
            ],
            "code": "\nvoid FUNC_0800877c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800877c",
            "entrypoint": "0x0800877c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800877c": "FUNC_0800877c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08008804": {
            "additional_data": {
                "DAT_200006d4": {
                    "current_address": 1,
                    "current_block_ptr": 1,
                    "current_memory": 9,
                    "current_memory_pointer": 2,
                    "current_memory_position": 1,
                    "current_memory_ptr": 5,
                    "current_pointer": 4,
                    "current_position": 2
                },
                "DAT_20000a38": {
                    "error_code": 17,
                    "error_flag": 2,
                    "error_indicator": 1
                },
                "DAT_20000a3c": {
                    "base_memory": 1,
                    "default_block_ptr": 1,
                    "default_memory": 2,
                    "initial_memory_pointer": 1,
                    "initial_memory_ptr": 4,
                    "initial_pointer": 1,
                    "lower_bound": 1,
                    "stack_base": 1,
                    "stack_end": 2,
                    "stack_start": 2,
                    "start_pointer": 1
                },
                "FUN_08008804": {
                    "allocate_memory": 28,
                    "allocate_memory_block": 1,
                    "get_memory": 1,
                    "get_memory_block": 1
                },
                "param_1": {
                    "block_size": 1,
                    "size": 29,
                    "size_to_allocate": 1
                },
                "puVar1": {
                    "allocated_memory": 28,
                    "allocated_memory_ptr": 1,
                    "memory_block": 1,
                    "memory_ptr": 1
                },
                "stack0x00000000": {
                    "end_pointer": 1,
                    "stack_base_address": 1,
                    "stack_bottom": 1,
                    "stack_boundary": 1,
                    "stack_end": 2,
                    "stack_limit": 2,
                    "stack_memory": 1,
                    "stack_pointer": 1,
                    "stack_ptr": 1,
                    "stack_start": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08009918"
            ],
            "code": "\nundefined * allocate_memory_block_08008804(int size)\n\n{\n  undefined *allocated_memory;\n  \n  if (DAT_200006d4 == (undefined *)0x0) {\n    DAT_200006d4 = &DAT_20000a3c;\n  }\n  allocated_memory = DAT_200006d4;\n  if (DAT_200006d4 + size <= &stack_limit) {\n    DAT_200006d4 = DAT_200006d4 + size;\n    return allocated_memory;\n  }\n  DAT_20000a38 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "current_name": "allocate_memory_block_08008804",
            "entrypoint": "0x08008804",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008804": "allocate_memory_block_08008804",
                "param_1": "size",
                "puVar1": "allocated_memory",
                "stack0x00000000": "stack_limit"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008840": {
            "additional_data": {
                "DAT_": {
                    "dat_": 1
                },
                "FUN_08008840": {
                    "clear_flag": 1,
                    "get_default_return_value": 1,
                    "get_default_value": 8,
                    "get_error_code": 7,
                    "get_maximum_value": 1,
                    "get_negative_one": 1,
                    "get_return_code": 1,
                    "get_return_value": 5,
                    "initialize_default_return_value": 1,
                    "initialize_error_code": 1,
                    "initialize_return_value": 4
                },
                "PTR_": {
                    "ptr_": 1
                },
                "result": {
                    "default_value": 1
                },
                "return": {
                    "error_code": 1,
                    "return_value": 1
                },
                "returnValue": {
                    "max_value": 1
                },
                "undefined4": {
                    "error_code": 1,
                    "int": 2,
                    "uint32": 1,
                    "uint32_t": 8
                }
            },
            "called": [],
            "calling": [],
            "code": "\nuint32_t get_default_return_value_08008840(void)\n\n{\n  return_value 0xffffffff;\n}\n\n",
            "current_name": "get_default_return_value_08008840",
            "entrypoint": "0x08008840",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008840": "get_default_return_value_08008840",
                "return": "return_value",
                "undefined4": "uint32_t"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008846": {
            "additional_data": {
                "0x2000": {
                    "default_page_size": 1,
                    "initial_flag_value": 1,
                    "initial_value": 1,
                    "memory_size": 1
                },
                "FUN_08008846": {
                    "initialize_memory": 13,
                    "set_file_size": 1,
                    "set_memory_flag": 4,
                    "set_memory_page_size": 4,
                    "set_memory_permission": 1,
                    "set_memory_protection": 1,
                    "set_memory_size": 2,
                    "set_memory_value": 2,
                    "set_page_size": 3
                },
                "param_1": {
                    "address": 3,
                    "arg1": 3,
                    "buffer": 1,
                    "destination": 1,
                    "flag": 1,
                    "input_param": 1,
                    "memory_address": 1,
                    "memory_pointer": 1,
                    "new_value": 1,
                    "page_address": 1,
                    "param": 4,
                    "param1": 3,
                    "param_1": 2,
                    "result": 4,
                    "unused_parameter": 1,
                    "unused_value": 1,
                    "value": 1
                },
                "param_2": {
                    "address": 4,
                    "arg2": 1,
                    "base_address": 2,
                    "buffer": 4,
                    "file_descriptor": 1,
                    "mem_block_ptr": 1,
                    "memory_address": 10,
                    "memory_pointer": 1,
                    "page_pointer": 1,
                    "ptr_to_memory": 1,
                    "source": 1,
                    "target_address": 3
                }
            },
            "called": [],
            "calling": [
                "FUN_0800a0ec"
            ],
            "code": "\nundefined4 initialize_memory_08008846(undefined4 param,int memory_address)\n\n{\n  *(undefined4 *)(memory_address + 4) = 0x2000;\n  return 0;\n}\n\n",
            "current_name": "initialize_memory_08008846",
            "entrypoint": "0x08008846",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008846": "initialize_memory_08008846",
                "param_1": "param",
                "param_2": "memory_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008850": {
            "additional_data": {
                "": {
                    "result": 1
                },
                "DAT_Variable1": {
                    "variable1": 1
                },
                "FUN_08008850": {
                    "check_if_true": 1,
                    "check_success": 1,
                    "get_default_value": 1,
                    "get_one": 3,
                    "get_return_value": 5,
                    "get_status": 3,
                    "initialize": 7,
                    "initialize_application": 3,
                    "initialize_program": 2,
                    "initialize_return_value": 2,
                    "is_function_successful": 1,
                    "return_one": 2
                },
                "NULL": {
                    "status": 1
                },
                "PTR_Parameter1": {
                    "parameter1": 1
                },
                "ret_val": {
                    "result": 1
                },
                "return": {
                    "result": 5,
                    "status": 2
                },
                "undefined4": {
                    "bool": 1,
                    "int": 5,
                    "status": 3,
                    "uint32_t": 1,
                    "void": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_0800a110"
            ],
            "code": "\nint initialize_application_08008850(void)\n\n{\n  result 1;\n}\n\n",
            "current_name": "initialize_application_08008850",
            "entrypoint": "0x08008850",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008850": "initialize_application_08008850",
                "return": "result",
                "undefined4": "int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008854": {
            "additional_data": {
                "DAT_": {
                    "dat_": 1
                },
                "DAT_UNKNOWN": {
                    "unknown": 1
                },
                "FUN_08008854": {
                    "get_default_value": 2,
                    "get_return_value": 3,
                    "get_zero": 1,
                    "initialize": 10,
                    "initialize_app": 1,
                    "initialize_application": 4,
                    "initialize_data": 2,
                    "initialize_function": 3,
                    "initialize_program": 3,
                    "zero_return_value": 1
                },
                "PTR_": {
                    "ptr_": 1
                },
                "PTR_NONE": {
                    "none": 1
                },
                "new_param_1": {
                    "void": 1
                },
                "original_variable_name_1": {
                    "new_variable_1": 1
                },
                "ptr_param1": {
                    "parameter1": 1
                },
                "ptr_param2": {
                    "parameter2": 1
                },
                "result": {
                    "default_value": 1
                },
                "return": {
                    "result": 1,
                    "success": 1
                },
                "undefined4": {
                    "int": 1,
                    "void": 11
                }
            },
            "called": [],
            "calling": [
                "FUN_0800a130"
            ],
            "code": "\nvoid initialize_application_08008854(void)\n\n{\n  success 0;\n}\n\n",
            "current_name": "initialize_application_08008854",
            "entrypoint": "0x08008854",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008854": "initialize_application_08008854",
                "return": "success",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008858": {
            "additional_data": {
                "DAT_08008860": {
                    "constant_value": 1
                },
                "DAT_XXXXX": {
                    "constant_value": 1
                },
                "FUN_08008858": {
                    "empty_function": 1,
                    "get_default_value": 2,
                    "get_null_value": 1,
                    "get_status": 1,
                    "get_zero": 1,
                    "handle_function": 1,
                    "initialize": 14,
                    "initialize_app": 1,
                    "initialize_application": 2,
                    "initialize_data": 1,
                    "initialize_function": 2,
                    "initialize_program": 2,
                    "initialize_return_value": 1,
                    "process_data": 1
                },
                "PTR_08008864": {
                    "pointer_data": 1
                },
                "PTR_FUN_08008858": {
                    "ptr_initialize": 1
                },
                "PTR_XXXXX": {
                    "buffer": 1
                },
                "return": {
                    "result": 2
                },
                "return_val": {
                    "return_value": 1
                },
                "return_value": {
                    "result": 1
                },
                "undefined4": {
                    "int": 3,
                    "status": 1,
                    "uint32": 1,
                    "void": 11
                }
            },
            "called": [],
            "calling": [
                "FUN_0800a168"
            ],
            "code": "\nvoid initialize_application_08008858(void)\n\n{\n  result 0;\n}\n\n",
            "current_name": "initialize_application_08008858",
            "entrypoint": "0x08008858",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008858": "initialize_application_08008858",
                "return": "result",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800885c": {
            "additional_data": {
                "FUN_0800885c": {
                    "process_and_validate_data": 24,
                    "process_data": 3,
                    "validate_and_process_data": 4
                },
                "param_1": {
                    "arg1": 2,
                    "config_param": 1,
                    "data_param": 1,
                    "data_param_1": 1,
                    "ignore1": 1,
                    "ignored_param": 1,
                    "input1": 1,
                    "input_param": 1,
                    "input_param_1": 1,
                    "param": 2,
                    "param1": 2,
                    "param_1": 3,
                    "unknown_parameter": 1,
                    "unused": 2,
                    "unused_param": 6,
                    "unused_parameter": 2
                },
                "param_2": {
                    "arg2": 2,
                    "data_1": 4,
                    "data_input1": 1,
                    "data_param": 4,
                    "data_param1": 2,
                    "data_param_1": 3,
                    "data_param_2": 1,
                    "data_parameter": 1,
                    "input1": 2,
                    "input2": 1,
                    "input_data": 1,
                    "input_data_1": 2,
                    "input_param": 1,
                    "input_param_1": 3,
                    "input_param_2": 1,
                    "param2": 1,
                    "param_2": 1
                },
                "param_3": {
                    "arg3": 2,
                    "data_2": 4,
                    "data_input2": 1,
                    "data_param2": 2,
                    "data_param_2": 3,
                    "data_param_3": 1,
                    "input2": 2,
                    "input3": 1,
                    "input_data_2": 2,
                    "input_param": 2,
                    "input_param_2": 3,
                    "input_param_3": 1,
                    "param3": 1,
                    "param_3": 1,
                    "validation_param": 2,
                    "validation_param_1": 3
                },
                "param_4": {
                    "arg4": 2,
                    "data_3": 3,
                    "data_input3": 1,
                    "data_param3": 1,
                    "data_param_3": 2,
                    "data_param_4": 1,
                    "ignore2": 1,
                    "ignored_param_2": 1,
                    "input4": 1,
                    "input_data_3": 2,
                    "input_param_3": 2,
                    "input_param_4": 1,
                    "output_param": 3,
                    "param4": 1,
                    "param_4": 1,
                    "unused": 1,
                    "unused_param": 2,
                    "unused_param_2": 1,
                    "unused_parameter": 1,
                    "validation_param_2": 3
                },
                "process_and_validate_data_08008500": {
                    "validate_data": 1
                }
            },
            "called": [
                "FUN_08008500"
            ],
            "calling": [
                "FUN_0800a042"
            ],
            "code": "\nvoid validate_and_process_data_0800885c(undefined4 unused_param,undefined4 data_param,undefined4 data_2,undefined4 data_3)\n\n{\n  validate_data(data_param,data_2,data_2,data_3,data_3);\n  return;\n}\n\n",
            "current_name": "validate_and_process_data_0800885c",
            "entrypoint": "0x0800885c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800885c": "validate_and_process_data_0800885c",
                "param_1": "unused_param",
                "param_2": "data_param",
                "param_3": "data_2",
                "param_4": "data_3",
                "process_and_validate_data_08008500": "validate_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008868": {
            "additional_data": {
                "": {
                    "": 1
                },
                "DAT_003": {
                    "data1": 1
                },
                "DAT_004": {
                    "data2": 1
                },
                "DAT_XXXX": {
                    "unchanged": 1
                },
                "DAT_XXXXX": {
                    "dat_xxxxx": 1
                },
                "FUN_08008868": {
                    "do_nothing_loop": 3,
                    "infinite_loop": 25,
                    "run_infinite_loop": 1,
                    "spin_forever": 1,
                    "wait_for_infinite_loop": 1
                },
                "PTR_001": {
                    "ptr1": 1
                },
                "PTR_002": {
                    "ptr2": 1
                },
                "PTR_08008868": {
                    "loop_pointer": 1
                },
                "PTR_XXXX": {
                    "unchanged": 1
                },
                "PTR_XXXXX": {
                    "ptr_xxxxx": 1
                },
                "do": {
                    "do": 2,
                    "infinite_loop_statement": 1
                },
                "original_function_name": {
                    "more_descriptive_function_name": 1
                },
                "true": {
                    "true": 2
                }
            },
            "called": [
                "FUN_08008868"
            ],
            "calling": [
                "FUN_08008868",
                "FUN_08009b5c"
            ],
            "code": "\nvoid wait_for_infinite_loop_08008868(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "current_name": "wait_for_infinite_loop_08008868",
            "entrypoint": "0x08008868",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008868": "wait_for_infinite_loop_08008868"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800886c": {
            "additional_data": {
                "": {
                    "": 1
                },
                "DAT_20000a38": {
                    "counter": 2,
                    "data": 1,
                    "data_counter": 1,
                    "data_initialized": 1,
                    "data_value": 6,
                    "data_variable": 1,
                    "default_counter": 1,
                    "global_var": 1,
                    "initial_value": 7,
                    "settings_value": 1
                },
                "FUN_0800886c": {
                    "initialize_data": 14,
                    "initialize_default_values": 1,
                    "initialize_global_value": 1,
                    "initialize_global_variable": 1,
                    "initialize_settings": 1,
                    "initialize_value": 5,
                    "initialize_value_and_return": 1,
                    "initialize_variable": 1,
                    "set_default_value": 1,
                    "set_initial_value": 5
                },
                "undefined4": {
                    "void": 1
                },
                "value": {
                    "new_value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08009fe8"
            ],
            "code": "\nvoid initialize_data_0800886c(void)\n\n{\n  DAT_20000a38 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "current_name": "initialize_data_0800886c",
            "entrypoint": "0x0800886c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800886c": "initialize_data_0800886c",
                "undefined4": "void"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800887c": {
            "additional_data": {
                "": {
                    "": 1
                },
                "1": {
                    "flag_initialized": 1
                },
                "DAT_": {
                    "": 1
                },
                "FUN_0800887c": {
                    "check_success": 1,
                    "get_one": 3,
                    "get_return_value": 7,
                    "get_reversed_flag": 1,
                    "get_status": 2,
                    "initialize": 5,
                    "initialize_application": 3,
                    "initialize_flag": 5,
                    "initialize_program": 1,
                    "initialize_return_value": 1,
                    "initialized_value": 1,
                    "return_one": 1
                },
                "PTR_": {
                    "": 1
                },
                "result": {
                    "status": 1
                },
                "ret_val": {
                    "result": 1
                },
                "return": {
                    "flag": 1,
                    "result": 3,
                    "return_value": 1,
                    "status": 1
                },
                "undefined4": {
                    "bool": 1,
                    "int": 6,
                    "void": 5
                }
            },
            "called": [],
            "calling": [
                "thunk_FUN_0800887c"
            ],
            "code": "\nint initialize_flag_0800887c(void)\n\n{\n  result 1;\n}\n\n",
            "current_name": "initialize_flag_0800887c",
            "entrypoint": "0x0800887c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800887c": "initialize_flag_0800887c",
                "return": "result",
                "undefined4": "int"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008880": {
            "additional_data": {
                "DAT_20000088": {
                    "shift_amount": 3
                },
                "FUN_08008880": {
                    "decode_and_extract_data": 1,
                    "decode_and_process": 2,
                    "decode_and_process_data": 5,
                    "decode_and_return_data": 1,
                    "decode_and_shift": 2,
                    "decode_and_shift_data": 7,
                    "decode_and_update_data": 1,
                    "decode_data": 2,
                    "decode_process_data": 1,
                    "process_data": 9
                },
                "bVar1": {
                    "condition_met": 1,
                    "is_in_range": 2,
                    "is_input_valid": 1,
                    "is_less_than": 1,
                    "is_less_than_0x3c": 6,
                    "is_less_than_0xe_and_less_than_0x3c": 1,
                    "is_less_than_14": 2,
                    "is_less_than_3c": 3,
                    "is_less_than_threshold": 2,
                    "is_param_valid": 1,
                    "is_small_input": 1,
                    "is_small_value": 1,
                    "is_valid": 2,
                    "is_valid_input": 1,
                    "is_valid_range": 4,
                    "is_within_range": 2
                },
                "cVar2": {
                    "char_value": 2,
                    "character": 2,
                    "data": 1,
                    "data_at_index": 1,
                    "data_value": 1,
                    "decoded_char": 7,
                    "decoded_character": 1,
                    "decoded_value": 3,
                    "extracted_data": 1,
                    "processed_char": 1,
                    "result": 4,
                    "result_byte": 1,
                    "result_char": 2,
                    "result_character": 4
                },
                "decode_and_process_data_08006d80": {
                    "decode_and_process_data": 1
                },
                "param_1": {
                    "input": 3,
                    "input_value": 28
                },
                "uVar3": {
                    "decoded_data": 3,
                    "decoded_value": 1,
                    "processed_data": 22,
                    "processed_data_result": 1,
                    "result": 4
                }
            },
            "called": [
                "FUN_08006d80"
            ],
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "code": "\nuint decode_and_process_data_08008880(uint input_value)\n\n{\n  bool is_less_than_0x3c;\n  char decoded_char;\n  uint processed_data;\n  \n  if (input_value < 0xe) {\n    if (input_value + 0x2e < 0x3c) {\n      is_less_than_0x3c = true;\n    }\n    else {\n      is_less_than_0x3c = false;\n    }\n  }\n  else {\n    is_less_than_0x3c = input_value < 0x3c;\n  }\n  if (is_less_than_0x3c) {\n    if (input_value < 0xe) {\n      input_value = input_value + 0x2e;\n    }\n    decoded_char = (&DAT_0800a908)[input_value];\n  }\n  else {\n    decoded_char = -1;\n  }\n  if (decoded_char == -1) {\n    processed_data = 0;\n  }\n  else {\n    processed_data = decode_and_process_data_08008880();\n    if (DAT_20000088 != 0xc) {\n      if (DAT_20000088 < 0xc) {\n        return processed_data >> (0xc - DAT_20000088 & 0xff);\n      }\n      return processed_data << (DAT_20000088 - 0xc & 0xff);\n    }\n  }\n  return processed_data;\n}\n\n",
            "current_name": "decode_and_process_data_08008880",
            "entrypoint": "0x08008880",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008880": "decode_and_process_data_08008880",
                "bVar1": "is_less_than_0x3c",
                "cVar2": "decoded_char",
                "decode_and_process_data_08006d80": "decode_and_process_data",
                "param_1": "input_value",
                "uVar3": "processed_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080088e0": {
            "additional_data": {
                "DAT_0800a908": {
                    "param_table": 1
                },
                "DAT_2000008c": {
                    "bit_shift_count": 1,
                    "bit_shift_value": 2,
                    "data_value": 2,
                    "shift_amount": 1
                },
                "DAT_200006d8": {
                    "bit_array": 1,
                    "encoded_bit_array": 1
                },
                "FUN_080088e0": {
                    "decode_and_process_data": 1,
                    "decode_and_update_control_flags": 1,
                    "decode_and_update_param": 3,
                    "decode_and_update_parameter": 2,
                    "process_control_signals": 1,
                    "process_param": 3,
                    "process_param_and_set_flags": 1,
                    "process_param_and_value": 2,
                    "process_param_value": 2,
                    "process_parameter": 4,
                    "process_parameter_value": 1,
                    "process_parameters": 4,
                    "process_params": 1,
                    "update_control_byte": 1,
                    "update_param_and_decode": 1,
                    "update_param_value": 1,
                    "update_value_and_flags": 1,
                    "validate_and_update_param": 1
                },
                "bitwise_set_bit_in_array_08006b3e": {
                    "bitwise_set_bit_in_array": 6,
                    "set_bit_in_array": 1
                },
                "check_param_and_string_match_0800738a": {
                    "check_if_parameter_and_string_match": 1,
                    "check_param_and_string_match": 1,
                    "check_parameter_and_string_match": 1,
                    "is_param_and_string_match": 1,
                    "is_param_string_match": 1
                },
                "decode_and_set_param_value_08008a24": {
                    "decode_and_set_param_value": 5,
                    "decode_and_set_parameter_value": 1,
                    "decode_and_set_value": 1
                },
                "get_bit_from_encoded_value_08006b28": {
                    "get_bit_from_encoded_value": 7
                },
                "iVar1": {
                    "check_result": 12,
                    "is_match": 1,
                    "is_param_match": 1,
                    "match_result": 5,
                    "param_match_result": 2,
                    "result": 8,
                    "string_match_result": 1
                },
                "iVar2": {
                    "array_index": 1,
                    "array_value": 1,
                    "char_index": 1,
                    "char_value": 6,
                    "data_lookup": 1,
                    "encoded_param": 1,
                    "encoded_value": 13,
                    "index": 2,
                    "index_value": 1,
                    "lookup_index": 1,
                    "param_opcode": 1,
                    "param_value_index": 1,
                    "signal_code": 1
                },
                "initialize_memory_and_config_08007118": {
                    "initialize_memory_and_config": 7
                },
                "param_1": {
                    "byte_index": 1,
                    "control_param": 1,
                    "data_index": 1,
                    "index": 5,
                    "input_param": 1,
                    "input_parameter1": 1,
                    "param_index": 13,
                    "param_value1": 1,
                    "parameter_index": 5,
                    "signal_index": 1,
                    "value": 1
                },
                "param_2": {
                    "data": 2,
                    "data_param": 1,
                    "data_value": 1,
                    "flags": 1,
                    "input_parameter2": 1,
                    "input_value": 1,
                    "param_value": 13,
                    "param_value2": 1,
                    "parameter_value": 4,
                    "signal_value": 1,
                    "value": 5
                },
                "reverse_control_and_update_flags_08008990": {
                    "reverse_control_and_update_flags": 5,
                    "reverse_data_and_update_flags": 1,
                    "update_flags": 1
                }
            },
            "called": [
                "FUN_08007118",
                "FUN_0800738a",
                "FUN_08006b28",
                "FUN_08006b3e",
                "FUN_08008990",
                "FUN_08008a24"
            ],
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "code": "\nvoid process_param_and_value_080088e0(uint param_index,uint param_value)\n\n{\n  int check_result;\n  int encoded_value;\n  \n  if (param_index < 0x3c) {\n    encoded_value = (int)(char)(&DAT_0800a908)[param_index];\n  }\n  else {\n    encoded_value = -1;\n  }\n  if (encoded_value != -1) {\n    check_result = check_param_and_string_match(encoded_value,&DAT_0800a6cc);\n    if (check_result == 0) {\n      reverse_control_and_update_flags(param_index,1);\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          param_value = param_value << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          param_value = param_value >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      if (param_value < 0x80) {\n        decode_and_set_param_value(param_index,0);\n      }\n      else {\n        decode_and_set_param_value(param_index,1);\n      }\n    }\n    else {\n      check_result = get_bit_from_encoded_value(encoded_value,&DAT_200006d8);\n      if (check_result == 0) {\n        bitwise_set_bit_in_array(encoded_value,&DAT_200006d8);\n      }\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          param_value = param_value << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          param_value = param_value >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      initialize_memory_and_config(encoded_value,0x3e418,0xff,param_value,check_result == 0);\n    }\n  }\n  return;\n}\n\n",
            "current_name": "process_param_and_value_080088e0",
            "entrypoint": "0x080088e0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080088e0": "process_param_and_value_080088e0",
                "bitwise_set_bit_in_array_08006b3e": "bitwise_set_bit_in_array",
                "check_param_and_string_match_0800738a": "check_param_and_string_match",
                "decode_and_set_param_value_08008a24": "decode_and_set_param_value",
                "get_bit_from_encoded_value_08006b28": "get_bit_from_encoded_value",
                "iVar1": "check_result",
                "iVar2": "encoded_value",
                "initialize_memory_and_config_08007118": "initialize_memory_and_config",
                "param_1": "param_index",
                "param_2": "param_value",
                "reverse_control_and_update_flags_08008990": "reverse_control_and_update_flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008990": {
            "additional_data": {
                "DAT_200006d8": {
                    "bit_array": 1
                },
                "DAT_200006ec": {
                    "bitwise_array": 1
                },
                "FUN_08008990": {
                    "decode_and_update": 1,
                    "decode_and_update_flags": 3,
                    "decode_and_update_registers": 3,
                    "handle_function": 1,
                    "process_bit_array": 1,
                    "process_bit_control": 1,
                    "process_bit_operation": 1,
                    "process_control_data": 1,
                    "process_control_instructions": 1,
                    "process_control_parameters": 1,
                    "process_control_register": 1,
                    "process_control_registers": 4,
                    "process_encoded_value": 3,
                    "process_flags_and_registers": 1,
                    "process_function": 1,
                    "process_input": 1,
                    "process_param_and_update_registers": 2,
                    "process_parameter": 3,
                    "reverse_control_and_update_flags": 1
                },
                "bitwise_set_bit_in_array_08006b3e": {
                    "bitwise_set_bit_in_array": 9,
                    "bitwise_set_bit_in_encoded_array": 1,
                    "set_bit_in_array": 4
                },
                "check_param_and_string_match_0800738a": {
                    "check_if_param_and_string_match": 1,
                    "check_match": 1,
                    "check_param_and_string_match": 7,
                    "check_param_string_match": 2,
                    "check_parameter_string_match": 2,
                    "check_string_match": 1
                },
                "get_bit_from_encoded_value_08006b28": {
                    "get_bit": 1,
                    "get_bit_from_encoded_array": 1,
                    "get_bit_from_encoded_value": 9,
                    "get_bit_value": 1,
                    "get_bit_value_from_encoded_data": 1
                },
                "iVar1": {
                    "bit_check_result": 3,
                    "bit_result": 21,
                    "bit_update_result": 1,
                    "bit_value": 2,
                    "is_matched": 1,
                    "result": 3
                },
                "iVar3": {
                    "bit_index": 1,
                    "bit_value": 1,
                    "char_value": 1,
                    "current_value": 1,
                    "encoded_value": 23,
                    "look_up_index": 1,
                    "table_index": 1,
                    "value": 1,
                    "value_index": 1
                },
                "param_1": {
                    "byte_offset": 1,
                    "data_index": 1,
                    "index": 19,
                    "input_index": 2,
                    "input_param": 1,
                    "input_value": 1,
                    "instruction_index": 1,
                    "param_index": 1,
                    "param_value": 1,
                    "parameter_index": 1,
                    "value_index": 2
                },
                "param_2": {
                    "control_type": 2,
                    "flag": 2,
                    "flag_index": 2,
                    "flag_type": 5,
                    "flags": 2,
                    "mode": 5,
                    "operation_type": 1,
                    "option": 2,
                    "register_mode": 1,
                    "register_update_mode": 1,
                    "register_update_type": 1,
                    "update_flag": 1,
                    "update_mode": 1,
                    "update_type": 4,
                    "value_type": 1
                },
                "param_3": {
                    "array_size": 1,
                    "control_index": 1,
                    "decode_param": 1,
                    "encoded_array": 1,
                    "flag1": 1,
                    "param": 3,
                    "param3": 1,
                    "param_3": 1,
                    "param_array": 1,
                    "param_check": 1,
                    "param_value": 3,
                    "register_index": 1,
                    "register_value": 3,
                    "unknown_param": 1,
                    "unknown_value": 1,
                    "update_type": 1,
                    "update_value": 1,
                    "updated_registers": 1,
                    "value": 7
                },
                "param_4": {
                    "array": 2,
                    "bit_array": 1,
                    "char_array": 1,
                    "data": 2,
                    "data_array": 5,
                    "decoded_array": 1,
                    "default_array": 1,
                    "default_value": 1,
                    "encoded_data": 3,
                    "encoded_value_string": 1,
                    "fallback_array": 1,
                    "flag_array": 1,
                    "input_array": 1,
                    "param4": 1,
                    "param_ptr": 1,
                    "param_string": 1,
                    "string_array": 2,
                    "string_param": 5
                },
                "puVar2": {
                    "array": 2,
                    "array_ptr": 3,
                    "bit_array": 1,
                    "char_ptr": 1,
                    "control_registers_array": 1,
                    "current_array": 1,
                    "data": 1,
                    "data_array_ptr": 1,
                    "data_array_start": 1,
                    "decoded_array_ptr": 1,
                    "encoded_array": 6,
                    "encoded_data": 1,
                    "encoded_data_ptr": 1,
                    "encoded_value_array": 1,
                    "encoded_value_ptr": 1,
                    "encoded_values": 1,
                    "encoded_values_array": 4,
                    "input_array_ptr": 1,
                    "look_up_array": 1,
                    "table_start": 1
                },
                "update_and_initialize_control_registers_080071e4": {
                    "initialize_control_registers": 6,
                    "initialize_registers": 2,
                    "update_and_initialize_control_registers": 4,
                    "update_control_registers": 1,
                    "update_initialize_registers": 1
                },
                "update_bit_in_array_08006b5c": {
                    "set_bit_in_array": 1,
                    "update_bit_in_array": 12,
                    "update_bit_in_encoded_array": 1
                },
                "update_flags_and_registers_08007258": {
                    "update_flags_and_registers": 13,
                    "update_flags_registers": 1
                }
            },
            "called": [
                "FUN_080071e4",
                "FUN_0800738a",
                "FUN_08006b5c",
                "FUN_08007258",
                "FUN_08006b28",
                "FUN_08006b3e"
            ],
            "calling": [
                "FUN_080005f8",
                "FUN_080088e0",
                "FUN_08003002",
                "FUN_080025ac"
            ],
            "code": "\nvoid reverse_control_and_update_flags_08008990(uint index,undefined4 mode,undefined4 value,undefined1 *data_array)\n\n{\n  int bit_result;\n  undefined1 *encoded_array;\n  int encoded_value;\n  \n  if (index < 0x3c) {\n    encoded_value = (int)(char)(&DAT_0800a908)[index];\n    encoded_array = &DAT_0800a908;\n  }\n  else {\n    encoded_value = -1;\n    encoded_array = data_array;\n  }\n  if (encoded_value != -1) {\n    bit_result = get_bit_from_encoded_value(encoded_value,&DAT_200006d8,value,encoded_array,data_array);\n    if (bit_result != 0) {\n      bit_result = check_param_and_string_match(encoded_value,&DAT_0800a6cc);\n      if (bit_result != 0) {\n        initialize_control_registers(encoded_value);\n      }\n      update_bit_in_array(encoded_value,&DAT_200006d8);\n    }\n    switch(mode) {\n    case 0:\n      update_flags_and_registers(encoded_value,0);\n      break;\n    case 1:\n      update_flags_and_registers(encoded_value,1,0);\n      break;\n    case 2:\n      update_flags_and_registers(encoded_value,0,1);\n      break;\n    case 3:\n      update_flags_and_registers(encoded_value,0,2);\n    }\n    bitwise_set_bit_in_array(encoded_value,&DAT_200006ec);\n  }\n  return;\n}\n\n",
            "current_name": "reverse_control_and_update_flags_08008990",
            "entrypoint": "0x08008990",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008990": "reverse_control_and_update_flags_08008990",
                "bitwise_set_bit_in_array_08006b3e": "bitwise_set_bit_in_array",
                "check_param_and_string_match_0800738a": "check_param_and_string_match",
                "get_bit_from_encoded_value_08006b28": "get_bit_from_encoded_value",
                "iVar1": "bit_result",
                "iVar3": "encoded_value",
                "param_1": "index",
                "param_2": "mode",
                "param_3": "value",
                "param_4": "data_array",
                "puVar2": "encoded_array",
                "update_and_initialize_control_registers_080071e4": "initialize_control_registers",
                "update_bit_in_array_08006b5c": "update_bit_in_array",
                "update_flags_and_registers_08007258": "update_flags_and_registers"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008a24": {
            "additional_data": {
                "DAT_0800a908": {
                    "encoded_data": 1
                },
                "FUN_08008a24": {
                    "decode_and_set_memory": 1,
                    "decode_and_set_memory_value": 2,
                    "decode_and_set_param": 1,
                    "decode_and_set_param_value": 4,
                    "decode_and_set_parameter": 1,
                    "decode_and_set_value": 1,
                    "decode_and_update_memory": 1,
                    "get_memory_value": 1,
                    "handle_parameter": 1,
                    "initialize_and_set_param_value": 1,
                    "process_data": 4,
                    "process_encoded_data": 1,
                    "process_encoded_value": 2,
                    "process_param_data": 1,
                    "process_param_values": 1,
                    "process_parameter": 2,
                    "set_param_value": 1,
                    "set_param_value_based_on_condition": 3,
                    "update_parameter_value": 2
                },
                "get_bit_from_encoded_value_08006b28": {
                    "check_bit_from_encoded_value": 1,
                    "check_bit_in_encoded_value": 1
                },
                "get_memory_address_08006b7c": {
                    "calculate_memory_address": 2
                },
                "iVar1": {
                    "bit_check_result": 1,
                    "bit_result": 18,
                    "bit_value": 5,
                    "is_condition_satisfied": 1,
                    "is_valid": 1,
                    "result": 5
                },
                "param1": {
                    "index": 1
                },
                "param2": {
                    "value1": 1
                },
                "param3": {
                    "value2": 1
                },
                "param4": {
                    "data": 1
                },
                "param_1": {
                    "index": 20,
                    "input_index": 7,
                    "input_param": 1,
                    "input_value": 2
                },
                "param_2": {
                    "condition_flag": 1,
                    "condition_param": 1,
                    "condition_value": 1,
                    "flag": 1,
                    "param2": 1,
                    "param_2": 1,
                    "param_flag": 1,
                    "param_value": 3,
                    "param_value1": 1,
                    "value": 9,
                    "value1": 4,
                    "value_1": 4,
                    "value_a": 1,
                    "value_to_set": 1
                },
                "param_3": {
                    "bit_index": 1,
                    "condition": 6,
                    "encoded_data": 2,
                    "encoded_data_param": 1,
                    "encoded_value": 3,
                    "encoding": 1,
                    "memory_address": 1,
                    "param": 1,
                    "param3": 1,
                    "param_3": 2,
                    "param_value": 1,
                    "param_value2": 1,
                    "value2": 4,
                    "value_2": 4,
                    "value_b": 1
                },
                "param_4": {
                    "base_addr_param": 1,
                    "condition": 1,
                    "data": 12,
                    "data_array": 2,
                    "data_buffer": 2,
                    "data_ptr": 2,
                    "decoded_data": 1,
                    "default_data": 1,
                    "encoded_data": 2,
                    "encoded_data_ptr": 1,
                    "encoded_value": 1,
                    "input": 1,
                    "input_data": 1,
                    "memory": 1,
                    "param4": 1
                },
                "puVar3": {
                    "base_addr_ptr": 1,
                    "data": 2,
                    "data_array": 1,
                    "data_pointer": 2,
                    "data_ptr": 5,
                    "encoded_data": 5,
                    "encoded_data_ptr": 2,
                    "encoded_data_ptr_tmp": 1,
                    "encoded_value_array": 2,
                    "encoded_values": 1,
                    "encoding_table": 1,
                    "input_array": 1,
                    "parameter_array": 1,
                    "pointer": 2,
                    "source_data": 1,
                    "source_ptr": 1
                },
                "set_param_value_based_on_condition_080072d8": {
                    "set_param_value_based_on_condition": 1,
                    "update_param_value_based_on_condition": 1
                },
                "uVar2": {
                    "address": 3,
                    "mem_address": 1,
                    "memory_address": 27
                },
                "uVar4": {
                    "bit_value": 2,
                    "data": 1,
                    "encoded_byte": 1,
                    "encoded_char": 1,
                    "encoded_value": 24,
                    "selected_value": 1
                }
            },
            "called": [
                "FUN_080072d8",
                "FUN_08006b7c",
                "FUN_08006b28"
            ],
            "calling": [
                "FUN_08002fca",
                "FUN_080005f8",
                "FUN_080088e0"
            ],
            "code": "\nvoid decode_and_set_param_value_08008a24(uint index,undefined4 value,undefined4 condition,undefined1 *data)\n\n{\n  int bit_result;\n  undefined4 memory_address;\n  undefined1 *data_ptr;\n  uint encoded_value;\n  \n  if (index < 0x3c) {\n    encoded_value = (uint)(char)(&DAT_0800a908)[index];\n    data_ptr = &DAT_0800a908;\n  }\n  else {\n    encoded_value = 0xffffffff;\n    data_ptr = data;\n  }\n  if ((encoded_value != 0xffffffff) &&\n     (bit_result = check_bit_from_encoded_value(encoded_value,&DAT_200006ec,condition,data_ptr,data), bit_result != 0)) {\n    memory_address = calculate_memory_address((encoded_value << 0x18) >> 0x1c);\n    update_param_value_based_on_condition(memory_address,1 << (encoded_value & 0xf) & 0xffff,value);\n  }\n  return;\n}\n\n",
            "current_name": "decode_and_set_param_value_08008a24",
            "entrypoint": "0x08008a24",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008a24": "decode_and_set_param_value_08008a24",
                "get_bit_from_encoded_value_08006b28": "check_bit_from_encoded_value",
                "get_memory_address_08006b7c": "calculate_memory_address",
                "iVar1": "bit_result",
                "param_1": "index",
                "param_2": "value",
                "param_3": "condition",
                "param_4": "data",
                "puVar3": "data_ptr",
                "set_param_value_based_on_condition_080072d8": "update_param_value_based_on_condition",
                "uVar2": "memory_address",
                "uVar4": "encoded_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008a6c": {
            "additional_data": {
                "FUN_08008a6c": {
                    "check_and_return_bit": 9,
                    "check_and_return_bit_value": 2,
                    "check_bit_from_encoded_value": 2,
                    "check_bit_in_encoded_data": 1,
                    "check_bit_in_encoded_value": 1,
                    "check_bit_in_mask": 2,
                    "check_bit_validity": 1,
                    "check_bit_value": 1,
                    "check_encoded_value": 1,
                    "check_if_bit_is_set": 1,
                    "check_if_bit_set": 1,
                    "check_value": 1,
                    "decode_and_check_bit": 2,
                    "decode_and_check_value": 1,
                    "decode_encoded_value": 1,
                    "extract_bit_from_encoded_value": 1,
                    "get_bit_or_zero": 1,
                    "get_bit_value": 1
                },
                "cVar1": {
                    "bit": 1,
                    "bit_value": 2,
                    "is_bit_set": 2,
                    "is_set": 1,
                    "is_valid": 1,
                    "result": 23
                },
                "iVar2": {
                    "bit": 1,
                    "bit_check": 2,
                    "bit_check_result": 2,
                    "bit_flag": 1,
                    "bit_result": 8,
                    "bit_status": 4,
                    "bit_value": 9,
                    "bit_value_checked": 1,
                    "is_bit_set_result": 1,
                    "is_encoded": 1
                },
                "param_1": {
                    "input": 1,
                    "input_index": 1,
                    "input_value": 10,
                    "value": 18
                },
                "uVar3": {
                    "address": 3,
                    "encoded_address": 1,
                    "memory_address": 26
                },
                "uVar4": {
                    "encoded_data_value": 1,
                    "encoded_value": 28,
                    "index": 1
                }
            },
            "called": [
                "FUN_08006b7c",
                "FUN_08006b28",
                "FUN_080072f0"
            ],
            "calling": [
                "FUN_08000ef8"
            ],
            "code": "\nchar check_and_return_bit_value_08008a6c(uint value)\n\n{\n  char result;\n  int bit_value;\n  undefined4 memory_address;\n  uint encoded_value;\n  \n  if (value < 0x3c) {\n    encoded_value = (uint)(char)(&DAT_0800a908)[value];\n  }\n  else {\n    encoded_value = 0xffffffff;\n  }\n  if (encoded_value == 0xffffffff) {\n    result = '\\0';\n  }\n  else {\n    bit_value = get_bit_from_encoded_value_08006b28(encoded_value,&DAT_200006ec);\n    if (bit_value == 0) {\n      result = '\\0';\n    }\n    else {\n      memory_address = get_memory_address_08006b7c((encoded_value << 0x18) >> 0x1c);\n      result = check_and_return_bit_in_mask_080072f0(memory_address,1 << (encoded_value & 0xf) & 0xffff);\n    }\n  }\n  if (result != '\\0') {\n    result = '\\x01';\n  }\n  return result;\n}\n\n",
            "current_name": "check_and_return_bit_value_08008a6c",
            "entrypoint": "0x08008a6c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008a6c": "check_and_return_bit_value_08008a6c",
                "cVar1": "result",
                "iVar2": "bit_value",
                "param_1": "value",
                "uVar3": "memory_address",
                "uVar4": "encoded_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008abc": {
            "additional_data": {
                "FUN_08008abc": {
                    "initialize_and_return_data": 1,
                    "initialize_and_return_data_values": 2,
                    "initialize_data": 1,
                    "initialize_data_and_return": 1,
                    "initialize_data_values": 26
                },
                "initialize_data_values_0800723c": {
                    "init_data_values": 2,
                    "initialize_data": 1,
                    "initialize_data_values": 24
                }
            },
            "called": [
                "FUN_0800723c"
            ],
            "calling": [
                "FUN_080022f8"
            ],
            "code": "\nvoid initialize_and_return_data_values_08008abc(void)\n\n{\n  initialize_data_values();\n  return;\n}\n\n",
            "current_name": "initialize_and_return_data_values_08008abc",
            "entrypoint": "0x08008abc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008abc": "initialize_and_return_data_values_08008abc",
                "initialize_data_values_0800723c": "initialize_data_values"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008ac4": {
            "called": [],
            "calling": [
                "FUN_08002fca",
                "FUN_08003002"
            ],
            "code": "\nvoid FUNC_08008ac4(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08008ac4",
            "entrypoint": "0x08008ac4",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08008ac4": "FUNC_08008ac4"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08008afa": {
            "additional_data": {
                "0x134": {
                    "first_offset": 1,
                    "offset1": 6,
                    "offset_1": 1,
                    "offset_a": 2,
                    "offset_value1": 1,
                    "value_1_offset": 1
                },
                "0x136": {
                    "offset2": 6,
                    "offset_2": 1,
                    "offset_b": 2,
                    "offset_value2": 1,
                    "second_offset": 1,
                    "value_2_offset": 1
                },
                "0x3f": {
                    "bit_mask": 1,
                    "bitwise_mask": 1
                },
                "0x40": {
                    "constant_offset": 1,
                    "constant_value": 2
                },
                "FUN_08008afa": {
                    "calculate_and_adjust": 1,
                    "calculate_checksum": 12,
                    "calculate_difference": 2,
                    "calculate_modified_value": 1,
                    "calculate_new_value": 1,
                    "calculate_offset": 6,
                    "calculate_result": 6,
                    "calculate_shift_value": 1,
                    "calculate_value": 1
                },
                "PTR_134": {
                    "value1": 1
                },
                "PTR_136": {
                    "value2": 1
                },
                "data_address": {
                    "param_1": 1
                },
                "param_1": {
                    "address": 2,
                    "address_offset": 1,
                    "base_address": 3,
                    "checksum_data": 1,
                    "data_address": 6,
                    "input": 1,
                    "input_value": 14,
                    "offset": 2,
                    "value": 1
                },
                "short": {
                    "ushort": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08008bf4"
            ],
            "code": "\nuushort calculate_checksum_08008afa(int input_value)\n\n{\n  return (*(ushort *)(input_value + 0x134) + 0x40) - *(ushort *)(input_value + 0x136) & 0x3f;\n}\n\n",
            "current_name": "calculate_checksum_08008afa",
            "entrypoint": "0x08008afa",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008afa": "calculate_checksum_08008afa",
                "param_1": "input_value",
                "short": "ushort"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008b66": {
            "additional_data": {
                "FUN_08008b66": {
                    "process_and_store_data": 8,
                    "process_and_store_input": 5,
                    "process_input": 6,
                    "process_input_data": 11,
                    "process_input_data_and_store": 1
                },
                "iVar1": {
                    "processing_result": 1,
                    "result": 29,
                    "return_value": 1
                },
                "local_9": {
                    "data": 3,
                    "data_element": 1,
                    "data_to_store": 2,
                    "data_value": 3,
                    "input_byte": 6,
                    "input_data": 1,
                    "input_data_byte": 1,
                    "input_value": 2,
                    "modified_value": 1,
                    "new_byte": 1,
                    "new_data": 3,
                    "new_element": 1,
                    "new_value": 2,
                    "processed_data": 3,
                    "processed_value": 1
                },
                "param_1": {
                    "data": 2,
                    "input_data": 29
                },
                "uVar2": {
                    "current_index": 1,
                    "modified_index": 2,
                    "new_index": 10,
                    "remainder": 1,
                    "updated_index": 14,
                    "updated_value": 3
                }
            },
            "called": [
                "FUN_08008600"
            ],
            "calling": [],
            "code": "\nvoid process_input_data_and_store_08008b66(int input_data)\n\n{\n  int result;\n  ushort updated_index;\n  undefined input_byte;\n  \n  result = process_input_data_08008600(input_data,&input_byte);\n  if ((result == 0) &&\n     (updated_index = *(short *)(input_data + 0x60) + 1U & 0x3f, updated_index != *(ushort *)(input_data + 0x62))) {\n    *(undefined *)(*(int *)(input_data + 0x5c) + (uint)*(ushort *)(input_data + 0x60)) = input_byte;\n    *(ushort *)(input_data + 0x60) = updated_index;\n  }\n  return;\n}\n\n",
            "current_name": "process_input_data_and_store_08008b66",
            "entrypoint": "0x08008b66",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008b66": "process_input_data_and_store_08008b66",
                "iVar1": "result",
                "local_9": "input_byte",
                "param_1": "input_data",
                "uVar2": "updated_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008bf4": {
            "called": [
                "FUN_08008afa"
            ],
            "calling": [
                "FUN_08008f1c"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08008bfa) */\n/* WARNING: Removing unreachable block (ram,0x08008c0c) */\n/* WARNING: Removing unreachable block (ram,0x08008c02) */\n/* WARNING: Removing unreachable block (ram,0x08008c14) */\n\nvoid FUNC_08008bf4(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08008bf4",
            "entrypoint": "0x08008bf4",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08008bf4": "FUNC_08008bf4"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08008c20": {
            "additional_data": {
                "0": {
                    "initial_value2": 1
                },
                "0x11": {
                    "block_starting_size": 1,
                    "constant1": 1,
                    "initial_value1": 1,
                    "value1": 1
                },
                "0x130": {
                    "block_size_offset": 1,
                    "offset1": 5
                },
                "0x134": {
                    "block_status_offset": 1,
                    "offset2": 5
                },
                "0x136": {
                    "offset3": 5,
                    "reserved_offset": 1
                },
                "0x138": {
                    "block_data_offset": 1,
                    "offset4": 5
                },
                "0x13c": {
                    "block_checksum_offset": 1,
                    "offset5": 5
                },
                "0x13e": {
                    "offset6": 5,
                    "reserved2_offset": 1
                },
                "0x51": {
                    "block_data_starting_offset": 1,
                    "constant2": 1,
                    "initial_value3": 1,
                    "value2": 1
                },
                "FUN_08008c20": {
                    "initialize_data": 11,
                    "initialize_data_structure": 2,
                    "initialize_data_structures": 1,
                    "initialize_function": 1,
                    "initialize_memory": 3,
                    "initialize_memory_block": 1,
                    "initialize_param": 1,
                    "initialize_parameters": 8,
                    "initialize_struct": 1,
                    "set_initial_values": 1,
                    "setup_parameters": 1
                },
                "baseAddress": {
                    "base_address": 1,
                    "ptr_to_data": 1
                },
                "param_1": {
                    "base_address": 17,
                    "block_address": 1,
                    "data_address": 2,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "data_struct": 2,
                    "data_structure": 1,
                    "data_structure_ptr": 1,
                    "param": 2,
                    "parameter": 1,
                    "struct_address": 1
                },
                "param_2": {
                    "new_parameter_name2": 1
                },
                "param_n": {
                    "new_parameter_name_n": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08008d30"
            ],
            "code": "\nvoid initialize_data_structure_08008c20(int base_address)\n\n{\n  *(int *)(base_address + 0x130) = base_address + 0x11;\n  *(undefined2 *)(base_address + 0x134) = 0;\n  *(undefined2 *)(base_address + 0x136) = 0;\n  *(int *)(base_address + 0x138) = base_address + 0x51;\n  *(undefined2 *)(base_address + 0x13c) = 0;\n  *(undefined2 *)(base_address + 0x13e) = 0;\n  return;\n}\n\n",
            "current_name": "initialize_data_structure_08008c20",
            "entrypoint": "0x08008c20",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008c20": "initialize_data_structure_08008c20",
                "param_1": "base_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008c44": {
            "additional_data": {
                "FUN_08008c44": {
                    "configure_serial": 1,
                    "configure_serial_interface": 1,
                    "configure_serial_port": 7,
                    "configure_serial_settings": 1,
                    "initialize_hardware_serial": 5,
                    "initialize_serial": 4,
                    "initialize_serial_communication": 3,
                    "initialize_serial_port": 6,
                    "initialize_uart": 2,
                    "set_serial_config": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "assertion_failed_function": 1,
                    "assertion_failed_handler": 7,
                    "assertion_failed_jump_table": 2,
                    "assertion_handler": 2,
                    "error_handler": 4,
                    "error_handling_function": 1,
                    "exception_handler": 1,
                    "handle_assert_failed": 1,
                    "jmp_table": 1,
                    "jump_table": 7,
                    "jumptable_function": 1
                },
                "bVar1": {
                    "bits_mask": 1,
                    "communication_settings_masked": 1,
                    "config_bits": 10,
                    "config_bits_mask": 1,
                    "config_bits_masked": 1,
                    "config_flags": 1,
                    "config_mask": 4,
                    "config_params_mask": 1,
                    "config_value": 1,
                    "configuration_bit": 1,
                    "option_mask": 2,
                    "param3_last_bits": 1,
                    "selected_option": 1,
                    "serial_config_bit": 1,
                    "serial_config_mask": 1,
                    "serial_mode": 1
                },
                "decode_and_process_assertion_failed_080090cc": {
                    "decode_and_process_assertion_failed": 2
                },
                "extraout_r1": {
                    "assertion_code": 1,
                    "assertion_index": 1,
                    "bits": 1,
                    "comparison_result": 1,
                    "config_bits": 1,
                    "config_index": 1,
                    "decoded_config": 2,
                    "decoded_settings": 1,
                    "error_code": 6,
                    "line_number": 1,
                    "memory_combination": 1,
                    "num_comb": 1,
                    "out_flag": 1,
                    "result": 2,
                    "uart_number": 1
                },
                "iVar2": {
                    "communication_mode": 1,
                    "config_bits": 1,
                    "config_count": 1,
                    "config_flag": 1,
                    "config_index": 1,
                    "config_value": 5,
                    "configuration_value": 1,
                    "control_value": 1,
                    "data_bits": 1,
                    "flags": 1,
                    "flow_control": 1,
                    "num_bits": 1,
                    "num_of_config_bits": 1,
                    "option_count": 1,
                    "uart_config": 2,
                    "uart_configuration": 1,
                    "uart_flags": 1,
                    "uart_mode": 6,
                    "uart_options": 1,
                    "uart_pins_initialized": 1,
                    "uart_pins_value": 1
                },
                "initialize_uart_pins_08008078": {
                    "initialize_uart_pins": 2
                },
                "param_1": {
                    "base_address": 1,
                    "device_address": 1,
                    "port_address": 3,
                    "port_pointer": 1,
                    "serial_address": 1,
                    "serial_config": 1,
                    "serial_instance": 3,
                    "serial_interface": 1,
                    "serial_object_addr": 1,
                    "serial_port": 8,
                    "serial_port_address": 9,
                    "uart_instance": 1
                },
                "param_2": {
                    "baud_rate": 29,
                    "baudrate": 1,
                    "param_2": 1
                },
                "param_3": {
                    "communication_settings": 1,
                    "config": 1,
                    "config_bits": 1,
                    "config_byte": 3,
                    "config_options": 1,
                    "config_params": 1,
                    "configuration": 3,
                    "configuration_byte": 1,
                    "options": 1,
                    "param_3": 1,
                    "serial_config": 15,
                    "serial_configuration": 1,
                    "settings": 1
                },
                "uRam0000012d": {
                    "result": 1,
                    "return_value": 1
                },
                "update_memory_combination_0800863c": {
                    "update_memory_combination": 2
                }
            },
            "called": [
                "FUN_0800863c",
                "FUN_08008078",
                "FUN_080090cc"
            ],
            "calling": [
                "FUN_08003048"
            ],
            "code": "\nvoid initialize_serial_port_08008c44(int serial_port_address,undefined4 baud_rate,byte serial_config)\n\n{\n  uint error_code;\n  byte config_bits;\n  int uart_mode;\n  code *jump_table;\n  \n  *(undefined4 *)(serial_port_address + 0x11c) = baud_rate;\n  *(byte *)(serial_port_address + 0x140) = serial_config;\n  config_bits = serial_config & 7;\n  if (config_bits == 4) {\n    uart_mode = 7;\n  }\n  else if (config_bits == 6) {\n    uart_mode = 8;\n  }\n  else if (config_bits == 2) {\n    uart_mode = 6;\n  }\n  else {\n    uart_mode = 0;\n  }\n  if ((serial_config & 0x30) == 0x30) {\n    *(undefined4 *)(serial_port_address + 0x128) = 0x600;\n    uart_mode = uart_mode + 1;\n  }\n  else if ((serial_config & 0x20) == 0) {\n    *(undefined4 *)(serial_port_address + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serial_port_address + 0x128) = 0x400;\n    uart_mode = uart_mode + 1;\n  }\n  if ((serial_config & 8) == 0) {\n    *(undefined4 *)(serial_port_address + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serial_port_address + 0x124) = 0x2000;\n  }\n  if (uart_mode == 8) {\n    *(undefined4 *)(serial_port_address + 0x120) = 0;\n  }\n  else if (uart_mode == 9) {\n    *(undefined4 *)(serial_port_address + 0x120) = 0x1000;\n  }\n  else {\n    uart_mode = 0;\n  }\n  if (uart_mode != 0) {\n    initialize_uart_pins(serial_port_address + 0xd4);\n    update_memory_combination(serial_port_address + 0xd4,0x8008b67);\n    return;\n  }\n  jump_table = (code *)0x8008cee;\n  decode_and_process_assertion_failed(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  if (error_code < 0x3c) {\n    return_value = (&DAT_0800a908)[error_code];\n  }\n  else {\n    return_value = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)(0,error_code,&stack0x00000148);\n  return;\n}\n\n",
            "current_name": "initialize_serial_port_08008c44",
            "entrypoint": "0x08008c44",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008c44": "initialize_serial_port_08008c44",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "bVar1": "config_bits",
                "decode_and_process_assertion_failed_080090cc": "decode_and_process_assertion_failed",
                "extraout_r1": "error_code",
                "iVar2": "uart_mode",
                "initialize_uart_pins_08008078": "initialize_uart_pins",
                "param_1": "serial_port_address",
                "param_2": "baud_rate",
                "param_3": "serial_config",
                "uRam0000012d": "return_value",
                "update_memory_combination_0800863c": "update_memory_combination"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008d00": {
            "additional_data": {
                "FUN_08008d00": {
                    "apply_jumptable": 1,
                    "parse_value": 1,
                    "process_parameter": 1,
                    "set_byte_at_position": 1,
                    "set_byte_based_on_param": 1,
                    "set_byte_in_memory": 1,
                    "set_byte_value": 6,
                    "set_byte_value_based_on_index": 1,
                    "set_character_value": 1,
                    "set_flag": 1,
                    "set_flag_and_call_function": 1,
                    "set_flag_based_on_value": 1,
                    "set_flag_value": 1,
                    "set_function_pointer_and_call": 1,
                    "set_jump_table_entry": 1,
                    "set_jump_table_value": 1,
                    "set_param_value": 1,
                    "set_return_value": 1,
                    "set_selected_value": 1,
                    "set_special_value": 1,
                    "set_threshold_value": 1,
                    "set_undefined_byte": 1,
                    "set_valid_value": 1,
                    "update_byte_value": 2,
                    "update_data": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "function_pointer": 1,
                    "function_to_call": 1,
                    "jump_table": 3,
                    "jumptable_func": 1,
                    "recovered_function": 1
                },
                "param_1": {
                    "address": 12,
                    "base_address": 6,
                    "buffer_address": 1,
                    "character_address": 1,
                    "destination": 1,
                    "destination_addr": 1,
                    "destination_address": 1,
                    "flag_address": 1,
                    "memory_address": 3,
                    "memory_offset": 1,
                    "output_address": 1,
                    "position": 1,
                    "value_address": 1
                },
                "param_2": {
                    "character_index": 1,
                    "flag_index": 1,
                    "index": 15,
                    "input_value": 2,
                    "jump_index": 1,
                    "value": 9,
                    "value_index": 2
                },
                "uVar1": {
                    "byte_value": 7,
                    "character_value": 1,
                    "entry_value": 1,
                    "flag": 1,
                    "flag_value": 2,
                    "new_value": 2,
                    "parsed_value": 1,
                    "result": 1,
                    "return_value": 1,
                    "selected_value": 1,
                    "threshold": 1,
                    "undefined_byte": 1,
                    "value": 5
                }
            },
            "called": [],
            "calling": [
                "FUN_08008d30"
            ],
            "code": "\nvoid set_byte_value_based_on_index_08008d00(int address,uint index)\n\n{\n  undefined byte_value;\n  code *jump_table;\n  \n  if (index < 0x3c) {\n    byte_value = (&DAT_0800a908)[index];\n  }\n  else {\n    byte_value = 0xff;\n  }\n  *(undefined *)(address + 0x12d) = byte_value;\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "set_byte_value_based_on_index_08008d00",
            "entrypoint": "0x08008d00",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008d00": "set_byte_value_based_on_index_08008d00",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "param_1": "address",
                "param_2": "index",
                "uVar1": "byte_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008d18": {
            "additional_data": {
                "FUN_08008d18": {
                    "assign_byte_value": 1,
                    "assign_value_to_memory": 2,
                    "set_buffer_data": 1,
                    "set_byte_at_offset": 3,
                    "set_byte_value": 11,
                    "set_byte_value_based_on_index": 1,
                    "set_fixed_value": 1,
                    "set_memory_byte": 2,
                    "set_memory_value": 2,
                    "set_pointer_value": 1,
                    "set_undefined_value": 1,
                    "update_data": 2,
                    "update_data_element": 1,
                    "update_parameter_value": 1,
                    "update_value_in_memory": 1
                },
                "param_1": {
                    "address": 6,
                    "base_address": 8,
                    "buffer_address": 1,
                    "buffer_offset": 1,
                    "data_offset": 1,
                    "destination_address": 1,
                    "memory_address": 12,
                    "offset": 1
                },
                "param_2": {
                    "index": 29,
                    "offset": 2
                },
                "uVar1": {
                    "byte_value": 6,
                    "default_value": 1,
                    "new_value": 1,
                    "updated_value": 2,
                    "value": 12,
                    "value_to_set": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08008d30"
            ],
            "code": "\nvoid set_byte_value_based_on_index_08008d18(int memory_address,uint index)\n\n{\n  undefined value;\n  \n  if (index < 0x3c) {\n    value = (&DAT_0800a908)[index];\n  }\n  else {\n    value = 0xff;\n  }\n  *(undefined *)(memory_address + 300) = value;\n  return;\n}\n\n",
            "current_name": "set_byte_value_based_on_index_08008d18",
            "entrypoint": "0x08008d18",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008d18": "set_byte_value_based_on_index_08008d18",
                "param_1": "memory_address",
                "param_2": "index",
                "uVar1": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008d30": {
            "additional_data": {
                "DAT_0800a81c": {
                    "character_array_1": 1,
                    "character_data1": 1,
                    "character_ptr1": 1,
                    "dat_0800a81c": 1,
                    "data1": 1,
                    "data_3": 1,
                    "data_array_1": 1
                },
                "DAT_0800a864": {
                    "character_array_2": 1,
                    "character_data2": 1,
                    "character_ptr2": 1,
                    "dat_0800a864": 1,
                    "data2": 1,
                    "data_5": 1,
                    "data_array_2": 1
                },
                "DAT_20000700": {
                    "byte_array": 2,
                    "dat_20000700": 1,
                    "data": 1,
                    "data_1": 1,
                    "data_2": 1,
                    "data_ptr": 1,
                    "data_structure": 1
                },
                "DAT_20000700_1": {
                    "data_2": 1
                },
                "FUN_08008d30": {
                    "initialize_data": 2,
                    "initialize_data_structure": 21,
                    "initialize_function": 1,
                    "initialize_param": 1,
                    "initialize_param_array": 1,
                    "initialize_param_structure": 1,
                    "initialize_parameters": 1,
                    "initialize_params_and_data_structure": 1,
                    "initialize_structure": 2
                },
                "PTR_LAB_08008ba4_1_0800aab8": {
                    "constant_pointer": 1,
                    "default_ptr1": 1,
                    "lab_pointer": 1,
                    "label_1": 1,
                    "pointer": 1,
                    "pointer1": 1,
                    "pointer_1": 1,
                    "ptr_lab_08008ba4_1_0800aab8": 1
                },
                "data_4": {
                    "data_4": 1
                },
                "find_character_index_or_default_0800734a": {
                    "find_char_index_or_default": 1,
                    "find_character_index": 4,
                    "find_character_index_or_default": 15,
                    "find_index_or_default": 4
                },
                "initialize_data_structure_08008c20": {
                    "initialize_data": 2,
                    "initialize_data_structure": 21,
                    "initialize_structure": 1
                },
                "param_1": {
                    "data": 2,
                    "data_array": 3,
                    "data_structure": 17,
                    "output_array": 2,
                    "param_array": 2,
                    "param_structure": 1,
                    "parameters": 1,
                    "params": 1,
                    "structure": 2
                },
                "param_2": {
                    "character": 19,
                    "character_code": 2,
                    "character_data": 1,
                    "character_id": 1,
                    "character_index": 3,
                    "character_key": 1,
                    "character_value": 3,
                    "value": 1
                },
                "param_3": {
                    "byte_value": 1,
                    "byte_value_1": 1,
                    "index": 4,
                    "index1": 2,
                    "index_1": 4,
                    "index_value": 4,
                    "value": 5,
                    "value1": 1,
                    "value_1": 9
                },
                "param_4": {
                    "byte_value": 1,
                    "byte_value_2": 1,
                    "byte_value_index": 1,
                    "default_value": 1,
                    "index": 5,
                    "index2": 2,
                    "index_2": 4,
                    "offset": 1,
                    "other_value": 1,
                    "value": 4,
                    "value2": 1,
                    "value_2": 9
                },
                "set_byte_value_based_on_index_08008d00": {
                    "set_byte_value": 7,
                    "set_byte_value_1": 1,
                    "set_byte_value_at_index": 1,
                    "set_byte_value_based_on_index": 5,
                    "set_byte_value_based_on_index_1": 4,
                    "set_value_at_index1": 1
                },
                "set_byte_value_based_on_index_08008d18": {
                    "set_byte_default": 1,
                    "set_byte_value_2": 1,
                    "set_byte_value_at_index": 1,
                    "set_byte_value_based_on_index": 5,
                    "set_byte_value_based_on_index_2": 4,
                    "set_byte_value_default": 1,
                    "set_byte_value_from_index": 1,
                    "set_byte_value_with_default": 1,
                    "set_default_byte_value": 3,
                    "set_value_at_index2": 1
                },
                "uVar1": {
                    "char_index": 1,
                    "character_index": 20,
                    "character_index_default": 1,
                    "character_index_value": 1,
                    "found_character": 1,
                    "found_index": 1,
                    "index": 6
                }
            },
            "called": [
                "FUN_08008c20",
                "FUN_0800734a",
                "FUN_08008d18",
                "FUN_08008d00"
            ],
            "calling": [
                "FUN_08008d8c"
            ],
            "code": "\nundefined4 *\ninitialize_params_and_data_structure_08008d30(undefined4 *data_structure,undefined4 character,undefined4 value_1,undefined4 value_2)\n\n{\n  undefined character_index;\n  \n  data_structure[1] = 0;\n  data_structure[2] = 1000;\n  *data_structure = &PTR_LAB_08008ba4_1_0800aab8;\n  if (data_structure == (undefined4 *)&DAT_20000700) {\n    set_byte_value(&DAT_20000700,0,value_1,&DAT_20000700,value_2);\n    set_byte_value_based_on_index(&DAT_20000700,1);\n  }\n  else {\n    character_index = find_character_index_or_default(character,&DAT_0800a81c);\n    *(undefined *)((int)data_structure + 0x12d) = character_index;\n    character_index = find_character_index_or_default(character,&DAT_0800a864);\n    *(undefined *)(data_structure + 0x4b) = character_index;\n  }\n  initialize_data_structure(data_structure);\n  return data_structure;\n}\n\n",
            "current_name": "initialize_params_and_data_structure_08008d30",
            "entrypoint": "0x08008d30",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008d30": "initialize_params_and_data_structure_08008d30",
                "find_character_index_or_default_0800734a": "find_character_index_or_default",
                "initialize_data_structure_08008c20": "initialize_data_structure",
                "param_1": "data_structure",
                "param_2": "character",
                "param_3": "value_1",
                "param_4": "value_2",
                "set_byte_value_based_on_index_08008d00": "set_byte_value",
                "set_byte_value_based_on_index_08008d18": "set_byte_value_based_on_index",
                "uVar1": "character_index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008d8c": {
            "additional_data": {
                "0x40004400": {
                    "buffer": 1
                },
                "DAT_20000700": {
                    "data_structure": 2
                },
                "DAT_40004400": {
                    "other_data_structure": 1
                },
                "FUN_08008d8c": {
                    "initialize_data_structure": 14,
                    "initialize_data_structure_if_param_1_is_1": 2,
                    "initialize_data_structure_if_param_1_is_one": 1,
                    "initialize_if_needed": 1,
                    "initialize_if_param1_equals_1": 1,
                    "initialize_if_param1_is_one": 1,
                    "initialize_if_param1_is_true": 1,
                    "initialize_if_parameter_is_1": 1,
                    "initialize_if_parameter_is_one": 1,
                    "initialize_if_params_valid": 1,
                    "initialize_if_required": 1,
                    "initialize_params": 1,
                    "initialize_params_if_condition_met": 1,
                    "initialize_params_if_needed": 1,
                    "initialize_params_if_param1_is_one": 1,
                    "initialize_structure_if_param1_equals_1": 1,
                    "initialize_structure_if_param1_is_1": 1
                },
                "initialize_params_and_data_structure_08008d30": {
                    "initialize_params_and_data_structure": 1,
                    "initialize_structure": 1
                },
                "param_1": {
                    "check_param_1": 1,
                    "condition": 3,
                    "condition_check": 1,
                    "flag": 5,
                    "input_flag": 3,
                    "input_value": 1,
                    "is_param1": 2,
                    "is_param_1_one": 1,
                    "is_param_one": 1,
                    "is_parameter_1": 1,
                    "is_valid": 1,
                    "mode": 1,
                    "param1": 2,
                    "param_condition": 1,
                    "status": 5,
                    "value_to_check": 1
                },
                "param_2": {
                    "check_param_2": 1,
                    "code": 1,
                    "comparison_value": 1,
                    "flag": 3,
                    "is_parameter_2": 1,
                    "param2": 4,
                    "param_2_value": 1,
                    "param_two": 1,
                    "param_value": 3,
                    "parameter": 1,
                    "special_value": 1,
                    "status_code": 1,
                    "value": 10,
                    "value_to_compare": 1
                },
                "param_3": {
                    "address1": 1,
                    "arg1": 1,
                    "data": 1,
                    "data_1": 1,
                    "first_parameter": 1,
                    "initialized_param_3": 1,
                    "param": 1,
                    "param1": 2,
                    "param3": 4,
                    "param_3": 6,
                    "param_3_value": 1,
                    "param_a": 2,
                    "param_data": 1,
                    "param_three": 1,
                    "param_value_1": 1,
                    "parameter_1": 2,
                    "size": 1,
                    "startup_param": 1,
                    "value1": 1,
                    "value_1": 1
                },
                "param_4": {
                    "address2": 1,
                    "arg2": 1,
                    "data_2": 1,
                    "data_structure": 1,
                    "initialized_param_4": 1,
                    "param": 1,
                    "param2": 2,
                    "param4": 5,
                    "param_4": 6,
                    "param_4_value": 1,
                    "param_b": 2,
                    "param_descriptor": 1,
                    "param_four": 1,
                    "param_value_2": 1,
                    "parameter": 1,
                    "parameter_2": 2,
                    "second_parameter": 1,
                    "value2": 1,
                    "value_2": 1
                }
            },
            "called": [
                "FUN_08008d30"
            ],
            "calling": [],
            "code": "\nvoid initialize_data_structure_if_param_1_is_one_08008d8c(int flag,int value,undefined4 param_3,undefined4 param_4)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    initialize_structure(&DAT_20000700,0x40004400,param_3,0xffff,param_4);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_structure_if_param_1_is_one_08008d8c",
            "entrypoint": "0x08008d8c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008d8c": "initialize_data_structure_if_param_1_is_one_08008d8c",
                "initialize_params_and_data_structure_08008d30": "initialize_structure",
                "param_1": "flag",
                "param_2": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008df8": {
            "additional_data": {
                "FUN_08008df8": {
                    "initialize_data": 23,
                    "initialize_parameters": 1,
                    "initialize_params": 3,
                    "initialize_pointer": 1,
                    "populate_data": 1,
                    "set_data": 2
                },
                "param_1": {
                    "data": 2,
                    "data_pointer": 15,
                    "data_ptr": 5,
                    "output": 2,
                    "output_pointer": 4,
                    "output_ptr": 3
                },
                "param_2": {
                    "data_1": 1,
                    "param2": 1,
                    "param_2": 2,
                    "value1": 23,
                    "value_1": 4
                },
                "param_3": {
                    "data_2": 1,
                    "param3": 1,
                    "param_3": 2,
                    "value2": 23,
                    "value_2": 4
                },
                "param_4": {
                    "data_3": 1,
                    "param4": 1,
                    "param_4": 2,
                    "value3": 23,
                    "value_3": 4
                },
                "param_5": {
                    "data_4": 1,
                    "param5": 1,
                    "param_5": 2,
                    "value4": 23,
                    "value_4": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_08008e14"
            ],
            "code": "\nvoid initialize_data_08008df8(undefined4 *data_pointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *data_pointer = &DAT_0800ab0c;\n  *(undefined *)(data_pointer + 1) = value1;\n  *(undefined *)((int)data_pointer + 5) = value2;\n  *(undefined *)((int)data_pointer + 6) = value3;\n  *(undefined *)((int)data_pointer + 7) = value4;\n  return;\n}\n\n",
            "current_name": "initialize_data_08008df8",
            "entrypoint": "0x08008df8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008df8": "initialize_data_08008df8",
                "param_1": "data_pointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008e14": {
            "additional_data": {
                "DAT_20000844": {
                    "data": 1,
                    "data_buffer": 1,
                    "data_variable": 1,
                    "special_data": 1
                },
                "FUN_08008e14": {
                    "initialize_data": 1,
                    "initialize_data_if_condition": 3,
                    "initialize_data_if_condition_is_met": 2,
                    "initialize_data_if_condition_met": 9,
                    "initialize_data_if_condition_true": 1,
                    "initialize_data_if_param1_is_1_and_param2_is_0xffff": 3,
                    "initialize_data_if_params_valid": 1,
                    "initialize_if_condition": 5,
                    "initialize_if_conditions": 1,
                    "initialize_if_param_1_is_1_and_param_2_is_ffff": 1,
                    "initialize_if_parameters_match": 1,
                    "initialize_if_params_match": 1,
                    "initialize_if_valid_params": 1,
                    "initialize_special_data": 1
                },
                "initialize_data_08008df8": {
                    "initialize_data": 6
                },
                "param_1": {
                    "check_value": 1,
                    "condition_1": 8,
                    "condition_param": 2,
                    "data_exists": 1,
                    "first_parameter": 1,
                    "flag": 3,
                    "input_condition": 1,
                    "input_param": 1,
                    "is_condition_met": 1,
                    "is_one": 2,
                    "is_param1_1": 2,
                    "is_param1_equals_1": 1,
                    "is_param1_valid": 1,
                    "is_param_1_equal_to_1": 1,
                    "is_param_1_equal_to_one": 1,
                    "is_param_1_one": 1,
                    "param_1": 1,
                    "status": 1,
                    "status_flag": 1
                },
                "param_2": {
                    "comparison_value": 1,
                    "condition_2": 8,
                    "data_value": 1,
                    "input_value": 1,
                    "is_ffff": 1,
                    "is_max_value": 1,
                    "is_param2_0xffff": 2,
                    "is_param2_equals_0xffff": 1,
                    "is_param2_valid": 1,
                    "is_param_2_equal_to_0xffff": 1,
                    "is_param_2_equal_to_max": 1,
                    "is_param_2_max_value": 1,
                    "is_value_max": 1,
                    "other_param": 1,
                    "param_2": 1,
                    "second_parameter": 1,
                    "value": 4,
                    "value_flag": 1,
                    "value_param": 2
                }
            },
            "called": [
                "FUN_08008df8"
            ],
            "calling": [],
            "code": "\nvoid initialize_data_if_condition_is_met_08008e14(int condition_1,int condition_2)\n\n{\n  if ((condition_1 == 1) && (condition_2 == 0xffff)) {\n    initialize_data(&DAT_20000844,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_data_if_condition_is_met_08008e14",
            "entrypoint": "0x08008e14",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008e14": "initialize_data_if_condition_is_met_08008e14",
                "initialize_data_08008df8": "initialize_data",
                "param_1": "condition_1",
                "param_2": "condition_2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008ef4": {
            "additional_data": {
                "FUN_08008ef4": {
                    "calculate_adjusted_value": 2,
                    "calculate_difference": 2,
                    "calculate_interpolation": 7,
                    "calculate_interpolation_value": 2,
                    "calculate_linear_interpolation": 2,
                    "calculate_new_value": 9,
                    "calculate_offset": 1,
                    "calculate_result": 1,
                    "calculate_value_difference": 1,
                    "calculate_weighted_average": 2,
                    "interpolate_values": 1,
                    "linear_interpolation": 1
                },
                "param_1": {
                    "current_value": 1,
                    "first_input": 1,
                    "first_value": 4,
                    "initial_value": 6,
                    "initial_value_1": 1,
                    "min_input": 1,
                    "new_value_1": 1,
                    "previous_value": 1,
                    "start_value": 10,
                    "value1": 1,
                    "value1_start": 1,
                    "value_1": 2,
                    "x_value_first_point": 1
                },
                "param_2": {
                    "end_value": 1,
                    "initial_boundary": 1,
                    "initial_input": 1,
                    "initial_parameter": 1,
                    "initial_reference_value": 1,
                    "initial_value_2": 1,
                    "min_output": 1,
                    "new_value_2": 1,
                    "previous_step": 1,
                    "previous_value": 4,
                    "second_input": 1,
                    "second_value": 5,
                    "start_parameter": 2,
                    "start_point": 2,
                    "start_position": 1,
                    "start_range": 2,
                    "value2": 1,
                    "value2_start": 1,
                    "value_2": 2,
                    "y_value_first_point": 1
                },
                "param_3": {
                    "current_step": 1,
                    "end_parameter": 2,
                    "end_point": 2,
                    "end_position": 1,
                    "end_range": 1,
                    "end_value": 2,
                    "final_boundary": 1,
                    "final_input": 1,
                    "final_parameter": 1,
                    "final_reference_value": 1,
                    "final_value": 2,
                    "final_value_2": 1,
                    "max_output": 1,
                    "max_value": 1,
                    "mid_value": 1,
                    "new_value_3": 1,
                    "target_value": 1,
                    "third_input": 1,
                    "third_value": 4,
                    "value2_end": 1,
                    "value3": 1,
                    "value_3": 2,
                    "x_value_second_point": 1
                },
                "param_4": {
                    "fourth_value": 1,
                    "initial_adjusted_value": 1,
                    "initial_output": 1,
                    "initial_result": 2,
                    "initial_value": 3,
                    "initial_weight": 1,
                    "lower_limit": 2,
                    "min_input_range": 1,
                    "min_value": 2,
                    "new_value_4": 1,
                    "output_min": 1,
                    "start_offset": 1,
                    "start_output": 2,
                    "start_position": 1,
                    "start_range": 1,
                    "start_result": 2,
                    "start_value": 4,
                    "start_weight": 1,
                    "value1_end": 1,
                    "value4": 1,
                    "y_value_second_point": 1
                },
                "param_5": {
                    "desired_final_value": 1,
                    "end_offset": 1,
                    "end_output": 2,
                    "end_position": 1,
                    "end_range": 1,
                    "end_result": 2,
                    "end_value": 4,
                    "end_weight": 1,
                    "fifth_value": 1,
                    "final_adjusted_value": 1,
                    "final_output": 1,
                    "final_result": 2,
                    "final_value": 1,
                    "final_weight": 1,
                    "max_input_range": 1,
                    "max_value": 1,
                    "new_value_5": 1,
                    "output_value": 1,
                    "target_value": 1,
                    "updated_value": 1,
                    "upper_limit": 2,
                    "value5": 1,
                    "value_difference": 1,
                    "x_value_interpolation": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080026b0"
            ],
            "code": "\nint calculate_adjusted_value_08008ef4(int start_value,int second_value,int third_value,int start_value,int end_value)\n\n{\n  return (uint)((end_value - start_value) * (start_value - second_value)) / (uint)(third_value - second_value) + start_value;\n}\n\n",
            "current_name": "calculate_adjusted_value_08008ef4",
            "entrypoint": "0x08008ef4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008ef4": "calculate_adjusted_value_08008ef4",
                "param_1": "start_value",
                "param_2": "second_value",
                "param_3": "third_value",
                "param_4": "start_value",
                "param_5": "end_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008f0c": {
            "called": [],
            "calling": [
                "FUN_08008f1c"
            ],
            "code": "\nvoid FUNC_08008f0c(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08008f0c",
            "entrypoint": "0x08008f0c",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08008f0c": "FUNC_08008f0c"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08008f0e": {
            "additional_data": {
                "FUN_08008f0e": {
                    "execute_data_update": 1,
                    "execute_system_update": 10,
                    "execute_update": 4,
                    "execute_update_and_initialize_system": 1,
                    "initialize_and_execute_system_update": 1,
                    "initialize_and_execute_update": 6,
                    "initialize_and_update_system": 3,
                    "update_and_execute": 2,
                    "update_and_execute_system": 2,
                    "update_register_and_execute_system": 1
                },
                "initialize_system_and_execute_update_080036a2": {
                    "execute_system_update": 2,
                    "execute_update_and_initialize_system": 1,
                    "execute_update_in_initializing_system": 1,
                    "init_and_execute_update": 1,
                    "initialize_and_execute_system_update": 1,
                    "initialize_and_execute_update": 21,
                    "initialize_execute_update": 1,
                    "initialize_system": 1,
                    "initialize_system_and_execute_update": 1,
                    "run_update_with_system_initialization": 1
                },
                "update_value_in_register_08003f0c": {
                    "set_register_value": 15,
                    "set_value_in_register": 1,
                    "update_register_value": 15
                }
            },
            "called": [
                "FUN_08003f0c",
                "FUN_080036a2"
            ],
            "calling": [
                "FUN_08009148"
            ],
            "code": "\nvoid update_register_and_execute_system_08008f0e(void)\n\n{\n  update_register_value(3);\n  initialize_and_execute_update();\n  return;\n}\n\n",
            "current_name": "update_register_and_execute_system_08008f0e",
            "entrypoint": "0x08008f0e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008f0e": "update_register_and_execute_system_08008f0e",
                "initialize_system_and_execute_update_080036a2": "initialize_and_execute_update",
                "update_value_in_register_08003f0c": "update_register_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008f1c": {
            "additional_data": {
                "FUNC_08008bf4": {
                    "cleanup": 14,
                    "cleanup_processing": 1,
                    "finalize_firmware_process": 1,
                    "finalize_firmware_processing": 1,
                    "finalize_processing": 5,
                    "finalize_program": 1,
                    "finalize_system_components": 1,
                    "perform_additional_operations": 1,
                    "perform_cleanup": 2,
                    "post_process": 1,
                    "post_processing": 2,
                    "update_firmware": 1
                },
                "FUNC_08008f0c": {
                    "execute_preprocessing": 1,
                    "execute_startup_code": 1,
                    "initialize": 5,
                    "initialize_components": 1,
                    "initialize_firmware": 5,
                    "initialize_hardware": 3,
                    "initialize_hardware_components": 1,
                    "initialize_other_components": 1,
                    "initialize_subsystems": 1,
                    "initialize_system": 5,
                    "initialize_system_components": 1,
                    "perform_initialization": 1,
                    "pre_firmware": 1,
                    "pre_initialization": 1,
                    "run_preprocessing": 1,
                    "startup_sequence": 1
                },
                "FUN_08008f1c": {
                    "continue_processing_data": 1,
                    "execute_firmware": 1,
                    "initialize_firmware": 1,
                    "main_loop": 5,
                    "process_data": 1,
                    "process_data_continuously": 1,
                    "process_firmware": 4,
                    "process_firmware_data": 6,
                    "run_application": 1,
                    "run_decode_and_process_loop": 1,
                    "run_firmware": 2,
                    "run_firmware_processing": 5,
                    "run_firmware_processing_loop": 1,
                    "run_program": 1
                },
                "decode_and_process_data_080022f8": {
                    "decode_and_process": 1,
                    "decode_and_process_data": 22,
                    "decode_and_process_firmware_data": 1,
                    "process_data": 5,
                    "process_decoded_data": 1,
                    "process_encoded_data": 1
                },
                "initialize_firmware_components_08001b48": {
                    "init_components": 2,
                    "initialize_components": 7,
                    "initialize_firmware_components": 22
                }
            },
            "called": [
                "FUN_080022f8",
                "FUN_08008bf4",
                "FUN_08008f0c",
                "FUN_08001b48"
            ],
            "calling": [
                "entry"
            ],
            "code": "\nvoid process_firmware_data_08008f1c(void)\n\n{\n  FUNC_08008f0c();\n  initialize_firmware_components();\n  do {\n    decode_and_process_data();\n    FUNC_08008bf4();\n  } while( true );\n}\n\n",
            "current_name": "process_firmware_data_08008f1c",
            "entrypoint": "0x08008f1c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008f1c": "process_firmware_data_08008f1c",
                "decode_and_process_data_080022f8": "decode_and_process_data",
                "initialize_firmware_components_08001b48": "initialize_firmware_components"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008f3c": {
            "additional_data": {
                "FUN_08008f3c": {
                    "bit_count": 1,
                    "calculate_bit_count": 1,
                    "count_bits": 5,
                    "count_bits_set": 3,
                    "count_set_bits": 21
                },
                "cVar1": {
                    "bit_count": 25,
                    "bits_count": 1,
                    "count": 5
                },
                "param_1": {
                    "input": 7,
                    "input_num": 1,
                    "input_number": 1,
                    "n": 1,
                    "num": 8,
                    "number": 12,
                    "value": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08009094"
            ],
            "code": "\nchar count_bits_set_08008f3c(uint number)\n\n{\n  char bit_count;\n  \n  bit_count = '\\0';\n  for (; number != 1; number = number >> 1) {\n    bit_count = bit_count + '\\x01';\n  }\n  return bit_count;\n}\n\n",
            "current_name": "count_bits_set_08008f3c",
            "entrypoint": "0x08008f3c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008f3c": "count_bits_set_08008f3c",
                "cVar1": "bit_count",
                "param_1": "number"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08008f78": {
            "additional_data": {
                "FUN_08008f78": {
                    "initialize_config": 1,
                    "initialize_data": 16,
                    "initialize_data_structure": 1,
                    "initialize_game_data": 1,
                    "initialize_memory": 1,
                    "initialize_parameters": 5,
                    "initialize_params": 2,
                    "initialize_settings": 2,
                    "initialize_values": 2
                },
                "LAB_08008f50_1": {
                    "data_label": 1,
                    "label": 5,
                    "label_08008f50_1": 1,
                    "shift_function": 2,
                    "unused3": 3,
                    "unused_label": 4
                },
                "flag": {
                    "flag": 3
                },
                "initializeData": {
                    "initialize_data": 3
                },
                "initializeParameters": {
                    "initialize_parameters": 1
                },
                "label": {
                    "label": 1
                },
                "param_1": {
                    "condition": 9,
                    "condition1": 1,
                    "count": 1,
                    "flag": 11,
                    "game_mode": 1,
                    "initialize_flag": 1,
                    "parameter": 1,
                    "status": 4,
                    "value": 1,
                    "value1": 1
                },
                "param_2": {
                    "check_value": 1,
                    "code": 2,
                    "condition2": 1,
                    "constant": 1,
                    "flag": 2,
                    "magic_number": 1,
                    "param2": 1,
                    "value": 21,
                    "value2": 1
                },
                "param_3": {
                    "arg1": 1,
                    "param3": 2,
                    "param_3": 1,
                    "undefined1": 1,
                    "unimportant_param1": 1,
                    "unknown_param": 1,
                    "unknown_param3": 1,
                    "unused1": 11,
                    "unused_param": 4,
                    "unused_param1": 3,
                    "unused_param3": 2,
                    "unused_param_1": 2
                },
                "param_4": {
                    "arg2": 1,
                    "flag": 1,
                    "param": 2,
                    "param4": 2,
                    "param_4": 2,
                    "unimportant_param2": 1,
                    "unknown_param4": 1,
                    "unused2": 11,
                    "unused_param": 1,
                    "unused_param2": 4,
                    "unused_param4": 2,
                    "unused_param_2": 2
                },
                "parameter": {
                    "parameter": 1
                },
                "shift_left_by32_bits_080090c2": {
                    "shift_bits_left_by32": 2,
                    "shift_data": 1,
                    "shift_data_by32_bits": 2,
                    "shift_data_left_by32_bits": 1,
                    "shift_left_by32_bits": 13
                },
                "status": {
                    "status": 2
                },
                "unusedParam3": {
                    "unused_param3": 1
                },
                "unusedParam4": {
                    "unused_param4": 1
                },
                "value": {
                    "value": 5
                }
            },
            "called": [
                "FUN_080090c2"
            ],
            "calling": [],
            "code": "\nvoid initialize_game_data_08008f78(int flag,int value,undefined4 unused1,undefined4 unused2)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_2000084c = 6;\n    DAT_20000858 = 0;\n    DAT_20000860 = 7;\n    DAT_2000086c = 0;\n    DAT_20000874 = 8;\n    DAT_20000880 = 0;\n    DAT_20000888 = 9;\n    DAT_20000894 = 0;\n    DAT_2000089c = 10;\n    DAT_200008a8 = 0;\n    DAT_200008b0 = 0x17;\n    DAT_200008bc = 0;\n    DAT_200008c4 = 0x17;\n    DAT_200008d0 = 0;\n    DAT_200008d8 = 0x17;\n    DAT_200008e4 = 0;\n    DAT_200008ec = 0x17;\n    DAT_200008f8 = 0;\n    DAT_20000900 = 0x17;\n    DAT_2000090c = 0;\n    DAT_20000914 = 0x28;\n    DAT_20000920 = 0;\n    DAT_20000928 = 0x28;\n    DAT_20000934 = 0;\n    DAT_2000093c = 0x28;\n    DAT_20000948 = 0;\n    DAT_20000950 = 0x28;\n    DAT_2000095c = 0;\n    DAT_20000964 = 0x28;\n    DAT_20000970 = 0;\n    DAT_20000978 = 0x28;\n    DAT_20000984 = 0;\n    shift_left_by32_bits(0,&label,&DAT_20000000,&DAT_2000084c,unused2);\n  }\n  return;\n}\n\n",
            "current_name": "initialize_game_data_08008f78",
            "entrypoint": "0x08008f78",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08008f78": "initialize_game_data_08008f78",
                "LAB_08008f50_1": "label",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "unused1",
                "param_4": "unused2",
                "shift_left_by32_bits_080090c2": "shift_left_by32_bits"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009084": {
            "additional_data": {
                "DAT_20000858": {
                    "data_array": 1,
                    "data_table": 1
                },
                "FUN_08009084": {
                    "handle_data": 1,
                    "handle_data_and_events": 1,
                    "handle_data_processing": 1,
                    "handle_event": 1,
                    "process_and_handle": 1,
                    "process_and_handle_events": 3,
                    "process_bit_operations": 1,
                    "process_data": 1,
                    "process_data_and_events": 1,
                    "process_data_and_handle_events": 5,
                    "process_event": 6,
                    "process_events": 6,
                    "process_or_execute": 1,
                    "process_or_recurse": 1,
                    "process_or_retry": 1
                },
                "count_bits_set_08008f3c": {
                    "count_set_bits": 16,
                    "get_set_bit_count": 1
                },
                "iVar1": {
                    "bit_count": 24,
                    "bits_count": 2,
                    "bits_set_count": 3,
                    "num_bits_set": 2
                },
                "param_1": {
                    "data": 7,
                    "data_pointer": 1,
                    "data_ptr": 3,
                    "data_start_address": 1,
                    "event": 1,
                    "event_data": 5,
                    "event_handler": 1,
                    "event_id": 1,
                    "event_param": 2,
                    "input": 4,
                    "input_data": 2,
                    "input_param": 1,
                    "input_parameter": 1,
                    "process_data": 1
                },
                "process_data_and_handle_events_0800a18c": {
                    "handle_event": 1,
                    "handle_events": 1,
                    "process_data": 2,
                    "process_data_and_handle_events": 11,
                    "process_data_and_handle_events_2": 1
                }
            },
            "called": [
                "FUN_0800a18c"
            ],
            "calling": [
                "FUN_08009094"
            ],
            "code": "\nvoid process_data_and_handle_events_08009084(int data)\n\n{\n  int bit_count;\n  \n  if (*(int *)(data + 8) != 0) {\n    (**(code **)(data + 0xc))();\n    return;\n  }\n  process_data_and_handle_events_08009084();\n  bit_count = count_set_bits();\n  if ((&DAT_20000858)[bit_count * 5] != 0) {\n    process_data_and_handle_events_08009084();\n  }\n  return;\n}\n\n",
            "current_name": "process_data_and_handle_events_08009084",
            "entrypoint": "0x08009084",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009084": "process_data_and_handle_events_08009084",
                "count_bits_set_08008f3c": "count_set_bits",
                "iVar1": "bit_count",
                "param_1": "data",
                "process_data_and_handle_events_0800a18c": "process_data_and_handle_events"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009094": {
            "additional_data": {
                "DAT_20000858": {
                    "data_array": 1
                },
                "FUN_08009094": {
                    "check_and_process_data": 4,
                    "check_and_process_data_events": 1,
                    "check_and_process_events": 1,
                    "check_bit_count_and_process_data": 1,
                    "handle_bit_set": 1,
                    "handle_data_and_events": 3,
                    "handle_data_events": 6,
                    "handle_data_if_bit_is_set": 1,
                    "handle_data_if_bit_set": 2,
                    "handle_data_if_set_bits": 1,
                    "handle_data_processing": 1,
                    "handle_data_processing_and_events": 1,
                    "handle_events_if_bit_set": 1,
                    "handle_events_if_bits_set": 1,
                    "process_bit_count": 1,
                    "process_data_if_bits_set": 1,
                    "process_if_bit_set": 1,
                    "process_if_bits_are_set": 1,
                    "process_if_bits_set": 1,
                    "process_if_set_bits": 1
                },
                "count_bits_set_08008f3c": {
                    "calculate_bit_count": 1,
                    "calculate_set_bits_count": 1,
                    "compute_set_bit_count": 1,
                    "count_set_bits": 14,
                    "get_bit_count": 2,
                    "get_set_bit_count": 1,
                    "get_set_bits_count": 4
                },
                "iVar1": {
                    "bit_count": 16,
                    "bits_set_count": 1,
                    "count": 1,
                    "num_set_bits": 2,
                    "number_of_bits": 1,
                    "number_of_bits_set": 1,
                    "set_bit_count": 1,
                    "set_bits_count": 6
                },
                "process_data_and_handle_events_08009084": {
                    "handle_data_and_events": 6,
                    "process_and_handle_data": 1,
                    "process_and_handle_events": 1,
                    "process_data": 2,
                    "process_data_and_events": 2,
                    "process_data_and_handle_events": 8,
                    "process_data_and_notify_events": 1,
                    "process_data_events": 2
                }
            },
            "called": [
                "FUN_08009084",
                "FUN_08008f3c"
            ],
            "calling": [
                "FUN_080042f0"
            ],
            "code": "\nvoid handle_data_processing_and_events_08009094(void)\n\n{\n  int bit_count;\n  \n  bit_count = count_set_bits();\n  if ((&DAT_20000858)[bit_count * 5] != 0) {\n    process_data_and_handle_events();\n  }\n  return;\n}\n\n",
            "current_name": "handle_data_processing_and_events_08009094",
            "entrypoint": "0x08009094",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009094": "handle_data_processing_and_events_08009094",
                "count_bits_set_08008f3c": "count_set_bits",
                "iVar1": "bit_count",
                "process_data_and_handle_events_08009084": "process_data_and_handle_events"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080090c2": {
            "additional_data": {
                "FUN_080090c2": {
                    "shift_left_32_bits": 1,
                    "shift_left_by32": 1,
                    "shift_left_by32_bits": 18,
                    "shift_left_by_32": 1,
                    "shift_left_by_32_bits": 10
                },
                "param_1": {
                    "input": 1,
                    "input1": 5,
                    "input_1": 7,
                    "input_param": 3,
                    "input_value": 10,
                    "shift_amount": 1,
                    "shifted_value": 1,
                    "source": 3
                },
                "param_2": {
                    "destination": 3,
                    "input2": 5,
                    "input_2": 7,
                    "output": 1,
                    "output_param": 1,
                    "shift_amount": 7,
                    "shift_param": 2,
                    "shift_value": 3,
                    "value_to_shift": 2
                }
            },
            "called": [
                "FUN_08009108"
            ],
            "calling": [
                "FUN_08008f78"
            ],
            "code": "\nvoid shift_left_by32_bits_080090c2(undefined4 input_value,undefined4 shift_amount)\n\n{\n  shift_left_by32_bits_080090c2_08009108(shift_amount,input_value);\n  return;\n}\n\n",
            "current_name": "shift_left_by32_bits_080090c2",
            "entrypoint": "0x080090c2",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080090c2": "shift_left_by32_bits_080090c2",
                "param_1": "input_value",
                "param_2": "shift_amount"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080090cc": {
            "additional_data": {
                "FUN_080090cc": {
                    "assertion_failed": 1,
                    "assertion_failed_handler": 2,
                    "assertion_failed_logger": 1,
                    "assertion_failure_handler": 1,
                    "decode_and_process_assertion": 6,
                    "decode_and_process_assertion_failed": 1,
                    "decode_and_process_assertion_failure": 1,
                    "decode_assertion_and_process_data": 1,
                    "handle_assertion": 3,
                    "handle_assertion_error": 1,
                    "handle_assertion_failed": 1,
                    "handle_assertion_failure": 1,
                    "handle_failed_assertion": 1,
                    "process_and_handle_assertion": 2,
                    "process_assert": 2,
                    "process_assert_data": 1,
                    "process_assertion": 3,
                    "process_assertion_error": 1,
                    "process_assertion_failed": 1
                },
                "decode_and_process_input_data_08009124": {
                    "decode_and_process_assertion_failed": 1,
                    "decode_and_process_data": 2,
                    "decode_and_process_error": 1,
                    "decode_and_process_input_data": 2
                },
                "param_1": {
                    "assertion": 1,
                    "assertion_condition": 1,
                    "assertion_message": 2,
                    "condition": 1,
                    "error_message": 1,
                    "file": 8,
                    "file_name": 14,
                    "file_path": 1,
                    "filename": 2
                },
                "param_2": {
                    "assertion_file": 1,
                    "assertion_line": 1,
                    "file": 3,
                    "file_name": 1,
                    "line": 7,
                    "line_number": 18
                },
                "param_3": {
                    "assertion": 5,
                    "assertion_condition": 1,
                    "assertion_failed_message": 1,
                    "assertion_line": 1,
                    "assertion_message": 8,
                    "assertion_string": 1,
                    "condition": 3,
                    "empty_string": 1,
                    "error_message": 1,
                    "function_name": 3,
                    "line": 2,
                    "message": 4
                },
                "param_4": {
                    "additional_info": 4,
                    "additional_information": 1,
                    "additional_message": 1,
                    "assertion_error": 1,
                    "assertion_message": 1,
                    "extra_info": 1,
                    "extra_parameters": 1,
                    "function": 8,
                    "function_name": 10,
                    "line_number": 2,
                    "optional_message": 1
                },
                "pcVar2": {
                    "additional_info": 3,
                    "additional_message": 3,
                    "additional_string": 2,
                    "additional_text": 1,
                    "delimiter": 2,
                    "empty_string": 1,
                    "extra_message": 1,
                    "file_and_line_info": 1,
                    "function": 2,
                    "function_label": 1,
                    "function_string": 1,
                    "function_text": 1,
                    "log_prefix": 1,
                    "message_part": 1,
                    "message_prefix": 1,
                    "message_suffix": 3,
                    "prefix": 1,
                    "print_string": 1,
                    "separator": 1,
                    "string_to_append": 1,
                    "suffix": 2
                },
                "process_and_handle_data_08009b5c": {
                    "handle_processed_data": 1,
                    "process_and_handle_data": 5
                },
                "uVar1": {
                    "assert_var1": 1,
                    "assertion": 3,
                    "assertion_failed_message": 1,
                    "assertion_failed_string": 1,
                    "assertion_flag": 1,
                    "assertion_handler": 1,
                    "assertion_message": 2,
                    "assertion_string": 1,
                    "base_address": 1,
                    "data_address": 1,
                    "data_ptr": 2,
                    "error_code": 1,
                    "file_descriptor": 2,
                    "file_offset": 1,
                    "file_pointer": 2,
                    "file_ptr": 1,
                    "line_number": 1,
                    "offset": 2,
                    "pointer": 1,
                    "pointer_1": 1,
                    "ptr_file_name": 1,
                    "ptr_to_message_format": 1,
                    "ptr_u_var1": 1,
                    "ptr_value": 1
                },
                "uVar3": {
                    "data_handler_result": 1,
                    "process_result": 1,
                    "processed_data": 15,
                    "processed_data_result": 1,
                    "result": 12,
                    "return_value": 1
                },
                "uVar4": {
                    "additional_data": 3,
                    "additional_info": 2,
                    "additional_info_copy": 3,
                    "assert_var2": 1,
                    "assertion_error_copy": 1,
                    "assertion_extra": 1,
                    "extra_data": 1,
                    "extra_info": 1,
                    "extra_info_copy": 1,
                    "format_string": 1,
                    "function_copy": 1,
                    "function_name_copy": 2,
                    "function_param": 1,
                    "function_string": 1,
                    "info": 1,
                    "optional_message_copy": 1,
                    "param_4_new": 1,
                    "pointer_2": 1,
                    "processed_data_var": 1,
                    "ptr_additional_info": 1,
                    "ptr_param": 1,
                    "ptr_to_additional_message": 1,
                    "ptr_u_var4": 1,
                    "temp": 1,
                    "temp_var": 1
                }
            },
            "called": [
                "FUN_08009b5c",
                "FUN_08009124"
            ],
            "calling": [
                "FUN_08008c44"
            ],
            "code": "\nvoid decode_and_process_assertion_failed_080090cc(undefined4 file_name,undefined4 line_number,char *assertion_message,undefined4 function_name)\n\n{\n  undefined4 assertion;\n  char *message_suffix;\n  undefined8 processed_data;\n  undefined4 additional_info_copy;\n  \n  assertion = *(undefined4 *)(DAT_20000090 + 0xc);\n  additional_info_copy = function_name;\n  if (assertion_message == (char *)0x0) goto LAB_080090f0;\n  message_suffix = \", function: \";\n  do {\n    decode_and_process_input_data(assertion,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function_name,file_name,line_number\n                 ,message_suffix,assertion_message,additional_info_copy);\n    processed_data = process_and_handle_data();\n    line_number = (undefined4)((ulonglong)processed_data >> 0x20);\n    assertion = (undefined4)processed_data;\nLAB_080090f0:\n    assertion_message = \"\";\n    message_suffix = assertion_message;\n  } while( true );\n}\n\n",
            "current_name": "decode_and_process_assertion_failed_080090cc",
            "entrypoint": "0x080090cc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080090cc": "decode_and_process_assertion_failed_080090cc",
                "decode_and_process_input_data_08009124": "decode_and_process_input_data",
                "param_1": "file_name",
                "param_2": "line_number",
                "param_3": "assertion_message",
                "param_4": "function_name",
                "pcVar2": "message_suffix",
                "process_and_handle_data_08009b5c": "process_and_handle_data",
                "uVar1": "assertion",
                "uVar3": "processed_data",
                "uVar4": "additional_info_copy"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009108": {
            "additional_data": {
                "FUN_08009108": {
                    "convert_to_long_long": 1,
                    "extend_bits": 1,
                    "left_shift64_bits": 1,
                    "left_shift_by32": 2,
                    "left_shift_u_int64": 1,
                    "left_shift_unsigned_long_long": 1,
                    "shift_left64": 4,
                    "shift_left64_bits": 3,
                    "shift_left_by32": 4,
                    "shift_left_by32_bits": 5,
                    "shift_left_long_long": 1,
                    "shift_param_left64_bits": 1,
                    "shift_param_to_high_bits": 1,
                    "shift_to_high_bits": 1,
                    "shift_uint64": 1,
                    "shift_unsigned_int_to_long_long": 1,
                    "shift_unsigned_long_long": 1,
                    "shift_unsigned_value_to_high_bits": 1
                },
                "param_1": {
                    "first_parameter": 1,
                    "flag": 1,
                    "flags": 8,
                    "input": 2,
                    "input_value": 5,
                    "offset": 1,
                    "param": 3,
                    "param1": 4,
                    "shift_amount": 1,
                    "source": 1,
                    "source_value": 1,
                    "undefined": 1,
                    "value": 2
                },
                "param_2": {
                    "bit_shift_amount": 2,
                    "input": 2,
                    "input_number": 1,
                    "number": 1,
                    "param2": 2,
                    "shift_amount": 5,
                    "value": 17,
                    "value_to_shift": 1
                },
                "param_3": {
                    "shifted_value": 1
                },
                "ulonglong": {
                    "unsigned_long_long": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_080090c2"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009110) */\n\nlonglong shift_left_by32_bits_08009108(undefined4 flags,uint value)\n\n{\n  return (unsigned_long_long)value << 0x20;\n}\n\n",
            "current_name": "shift_left_by32_bits_08009108",
            "entrypoint": "0x08009108",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009108": "shift_left_by32_bits_08009108",
                "param_1": "flags",
                "param_2": "value",
                "ulonglong": "unsigned_long_long"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009124": {
            "additional_data": {
                "FUN_08009124": {
                    "decode_and_process_data": 1,
                    "decode_and_process_input": 8,
                    "decode_and_process_input_data": 3,
                    "process_data": 1,
                    "process_input_data": 18
                },
                "param_1": {
                    "data_1": 2,
                    "data_ptr": 1,
                    "input_1": 1,
                    "input_data": 8,
                    "input_data1": 1,
                    "input_data_1": 4,
                    "input_data_ptr": 2,
                    "input_param": 2,
                    "input_param1": 7,
                    "input_param_1": 2,
                    "input_parameter_1": 1
                },
                "param_2": {
                    "buffer_size": 1,
                    "data_2": 2,
                    "data_length": 1,
                    "data_size": 2,
                    "input_2": 1,
                    "input_data2": 1,
                    "input_data_2": 4,
                    "input_data_size": 1,
                    "input_length": 1,
                    "input_param2": 7,
                    "input_param_2": 2,
                    "input_parameter_2": 1,
                    "length": 2,
                    "output_data": 1,
                    "output_data_ptr": 1,
                    "output_param": 2,
                    "size": 1
                },
                "param_3": {
                    "data_1": 1,
                    "decoded_data": 7,
                    "decoded_data_1": 3,
                    "decoded_data_param": 1,
                    "decoded_input": 1,
                    "decoded_input_ptr": 1,
                    "decoded_param": 3,
                    "decoded_param1": 1,
                    "decoded_parameter": 1,
                    "input_1": 2,
                    "input_data": 1,
                    "input_param3": 3,
                    "output_data": 1,
                    "output_param_1": 2,
                    "output_ptr": 1,
                    "param3": 1,
                    "stack_param_1": 1
                },
                "param_4": {
                    "additional_data": 1,
                    "additional_param": 1,
                    "additional_parameter": 1,
                    "data_2": 1,
                    "decoded_data_2": 3,
                    "decoded_data_length": 1,
                    "decoded_data_size": 1,
                    "decoded_length": 1,
                    "decoded_output_ptr": 1,
                    "decoded_param2": 1,
                    "decoded_size": 2,
                    "input_2": 2,
                    "input_param4": 3,
                    "output_data": 2,
                    "output_length": 1,
                    "output_param_2": 2,
                    "param4": 1,
                    "processed_data": 1,
                    "processed_data_param": 2,
                    "processed_param": 1,
                    "some_value": 1,
                    "stack_param_2": 1
                },
                "uStack_4": {
                    "additional_data_copy": 1,
                    "additional_param_copy": 1,
                    "decoded_data2": 1,
                    "decoded_data_2_copy": 1,
                    "decoded_data_4": 1,
                    "decoded_data_length_ptr": 1,
                    "decoded_data_temp2": 1,
                    "decoded_input_2": 2,
                    "decoded_output": 1,
                    "decoded_output_2": 1,
                    "decoded_output_length": 1,
                    "decoded_param2": 1,
                    "decoded_param2_copy": 1,
                    "decoded_param4": 1,
                    "decoded_param_2": 1,
                    "decoded_param_4": 1,
                    "decoded_size_ptr": 1,
                    "processed_data": 1,
                    "processed_data_2": 1,
                    "processed_data_copy": 1,
                    "processed_output": 1,
                    "processed_value": 1,
                    "size_ptr": 1,
                    "some_value_2": 1,
                    "temp": 1
                },
                "uStack_8": {
                    "decoded_data": 2,
                    "decoded_data1": 1,
                    "decoded_data_1_copy": 1,
                    "decoded_data_3": 1,
                    "decoded_data_copy": 2,
                    "decoded_data_ptr": 2,
                    "decoded_data_temp": 1,
                    "decoded_input": 1,
                    "decoded_input_1": 2,
                    "decoded_output_1": 1,
                    "decoded_output_ptr": 1,
                    "decoded_param1": 1,
                    "decoded_param1_copy": 1,
                    "decoded_param3": 1,
                    "decoded_param_1": 1,
                    "decoded_param_3": 1,
                    "decoded_param_copy": 1,
                    "decoded_value": 1,
                    "input_ptr": 1,
                    "output_data_pointer": 1,
                    "processed_data_1": 1,
                    "processed_input": 1
                }
            },
            "called": [
                "FUN_0800937c"
            ],
            "calling": [
                "FUN_080090cc"
            ],
            "code": "\nvoid decode_and_process_input_data_08009124(undefined4 input_data,undefined4 input_param2,undefined4 decoded_data,undefined4 input_param4)\n\n{\n  undefined4 decoded_data_copy;\n  undefined4 decoded_input_2;\n  \n  decoded_data_copy = decoded_data;\n  decoded_input_2 = input_param4;\n  decode_and_process_input_data_08009124_0800937c(DAT_20000090,input_data,input_param2,&decoded_data_copy,input_data,&decoded_data_copy);\n  return;\n}\n\n",
            "current_name": "decode_and_process_input_data_08009124",
            "entrypoint": "0x08009124",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009124": "decode_and_process_input_data_08009124",
                "param_1": "input_data",
                "param_2": "input_param2",
                "param_3": "decoded_data",
                "param_4": "input_param4",
                "uStack_4": "decoded_input_2",
                "uStack_8": "decoded_data_copy"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009148": {
            "additional_data": {
                "FUNC_0800a424": {
                    "initialize_data": 1
                },
                "FUN_08009148": {
                    "execute_all_functions": 2,
                    "execute_callbacks": 3,
                    "execute_function_array": 1,
                    "execute_function_batch": 1,
                    "execute_function_chain": 1,
                    "execute_functions": 20,
                    "execute_functions_and_exit": 1,
                    "execute_functions_within_range": 1,
                    "run_functions": 1
                },
                "iVar1": {
                    "counter": 8,
                    "index": 22,
                    "iterator": 1
                }
            },
            "called": [
                "FUN_08008f0e",
                "FUN_0800a424"
            ],
            "calling": [
                "entry"
            ],
            "code": "\nvoid execute_all_functions_08009148(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_0800abe4)[index])();\n  }\n  FUNC_0800a424();\n  for (index = 0; index != 0xc; index = index + 1) {\n    (*(code *)(&DAT_0800abe4)[index])();\n  }\n  return;\n}\n\n",
            "current_name": "execute_all_functions_08009148",
            "entrypoint": "0x08009148",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009148": "execute_all_functions_08009148",
                "iVar1": "index"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009190": {
            "additional_data": {
                "FUN_08009190": {
                    "allocate_and_assign_memory": 7,
                    "allocate_and_assign_memory_block": 11,
                    "allocate_memory_block": 3,
                    "assign_and_allocate_memory_block": 1,
                    "assign_block_memory": 1,
                    "assign_memory_block": 7,
                    "initialize_memory": 1
                },
                "allocate_and_assign_memory_block_08009270": {
                    "allocate_and_assign_memory": 2,
                    "allocate_and_assign_memory_block": 5,
                    "allocate_and_assign_memory_block_08009270": 1,
                    "allocate_and_assign_memory_block_helper": 5,
                    "allocate_and_assign_memory_block_impl": 1,
                    "assign_and_allocate_memory_block_08009270": 1
                },
                "param_1": {
                    "block_size": 3,
                    "data": 2,
                    "input": 3,
                    "input_data": 2,
                    "input_param": 1,
                    "input_parameter": 2,
                    "memory_block": 6,
                    "memory_size": 6,
                    "param": 3,
                    "parameter": 1,
                    "size": 2
                }
            },
            "called": [
                "FUN_08009270"
            ],
            "calling": [
                "FUN_08002e44"
            ],
            "code": "\nvoid assign_and_allocate_memory_block_08009190(undefined4 memory_block)\n\n{\n  allocate_and_assign_memory_block_helper(DAT_20000090,memory_block);\n  return;\n}\n\n",
            "current_name": "assign_and_allocate_memory_block_08009190",
            "entrypoint": "0x08009190",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009190": "assign_and_allocate_memory_block_08009190",
                "allocate_and_assign_memory_block_08009270": "allocate_and_assign_memory_block_helper",
                "param_1": "memory_block"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080091a0": {
            "additional_data": {
                "DAT_20000090": {
                    "data_buffer": 2
                },
                "FUN_080091a0": {
                    "process_and_handle_data": 1,
                    "process_and_return_data": 3,
                    "process_and_send_data": 1,
                    "process_and_store_data": 1,
                    "process_data": 24,
                    "process_data_wrapper": 1
                },
                "param_1": {
                    "data": 18,
                    "data_input": 1,
                    "input_data": 12
                },
                "process_data_080091d8": {
                    "execute_data_processing": 1,
                    "execute_processing": 1,
                    "process_data": 5,
                    "process_data_helper": 5,
                    "process_data_intermediate": 1,
                    "process_data_internal": 1
                }
            },
            "called": [
                "FUN_080091d8"
            ],
            "calling": [
                "FUN_08002e44"
            ],
            "code": "\nvoid process_and_return_data_080091a0(undefined4 data)\n\n{\n  process_data(DAT_20000090,data);\n  return;\n}\n\n",
            "current_name": "process_and_return_data_080091a0",
            "entrypoint": "0x080091a0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080091a0": "process_and_return_data_080091a0",
                "param_1": "data",
                "process_data_080091d8": "process_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080091b0": {
            "additional_data": {
                "FUN_080091b0": {
                    "copy_array": 3,
                    "copy_array_backward": 1,
                    "copy_array_data": 1,
                    "copy_bytes": 1,
                    "copy_data": 20,
                    "copy_data_to_buffer": 5
                },
                "param_1": {
                    "array_start_index": 1,
                    "buffer_size": 1,
                    "buffer_start": 2,
                    "buffer_start_index": 1,
                    "dest_addr": 2,
                    "dest_address": 3,
                    "dest_buffer_addr": 1,
                    "dest_index": 1,
                    "dest_offset": 3,
                    "dest_start": 2,
                    "destination_addr": 1,
                    "destination_start": 1,
                    "dst_start": 1,
                    "offset": 1,
                    "source_address": 1,
                    "source_index": 1,
                    "start_address": 2,
                    "start_index": 5,
                    "start_pos": 1
                },
                "param_2": {
                    "data_start": 1,
                    "source": 2,
                    "source_addr": 1,
                    "source_address": 2,
                    "source_array": 5,
                    "source_data": 11,
                    "source_start": 2,
                    "src_addr": 2,
                    "src_array": 1,
                    "src_buffer_addr": 1,
                    "src_data": 1,
                    "src_start": 2
                },
                "param_3": {
                    "array_length": 4,
                    "data_length": 11,
                    "data_size": 2,
                    "length": 8,
                    "num_bytes": 3,
                    "num_elements": 1,
                    "size": 2
                },
                "puVar1": {
                    "data_end": 1,
                    "dest_array_end": 3,
                    "dest_current": 1,
                    "dest_end": 4,
                    "dest_ptr": 2,
                    "destination_array_end": 1,
                    "destination_end": 2,
                    "end_addr": 2,
                    "end_address": 1,
                    "end_of_source": 2,
                    "end_pointer": 1,
                    "end_ptr": 1,
                    "source_data_end": 1,
                    "source_end": 5,
                    "source_ptr": 1,
                    "src_end": 2,
                    "target_data": 1
                },
                "puVar2": {
                    "buffer_current_position": 1,
                    "buffer_end": 2,
                    "buffer_index": 1,
                    "current_dest": 1,
                    "current_dest_addr": 1,
                    "dest": 1,
                    "dest_address": 1,
                    "dest_address_end": 1,
                    "dest_array": 2,
                    "dest_array_current": 1,
                    "dest_end": 3,
                    "dest_pointer": 1,
                    "dest_pos": 1,
                    "dest_ptr": 4,
                    "destination": 1,
                    "destination_address": 1,
                    "destination_array_index": 1,
                    "destination_end": 1,
                    "destination_ptr": 1,
                    "dst_end": 1,
                    "src_current": 1,
                    "src_ptr": 2,
                    "target_index": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08009908",
                "FUN_080027f0"
            ],
            "code": "\nvoid copy_data_to_buffer_080091b0(int start_index,undefined *source_data,int data_length)\n\n{\n  undefined *source_end;\n  undefined *dest_ptr;\n  \n  dest_ptr = (undefined *)(start_index + -1);\n  source_end = source_data + data_length;\n  for (; source_data != source_end; source_data = source_data + 1) {\n    dest_ptr = dest_ptr + 1;\n    *dest_ptr = *source_data;\n  }\n  return;\n}\n\n",
            "current_name": "copy_data_to_buffer_080091b0",
            "entrypoint": "0x080091b0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080091b0": "copy_data_to_buffer_080091b0",
                "param_1": "start_index",
                "param_2": "source_data",
                "param_3": "data_length",
                "puVar1": "source_end",
                "puVar2": "dest_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080091c6": {
            "additional_data": {
                "FUN_080091c6": {
                    "fill_array_with_value": 3,
                    "fill_memory": 13,
                    "fill_memory_range": 1,
                    "fill_memory_with": 1,
                    "fill_memory_with_byte": 2,
                    "initialize_memory": 3,
                    "memset": 4,
                    "memset_array": 1,
                    "set_bytes_to_value": 1,
                    "set_memory_to_value": 1,
                    "set_values": 1
                },
                "param_1": {
                    "array": 5,
                    "buffer": 1,
                    "dest": 3,
                    "destination": 7,
                    "memory": 9,
                    "memory_buffer": 1,
                    "memory_ptr": 1,
                    "memory_start": 2,
                    "pointer": 1,
                    "ptr": 1
                },
                "param_2": {
                    "byte": 2,
                    "fill_value": 2,
                    "value": 27
                },
                "param_3": {
                    "count": 2,
                    "length": 13,
                    "num_bytes": 2,
                    "size": 13,
                    "size_to_fill": 1
                },
                "puVar1": {
                    "end": 4,
                    "end_addr": 3,
                    "end_address": 5,
                    "end_memory": 2,
                    "end_of_array": 1,
                    "end_of_memory": 1,
                    "end_ptr": 4,
                    "last_element": 1,
                    "memory_end": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08009db0",
                "FUN_08007118",
                "FUN_08002968",
                "FUN_08009d24",
                "FUN_08002a58",
                "FUN_08006d80",
                "FUN_08009cdc"
            ],
            "code": "\nvoid fill_memory_with_byte_080091c6(undefined *memory,undefined value,int size)\n\n{\n  undefined *end_address;\n  \n  end_address = memory + size;\n  for (; memory != end_address; memory = memory + 1) {\n    *memory = value;\n  }\n  return;\n}\n\n",
            "current_name": "fill_memory_with_byte_080091c6",
            "entrypoint": "0x080091c6",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080091c6": "fill_memory_with_byte_080091c6",
                "param_1": "memory",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "end_address"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080091d8": {
            "additional_data": {
                "DAT_2000098c": {
                    "data_ptr": 1,
                    "global_data": 1,
                    "global_ptr": 1,
                    "head_ptr": 1
                },
                "FUNC_08009f48": {
                    "function_a": 1,
                    "initialize": 1,
                    "initialize_data": 1,
                    "initialize_function": 1
                },
                "FUNC_08009f4a": {
                    "function_b": 1,
                    "process_data2": 1
                },
                "FUN_080091d8": {
                    "add_linked_list_node": 1,
                    "extract_integer_values": 1,
                    "process_data": 9,
                    "rearrange_and_store": 1,
                    "rearrange_data": 1,
                    "update_data": 2,
                    "update_data_structure": 2,
                    "update_linked_list": 2,
                    "update_linkedlist": 1,
                    "update_list": 1,
                    "update_pointer": 2,
                    "update_pointer_list": 2,
                    "update_xyz_data": 1
                },
                "extraout_r1": {
                    "extra_output": 5,
                    "extra_output_ptr": 2,
                    "extra_result": 1,
                    "extraout": 1,
                    "new_node": 1,
                    "next_node": 1,
                    "temp1": 6,
                    "temp_array_ptr": 1,
                    "temp_pointer": 1,
                    "temp_pointer1": 1,
                    "temp_ptr": 2,
                    "temp_ptr_1": 2,
                    "temp_var1": 1,
                    "temp_var_1": 1,
                    "temp_variable": 1,
                    "temporary1": 1
                },
                "param_1": {
                    "data_array": 1,
                    "head": 1,
                    "list_ptr": 1,
                    "output": 11,
                    "output_arr": 1,
                    "output_array": 7,
                    "output_pointer": 1,
                    "output_ptr": 2,
                    "pointer_list": 1,
                    "result": 3,
                    "result_pointer": 2
                },
                "param_2": {
                    "array_length": 2,
                    "data": 1,
                    "data_size": 2,
                    "input": 1,
                    "input_array_length": 1,
                    "input_pointer": 1,
                    "input_size": 9,
                    "length": 1,
                    "list_size": 1,
                    "num_elements": 3,
                    "num_pointers": 1,
                    "size": 8
                },
                "param_3": {
                    "arg3": 4,
                    "input": 1,
                    "input1": 1,
                    "input_value1": 1,
                    "param3": 11,
                    "param_3": 6,
                    "prev": 1,
                    "start": 1,
                    "unused1": 1,
                    "unused_param1": 1,
                    "unused_param_1": 1,
                    "value1": 1,
                    "value_1": 1
                },
                "param_4": {
                    "arg4": 4,
                    "config": 1,
                    "end": 1,
                    "input2": 1,
                    "input_value2": 1,
                    "next": 1,
                    "param4": 11,
                    "param_4": 6,
                    "unused2": 1,
                    "unused_param2": 1,
                    "unused_param_2": 1,
                    "value2": 1,
                    "value_2": 1
                },
                "piVar3": {
                    "current_size": 1,
                    "new_value": 1,
                    "offset": 1,
                    "ptr_var_3": 1,
                    "temp": 1,
                    "temp4": 6,
                    "temp_int": 1,
                    "temp_node": 2,
                    "temp_pointer": 1,
                    "temp_pointer4": 1,
                    "temp_ptr": 2,
                    "temp_ptr_4": 1,
                    "temp_var": 3,
                    "temp_var1": 1,
                    "temp_var4": 1,
                    "temp_var_1": 1,
                    "temp_var_3": 1,
                    "temp_var_4": 1,
                    "temporary4": 1,
                    "tmp_ptr": 1,
                    "tmp_var_3": 1
                },
                "ppiVar1": {
                    "current": 1,
                    "current_node": 2,
                    "current_pointer": 1,
                    "current_ptr": 3,
                    "loop_pointer1": 1,
                    "next_node": 1,
                    "prev_list_ptr": 1,
                    "prev_node": 1,
                    "ptr_var_1": 1,
                    "temp2": 6,
                    "temp_pointer2": 1,
                    "temp_ptr1": 4,
                    "temp_ptr_2": 2,
                    "temp_var2": 1,
                    "temp_var_1": 1,
                    "temp_var_2": 1,
                    "temporary2": 1,
                    "tmp_ptr_1": 1
                },
                "ppiVar2": {
                    "curr_list_ptr": 1,
                    "current_node": 3,
                    "loop_pointer2": 1,
                    "next_node": 2,
                    "next_pointer": 1,
                    "next_ptr": 3,
                    "ptr_var_2": 1,
                    "temp3": 6,
                    "temp_pointer3": 1,
                    "temp_ptr2": 4,
                    "temp_ptr_3": 2,
                    "temp_var3": 1,
                    "temp_var_2": 1,
                    "temp_var_3": 1,
                    "temporary3": 1,
                    "tmp_ptr_2": 1
                },
                "ppiVar4": {
                    "node1": 1,
                    "prev_node": 2,
                    "prev_ptr": 2,
                    "previous_node": 2,
                    "previous_pointer": 1,
                    "previous_ptr": 1,
                    "ptr_var_4": 1,
                    "temp5": 6,
                    "temp_pointer1": 1,
                    "temp_pointer5": 1,
                    "temp_ptr3": 4,
                    "temp_ptr_4": 1,
                    "temp_ptr_5": 1,
                    "temp_var5": 1,
                    "temp_var_4": 1,
                    "temp_var_5": 1,
                    "temporary5": 1,
                    "tmp_list_ptr": 1,
                    "tmp_ptr_4": 1
                },
                "ppiVar5": {
                    "adjusted_ptr": 1,
                    "adjusted_ptr_1": 1,
                    "current_data": 1,
                    "input_ptr": 1,
                    "new_list_size": 1,
                    "new_node": 3,
                    "new_node_index": 1,
                    "new_ptr": 4,
                    "node2": 1,
                    "ptr_var_5": 1,
                    "temp6": 6,
                    "temp_pointer2": 1,
                    "temp_pointer6": 1,
                    "temp_ptr4": 1,
                    "temp_ptr_6": 1,
                    "temp_var6": 1,
                    "temp_var_5": 1,
                    "temp_var_6": 1,
                    "temporary6": 1,
                    "tmp_ptr_5": 1
                }
            },
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48"
            ],
            "calling": [
                "FUN_08009a80",
                "FUN_08009908",
                "FUN_08009b5c",
                "FUN_080091a0"
            ],
            "code": "\nvoid process_data_080091d8(undefined4 *output,int input_size,undefined4 param3,undefined4 param4)\n\n{\n  int **temp1;\n  int **temp2;\n  int **temp3;\n  int *temp4;\n  int **temp5;\n  int **temp6;\n  \n  if (input_size == 0) {\n    return;\n  }\n  temp6 = (int **)(input_size + -4);\n  if (*(int *)(input_size + -4) < 0) {\n    temp6 = (int **)((int)temp6 + *(int *)(input_size + -4));\n  }\n  FUNC_08009f48();\n  temp3 = (int **)&DAT_2000098c;\n  if (DAT_2000098c == (int **)0x0) {\n    temp6[1] = (int *)0x0;\n    temp2 = temp1;\n    DAT_2000098c = temp6;\n  }\n  else {\n    temp3 = DAT_2000098c;\n    if (temp6 < DAT_2000098c) {\n      temp2 = (int **)*temp6;\n      temp3 = (int **)((int)temp6 + (int)temp2);\n      if (DAT_2000098c == temp3) {\n        temp4 = *DAT_2000098c;\n        DAT_2000098c = (int **)DAT_2000098c[1];\n        temp3 = (int **)((int)temp4 + (int)temp2);\n        *temp6 = (int *)temp3;\n      }\n      temp6[1] = (int *)DAT_2000098c;\n      DAT_2000098c = temp6;\n    }\n    else {\n      do {\n        temp5 = temp3;\n        temp3 = (int **)temp5[1];\n        if (temp3 == (int **)0x0) break;\n      } while (temp3 <= temp6);\n      temp2 = (int **)*temp5;\n      if ((int **)((int)temp5 + (int)temp2) == temp6) {\n        temp2 = (int **)((int)temp2 + (int)*temp6);\n        *temp5 = (int *)temp2;\n        if (temp3 == (int **)((int)temp5 + (int)temp2)) {\n          temp4 = *temp3;\n          temp3 = (int **)temp3[1];\n          temp2 = (int **)((int)temp2 + (int)temp4);\n          *temp5 = (int *)temp2;\n          temp5[1] = (int *)temp3;\n        }\n      }\n      else if (temp6 < (int **)((int)temp5 + (int)temp2)) {\n        *output = 0xc;\n      }\n      else {\n        temp2 = (int **)((int)temp6 + (int)*temp6);\n        if (temp3 == temp2) {\n          temp4 = *temp3;\n          temp3 = (int **)temp3[1];\n          temp2 = (int **)((int)temp4 + (int)*temp6);\n          *temp6 = (int *)temp2;\n        }\n        temp6[1] = (int *)temp3;\n        temp5[1] = (int *)temp6;\n      }\n    }\n  }\n  FUNC_08009f4a(output,temp2,temp3,param4);\n  return;\n}\n\n",
            "current_name": "process_data_080091d8",
            "entrypoint": "0x080091d8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080091d8": "process_data_080091d8",
                "extraout_r1": "temp1",
                "param_1": "output",
                "param_2": "input_size",
                "param_3": "param3",
                "param_4": "param4",
                "piVar3": "temp4",
                "ppiVar1": "temp2",
                "ppiVar2": "temp3",
                "ppiVar4": "temp5",
                "ppiVar5": "temp6"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009270": {
            "additional_data": {
                "DAT_2000098c": {
                    "first_block": 1,
                    "head_block": 1,
                    "head_of_free_list": 1,
                    "memory_pool": 1
                },
                "DAT_20000990": {
                    "allocated_block": 1,
                    "allocated_memory": 1,
                    "has_allocated_block": 1,
                    "memory_block_allocated": 1
                },
                "FUNC_08009f48": {
                    "function_1": 2,
                    "some_function_1": 1
                },
                "FUNC_08009f4a": {
                    "function_2": 1,
                    "some_function_2": 1
                },
                "FUN_08009270": {
                    "allocate_and_assign_memory": 18,
                    "allocate_and_assign_memory_block": 2,
                    "allocate_and_assign_uint_block": 1,
                    "allocate_and_initialize_block": 1,
                    "allocate_and_initialize_memory_block": 1,
                    "allocate_and_resize_memory": 1,
                    "allocate_memory": 1,
                    "allocate_memory_and_assign": 2,
                    "allocate_memory_block": 4
                },
                "allocate_and_assign_memory_block_08009918": {
                    "allocate_block": 1,
                    "allocate_block_08009918": 1,
                    "allocate_memory_block": 2
                },
                "iVar2": {
                    "block_diff": 1,
                    "block_difference": 1,
                    "block_size": 7,
                    "difference": 7,
                    "offset": 10,
                    "remaining_size": 4,
                    "remaining_space": 1
                },
                "param_1": {
                    "out_ptr": 1,
                    "output": 2,
                    "output_address": 1,
                    "output_buffer": 3,
                    "output_ptr": 9,
                    "result": 13,
                    "result_ptr": 2
                },
                "param_2": {
                    "block_size": 1,
                    "data_size": 1,
                    "input_size": 7,
                    "size": 22
                },
                "puVar1": {
                    "current": 4,
                    "current_block": 24,
                    "current_chunk": 1,
                    "current_node": 1,
                    "current_ptr": 1
                },
                "puVar3": {
                    "current": 2,
                    "current_block_next": 1,
                    "next": 3,
                    "next_block": 13,
                    "next_chunk": 1,
                    "prev": 1,
                    "prev_block": 2,
                    "prev_node": 1,
                    "prev_ptr": 1,
                    "previous_block": 6
                },
                "puVar5": {
                    "current_block_prev": 1,
                    "last": 1,
                    "last_block": 1,
                    "new_block": 2,
                    "prev_block": 1,
                    "prev_prev_ptr": 1,
                    "previous": 5,
                    "previous_block": 13,
                    "previous_block_address": 1,
                    "previous_block_next": 1,
                    "previous_block_ptr": 1,
                    "previous_chunk": 1,
                    "target_block": 1,
                    "target_node": 1
                },
                "uVar4": {
                    "block_diff": 3,
                    "block_diff_abs": 1,
                    "block_difference": 8,
                    "block_difference_abs": 1,
                    "block_size_difference": 1,
                    "diff": 3,
                    "difference": 7,
                    "gap": 1,
                    "node_difference": 1,
                    "offset": 1,
                    "ptr_difference": 1,
                    "size_diff": 1,
                    "size_difference": 2
                },
                "uVar6": {
                    "adjusted_size": 4,
                    "aligned_size": 10,
                    "allocated_size": 9,
                    "block_size": 2,
                    "new_block_size": 3,
                    "new_size": 2,
                    "total_size": 1
                }
            },
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48",
                "FUN_08009918"
            ],
            "calling": [
                "FUN_08009eac",
                "FUN_08009908",
                "FUN_08009190",
                "FUN_08009d24"
            ],
            "code": "\nuint allocate_and_assign_memory_block_08009270(undefined4 *result,uint size)\n\n{\n  uint *current_block;\n  int offset;\n  uint *next_block;\n  uint block_difference;\n  uint *previous_block;\n  uint aligned_size;\n  \n  aligned_size = (size + 3 & 0xfffffffc) + 8;\n  if (aligned_size < 0xc) {\n    aligned_size = 0xc;\n  }\n  if (((int)aligned_size < 0) || (aligned_size < size)) {\n    *result = 0xc;\n  }\n  else {\n    FUNC_08009f48();\n    current_block = DAT_2000098c;\n    previous_block = DAT_2000098c;\n    while (next_block = current_block, next_block != (uint *)0x0) {\n      block_difference = *next_block - aligned_size;\n      if (-1 < (int)block_difference) {\n        if (block_difference < 0xc) {\n          if (previous_block == next_block) {\n            current_block = (uint *)previous_block[1];\n            DAT_2000098c = current_block;\n          }\n          else {\n            current_block = (uint *)next_block[1];\n          }\n          if (previous_block != next_block) {\n            previous_block[1] = (uint)current_block;\n            previous_block = next_block;\n          }\n        }\n        else {\n          *next_block = block_difference;\n          *(uint *)((int)next_block + block_difference) = aligned_size;\n          previous_block = (uint *)((int)next_block + block_difference);\n        }\n        goto LAB_080092d4;\n      }\n      previous_block = next_block;\n      current_block = (uint *)next_block[1];\n    }\n    if (DAT_20000990 == 0) {\n      DAT_20000990 = allocate_memory_block(result);\n    }\n    current_block = (uint *)allocate_memory_block(result,aligned_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((previous_block = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == previous_block ||\n        (offset = allocate_memory_block(result,(int)previous_block - (int)current_block), offset != -1)))) {\n      *previous_block = aligned_size;\nLAB_080092d4:\n      FUNC_08009f4a(result);\n      aligned_size = (int)previous_block + 0xbU & 0xfffffff8;\n      offset = aligned_size - (int)(previous_block + 1);\n      if (offset != 0) {\n        *(int *)((int)previous_block + offset) = -offset;\n        return aligned_size;\n      }\n      return aligned_size;\n    }\n    *result = 0xc;\n    FUNC_08009f4a(result);\n  }\n  return 0;\n}\n\n",
            "current_name": "allocate_and_assign_memory_block_08009270",
            "entrypoint": "0x08009270",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009270": "allocate_and_assign_memory_block_08009270",
                "allocate_and_assign_memory_block_08009918": "allocate_memory_block",
                "iVar2": "offset",
                "param_1": "result",
                "param_2": "size",
                "puVar1": "current_block",
                "puVar3": "next_block",
                "puVar5": "previous_block",
                "uVar4": "block_difference",
                "uVar6": "aligned_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800932c": {
            "additional_data": {
                "DAT_0800ab84": {
                    "constant3": 1,
                    "dat_dummy3": 1
                },
                "DAT_0800aba4": {
                    "constant1": 1,
                    "dat_dummy1": 1
                },
                "DAT_0800abc4": {
                    "constant2": 1,
                    "dat_dummy2": 1
                },
                "FUN_0800932c": {
                    "process_and_store_byte": 1,
                    "process_and_store_data": 1,
                    "process_byte": 2,
                    "process_data": 12,
                    "process_input": 13,
                    "process_input_data": 2
                },
                "iVar1": {
                    "index": 4,
                    "int_value": 1,
                    "memory_offset": 1,
                    "result": 2,
                    "temp_1": 1,
                    "temp_i": 1,
                    "temp_var": 7,
                    "temp_var1": 6,
                    "temp_var_1": 1,
                    "temp_variable_1": 3,
                    "var1": 1
                },
                "initialize_memory_blocks_08009d50": {
                    "initialize_memory": 1,
                    "initialize_memory_blocks": 8
                },
                "param_1": {
                    "arg1": 1,
                    "arg_1": 1,
                    "argument_1": 1,
                    "context": 1,
                    "data_ptr": 1,
                    "data_struct": 1,
                    "data_structure": 1,
                    "input": 3,
                    "input1": 1,
                    "input_1": 1,
                    "input_data": 4,
                    "input_param": 4,
                    "input_parameter": 1,
                    "input_ptr": 2,
                    "input_variable_1": 1,
                    "memory_block": 2,
                    "memory_handle": 1,
                    "memory_ptr": 1,
                    "param1": 2,
                    "param_1": 1
                },
                "param_2": {
                    "arg2": 1,
                    "byte_data": 1,
                    "byte_input": 1,
                    "byte_val": 1,
                    "byte_value": 12,
                    "character": 1,
                    "data": 2,
                    "data_byte": 1,
                    "input2": 1,
                    "input_2": 1,
                    "input_byte": 7,
                    "input_variable_2": 1,
                    "param2": 1
                },
                "param_3": {
                    "arg3": 1,
                    "buffer": 1,
                    "byte_array": 2,
                    "byte_ptr": 1,
                    "byte_ptrs": 1,
                    "data": 2,
                    "data_array": 6,
                    "data_ptr": 2,
                    "data_ptr_array": 1,
                    "input_3": 1,
                    "input_array": 2,
                    "input_data": 5,
                    "input_data_ptr": 1,
                    "input_param": 1,
                    "input_ptr": 1,
                    "input_variable_3": 1,
                    "param3": 1,
                    "pointers": 1
                },
                "pbVar2": {
                    "array_pointer": 1,
                    "array_ptr": 1,
                    "array_ptr_1": 1,
                    "buffer_ptr": 1,
                    "current_byte": 2,
                    "data_ptr": 1,
                    "data_ptr1": 1,
                    "end_ptr": 1,
                    "last_byte": 1,
                    "pointer": 1,
                    "prev_byte": 1,
                    "ptr1": 2,
                    "ptr2": 1,
                    "ptr_2": 1,
                    "temp_2": 1,
                    "temp_byte1": 1,
                    "temp_pb_2": 1,
                    "temp_var2": 6,
                    "temp_var_2": 1,
                    "temp_variable_2": 3,
                    "updated_data_ptr": 1
                },
                "pbVar3": {
                    "array_ptr_2": 1,
                    "block_data": 1,
                    "buffer_ptr_2": 1,
                    "byte_pointer": 1,
                    "current_byte": 1,
                    "data_ptr": 2,
                    "data_ptr2": 2,
                    "next_byte": 1,
                    "pointer_temp": 1,
                    "ptr2": 2,
                    "ptr3": 1,
                    "ptr_3": 1,
                    "start_ptr": 1,
                    "temp_3": 1,
                    "temp_byte2": 1,
                    "temp_pb_3": 1,
                    "temp_var3": 6,
                    "temp_var_3": 1,
                    "temp_variable_3": 3,
                    "value": 1
                },
                "process_data_08009a80": {
                    "process_data1": 3,
                    "process_data_1": 3,
                    "process_data_helper": 1,
                    "process_data_helper1": 1,
                    "process_data_step_1": 1
                },
                "process_data_08009c7c": {
                    "process_data2": 3,
                    "process_data_2": 3,
                    "process_data_helper2": 2,
                    "process_data_step_2": 1
                },
                "uVar4": {
                    "byte_return_value": 1,
                    "input_byte_value": 1,
                    "output": 1,
                    "output_value": 1,
                    "output_variable": 1,
                    "result": 18,
                    "return_value": 5,
                    "uint_value": 1,
                    "unsigned_value": 1
                }
            },
            "called": [
                "FUN_08009a80",
                "FUN_08009d50",
                "FUN_08009c7c"
            ],
            "calling": [
                "FUN_08009358"
            ],
            "code": "\nuint process_input_data_0800932c(int input_param,byte byte_value,byte **data_array)\n\n{\n  int temp_var;\n  byte *temp_var2;\n  byte *temp_var3;\n  uint result;\n  \n  temp_var2 = data_array[2] + -1;\n  data_array[2] = temp_var2;\n  if ((-1 < (int)temp_var2) ||\n     (((int)data_array[6] <= (int)temp_var2 && (temp_var2 = (byte *)(uint)byte_value, temp_var2 != (byte *)0xa))))\n  {\n    temp_var2 = *data_array;\n    *data_array = temp_var2 + 1;\n    *temp_var2 = byte_value;\n    return (uint)byte_value;\n  }\n  if ((input_param != 0) && (*(int *)(input_param + 0x18) == 0)) {\n    initialize_memory_blocks();\n  }\n  if (data_array == (byte **)&DAT_0800aba4) {\n    data_array = *(byte ***)(input_param + 4);\n  }\n  else if (data_array == (byte **)&DAT_0800abc4) {\n    data_array = *(byte ***)(input_param + 8);\n  }\n  else if (data_array == (byte **)&DAT_0800ab84) {\n    data_array = *(byte ***)(input_param + 0xc);\n  }\n  data_array[2] = data_array[6];\n  temp_var3 = (byte *)(uint)*(ushort *)(data_array + 3);\n  temp_var = (int)temp_var3 << 0x1c;\n  if (((temp_var < 0) && (temp_var3 = data_array[4], temp_var3 != (byte *)0x0)) ||\n     (temp_var = process_data_1(input_param,data_array,temp_var,temp_var3,temp_var2), temp_var == 0)) {\n    result = (uint)byte_value;\n    temp_var = (int)*data_array - (int)data_array[4];\n    if ((temp_var < (int)data_array[5]) || (temp_var = process_data2(input_param,data_array), temp_var == 0)) {\n      data_array[2] = data_array[2] + -1;\n      temp_var2 = *data_array;\n      *data_array = temp_var2 + 1;\n      *temp_var2 = byte_value;\n      if ((byte *)(temp_var + 1) != data_array[5]) {\n        if (-1 < (int)((uint)*(ushort *)(data_array + 3) << 0x1f)) {\n          return result;\n        }\n        if (result != 10) {\n          return result;\n        }\n      }\n      temp_var = process_data2(input_param,data_array);\n      if (temp_var == 0) {\n        return result;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "current_name": "process_input_data_0800932c",
            "entrypoint": "0x0800932c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800932c": "process_input_data_0800932c",
                "iVar1": "temp_var",
                "initialize_memory_blocks_08009d50": "initialize_memory_blocks",
                "param_1": "input_param",
                "param_2": "byte_value",
                "param_3": "data_array",
                "pbVar2": "temp_var2",
                "pbVar3": "temp_var3",
                "process_data_08009a80": "process_data_1",
                "process_data_08009c7c": "process_data2",
                "uVar4": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009358": {
            "additional_data": {
                "FUN_08009358": {
                    "process_and_count_data": 2,
                    "process_and_increment": 1,
                    "process_and_return_last_index": 2,
                    "process_data": 11,
                    "process_input": 4,
                    "process_input_data": 11
                },
                "iVar1": {
                    "last_index": 1,
                    "processed_data_count": 1,
                    "result": 26,
                    "result_count": 1,
                    "return_code": 1,
                    "return_value": 1
                },
                "iVar3": {
                    "count": 1,
                    "current_data_length": 1,
                    "current_idx": 1,
                    "current_index": 9,
                    "current_length": 11,
                    "current_size": 2,
                    "index": 1,
                    "iter": 1,
                    "loop_counter": 1,
                    "original_length": 1,
                    "remaining_length": 1,
                    "remaining_size": 1
                },
                "param_1": {
                    "arg1": 9,
                    "data": 1,
                    "data_1": 1,
                    "input": 1,
                    "input1": 8,
                    "input_1": 1,
                    "input_flag": 1,
                    "input_param": 4,
                    "input_param1": 2,
                    "input_param_1": 1,
                    "input_parameter1": 1,
                    "param": 1
                },
                "param_2": {
                    "arg2": 9,
                    "data_2": 1,
                    "data_size": 1,
                    "input2": 8,
                    "input_2": 1,
                    "input_param2": 2,
                    "input_param_2": 1,
                    "input_parameter2": 1,
                    "length": 1,
                    "output_param": 4,
                    "param": 1,
                    "param_flag": 1
                },
                "param_3": {
                    "data": 15,
                    "data_pointer": 1,
                    "data_ptr": 4,
                    "input_array": 1,
                    "input_data": 10
                },
                "param_4": {
                    "array_length": 1,
                    "data_length": 11,
                    "data_size": 1,
                    "input_length": 1,
                    "input_size": 1,
                    "length": 14,
                    "size": 2
                },
                "puVar2": {
                    "data_end": 1,
                    "end": 3,
                    "end_address": 1,
                    "end_data_ptr": 1,
                    "end_of_data": 5,
                    "end_of_input": 2,
                    "end_pointer": 4,
                    "end_ptr": 14
                }
            },
            "called": [
                "FUN_0800932c"
            ],
            "calling": [
                "FUN_0800937c"
            ],
            "code": "\nint process_input_data_08009358(undefined4 arg1,undefined4 arg2,undefined *data,int length)\n\n{\n  int result;\n  undefined *end_ptr;\n  int current_length;\n  \n  end_ptr = data + length;\n  current_length = length;\n  do {\n    if (data == end_ptr) {\n      return 0;\n    }\n    result = process_input_data_08009358_0800932c(arg1,*data,arg2,length,current_length);\n    length = result + 1;\n    data = data + 1;\n  } while (length != 0);\n  return result;\n}\n\n",
            "current_name": "process_input_data_08009358",
            "entrypoint": "0x08009358",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009358": "process_input_data_08009358",
                "iVar1": "result",
                "iVar3": "current_length",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "data",
                "param_4": "length",
                "puVar2": "end_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800937c": {
            "additional_data": {
                "DAT_0800ab52": {
                    "characters3": 1
                },
                "DAT_0800ab54": {
                    "characters1": 1
                },
                "DAT_0800ab56": {
                    "characters2": 1,
                    "valid_specifiers": 1
                },
                "DAT_0800ab84": {
                    "dat_var3": 1,
                    "data_flag3": 1,
                    "possibility3": 1
                },
                "DAT_0800aba4": {
                    "dat_var1": 1,
                    "data_flag1": 1,
                    "possibility1": 1
                },
                "DAT_0800abc4": {
                    "dat_var2": 1,
                    "data_flag2": 1,
                    "possibility2": 1
                },
                "FUN_0800937c": {
                    "decode_and_process_input_data": 1,
                    "process_and_decode_data": 3,
                    "process_data": 14,
                    "process_input": 6,
                    "process_input_data": 7
                },
                "bVar3": {
                    "flag": 5,
                    "found": 5,
                    "found_digit": 1,
                    "found_number": 3,
                    "has_number": 1,
                    "is_digit": 4,
                    "is_number": 6,
                    "is_numeric": 4,
                    "is_true": 1,
                    "not_empty": 1
                },
                "decode_and_process_data_08009698": {
                    "decode_and_process_data": 8
                },
                "find_character_in_string_08009f2c": {
                    "find_char_in_string": 2,
                    "find_character_in_string": 6
                },
                "iVar1": {
                    "res": 1,
                    "result": 26,
                    "result1": 1,
                    "return_value": 3
                },
                "iVar2": {
                    "ptr": 1
                },
                "iVar6": {
                    "counter": 1,
                    "index": 5,
                    "index_var": 1,
                    "loop_var": 1,
                    "temp": 4,
                    "temp1": 1,
                    "temp_index": 1,
                    "temp_value": 2,
                    "temp_var": 4,
                    "temp_var2": 6,
                    "tmp_var": 1,
                    "value": 4
                },
                "initialize_memory_blocks_08009d50": {
                    "initialize_memory_blocks": 8
                },
                "local_30": {
                    "another_var": 1,
                    "char5": 1,
                    "constant4": 2,
                    "flag4": 2,
                    "flag_minus": 1,
                    "local_var_11": 1,
                    "padding_flag": 1,
                    "result_value": 1,
                    "temp2_local": 1,
                    "temp_value": 1,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "temp_var5": 1,
                    "undefined_var5": 1,
                    "unknown": 1,
                    "unknown2": 1,
                    "unused2": 2,
                    "unused_var2": 1,
                    "value7": 1,
                    "var4": 2,
                    "wildcard_flag": 1,
                    "zero_flag": 3
                },
                "local_45": {
                    "alignment": 1,
                    "alignment_flag": 1,
                    "char0x2b": 1,
                    "char3": 1,
                    "char3_local": 1,
                    "char4": 1,
                    "char_value": 1,
                    "constant3": 2,
                    "flag": 3,
                    "flag3": 2,
                    "flag_hash": 1,
                    "flag_var": 1,
                    "hash_flag": 4,
                    "local_var_10": 1,
                    "modifier": 1,
                    "special_char": 1,
                    "undefined_var4": 1,
                    "value6": 1,
                    "var3": 2,
                    "zero_flag": 1
                },
                "local_6e": {
                    "char0x30": 1,
                    "char2": 3,
                    "char2_local": 1,
                    "char3": 1,
                    "const2": 1,
                    "const_var2": 1,
                    "constant2": 2,
                    "default_precision": 1,
                    "flag2": 2,
                    "flag_plus": 1,
                    "local_var_9": 1,
                    "plus": 1,
                    "plus_flag": 7,
                    "undefined_var3": 1,
                    "value2": 1,
                    "value5": 1,
                    "var2": 2
                },
                "local_6f": {
                    "char0x20": 1,
                    "char1": 3,
                    "char1_local": 1,
                    "char2": 1,
                    "const1": 1,
                    "const_var1": 1,
                    "constant1": 2,
                    "default_width": 1,
                    "flag1": 2,
                    "flag_space": 1,
                    "local_var_8": 1,
                    "space": 1,
                    "space_flag": 7,
                    "undefined_var2": 1,
                    "value1": 1,
                    "value4": 1,
                    "var1": 2
                },
                "local_70": {
                    "byte_var3": 1,
                    "c": 1,
                    "ch": 2,
                    "char": 1,
                    "char1": 1,
                    "char_flag": 1,
                    "char_local": 1,
                    "char_var": 1,
                    "character": 2,
                    "command": 1,
                    "conversion": 1,
                    "conversion_specifier": 3,
                    "conversion_type": 1,
                    "current_byte": 2,
                    "current_char": 2,
                    "current_character": 2,
                    "data_char": 1,
                    "format_char": 1,
                    "format_specifier": 1,
                    "local_var_7": 1,
                    "next_char": 1,
                    "specifier": 2,
                    "temp_char": 1
                },
                "local_74": {
                    "current_count": 1,
                    "local_var_6": 1,
                    "total": 5,
                    "total_bytes": 3,
                    "total_count": 1,
                    "total_data_size": 1,
                    "total_length": 5,
                    "total_output": 1,
                    "total_output_length": 1,
                    "total_processed": 1,
                    "total_size": 11
                },
                "local_7c": {
                    "asterisks": 1,
                    "count": 1,
                    "int2_local": 1,
                    "int_var": 1,
                    "int_var2": 2,
                    "integer_part": 2,
                    "integer_var2": 1,
                    "intvalue": 1,
                    "length_flag": 1,
                    "local_var_5": 1,
                    "num": 1,
                    "num2": 2,
                    "number": 2,
                    "number1": 1,
                    "offset": 1,
                    "precision": 1,
                    "temp_var4": 1,
                    "value": 1,
                    "value3": 2,
                    "width": 7
                },
                "local_80": {
                    "constant_var": 1,
                    "flag2": 1,
                    "local_var_4": 1,
                    "modifiers_flag": 1,
                    "padding": 1,
                    "padding_char": 1,
                    "param": 1,
                    "temp2": 1,
                    "temp_2": 1,
                    "temp_local": 1,
                    "temp_num": 1,
                    "temp_value": 2,
                    "temp_var3": 3,
                    "undefined_var1": 1,
                    "unknown": 2,
                    "unknown_var": 1,
                    "unknown_var1": 1,
                    "unused": 2,
                    "unused_var": 3,
                    "value": 2,
                    "value2": 2,
                    "value_ptr": 1
                },
                "local_84": {
                    "asterisk_value": 1,
                    "decimal_places": 1,
                    "decimal_point": 1,
                    "decimal_precision": 1,
                    "dot_position": 1,
                    "field_width": 1,
                    "field_width_flag": 1,
                    "index": 1,
                    "int_local": 1,
                    "int_size": 1,
                    "int_value": 1,
                    "int_var1": 2,
                    "integer_var": 1,
                    "length": 2,
                    "local_var_3": 1,
                    "num1": 2,
                    "number": 2,
                    "number2": 1,
                    "option": 1,
                    "precision": 6,
                    "value1": 2
                },
                "local_88": {
                    "bit_mask": 1,
                    "character_set_flag": 1,
                    "flag": 1,
                    "flag_bits": 2,
                    "flag_local": 1,
                    "flags": 20,
                    "flags2": 1,
                    "local_var_2": 1,
                    "options": 3
                },
                "local_8c": {
                    "counter_ptr_local": 1,
                    "int_ptr": 1,
                    "local_array": 1,
                    "local_data": 1,
                    "local_result_pointer": 1,
                    "local_var_1": 1,
                    "local_vars": 1,
                    "output": 1,
                    "output_counter_ptr": 1,
                    "output_data": 3,
                    "output_index_ptr": 1,
                    "output_pointer": 2,
                    "output_ptr": 8,
                    "output_size_ptr": 1,
                    "param4_local": 1,
                    "ptr4": 1,
                    "ptr_result": 1,
                    "ptr_stack": 1,
                    "result_pointer": 1,
                    "temp_ptr": 1,
                    "temp_ptr_array": 1
                },
                "param_1": {
                    "data": 3,
                    "data_1": 1,
                    "data_pointer": 1,
                    "input": 10,
                    "input1": 1,
                    "input_data": 8,
                    "input_param": 3,
                    "input_ptr": 2,
                    "input_struct": 1,
                    "ptr1": 1
                },
                "param_2": {
                    "config": 2,
                    "config_data": 1,
                    "config_param": 1,
                    "config_ptr": 1,
                    "data": 3,
                    "data_2": 1,
                    "data_param": 2,
                    "data_pointer": 2,
                    "data_ptr": 1,
                    "flags": 2,
                    "input2": 1,
                    "input_data": 1,
                    "options": 5,
                    "param": 1,
                    "param_array": 2,
                    "param_list": 1,
                    "params": 2,
                    "pointer": 1,
                    "ptr2": 1
                },
                "param_3": {
                    "buffer": 1,
                    "byte_param": 2,
                    "data": 9,
                    "data_3": 1,
                    "data_param": 1,
                    "input": 3,
                    "input3": 1,
                    "input_data": 3,
                    "input_string": 10
                },
                "param_4": {
                    "counter": 1,
                    "data_4": 1,
                    "input4": 1,
                    "int_param": 2,
                    "output": 7,
                    "output_count": 1,
                    "output_counter": 1,
                    "output_data": 2,
                    "output_length": 1,
                    "output_param": 1,
                    "output_ptr": 2,
                    "output_size": 5,
                    "ptr3": 1,
                    "result": 5
                },
                "pbVar4": {
                    "byte_ptr1": 2,
                    "byte_var1": 1,
                    "curr_char": 1,
                    "current_byte": 6,
                    "current_char": 10,
                    "current_char_ptr": 1,
                    "current_data": 1,
                    "data_ptr": 2,
                    "ptr": 3,
                    "ptr2": 2,
                    "ptr_byte1": 1,
                    "ptr_data": 1
                },
                "pbVar5": {
                    "byte_ptr2": 2,
                    "byte_var2": 1,
                    "current_byte": 1,
                    "current_data_ptr": 1,
                    "next_byte": 6,
                    "next_char": 11,
                    "next_char_ptr": 1,
                    "next_data": 1,
                    "next_data_ptr": 1,
                    "next_ptr": 1,
                    "ptr2": 1,
                    "ptr3": 2,
                    "ptr_byte": 1,
                    "ptr_byte2": 1
                },
                "piVar2": {
                    "count": 1,
                    "counter": 1,
                    "counter_ptr": 2,
                    "current_value": 1,
                    "local_pointer": 1,
                    "local_var1": 2,
                    "next_size": 1,
                    "output_counter_ptr": 1,
                    "output_index": 1,
                    "output_pointer": 1,
                    "pointer_var": 1,
                    "ptr": 9,
                    "ptr_to_result": 1,
                    "ptr_var": 2,
                    "result_pointer": 1,
                    "temp_ptr": 3,
                    "temp_var": 1
                },
                "process_data_08009a80": {
                    "process_data": 8
                },
                "process_input_data_08009358": {
                    "process_input_data": 6,
                    "process_input_data2": 2
                },
                "tempVar": {
                    "temp_var": 1
                },
                "tempVar2": {
                    "temp_var2": 1
                },
                "tempVar3": {
                    "temp_var3": 1
                },
                "unaff_r9": {
                    "current_index": 1,
                    "data_size": 1,
                    "decode_result": 1,
                    "error_code": 1,
                    "local_variable": 1,
                    "other_var": 1,
                    "partial_result": 1,
                    "result2": 1,
                    "return_value": 4,
                    "status": 1,
                    "temp": 3,
                    "temp_var": 5,
                    "temp_var1": 1,
                    "temporary": 1,
                    "temporary_var": 1,
                    "total_length": 1,
                    "total_size": 1,
                    "unaff_r9": 3,
                    "unaffected_r9": 1,
                    "unaffected_var": 1
                }
            },
            "called": [
                "FUN_08009698",
                "FUN_08009f2c",
                "FUN_08009358",
                "FUN_08009a80",
                "FUN_08009d50"
            ],
            "calling": [
                "FUN_08009124",
                "FUN_080098d8"
            ],
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009550) */\n\nint decode_and_process_input_data_0800937c(int input,undefined4 *options,byte *input_string,int *output)\n\n{\n  int result;\n  int *ptr;\n  bool is_number;\n  byte *current_char;\n  byte *next_char;\n  int temp_var;\n  int temp_var2;\n  int *output_ptr;\n  uint flags;\n  int precision;\n  undefined4 temp_var3;\n  int width;\n  int total_size;\n  byte conversion_specifier;\n  undefined space_flag;\n  undefined plus_flag;\n  undefined hash_flag;\n  undefined4 zero_flag;\n  \n  output_ptr = output;\n  if ((input != 0) && (*(int *)(input + 0x18) == 0)) {\n    initialize_memory_blocks();\n  }\n  if (options == &DAT_0800aba4) {\n    options = *(undefined4 **)(input + 4);\n  }\n  else if (options == (undefined4 *)&DAT_0800abc4) {\n    options = *(undefined4 **)(input + 8);\n  }\n  else if (options == (undefined4 *)&DAT_0800ab84) {\n    options = *(undefined4 **)(input + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(options + 3) << 0x1c)) || (options[4] == 0)) &&\n     (temp_var2 = process_data(input,options), temp_var2 != 0)) {\n    return -1;\n  }\n  total_size = 0;\n  space_flag = 0x20;\n  plus_flag = 0x30;\n  current_char = input_string;\nLAB_080093be:\n  next_char = current_char;\n  if (*next_char != 0) goto LAB_08009474;\n  goto LAB_080093c8;\nLAB_08009474:\n  current_char = next_char + 1;\n  if (*next_char != 0x25) goto LAB_080093be;\nLAB_080093c8:\n  temp_var2 = (int)next_char - (int)input_string;\n  if (temp_var2 != 0) {\n    result = process_input_data(input,options,input_string,temp_var2);\n    if (result == -1) {\nLAB_08009568:\n      if ((int)((uint)*(ushort *)(options + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return total_size;\n    }\n    total_size = total_size + temp_var2;\n  }\n  if (*next_char == 0) goto LAB_08009568;\n  flags = 0;\n  width = 0;\n  precision = -1;\n  temp_var3 = 0;\n  hash_flag = 0;\n  zero_flag = 0;\n  current_char = next_char + 1;\n  while( true ) {\n    temp_var2 = find_character_in_string(\"#-0+ \",*current_char);\n    input_string = current_char + 1;\n    if (temp_var2 == 0) break;\n    flags = 1 << (temp_var2 + 0xf7ff54b0U & 0xff) | flags;\n    current_char = input_string;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    hash_flag = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    hash_flag = 0x2b;\n  }\n  if (*current_char == 0x2a) {\n    ptr = output_ptr + 1;\n    temp_var2 = *output_ptr;\n    output_ptr = ptr;\n    if (temp_var2 < 0) {\n      width = -temp_var2;\n      flags = flags | 2;\n      goto LAB_080094a6;\n    }\n  }\n  else {\n    is_number = false;\n    temp_var2 = width;\n    input_string = current_char;\n    while( true ) {\n      if (9 < *input_string - 0x30) break;\n      temp_var2 = temp_var2 * 10 + (*input_string - 0x30);\n      is_number = true;\n      input_string = input_string + 1;\n    }\n    if (!is_number) goto LAB_080094a6;\n  }\n  width = temp_var2;\nLAB_080094a6:\n  if (*input_string == 0x2e) {\n    if (input_string[1] == 0x2a) {\n      input_string = input_string + 2;\n      ptr = output_ptr + 1;\n      precision = *output_ptr;\n      output_ptr = ptr;\n      if (precision < 0) {\n        precision = -1;\n      }\n    }\n    else {\n      is_number = false;\n      temp_var2 = 0;\n      precision = 0;\n      while( true ) {\n        input_string = input_string + 1;\n        if (9 < *input_string - 0x30) break;\n        temp_var2 = temp_var2 * 10 + (*input_string - 0x30);\n        is_number = true;\n      }\n      if (is_number) {\n        precision = temp_var2;\n      }\n    }\n  }\n  temp_var2 = find_character_in_string(&DAT_0800ab56,*input_string,3);\n  if (temp_var2 != 0) {\n    input_string = input_string + 1;\n    flags = flags | 0x40 << (temp_var2 + 0xf7ff54aaU & 0xff);\n  }\n  conversion_specifier = *input_string;\n  input_string = input_string + 1;\n  temp_var2 = find_character_in_string(\"efgEFG\",conversion_specifier,6);\n  if (temp_var2 == 0) {\n    temp_var = decode_and_process_data(input,&flags,options,0x8009359,&output_ptr);\n    if (temp_var == -1) goto LAB_08009568;\n  }\n  else {\n    output_ptr = (int *)(((int)output_ptr + 7U & 0xfffffff8) + 8);\n  }\n  total_size = total_size + temp_var;\n  current_char = input_string;\n  goto LAB_080093be;\n}\n\n",
            "current_name": "decode_and_process_input_data_0800937c",
            "entrypoint": "0x0800937c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800937c": "decode_and_process_input_data_0800937c",
                "bVar3": "is_number",
                "decode_and_process_data_08009698": "decode_and_process_data",
                "find_character_in_string_08009f2c": "find_character_in_string",
                "iVar1": "result",
                "iVar2": "ptr",
                "iVar6": "temp_var2",
                "initialize_memory_blocks_08009d50": "initialize_memory_blocks",
                "local_30": "zero_flag",
                "local_45": "hash_flag",
                "local_6e": "plus_flag",
                "local_6f": "space_flag",
                "local_70": "conversion_specifier",
                "local_74": "total_size",
                "local_7c": "width",
                "local_80": "temp_var3",
                "local_84": "precision",
                "local_88": "flags",
                "local_8c": "output_ptr",
                "param_1": "input",
                "param_2": "options",
                "param_3": "input_string",
                "param_4": "output",
                "pbVar4": "current_char",
                "pbVar5": "next_char",
                "piVar2": "ptr",
                "process_data_08009a80": "process_data",
                "process_input_data_08009358": "process_input_data",
                "unaff_r9": "temp_var"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080095a8": {
            "additional_data": {
                "FUN_080095a8": {
                    "calculate_size_and_process_data": 1,
                    "convert_data": 1,
                    "decode_and_process": 1,
                    "decode_and_process_data": 1,
                    "decode_data": 1,
                    "extract_data": 1,
                    "parse_data": 1,
                    "process_data": 17,
                    "reverse_and_update_buffer": 1
                },
                "bVar5": {
                    "check_var": 1,
                    "condition": 2,
                    "condition_check": 2,
                    "flag": 4,
                    "has_extra_byte": 1,
                    "has_flag": 2,
                    "is_condition_met": 6,
                    "is_condition_true": 3,
                    "is_flag": 1,
                    "is_flag_set": 2,
                    "is_not_four": 1,
                    "is_set": 1,
                    "is_true": 2,
                    "is_valid": 2,
                    "use_offset": 1
                },
                "byte_val": {
                    "byte_value": 1
                },
                "byte_value": {
                    "flag": 1
                },
                "byte_value2": {
                    "temp": 1
                },
                "iVar1": {
                    "counter": 1,
                    "counter1": 1,
                    "counter_1": 1,
                    "i": 4,
                    "index": 12,
                    "index1": 6,
                    "index_1": 1,
                    "iteration": 1,
                    "iterator1": 1,
                    "loop_counter1": 1,
                    "outer_loop_counter": 1,
                    "result": 1
                },
                "iVar2": {
                    "callback_result": 2,
                    "index2": 6,
                    "index_2": 1,
                    "input_result": 1,
                    "iterator2": 1,
                    "loop_counter2": 1,
                    "result": 16,
                    "return_value": 2,
                    "temp": 1
                },
                "param_1": {
                    "arg1": 1,
                    "data": 7,
                    "data_1": 1,
                    "input": 9,
                    "input1": 1,
                    "input_data": 4,
                    "input_param": 5,
                    "input_value": 2,
                    "input_value1": 1
                },
                "param_2": {
                    "array": 2,
                    "buffer": 1,
                    "data": 5,
                    "data_1": 1,
                    "data_2": 1,
                    "data_array": 8,
                    "data_ptr": 1,
                    "header": 3,
                    "info": 2,
                    "input": 1,
                    "input2": 1,
                    "input_array": 2,
                    "metadata": 1,
                    "params": 2
                },
                "param_3": {
                    "buffer_size": 1,
                    "data_2": 1,
                    "data_3": 1,
                    "max_value": 1,
                    "output": 5,
                    "output1": 1,
                    "output_array": 1,
                    "output_array_size": 1,
                    "output_count": 1,
                    "output_length": 1,
                    "output_param": 1,
                    "output_ptr": 1,
                    "output_size": 7,
                    "output_value": 2,
                    "result": 4,
                    "size": 1,
                    "size_array": 1
                },
                "param_4": {
                    "additional_param": 2,
                    "arg4": 1,
                    "constant_param": 1,
                    "context": 1,
                    "data_4": 1,
                    "extra_param": 2,
                    "flag": 1,
                    "input3": 1,
                    "input_flag": 1,
                    "input_param_2": 1,
                    "input_value2": 1,
                    "other_param": 1,
                    "param": 7,
                    "param4": 2,
                    "param_4": 5,
                    "some_value": 2,
                    "unused_param": 1
                },
                "param_5": {
                    "callback": 14,
                    "callback_fn": 3,
                    "callback_func": 6,
                    "callback_function": 7,
                    "process_function": 1
                },
                "result": {
                    "return_val": 1
                },
                "return": {
                    "success_flag": 1
                },
                "uVar3": {
                    "count": 1,
                    "max_buffer_size": 1,
                    "max_data": 1,
                    "max_length": 1,
                    "max_size": 10,
                    "max_value": 15,
                    "param_size": 1,
                    "size": 1
                },
                "uVar4": {
                    "additional_offset": 1,
                    "additional_size": 1,
                    "additional_value": 3,
                    "count": 3,
                    "current_value": 2,
                    "extra_size": 2,
                    "increment": 1,
                    "loop_count": 1,
                    "new_length": 1,
                    "new_value": 1,
                    "offset": 10,
                    "temp_size": 3,
                    "var_1": 1,
                    "var_14": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08009698"
            ],
            "code": "\nundefined4\ncalculate_size_and_process_data_080095a8(undefined4 input,uint *data_array,uint *output_size,undefined4 param,code *callback)\n\n{\n  int index;\n  int result;\n  uint max_value;\n  uint offset;\n  bool is_condition_met;\n  \n  max_value = data_array[4];\n  if ((int)data_array[4] < (int)data_array[2]) {\n    max_value = data_array[2];\n  }\n  *output_size = max_value;\n  if (*(char *)((int)data_array + 0x43) != '\\0') {\n    *output_size = max_value + 1;\n  }\n  if ((int)(*data_array << 0x1a) < 0) {\n    *output_size = *output_size + 2;\n  }\n  if ((*data_array & 6) == 0) {\n    for (index = 0; index < (int)(data_array[3] - *output_size); index = index + 1) {\n      result = (*callback)(input,param,(int)data_array + 0x19,1);\n      if (result == -1) {\n        success_flag 0xffffffff;\n      }\n    }\n  }\n  max_value = (uint)*(byte *)((int)data_array + 0x43);\n  if (max_value != 0) {\n    max_value = 1;\n  }\n  offset = max_value;\n  if ((int)(*data_array << 0x1a) < 0) {\n    *(undefined *)((int)data_array + max_value + 0x43) = 0x30;\n    offset = max_value + 2;\n    *(undefined *)((int)data_array + max_value + 0x44) = *(undefined *)((int)data_array + 0x45);\n  }\n  index = (*callback)(input,param,(int)data_array + 0x43,offset);\n  if (index != -1) {\n    max_value = data_array[3];\n    is_condition_met = (*data_array & 6) != 4;\n    if (is_condition_met) {\n      max_value = 0;\n    }\n    offset = 0;\n    if (!is_condition_met) {\n      max_value = max_value - *output_size;\n    }\n    if (!is_condition_met) {\n      max_value = max_value & ~((int)max_value >> 0x1f);\n    }\n    if ((int)data_array[4] < (int)data_array[2]) {\n      max_value = max_value + (data_array[2] - data_array[4]);\n    }\n    while( true ) {\n      if (max_value == offset) {\n        success_flag 0;\n      }\n      index = (*callback)(input,param,(int)data_array + 0x1a,1);\n      if (index == -1) break;\n      offset = offset + 1;\n    }\n  }\n  success_flag 0xffffffff;\n}\n\n",
            "current_name": "calculate_size_and_process_data_080095a8",
            "entrypoint": "0x080095a8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080095a8": "calculate_size_and_process_data_080095a8",
                "bVar5": "is_condition_met",
                "iVar1": "index",
                "iVar2": "result",
                "param_1": "input",
                "param_2": "data_array",
                "param_3": "output_size",
                "param_4": "param",
                "param_5": "callback",
                "return": "success_flag",
                "uVar3": "max_value",
                "uVar4": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009698": {
            "additional_data": {
                "FUN_08009698": {
                    "convert_and_process_data": 1,
                    "convert_data": 2,
                    "decode_and_process_data": 5,
                    "parse_and_process_data": 1,
                    "process_data": 19,
                    "process_information": 1,
                    "reverse_and_process_data": 1,
                    "translate_data": 1
                },
                "LAB_080096c8": {
                    "label_2": 1
                },
                "LAB_080096e8": {
                    "label_3": 1
                },
                "LAB_0800970e": {
                    "label_12": 1
                },
                "LAB_08009728": {
                    "label_9": 1
                },
                "LAB_0800974e": {
                    "label_10": 1
                },
                "LAB_0800975c": {
                    "label_11": 1
                },
                "LAB_08009778": {
                    "label_5": 1
                },
                "LAB_080097be": {
                    "label_7": 1
                },
                "LAB_080097d2": {
                    "label_14": 1
                },
                "LAB_080097e2": {
                    "label_4": 1
                },
                "LAB_08009816": {
                    "label_6": 1
                },
                "LAB_0800983e": {
                    "label_13": 1
                },
                "LAB_08009852": {
                    "label_1": 1
                },
                "LAB_0801066c": {
                    "label_8": 1
                },
                "bVar1": {
                    "byte_val": 8,
                    "byte_value": 15,
                    "byte_var": 5,
                    "first_byte": 2,
                    "first_char": 1
                },
                "iVar2": {
                    "count": 1,
                    "index": 20,
                    "index1": 1,
                    "index_var": 1,
                    "int_var": 1,
                    "integer_var": 1,
                    "result": 5,
                    "search_result": 1
                },
                "iVar4": {
                    "another_integer_var": 1,
                    "i": 1,
                    "index2": 1,
                    "inner_index": 2,
                    "inner_index_var": 1,
                    "inner_result": 3,
                    "int_var2": 1,
                    "iteration": 2,
                    "loop_counter": 1,
                    "process_result": 2,
                    "result": 13,
                    "temp_index": 2,
                    "value": 1
                },
                "local_24": {
                    "buffer": 1,
                    "calculated_size": 1,
                    "counter_values": 1,
                    "local_arr": 2,
                    "local_array": 9,
                    "local_vars": 1,
                    "output_array": 1,
                    "output_length": 1,
                    "output_size": 1,
                    "result_size": 1,
                    "size": 2,
                    "size_array": 5,
                    "size_values": 1,
                    "temp_array": 3,
                    "values": 1
                },
                "param_1": {
                    "arg1": 7,
                    "error_code": 1,
                    "input": 6,
                    "input_parameter": 1,
                    "input_value": 3,
                    "param": 1,
                    "param1": 10,
                    "param_1": 1,
                    "size": 1
                },
                "param_2": {
                    "arg2": 2,
                    "data": 16,
                    "data_array": 2,
                    "data_ptr": 3,
                    "input": 1,
                    "input_array": 1,
                    "input_buffer": 1,
                    "input_data": 4,
                    "param2": 1
                },
                "param_3": {
                    "additional_parameter": 1,
                    "arg3": 7,
                    "argument": 1,
                    "input_length": 1,
                    "input_size": 1,
                    "input_value2": 1,
                    "param": 1,
                    "param3": 10,
                    "param_3": 2,
                    "param_length": 1,
                    "size": 5
                },
                "param_4": {
                    "arg4": 2,
                    "callback": 12,
                    "callback_func": 3,
                    "callback_function": 3,
                    "data_processing_function": 1,
                    "function_callback": 1,
                    "function_ptr": 2,
                    "param4": 1,
                    "process_data": 1,
                    "process_func": 4,
                    "process_function": 1
                },
                "param_5": {
                    "arg5": 3,
                    "count": 2,
                    "counter": 4,
                    "counter_array": 1,
                    "iterators": 1,
                    "output": 3,
                    "output_array": 1,
                    "output_buffer_ptr": 1,
                    "output_data": 6,
                    "param5": 2,
                    "param_list": 1,
                    "param_list_ptr": 1,
                    "param_ptr": 1,
                    "pointer": 1,
                    "ptr_ptr": 1,
                    "ptr_to_data": 1,
                    "ptr_to_ptr": 1
                },
                "pcVar11": {
                    "another_char_pointer_var": 1,
                    "char_pointer1": 1,
                    "char_ptr": 2,
                    "char_ptr1": 1,
                    "char_ptr2": 3,
                    "converted_data": 1,
                    "current_char": 2,
                    "hex_str": 1,
                    "output": 4,
                    "output_digits": 1,
                    "output_ptr": 1,
                    "output_str": 2,
                    "output_string": 1,
                    "processed_data": 1,
                    "ptr": 1,
                    "ptr2": 1,
                    "ptr_char1": 1,
                    "result": 2,
                    "str_ptr": 3,
                    "temp_pointer": 1
                },
                "pcVar12": {
                    "char_array": 1,
                    "char_pointer": 1,
                    "char_pointer2": 1,
                    "char_ptr": 2,
                    "char_ptr2": 1,
                    "char_ptr3": 3,
                    "current_char": 1,
                    "dec_string": 1,
                    "final_char_pointer_var": 1,
                    "format_str": 1,
                    "input": 2,
                    "input_digits": 1,
                    "input_ptr": 1,
                    "input_string": 2,
                    "original_data": 1,
                    "output": 1,
                    "output_string": 1,
                    "ptr_char2": 1,
                    "start_output_str": 1,
                    "str": 3,
                    "string_ptr": 1,
                    "temp_char_ptr": 1,
                    "temp_ptr": 1,
                    "temp_str": 1
                },
                "pcVar5": {
                    "char_pointer_var": 1,
                    "char_ptr": 2,
                    "char_ptr1": 2,
                    "digit_chars": 1,
                    "digits": 2,
                    "hex_characters": 1,
                    "hex_chars": 12,
                    "hex_digits": 6,
                    "hex_string": 3,
                    "hex_values": 1
                },
                "ppcVar8": {
                    "char_ptr_ptr": 1,
                    "double_char_pointer": 1,
                    "pointer_to_char_pointer": 1,
                    "ptr_ptr_char": 1,
                    "str_array": 1,
                    "str_ptr": 1,
                    "string_ptr": 1
                },
                "ppuVar7": {
                    "double_pointer": 1,
                    "pointer_ptr": 1,
                    "pointer_to_pointer": 1,
                    "pptr": 1,
                    "ptr_ptr": 3
                },
                "puVar3": {
                    "buffer_ptr": 1,
                    "counter": 1,
                    "current_pointer": 1,
                    "data_pointer": 2,
                    "pointer": 3,
                    "pointer_var": 1,
                    "ptr": 15,
                    "ptr1": 1,
                    "ptr_to_data_ptr": 1,
                    "ptr_value": 2,
                    "ptr_var": 2,
                    "temp_data": 1
                },
                "uVar10": {
                    "another_result": 1,
                    "copy_value": 2,
                    "length": 4,
                    "num_val3": 1,
                    "original_length": 1,
                    "second_value": 1,
                    "size": 3,
                    "string_value": 1,
                    "temp": 5,
                    "temp_value": 6,
                    "temp_value_3": 1,
                    "temp_var": 1,
                    "u_var10": 1,
                    "value3": 1,
                    "var10": 2
                },
                "uVar6": {
                    "base": 13,
                    "base_value": 1,
                    "bit_value": 1,
                    "flag": 1,
                    "num_val1": 1,
                    "num_var": 1,
                    "temp_value": 1,
                    "temp_value_1": 1,
                    "u_value": 1,
                    "unsigned_var": 1,
                    "value": 6,
                    "value1": 1,
                    "var6": 2
                },
                "uVar9": {
                    "converted_value": 1,
                    "count": 1,
                    "input_value": 2,
                    "length": 2,
                    "num": 1,
                    "num_val2": 1,
                    "result": 4,
                    "result_length": 1,
                    "result_var": 1,
                    "size": 1,
                    "temp_value_2": 1,
                    "value": 12,
                    "value2": 1,
                    "var9": 2
                }
            },
            "called": [
                "FUN_08009f2c",
                "FUN_080095a8"
            ],
            "calling": [
                "FUN_0800937c"
            ],
            "code": "\nuint decode_and_process_data_08009698(undefined4 param1,uint *data,undefined4 param3,code *callback,uint **output_data)\n\n{\n  byte byte_value;\n  int index;\n  uint *ptr;\n  int result;\n  char *hex_chars;\n  uint base;\n  uint **ptr_ptr;\n  char **double_char_pointer;\n  uint value;\n  uint temp_value;\n  char *output;\n  char *str;\n  uint local_array [2];\n  \n  byte_value = *(byte *)(data + 6);\n  str = (char *)((int)data + 0x43);\n  if (byte_value != 0x6e) {\n    if (byte_value < 0x6f) {\n      if (byte_value != 99) {\n        if (byte_value < 100) {\n          if (byte_value == 0) goto label_1;\n          if (byte_value != 0x58) goto label_2;\n          *(undefined *)((int)data + 0x45) = 0x58;\n          hex_chars = \"0123456789ABCDEF\";\nlabel_4:\n          base = *data;\n          ptr = *output_data;\n          *output_data = ptr + 1;\n          if (((base & 0x80) == 0) && ((int)(base << 0x19) < 0)) {\n            value = (uint)*(ushort *)ptr;\n          }\n          else {\n            value = *ptr;\n          }\n          if ((int)(base << 0x1f) < 0) {\n            *data = base | 0x20;\n          }\n          if (value == 0) {\n            *data = *data & 0xffffffdf;\n          }\n          base = 0x10;\nlabel_5:\n          *(undefined *)((int)data + 0x43) = 0;\n        }\n        else {\n          if ((byte_value != 100) && (byte_value != 0x69)) goto label_2;\n          value = *data;\n          ptr = *output_data;\n          if ((value & 0x80) == 0) {\n            *output_data = ptr + 1;\n            if ((value & 0x40) == 0) goto label_3;\n            value = (uint)(short)*(ushort *)ptr;\n          }\n          else {\n            *output_data = ptr + 1;\nlabel_3:\n            value = *ptr;\n          }\n          if ((int)value < 0) {\n            value = -value;\n            *(undefined *)((int)data + 0x43) = 0x2d;\n          }\n          hex_chars = \"0123456789ABCDEF\";\n          base = 10;\n        }\n        temp_value = data[1];\n        data[2] = temp_value;\n        output = str;\n        if ((int)temp_value < 0) {\n          if (value != 0) goto label_6;\nLAB_080098c4:\n          *(char *)((int)data + 0x42) = *hex_chars;\n          output = (char *)((int)data + 0x42);\n        }\n        else {\n          *data = *data & 0xfffffffb;\n          if (value == 0) {\n            if (temp_value != 0) goto LAB_080098c4;\n          }\n          else {\nlabel_6:\n            do {\n              temp_value = value / base;\n              output = output + -1;\n              *output = hex_chars[value - base * temp_value];\n              value = temp_value;\n            } while (temp_value != 0);\n          }\n        }\n        if (((base == 8) && ((int)(*data << 0x1f) < 0)) && ((int)data[1] <= (int)data[4]))\n        {\n          output[-1] = '0';\n          output = output + -1;\n        }\n        data[4] = (int)str - (int)output;\n        str = output;\n        goto label_7;\n      }\n      ptr = *output_data;\n      *output_data = ptr + 1;\n      *(char *)((int)data + 0x42) = (char)*ptr;\nlabel_9:\n      str = (char *)((int)data + 0x42);\n      value = 1;\n    }\n    else {\n      if (byte_value != 0x73) {\n        if (byte_value < 0x74) {\n          if (byte_value == 0x6f) {\nlabel_10:\n            value = *data;\n            ptr = *output_data;\n            if ((value & 0x80) == 0) {\n              *output_data = ptr + 1;\n              if ((value & 0x40) == 0) goto label_11;\n              value = (uint)*(ushort *)ptr;\n            }\n            else {\n              *output_data = ptr + 1;\nlabel_11:\n              value = *ptr;\n            }\n            if (byte_value == 0x6f) {\n              base = 8;\n            }\n            else {\n              base = 10;\n            }\n            hex_chars = \"0123456789ABCDEF\";\n            goto label_5;\n          }\n          if (byte_value == 0x70) {\n            *data = *data | 0x20;\nlabel_12:\n            hex_chars = \"0123456789abcdef\";\n            *(undefined *)((int)data + 0x45) = 0x78;\n            goto label_4;\n          }\n        }\n        else {\n          if (byte_value == 0x75) goto label_10;\n          if (byte_value == 0x78) goto label_12;\n        }\nlabel_2:\n        *(byte *)((int)data + 0x42) = byte_value;\n        goto label_9;\n      }\n      double_char_pointer = (char **)*output_data;\n      *output_data = (uint *)(double_char_pointer + 1);\n      str = *double_char_pointer;\n      index = find_character_in_string_08009f2c(str,0,data[1]);\n      if (index != 0) {\n        data[1] = index - (int)str;\n      }\n      value = data[1];\n    }\n    data[4] = value;\n    *(undefined *)((int)data + 0x43) = 0;\n    goto label_7;\n  }\n  value = *data;\n  ptr_ptr = (uint **)*output_data;\n  base = data[5];\n  if ((value & 0x80) == 0) {\n    *output_data = (uint *)(ptr_ptr + 1);\n    ptr = *ptr_ptr;\n    if ((value & 0x40) == 0) goto label_13;\n    *(short *)ptr = (short)base;\n  }\n  else {\n    *output_data = (uint *)(ptr_ptr + 1);\n    ptr = *ptr_ptr;\nlabel_13:\n    *ptr = base;\n  }\nlabel_1:\n  data[4] = 0;\nlabel_7:\n  index = calculate_size_and_process_data_080095a8(param1,data,local_array,param3,callback);\n  if ((index == -1) || (index = (*callback)(param1,param3,str,data[4]), index == -1)) {\nlabel_14:\n    value = 0xffffffff;\n  }\n  else {\n    if ((int)(*data << 0x1e) < 0) {\n      for (index = 0; index < (int)(data[3] - local_array[0]); index = index + 1) {\n        result = (*callback)(param1,param3,(int)data + 0x19,1);\n        if (result == -1) goto label_14;\n      }\n    }\n    value = data[3];\n    if ((int)data[3] < (int)local_array[0]) {\n      value = local_array[0];\n    }\n  }\n  return value;\n}\n\n",
            "current_name": "decode_and_process_data_08009698",
            "entrypoint": "0x08009698",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009698": "decode_and_process_data_08009698",
                "LAB_080096c8": "label_2",
                "LAB_080096e8": "label_3",
                "LAB_0800970e": "label_12",
                "LAB_08009728": "label_9",
                "LAB_0800974e": "label_10",
                "LAB_0800975c": "label_11",
                "LAB_08009778": "label_5",
                "LAB_080097be": "label_7",
                "LAB_080097d2": "label_14",
                "LAB_080097e2": "label_4",
                "LAB_08009816": "label_6",
                "LAB_0800983e": "label_13",
                "LAB_08009852": "label_1",
                "bVar1": "byte_value",
                "iVar2": "index",
                "iVar4": "result",
                "local_24": "local_array",
                "param_1": "param1",
                "param_2": "data",
                "param_3": "param3",
                "param_4": "callback",
                "param_5": "output_data",
                "pcVar11": "output",
                "pcVar12": "str",
                "pcVar5": "hex_chars",
                "ppcVar8": "double_char_pointer",
                "ppuVar7": "ptr_ptr",
                "puVar3": "ptr",
                "uVar10": "temp_value",
                "uVar6": "base",
                "uVar9": "value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080098d8": {
            "additional_data": {
                "FUN_080098d8": {
                    "decode_and_process_input": 3,
                    "decode_and_process_input_data": 2,
                    "initialize_and_process_data": 1,
                    "initialize_and_process_input_data": 2,
                    "initialize_decode_and_process": 1,
                    "process_and_decode_input": 1,
                    "process_data": 4,
                    "process_input_data": 17
                },
                "iVar1": {
                    "data": 1,
                    "data_address": 12,
                    "data_block": 1,
                    "data_offset": 1,
                    "data_ptr": 9,
                    "data_var": 1,
                    "data_var_1": 1,
                    "memory_block": 2,
                    "memory_blocks_ptr": 1,
                    "memory_offset": 1
                },
                "param_1": {
                    "arg1": 2,
                    "data": 4,
                    "data_param": 2,
                    "data_param_1": 1,
                    "data_ptr": 2,
                    "input_data": 5,
                    "input_param": 4,
                    "input_param1": 4,
                    "input_param_1": 3,
                    "input_parameter": 1,
                    "input_size": 1,
                    "mem_address": 1,
                    "param": 1
                },
                "param_2": {
                    "arg2": 2,
                    "data_param_2": 1,
                    "input_data": 1,
                    "input_param2": 4,
                    "input_param_2": 3,
                    "param2": 11,
                    "param_2": 8,
                    "second_parameter": 1
                },
                "param_3": {
                    "arg3": 2,
                    "data_param_3": 1,
                    "input_param3": 4,
                    "input_param_3": 3,
                    "param3": 12,
                    "param_3": 8,
                    "third_parameter": 1
                },
                "param_4": {
                    "arg4": 2,
                    "data_param_4": 1,
                    "fourth_parameter": 1,
                    "input_param4": 4,
                    "input_param_4": 3,
                    "param4": 12,
                    "param_4": 8
                },
                "uStack_4": {
                    "arg4_copy": 1,
                    "copy_param_4": 1,
                    "local_var3": 1,
                    "modified_param4": 1,
                    "param4": 1,
                    "param4_copy": 2,
                    "param4_var": 1,
                    "param_4": 1,
                    "param_stack3": 1,
                    "stack_4": 2,
                    "stack_param3": 2,
                    "stack_param_3": 1,
                    "stack_var3": 3,
                    "stack_variable4": 1,
                    "stack_variable_4": 1,
                    "temp_var4": 1
                },
                "uStack_8": {
                    "arg3_copy": 1,
                    "copy_param_3": 1,
                    "local_var2": 1,
                    "modified_param3": 1,
                    "param3": 1,
                    "param3_copy": 2,
                    "param3_var": 1,
                    "param_8": 1,
                    "param_stack2": 1,
                    "stack_8": 2,
                    "stack_param2": 2,
                    "stack_param_2": 1,
                    "stack_var2": 3,
                    "stack_variable8": 1,
                    "stack_variable_8": 1,
                    "temp_var3": 1
                },
                "uStack_c": {
                    "arg2_copy": 2,
                    "copy_param_2": 1,
                    "local_var1": 1,
                    "modified_param2": 1,
                    "param2": 1,
                    "param2_copy": 2,
                    "param2_var": 1,
                    "param_c": 1,
                    "param_stack1": 1,
                    "stack_c": 2,
                    "stack_param": 1,
                    "stack_param1": 2,
                    "stack_var1": 3,
                    "stack_variable_c": 2,
                    "temp_var2": 1
                },
                "uVar2": {
                    "arg1_copy": 1,
                    "data_copy": 1,
                    "data_param": 2,
                    "data_param_copy": 1,
                    "data_pointer": 1,
                    "data_value": 1,
                    "data_var": 1,
                    "data_var_2": 1,
                    "input_copy": 1,
                    "input_data_copy": 1,
                    "input_param": 1,
                    "input_param_1_copy": 1,
                    "input_ptr": 2,
                    "input_var": 2,
                    "original_param1": 1,
                    "param1": 3,
                    "param1_copy": 2,
                    "param_1_copy": 3,
                    "param_var": 1,
                    "processed_input": 1,
                    "return_value": 1,
                    "temp_var1": 1
                }
            },
            "called": [
                "FUN_08009d50",
                "FUN_0800937c"
            ],
            "calling": [
                "FUN_08007544",
                "FUN_080075dc",
                "FUN_080077b0",
                "FUN_08008078",
                "FUN_08007594"
            ],
            "code": "\nvoid decode_and_process_input_data_080098d8(undefined4 input_data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int data_address;\n  undefined4 param1;\n  undefined4 stack_var1;\n  undefined4 stack_var2;\n  undefined4 stack_var3;\n  \n  data_address = DAT_20000090;\n  param1 = input_data;\n  stack_var1 = param2;\n  stack_var2 = param3;\n  stack_var3 = param4;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    initialize_memory_blocks_08009d50(DAT_20000090);\n  }\n  decode_and_process_input_data_080098d8_0800937c(data_address,*(undefined4 *)(data_address + 8),input_data,&stack_var1,param1,&stack_var1);\n  return;\n}\n\n",
            "current_name": "decode_and_process_input_data_080098d8",
            "entrypoint": "0x080098d8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080098d8": "decode_and_process_input_data_080098d8",
                "iVar1": "data_address",
                "param_1": "input_data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uStack_4": "stack_var3",
                "uStack_8": "stack_var2",
                "uStack_c": "stack_var1",
                "uVar2": "param1"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009908": {
            "additional_data": {
                "FUN_08009908": {
                    "allocate_and_assign_memory": 2,
                    "allocate_and_copy_data": 2,
                    "allocate_and_process_data": 12,
                    "allocate_memory_and_process_data": 2,
                    "allocate_memory_and_update_data": 1,
                    "process_and_allocate_memory": 3,
                    "process_data": 8,
                    "process_memory_data": 1
                },
                "allocate_and_assign_memory_block_08009270": {
                    "allocate_and_assign_memory": 2,
                    "allocate_and_assign_memory_block": 2,
                    "allocate_memory": 2,
                    "allocate_memory_block": 4
                },
                "calculate_sum_0800a154": {
                    "calculate_sum": 10
                },
                "copy_data_to_buffer_080091b0": {
                    "copy_data_to_buffer": 9,
                    "copy_to_buffer": 1
                },
                "iVar2": {
                    "allocated_memory": 2,
                    "allocated_memory_block": 2,
                    "allocated_size": 1,
                    "allocation_result": 1,
                    "result": 21,
                    "return_value": 4
                },
                "param_1": {
                    "block_size": 1,
                    "data_length": 3,
                    "data_size": 5,
                    "input_length": 1,
                    "input_size": 6,
                    "size": 11,
                    "size_of_data": 2,
                    "size_of_param1": 1,
                    "source_size": 1
                },
                "param_2": {
                    "buffer_size": 6,
                    "count": 3,
                    "data_size": 1,
                    "length": 2,
                    "limit": 3,
                    "max_size": 1,
                    "num": 1,
                    "requested_size": 1,
                    "required_memory_size": 2,
                    "required_size": 4,
                    "size_of_param2": 1,
                    "sum_threshold": 2,
                    "target_size": 4
                },
                "process_data_080091d8": {
                    "process_data": 10
                },
                "uVar1": {
                    "base_address": 1,
                    "buffer": 1,
                    "constant_value": 1,
                    "data": 3,
                    "data_address": 1,
                    "data_pointer": 1,
                    "data_ptr": 1,
                    "default_value": 2,
                    "initial_memory_address": 1,
                    "initial_value": 3,
                    "memory": 1,
                    "memory_address": 3,
                    "memory_allocation_var": 1,
                    "memory_block": 7,
                    "result": 2,
                    "target_memory": 1,
                    "temp": 1
                },
                "uVar3": {
                    "sum": 26,
                    "sum_of_data": 3,
                    "sum_result": 1,
                    "sum_value": 1
                }
            },
            "called": [
                "FUN_080091d8",
                "FUN_080091b0",
                "FUN_0800a154",
                "FUN_08009270"
            ],
            "calling": [
                "FUN_0800288c",
                "FUN_080027f0",
                "FUN_08002acc"
            ],
            "code": "\nint allocate_memory_and_process_data_08009908(int size,uint buffer_size)\n\n{\n  undefined4 memory_block;\n  int result;\n  uint sum;\n  \n  memory_block = DAT_20000090;\n  if (size != 0) {\n    if (buffer_size == 0) {\n      process_data();\n      result = 0;\n    }\n    else {\n      sum = calculate_sum();\n      result = size;\n      if ((sum < buffer_size) && (result = allocate_memory_block(memory_block,buffer_size), result != 0)) {\n        copy_data_to_buffer(result,size,buffer_size);\n        process_data(memory_block,size);\n      }\n    }\n    return result;\n  }\n  result = allocate_memory_block(DAT_20000090,buffer_size,buffer_size,&DAT_20000090);\n  return result;\n}\n\n",
            "current_name": "allocate_memory_and_process_data_08009908",
            "entrypoint": "0x08009908",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009908": "allocate_memory_and_process_data_08009908",
                "allocate_and_assign_memory_block_08009270": "allocate_memory_block",
                "calculate_sum_0800a154": "calculate_sum",
                "copy_data_to_buffer_080091b0": "copy_data_to_buffer",
                "iVar2": "result",
                "param_1": "size",
                "param_2": "buffer_size",
                "process_data_080091d8": "process_data",
                "uVar1": "memory_block",
                "uVar3": "sum"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009918": {
            "additional_data": {
                "FUN_08009918": {
                    "allocate_and_assign_memory": 7,
                    "allocate_and_assign_memory_block": 5,
                    "allocate_and_check_memory": 1,
                    "allocate_and_save_memory": 1,
                    "allocate_and_set_memory": 1,
                    "allocate_and_set_param": 1,
                    "allocate_and_update_param": 1,
                    "allocate_and_update_pointer": 1,
                    "allocate_memory_and_assign": 1,
                    "allocate_memory_and_assign_to_pointer": 1,
                    "allocate_memory_and_store_result": 1,
                    "allocate_memory_and_update_param": 1,
                    "allocate_memory_if_available": 1,
                    "initialize_and_allocate_memory": 1,
                    "initialize_memory": 5,
                    "initialize_memory_allocation": 2
                },
                "allocate_memory_block_08008804": {
                    "allocate_memory_block": 1
                },
                "iVar1": {
                    "allocated_block": 4,
                    "allocation_result": 20,
                    "allocation_status": 2,
                    "memory_block": 2
                },
                "param_1": {
                    "memory_address": 1,
                    "output_address": 1,
                    "output_buffer": 1,
                    "output_pointer": 5,
                    "output_ptr": 6,
                    "output_variable": 1,
                    "result": 6,
                    "result_address": 1,
                    "result_pointer": 5,
                    "result_ptr": 4
                },
                "param_2": {
                    "allocation_size": 1,
                    "block_size": 13,
                    "input_parameter": 1,
                    "input_value": 2,
                    "memory_size": 4,
                    "requested_size": 1,
                    "size": 9
                }
            },
            "called": [
                "FUN_08008804"
            ],
            "calling": [
                "FUN_08009270"
            ],
            "code": "\nvoid allocate_and_assign_memory_block_08009918(int *output_ptr,undefined4 block_size)\n\n{\n  int allocation_result;\n  \n  DAT_20000a38 = 0;\n  allocation_result = allocate_memory_block(block_size);\n  if ((allocation_result == -1) && (DAT_20000a38 != 0)) {\n    *output_ptr = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "current_name": "allocate_and_assign_memory_block_08009918",
            "entrypoint": "0x08009918",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009918": "allocate_and_assign_memory_block_08009918",
                "allocate_memory_block_08008804": "allocate_memory_block",
                "iVar1": "allocation_result",
                "param_1": "output_ptr",
                "param_2": "block_size"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009938": {
            "additional_data": {
                "FUN_08009938": {
                    "find_char": 2,
                    "find_char_in_string": 4,
                    "find_character": 13,
                    "find_character_in_string": 1,
                    "find_first_char": 2,
                    "find_first_char_position": 1,
                    "find_first_character": 1,
                    "find_first_occurrence": 7
                },
                "param_1": {
                    "input_string": 1,
                    "str": 3,
                    "string": 27
                },
                "param_2": {
                    "character": 23,
                    "target": 2,
                    "target_char": 6
                },
                "pcVar1": {
                    "current_char": 26,
                    "current_character": 4
                }
            },
            "called": [],
            "calling": [
                "FUN_0800997e"
            ],
            "code": "\nchar * find_character_in_string_08009938(char *string,char character)\n\n{\n  char *current_char;\n  \n  do {\n    current_char = string;\n    if (*current_char == '\\0') {\n      if (character != '\\0') {\n        current_char = (char *)0x0;\n      }\n      return current_char;\n    }\n    string = current_char + 1;\n  } while (character != *current_char);\n  return current_char;\n}\n\n",
            "current_name": "find_character_in_string_08009938",
            "entrypoint": "0x08009938",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009938": "find_character_in_string_08009938",
                "param_1": "string",
                "param_2": "character",
                "pcVar1": "current_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009954": {
            "additional_data": {
                "FUN_08009954": {
                    "copy_string": 20,
                    "copy_string_and_terminate": 1,
                    "copy_string_with_length": 1,
                    "copy_string_with_length_limit": 1,
                    "copy_string_with_limit": 3,
                    "copy_string_with_null": 1,
                    "copy_string_with_null_termination": 1,
                    "copy_string_with_null_terminator": 2,
                    "copy_string_with_terminator": 1
                },
                "cVar1": {
                    "current_char": 25,
                    "current_character": 4
                },
                "iVar2": {
                    "length": 1,
                    "remaining_characters": 1,
                    "remaining_chars": 3,
                    "remaining_length": 19,
                    "remaining_limit": 1,
                    "remaining_size": 4
                },
                "param_1": {
                    "dest": 4,
                    "dest_string": 1,
                    "destination": 26
                },
                "param_2": {
                    "source": 26,
                    "source_string": 1,
                    "src": 4
                },
                "param_3": {
                    "length": 20,
                    "limit": 4,
                    "max_length": 1,
                    "num_chars": 1,
                    "size": 5
                },
                "pcVar3": {
                    "current_dest": 2,
                    "current_destination": 2,
                    "current_destination_char": 1,
                    "dest_iterator": 1,
                    "dest_pointer": 1,
                    "dest_ptr": 14,
                    "destination_iter": 1,
                    "destination_iterator": 1,
                    "destination_ptr": 4,
                    "dst_ptr": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08002e44"
            ],
            "code": "\nvoid copy_string_with_length_limit_08009954(char *destination,char *source,int length)\n\n{\n  char current_char;\n  int remaining_length;\n  char *dest_ptr;\n  \n  do {\n    dest_ptr = destination;\n    remaining_length = length;\n    if (remaining_length == 0) {\n      return;\n    }\n    current_char = *source;\n    destination = dest_ptr + 1;\n    *dest_ptr = current_char;\n    source = source + 1;\n    length = remaining_length + -1;\n  } while (current_char != '\\0');\n  for (; destination != dest_ptr + remaining_length; destination = destination + 1) {\n    *destination = '\\0';\n  }\n  return;\n}\n\n",
            "current_name": "copy_string_with_length_limit_08009954",
            "entrypoint": "0x08009954",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009954": "copy_string_with_length_limit_08009954",
                "cVar1": "current_char",
                "iVar2": "remaining_length",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "length",
                "pcVar3": "dest_ptr"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800997e": {
            "additional_data": {
                "FUN_0800997e": {
                    "find_last_character": 1,
                    "find_last_character_in_string": 3,
                    "find_last_character_index": 5,
                    "find_last_character_position": 4,
                    "find_last_index_of_character": 1,
                    "find_last_occurrence": 10,
                    "find_last_occurrence_in_string": 1,
                    "find_last_occurrence_index": 3,
                    "find_last_occurrence_of_character": 2,
                    "find_last_occurrence_of_character_in_string": 1
                },
                "iVar1": {
                    "character_index": 2,
                    "character_position": 1,
                    "current_character_index": 1,
                    "current_index": 4,
                    "current_occurrence": 1,
                    "current_occurrence_index": 1,
                    "current_position": 2,
                    "found_index": 1,
                    "index": 5,
                    "last_character_index": 1,
                    "last_index": 1,
                    "last_occurrence": 1,
                    "last_occurrence_index": 1,
                    "occurrence": 6,
                    "position": 2
                },
                "iVar2": {
                    "last_character_index": 2,
                    "last_character_position": 1,
                    "last_index": 6,
                    "last_occurrence": 10,
                    "last_occurrence_index": 4,
                    "last_position": 4,
                    "previous_character_index": 1,
                    "result": 2
                },
                "param_1": {
                    "input_string": 3,
                    "str": 5,
                    "str_ptr": 1,
                    "string": 22
                },
                "param_2": {
                    "length": 19,
                    "str_len": 1,
                    "str_length": 1,
                    "string_length": 10
                },
                "param_3": {
                    "char_to_find": 1,
                    "character": 26,
                    "character_to_find": 3,
                    "target_char": 1
                },
                "param_4": {
                    "additional_character": 2,
                    "additional_param": 1,
                    "char_to_ignore": 1,
                    "character_encoding": 1,
                    "character_not_found": 1,
                    "character_offset": 1,
                    "delimiter": 3,
                    "extra": 1,
                    "extra_param": 1,
                    "extra_parameter": 1,
                    "flag": 2,
                    "offset": 6,
                    "other_character": 1,
                    "param_4": 3,
                    "size": 1,
                    "terminating_character": 1,
                    "termination_char": 1,
                    "unknown": 1,
                    "unknown_parameter": 1,
                    "unused": 1
                }
            },
            "called": [
                "FUN_08009938"
            ],
            "calling": [
                "FUN_08002e44"
            ],
            "code": "\nint find_last_occurrence_index_0800997e(int string,int length,undefined4 character,undefined4 offset)\n\n{\n  int occurrence;\n  int last_occurrence;\n  \n  if (length != 0) {\n    last_occurrence = 0;\n    while (occurrence = find_character_in_string_08009938(string,length,character,string,offset), occurrence != 0) {\n      string = occurrence + 1;\n      last_occurrence = occurrence;\n    }\n    return last_occurrence;\n  }\n  last_occurrence = find_character_in_string_08009938();\n  return last_occurrence;\n}\n\n",
            "current_name": "find_last_occurrence_index_0800997e",
            "entrypoint": "0x0800997e",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800997e": "find_last_occurrence_index_0800997e",
                "iVar1": "occurrence",
                "iVar2": "last_occurrence",
                "param_1": "string",
                "param_2": "length",
                "param_3": "character",
                "param_4": "offset"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_080099a4": {
            "additional_data": {
                "0x0": {
                    "null": 1
                },
                "FUN_080099a4": {
                    "find_common_prefix": 1,
                    "find_end_of_common_prefix": 1,
                    "find_first_common_substring": 1,
                    "find_first_match": 2,
                    "find_first_occurrence": 3,
                    "find_first_substring": 1,
                    "find_string_in_substring": 1,
                    "find_substring": 21
                },
                "param_1": {
                    "current_char1": 1,
                    "search_string": 1,
                    "str1": 7,
                    "string": 1,
                    "string1": 14,
                    "string_1": 5,
                    "temp_str1": 1,
                    "text": 1
                },
                "param_2": {
                    "str2": 7,
                    "string2": 15,
                    "string_2": 5,
                    "substring": 2,
                    "target_string": 1,
                    "temp_str2": 1
                },
                "pcVar1": {
                    "curr_char1": 2,
                    "curr_char_str1": 2,
                    "curr_char_text": 1,
                    "current_char": 2,
                    "current_char1": 9,
                    "current_char_1": 4,
                    "current_char_str1": 3,
                    "current_char_string1": 1,
                    "current_pos_str1": 1,
                    "ptr1": 3,
                    "search_char": 1,
                    "str1_ptr": 2
                },
                "pcVar2": {
                    "curr_char2": 2,
                    "curr_char_str2": 2,
                    "curr_char_substring": 1,
                    "curr_string_char": 1,
                    "current_char2": 9,
                    "current_char_2": 4,
                    "current_char_str1_previous": 1,
                    "current_char_str2": 2,
                    "current_char_string2": 1,
                    "current_pos_str2": 1,
                    "ptr2": 3,
                    "s1_char": 1,
                    "str1_index": 1,
                    "str1_ptr2": 1,
                    "target_char": 1
                },
                "pcVar3": {
                    "compare_char_str2": 1,
                    "compared_char2": 1,
                    "comparing_char": 1,
                    "curr_char2_temp": 1,
                    "curr_char_str2_copy": 1,
                    "curr_char_str2_rev": 1,
                    "curr_substring_char": 1,
                    "current_char2_temp": 2,
                    "current_char_2_prev": 1,
                    "current_char_3": 1,
                    "current_pos_str2": 1,
                    "next_char2": 2,
                    "next_char_str2": 1,
                    "next_char_substring": 1,
                    "prev_char2": 1,
                    "previous_char_2": 1,
                    "previous_char_string2": 1,
                    "ptr3": 3,
                    "s2_char": 1,
                    "str2_ptr": 2,
                    "temp_char": 5,
                    "temp_char_str2": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08002e44"
            ],
            "code": "\nchar * find_first_common_substring_080099a4(char *string1,char *string2)\n\n{\n  char *current_char1;\n  char *current_char2;\n  char *temp_char;\n  \n  if (*string1 == '\\0') {\n    if (*string2 != '\\0') {\n      string1 = (char *)0x0;\n    }\n    return string1;\n  }\n  do {\n    current_char1 = string1;\n    if (*current_char1 == '\\0') {\n      return (char *)0x0;\n    }\n    temp_char = string2 + -1;\n    current_char2 = current_char1 + -1;\n    do {\n      temp_char = temp_char + 1;\n      if (*temp_char == '\\0') {\n        return current_char1;\n      }\n      current_char2 = current_char2 + 1;\n      string1 = current_char1 + 1;\n    } while (*current_char2 == *temp_char);\n  } while( true );\n}\n\n",
            "current_name": "find_first_common_substring_080099a4",
            "entrypoint": "0x080099a4",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_080099a4": "find_first_common_substring_080099a4",
                "param_1": "string1",
                "param_2": "string2",
                "pcVar1": "current_char1",
                "pcVar2": "current_char2",
                "pcVar3": "temp_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009a80": {
            "additional_data": {
                "0x200": {
                    "flag2": 1
                },
                "0x8": {
                    "flag1": 1
                },
                "0xffdb": {
                    "mask1": 1
                },
                "DAT_20000090": {
                    "data_container": 1,
                    "data_offset": 1,
                    "data_segment": 1
                },
                "FUNC_08009d50": {
                    "clean_data": 1,
                    "cleanup": 2,
                    "cleanup_context": 1,
                    "cleanup_data": 3,
                    "cleanup_function": 1,
                    "cleanup_memory": 1
                },
                "FUN_08009a80": {
                    "process_and_return_result": 1,
                    "process_and_return_status": 1,
                    "process_data": 27,
                    "process_input": 1
                },
                "iVar1": {
                    "base_address": 2,
                    "context": 1,
                    "data": 10,
                    "data_address": 6,
                    "data_offset": 6,
                    "data_pointer": 1,
                    "data_ptr": 4,
                    "data_struct": 1
                },
                "initialize_and_assign_memory_block_08009eac": {
                    "init_and_assign_memory_block": 1,
                    "initialize_memory": 1,
                    "initialize_memory_block": 7
                },
                "param_1": {
                    "output": 15,
                    "output_array": 1,
                    "output_data": 1,
                    "output_param": 10,
                    "output_ptr": 4
                },
                "param_2": {
                    "data": 2,
                    "input": 13,
                    "input_array": 1,
                    "input_data": 1,
                    "input_param": 10,
                    "input_ptr": 4
                },
                "process_data_080091d8": {
                    "process_data": 3,
                    "process_data_block": 1,
                    "process_data_helper": 4
                },
                "uVar2": {
                    "result": 28,
                    "return_value": 1,
                    "status": 1,
                    "value": 1
                },
                "uVar3": {
                    "data_value": 1,
                    "flag": 6,
                    "flags": 13,
                    "input_param_value": 2,
                    "input_value": 5,
                    "param2_value": 1,
                    "param_value": 1,
                    "temp_value": 1,
                    "value": 1
                }
            },
            "called": [
                "FUN_080091d8",
                "FUN_08009eac",
                "FUN_08009d50"
            ],
            "calling": [
                "FUN_0800932c",
                "FUN_0800937c"
            ],
            "code": "\nuint process_data_08009a80(undefined4 *output,undefined4 *input)\n\n{\n  int data;\n  uint result;\n  ushort flags;\n  \n  data = DAT_20000090;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    initialize_memory_blocks_08009d50(DAT_20000090);\n  }\n  if (input == &DAT_0800aba4) {\n    input = *(undefined4 **)(data + 4);\n  }\n  else if (input == (undefined4 *)&DAT_0800abc4) {\n    input = *(undefined4 **)(data + 8);\n  }\n  else if (input == (undefined4 *)&DAT_0800ab84) {\n    input = *(undefined4 **)(data + 0xc);\n  }\n  flags = *(ushort *)(input + 3);\n  result = (uint)flags;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output = 9;\n      goto LAB_08009ab0;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)input[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input[0xd] != input + 0x11) {\n          process_data_08009a80_helper(output);\n        }\n        input[0xd] = 0;\n      }\n      *(ushort *)(input + 3) = *(ushort *)(input + 3) & 0xffdb;\n      input[1] = 0;\n      *input = input[4];\n    }\n    *(ushort *)(input + 3) = *(ushort *)(input + 3) | 8;\n  }\n  if ((input[4] == 0) && ((*(ushort *)(input + 3) & 0x280) != 0x200)) {\n    initialize_memory_block(output,input);\n  }\n  flags = *(ushort *)(input + 3);\n  result = flags & 1;\n  if ((flags & 1) == 0) {\n    if (-1 < (int)((uint)flags << 0x1e)) {\n      result = input[5];\n    }\n    input[2] = result;\n  }\n  else {\n    input[2] = 0;\n    input[6] = -input[5];\n  }\n  if (input[4] == 0) {\n    flags = *(ushort *)(input + 3);\n    result = (int)(short)flags & 0x80;\n    if (result != 0) {\nLAB_08009ab0:\n      *(ushort *)(input + 3) = flags | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "code_backup": "\nuint FUN_08009a80(undefined4 *param_1,undefined4 *param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  ushort uVar3;\n  \n  iVar1 = DAT_20000090;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    FUNC_08009d50(DAT_20000090);\n  }\n  if (param_2 == &DAT_0800aba4) {\n    param_2 = *(undefined4 **)(iVar1 + 4);\n  }\n  else if (param_2 == (undefined4 *)&DAT_0800abc4) {\n    param_2 = *(undefined4 **)(iVar1 + 8);\n  }\n  else if (param_2 == (undefined4 *)&DAT_0800ab84) {\n    param_2 = *(undefined4 **)(iVar1 + 0xc);\n  }\n  uVar3 = *(ushort *)(param_2 + 3);\n  uVar2 = (uint)uVar3;\n  if (-1 < (int)(uVar2 << 0x1c)) {\n    if (-1 < (int)(uVar2 << 0x1b)) {\n      *param_1 = 9;\n      goto LAB_08009ab0;\n    }\n    if ((int)(uVar2 << 0x1d) < 0) {\n      if ((undefined4 *)param_2[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)param_2[0xd] != param_2 + 0x11) {\n          process_data_080091d8(param_1);\n        }\n        param_2[0xd] = 0;\n      }\n      *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) & 0xffdb;\n      param_2[1] = 0;\n      *param_2 = param_2[4];\n    }\n    *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) | 8;\n  }\n  if ((param_2[4] == 0) && ((*(ushort *)(param_2 + 3) & 0x280) != 0x200)) {\n    initialize_and_assign_memory_block_08009eac(param_1,param_2);\n  }\n  uVar3 = *(ushort *)(param_2 + 3);\n  uVar2 = uVar3 & 1;\n  if ((uVar3 & 1) == 0) {\n    if (-1 < (int)((uint)uVar3 << 0x1e)) {\n      uVar2 = param_2[5];\n    }\n    param_2[2] = uVar2;\n  }\n  else {\n    param_2[2] = 0;\n    param_2[6] = -param_2[5];\n  }\n  if (param_2[4] == 0) {\n    uVar3 = *(ushort *)(param_2 + 3);\n    uVar2 = (int)(short)uVar3 & 0x80;\n    if (uVar2 != 0) {\nLAB_08009ab0:\n      *(ushort *)(param_2 + 3) = uVar3 | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    uVar2 = 0;\n  }\n  return uVar2;\n}\n\n",
            "current_name": "process_data_08009a80",
            "entrypoint": "0x08009a80",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009a80": "process_data_08009a80",
                "iVar1": "data",
                "initialize_and_assign_memory_block_08009eac": "initialize_memory_block",
                "param_1": "output",
                "param_2": "input",
                "process_data_080091d8": "process_data_helper",
                "uVar2": "result",
                "uVar3": "flags"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009b5c": {
            "additional_data": {
                "FUN_08009b5c": {
                    "process_and_handle_data": 12,
                    "process_and_improve_data": 1,
                    "process_and_update_data": 4,
                    "process_and_wait": 1,
                    "process_data": 12
                },
                "LAB_08009c62": {
                    "end_of_function": 1
                },
                "UNRECOVERED_JUMPTABLE_00": {
                    "fallback_function": 1,
                    "jmp_table": 2,
                    "jump_table": 9,
                    "jump_table_1": 1,
                    "jump_table_function": 3,
                    "unrecovered_jump_table": 6,
                    "unrecovered_jumptable": 2,
                    "unrecovered_jumptable_function": 1
                },
                "bVar11": {
                    "b_var": 1,
                    "bool_var": 3,
                    "boolean_flag": 1,
                    "boolean_variable": 1,
                    "condition_var": 1,
                    "flag": 4,
                    "is_condition_met": 1,
                    "is_data_offset_zero": 1,
                    "is_flag_set": 2,
                    "is_offset_zero": 1,
                    "is_temp_var1_set": 1,
                    "is_true": 2,
                    "is_var_2_zero": 1,
                    "is_variable2_zero": 1,
                    "is_zero": 9
                },
                "iVar2": {
                    "count": 1,
                    "counter": 2,
                    "data_index": 1,
                    "data_length": 1,
                    "data_offset": 1,
                    "data_variable_2": 1,
                    "i_var": 1,
                    "int_value": 1,
                    "int_var": 1,
                    "int_var1": 1,
                    "integer_value": 1,
                    "length": 1,
                    "offset": 8,
                    "size": 2,
                    "temp_var": 1,
                    "temp_variable": 2,
                    "var1": 1,
                    "var2": 1,
                    "var_1": 1,
                    "variable1": 1,
                    "variable_1": 1
                },
                "iVar3": {
                    "temp_int_var": 1
                },
                "iVar4": {
                    "temp_int_var2": 1,
                    "temp_var3": 1
                },
                "iVar5": {
                    "temp_var4": 1
                },
                "iVar7": {
                    "data_length": 1,
                    "data_variable_7": 1,
                    "i_var": 1,
                    "i_var2": 1,
                    "int_var2": 2,
                    "loop_counter": 2,
                    "loop_variable": 1,
                    "offset": 1,
                    "offset1": 1,
                    "offset_temp": 1,
                    "start": 1,
                    "temp": 4,
                    "temp1": 1,
                    "temp_counter": 2,
                    "temp_var": 3,
                    "temp_var1": 1,
                    "temp_var_2": 1,
                    "var2": 1,
                    "var7": 1,
                    "var_2": 1,
                    "variable2": 1,
                    "variable_2": 1
                },
                "iVar9": {
                    "counter_1": 1,
                    "data_length": 1,
                    "data_variable_9": 1,
                    "i_var3": 1,
                    "initial_value": 1,
                    "int_var3": 2,
                    "iteration_var": 1,
                    "length": 2,
                    "loop_count": 2,
                    "loop_counter": 1,
                    "remaining": 2,
                    "remaining_data_size": 1,
                    "remaining_length": 1,
                    "remaining_size": 2,
                    "size": 1,
                    "temp_var": 2,
                    "temp_var2": 2,
                    "temp_var_2": 1,
                    "total_length": 1,
                    "var9": 1,
                    "var_3": 1,
                    "variable3": 1,
                    "variable_3": 1
                },
                "pcVar8": {
                    "callback": 3,
                    "callback_func": 2,
                    "callback_function": 2,
                    "code_pointer": 1,
                    "data_handler": 1,
                    "data_processing_function": 1,
                    "func_pointer": 1,
                    "function_pointer": 10,
                    "function_ptr": 4,
                    "function_var": 1,
                    "handler_func": 1,
                    "p_code": 1,
                    "process_data_func": 1
                },
                "piVar3": {
                    "data": 1,
                    "data_array": 4,
                    "data_array1": 1,
                    "data_pointer": 5,
                    "data_ptr": 6,
                    "input_params": 1,
                    "p_int": 1,
                    "p_int_array": 1,
                    "param": 1,
                    "param_1": 1,
                    "pointer_1": 1,
                    "pointer_array": 2,
                    "pointer_to_data": 1,
                    "pointer_to_data_array": 1,
                    "pointer_var1": 1,
                    "process_state": 1,
                    "ptr_array": 2
                },
                "piVar4": {
                    "callback_data": 1,
                    "data_array2": 1,
                    "optional_data_pointer": 1,
                    "p_int2": 1,
                    "p_int_array2": 1,
                    "pointer_3": 1,
                    "pointer_array2": 2,
                    "pointer_to_data_array": 1,
                    "pointer_to_data_array_2": 1,
                    "temp_array": 3,
                    "temp_ptr": 3,
                    "temp_state": 1,
                    "temporary": 1,
                    "var_4": 1
                },
                "process_data_08009fe8": {
                    "process_data": 1
                },
                "puVar1": {
                    "buffer_ptr": 1,
                    "data": 2,
                    "data_pointer": 6,
                    "data_ptr": 3,
                    "data_value_ptr": 2,
                    "input": 1,
                    "input_data": 1,
                    "input_pointer": 1,
                    "input_ptr": 1,
                    "p_data": 1,
                    "p_uint": 1,
                    "param_2": 1,
                    "pointer": 1,
                    "pointer_2": 1,
                    "pointer_to_result": 1,
                    "pointer_to_value": 1,
                    "pointer_var2": 1,
                    "result_pointer": 1,
                    "uint_pointer": 1,
                    "value_pointer": 1,
                    "value_ptr": 1
                },
                "puVar13": {
                    "pointer": 1
                },
                "uVar1": {
                    "status": 1
                },
                "uVar10": {
                    "data_variable_10": 1,
                    "initial_value": 1,
                    "input_value": 1,
                    "original_data_value": 1,
                    "original_value": 1,
                    "temp2": 1,
                    "temp_uint_var": 1,
                    "temp_value": 9,
                    "temp_value2": 1,
                    "temp_var": 2,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temp_variable_2": 1,
                    "u_var2": 1,
                    "uint_var": 1,
                    "var10": 1
                },
                "uVar12": {
                    "loop_result": 4,
                    "result": 12,
                    "result_value": 1,
                    "return_val": 1,
                    "return_value": 2,
                    "u_var3": 1,
                    "wait_loop_result": 1
                },
                "uVar5": {
                    "converted_value": 2,
                    "data_as_uint": 1,
                    "data_len_as_uint": 1,
                    "data_value": 5,
                    "data_value_as_uint": 2,
                    "data_value_uint": 1,
                    "data_value_unsigned": 1,
                    "flag_as_uint": 1,
                    "input_data_value": 1,
                    "temp_value": 3,
                    "u_var": 1,
                    "ushort_val": 3,
                    "ushort_value": 4,
                    "value": 1,
                    "value2": 1,
                    "var5": 1
                },
                "uVar6": {
                    "data_as_ushort": 1,
                    "data_flag": 3,
                    "data_flags": 2,
                    "data_len": 1,
                    "data_value": 4,
                    "flag": 2,
                    "flag_value": 1,
                    "flags": 7,
                    "input_data_value_short": 1,
                    "short_value": 1,
                    "u_short_var": 1,
                    "ushort_temp": 1,
                    "ushort_var": 2,
                    "value1": 1,
                    "var6": 1
                },
                "wait_for_infinite_loop_08008868": {
                    "wait_for_infinite_loop": 1
                }
            },
            "called": [
                "FUN_080091d8",
                "FUN_08008868",
                "FUN_08009fe8"
            ],
            "calling": [
                "FUN_0800a18c",
                "FUN_080090cc"
            ],
            "code": "\nvoid process_and_handle_data_08009b5c(void)\n\n{\n  uint *data_pointer;\n  int offset;\n  int *data_ptr;\n  int *temp_ptr;\n  uint data_value;\n  ushort flags;\n  int temp;\n  code *function_pointer;\n  int remaining;\n  uint temp_value;\n  code *jump_table;\n  bool is_zero;\n  undefined8 result;\n  \n  process_data(6);\n  jump_table = (code *)0x8009b6b;\n  result = wait_for_infinite_loop(1);\n  data_ptr = (int *)((ulonglong)result >> 0x20);\n  data_pointer = (uint *)result;\n  flags = *(ushort *)(data_ptr + 3);\n  data_value = (uint)flags;\n  if ((int)(data_value << 0x1c) < 0) {\n    offset = data_ptr[4];\n    if (offset != 0) {\n      temp = data_value << 0x1e;\n      is_zero = temp != 0;\n      if (is_zero) {\n        temp = 0;\n      }\n      remaining = *data_ptr;\n      if (!is_zero) {\n        temp = data_ptr[5];\n      }\n      *data_ptr = offset;\n      data_ptr[2] = temp;\n      for (remaining = remaining - offset; 0 < remaining; remaining = remaining - temp) {\n        temp = (*(code *)data_ptr[10])(data_pointer,data_ptr[8],offset,remaining);\n        if (temp < 1) {\n          flags = *(ushort *)(data_ptr + 3);\n          goto end_of_function;\n        }\n        offset = offset + temp;\n      }\n    }\n  }\n  else if (((0 < data_ptr[1]) || (0 < data_ptr[0x10])) &&\n          (function_pointer = (code *)data_ptr[0xb], function_pointer != (code *)0x0)) {\n    temp_value = *data_pointer;\n    *data_pointer = 0;\n    if ((flags & 0x1000) == 0) {\n      offset = (*function_pointer)(data_pointer,data_ptr[8],data_value & 0x1000,1);\n      if ((offset == -1) && (data_value = *data_pointer, data_value != 0)) {\n        if ((data_value != 0x1d) && (data_value != 0x16)) {\n          *(ushort *)(data_ptr + 3) = *(ushort *)(data_ptr + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jump_table)();\n          return;\n        }\n        *data_pointer = temp_value;\n        goto LAB_08009b86;\n      }\n    }\n    else {\n      offset = data_ptr[0x15];\n    }\n    if (((int)((uint)*(ushort *)(data_ptr + 3) << 0x1d) < 0) &&\n       (offset = offset - data_ptr[1], data_ptr[0xd] != 0)) {\n      offset = offset - data_ptr[0x10];\n    }\n    offset = (*(code *)data_ptr[0xb])(data_pointer,data_ptr[8],offset,0);\n    flags = *(ushort *)(data_ptr + 3);\n    if ((offset == -1) &&\n       ((0x1d < *data_pointer || (-1 < (int)((0x20400001U >> (*data_pointer & 0xff)) << 0x1f))))) {\nend_of_function:\n      *(ushort *)(data_ptr + 3) = flags | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jump_table)(0xffffffff);\n      return;\n    }\n    data_ptr[1] = 0;\n    *data_ptr = data_ptr[4];\n    if (((int)((uint)flags << 0x13) < 0) && ((offset != -1 || (*data_pointer == 0)))) {\n      data_ptr[0x15] = offset;\n    }\n    temp_ptr = (int *)data_ptr[0xd];\n    *data_pointer = temp_value;\n    if (temp_ptr != (int *)0x0) {\n      if (temp_ptr != data_ptr + 0x11) {\n        process_data_080091d8(data_pointer);\n      }\n      data_ptr[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jump_table)();\n      return;\n    }\n  }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)(0);\n  return;\n}\n\n",
            "current_name": "process_and_handle_data_08009b5c",
            "entrypoint": "0x08009b5c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009b5c": "process_and_handle_data_08009b5c",
                "LAB_08009c62": "end_of_function",
                "UNRECOVERED_JUMPTABLE_00": "jump_table",
                "bVar11": "is_zero",
                "iVar2": "offset",
                "iVar3": "temp_int_var",
                "iVar4": "temp_int_var2",
                "iVar7": "temp",
                "iVar9": "remaining",
                "pcVar8": "function_pointer",
                "piVar3": "data_ptr",
                "piVar4": "temp_ptr",
                "process_data_08009fe8": "process_data",
                "puVar1": "data_pointer",
                "uVar1": "status",
                "uVar10": "temp_value",
                "uVar12": "result",
                "uVar5": "data_value",
                "uVar6": "flags",
                "wait_for_infinite_loop_08008868": "wait_for_infinite_loop"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009c7c": {
            "additional_data": {
                "FUN_08009c7c": {
                    "process_data": 19
                },
                "UNRECOVERED_JUMPTABLE_00": {
                    "jmp_table": 1,
                    "jump_table": 10,
                    "jumptable": 4,
                    "recovery_table": 1,
                    "unrecovered_jump_table": 3,
                    "unrecovered_jumptable": 1
                },
                "bVar10": {
                    "bool_value": 1,
                    "bool_var2": 1,
                    "bool_variable": 1,
                    "flag": 1,
                    "flag1": 1,
                    "is_flag_set": 1,
                    "is_negative": 1,
                    "is_true": 1,
                    "temp_flag": 1
                },
                "iVar11": {
                    "temp_var2": 1
                },
                "iVar2": {
                    "condition": 1,
                    "count": 4,
                    "count1": 1,
                    "data_index": 1,
                    "flag_value": 1,
                    "index": 1,
                    "length": 1,
                    "offset": 6,
                    "param2_4": 1,
                    "param2_value": 1,
                    "temp": 1,
                    "temp_var": 1,
                    "temp_var1": 5,
                    "val1": 1,
                    "value": 2,
                    "value1": 1,
                    "var1": 1
                },
                "iVar6": {
                    "count2": 1,
                    "counter": 2,
                    "i_var6": 2,
                    "increment": 1,
                    "length": 1,
                    "loop_counter": 1,
                    "loop_var1": 1,
                    "offset": 1,
                    "start_value": 1,
                    "temp": 2,
                    "temp3": 2,
                    "temp_value": 3,
                    "temp_var": 1,
                    "temp_var1": 1,
                    "temp_var2": 2,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "temp_var5": 1,
                    "tmp_var3": 1,
                    "val5": 1,
                    "value3": 1,
                    "value4": 1,
                    "var2": 1
                },
                "iVar8": {
                    "count": 2,
                    "counter": 1,
                    "i_var": 1,
                    "i_var8": 3,
                    "length": 2,
                    "loop_count": 2,
                    "loop_counter": 2,
                    "loop_var": 1,
                    "loop_var2": 1,
                    "remaining": 1,
                    "remaining_length": 1,
                    "temp4": 1,
                    "temp_value": 1,
                    "temp_var": 1,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "temp_var5": 1,
                    "temp_var6": 1,
                    "tmp_var4": 1,
                    "val8": 1,
                    "value5": 1,
                    "var1": 1,
                    "var3": 1
                },
                "param_1": {
                    "data": 6,
                    "data_array": 6,
                    "data_buffer": 1,
                    "data_pointer": 2,
                    "data_ptr": 2,
                    "input_array": 7,
                    "input_data": 2,
                    "input_pointer": 1,
                    "param_array": 3,
                    "params": 1
                },
                "param_2": {
                    "config": 2,
                    "config_array": 1,
                    "config_data": 1,
                    "data": 1,
                    "data_array": 1,
                    "flag_array": 1,
                    "info": 2,
                    "info_array": 1,
                    "info_pointer": 1,
                    "info_ptr": 1,
                    "options": 1,
                    "options_ptr": 1,
                    "output_array": 3,
                    "output_data": 1,
                    "output_pointer": 1,
                    "param_array": 6,
                    "param_config": 1,
                    "param_list": 1,
                    "param_pointer_array": 1,
                    "param_ptr": 1,
                    "parameter_array": 1,
                    "params_array": 1
                },
                "pcVar7": {
                    "callback": 5,
                    "callback_func": 2,
                    "code_ptr": 2,
                    "func": 1,
                    "func_ptr": 5,
                    "function_pointer": 10,
                    "function_ptr": 4,
                    "pointer_to_function": 1,
                    "recovery_func": 1
                },
                "piVar3": {
                    "other_info_pointer": 1,
                    "param2_3": 1,
                    "pointer": 2,
                    "pointer1": 2,
                    "pointer_var": 2,
                    "process_data_ptr": 1,
                    "ptr": 6,
                    "ptr3": 1,
                    "ptr_array": 1,
                    "ptr_value": 1,
                    "temp_pointer1": 2,
                    "temp_ptr": 6,
                    "temp_var2": 3,
                    "val2": 1
                },
                "uVar1": {
                    "result": 18,
                    "return_value": 12
                },
                "uVar10": {
                    "b_var10": 1,
                    "bool": 1,
                    "bool_check": 1,
                    "bool_flag": 1,
                    "bool_result": 1,
                    "bool_value": 2,
                    "bool_var": 1,
                    "bool_var1": 1,
                    "boolean1": 1,
                    "boolean_flag": 1,
                    "check_flag": 1,
                    "comparison_flag": 1,
                    "condition": 2,
                    "flag": 3,
                    "temp_value4": 1,
                    "tmp_var6": 1,
                    "u_flag": 1,
                    "u_var10": 2
                },
                "uVar4": {
                    "count": 1,
                    "temp1": 3,
                    "temp_value": 1,
                    "temp_value1": 1,
                    "temp_var": 3,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "tmp_var1": 1,
                    "u_count": 1,
                    "u_short_value": 1,
                    "u_var4": 3,
                    "ushort_value": 6,
                    "val3": 1,
                    "value": 4,
                    "value1": 1,
                    "value2": 1
                },
                "uVar5": {
                    "current_short_value": 1,
                    "flag": 6,
                    "flags": 4,
                    "temp2": 3,
                    "temp_short": 1,
                    "temp_value2": 2,
                    "temp_var3": 1,
                    "temp_var4": 1,
                    "tmp_var2": 1,
                    "u_var": 1,
                    "u_var5": 2,
                    "ushort": 1,
                    "ushort_flag": 1,
                    "ushort_temp": 2,
                    "ushort_var": 1,
                    "val4": 1,
                    "value3": 1
                },
                "uVar9": {
                    "new_value": 1,
                    "original_value": 3,
                    "prev_value": 1,
                    "temp": 1,
                    "temp2": 1,
                    "temp3": 1,
                    "temp6": 2,
                    "temp_value": 5,
                    "temp_value3": 1,
                    "temp_var": 2,
                    "temp_var2": 1,
                    "temp_var3": 1,
                    "temp_var6": 1,
                    "temp_var7": 1,
                    "tmp_var5": 1,
                    "u_var2": 1,
                    "u_var9": 4,
                    "uint_value": 1,
                    "val9": 1,
                    "value6": 1
                },
                "unaff_r4": {
                    "param4": 1,
                    "reg4": 1,
                    "register4": 1,
                    "register_r4": 1,
                    "temp1": 1,
                    "temp4": 1,
                    "temp_register4": 1,
                    "unaff_param4": 1,
                    "unaff_r4": 5,
                    "unaffected_r4": 1,
                    "unaffected_register4": 3,
                    "unaffected_var4": 1,
                    "unknown_var1": 1,
                    "unspecified_var1": 1,
                    "unused1": 1,
                    "unused_register4": 1,
                    "unused_register_4": 1,
                    "unused_var1": 1,
                    "unused_variable1": 2,
                    "val1": 1,
                    "val6": 1,
                    "var1": 1,
                    "variable1": 1
                },
                "unaff_r5": {
                    "param5": 1,
                    "reg5": 1,
                    "register5": 1,
                    "register_r5": 1,
                    "temp2": 1,
                    "temp5": 1,
                    "temp_register5": 1,
                    "unaff_param5": 1,
                    "unaff_r5": 5,
                    "unaffected_r5": 1,
                    "unaffected_register5": 3,
                    "unaffected_var5": 1,
                    "unknown_var2": 1,
                    "unspecified_var2": 1,
                    "unused2": 1,
                    "unused_register5": 1,
                    "unused_register_5": 1,
                    "unused_var2": 1,
                    "unused_variable2": 2,
                    "val2": 1,
                    "val7": 1,
                    "var2": 1,
                    "variable2": 1
                }
            },
            "called": [
                "FUN_08009d50"
            ],
            "calling": [
                "FUN_0800932c"
            ],
            "code": "\nundefined4 process_data_08009c7c(uint *input_array,int *param_array)\n\n{\n  undefined4 result;\n  int offset;\n  int *ptr;\n  uint ushort_value;\n  ushort flag;\n  int temp_value;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  code *function_pointer;\n  int i_var8;\n  uint temp_value;\n  code *jump_table;\n  bool is_true;\n  \n  if (param_array[4] != 0) {\n    if ((input_array != (uint *)0x0) && (input_array[6] == 0)) {\n      initialize_memory_blocks_08009d50();\n    }\n    if (param_array == &DAT_0800aba4) {\n      param_array = (int *)input_array[1];\n    }\n    else if (param_array == (int *)&DAT_0800abc4) {\n      param_array = (int *)input_array[2];\n    }\n    else if (param_array == (int *)&DAT_0800ab84) {\n      param_array = (int *)input_array[3];\n    }\n    if (*(short *)(param_array + 3) != 0) {\n      flag = *(ushort *)(param_array + 3);\n      ushort_value = (uint)flag;\n      if ((int)(ushort_value << 0x1c) < 0) {\n        offset = param_array[4];\n        if (offset != 0) {\n          temp_value = ushort_value << 0x1e;\n          is_true = temp_value != 0;\n          if (is_true) {\n            temp_value = 0;\n          }\n          i_var8 = *param_array;\n          if (!is_true) {\n            temp_value = param_array[5];\n          }\n          *param_array = offset;\n          param_array[2] = temp_value;\n          for (i_var8 = i_var8 - offset; 0 < i_var8; i_var8 = i_var8 - temp_value) {\n            temp_value = (*(code *)param_array[10])(input_array,param_array[8],offset,i_var8,unaff_r4,unaff_r5);\n            if (temp_value < 1) {\n              flag = *(ushort *)(param_array + 3);\n              goto LAB_08009c62;\n            }\n            offset = offset + temp_value;\n          }\n        }\n      }\n      else if (((0 < param_array[1]) || (0 < param_array[0x10])) &&\n              (function_pointer = (code *)param_array[0xb], function_pointer != (code *)0x0)) {\n        temp_value = *input_array;\n        *input_array = 0;\n        if ((flag & 0x1000) == 0) {\n          offset = (*function_pointer)(input_array,param_array[8],ushort_value & 0x1000,1);\n          if ((offset == -1) && (ushort_value = *input_array, ushort_value != 0)) {\n            if ((ushort_value != 0x1d) && (ushort_value != 0x16)) {\n              *(ushort *)(param_array + 3) = *(ushort *)(param_array + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              result = (*jump_table)();\n              return result;\n            }\n            *input_array = temp_value;\n            goto LAB_08009b86;\n          }\n        }\n        else {\n          offset = param_array[0x15];\n        }\n        if (((int)((uint)*(ushort *)(param_array + 3) << 0x1d) < 0) &&\n           (offset = offset - param_array[1], param_array[0xd] != 0)) {\n          offset = offset - param_array[0x10];\n        }\n        offset = (*(code *)param_array[0xb])(input_array,param_array[8],offset,0);\n        flag = *(ushort *)(param_array + 3);\n        if ((offset == -1) &&\n           ((0x1d < *input_array || (-1 < (int)((0x20400001U >> (*input_array & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n          *(ushort *)(param_array + 3) = flag | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*jump_table)(0xffffffff);\n          return result;\n        }\n        param_array[1] = 0;\n        *param_array = param_array[4];\n        if (((int)((uint)flag << 0x13) < 0) && ((offset != -1 || (*input_array == 0)))) {\n          param_array[0x15] = offset;\n        }\n        ptr = (int *)param_array[0xd];\n        *input_array = temp_value;\n        if (ptr != (int *)0x0) {\n          if (ptr != param_array + 0x11) {\n            process_data_08009c7c_080091d8(input_array);\n          }\n          param_array[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*jump_table)();\n          return result;\n        }\n      }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      result = (*jump_table)(0);\n      return result;\n    }\n  }\n  return 0;\n}\n\n",
            "code_backup": "\nundefined4 FUN_08009c7c(uint *param_1,int *param_2)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  int *piVar3;\n  uint uVar4;\n  ushort uVar5;\n  int iVar6;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  code *pcVar7;\n  int iVar8;\n  uint uVar9;\n  code *UNRECOVERED_JUMPTABLE_00;\n  bool bVar10;\n  \n  if (param_2[4] != 0) {\n    if ((param_1 != (uint *)0x0) && (param_1[6] == 0)) {\n      FUNC_08009d50();\n    }\n    if (param_2 == &DAT_0800aba4) {\n      param_2 = (int *)param_1[1];\n    }\n    else if (param_2 == (int *)&DAT_0800abc4) {\n      param_2 = (int *)param_1[2];\n    }\n    else if (param_2 == (int *)&DAT_0800ab84) {\n      param_2 = (int *)param_1[3];\n    }\n    if (*(short *)(param_2 + 3) != 0) {\n      uVar5 = *(ushort *)(param_2 + 3);\n      uVar4 = (uint)uVar5;\n      if ((int)(uVar4 << 0x1c) < 0) {\n        iVar2 = param_2[4];\n        if (iVar2 != 0) {\n          iVar6 = uVar4 << 0x1e;\n          bVar10 = iVar6 != 0;\n          if (bVar10) {\n            iVar6 = 0;\n          }\n          iVar8 = *param_2;\n          if (!bVar10) {\n            iVar6 = param_2[5];\n          }\n          *param_2 = iVar2;\n          param_2[2] = iVar6;\n          for (iVar8 = iVar8 - iVar2; 0 < iVar8; iVar8 = iVar8 - iVar6) {\n            iVar6 = (*(code *)param_2[10])(param_1,param_2[8],iVar2,iVar8,unaff_r4,unaff_r5);\n            if (iVar6 < 1) {\n              uVar5 = *(ushort *)(param_2 + 3);\n              goto LAB_08009c62;\n            }\n            iVar2 = iVar2 + iVar6;\n          }\n        }\n      }\n      else if (((0 < param_2[1]) || (0 < param_2[0x10])) &&\n              (pcVar7 = (code *)param_2[0xb], pcVar7 != (code *)0x0)) {\n        uVar9 = *param_1;\n        *param_1 = 0;\n        if ((uVar5 & 0x1000) == 0) {\n          iVar2 = (*pcVar7)(param_1,param_2[8],uVar4 & 0x1000,1);\n          if ((iVar2 == -1) && (uVar4 = *param_1, uVar4 != 0)) {\n            if ((uVar4 != 0x1d) && (uVar4 != 0x16)) {\n              *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              uVar1 = (*UNRECOVERED_JUMPTABLE_00)();\n              return uVar1;\n            }\n            *param_1 = uVar9;\n            goto LAB_08009b86;\n          }\n        }\n        else {\n          iVar2 = param_2[0x15];\n        }\n        if (((int)((uint)*(ushort *)(param_2 + 3) << 0x1d) < 0) &&\n           (iVar2 = iVar2 - param_2[1], param_2[0xd] != 0)) {\n          iVar2 = iVar2 - param_2[0x10];\n        }\n        iVar2 = (*(code *)param_2[0xb])(param_1,param_2[8],iVar2,0);\n        uVar5 = *(ushort *)(param_2 + 3);\n        if ((iVar2 == -1) &&\n           ((0x1d < *param_1 || (-1 < (int)((0x20400001U >> (*param_1 & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n          *(ushort *)(param_2 + 3) = uVar5 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          uVar1 = (*UNRECOVERED_JUMPTABLE_00)(0xffffffff);\n          return uVar1;\n        }\n        param_2[1] = 0;\n        *param_2 = param_2[4];\n        if (((int)((uint)uVar5 << 0x13) < 0) && ((iVar2 != -1 || (*param_1 == 0)))) {\n          param_2[0x15] = iVar2;\n        }\n        piVar3 = (int *)param_2[0xd];\n        *param_1 = uVar9;\n        if (piVar3 != (int *)0x0) {\n          if (piVar3 != param_2 + 0x11) {\n            process_data_080091d8(param_1);\n          }\n          param_2[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          uVar1 = (*UNRECOVERED_JUMPTABLE_00)();\n          return uVar1;\n        }\n      }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      uVar1 = (*UNRECOVERED_JUMPTABLE_00)(0);\n      return uVar1;\n    }\n  }\n  return 0;\n}\n\n",
            "current_name": "process_data_08009c7c",
            "entrypoint": "0x08009c7c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009c7c": "process_data_08009c7c",
                "UNRECOVERED_JUMPTABLE_00": "jump_table",
                "bVar10": "is_true",
                "iVar2": "offset",
                "iVar6": "temp_value",
                "iVar8": "i_var8",
                "param_1": "input_array",
                "param_2": "param_array",
                "pcVar7": "function_pointer",
                "piVar3": "ptr",
                "uVar1": "result",
                "uVar4": "ushort_value",
                "uVar5": "flag",
                "uVar9": "temp_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009cdc": {
            "additional_data": {
                "0x19": {
                    "value3": 1
                },
                "0x800a021": {
                    "constant1": 1
                },
                "0x800a043": {
                    "constant2": 1
                },
                "0x800a07b": {
                    "constant3": 1
                },
                "FUN_08009cdc": {
                    "initialize_data": 4,
                    "initialize_data_struct": 3,
                    "initialize_data_structure": 9,
                    "initialize_data_structures": 1,
                    "initialize_function_data": 1,
                    "initialize_memory": 9,
                    "initialize_parameters": 3,
                    "initialize_params": 1
                },
                "LAB_0800a09e_1": {
                    "constant1": 1,
                    "constant_value": 1,
                    "jump_target": 1,
                    "label": 6,
                    "label0800a09e": 1,
                    "label1": 4,
                    "label_0800a09e_1": 1,
                    "label_1": 2,
                    "label_address": 1,
                    "label_value": 1,
                    "some_label": 4
                },
                "fill_memory_with_byte_080091c6": {
                    "fill_memory": 4,
                    "fill_memory_with_byte": 13,
                    "fill_memory_with_zero": 1,
                    "fill_memory_with_zeroes": 4,
                    "memset": 1
                },
                "param_1": {
                    "data": 5,
                    "data_struct": 3,
                    "data_struct_array": 1,
                    "data_structure": 8,
                    "function_data": 1,
                    "memory": 6,
                    "memory_block": 2,
                    "memory_ptr": 1,
                    "parameters": 3,
                    "return_value": 1
                },
                "param_2": {
                    "param2_value": 2,
                    "value1": 25,
                    "value2": 1,
                    "value_1": 2,
                    "value_a": 1
                },
                "param_3": {
                    "param3_value": 2,
                    "value2": 25,
                    "value3": 1,
                    "value_2": 2,
                    "value_b": 1
                }
            },
            "called": [
                "FUN_080091c6"
            ],
            "calling": [
                "FUN_08009d50"
            ],
            "code": "\nvoid initialize_data_structure_08009cdc(undefined4 *data_structure,undefined2 value1,undefined2 value2)\n\n{\n  *data_structure = 0;\n  data_structure[1] = 0;\n  data_structure[2] = 0;\n  *(undefined2 *)(data_structure + 3) = value1;\n  data_structure[0x19] = 0;\n  *(undefined2 *)((int)data_structure + 0xe) = value2;\n  data_structure[4] = 0;\n  data_structure[5] = 0;\n  data_structure[6] = 0;\n  fill_memory_with_byte(data_structure + 0x17,0,8);\n  data_structure[8] = data_structure;\n  data_structure[9] = 0x800a021;\n  data_structure[10] = 0x800a043;\n  data_structure[0xb] = 0x800a07b;\n  data_structure[0xc] = &label;\n  return;\n}\n\n",
            "current_name": "initialize_data_structure_08009cdc",
            "entrypoint": "0x08009cdc",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009cdc": "initialize_data_structure_08009cdc",
                "LAB_0800a09e_1": "label",
                "fill_memory_with_byte_080091c6": "fill_memory_with_byte",
                "param_1": "data_structure",
                "param_2": "value1",
                "param_3": "value2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009d24": {
            "additional_data": {
                "FUN_08009d24": {
                    "allocate_and_assign_memory": 1,
                    "allocate_and_fill_memory": 1,
                    "allocate_and_fill_memory_block": 1,
                    "allocate_and_initialize_block": 3,
                    "allocate_and_initialize_memory": 5,
                    "allocate_and_initialize_memory_block": 13,
                    "allocate_block_and_initialize": 1,
                    "allocate_memory_and_initialize": 1,
                    "initialize_memory": 2,
                    "initialize_memory_block": 3
                },
                "iVar2": {
                    "block_size": 5,
                    "calculated_index": 1,
                    "calculated_offset": 1,
                    "last_block_offset": 1,
                    "memory_block_size": 1,
                    "memory_offset": 3,
                    "offset": 16,
                    "total_memory_size": 1,
                    "total_size": 2
                },
                "param_1": {
                    "address": 1,
                    "arg1": 1,
                    "data": 2,
                    "data_pointer": 2,
                    "initial_value": 1,
                    "input_data": 1,
                    "input_param": 2,
                    "input_value": 4,
                    "memory": 1,
                    "memory_address": 4,
                    "memory_block": 4,
                    "memory_block_address": 1,
                    "memory_block_start": 1,
                    "param": 2,
                    "param1": 2,
                    "ptr_to_memory": 1,
                    "target": 1
                },
                "param_2": {
                    "arg2": 1,
                    "array_size": 1,
                    "block_size": 6,
                    "count": 4,
                    "num_blocks": 2,
                    "num_elements": 7,
                    "param2": 2,
                    "size": 7,
                    "size_of_blocks": 1
                },
                "puVar1": {
                    "allocated_block": 6,
                    "allocated_memory": 6,
                    "allocated_memory_block": 2,
                    "memory_block": 4,
                    "memory_block_pointer": 1,
                    "memory_block_ptr": 2,
                    "new_memory_block": 2,
                    "new_memory_block_address": 1,
                    "ptr": 3,
                    "ptr_to_allocated_memory": 1,
                    "result": 2,
                    "result_pointer": 1
                }
            },
            "called": [
                "FUN_080091c6",
                "FUN_08009270"
            ],
            "calling": [
                "FUN_08009db0"
            ],
            "code": "\nundefined4 * allocate_and_initialize_memory_block_08009d24(undefined4 memory_block,int num_elements)\n\n{\n  undefined4 *allocated_memory;\n  int offset;\n  \n  offset = (num_elements + -1) * 0x68;\n  allocated_memory = (undefined4 *)allocate_and_assign_memory_block_08009270(memory_block,offset + 0x74);\n  if (allocated_memory != (undefined4 *)0x0) {\n    *allocated_memory = 0;\n    allocated_memory[1] = num_elements;\n    allocated_memory[2] = allocated_memory + 3;\n    fill_memory_with_byte_080091c6(allocated_memory + 3,0,offset + 0x68);\n  }\n  return allocated_memory;\n}\n\n",
            "current_name": "allocate_and_initialize_memory_block_08009d24",
            "entrypoint": "0x08009d24",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009d24": "allocate_and_initialize_memory_block_08009d24",
                "iVar2": "offset",
                "param_1": "memory_block",
                "param_2": "num_elements",
                "puVar1": "allocated_memory"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009d50": {
            "additional_data": {
                "FUN_08009d50": {
                    "initialize_blocks_and_structures": 1,
                    "initialize_data_blocks": 2,
                    "initialize_data_structure": 2,
                    "initialize_data_structures": 1,
                    "initialize_memory": 10,
                    "initialize_memory_and_data": 1,
                    "initialize_memory_and_data_structures": 1,
                    "initialize_memory_block": 1,
                    "initialize_memory_blocks": 9,
                    "initialize_memory_setup": 1,
                    "initialize_memory_structure": 2
                },
                "initialize_data_structure_08009cdc": {
                    "init_data_structure": 1,
                    "initialize_data_structure": 16,
                    "initialize_structure": 5
                },
                "initialize_memory_block_08009db0": {
                    "allocate_memory_block": 5,
                    "create_block": 1,
                    "init_memory_block": 1,
                    "initialize_block": 6,
                    "initialize_memory_block": 9
                },
                "param_1": {
                    "block": 1,
                    "block_info": 1,
                    "blocks": 1,
                    "data": 1,
                    "data_blocks": 2,
                    "data_structure": 1,
                    "memory": 1,
                    "memory_block": 6,
                    "memory_blocks": 7,
                    "memory_structure": 2,
                    "param": 5,
                    "parameter": 1,
                    "parameters": 2
                },
                "puVar2": {
                    "block_pointer": 1,
                    "default_block_info": 1,
                    "default_memory_block": 1,
                    "default_value": 1,
                    "flag_ptr": 1,
                    "pointer": 13,
                    "pointer_block": 1,
                    "ptr": 1,
                    "ptr_data": 1,
                    "pu_var": 1,
                    "temp": 1,
                    "temp_pointer": 2,
                    "temp_ptr": 4,
                    "temp_var": 2
                },
                "uVar1": {
                    "block": 1,
                    "initialized_block": 2,
                    "initialized_memory_block": 1,
                    "memory_block": 4,
                    "result": 19,
                    "return_value": 4
                }
            },
            "called": [
                "FUN_08009db0",
                "FUN_08009cdc"
            ],
            "calling": [
                "FUN_08009db0",
                "FUN_0800932c",
                "FUN_08009a80",
                "FUN_08009c7c",
                "FUN_0800937c",
                "FUN_080098d8"
            ],
            "code": "\nvoid initialize_memory_blocks_08009d50(undefined4 *memory_blocks)\n\n{\n  undefined4 result;\n  undefined4 *pointer;\n  \n  if (memory_blocks[6] == 0) {\n    memory_blocks[0x12] = 0;\n    memory_blocks[0x13] = 0;\n    memory_blocks[0x14] = 0;\n    pointer = &DAT_20000094;\n    memory_blocks[10] = &LAB_08009cd0_1;\n    if (memory_blocks == &DAT_20000094) {\n      pointer = (undefined4 *)0x1;\n    }\n    if (memory_blocks == &DAT_20000094) {\n      memory_blocks[6] = pointer;\n    }\n    result = initialize_memory_block();\n    memory_blocks[1] = result;\n    result = initialize_memory_block(memory_blocks);\n    memory_blocks[2] = result;\n    result = initialize_memory_block(memory_blocks);\n    memory_blocks[3] = result;\n    initialize_data_structure(memory_blocks[1],4,0);\n    initialize_data_structure(memory_blocks[2],9,1);\n    initialize_data_structure(memory_blocks[3],0x12,2);\n    memory_blocks[6] = 1;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_memory_blocks_08009d50",
            "entrypoint": "0x08009d50",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009d50": "initialize_memory_blocks_08009d50",
                "initialize_data_structure_08009cdc": "initialize_data_structure",
                "initialize_memory_block_08009db0": "initialize_memory_block",
                "param_1": "memory_blocks",
                "puVar2": "pointer",
                "uVar1": "result"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009db0": {
            "additional_data": {
                "DAT_20000094": {
                    "block_data": 2,
                    "data93": 1,
                    "memory_block": 1,
                    "memory_data": 1,
                    "nested_data": 1
                },
                "DAT_200000ac": {
                    "block_initialized_flag": 1,
                    "check_flag": 1,
                    "data_flag": 1,
                    "initialized": 1,
                    "initialized_flag": 1,
                    "is_initialized": 1
                },
                "DAT_200000dc": {
                    "block_list": 1,
                    "block_list_pointer": 1,
                    "data220": 1,
                    "data_structure_head": 1,
                    "list_head": 1,
                    "memory_block_ptr": 1
                },
                "FUNC_08009d50": {
                    "initialize_block": 1,
                    "initialize_block_if_needed": 1,
                    "initialize_memory": 3,
                    "initialize_nested_structure": 1
                },
                "FUN_08009db0": {
                    "extract_data_from_binary": 1,
                    "initialize_and_allocate_block": 1,
                    "initialize_and_allocate_memory": 1,
                    "initialize_data_structure": 3,
                    "initialize_memory": 4,
                    "initialize_memory_block": 9,
                    "initialize_memory_blocks": 3,
                    "initialize_structures": 1,
                    "initialize_widget_array": 1,
                    "process_data": 5
                },
                "allocate_and_initialize_memory_block_08009d24": {
                    "allocate_and_initialize_block": 1,
                    "allocate_and_initialize_memory_block": 6
                },
                "fill_memory_with_byte_080091c6": {
                    "fill_memory": 1,
                    "fill_memory_with_byte": 9
                },
                "param_1": {
                    "error": 1,
                    "error_code": 13,
                    "error_flag": 3,
                    "error_status": 1,
                    "input_pointer": 1,
                    "output": 2,
                    "output_error_code": 1,
                    "output_ptr": 1,
                    "output_status": 1,
                    "result": 5,
                    "result_code": 1,
                    "result_status": 1
                },
                "param_2": {
                    "arg2": 1,
                    "input_1": 1,
                    "input_data1": 1,
                    "input_param_1": 1,
                    "length": 1,
                    "param2": 18,
                    "param_2": 6,
                    "unused_param1": 1,
                    "value_1": 1
                },
                "param_3": {
                    "arg3": 1,
                    "input_2": 1,
                    "input_data2": 1,
                    "input_param_2": 1,
                    "param3": 18,
                    "param_3": 6,
                    "unknown": 1,
                    "unused_param2": 1,
                    "value_2": 1
                },
                "param_4": {
                    "byte_value": 5,
                    "fill_value": 1,
                    "input_3": 1,
                    "input_data3": 1,
                    "input_param_3": 1,
                    "param": 1,
                    "param4": 16,
                    "param_4": 4,
                    "value": 1
                },
                "piVar1": {
                    "block_pointer": 1,
                    "current_array": 1,
                    "current_block": 12,
                    "current_block_ptr": 1,
                    "current_data": 1,
                    "current_element": 3,
                    "current_entry": 1,
                    "current_item": 1,
                    "current_memory_block": 2,
                    "current_ptr1": 2,
                    "current_widget": 1,
                    "inner_pointer1": 1,
                    "new_block_ptr": 1,
                    "pointer1": 1,
                    "ptr1": 1,
                    "temp_var1": 1
                },
                "piVar2": {
                    "array_pointer": 1,
                    "current_array": 1,
                    "current_block_element": 1,
                    "current_block_ptr": 1,
                    "current_element": 4,
                    "current_element_ptr": 1,
                    "current_item": 4,
                    "current_pointer": 2,
                    "current_ptr2": 2,
                    "current_struct": 1,
                    "current_struct_ptr": 1,
                    "current_sub_block": 1,
                    "current_value": 1,
                    "inner_block": 1,
                    "inner_pointer2": 1,
                    "nested_element": 1,
                    "nested_entry": 1,
                    "next_element": 1,
                    "pointer2": 1,
                    "ptr2": 1,
                    "sub_block_pointer": 1,
                    "temp_var2": 1,
                    "widget_iterator": 1
                },
                "ppiVar3": {
                    "array_of_arrays": 1,
                    "array_pointer": 1,
                    "block_chain": 1,
                    "block_list": 6,
                    "block_list_pointer": 1,
                    "block_pointer": 1,
                    "block_ptr": 2,
                    "block_ptr_ptr": 2,
                    "blocks": 1,
                    "data_ptr": 1,
                    "data_structure": 2,
                    "double_pointer": 1,
                    "list_ptr": 1,
                    "memory_block": 1,
                    "memory_block_list": 1,
                    "memory_block_pointer": 1,
                    "memory_block_ptr_ptr": 1,
                    "nested_element_list": 1,
                    "nested_ptr": 1,
                    "outer_pointer": 1,
                    "ptr_ptr3": 1,
                    "temp_var3": 1,
                    "widget_array": 1
                }
            },
            "called": [
                "FUN_080091c6",
                "FUN_08009d50",
                "FUN_08009d24"
            ],
            "calling": [
                "FUN_08009d50"
            ],
            "code": "\nint * initialize_memory_block_08009db0(undefined4 *error_code,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *current_block;\n  int *current_element;\n  int **block_list;\n  \n  if (DAT_200000ac == 0) {\n    initialize_memory_blocks_08009d50(&DAT_20000094);\n  }\n  block_list = (int **)&DAT_200000dc;\n  do {\n    current_element = block_list[2];\n    current_block = block_list[1];\n    while (current_block = (int *)((int)current_block + -1), -1 < (int)current_block) {\n      if (*(short *)(current_element + 3) == 0) {\n        *(undefined2 *)((int)current_element + 0xe) = 0xffff;\n        current_element[0x19] = 0;\n        *(undefined2 *)(current_element + 3) = 1;\n        *current_element = 0;\n        current_element[2] = 0;\n        current_element[1] = 0;\n        current_element[4] = 0;\n        current_element[5] = 0;\n        current_element[6] = 0;\n        fill_memory_with_byte(current_element + 0x17,0,8,1,param4);\n        current_element[0xd] = 0;\n        current_element[0xe] = 0;\n        current_element[0x12] = 0;\n        current_element[0x13] = 0;\n        return current_element;\n      }\n      current_element = current_element + 0x1a;\n    }\n    if (*block_list == (int *)0x0) {\n      current_block = (int *)allocate_and_initialize_memory_block_08009db0(error_code,4);\n      *block_list = current_block;\n      if (current_block == (int *)0x0) {\n        *error_code = 0xc;\n        return (int *)0x0;\n      }\n    }\n    block_list = (int **)*block_list;\n  } while( true );\n}\n\n",
            "code_backup": "\nint * FUN_08009db0(undefined4 *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int *piVar1;\n  int *piVar2;\n  int **ppiVar3;\n  \n  if (DAT_200000ac == 0) {\n    FUNC_08009d50(&DAT_20000094);\n  }\n  ppiVar3 = (int **)&DAT_200000dc;\n  do {\n    piVar2 = ppiVar3[2];\n    piVar1 = ppiVar3[1];\n    while (piVar1 = (int *)((int)piVar1 + -1), -1 < (int)piVar1) {\n      if (*(short *)(piVar2 + 3) == 0) {\n        *(undefined2 *)((int)piVar2 + 0xe) = 0xffff;\n        piVar2[0x19] = 0;\n        *(undefined2 *)(piVar2 + 3) = 1;\n        *piVar2 = 0;\n        piVar2[2] = 0;\n        piVar2[1] = 0;\n        piVar2[4] = 0;\n        piVar2[5] = 0;\n        piVar2[6] = 0;\n        fill_memory_with_byte_080091c6(piVar2 + 0x17,0,8,1,param_4);\n        piVar2[0xd] = 0;\n        piVar2[0xe] = 0;\n        piVar2[0x12] = 0;\n        piVar2[0x13] = 0;\n        return piVar2;\n      }\n      piVar2 = piVar2 + 0x1a;\n    }\n    if (*ppiVar3 == (int *)0x0) {\n      piVar1 = (int *)allocate_and_initialize_memory_block_08009d24(param_1,4);\n      *ppiVar3 = piVar1;\n      if (piVar1 == (int *)0x0) {\n        *param_1 = 0xc;\n        return (int *)0x0;\n      }\n    }\n    ppiVar3 = (int **)*ppiVar3;\n  } while( true );\n}\n\n",
            "current_name": "initialize_memory_block_08009db0",
            "entrypoint": "0x08009db0",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009db0": "initialize_memory_block_08009db0",
                "allocate_and_initialize_memory_block_08009d24": "allocate_and_initialize_memory_block",
                "fill_memory_with_byte_080091c6": "fill_memory_with_byte",
                "param_1": "error_code",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "current_block",
                "piVar2": "current_element",
                "ppiVar3": "block_list"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009e64": {
            "additional_data": {
                "FUN_08009e64": {
                    "check_and_initialize_memory": 1,
                    "check_memory": 2,
                    "check_memory_and_initialize": 1,
                    "check_memory_and_return_flag": 1,
                    "check_memory_and_set_flag": 4,
                    "check_memory_permissions": 1,
                    "check_memory_status": 1,
                    "initialize_and_check": 1,
                    "initialize_and_check_memory": 10,
                    "initialize_and_check_memory_status": 1,
                    "initialize_check_memory": 1,
                    "initialize_memory": 2,
                    "initialize_memory_and_check": 2,
                    "initialize_memory_check": 3
                },
                "auStack_4c": {
                    "auto_stack": 1,
                    "aux_stack": 1,
                    "stack_array": 4,
                    "stack_buffer": 1,
                    "stack_memory": 1,
                    "stack_var": 1,
                    "stack_var1": 1,
                    "stack_variable": 4,
                    "stack_variable_1": 1,
                    "temp_array": 1,
                    "temp_buffer": 4,
                    "temp_stack": 6,
                    "temporary_buffer": 4,
                    "temporary_stack": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "init_result": 2,
                    "initialize_result": 1,
                    "result": 15,
                    "result1": 1,
                    "return_value1": 1,
                    "status": 4
                },
                "local_48": {
                    "local_flag": 3,
                    "local_value": 4,
                    "local_var": 6,
                    "local_variable": 12,
                    "stack_var2": 1,
                    "stack_variable_2": 1,
                    "temp_value": 1,
                    "temp_var": 1,
                    "value": 1
                },
                "param_1": {
                    "arg1": 9,
                    "arg_1": 1,
                    "argument_1": 1,
                    "data": 1,
                    "function_parameter": 1,
                    "input1": 2,
                    "input_param": 3,
                    "input_parameter": 1,
                    "input_var1": 1,
                    "param": 1,
                    "param1": 4,
                    "param_1": 4,
                    "param_address": 1,
                    "variable_1": 1
                },
                "param_2": {
                    "address": 1,
                    "arg2": 9,
                    "arg_2": 1,
                    "argument_2": 1,
                    "data": 1,
                    "input2": 2,
                    "input_parameter": 1,
                    "input_value": 1,
                    "input_var2": 1,
                    "memory_address": 2,
                    "memory_data": 1,
                    "memory_info": 2,
                    "param2": 4,
                    "param_2": 2,
                    "param_offset": 1,
                    "variable_2": 1
                },
                "param_3": {
                    "arg3": 2,
                    "arg_3": 1,
                    "output": 1,
                    "output1": 1,
                    "output_flags": 1,
                    "output_param": 6,
                    "output_parameter": 2,
                    "output_params": 1,
                    "output_val": 1,
                    "output_value": 3,
                    "output_var1": 1,
                    "param3": 2,
                    "result": 6,
                    "result_param": 1,
                    "result_pointer": 1,
                    "variable_3": 1
                },
                "param_4": {
                    "arg4": 2,
                    "arg_4": 1,
                    "flag": 7,
                    "flag_param": 3,
                    "flag_parameter": 1,
                    "flag_pointer": 1,
                    "memory_status": 1,
                    "output2": 1,
                    "output_flag": 1,
                    "output_parameter_2": 1,
                    "output_value": 1,
                    "output_var2": 1,
                    "param4": 2,
                    "result": 2,
                    "result_param": 1,
                    "status": 3,
                    "status_param": 1,
                    "variable_4": 1
                },
                "uVar2": {
                    "error_code": 1,
                    "flag": 5,
                    "flag_value": 2,
                    "result": 1,
                    "return_val": 1,
                    "return_value": 9,
                    "return_value2": 1,
                    "status": 1,
                    "updated_value": 2
                }
            },
            "called": [
                "FUN_0800a0ec"
            ],
            "calling": [
                "FUN_08009eac"
            ],
            "code": "\nundefined4 initialize_and_check_memory_status_08009e64(undefined4 arg1,int arg2,undefined4 *output_param,uint *flag)\n\n{\n  int result;\n  undefined4 return_value;\n  undefined temp_stack [4];\n  uint local_variable;\n  \n  if ((*(short *)(arg2 + 0xe) < 0) ||\n     (result = initialize_and_check_memory_0800a0ec(arg1,(int)*(short *)(arg2 + 0xe),temp_stack), result < 0)) {\n    *flag = 0;\n    if ((int)((uint)*(ushort *)(arg2 + 0xc) << 0x18) < 0) {\n      return_value = 0x40;\n      goto LAB_08009ea4;\n    }\n  }\n  else {\n    *flag = (uint)((local_variable & 0xf000) == 0x2000);\n  }\n  return_value = 0x400;\nLAB_08009ea4:\n  *output_param = return_value;\n  return 0;\n}\n\n",
            "current_name": "initialize_and_check_memory_status_08009e64",
            "entrypoint": "0x08009e64",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009e64": "initialize_and_check_memory_status_08009e64",
                "auStack_4c": "temp_stack",
                "iVar1": "result",
                "local_48": "local_variable",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "output_param",
                "param_4": "flag",
                "uVar2": "return_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009eac": {
            "additional_data": {
                "FUN_08009eac": {
                    "allocate_memory_and_initialize": 1,
                    "allocate_memory_block": 1,
                    "initialize_and_allocate_memory": 1,
                    "initialize_and_assign_memory_block": 1,
                    "initialize_application": 1,
                    "initialize_memory": 10,
                    "initialize_memory_and_assign_values": 1,
                    "initialize_memory_and_check_status": 2,
                    "initialize_memory_and_status": 3,
                    "initialize_memory_block": 5,
                    "initialize_memory_status": 5
                },
                "allocate_and_assign_memory_block_08009270": {
                    "allocate_and_assign_mem_block": 1,
                    "allocate_and_assign_memory": 1,
                    "allocate_and_assign_memory_block": 2,
                    "assign_memory_block": 2
                },
                "iVar2": {
                    "allocated_block": 6,
                    "allocated_memory": 11,
                    "allocated_memory_block": 3,
                    "allocated_ptr": 1,
                    "allocated_size": 2,
                    "allocation_result": 3,
                    "memory_block": 4,
                    "memory_block_allocation_result": 1
                },
                "initialize_and_check_application_error_0800a110": {
                    "check_app_error": 1,
                    "check_application_error": 1,
                    "init_and_check_app_error": 1,
                    "initialize_and_check_application_error": 3
                },
                "initialize_and_check_memory_status_08009e64": {
                    "check_memory_status": 2,
                    "init_and_check_mem_status": 1,
                    "initialize_and_check_memory_status": 2,
                    "initialize_memory_and_check_status": 1
                },
                "local_14": {
                    "app_error": 1,
                    "application_error": 3,
                    "dependent_memory_info": 1,
                    "error": 1,
                    "error_code": 1,
                    "error_data": 1,
                    "error_data_pointer": 1,
                    "error_flag": 1,
                    "error_handle": 1,
                    "error_info": 3,
                    "error_pointer": 1,
                    "error_ptr": 1,
                    "error_status": 1,
                    "local_array": 1,
                    "local_data": 1,
                    "local_data_ptr": 1,
                    "local_mem_block": 1,
                    "local_memory": 1,
                    "local_memory_block": 1,
                    "local_memory_status": 1,
                    "local_param2": 1,
                    "local_parameter2": 1,
                    "local_status": 1,
                    "local_variable2": 1,
                    "memory_block_copy": 1,
                    "memory_block_local": 1,
                    "some_pointer": 1
                },
                "local_18": {
                    "allocated_memory": 1,
                    "allocated_memory_size": 2,
                    "allocated_size": 1,
                    "allocation_size": 1,
                    "block_size": 1,
                    "block_size_local": 1,
                    "data_size": 1,
                    "local_mem_address": 1,
                    "local_mem_size": 1,
                    "local_memory": 4,
                    "local_memory_block": 2,
                    "local_memory_size": 1,
                    "local_param": 2,
                    "local_param1": 1,
                    "local_parameter1": 1,
                    "local_variable1": 1,
                    "mem_size": 1,
                    "memory_size": 3,
                    "param_size_copy": 1,
                    "requested_size": 1,
                    "size": 3
                },
                "param_1": {
                    "application_handle": 1,
                    "base_address": 4,
                    "block_size": 1,
                    "context": 1,
                    "function_pointer": 3,
                    "initial_value": 1,
                    "mem_address": 2,
                    "mem_status_ptr": 1,
                    "memory": 1,
                    "memory_address": 1,
                    "memory_block": 3,
                    "memory_block_addr": 1,
                    "memory_block_address": 1,
                    "memory_handle": 1,
                    "memory_manager": 1,
                    "memory_ptr": 1,
                    "memory_status": 1,
                    "memory_status_pointer": 1,
                    "param1": 4,
                    "param_size": 1
                },
                "param_2": {
                    "application_data": 1,
                    "application_data_pointer": 1,
                    "data": 1,
                    "data_array": 1,
                    "data_ptr": 2,
                    "mem_block": 1,
                    "mem_info": 1,
                    "memory_block": 6,
                    "memory_block_array": 1,
                    "memory_block_info": 2,
                    "memory_data": 3,
                    "memory_info": 2,
                    "memory_pointer": 1,
                    "memory_status": 1,
                    "param2": 4,
                    "parameter_array": 1,
                    "params": 1,
                    "pointer_params": 1
                },
                "uVar1": {
                    "initialized_status": 4,
                    "initialized_value": 2,
                    "memory_check_result": 2,
                    "memory_status": 7,
                    "status": 14,
                    "status_flag": 1,
                    "status_value": 1
                }
            },
            "called": [
                "FUN_08009e64",
                "FUN_0800a110",
                "FUN_08009270"
            ],
            "calling": [
                "FUN_08009a80"
            ],
            "code": "\nvoid initialize_and_assign_memory_block_08009eac(int param1,int *memory_block)\n\n{\n  ushort status;\n  int allocated_memory;\n  int local_memory;\n  int *error_info;\n  \n  if (-1 < (int)((uint)*(ushort *)(memory_block + 3) << 0x1e)) {\n    local_memory = param1;\n    error_info = memory_block;\n    status = check_memory_status(param1,memory_block,&local_memory,&error_info);\n    allocated_memory = allocate_and_assign_memory_block(param1,local_memory);\n    if (allocated_memory != 0) {\n      *(undefined **)(param1 + 0x28) = &LAB_08009cd0_1;\n      *memory_block = allocated_memory;\n      *(ushort *)(memory_block + 3) = *(ushort *)(memory_block + 3) | 0x80;\n      memory_block[4] = allocated_memory;\n      memory_block[5] = local_memory;\n      if ((error_info != (int *)0x0) &&\n         (allocated_memory = initialize_and_check_application_error(param1,(int)*(short *)((int)memory_block + 0xe)), allocated_memory != 0)) {\n        *(ushort *)(memory_block + 3) = *(ushort *)(memory_block + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(memory_block + 3) = status | *(ushort *)(memory_block + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(memory_block + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(memory_block + 3) = *(ushort *)(memory_block + 3) & 0xfffc | 2;\n  }\n  *memory_block = (int)memory_block + 0x47;\n  memory_block[4] = (int)memory_block + 0x47;\n  memory_block[5] = 1;\n  return;\n}\n\n",
            "current_name": "initialize_and_assign_memory_block_08009eac",
            "entrypoint": "0x08009eac",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009eac": "initialize_and_assign_memory_block_08009eac",
                "allocate_and_assign_memory_block_08009270": "allocate_and_assign_memory_block",
                "iVar2": "allocated_memory",
                "initialize_and_check_application_error_0800a110": "initialize_and_check_application_error",
                "initialize_and_check_memory_status_08009e64": "check_memory_status",
                "local_14": "error_info",
                "local_18": "local_memory",
                "param_1": "param1",
                "param_2": "memory_block",
                "uVar1": "status"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009f2c": {
            "additional_data": {
                "FUN_08009f2c": {
                    "find_char_in_string": 2,
                    "find_character": 16,
                    "find_character_in_string": 5,
                    "find_character_index": 2,
                    "find_character_position": 1,
                    "find_first_occurrence": 5
                },
                "param_1": {
                    "input_string": 3,
                    "str": 1,
                    "string": 27
                },
                "param_2": {
                    "character": 25,
                    "character_to_find": 1,
                    "search_character": 1,
                    "target_char": 2,
                    "target_character": 2
                },
                "param_3": {
                    "length": 26,
                    "string_length": 5
                },
                "pcVar1": {
                    "current_char": 12,
                    "current_char_ptr": 1,
                    "current_character": 4,
                    "current_position": 3,
                    "current_ptr": 2
                },
                "pcVar2": {
                    "found_char": 3,
                    "next_char": 9,
                    "next_char_ptr": 1,
                    "next_character": 4,
                    "next_position": 3,
                    "next_ptr": 2
                }
            },
            "called": [],
            "calling": [
                "FUN_08009698",
                "FUN_0800937c"
            ],
            "code": "\nchar * find_character_in_string_08009f2c(char *string,char character,int length)\n\n{\n  char *current_char;\n  char *next_char;\n  \n  current_char = string;\n  do {\n    next_char = current_char;\n    if (next_char == string + length) {\n      return (char *)0x0;\n    }\n    current_char = next_char + 1;\n  } while (*next_char != character);\n  return next_char;\n}\n\n",
            "current_name": "find_character_in_string_08009f2c",
            "entrypoint": "0x08009f2c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009f2c": "find_character_in_string_08009f2c",
                "param_1": "string",
                "param_2": "character",
                "param_3": "length",
                "pcVar1": "current_char",
                "pcVar2": "next_char"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_08009f48": {
            "called": [],
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "code": "\nvoid FUNC_08009f48(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08009f48",
            "entrypoint": "0x08009f48",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08009f48": "FUNC_08009f48"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08009f4a": {
            "called": [],
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "code": "\nvoid FUNC_08009f4a(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_08009f4a",
            "entrypoint": "0x08009f4a",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_08009f4a": "FUNC_08009f4a"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_08009fe8": {
            "additional_data": {
                "DAT_20000090": {
                    "data_array": 3,
                    "data_values": 1
                },
                "DAT_20000a38": {
                    "error_code": 2,
                    "error_value": 2,
                    "initialized_value": 1
                },
                "FUN_08009fe8": {
                    "execute_function": 1,
                    "handle_data": 2,
                    "initialize_data": 1,
                    "initialize_function": 2,
                    "perform_operation": 1,
                    "process_data": 16,
                    "process_function": 1,
                    "process_param": 3,
                    "process_parameter": 1
                },
                "iVar3": {
                    "array_index": 1,
                    "current_index": 1,
                    "current_value": 3,
                    "data": 4,
                    "data_index": 1,
                    "data_length": 2,
                    "data_value": 5,
                    "data_var": 1,
                    "entry": 1,
                    "index": 3,
                    "initialized_data": 1,
                    "offset": 1,
                    "result": 2,
                    "temp_var": 1,
                    "value": 4
                },
                "in_lr": {
                    "in_link_register": 1,
                    "link_register": 3,
                    "lr": 2,
                    "param6": 1,
                    "return_address": 6,
                    "unused_3": 1
                },
                "initialize_data_0800886c": {
                    "initialize_data": 1
                },
                "initialize_flag_0800887c": {
                    "initialize_flag": 1
                },
                "param_1": {
                    "data": 6,
                    "data_index": 2,
                    "function_index": 1,
                    "input": 10,
                    "input_param": 5,
                    "input_value": 2,
                    "param": 3,
                    "parameter": 2
                },
                "pcVar4": {
                    "callback": 1,
                    "callback_function": 1,
                    "code_function": 1,
                    "code_ptr": 3,
                    "func_pointer": 1,
                    "func_ptr": 1,
                    "function_pointer": 7,
                    "function_ptr": 16
                },
                "piVar1": {
                    "data_array": 8,
                    "data_pointer": 4,
                    "data_ptr": 11,
                    "original_pointer": 1,
                    "output_data": 1,
                    "ptr": 1,
                    "ptr_data": 1,
                    "ptr_value": 1,
                    "ptr_var": 1,
                    "result_ptr": 2
                },
                "puVar5": {
                    "data_array_pointer": 1,
                    "data_array_ptr": 6,
                    "data_pointer": 1,
                    "data_pointer_address": 1,
                    "data_pointer_pointer": 1,
                    "data_pointer_ptr": 1,
                    "data_ptr": 5,
                    "data_ptr_ptr": 8,
                    "output_ptr": 1,
                    "ptr": 2,
                    "ptr_arr": 1,
                    "ptr_to_data_ptr": 1,
                    "ptr_to_ptr": 1,
                    "ptr_value": 1
                },
                "uVar2": {
                    "flag": 1,
                    "init_flag": 2,
                    "initialize_flag": 8,
                    "initialize_result": 1,
                    "initialized_flag": 1,
                    "result": 11,
                    "return_value": 4,
                    "retval": 1,
                    "status": 2
                },
                "unaff_r4": {
                    "arg_4": 1,
                    "param4": 1,
                    "register4": 1,
                    "register_4": 1,
                    "unused_1": 1,
                    "unused_register4": 1
                },
                "unaff_r5": {
                    "arg_5": 1,
                    "param5": 1,
                    "register5": 1,
                    "register_5": 1,
                    "unused_2": 1,
                    "unused_register5": 1
                }
            },
            "called": [
                "thunk_FUN_0800887c",
                "FUN_0800886c"
            ],
            "calling": [
                "FUN_08009b5c"
            ],
            "code": "\nint process_data_08009fe8(uint input)\n\n{\n  int *data_ptr;\n  undefined4 result;\n  int data_value;\n  code *function_ptr;\n  undefined4 param4;\n  undefined4 unused_2;\n  undefined4 return_address;\n  undefined4 *data_ptr_ptr;\n  \n  data_ptr = DAT_20000090;\n  data_ptr_ptr = &DAT_20000090;\n  if (0x1f < input) {\n    *DAT_20000090 = 0x16;\n    return -1;\n  }\n  data_value = DAT_20000090[0x11];\n  if ((data_value != 0) && (function_ptr = *(code **)(data_value + input * 4), function_ptr != (code *)0x0)) {\n    if (function_ptr != (code *)0x1) {\n      if (function_ptr == (code *)0xffffffff) {\n        *DAT_20000090 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(data_value + input * 4) = 0;\n      (*function_ptr)(input);\n    }\n    return 0;\n  }\n  result = thunk_initialize_flag(DAT_20000090);\n  DAT_20000a38 = 0;\n  data_value = initialize_data(result,input,input,0,data_ptr_ptr,param4,unused_2,return_address);\n  if ((data_value == -1) && (DAT_20000a38 != 0)) {\n    *data_ptr = DAT_20000a38;\n  }\n  return data_value;\n}\n\n",
            "current_name": "process_data_08009fe8",
            "entrypoint": "0x08009fe8",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_08009fe8": "process_data_08009fe8",
                "iVar3": "data_value",
                "in_lr": "return_address",
                "initialize_data_0800886c": "initialize_data",
                "initialize_flag_0800887c": "initialize_flag",
                "param_1": "input",
                "pcVar4": "function_ptr",
                "piVar1": "data_ptr",
                "puVar5": "data_ptr_ptr",
                "uVar2": "result",
                "unaff_r4": "param4",
                "unaff_r5": "unused_2"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a020": {
            "additional_data": {
                "FUN_0800a020": {
                    "apply_logic_to_parameter": 1,
                    "initialize_and_update": 1,
                    "initialize_and_update_value": 1,
                    "update_application": 4,
                    "update_application_data": 19,
                    "update_application_status": 1,
                    "update_application_value": 1,
                    "update_data": 1,
                    "update_value": 2
                },
                "bVar3": {
                    "is_initialized": 6,
                    "is_positive": 7,
                    "is_success": 4,
                    "is_successful": 7,
                    "is_valid": 6,
                    "is_valid_result": 1
                },
                "iVar1": {
                    "check_result": 2,
                    "init_result": 1,
                    "result": 27,
                    "validation_result": 1
                },
                "param_1": {
                    "application": 5,
                    "application_data": 18,
                    "application_id": 1,
                    "application_pointer": 1,
                    "application_ptr": 1,
                    "arg1": 2,
                    "param": 1,
                    "param1": 1,
                    "param_1": 1
                },
                "param_2": {
                    "arg2": 2,
                    "binary_data": 7,
                    "binary_data_offset": 1,
                    "buffer": 1,
                    "data": 5,
                    "data_address": 1,
                    "data_buffer": 1,
                    "data_pointer": 5,
                    "data_ptr": 2,
                    "data_structure": 1,
                    "function_data": 1,
                    "input_data": 1,
                    "memory_pointer": 1,
                    "param2": 1,
                    "param_2": 1
                },
                "uVar2": {
                    "new_application_status": 1,
                    "new_data": 5,
                    "new_offset": 1,
                    "new_value": 1,
                    "updated_value": 23
                }
            },
            "called": [
                "FUN_0800a168"
            ],
            "calling": [],
            "code": "\nvoid update_application_data_0800a020(undefined4 application_data,int binary_data)\n\n{\n  int result;\n  uint updated_value;\n  bool is_positive;\n  \n  result = initialize_and_check_application_0800a168(application_data,(int)*(short *)(binary_data + 0xe));\n  is_positive = -1 < result;\n  if (is_positive) {\n    updated_value = *(int *)(binary_data + 0x54) + result;\n  }\n  else {\n    updated_value = *(ushort *)(binary_data + 0xc) & 0xffffefff;\n  }\n  if (is_positive) {\n    *(uint *)(binary_data + 0x54) = updated_value;\n  }\n  if (!is_positive) {\n    *(short *)(binary_data + 0xc) = (short)updated_value;\n  }\n  return;\n}\n\n",
            "current_name": "update_application_data_0800a020",
            "entrypoint": "0x0800a020",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a020": "update_application_data_0800a020",
                "bVar3": "is_positive",
                "iVar1": "result",
                "param_1": "application_data",
                "param_2": "binary_data",
                "uVar2": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a042": {
            "additional_data": {
                "FUN_0800a042": {
                    "initialize_and_process_application": 1,
                    "initialize_and_process_data": 1,
                    "initialize_and_validate_application": 1,
                    "initialize_and_validate_data": 1,
                    "process_application_data": 6,
                    "process_data": 20,
                    "process_data_and_initialize": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "result": 21,
                    "return_value": 1,
                    "validation_result": 7
                },
                "in_lr": {
                    "link_reg": 1,
                    "param_7": 1,
                    "return_addr": 1,
                    "unused3": 4,
                    "unused_3": 2,
                    "unused_var3": 2,
                    "var3": 1
                },
                "initialize_and_check_application_0800a130": {
                    "initialize_and_check_application": 1
                },
                "param_1": {
                    "data": 1,
                    "data_array": 2,
                    "output": 13,
                    "output_array": 3,
                    "output_buffer": 4,
                    "output_data": 2,
                    "output_pointer": 1,
                    "result": 4,
                    "result_ptr": 1
                },
                "param_2": {
                    "data": 2,
                    "data_ptr": 5,
                    "input": 11,
                    "input_array": 3,
                    "input_buffer": 3,
                    "input_data": 4,
                    "input_data_pointer": 1,
                    "param_address": 2
                },
                "param_3": {
                    "arg1": 3,
                    "input_param1": 1,
                    "param1": 7,
                    "param3": 4,
                    "param_3": 2,
                    "param_a": 11,
                    "parameter_a": 1,
                    "value1": 2
                },
                "param_4": {
                    "arg2": 3,
                    "input_param2": 1,
                    "param2": 7,
                    "param4": 4,
                    "param_4": 2,
                    "param_b": 11,
                    "parameter_b": 1,
                    "value2": 2
                },
                "unaff_r4": {
                    "param_5": 1,
                    "temp1": 4,
                    "unaff_param1": 1,
                    "unaff_var1": 1,
                    "unused1": 5,
                    "unused_1": 2,
                    "unused_var1": 3,
                    "unused_variable1": 1,
                    "var1": 1
                },
                "unaff_r5": {
                    "param_6": 1,
                    "temp2": 4,
                    "unaff_param2": 1,
                    "unaff_var2": 1,
                    "unused2": 5,
                    "unused_2": 2,
                    "unused_var2": 3,
                    "unused_variable2": 1,
                    "var2": 1
                },
                "validate_and_process_data_0800885c": {
                    "validate_and_process_data": 1
                }
            },
            "called": [
                "FUN_0800885c",
                "FUN_0800a130"
            ],
            "calling": [],
            "code": "\nvoid process_application_data_0800a042(int *output,int input,undefined4 param_a,undefined4 param_b)\n\n{\n  int result;\n  undefined4 unused1;\n  undefined4 unused2;\n  undefined4 unused3;\n  \n  if ((int)((uint)*(ushort *)(input + 0xc) << 0x17) < 0) {\n    initialize_and_check_application(output,(int)*(short *)(input + 0xe),0,2);\n  }\n  *(ushort *)(input + 0xc) = *(ushort *)(input + 0xc) & 0xefff;\n  DAT_20000a38 = 0;\n  result = validate_and_process_data((int)*(short *)(input + 0xe),param_a,param_b,param_b,param_b,unused1,\n                       unused2,unused3);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *output = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "current_name": "process_application_data_0800a042",
            "entrypoint": "0x0800a042",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a042": "process_application_data_0800a042",
                "iVar1": "result",
                "in_lr": "unused3",
                "initialize_and_check_application_0800a130": "initialize_and_check_application",
                "param_1": "output",
                "param_2": "input",
                "param_3": "param_a",
                "param_4": "param_b",
                "unaff_r4": "unused1",
                "unaff_r5": "unused2",
                "validate_and_process_data_0800885c": "validate_and_process_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a07a": {
            "additional_data": {
                "FUN_0800a07a": {
                    "check_and_initialize_application": 1,
                    "check_and_set_application_flag": 1,
                    "initialize_and_adjust_flags": 1,
                    "initialize_and_check": 1,
                    "initialize_and_check_application": 2,
                    "initialize_and_set_flags": 1,
                    "initialize_and_update": 1,
                    "initialize_and_update_application": 9,
                    "initialize_and_update_application_state": 1,
                    "initialize_and_update_application_status": 1,
                    "initialize_and_update_flags": 1,
                    "initialize_and_update_parameter": 1,
                    "initialize_and_update_status": 3,
                    "initialize_application": 2,
                    "initialize_application_check": 1,
                    "process_application": 2,
                    "update_application_initialization": 1,
                    "update_application_status": 1
                },
                "bVar3": {
                    "error_flag": 1,
                    "is_error": 27,
                    "is_init_failed": 1,
                    "is_initialized": 1,
                    "is_negative": 1
                },
                "iVar1": {
                    "app_status": 3,
                    "application_result": 1,
                    "application_status": 1,
                    "init_result": 2,
                    "initialized_value": 1,
                    "result": 20,
                    "status": 2,
                    "status_result": 1
                },
                "param_1": {
                    "app_data": 1,
                    "application": 1,
                    "application_context": 2,
                    "application_data": 7,
                    "application_id": 2,
                    "application_param": 1,
                    "application_settings": 1,
                    "application_state": 1,
                    "application_status": 1,
                    "arg1": 2,
                    "param": 4,
                    "param1": 3,
                    "param_1": 3,
                    "param_a": 1,
                    "param_ptr": 1
                },
                "param_2": {
                    "application_data": 2,
                    "arg2": 2,
                    "binary_data": 1,
                    "buffer": 4,
                    "context": 3,
                    "data": 4,
                    "data_param": 1,
                    "data_ptr": 3,
                    "function_data": 3,
                    "input_data": 1,
                    "param2": 3,
                    "param_2": 2,
                    "param_b": 1,
                    "param_pointer": 1
                },
                "uVar2": {
                    "adjusted_value": 1,
                    "flag": 4,
                    "flags": 2,
                    "mask": 1,
                    "modified_flags": 2,
                    "modified_value": 2,
                    "new_flag": 1,
                    "new_flag_value": 1,
                    "updated_data": 1,
                    "updated_flag": 5,
                    "updated_flags": 3,
                    "updated_parameter": 1,
                    "updated_status": 2,
                    "updated_value": 5
                }
            },
            "called": [
                "FUN_0800a130"
            ],
            "calling": [],
            "code": "\nvoid initialize_and_update_application_status_0800a07a(undefined4 application_data,int data)\n\n{\n  int result;\n  ushort updated_value;\n  bool is_error;\n  \n  result = initialize_and_check_application_0800a130(application_data,(int)*(short *)(data + 0xe));\n  is_error = result == -1;\n  if (is_error) {\n    updated_value = *(ushort *)(data + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(data + 0x54) = result;\n    updated_value = *(ushort *)(data + 0xc) | 0x1000;\n  }\n  if (is_error) {\n    *(ushort *)(data + 0xc) = updated_value;\n  }\n  if (!is_error) {\n    *(ushort *)(data + 0xc) = updated_value;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_and_update_application_status_0800a07a",
            "entrypoint": "0x0800a07a",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a07a": "initialize_and_update_application_status_0800a07a",
                "bVar3": "is_error",
                "iVar1": "result",
                "param_1": "application_data",
                "param_2": "data",
                "uVar2": "updated_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a0ec": {
            "additional_data": {
                "DAT_20000a38": {
                    "memory_ptr": 1
                },
                "FUN_0800a0ec": {
                    "initialize_and_assign_memory": 2,
                    "initialize_and_check_memory": 3,
                    "initialize_and_set_memory": 1,
                    "initialize_memory": 17,
                    "initialize_memory_and_assign": 2,
                    "initialize_memory_and_assign_result": 1,
                    "initialize_memory_and_assign_value": 1,
                    "initialize_memory_and_store_result": 2,
                    "initialize_memory_if_error_return_memory": 1,
                    "initialize_with_memory": 1
                },
                "iVar1": {
                    "error_code": 1,
                    "init_result": 7,
                    "initialize_result": 1,
                    "memory_status": 1,
                    "result": 7,
                    "result_code": 1,
                    "return_value": 2,
                    "status": 2
                },
                "param_1": {
                    "destination": 1,
                    "memory_pointer": 1,
                    "output": 3,
                    "output_memory": 1,
                    "output_pointer": 5,
                    "output_ptr": 2,
                    "result": 16,
                    "result_ptr": 2
                },
                "param_2": {
                    "arg1": 7,
                    "first_param": 1,
                    "input1": 1,
                    "input_1": 1,
                    "mem_size": 2,
                    "memory_size": 2,
                    "param_a": 1,
                    "size": 8,
                    "size1": 1,
                    "size_1": 1,
                    "size_input_memory": 1,
                    "size_param": 1,
                    "val1": 1,
                    "value1": 2,
                    "width": 1
                },
                "param_3": {
                    "arg2": 7,
                    "height": 1,
                    "initial_value": 1,
                    "input2": 1,
                    "input_2": 1,
                    "mem_param_1": 1,
                    "param_3": 1,
                    "param_b": 1,
                    "second_param": 1,
                    "size2": 1,
                    "size_2": 1,
                    "val2": 1,
                    "value": 5,
                    "value1": 4,
                    "value2": 2,
                    "value_1": 1,
                    "value_to_initialize": 1
                },
                "param_4": {
                    "arg3": 7,
                    "color": 1,
                    "flag": 5,
                    "flags": 1,
                    "input3": 1,
                    "input_3": 1,
                    "mem_param_2": 1,
                    "offset": 1,
                    "option": 1,
                    "param4": 1,
                    "param_4": 1,
                    "param_c": 1,
                    "third_param": 1,
                    "val3": 1,
                    "value2": 4,
                    "value3": 2,
                    "value_2": 1
                }
            },
            "called": [
                "FUN_08008846"
            ],
            "calling": [
                "FUN_08009e64"
            ],
            "code": "\nvoid initialize_and_check_memory_0800a0ec(int *result,undefined4 size,undefined4 arg2,undefined4 arg3)\n\n{\n  int init_result;\n  \n  DAT_20000a38 = 0;\n  init_result = initialize_memory_08008846(size,arg2,arg2,0,arg3);\n  if ((init_result == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_and_check_memory_0800a0ec",
            "entrypoint": "0x0800a0ec",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a0ec": "initialize_and_check_memory_0800a0ec",
                "iVar1": "init_result",
                "param_1": "result",
                "param_2": "size",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a110": {
            "additional_data": {
                "FUN_0800a110": {
                    "initialize_and_check": 1,
                    "initialize_and_check_app": 1,
                    "initialize_and_check_application": 14,
                    "initialize_and_check_application_error": 1,
                    "initialize_and_handle_errors": 1,
                    "initialize_application": 13
                },
                "iVar1": {
                    "application_init_result": 1,
                    "init_result": 17,
                    "initialization_result": 2,
                    "initialize_result": 1,
                    "result": 7,
                    "return_value": 1,
                    "status": 2
                },
                "initialize_application_08008850": {
                    "initialize_application": 1
                },
                "param_1": {
                    "error_code": 1,
                    "output": 3,
                    "output_data": 1,
                    "output_parameter": 1,
                    "output_value": 7,
                    "result": 18
                },
                "param_2": {
                    "app_type": 1,
                    "application_id": 1,
                    "application_parameter": 1,
                    "config_value": 1,
                    "init_param": 1,
                    "initial_value": 1,
                    "input": 5,
                    "input_param": 4,
                    "input_parameter": 1,
                    "input_value": 9,
                    "param": 4,
                    "value": 2
                }
            },
            "called": [
                "FUN_08008850"
            ],
            "calling": [
                "FUN_08009eac"
            ],
            "code": "\nvoid initialize_and_check_application_error_0800a110(int *result,undefined4 input_value)\n\n{\n  int init_result;\n  \n  DAT_20000a38 = 0;\n  init_result = initialize_application(input_value);\n  if ((init_result == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_and_check_application_error_0800a110",
            "entrypoint": "0x0800a110",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a110": "initialize_and_check_application_error_0800a110",
                "iVar1": "init_result",
                "initialize_application_08008850": "initialize_application",
                "param_1": "result",
                "param_2": "input_value"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a130": {
            "additional_data": {
                "DAT_20000a38": {
                    "application_handle": 1,
                    "error_check_result": 1,
                    "error_storage": 1
                },
                "FUN_0800a130": {
                    "initialize_and_assign_error_code": 1,
                    "initialize_and_assign_value": 1,
                    "initialize_and_check_app": 1,
                    "initialize_and_check_application": 9,
                    "initialize_and_check_error": 3,
                    "initialize_and_check_error_code": 1,
                    "initialize_application": 14,
                    "initialize_application_handler": 1
                },
                "iVar1": {
                    "init_result": 13,
                    "initialize_result": 1,
                    "result": 8,
                    "result_code": 1,
                    "return_value": 1,
                    "status": 1
                },
                "param_1": {
                    "error_code": 4,
                    "error_flag": 1,
                    "output": 2,
                    "output_error_code": 1,
                    "output_ptr": 2,
                    "output_value": 4,
                    "output_variable": 1,
                    "result": 14,
                    "result_ptr": 1,
                    "return_value": 1
                },
                "param_2": {
                    "arg1": 19,
                    "arg_1": 1,
                    "input1": 1,
                    "input_param_1": 1,
                    "input_value1": 1,
                    "param2": 2,
                    "param_1": 1,
                    "param_2": 4
                },
                "param_3": {
                    "arg2": 19,
                    "arg_2": 1,
                    "input2": 1,
                    "input_param_2": 1,
                    "input_value2": 1,
                    "param3": 2,
                    "param_2": 1,
                    "param_3": 4
                },
                "param_4": {
                    "arg3": 19,
                    "arg_3": 1,
                    "input3": 1,
                    "input_param_3": 1,
                    "input_value3": 1,
                    "param4": 2,
                    "param_3": 1,
                    "param_4": 4
                }
            },
            "called": [
                "FUN_08008854"
            ],
            "calling": [
                "FUN_0800a042",
                "FUN_0800a07a"
            ],
            "code": "\nvoid initialize_and_check_application_0800a130(int *result,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  int init_result;\n  \n  DAT_20000a38 = 0;\n  init_result = initialize_application_08008854(arg1,arg2,arg3,arg3,arg3);\n  if ((init_result == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_and_check_application_0800a130",
            "entrypoint": "0x0800a130",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a130": "initialize_and_check_application_0800a130",
                "iVar1": "init_result",
                "param_1": "result",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a154": {
            "additional_data": {
                "FUN_0800a154": {
                    "calculate_new_value": 2,
                    "calculate_result": 8,
                    "calculate_sum": 18,
                    "calculate_updated_value": 1,
                    "calculate_value": 2
                },
                "iVar1": {
                    "current_index": 1,
                    "index": 3,
                    "new_index": 1,
                    "new_num": 1,
                    "new_value": 1,
                    "result": 6,
                    "start_index": 1,
                    "sum": 14,
                    "updated_value": 3
                },
                "param_1": {
                    "arg1": 1,
                    "data": 1,
                    "initial_value": 1,
                    "input": 5,
                    "input1": 1,
                    "input_parameter": 1,
                    "param": 3,
                    "result": 6,
                    "sum": 1,
                    "undefined": 1,
                    "undefined_value": 1,
                    "unknown_param": 1,
                    "value": 5,
                    "value1": 1,
                    "value_to_add": 1,
                    "value_to_update": 1
                },
                "param_2": {
                    "arg2": 1,
                    "array": 11,
                    "array_address": 2,
                    "array_base": 1,
                    "array_index": 2,
                    "array_ptr": 1,
                    "array_size": 1,
                    "base_address": 2,
                    "data": 2,
                    "input": 4,
                    "input2": 1,
                    "num": 1,
                    "offset": 1,
                    "pointer": 1
                }
            },
            "called": [],
            "calling": [
                "FUN_08009908"
            ],
            "code": "\nint calculate_sum_0800a154(undefined4 result,int array)\n\n{\n  int sum;\n  \n  sum = *(int *)(array + -4) + -4;\n  if (*(int *)(array + -4) < 0) {\n    sum = sum + *(int *)(array + sum);\n  }\n  return sum;\n}\n\n",
            "current_name": "calculate_sum_0800a154",
            "entrypoint": "0x0800a154",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a154": "calculate_sum_0800a154",
                "iVar1": "sum",
                "param_1": "result",
                "param_2": "array"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a168": {
            "additional_data": {
                "FUN_0800a168": {
                    "initialize_and_check_application": 7,
                    "initialize_and_check_error": 4,
                    "initialize_and_update_application": 1,
                    "initialize_application": 18
                },
                "iVar1": {
                    "init_result": 15,
                    "initialization_result": 2,
                    "initialize_result": 2,
                    "result": 6,
                    "return_value": 1,
                    "status": 1
                },
                "initialize_application_08008858": {
                    "initialize_application": 1,
                    "initialize_application_internal": 1
                },
                "param_1": {
                    "application_status": 1,
                    "error_code": 8,
                    "error_flag": 1,
                    "output": 2,
                    "output_parameter": 1,
                    "output_ptr": 1,
                    "output_result": 1,
                    "output_value": 1,
                    "output_variable": 1,
                    "result": 13,
                    "result_ptr": 1
                },
                "param_2": {
                    "arg1": 20,
                    "arg_2": 1,
                    "input_param1": 2,
                    "input_parameter_1": 1,
                    "input_var1": 1,
                    "param1": 1,
                    "param2": 1,
                    "param_2": 3,
                    "param_a": 1
                },
                "param_3": {
                    "arg2": 20,
                    "arg_3": 1,
                    "input_param2": 2,
                    "input_parameter_2": 1,
                    "input_var2": 1,
                    "param2": 1,
                    "param3": 1,
                    "param_3": 3,
                    "param_b": 1
                },
                "param_4": {
                    "arg3": 20,
                    "arg_4": 1,
                    "input_param3": 2,
                    "input_parameter_3": 1,
                    "input_var3": 1,
                    "param3": 1,
                    "param4": 1,
                    "param_4": 3,
                    "param_c": 1
                }
            },
            "called": [
                "FUN_08008858"
            ],
            "calling": [
                "FUN_0800a020"
            ],
            "code": "\nvoid initialize_and_check_application_0800a168(int *result,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  int init_result;\n  \n  DAT_20000a38 = 0;\n  init_result = initialize_application_internal(arg1,arg2,arg3,arg3,arg3);\n  if ((init_result == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "current_name": "initialize_and_check_application_0800a168",
            "entrypoint": "0x0800a168",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a168": "initialize_and_check_application_0800a168",
                "iVar1": "init_result",
                "initialize_application_08008858": "initialize_application_internal",
                "param_1": "result",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a18c": {
            "additional_data": {
                "DAT_20000994": {
                    "data12": 2,
                    "data_12": 2,
                    "data_94": 3,
                    "data_flag_12": 1,
                    "var_l": 1,
                    "variable_94": 3
                },
                "DAT_20000998": {
                    "data11": 2,
                    "data_11": 2,
                    "data_98": 3,
                    "data_flag_11": 1,
                    "var_k": 1,
                    "variable_98": 3
                },
                "DAT_2000099c": {
                    "data10": 2,
                    "data_10": 2,
                    "data_9c": 3,
                    "data_flag_10": 1,
                    "var_j": 1,
                    "variable_9c": 3
                },
                "DAT_200009a0": {
                    "data9": 2,
                    "data_9": 2,
                    "data_a0": 3,
                    "data_flag_9": 1,
                    "var_i": 1,
                    "variable_a0": 3
                },
                "DAT_200009a4": {
                    "data8": 2,
                    "data_8": 2,
                    "data_a4": 3,
                    "data_flag_8": 1,
                    "var_h": 1,
                    "variable_a4": 3
                },
                "DAT_200009a8": {
                    "data7": 2,
                    "data_7": 2,
                    "data_a8": 3,
                    "data_flag_7": 1,
                    "var_g": 1,
                    "variable_a8": 3
                },
                "DAT_200009ac": {
                    "data6": 2,
                    "data_6": 2,
                    "data_ac": 3,
                    "data_flag_6": 1,
                    "var_f": 1,
                    "variable_ac": 3
                },
                "DAT_200009b0": {
                    "data5": 2,
                    "data_5": 2,
                    "data_b0": 3,
                    "data_flag_5": 1,
                    "var_e": 1,
                    "variable_b0": 3
                },
                "DAT_200009b4": {
                    "data4": 2,
                    "data_4": 2,
                    "data_b4": 3,
                    "data_flag_4": 1,
                    "var_d": 1,
                    "variable_b4": 3
                },
                "DAT_200009b8": {
                    "data3": 2,
                    "data_3": 2,
                    "data_b8": 3,
                    "data_flag_3": 1,
                    "var_c": 1,
                    "variable_b8": 3
                },
                "DAT_200009bc": {
                    "data2": 2,
                    "data_2": 2,
                    "data_bc": 3,
                    "data_flag_2": 1,
                    "var_b": 1,
                    "variable_bc": 3
                },
                "DAT_200009c0": {
                    "data1": 2,
                    "data_1": 2,
                    "data_c0": 3,
                    "data_flag_1": 1,
                    "var_a": 1,
                    "variable_c0": 3
                },
                "FUN_0800a18c": {
                    "handle_data": 5,
                    "initialize_data_flags": 1,
                    "process_and_handle_data": 11,
                    "process_and_update_data": 1,
                    "process_data": 9,
                    "process_data_and_call_jumptable": 1,
                    "process_data_and_handle_events": 1,
                    "process_data_function": 1,
                    "process_jumptable": 1
                },
                "UNRECOVERED_JUMPTABLE": {
                    "func_ptr": 1,
                    "function_pointer": 1,
                    "function_ptr": 1,
                    "handle_data_jump_table": 1,
                    "handle_data_jumptable": 1,
                    "handler": 1,
                    "jump_table": 15,
                    "jumptable": 3,
                    "next_function": 2,
                    "process_data_jump_table": 1,
                    "process_function": 3,
                    "process_function_pointer": 1
                },
                "process_and_handle_data_08009b5c": {
                    "process_and_handle_data": 5,
                    "process_data": 1
                }
            },
            "called": [
                "FUN_08009b5c"
            ],
            "calling": [
                "FUN_08009084"
            ],
            "code": "\nvoid process_data_and_handle_events_0800a18c(void)\n\n{\n  code *jump_table;\n  \n  jump_table = process_data_and_handle_events_0800a18c;\n  process_and_handle_data();\n  if (-1 < DAT_200009c0 << 0x1f) {\n    DAT_200009c0 = 1;\n  }\n  if (-1 < DAT_200009bc << 0x1f) {\n    DAT_200009bc = 1;\n  }\n  if (-1 < DAT_200009b8 << 0x1f) {\n    DAT_200009b8 = 1;\n  }\n  if (-1 < DAT_200009b4 << 0x1f) {\n    DAT_200009b4 = 1;\n  }\n  if (-1 < DAT_200009b0 << 0x1f) {\n    DAT_200009b0 = 1;\n  }\n  if (-1 < DAT_200009ac << 0x1f) {\n    DAT_200009ac = 1;\n  }\n  if (-1 < DAT_200009a8 << 0x1f) {\n    DAT_200009a8 = 1;\n  }\n  if (-1 < DAT_200009a4 << 0x1f) {\n    DAT_200009a4 = 1;\n  }\n  if (-1 < DAT_200009a0 << 0x1f) {\n    DAT_200009a0 = 1;\n  }\n  if (-1 < DAT_2000099c << 0x1f) {\n    DAT_2000099c = 1;\n  }\n  if (-1 < DAT_20000998 << 0x1f) {\n    DAT_20000998 = 1;\n  }\n  if (-1 < DAT_20000994 << 0x1f) {\n    DAT_20000994 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x0800a224. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "current_name": "process_data_and_handle_events_0800a18c",
            "entrypoint": "0x0800a18c",
            "imported": false,
            "improved": true,
            "renaming": {
                "FUN_0800a18c": "process_data_and_handle_events_0800a18c",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "process_and_handle_data_08009b5c": "process_and_handle_data"
            },
            "skipped": false,
            "tags": []
        },
        "FUN_0800a424": {
            "called": [],
            "calling": [
                "FUN_0800010c",
                "FUN_08009148"
            ],
            "code": "\nvoid FUNC_0800a424(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800a424",
            "entrypoint": "0x0800a424",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800a424": "FUNC_0800a424"
            },
            "skipped": true,
            "tags": []
        },
        "FUN_0800a430": {
            "called": [],
            "calling": [],
            "code": "\nvoid FUNC_0800a430(void)\n\n{\n  return;\n}\n\n",
            "current_name": "FUNC_0800a430",
            "entrypoint": "0x0800a430",
            "imported": false,
            "improved": false,
            "renaming": {
                "FUN_0800a430": "FUNC_0800a430"
            },
            "skipped": true,
            "tags": []
        },
        "entry": {
            "called": [
                "FUN_080073ec",
                "FUN_08008f1c",
                "FUN_08009148"
            ],
            "calling": [],
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_200000f4; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x800ac18);\n  }\n  for (puVar2 = &DAT_200000f4; puVar2 < &DAT_20000a3c; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  initialize_peripheral_registers_080073ec();\n  execute_all_functions_08009148();\n  UNRECOVERED_JUMPTABLE = (code *)0x800368a;\n  process_firmware_data_08008f1c();\n                    /* WARNING: Could not recover jumptable at 0x0800368a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "current_name": "entry",
            "entrypoint": "0x08003658",
            "imported": false,
            "improved": true,
            "renaming": {},
            "skipped": false,
            "tags": []
        },
        "thunk_FUN_0800887c": {
            "additional_data": {
                "DAT_": {
                    "unmodified_data": 1
                },
                "PTR_": {
                    "unmodified_pointer": 1
                },
                "ret_val": {
                    "result": 1
                },
                "return": {
                    "status": 1
                },
                "thunk_FUN_0800887c": {
                    "calculate_return_value": 1,
                    "check_status": 1,
                    "get_constant_one": 1,
                    "get_one": 6,
                    "get_return_value": 10,
                    "get_status": 7,
                    "initialize": 3,
                    "is_true": 1,
                    "one": 1
                },
                "undefined4": {
                    "int": 3,
                    "status": 6
                }
            },
            "called": [
                "FUN_0800887c"
            ],
            "calling": [
                "FUN_08009fe8"
            ],
            "code": "\nstatus get_return_value_thunk_0800887c(void)\n\n{\n  status 1;\n}\n\n",
            "current_name": "get_return_value_thunk_0800887c",
            "entrypoint": "0x0800a01c",
            "imported": false,
            "improved": true,
            "renaming": {
                "return": "status",
                "thunk_FUN_0800887c": "get_return_value_thunk_0800887c",
                "undefined4": "status"
            },
            "skipped": false,
            "tags": []
        }
    },
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000188",
            "FUN_080005e0",
            "FUN_08002400",
            "FUN_08002580",
            "FUN_0800267c",
            "FUN_080026f8",
            "FUN_0800270c",
            "FUN_08002720",
            "FUN_0800291c",
            "FUN_08002a30",
            "FUN_08002c2c",
            "FUN_08002ec4",
            "FUN_08002f1e",
            "FUN_08002f2c",
            "FUN_08002f84",
            "FUN_08002f94",
            "FUN_08002fa0",
            "FUN_08002fa8",
            "FUN_08002fba",
            "FUN_08002fc2",
            "FUN_0800307a",
            "FUN_0800314e",
            "FUN_08003154",
            "FUN_0800322c",
            "FUN_080032bc",
            "FUN_08003306",
            "FUN_08003346",
            "FUN_08003350",
            "FUN_08003366",
            "FUN_08003370",
            "FUN_08003376",
            "FUN_080033a8",
            "FUN_0800344a",
            "FUN_080036ac",
            "FUN_08003748",
            "FUN_08003760",
            "FUN_080038dc",
            "FUN_080038e4",
            "FUN_08003a1c",
            "FUN_08003f0c",
            "FUN_08003f30",
            "FUN_08003f94",
            "FUN_08003fb0",
            "FUN_08003fd8",
            "FUN_08004004",
            "FUN_08004024",
            "FUN_08004046",
            "FUN_08004050",
            "FUN_080040e8",
            "FUN_080042d4",
            "FUN_080042e2",
            "FUN_0800430c",
            "FUN_08004396",
            "FUN_080043a2",
            "FUN_0800457c",
            "FUN_0800459c",
            "FUN_08004728",
            "FUN_080047f4",
            "FUN_080048c8",
            "FUN_08004954",
            "FUN_080049e0",
            "FUN_08004a24",
            "FUN_08004a76",
            "FUN_08004b82",
            "FUN_08004ccc",
            "FUN_08004d6c",
            "FUN_08004e3c",
            "FUN_0800542a",
            "FUN_08005430",
            "FUN_08005434",
            "FUN_08005840",
            "FUN_08005a1c",
            "FUN_08005a68",
            "FUN_08005cec",
            "FUN_08005d48",
            "FUN_08005dac",
            "FUN_08005fe8",
            "FUN_080060c4",
            "FUN_08006262",
            "FUN_08006420",
            "FUN_080064b0",
            "FUN_080064cc",
            "FUN_0800688e",
            "FUN_080068d6",
            "FUN_08006b1c",
            "FUN_08006b28",
            "FUN_08006b3e",
            "FUN_08006b5c",
            "FUN_08006b7c",
            "FUN_08006bb8",
            "FUN_08006d24",
            "FUN_08007306",
            "FUN_08007332",
            "FUN_0800735a",
            "FUN_0800738a",
            "FUN_080073ae",
            "FUN_080073c0",
            "FUN_080073e8",
            "FUN_080073ec",
            "FUN_08007438",
            "FUN_080074e0",
            "FUN_08007718",
            "FUN_08007744",
            "FUN_0800774a",
            "FUN_08007750",
            "FUN_08007ede",
            "FUN_08007f78",
            "FUN_080086e8",
            "FUN_08008804",
            "FUN_08008840",
            "FUN_08008846",
            "FUN_08008850",
            "FUN_08008854",
            "FUN_08008858",
            "FUN_08008868",
            "FUN_0800886c",
            "FUN_0800887c",
            "FUN_08008afa",
            "FUN_08008c20",
            "FUN_08008d00",
            "FUN_08008d18",
            "FUN_08008df8",
            "FUN_08008ef4",
            "FUN_08008f3c",
            "FUN_08009108",
            "FUN_08009148",
            "FUN_080091b0",
            "FUN_080091c6",
            "FUN_080091d8",
            "FUN_080095a8",
            "FUN_08009938",
            "FUN_08009954",
            "FUN_080099a4",
            "FUN_08009f2c",
            "thunk_FUN_0800887c",
            "FUN_0800a154"
        ],
        [
            "FUN_0800018c",
            "FUN_080004d4",
            "FUN_08001c08",
            "FUN_080026b0",
            "FUN_08002948",
            "FUN_08002ce0",
            "FUN_08002ddc",
            "FUN_08003106",
            "FUN_0800319e",
            "FUN_080031ce",
            "FUN_0800325a",
            "FUN_080033cc",
            "FUN_080036d8",
            "FUN_08003a20",
            "FUN_08003b8c",
            "FUN_08005460",
            "FUN_08005a28",
            "FUN_08005a48",
            "FUN_08005aa4",
            "FUN_08005cb4",
            "FUN_08006128",
            "FUN_08006186",
            "FUN_08006280",
            "FUN_080062f4",
            "FUN_08006390",
            "FUN_080063c0",
            "FUN_0800643c",
            "FUN_08006460",
            "FUN_080066e8",
            "FUN_08006ca8",
            "FUN_08007110",
            "FUN_0800723c",
            "FUN_08007246",
            "FUN_08007258",
            "FUN_080072d8",
            "FUN_080072f0",
            "FUN_08007320",
            "FUN_0800734a",
            "FUN_08007376",
            "FUN_08007708",
            "FUN_08007710",
            "FUN_0800771c",
            "FUN_08007736",
            "FUN_08007e74",
            "FUN_08007f0e",
            "FUN_08007f7c",
            "FUN_08007f8e",
            "FUN_08007fa0",
            "FUN_08007ff0",
            "FUN_08008020",
            "FUN_080085b8",
            "FUN_080085dc",
            "FUN_08008694",
            "FUN_0800870c",
            "FUN_08008730",
            "FUN_08008e14",
            "FUN_080090c2",
            "FUN_080091a0",
            "FUN_08009698",
            "FUN_08009918",
            "FUN_0800997e",
            "FUN_08009cdc",
            "FUN_08009fe8",
            "FUN_0800a0ec",
            "FUN_0800a110",
            "FUN_0800a130",
            "FUN_0800a168"
        ],
        [
            "FUN_08002a58",
            "FUN_08002c1e",
            "FUN_08002dbc",
            "FUN_08002df6",
            "FUN_08002efe",
            "FUN_08002f0a",
            "FUN_08003158",
            "FUN_080032a2",
            "FUN_08003474",
            "FUN_08003724",
            "FUN_08003aa0",
            "FUN_08003bd8",
            "FUN_08003ce8",
            "FUN_08003de4",
            "FUN_080045c0",
            "FUN_08004ac2",
            "FUN_08004aec",
            "FUN_08004f3c",
            "FUN_080058ac",
            "FUN_080058d2",
            "FUN_08005bb8",
            "FUN_08005df4",
            "FUN_08005e2e",
            "FUN_08005e6e",
            "FUN_08006060",
            "FUN_08006538",
            "FUN_080067ac",
            "FUN_08006932",
            "FUN_0800694c",
            "FUN_08006c60",
            "FUN_08006c7c",
            "FUN_08006e68",
            "FUN_08008600",
            "FUN_0800863c",
            "FUN_08008a24",
            "FUN_08008a6c",
            "FUN_08008abc",
            "FUN_08008d30",
            "FUN_08008f78",
            "FUN_08009270",
            "FUN_08009b5c",
            "FUN_08009e64",
            "FUN_0800a020",
            "FUN_0800a07a"
        ],
        [
            "FUN_08000be8",
            "FUN_08002ac0",
            "FUN_08002e26",
            "FUN_08002ed2",
            "FUN_08002ef2",
            "FUN_08002f14",
            "FUN_08002fca",
            "FUN_080035b8",
            "FUN_0800376c",
            "FUN_08003e20",
            "FUN_08005084",
            "FUN_080052f0",
            "FUN_08006092",
            "FUN_0800674e",
            "FUN_080069ec",
            "FUN_080071e4",
            "FUN_08008b66",
            "FUN_08008d8c",
            "FUN_08009190",
            "FUN_08009908",
            "FUN_08009d24",
            "FUN_08009eac"
        ],
        [
            "FUN_08000ef8",
            "FUN_080027f0",
            "FUN_0800288c",
            "FUN_08002acc",
            "FUN_08002e44",
            "FUN_08005188",
            "FUN_08006d80",
            "FUN_080072fa",
            "FUN_08008990"
        ],
        [
            "FUN_08001bf8",
            "FUN_08002b68",
            "FUN_08003002",
            "FUN_080036a2",
            "FUN_08008880"
        ],
        [
            "FUN_08000488",
            "FUN_08002c00",
            "FUN_08008f0e"
        ],
        [
            "FUN_08002c14"
        ],
        [
            "FUN_08001c18"
        ],
        [
            "FUN_080022f8"
        ],
        [
            "FUN_0800a18c"
        ],
        [
            "FUN_08009084"
        ],
        [
            "FUN_08009094"
        ],
        [
            "FUN_080042f0"
        ],
        [
            "FUN_08009a80",
            "FUN_08009c7c",
            "FUN_08009db0"
        ],
        [
            "FUN_08009d50"
        ],
        [
            "FUN_0800932c"
        ],
        [
            "FUN_08009358"
        ],
        [
            "FUN_0800937c"
        ],
        [
            "FUN_08009124",
            "FUN_080098d8"
        ],
        [
            "FUN_08007544",
            "FUN_08007594",
            "FUN_080077b0",
            "FUN_08008078",
            "FUN_080090cc"
        ],
        [
            "FUN_08002968",
            "FUN_080075dc",
            "FUN_080076e0",
            "FUN_080084b0",
            "FUN_08008c44"
        ],
        [
            "FUN_08002578",
            "FUN_08002a1c",
            "FUN_08003048",
            "FUN_08007118",
            "FUN_08007648",
            "FUN_08008500"
        ],
        [
            "FUN_0800242c",
            "FUN_08002644",
            "FUN_08002a26",
            "FUN_0800885c",
            "FUN_080088e0"
        ],
        [
            "FUN_08000214",
            "FUN_0800021a",
            "FUN_08000588",
            "FUN_080025ac",
            "FUN_0800a042"
        ],
        [
            "FUN_08002634"
        ],
        [
            "FUN_08000500"
        ],
        [
            "FUN_080005f8"
        ],
        [
            "FUN_08000a64",
            "FUN_08000aec"
        ],
        [
            "FUN_08001b48",
            "FUN_08001cd0"
        ],
        [
            "FUN_08008f1c"
        ]
    ],
    "locked_functions": [],
    "used_tokens": 1164626
}